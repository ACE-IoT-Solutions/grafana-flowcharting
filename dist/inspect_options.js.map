{"version":3,"sources":["../src/inspect_options.js"],"names":["InspectOptionsCtrl","$scope","editor","panelCtrl","ctrl","panel","mx","cells","colors","colorModes","text","value","STYLE_STROKECOLOR","STYLE_FILLCOLOR","STYLE_FONTCOLOR","colorMode","fontSizes","render","styleIndex","colorIndex","newColor","inspectOptionsTab","$q","uiSegmentSrv","restrict","scope","templateUrl","plugin","id","controller"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;;;IAIaA,kB;;;AAET;AACA,8BAAYC,MAAZ,EAAoB;AAAA;;AAChBA,IAAAA,MAAM,CAACC,MAAP,GAAgB,IAAhB;AACA,SAAKC,SAAL,GAAiBF,MAAM,CAACG,IAAxB;AACA,SAAKC,KAAL,GAAa,KAAKF,SAAL,CAAeE,KAA5B;AACA,SAAKC,EAAL,GAAU,KAAKH,SAAL,CAAeG,EAAzB;AACA,SAAKC,KAAL,GAAY,KAAKD,EAAL,CAAQC,KAApB;AACA,SAAKC,MAAL,GAAc,CAAC,wBAAD,EAA2B,0BAA3B,EAAuD,yBAAvD,CAAd;AACA,SAAKC,UAAL,GAAkB,CAAC;AACXC,MAAAA,IAAI,EAAE,UADK;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAD,EAId;AACID,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,KAAK,EAAE,KAAKL,EAAL,CAAQM;AAFnB,KAJc,EAQd;AACIF,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE,KAAKL,EAAL,CAAQO;AAFnB,KARc,EAYd;AACIH,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE,KAAKL,EAAL,CAAQQ;AAFnB,KAZc,CAAlB;AAiBA,SAAKC,SAAL,GAAiB,KAAKT,EAAL,CAAQO,eAAzB;AACAZ,IAAAA,MAAM,CAACK,EAAP,GAAY,KAAKH,SAAL,CAAeG,EAA3B;AACA,SAAKU,SAAL,GAAiB,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,EAA+B,MAA/B,EAAuC,MAAvC,EAA+C,MAA/C,EAAuD,MAAvD,EAA+D,MAA/D,EAAuE,MAAvE,EAA+E,MAA/E,EAAuF,MAAvF,CAAjB;AACH;;;;6BAEQ;AACL,WAAKb,SAAL,CAAec,MAAf;AACH;;;kCAEaC,U,EAAYC,U,EAAY;AAAA;;AAClC,aAAO,UAAAC,QAAQ,EAAI;AACf,QAAA,KAAI,CAACZ,MAAL,CAAYW,UAAZ,IAA0BC,QAA1B;AACH,OAFD;AAGH;;;;;AAIL;;;;;AACO,SAASC,iBAAT,CAA2BC,EAA3B,EAA+BC,YAA/B,EAA6C;AAChD;;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,GADP;AAEHC,IAAAA,KAAK,EAAE,IAFJ;AAGHC,IAAAA,WAAW,EAAE,oBAAoBC,eAAOC,EAA3B,GAAgC,gCAH1C;AAIHC,IAAAA,UAAU,EAAE7B;AAJT,GAAP;AAMH","sourcesContent":["import _ from 'lodash';\nimport {\n    plugin\n} from './plugin';\n\nexport class InspectOptionsCtrl {\n\n    /** @ngInject */\n    constructor($scope) {\n        $scope.editor = this;\n        this.panelCtrl = $scope.ctrl;\n        this.panel = this.panelCtrl.panel;\n        this.mx = this.panelCtrl.mx;\n        this.cells= this.mx.cells;\n        this.colors = ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'];\n        this.colorModes = [{\n                text: 'Disabled',\n                value: null\n            },\n            {\n                text: 'Stroke',\n                value: this.mx.STYLE_STROKECOLOR\n            },\n            {\n                text: 'Fill',\n                value: this.mx.STYLE_FILLCOLOR\n            },\n            {\n                text: 'Text',\n                value: this.mx.STYLE_FONTCOLOR\n            },\n        ];\n        this.colorMode = this.mx.STYLE_FILLCOLOR;\n        $scope.mx = this.panelCtrl.mx;\n        this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    }\n\n    render() {\n        this.panelCtrl.render();\n    }\n\n    onColorChange(styleIndex, colorIndex) {\n        return newColor => {\n            this.colors[colorIndex] = newColor;\n        };\n    }\n\n}\n\n/** @ngInject */\nexport function inspectOptionsTab($q, uiSegmentSrv) {\n    'use strict';\n    return {\n        restrict: 'E',\n        scope: true,\n        templateUrl: 'public/plugins/' + plugin.id + '/partials/inspect_options.html',\n        controller: InspectOptionsCtrl,\n    };\n}"],"file":"inspect_options.js"}