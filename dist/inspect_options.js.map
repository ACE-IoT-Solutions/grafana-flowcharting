{"version":3,"sources":["../src/inspect_options.js"],"names":["InspectOptionsCtrl","$scope","editor","ctrl","panel","colors","style","text","value","colorMode","logDisplayOption","logDisplay","logLevelOption","logLevel","flowchartHandler","panelCtrl","render","styleIndex","colorIndex","newColor","window","state","newcellId","undefined","cellId","getFlowchart","getStateHandler","edited","previousId","edit","elt","document","getElementById","setTimeout","focus","draw","refresh","flowchart","states","getStates","forEach","renameId","applyModel","inspectOptionsTab","$q","uiSegmentSrv","restrict","scope","templateUrl","plugin","id","controller"],"mappings":"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","sourcesContent":["import { plugin } from './plugin';\n\nexport class InspectOptionsCtrl {\n  /** @ngInject */\n  constructor($scope) {\n    $scope.editor = this;\n    this.$scope = $scope;\n    this.ctrl = $scope.ctrl;\n    this.panel = this.ctrl.panel;\n    this.colors = ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'];\n    this.style = [\n      { text: 'Disabled', value: null },\n      { text: 'Stroke', value: 'strokeColor' },\n      { text: 'Fill', value: 'fillColor' },\n      { text: 'Text', value: 'fontColor' },\n    ];\n    this.colorMode = 'fillColor';\n    this.logDisplayOption = [{ text: 'True', value: true }, { text: 'False', value: false }];\n    this.logDisplay = logDisplay;\n    this.logLevelOption = [{ text: 'DEBUG', value: 0 }, { text: 'INFO', value: 1 }, { text: 'WARNING', value: 2 }, { text: 'ERROR', value: 3 }];\n    this.logLevel = logLevel;\n    this.flowchartHandler = this.ctrl.flowchartHandler;\n    $scope.flowchartHandler = this.ctrl.flowchartHandler;\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  onColorChange(styleIndex, colorIndex) {\n    return (newColor) => {\n      this.colors[colorIndex] = newColor;\n    };\n  }\n\n  onDebug() {\n    window.logLevel = this.logLevel;\n    window.logDisplay = this.logDisplay;\n  }\n\n  onChangeId(state) {\n    if (state.newcellId !== undefined && state.cellId !== state.newcellId) {\n      this.flowchartHandler.getFlowchart(0).getStateHandler().edited = true;\n      if (state.previousId === undefined ) state.previousId = state.cellId;\n      state.cellId = state.newcellId;\n      state.edited = true;\n    }\n    state.edit = false;\n  }\n\n  onEdit(state) {\n    state.edit = true;\n    state.newcellId = state.cellId;\n    let elt = document.getElementById(state.cellId);\n    setTimeout(function() { elt.focus() }, 100);\n  }\n\n  reset() {\n    this.flowchartHandler.draw();\n    this.flowchartHandler.refresh();\n    // this.$scope.$apply();\n  }\n\n  apply() {\n    const flowchart = this.flowchartHandler.getFlowchart(0);\n    const states = flowchart.getStateHandler().getStates();\n    states.forEach((state) => {\n      if (state.edited) flowchart.renameId(state.previousId, state.cellId);\n    });\n    flowchart.applyModel();\n  }\n}\n\n/** @ngInject */\nexport function inspectOptionsTab($q, uiSegmentSrv) {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: `public/plugins/${plugin.id}/partials/inspect_options.html`,\n    controller: InspectOptionsCtrl\n  };\n}\n"],"file":"inspect_options.js"}