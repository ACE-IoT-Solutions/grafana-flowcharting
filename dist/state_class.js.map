{"version":3,"sources":["../src/state_class.js"],"names":["State","mxcell","xgraph","u","log","cellId","id","matched","matchedShape","matchedText","matchedLink","globalLevel","styles","level","fillColor","strokeColor","fontColor","currentColors","originalColors","originalValue","getValueCell","currentValue","originalLink","getAttribute","currentLink","forEach","style","color","getStyleCell","rule","serie","matchSerie","shapeMaps","getShapeMaps","textMaps","getTextMaps","linkMaps","value","getValueForSerie","FormattedValue","getFormattedValue","getThresholdLevel","cellProp","getCellProp","data","shapeProp","shape","isHidden","match","setLevelStyle","toColorize","setColorStyle","getColorForValue","textProp","text","setText","getReplaceText","linkProp","link","unsetLevel","unsetColor","unsetText","unsetLink","prop","unsetColorStyle","unsetLevelStyle","url","isVertex","isEdge","setStyleCell","getCurrentColorStyle","setValueCell","getCurrentText","restoreCell","unsetState","setAttribute","getCurrentLink"],"mappings":"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","sourcesContent":["export default class State {\n  constructor(mxcell, xgraph) {\n    u.log(1,\"State.constructor()\");\n    this.mxcell = mxcell;\n    this.cellId = mxcell.id;\n    this.xgraph = xgraph;\n    this.matched = false;\n    this.matchedShape = false;\n    this.matchedText = false;\n    this.matchedLink = false;\n    this.globalLevel = -1;\n    this.styles = [\"fillColor\", \"strokeColor\", \"fontColor\"]\n    this.level = {\n      fillColor: -1,\n      strokeColor: -1,\n      fontColor: -1\n    }\n    this.currentColors = {}\n    this.originalColors = {}\n    this.originalValue = this.xgraph.getValueCell(mxcell);\n    this.currentValue = this.originalValue;\n    this.originalLink = mxcell.getAttribute(\"link\");\n    this.currentLink = mxcell.getAttribute(\"link\");\n\n    this.styles.forEach(style => {\n      let color = this.xgraph.getStyleCell(mxcell, style);\n      this.currentColors[style] = color;\n      this.originalColors[style] = color;\n    });\n\n  }\n\n  setState(rule, serie) {\n    u.log(1,\"state_class.setState()\");\n    u.log(0,\"state_class.setState() Rule\",rule);\n    u.log(0,\"state_class.setState() Serie\",serie);\n    if (rule.matchSerie(serie)) {\n      let shapeMaps = rule.getShapeMaps();\n      let textMaps = rule.getTextMaps();\n      let linkMaps = rule.getTextMaps();\n      let value = rule.getValueForSerie(serie);\n      let FormattedValue = rule.getFormattedValue(value);\n      let level = rule.getThresholdLevel(value);\n      //SHAPE\n      let cellProp = this.getCellProp(rule.data.shapeProp);\n      shapeMaps.forEach(shape => {\n        if (!shape.isHidden() && shape.match(cellProp)) {\n          this.matchedShape = true;\n          this.matched = true;\n          if (this.globalLevel <= level) {\n            this.setLevelStyle(rule.data.style, level);\n            if (rule.toColorize()) {\n              this.setColorStyle(rule.data.style, rule.getColorForValue(value));\n            }\n          }\n        }\n      });\n      //TEXT\n      cellProp = this.getCellProp(rule.data.textProp);\n      textMaps.forEach(text => {\n        if (!text.isHidden() && text.match(cellProp)) {\n          this.matchedText = true;\n          this.matched = true;\n          if (this.globalLevel <= level) {\n            this.setText(rule.getReplaceText(this.originalValue, FormattedValue))\n          }\n        }\n      });\n      // LINK\n      cellProp = this.getCellProp(rule.data.linkProp);\n      linkMaps.forEach(link => {\n        if (!link.isHidden() && link.match(cellProp)) {\n          this.matchedLink = true;\n          this.matched = true;\n\n        }\n      });\n    }\n  }\n\n  unsetState() {\n    u.log(1,\"State.unsetState()\");\n    this.unsetLevel();\n    this.unsetColor();\n    this.unsetText();\n    this.unsetLink();\n    this.matched = false;\n    this.matchedShape = false;\n    this.matchedText = false;\n    this.matchedLink = false;\n  }\n\n  getCellProp(prop) {\n    if (prop === \"id\") return this.cellId;\n    if (prop === \"value\") return this.originalValue;\n  }\n\n  setColorStyle(style, color) {\n    u.log(1,\"State.setColorStyle()\");\n    this.currentColors[style] = color;\n  }\n\n  unsetColorStyle(style) {\n    this.currentColors[style] = this.originalColors[style];\n    this.currentColors[style]\n  }\n\n  unsetColor() {\n    this.styles.forEach(style => {\n      this.unsetColorStyle(style);\n    });\n  }\n\n  getCurrentColorStyle(style) {\n    return this.currentColors[style];\n  }\n\n  unsetLevelStyle(style) {\n    this.level[style] = -1;\n  }\n\n  unsetLevel() {\n    this.styles.forEach(style => {\n      this.unsetLevelStyle(style);\n    });\n    this.globalLevel = -1;\n  }\n\n  setLevelStyle(style, level) {\n    u.log(1,\"State.setLevelStyle()\");\n    this.level[style] = level;\n    if (this.globalLevel < level) this.globalLevel = level;\n  }\n\n  getLevelStyle(style) {\n    return this.level[style];\n  }\n\n  getLevel() {\n    return this.globalLevel;\n  }\n\n  setText(text) {\n    this.currentValue = text;\n    // this.cell.setValue(text);\n  }\n\n  getCurrentText() {\n    return this.currentValue;\n  }\n\n  unsetText() {\n    this.currentValue = this.originalValue;\n  }\n\n  setLink(url) {\n    this.currentLink = url;\n  }\n\n  unsetLink() {\n    this.currentLink = this.originalLink;\n  }\n\n  getCurrentLink() {\n    return this.currentLink;\n  }\n\n  isGradient() {\n    //TODO:\n  }\n\n  isShape() {\n    return this.mxcell.isVertex();\n  }\n\n  isConnector() {\n    return this.mxcell.isEdge();\n  }\n\n  applyState() {\n    u.log(1,\"State.applyState()\");\n    if (this.matched) {\n      if (this.matchedShape) {\n        this.styles.forEach(style => {\n          this.xgraph.setStyleCell(this.mxcell, style, this.getCurrentColorStyle(style))\n        });\n      }\n      if (this.matchedText) {\n        this.xgraph.setValueCell(this.mxcell, this.getCurrentText());\n      }\n      //TODO:LINK\n    }\n    else this.restoreCell();\n  }\n\n  restoreCell() {\n    this.unsetState();\n    this.styles.forEach(style => {\n      this.xgraph.setStyleCell(this.mxcell, style, this.getCurrentColorStyle(style));\n    });\n    this.xgraph.setValueCell(this.mxcell,this.getCurrentText());\n    this.mxcell.setAttribute(\"link\", this.getCurrentLink());\n  }\n\n  prepare() {\n    this.unsetState()\n  }\n}\n"],"file":"state_class.js"}