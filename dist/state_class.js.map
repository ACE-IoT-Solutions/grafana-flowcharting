{"version":3,"sources":["../src/state_class.js"],"names":["State","mxcell","xgraph","u","log","cellId","id","matched","matchedShape","matchedText","matchedLink","globalLevel","styles","level","fillColor","strokeColor","fontColor","currentColors","originalColors","originalValue","getValueCell","currentValue","originalLink","getAttribute","currentLink","forEach","style","color","getStyleCell","rule","serie","matchSerie","shapeMaps","getShapeMaps","textMaps","getTextMaps","linkMaps","getLinkMaps","value","getValueForSerie","FormattedValue","getFormattedValue","getThresholdLevel","cellProp","getCellProp","data","shapeProp","shape","isHidden","match","setLevelStyle","toColorize","setColorStyle","getColorForValue","textProp","text","setText","getReplaceText","linkProp","link","unsetLevel","unsetColor","unsetText","unsetLink","prop","unsetColorStyle","unsetLevelStyle","getLevel","url","isVertex","isEdge","setStyleCell","getCurrentColorStyle","setValueCell","getCurrentText","restoreCell","unsetState","setAttribute","getCurrentLink"],"mappings":"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","sourcesContent":["export default class State {\r\n  constructor(mxcell, xgraph) {\r\n    u.log(1, 'State.constructor()');\r\n    this.mxcell = mxcell;\r\n    this.cellId = mxcell.id;\r\n    this.xgraph = xgraph;\r\n    this.matched = false;\r\n    this.matchedShape = false;\r\n    this.matchedText = false;\r\n    this.matchedLink = false;\r\n    this.globalLevel = -1;\r\n    this.styles = ['fillColor', 'strokeColor', 'fontColor'];\r\n    this.level = {\r\n      fillColor: -1,\r\n      strokeColor: -1,\r\n      fontColor: -1\r\n    };\r\n    this.currentColors = {};\r\n    this.originalColors = {};\r\n    this.originalValue = this.xgraph.getValueCell(mxcell);\r\n    this.currentValue = this.originalValue;\r\n    this.originalLink = mxcell.getAttribute('link');\r\n    this.currentLink = mxcell.getAttribute('link');\r\n\r\n    this.styles.forEach(style => {\r\n      const color = this.xgraph.getStyleCell(mxcell, style);\r\n      this.currentColors[style] = color;\r\n      this.originalColors[style] = color;\r\n    });\r\n  }\r\n\r\n  setState(rule, serie) {\r\n    u.log(1, 'state_class.setState()');\r\n    u.log(0, 'state_class.setState() Rule', rule);\r\n    u.log(0, 'state_class.setState() Serie', serie);\r\n    if (rule.matchSerie(serie)) {\r\n      const shapeMaps = rule.getShapeMaps();\r\n      const textMaps = rule.getTextMaps();\r\n      const linkMaps = rule.getLinkMaps();\r\n      const value = rule.getValueForSerie(serie);\r\n      const FormattedValue = rule.getFormattedValue(value);\r\n      const level = rule.getThresholdLevel(value);\r\n      // SHAPE\r\n      let cellProp = this.getCellProp(rule.data.shapeProp);\r\n      shapeMaps.forEach(shape => {\r\n        if (!shape.isHidden() && shape.match(cellProp)) {\r\n          this.matchedShape = true;\r\n          this.matched = true;\r\n          if (this.globalLevel <= level) {\r\n            this.setLevelStyle(rule.data.style, level);\r\n            if (rule.toColorize(value)) {\r\n              this.setColorStyle(rule.data.style, rule.getColorForValue(value));\r\n            }\r\n          }\r\n        }\r\n      });\r\n      // TEXT\r\n      cellProp = this.getCellProp(rule.data.textProp);\r\n      textMaps.forEach(text => {\r\n        if (!text.isHidden() && text.match(cellProp)) {\r\n          this.matchedText = true;\r\n          this.matched = true;\r\n          if (this.globalLevel <= level) {\r\n            this.setText(rule.getReplaceText(this.originalValue, FormattedValue));\r\n          }\r\n        }\r\n      });\r\n      // LINK\r\n      cellProp = this.getCellProp(rule.data.linkProp);\r\n      linkMaps.forEach(link => {\r\n        if (!link.isHidden() && link.match(cellProp)) {\r\n          this.matchedLink = true;\r\n          this.matched = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  unsetState() {\r\n    u.log(1, 'State.unsetState()');\r\n    this.unsetLevel();\r\n    this.unsetColor();\r\n    this.unsetText();\r\n    this.unsetLink();\r\n    this.matched = false;\r\n    this.matchedShape = false;\r\n    this.matchedText = false;\r\n    this.matchedLink = false;\r\n  }\r\n\r\n  getCellProp(prop) {\r\n    if (prop === 'id') return this.cellId;\r\n    if (prop === 'value') return this.originalValue;\r\n    return '/!\\\\ Not found';\r\n  }\r\n\r\n  setColorStyle(style, color) {\r\n    u.log(1, 'State.setColorStyle()');\r\n    this.currentColors[style] = color;\r\n  }\r\n\r\n  unsetColorStyle(style) {\r\n    this.currentColors[style] = this.originalColors[style];\r\n  }\r\n\r\n  unsetColor() {\r\n    this.styles.forEach(style => {\r\n      this.unsetColorStyle(style);\r\n    });\r\n  }\r\n\r\n  getCurrentColorStyle(style) {\r\n    return this.currentColors[style];\r\n  }\r\n\r\n  getOriginalColorStyle(style) {\r\n    return this.originalColors[style];\r\n  }\r\n\r\n  unsetLevelStyle(style) {\r\n    this.level[style] = -1;\r\n  }\r\n\r\n  unsetLevel() {\r\n    this.styles.forEach(style => {\r\n      this.unsetLevelStyle(style);\r\n    });\r\n    this.globalLevel = -1;\r\n  }\r\n\r\n  setLevelStyle(style, level) {\r\n    u.log(1, 'State.setLevelStyle()');\r\n    this.level[style] = level;\r\n    if (this.globalLevel < level) this.globalLevel = level;\r\n  }\r\n\r\n  getLevelStyle(style) {\r\n    return this.level[style];\r\n  }\r\n\r\n  getLevel() {\r\n    return this.globalLevel;\r\n  }\r\n\r\n  getTextLevel() {\r\n    const level = this.getLevel();\r\n    switch (level) {\r\n      case -1:\r\n        return 'NO DATA';\r\n      case 0:\r\n        return 'OK';\r\n      case 1:\r\n        return 'WARN';\r\n      case 2:\r\n        return 'ERROR';\r\n      default:\r\n        return 'NULL';\r\n    }\r\n  }\r\n\r\n  setText(text) {\r\n    this.currentValue = text;\r\n    // this.cell.setValue(text);\r\n  }\r\n\r\n  getCurrentText() {\r\n    return this.currentValue;\r\n  }\r\n\r\n  unsetText() {\r\n    this.currentValue = this.originalValue;\r\n  }\r\n\r\n  setLink(url) {\r\n    this.currentLink = url;\r\n  }\r\n\r\n  unsetLink() {\r\n    this.currentLink = this.originalLink;\r\n  }\r\n\r\n  getCurrentLink() {\r\n    return this.currentLink;\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  isGradient() {\r\n    // TODO:\r\n  }\r\n\r\n  isShape() {\r\n    return this.mxcell.isVertex();\r\n  }\r\n\r\n  isConnector() {\r\n    return this.mxcell.isEdge();\r\n  }\r\n\r\n  applyState() {\r\n    u.log(1, 'State.applyState()');\r\n    if (this.matched) {\r\n      if (this.matchedShape) {\r\n        this.styles.forEach(style => {\r\n          this.xgraph.setStyleCell(this.mxcell, style, this.getCurrentColorStyle(style));\r\n        });\r\n      }\r\n      if (this.matchedText) {\r\n        this.xgraph.setValueCell(this.mxcell, this.getCurrentText());\r\n      }\r\n      // TODO:LINK\r\n    } else this.restoreCell();\r\n  }\r\n\r\n  restoreCell() {\r\n    this.unsetState();\r\n    this.styles.forEach(style => {\r\n      this.xgraph.setStyleCell(this.mxcell, style, this.getCurrentColorStyle(style));\r\n    });\r\n    this.xgraph.setValueCell(this.mxcell, this.getCurrentText());\r\n    this.mxcell.setAttribute('link', this.getCurrentLink());\r\n  }\r\n\r\n  prepare() {\r\n    this.unsetState();\r\n  }\r\n}\r\n"],"file":"state_class.js"}