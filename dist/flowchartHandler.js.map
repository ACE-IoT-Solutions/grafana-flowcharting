{"version":3,"sources":["../src/flowchartHandler.js"],"names":["FlowchartHandler","$scope","elem","ctrl","data","u","log","$elem","find","flowcharts","changeSourceFlag","changeOptionFlag","changeDataFlag","changedRuleFlag","defaultXml","xgraph","undefined","$container","onMapping","active","object","id","import","events","on","render","obj","length","forEach","map","container","createContainer","newData","fc","Flowchart","name","xml","push","index","Array","isArray","$","uniqueID","html","flowchart","draw","changeRuleFlag","setOptions","setStates","applyStates","width","height","refresh","rules","rulesHandler","getRules","series","setScale","scale","setCenter","center","setGrid","grid","setTooltip","tooltip","setLock","lock","setZoom","zoom","redraw","objToMap","getFlowchart","getId","setMap","unsetMap","urlEditor","editorWindow","window","open","addEventListener","event","origin","source","postMessage","sourceChanged","$apply","close"],"mappings":"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","sourcesContent":["/* eslint-disable prefer-destructuring */\nimport Flowchart from './flowchart_class';\n\nexport default class FlowchartHandler {\n  /** @ngInject */\n  constructor($scope, elem, ctrl, data) {\n    u.log(1, 'FlowchartHandler.constructor()');\n    u.log(0, 'FlowchartHandler.constructor() data', data);\n    this.$scope = $scope || null;\n    this.$elem = elem.find('.flowchart-panel__chart');\n    this.ctrl = ctrl;\n    this.flowcharts = [];\n    this.data = data;\n    this.changeSourceFlag = true;\n    this.changeOptionFlag = true;\n    this.changeDataFlag = true;\n    this.changedRuleFlag = true;\n    this.defaultXml = '1VxZm5u40v4153LmYbXxJbvBrAaD4eZ72My+2Oz8+k9ydyeddCaTmZOZM5Ok0yAhqeqtt0olIfs/OFsv4iPoMrWNk+o/GBIv/8G5/2DYniTA/7BgfSkgKeSlIH3k8UsR+rnAyrfktfDtsTGPk/6LB4e2rYa8+7IwapsmiYYvyoLHo52/fOzWVl+O2gVp8qHAioLqY6mbx0P2Ukph+8/lxyRPs7eR0d3hpaYO3h5+1aTPgrid3xXh/H9w9tG2w8tVvbBJBbF7w+WlnfAbtZ8EeyTN8CMNyFcxhvVNtyQGqr7eto8ha9O2CSr+cynzaMcmTmAHCLj7/IzSth0oREFhkQzD+mq3YBxaUJQNdfVaC2R7rNfX9s8bD978Sr7dcsv7Sm59veuHR1t+Qpz8VMK2Vft4So9TCPwLa96AhQN+ROUVqL4dH9Gr4vgrkYJHmrw+9UpTCMm7Zq9IiklbJ0A88MAjqYIhn75kR/BKsvTTc5/tAC5eTfFts1D/W7N8toT3vu67ZvmmET4a7A+bZRfSrn0M7+4lpD2bcld8RX5B/0nGOvxPjYX+GR/6W411+AfZavdPcizkn2cr9KOt8P+Vrd5m+3/T5PS3Gov83xnr0icPPSxgcoUhVRAm1UtToWrnKAseQ96kL51WeVO+1GXDAPMzGvaJCWk+ZGP4a9TW4CaoUqD9CosfwS1ogl9uHzr6RIv3Kr1S5h1FhmQZvrTol5Zp2gby5JZX1VdFQZWnDbiNgCgJKGemBAwPsj76taLO4/hJsjnLh8Tqgqd1ZpDifiDerW2GV4qByfz1/lVIHNynVdD3r88CCPLoXTshqPMK0grY65HmwWvxt6j1RB6wPE4eXynzUhNEZfoU7KvaTwREvkdAqH+yfJdHr7X4/tVX1zcbYS/38+f0GN29PpO9S43fVgJ/gHrg9h37vsvGr4hDfJc4EKjuh53zAzafVhtB+NYj8l3MPsW3V8wwcvcRM+wbmL0tlv47zD6E29fQMQXVmLyH7x1EAJoOXmbJEoCoCvDpkkcOBofu8lZqvBVhv+EpH1zz52T0xA+T9i8A+PsM/Okx8JvTwf679H6zXV4/F7efgpsChTXaPh9yaFEubIcByPObEQSY5Pb8840AOcA5lgn67mXRfcsXGBCZ55D0WynyVgKu42AA4Y1+ucWEfgJ6MgugB8YaRw3zV4YI3WWMNiQPjmck4tpJwWM8XklcXckpqqNJLehZZQ9bXEe5dMyGUCQ3vcn6wCUfhiW38fE86zk1gVa40kSbUh9Wf6UW3S5JBX95TsoZPHDPSMAhuVaYuSRmVeDGbfx2f/Q7/xqzIZ4epIJOVZbGtOePBOSVc43w7D41xHPlN+q7EolbYP+Vd5WPUS2UgeuMMct0PujXs963lViaivDzFLHMFouHWXG1KRQPq2FJhV/7pc7RM5ByAtebfzWhFLmyEbWEZ5m+0nCkZzvpqCEhTg8eduhDXDpIuVb7hbeoHA20OtR+o1VQK9WSJiP3ikTk93BsBVu6sHayqIxXzz13vksi7+tDsRp9V1jPuJz5YlWFjZkmImzT74KjXPkFkksYD5AqocyzUpS4xpWLzkppYvNQ3hHIQKictAA9CBU8r7IEqXIpqtsSaJcuL+34VbNLAsiXBi7Qs5be6wnk/BpjQ4y+RBwJrufet8ncc7WHj8tT7JKlwR5eyz9jZgC5PdxM/brqQ4BJWB9G/9O4WhY2fhahhy/6AbK3vls1wRHawMO+ZI4H9QeYI08dgT7DFzhz8+S/0+XdNZDl3MXiUhnlkiWus0ocTyn4a9k7O0S1U8SQI0d5CrALkJNEQ3EGtq1KwHbgBfFNzQHm3BPfTeMAS8F91JRQ3lHbvA3ItsJ6LSdwrQBPi34H+jhIjbOGbAq0KF/0ADbTtgj0ISFf6b0qhYdqm7kAD0hjrCpjEXqGtymFiqich4Fev+BXJApI8Htyr1IKPSO0VdA/vakc4FA+gz5NQuMiVHPVQV2JVedMUrWjHnjhoFmAQ1uEafA+Jza1UFegY6rYl1G3VaDfBVe4y6jaF0y1ecLbaPgckB3Ib6cpuF5VjkfAc73GEhjoGwXPpaDfWdt4TLfT/nnNlYCXcfbkrK0umjUDrkYEwIAAkWCWuGdUGED9/MScK4F8oG/bXDVOBtfz+qyzTVKzhV6xvVHdTFK3AZYcA+sBV4A9tohUi3Pxeo+om4SA8YA+/PN5gC2usAjA5wL6SRc1pyEmM8AK+BQP+pVG4D+ozvHAlgioJxDNljC18HpVVGGfmFbQOJDjid+ntpvUg7oF8AGRWARgTs9A903N589j1UBniCWXIiAeoU8s32TkpBRcA66UALf0ibFuXwjVBuXvx/hUDjCBsnKXVSskDGBQfCXbmwyraj2xeMqmWl+Vv+/vFUOAEbCL0AN+Q3lI0D/QHcouAV0koIu0ae48AHuTOldu2nYBuJlAFhpgf9k8mwbc4TfAGWhDXOcioK8J7fu0swLqNYgJlJtFAA8kRLdNQhd5GPcWdeNRhYO+k4IYmCKv3Jil57MeCm0OeL0AXwFcozHVnTHoN2BGAn4zowBvYEuPDDkajj+rG8CI83+Pe6C/CMqM6Syspzdodw37HZnAGFAflQOyFB4eciBGcMCHgGxANyCLCfgMxqpf+tE54Ecv4wOseES33nHfIoDvpesLnoCvwP/0J9eh/wE8wRgKZwIe00AffgufY/MIHEOFdsA+4QBm93l+6v/mE/bTJ4COJvBxc1FXqK8KuBYhnzl6QYE/gOsS+DHgx/quvJ6fvgBiAogDKvQF0B7EKRhXAF4SJwGbewSwMwL0BnU8BjBDvip/39/8gg9NaMCGmqjOL+2gfDzy9EvgD8BXZv2VpxrMVOxLCn30qz6BHPQCOfniEwCLgt+gT0Actef8nYI4Qb9rK4F6iLEE+blJz36+0Putzxk+B7iywlgIYsIHjMEY0M4Y9Gn1t2wAxtO2+L0N1m/bAI7/LRuAa+zP2MCEMRr4WgrmAPNdfJNe+fMSjwDvEBiPnnhB/oJ66dmHOgO9yA8x85t9fo6Z72R8jZk86Ed6iZmvbcFc8xYzNxBHvrLNuz6/5PG72B9tn2I/9BfQTgU+/CPxR+WAXxYm+Rp/FjhHqzWcN6FOPIzbw3P+t8EcvaVwPluAPjCWvOjLeTBmbxL3zjdf+Ax0l1ANe/IZ9gdkSpFXzMB8CMa1L68+fQH6qYT0bFcCOUsS2BvOyYsGY/KWvcYWGuafCIw/4Pesi0/ZZngNxu7VY/s5B4H5au19lfO9y/BAVgTWBRsBVyJ/bP34Xy0Z3/Y5iC+3OYgPK3YS+8YmB/Y3bnKQ/6hNDpKivtzkeFtbf7EGJz5itvtrNjm++zbpR7Y+hgf4vbWwvy82Pz6VG58L/87dD/KPUvkbG3Tf2gv5E3b4c3sh8zz/mje3alzgpsDLnsjvbnm8bDP+u/Y8vlR77Ko2iH+dwZqrTuI8+LV9pBANcN/Be3ANoKjbpgdXQzbWISyBPzvwn/QCWPh/VZu2vz63TwQU+Fi3/PKh6teuSf/7kPnjPHv1+P2P+Tux++tj5G9Rr3vAsbJk7H/N22fRFxF194+KqDty/+UchKIfEUa+4cn7vzGiHv7le8m7P7WX/JNQ/ytI/E0rUf++4PnVhjEMaRibO4x+npGTmLY0+KNZl4y/pOBKh7dcxtIq/F0/kAqDJYXDqA5/Dezi+ILdyz//vIaecb76Z8smQIhiuLokwq71w6tuPjyTmQKb3fuW9di2qAisFffPrOKZ2f6qpZynL8fDYbri+DCNo8KRIFIy9n4/btP0uA39bmqbzlgWGL/vXbdVxXHfP+7XxEeVppa2IjteY6+cEITa5zdxCh2uSWPXiFxESSNnX2bNDcU0I/b4JnLL4zw/pjSqOedEM4cLZUN9jXtZ8aZzJhoNjQNPz8fspDGcC9YMxRTfteG+4RsYfwI/RrKurELX5aUXsP1UzQKWqEdZvgRwEukmM1eAAjfTLcog3Nz0gt/DbQkAJ5kKNwF1hGKNHnB+uvmUx1p3RJqyFyDLw4nubwYe26lCLsABBPMY8aCGAXgDd2N6vSX9WgwWVQ+1aDa8cV3xyy0ukgw/c/22I7B+Wzlrt4ioQfd+dWhgKCKSsw1+wx6SpbxcqvHse+BmuBBQK3NwVeoI8GWyheDaLeQJ4tpoET5dQFlZYjRBnVK5UZrAlh8XERQW5V1Cob5YZtFINKaIqLV7T7t7Tbpn5JTcERI2b2C5hhpda6Q3laGcBTTcCyfixh0t6chtDAU92B4466Fq6fVWxDnr7sc0VMxQiuybBJlQJVydzcq1SwfqaO0O4XGnEXrKAo7zh1lA5grdcSAPZQTCME2TvQD0heSBH/JwtpajQJyg2sE9tRpg+l5nShBCmFyh/ezGSHEs76hqFBKzUXkAODMqqrPynhWfoXbIiR32BusRhF3eoDDK0YCQMvWD1XdeOkiWIhuTWjmgDHG8iENJNhJtdrlYyMLtLAUOdhlqWkSIo3LZGBCsy2LoDtAUSLswUqPFGWI3zMnZWQZvZXG7J7zCkjIQ1wlPlZSw9x8yYRAUM2YFe/H2vOXrpmkB8ZTIbfpCRgNCCdK1aR0k4kHHxO6OujC63ZArKpydDDjv3ur26aURyPPEJnfkcTiyG+1P0mnkbAa+UJF4D6EOAWRFJzG5Nmq+RtHjMnTbRG6FFK2nI0DrFB3ls76gYHjmNLEX6b4LaLzukIBllxGNiFNuM0VL1ZTnryVnEmF61Curb+9gapJQtpqrR14WNmhpp3pkHuiuQUc9AJwFAnv2oeSRapA7LC2iigxVmkLTIFxz76TcY3N2zWN4Di8nhA8xNZq8u5qfPehT+22J9wjqygpAy8lEig+JqVCOD3Q9ZQeC73vycGyvkCf+1FCqm1YqZWCyc5X7EO/4wD62dhWD+jVdfBlBlrnozIkNWj653VvNMRzaXR+6/YisI5ft5rx1hQv0HqEIIWoENOmUG3W6T8UWbzzLYFT8bIvKYuOnVhT1Ls96B4ZL+HjbFXCymcTkKl1z+pThYhSxsqOxAej+cq2W3aUmHfRyLEaoXq+mJkxvRejPuuHVcYBFaG/TDfW4WZcLjCCyLRFcTAS9yYNoI9CHkJzOB4J0slI4FCQMAXkzSEZ27mhGbim6VViPvHBTxvsjdVchjvd0OSj5SzjKEIGL0+0oziWb5yc2oDf1wCf7SnFD9/wSka5n6A6EIEaee0it3JHO85mqaEpWBkUmg5sS29R+Xq6JuQvaooDeKY6RKt3uxcDgundT+lLpZmOb8sfc1dfA6YlqJzWUPm2sRTjTdapn1Mkjm3i0AesaDqCL4pqUZ8RXSVJQH/R4cqrpPCTmlNiHZYUZv0LOPZyLBLNeB0y8SqfbPdudlkUadhGCnq2QgcFNB4slBvYwRRqhZviUUHM2VmeUu9bhTvB3TjRv4srdGGQnLmfuXj6YaxNvKf+ifluH4y5X5rNvsJDA+HRd2LRdA2mP7jZd9yI+u4sM7jf5vbkGWLMsjMwKYUtdBqvjxBzXTSkAeDOmNJwsjLBqB4jPzO6qCSnujsAGmeAY0ak/O3KQ8smyGeXqsb4YjP6U9Rf8MJe3dscKzXyIpFuuURPvM3doS4xfjO4iD2Vnp5WwXzUtZLW6hPO/1bA8lhTQyjdTkg4VG2zn+FTtZa6iMfaqz/dpTK2MQ7l2sPYiHzrymnc+hOy2e/QbxfXFYo/jrX2QN+gFllzkQj/j7ZVWzlM3GmriCACMbAZtHhkm+hK7Z6+atDtSrboshXrdeT6K7C7GfsrMw+ImkbnOpnDnDqx16QCLNb4TWfjKkvWx+8XI+G4m937igpLzkWWig36Nfb8cbjy6P4NYv53ta6NDy7Bl/wBCtdZsvsTf8aKECn9iZjhTsFsB5wgO0v26OzXIaTswi5A2RsTI/jU4STsU9VPWt5vLYJoKm2mez6dhKg8daLOW/TkbyhN/Vgrf4CL6cPY265K35lnf0/cR8qrbrrpwsXbpa4rksKV4QcJlOF8kacS1lpFHEDc8nFzQwdaiAqQ64k7abO8xPedcKHcSRjDKO4wYiBq4OHYcsi9Wo0+ON1pKzMBMdtpVDWL16l5a42Fswel2JI78OFMcY6R9dgacZJR806pUdheqALk4k2acQ+VUBWfjKzVEbrUe5WsFNGNE016YACSJyk32JI2hCBlNtcAUMjQ2CrfTNjiDQ8/nuF3CFqMAA2AS88lcZFddMXQh502LpRTtTkW8TWBbWbCcdXRPdLSrCvUkDoQrNuoxEnzTOj+I+V6dE78aMwM5+Qel9iA5EV+IRykIMjirAv+HQVPdMRqcY7ftljEUrTWWHRFy95gXRysv95fKObudOT7P8ureTYkpzrpERpfVwvcVS0PLX9LEiRJOUfzIthChqRlPMtL9aW/hIZuJ5v3x4tbnTmMt5cAI1lJNhVsKd/26M6BhVgZTZcc2+qC0ztNxPQidnbH+mULwpLZNlJ7puz3UPo6yPFNawfEUa4HayefqgOaRf0srJtRB/8IxT6HMfG5erjxyrgjZUhUSp1FHES3hpBFEzB0z+Z433h5hfCGqOJ6RRQWPbxdtZ57sk7maZ0mVpnS4n0BcN+WbtGiTeT9F1jRHXQYzzru+cYIiHDPhvImUOGe2Z/DZhMjtYpitpMebfTwutIQAI+7lMgtkTKqxtYHZQ86SRZ6eD1yBchjMeVpYyoqqk53Ya/Jw1vPSI464HLVcYHb4io7pYUAEGhu8VpIm19takjmaZnH1Qt6LoNMp/LEJEdPUqXnP7634WB6VU0OKe7w3C8Xs05zsb1iU8SRiMyJ6nSZ1MYO5M80YHvA5EXrSWPDggrDM0k4xyd2qbpWF1kSoy7edKomYzHXO8GDK63xYrWPcjfv746xuxF67k61spKrtHi01UwiZGF2UIKmWNG5j0TYaP6dglpH6I8UzlMLS5wVhgZ1uHQ9Jt4iMyoUnAdKg3m5iGnYBo+UPf+YP5ZGTGIQ8P67I+SFNehlm6P6SpeZBk1VumpmcuudUTx3BErgXDLE8Myb66Gn0UfcsNvH0jnK3SXDPGrN3ZREzSjnndHK35J1slyHXLCyZGIzRV0xzZyoW5Ff4xc/MbVft/WLdn7SN4odEmDH8ipNpHc/TTsOE9H6u4WqZ7/1uxSDdqmNRmWjiXbKde8Kw02wUR6PIg8bygOtaV+xUtkO2qvDFQaFc6uQS+524KdlSw/z3stmYt5vXytK1K4g4O6eJUszoJw2k0F7QhqukmX6pwDwrrdr7JNyNLEa4w43tHpXX3FlD3RAQf9Zxt8cCrN/fSGmd0YK7HWVUMKRuNzXO8X5i3QHt+JifNEpPV6fxLlvFWdVmk+Eqr3eYRHBcUN2ES33fpe7sefKqWyUhkFjbU2vLpVNIwZngchX0OoZRyl5nOCfWpOY2ewPODgecO3fDzChgHj9bxrrJLro+avUkUyOGzvaZqPNbamzHtPfCx3wFcYZM6bYfY5fGUvpoEanc3mTuVulBlQq2MB7jNhMiNHHKm9/RcswRefqAASV0EG+/srQypiv0S7rPKSLn/RNYdCu4tgiMR5vIjt2Sk6ml58tSHgl6a+y7MlxSRjyB1Mp6XI/nIEZO8TanQs9kKk5axjzxa5xlvDmzPU2Q5xudPldVGpFPpsTZDU/SwlHaFereGuRxnov7iUCVlzBn+PRxnGOmEtUjHYkWJrEHJk8nBgRCNvTJW6rlzGQ2cr3Mdnat7QamFVeqGBnC8xVZzIx+xvSurXcJnvCGIeTnWIsl+SSzR5qZH97snmQbLGSuAnsRHa+03YN9LeXLfBGbvBTsUjZ9t/cHd3UKl072gf3gKs6s6E5U4wcTl45RuSDVbhjrfndO8kWu4WwQEpcRWtMJswPOrF1qO5eUiCnEMdfK2VUiVjPGRSg06giiDmO5GVyuqErt7HXsPEIDxIziVqAjt5cdFGaB09agdeEOa1skR6wZGFNb9WFUCUnT8PBQgrxQ8BTPGJcpq2+OX5Jm69f+GaX4kTvOm/GQ2OhkmDWF7fcUH+E5zMn3KooPOsOw5C6sicP9bKSbqrGs7siXI9dhxUGOjFVtmXOUarTiQHJcPU6kLzkt7X2OmlJLqeDSyGnCguZycrL27CV1QE6ur3BJoHh8ikGDWlGpceTExqvj2Tk/8d45hrlHPTLqdPU7jztdqSydzhrr+DkiumyrDwkOksNRh9LbrMTsrcN69mxnHXjJLo0QaWa3re3N9UY/wk/DzvJ0fOycO+IMxHjjEzYcEbHKuuci28iPZuNS8+1OgfH21Bzyo8mjWykz4YkB6VWx6oCvq0iUvlXiN4e48ydsXNQpJtgr35wsd2frwY3OLdY718o81vEaCVRFiVRM8IlNUObYjrTN3Q6KscEdi/szcUFj7XyZbvEJknpNxPaEPFS4DBAwxPJDT2JFsHi4+QF2UiJZAMugWNYQ2F7qk0Lla0/niqvjKYToaNlodjNcowVXV2G19HTKBs7RIyvemU+/EepCqvN5sIVT4a88yLNxHrVlpZTxUAjO4SM8U0IQ9k3sPMoGrKcFeyfJNYOgvu/h3WqByVw8hSVblRXIXUW2Zif7kGZDsSpOGtv9acLc7mHZzM10kg6uDhaVHsnZwMhuHljXhJILYdNFh2WZgXuisZW1ylmk1ft2Y82S0VhR1uBq1pAR1Vwz9uqbVdQmOCXTBQamx2omH6Mrpkwr0dRS5XlK+KoQ9arM9wtzzeeT0XlkRyh3+xRzXprBrHbXsu2DxnK8oYlzul98mq0Tp95Iur+jkeWjcj8wd2VsCCtgghSkxjrfqi6qdFWAlPVhZqYd6WJ7k2E57eZWoVJR3YHW7HTXYqPacpHKbBK6p0DjIw53qMrBm4b0jlXj6sEg3nVEx49bbOi1tjs+6PmJjgFTeS71s7IVH/oaJkhLBaLjjkbNQRfBGpozZD/tNFftrm6nBtywAykL9M9yxdKR9U5g+S5UXVCjpbBKFGEg+R27EUc3U3nluVS3+t7PLp1KHNVhDK+RGuL1cBH4Q+Uf+A3LnXgdjKSAq2yYIR+Ri9X6Fcg6hWaAx5RHcd3SJQ6u8YDKjzQamJMWm5h7g4lNKF6Rflyoa6+QBjZrBXPd3GMnPkBXAuUxsWGs2A0jwBIR7kHCZUiR3Rq4u3RHDYdRWVTpgxBu3FIzeoseEVx21TsMRQ2GiBy9J+X5ZA/VAwaY9IHLHr0oqHKLZb0YRo41xqhxWT5y73DxL3hpUt5p1uYc5rlKtosCdHItgWkKBJndPHukBoImKospBHo2kgui8Tv/4rTMKhxSkkRjeu8iS18bEo7ad+PR78YEIxhEg9z19yrF9HBj0+AVz78KAVyodGi71/f29dAHutLVYEWe39TY2YnoTWOwpA43/4okJYUuAKupk4dc0aLZ7qy2PHqH4LgZQ3GLdsGFRnG4Uu1nJsbJgFxUuDKn9R2y291Cx/USCMJNIULTdf2tBfzbX4E5W+e2xOHWPfBBHti9IOjcmOw7U0AN6bBttr3nC/vAbbc2Fbf9/YYq+oodk7OS3M+aMGhzj24D7HpCqTBNwil5kFbYT7vQIG8UIwueILb2fmqeu+20dXH084lkPUn6KYcyfvzdy9uhjK8+e0J+eB9GfOPFDPFTXof94KGM7x/N/7tfIRLYV4jtv3Uo4xuYHai/5BXi2zGc77wtfGRwi6r/e98C7v/UW8CfBNyf/ETJy0dHPh6f+NcflOiTpHweZXj5tMzzIZgaiZ+1/gXW/4KSDI3QAk3Rv7xv83OOP/w4Jb59Ygz7+LL+myfG/obTEN8/WPNdunz+rCP693rkH0X/0xdvfO9ziT/p2NNPO45SpPBLU359/XDY82V+vTzLfuy1/r/e1b8LQNxG/Xv/f615OeaU5rf/3sf/MMkOuy9J9o2zdbvd/yYD+S2OxY9gfiL7RZpy+EelKehXR0exj6dtqW+47l/08dg3ab6Xpbwg9BGRw38Nyc/X+aOC2J9XkPo3KPi971D4ntKgl7zrk9+f6T4EvJ859WG/AfHfAeVPjDHfNML3P5j/L5ixbg+QYoJR6qD5lKGC5UreJD2co8J26bN2eMUkb/8PJaHZf05K+uPEeDv5Db/M5HdWzPjhI3HInxJYQdHnrzd7Pv7uO+Jw/v8B';\n      \n    // '<mxGraphModel dx=\"1073\" dy=\"521\" grid=\"1\" gridSize=\"10\" guides=\"1\" tooltips=\"1\" connect=\"1\" arrows=\"1\" fold=\"1\" page=\"0\" pageScale=\"1\" pageWidth=\"827\" pageHeight=\"1169\" math=\"0\" shadow=\"0\"><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"arrow-1\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;jettySize=auto;orthogonalLoop=1;strokeWidth=4;shadow=1;\" parent=\"1\" source=\"shape-grafana\" target=\"shape-love\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><object label=\"Grafana\" href=\"www.google.fr\" id=\"shape-grafana\"><mxCell style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#ffe6cc;strokeColor=#d79b00;shadow=1;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"10\" y=\"10\" width=\"120\" height=\"60\" as=\"geometry\"/></mxCell></object><mxCell id=\"arrow-2\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;jettySize=auto;orthogonalLoop=1;strokeWidth=4;shadow=1;\" parent=\"1\" source=\"shape-love\" target=\"shape-mxgraph\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"shape-love\" value=\"loves\" style=\"triangle;whiteSpace=wrap;html=1;fillColor=#e1d5e7;strokeColor=#9673a6;shadow=1;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"210\" width=\"60\" height=\"80\" as=\"geometry\"/></mxCell><mxCell id=\"shape-mxgraph\" value=\"mxGraph\" style=\"ellipse;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;shadow=1;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"340\" width=\"120\" height=\"80\" as=\"geometry\"/></mxCell><mxCell id=\"text-grafana\" value=\"MyText : TextVal\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"9\" y=\"50\" width=\"120\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"text-arrow1\" value=\"Text 2\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"150\" y=\"20\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"text-arrow2\" value=\"Text 3\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"280\" y=\"20\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"text-mxgraph\" value=\"Text 4\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"380\" y=\"50\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell></root></mxGraphModel>';\n\n    this.xgraph = undefined;\n    this.$container = undefined;\n    this.onMapping = {\n      active: false, // boolean if pointer mapping is active\n      object: undefined, // ojb to return id of mapping\n      id: undefined, // id of dom\n    };\n\n    this.import(this.data);\n\n    // Events Render\n    ctrl.events.on('render', () => {\n      this.render();\n    });\n  }\n\n  import(obj) {\n    u.log(1, 'FlowchartHandler.import()');\n    u.log(0, 'FlowchartHandler.import() obj', obj);\n    this.flowcharts = [];\n    if (obj !== undefined && obj !== null && obj.length > 0) {\n      obj.forEach((map) => {\n        const container = this.createContainer();\n        const newData = {};\n        const fc = new Flowchart(map.name, map.xml, container, newData);\n        fc.import(map);\n        this.flowcharts.push(fc);\n        this.data.push(newData);\n      });\n    }\n  }\n\n  getFlowchart(index) {\n    return this.flowcharts[index];\n  }\n\n  getFlowcharts() {\n    return this.flowcharts;\n  }\n\n  countFlowcharts() {\n    if (this.flowcharts !== undefined && Array.isArray(this.flowcharts)) return this.flowcharts.length;\n    return 0;\n  }\n\n  createContainer() {\n    const $container = $(\n      `<div id=\"flowchart_${\n        u.uniqueID\n      }\" style=\"margin:auto;position:relative,width:100%;height:100%\"></div>`\n    );\n    this.$elem.html($container);\n    return $container[0];\n  }\n\n  addFlowchart(name) {\n    u.log(1, 'FlowchartHandler.addFlowchart()');\n    const container = this.createContainer();\n    const data = {};\n    const flowchart = new Flowchart(name, this.defaultXml, container, data);\n    this.data.push(data);\n    this.flowcharts.push(flowchart);\n  }\n\n  render() {\n    u.log(1, 'flowchartHandler.render()');\n    if (this.changeSourceFlag) {\n      this.draw();\n      this.changeSourceFlag = false;\n      this.changeRuleFlag = true;\n    }\n    if (this.changeOptionFlag) {\n      this.setOptions();\n      this.changeOptionFlag = false;\n    }\n    if (this.changeRuleFlag || this.changeDataFlag) {\n      this.setStates();\n      this.applyStates();\n      this.changeRuleFlag = false;\n      this.changeDataFlag = false;\n    }\n    const width = this.$elem.width();\n    const height = this.ctrl.height;\n    this.refresh(width, height);\n  }\n\n  sourceChanged() {\n    this.changeSourceFlag = true;\n  }\n\n  optionChanged() {\n    this.changeOptionFlag = true;\n  }\n\n  ruleChanged() {\n    this.changeRuleFlag = true;\n  }\n\n  dataChanged() {\n    this.changeDataFlag = true;\n  }\n\n  refresh(width, height) {\n    u.log(1, `FlowchartHandler.refresh()`);\n    this.flowcharts.forEach((flowchart) => {\n      flowchart.refresh(width, height);\n    });\n  }\n\n  setStates() {\n    const rules = this.ctrl.rulesHandler.getRules();\n    const series = this.ctrl.series;\n    this.flowcharts.forEach((flowchart) => {\n      flowchart.setStates(rules, series);\n    });\n  }\n\n  applyStates() {\n    this.flowcharts.forEach((flowchart) => {\n      flowchart.applyStates();\n    });\n  }\n\n  setOptions() {\n    this.flowcharts.forEach((flowchart) => {\n      flowchart.setScale(flowchart.data.scale);\n      flowchart.setCenter(flowchart.data.center);\n      flowchart.setGrid(flowchart.data.grid);\n      flowchart.setTooltip(flowchart.data.tooltip);\n      flowchart.setLock(flowchart.data.lock);\n      flowchart.setZoom(flowchart.data.zoom);\n    });\n  }\n\n  draw() {\n    u.log(1, `FlowchartHandler.draw()`);\n    this.flowcharts.forEach((flowchart) => {\n      flowchart.redraw();\n    });\n  }\n\n  setMap(objToMap) {\n    const flowchart = this.getFlowchart(0);\n    this.onMapping.active = true;\n    this.onMapping.object = objToMap;\n    this.onMapping.id = objToMap.getId();\n    this.onMapping.$scope = this.$scope;\n    flowchart.setMap(this.onMapping);\n  }\n\n  unsetMap() {\n    const flowchart = this.getFlowchart(0);\n    this.onMapping.active = false;\n    this.onMapping.object = undefined;\n    this.onMapping.id = '';\n    flowchart.unsetMap();\n  }\n\n  isMapping(objToMap) {\n    if (objToMap === undefined || objToMap == null) return this.onMapping.active;\n    if (this.onMapping.active === true && objToMap === this.onMapping.object) return true;\n    return false;\n  }\n\n  openDrawEditor(index) {\n    const urlEditor = 'https://draw.io?embed=1';\n    const editorWindow = window.open(urlEditor, 'MxGraph Editor', 'width=1280, height=720');\n    window.addEventListener('message', (event) => {\n      if (event.origin !== 'https://www.draw.io') return;\n      // when editor is open\n      if (event.data === 'ready') {\n        // send xml\n        event.source.postMessage(this.flowcharts[index].data.xml, event.origin);\n      } else {\n        if (event.data !== undefined && event.data.length > 0) {\n          // this.flowcharts[index].setXml(event.data);\n          this.flowcharts[index].redraw(event.data);\n          this.sourceChanged();\n          this.$scope.$apply();\n          // this.render();\n        }\n        if (event.data !== undefined || event.data.length === 0) {\n          editorWindow.close();\n        }\n      }\n    });\n  }\n}\n"],"file":"flowchartHandler.js"}