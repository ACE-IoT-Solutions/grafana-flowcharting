{"version":3,"sources":["../src/flowchartHandler.js"],"names":["FlowchartHandler","$scope","elem","ctrl","data","u","log","$elem","find","flowcharts","changedGraphFlag","changedDataFlag","changedRulesFlag","defaultXml","xgraph","stateHandler","$container","onMapping","active","object","undefined","id","length","import","events","on","render","obj","i","forEach","map","container","createContainer","rule","Flowchart","name","push","index","$","uniqueID","html","flowchart","width","height","refresh","prop","getOrignalCells","objToMap","getId","scrollIntoView","focus"],"mappings":"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","sourcesContent":["import Flowchart from './flowchart_class';\n\n\nexport default class FlowchartHandler {\n  /** @ngInject */\n  constructor($scope, elem, ctrl, data) {\n    u.log(1, 'FlowchartHandler.constructor()');\n    this.$scope = $scope || null;\n    this.$elem = elem.find('.flowchart-panel__chart');\n    this.ctrl = ctrl;\n    this.flowcharts = [];\n    this.data = data;\n    this.changedGraphFlag = true;\n    this.changedDataFlag = true;\n    this.changedRulesFlag = true;\n    this.defaultXml =\n      '<mxGraphModel dx=\"1073\" dy=\"521\" grid=\"1\" gridSize=\"10\" guides=\"1\" tooltips=\"1\" connect=\"1\" arrows=\"1\" fold=\"1\" page=\"0\" pageScale=\"1\" pageWidth=\"827\" pageHeight=\"1169\" math=\"0\" shadow=\"0\"><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"arrow-1\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;jettySize=auto;orthogonalLoop=1;strokeWidth=4;shadow=1;\" parent=\"1\" source=\"shape-grafana\" target=\"shape-love\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><object label=\"Grafana\" href=\"www.google.fr\" id=\"shape-grafana\"><mxCell style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#ffe6cc;strokeColor=#d79b00;shadow=1;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"10\" y=\"10\" width=\"120\" height=\"60\" as=\"geometry\"/></mxCell></object><mxCell id=\"arrow-2\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;jettySize=auto;orthogonalLoop=1;strokeWidth=4;shadow=1;\" parent=\"1\" source=\"shape-love\" target=\"shape-mxgraph\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"shape-love\" value=\"loves\" style=\"triangle;whiteSpace=wrap;html=1;fillColor=#e1d5e7;strokeColor=#9673a6;shadow=1;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"210\" width=\"60\" height=\"80\" as=\"geometry\"/></mxCell><mxCell id=\"shape-mxgraph\" value=\"mxGraph\" style=\"ellipse;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;shadow=1;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"340\" width=\"120\" height=\"80\" as=\"geometry\"/></mxCell><mxCell id=\"text-grafana\" value=\"MyText : TextVal\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"9\" y=\"50\" width=\"120\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"text-arrow1\" value=\"Text 2\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"150\" y=\"20\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"text-arrow2\" value=\"Text 3\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"280\" y=\"20\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"text-mxgraph\" value=\"Text 4\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"380\" y=\"50\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell></root></mxGraphModel>';\n    this.xgraph;\n    this.stateHandler;\n    this.$container;\n\n    this.onMapping = {\n      active: false, // boolean if pointer mapping is active\n      object: undefined, // ojb to return id of mapping\n      id: undefined // id of dom\n    };\n\n    if (this.data != undefined && this.data != null && this.data.length > 0) {\n      this.import(this.data);\n    }\n\n    // Events Render\n    ctrl.events.on('render', () => {\n      this.render();\n    });\n  }\n\n  import(obj) {\n    let i = 0;\n    obj.forEach(map => {\n      let container = this.createContainer();\n      let rule = new Flowchart(map.name, container, map);\n      this.flowcharts.push(rule);\n      this.data[i++] = map;\n    });\n  }\n\n  getFlowchart(index) {\n    return this.flowcharts[index];\n  }\n\n  getFlowcharts() {\n    return this.flowcharts;\n  }\n\n  createContainer() {\n    let $container = $(\n      '<div id=\"flowchart_' +\n        u.uniqueID +\n        '\" style=\"margin:auto;position:relative,width:100%;height:100%\"></div>'\n    );\n    this.$elem.html($container);\n    return $container[0];\n  }\n\n  addFlowchart(name) {\n    let container = this.createContainer();\n    let data = {};\n    let flowchart = new Flowchart(name, container, data);\n    this.data.push(data);\n    this.flowcharts.push(flowchart);\n  }\n\n  getStatesHandler() {\n    return this.stateHandler;\n  }\n\n  render() {\n    u.log(1, 'flowchartHandler.render()');\n    let width = this.$elem.width();\n    let height = this.ctrl.height;\n    this.refresh(width,height);\n  }\n\n  refresh(width, height) {\n    this.flowcharts.forEach(flowchart => {\n      flowchart.refresh(width,height);\n    });\n  }\n\n  getNamesByProp(prop) {\n    return this.xgraph.getOrignalCells(prop);\n  }\n\n  setMap(objToMap) {\n    this.onMapping.active = true;\n    this.onMapping.object = objToMap;\n    this.onMapping.id = objToMap.getId();\n    this.onMapping.container = this.$container[0];\n    this.$container[0].scrollIntoView();\n    this.$container[0].focus();\n  }\n\n  unsetMap() {\n    this.onMapping.active = false;\n    this.onMapping.object = undefined;\n    this.onMapping.id = '';\n  }\n\n  isMapping(objToMap) {\n    if (objToMap == undefined || objToMap == null) return this.onMapping.active;\n    if (this.onMapping.active === true && objToMap == this.onMapping.object) return true;\n    return false;\n  }\n}\n"],"file":"flowchartHandler.js"}