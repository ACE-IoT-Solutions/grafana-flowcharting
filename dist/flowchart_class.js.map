{"version":3,"sources":["../src/flowchart_class.js"],"names":["Flowchart","name","container","data","xgraph","stateHandler","import","init","obj","source","type","xml","value","url","options","zoom","center","scale","lock","grid","bgColor","undefined","u","log","XGraph","drawGraph","scaleGraph","centerGraph","lockGraph","StateHandler","rules","series","setStates","rule","applyStates","refreshGraph","width","height","setWidth","setHeight","refresh","minify","prettify"],"mappings":"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","sourcesContent":["import XGraph from './graph_class';\nimport StateHandler from './statesHandler';\n\nexport default class Flowchart {\n  /** @ngInject */\n  constructor(name, container, data) {\n    this.data = data;\n    this.data.name = name;\n    this.container;\n    this.xgraph;\n    this.stateHandler;\n    this.import(data);\n    this.init();\n  }\n\n  import(obj) {\n    if(obj.source) this.data.type = obj.source.type;\n    else this.data.type = obj.type || this.data.type || 'xml';\n    if(obj.source) this.data.xml = obj.source.xml.value ;\n    else this.data.xml = obj.xml || this.data.xml || \"\";\n    if(obj.source) this.data.url = obj.source.url.value;\n    else this.data.url = 'http://<source>:<port>/<pathToXml>';\n    if(obj.options) this.data.zoom = obj.options.zoom;\n    else this.data.zoom = obj.zoom || '100%';\n    if(obj.options) this.data.center = obj.options.center;\n    else this.data.center = obj.center || true;\n    if(obj.options) this.data.scale = obj.options.scale;\n    else this.data.scale = obj.scale || true;\n    if(obj.options) this.data.lock = obj.options.lock;\n    else this.data.lock = obj.lock || true;\n    if(obj.options) this.data.grid = obj.options.grid;\n    else this.data.grid = obj.grid || false;\n    if(obj.options) this.data.bgColor = obj.options.bgColor;\n    else this.data.bgColor = obj.bgColor || undefined;\n  }\n\n  getData() {\n    return this.data;\n  }\n\n  init() {\n    u.log(1,\"flowchart.init()\")\n    this.xgraph = new XGraph(this.container, this.data.xml);\n    this.xgraph.drawGraph();\n    if (this.data.scale) this.xgraph.scaleGraph(true);\n    if (this.data.center) this.xgraph.centerGraph(true);\n    if (this.data.lock) this.xgraph.lockGraph(true);\n    this.stateHandler = new StateHandler(this.xgraph);\n  }\n  \n  setStates(rules,series) {\n    u.log(1,\"flowchart.setStates()\");\n    // u.log(0,\"flowchart.setStates() rules\",rules);\n    // u.log(0,\"flowchart.setStates() series\",series);\n    this.stateHandler.setStates(rule,series);\n  }\n\n  applyStates() {\n    u.log(1,\"flowchart.applyStates()\");\n    this.stateHandler.applyStates();\n  }\n\n  refresh() {\n    this.data.xgraph.refreshGraph(this.width, this.height);\n  }\n\n  refresh(width,height) {\n    if (width != undefined && width != null ) this.setWidth(width);\n    if (height != undefined && height != null ) this.setHeight(height);\n    this.refresh();\n  }\n\n  setWidth(width) {\n    this.width = width;\n  }\n\n  setHeight(height) {\n    this.height = height;\n  }\n\n  setXml(xml) {\n    this.data.xml = xml;\n  }\n\n  minify() {\n    this.data.xml = u.minify(this.data.xml);\n  }\n\n  prettify() {\n    this.data.xml = u.prettify(this.data.xml);\n  }\n\n  getContainer() {\n    return this.container;\n  }\n}\n"],"file":"flowchart_class.js"}