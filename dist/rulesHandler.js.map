{"version":3,"sources":["../src/rulesHandler.js"],"names":["RulesHandler","$scope","data","u","log","rules","import","obj","undefined","length","forEach","map","newData","rule","Rule","pattern","push","index","newRule","Array","isArray","splice","getRule","getData","alias","activeRuleIndex","first","last","curr","before","after"],"mappings":"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","sourcesContent":["import Rule from './rule_class';\n\nexport default class RulesHandler {\n  /** @ngInject */\n  constructor($scope, data) {\n    u.log(1, 'RulesHandler.constructor()');\n    this.$scope = $scope || null;\n    this.rules = [];\n    this.data = data;\n    this.import(this.data);\n  }\n\n  import(obj) {\n    u.log(1, 'RuleHandler.import()');\n    u.log(0, 'RuleHandler.import() obj', obj);\n    this.rules = [];\n    if (obj !== undefined && obj !== null && obj.length > 0) {\n      obj.forEach((map) => {\n        const newData = {};\n        const rule = new Rule(map.pattern, newData);\n        rule.import(map);\n        this.rules.push(rule);\n        this.data.push(newData);\n      });\n    }\n  }\n\n  getRules() {\n    return this.rules;\n  }\n\n  getRule(index) {\n    return this.rules[index];\n  }\n\n  addRule(pattern) {\n    const data = {};\n    const newRule = new Rule(pattern, data);\n    this.rules.push(newRule);\n    this.data.push(data);\n  }\n\n  countRules() {\n    if (this.rules !== undefined && Array.isArray(this.rules)) return this.rules.length;\n    return 0;\n  }\n\n  removeRule(index) {\n    this.rules.splice(index, 1);\n    this.data.splice(index, 1);\n  }\n\n  cloneRule(index) {\n    const rule = this.getRule(index);\n    const data = rule.getData();\n    const newData = {};\n    const newRule = new Rule(newData.pattern, newData);\n    newRule.import(data);\n    newData.alias = `Copy of ${newData.alias}`;\n    this.rules.splice(index, 0, newRule);\n    this.data.splice(index, 0, newData);\n    this.activeRuleIndex = index;\n  }\n\n  moveRuleToUp(index) {\n    const first = 0;\n    const rules = this.rules;\n    const last = rules.length - 1;\n    if (index !== first && last !== first) {\n      const curr = rules[index];\n      const before = rules[index - 1];\n      rules[index - 1] = curr;\n      rules[index] = before;\n    }\n  }\n\n  moveRuleToDown(index) {\n    const first = 0;\n    const rules = this.rules;\n    const last = rules.length - 1;\n    if (index !== last && last !== first) {\n      const curr = rules[index];\n      const after = rules[index + 1];\n      rules[index + 1] = curr;\n      rules[index] = after;\n    }\n  }\n}\n"],"file":"rulesHandler.js"}