{"version":3,"sources":["../src/flowchart_ctrl.js"],"names":["u","require","window","FlowchartCtrl","$scope","$injector","$rootScope","version","unitFormats","kbn","getUnitFormats","changedSource","changedData","changedOptions","rulesHandler","undefined","flowchartHandler","series","panelDefaults","newFlag","format","valueName","rulesData","flowchartsData","_","defaults","panel","graphId","id","containerDivId","events","on","onRender","bind","onRefresh","onDataReceived","onDataError","onInitEditMode","onInitPanelActions","addEditorTab","flowchartOptionsTab","mappingOptionsTab","inspectOptionsTab","log","dataList","map","seriesHandler","dataChanged","render","actions","push","text","click","scope","elem","attrs","ctrl","newRulesData","RulesHandler","styles","import","countRules","addRule","newFlowchartsData","FlowchartHandler","flowchart","countFlowcharts","addFlowchart","$new","publishAppEvent","templateHtml","modalClass","subItem","value","refresh","seriesData","TimeSeries","datapoints","alias","target","unit","flotpairs","getFlotPairs","nullPointMode","length","last","from","range","isOutsideRange","MetricsPanelCtrl","templateUrl"],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/no-unresolved\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\n// eslint-disable-next-line import/no-unresolved\nimport TimeSeries from 'app/core/time_series2';\n// eslint-disable-next-line import/no-unresolved\nimport kbn from 'app/core/utils/kbn';\nimport { mappingOptionsTab } from './mapping_options';\nimport { flowchartOptionsTab } from './flowchart_options';\nimport { inspectOptionsTab } from './inspect_options';\nimport RulesHandler from './rulesHandler';\nimport FlowchartHandler from './flowchartHandler';\n\nconst u = require('./utils');\nwindow.u = window.u || u;\n\nclass FlowchartCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.version = '0.3.0';\n    this.$rootScope = $rootScope;\n    this.$scope = $scope;\n    this.unitFormats = kbn.getUnitFormats();\n    this.changedSource = true;\n    this.changedData = true;\n    this.changedOptions = true;\n    this.rulesHandler = undefined;\n    this.flowchartHandler = undefined;\n    this.series = [];\n    this.panelDefaults = {\n      newFlag: true,\n      format: 'short',\n      valueName: 'current',\n      rulesData: [],\n      flowchartsData: [],\n    };\n\n    _.defaults(this.panel, this.panelDefaults);\n    this.panel.graphId = `flowchart_${this.panel.id}`;\n    this.containerDivId = `container_${this.panel.graphId}`;\n\n    // events\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n  }\n\n  //\n  // EVENTS FCT\n  //\n  onInitEditMode() {\n    this.addEditorTab('Flowchart', flowchartOptionsTab, 2);\n    this.addEditorTab('Mapping', mappingOptionsTab, 3);\n    this.addEditorTab('Inspect', inspectOptionsTab, 4);\n  }\n\n  onRefresh() {\n    u.log(1, 'ctrl.onRefresh()');\n    this.onRender();\n  }\n\n  onRender() {\n    u.log(1, 'ctrl.onRender()');\n  }\n\n  onDataReceived(dataList) {\n    u.log(1, 'ctrl.onDataReceived()');\n    u.log(0, 'ctrl.onDataReceived() dataList', dataList);\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    u.log(0, 'ctrl.onDataReceived() this.series', dataList);\n    this.flowchartHandler.dataChanged();\n    this.render();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({\n      text: 'Export SVG',\n      click: 'ctrl.exportSVG()'\n    });\n  }\n\n  //\n  // FUNCTIONS\n  //\n  link(scope, elem, attrs, ctrl) {\n    u.log(1, 'ctrl.link()');\n    // RULES\n    const newRulesData = [];\n    this.rulesHandler = new RulesHandler(scope, newRulesData);\n    if (this.panel.version === undefined && this.panel.styles !== undefined) {\n      this.rulesHandler.import(this.panel.styles);\n      delete this.panel.styles;\n    } else this.rulesHandler.import(this.panel.rulesData);\n    if (this.panel.newFlag && this.rulesHandler.countRules() === 0) this.rulesHandler.addRule('.*');\n    this.panel.rulesData = newRulesData;\n\n    // FLOWCHART\n    const newFlowchartsData = [];\n    this.flowchartHandler = new FlowchartHandler(scope, elem, ctrl, newFlowchartsData);\n    if (this.panel.version === undefined && this.panel.flowchart !== undefined) {\n      this.flowchartHandler.import([this.panel.flowchart]);\n      delete this.panel.flowchart;\n    } else this.flowchartHandler.import(this.panel.flowchartsData);\n    if (this.panel.newFlag && this.flowchartHandler.countFlowcharts() === 0) this.flowchartHandler.addFlowchart('Main');\n    this.panel.flowchartsData = newFlowchartsData;\n\n    // Versions\n    this.panel.newFlag = false;\n    this.panel.version = this.version;\n  }\n\n  exportSVG() {\n    const scope = this.$scope.$new(true);\n    scope.panel = 'table';\n    this.publishAppEvent('show-modal', {\n      templateHtml: '<export-data-modal panel=\"panel\" data=\"tableData\"></export-data-modal>',\n      scope,\n      modalClass: 'modal--narrow',\n    });\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.refresh();\n  }\n\n  //\n  // Series\n  //\n\n  seriesHandler(seriesData) {\n    u.log(1, 'ctrl.seriesHandler()');\n    const series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n      unit: seriesData.unit,\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    const datapoints = seriesData.datapoints || [];\n    if (datapoints && datapoints.length > 0) {\n      const last = datapoints[datapoints.length - 1][1];\n      const from = this.range.from;\n      if (last - from < -10000) {\n        series.isOutsideRange = true;\n      }\n    }\n    return series;\n  }\n}\n\nexport { FlowchartCtrl, FlowchartCtrl as MetricsPanelCtrl };\n\nFlowchartCtrl.templateUrl = './partials/module.html';\n"],"file":"flowchart_ctrl.js"}