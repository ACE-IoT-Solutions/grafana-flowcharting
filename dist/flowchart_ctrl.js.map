{"version":3,"sources":["../src/flowchart_ctrl.js"],"names":["u","require","window","FlowchartCtrl","$scope","$injector","$rootScope","version","unitFormats","kbn","getUnitFormats","changedSource","changedData","changedOptions","rulesHandler","undefined","flowchartHandler","series","panelDefaults","newFlag","format","valueName","rulesData","flowchartsData","_","defaults","panel","graphId","id","containerDivId","events","on","onRender","bind","onRefresh","onDataReceived","onDataError","onInitEditMode","onInitPanelActions","addEditorTab","flowchartOptionsTab","mappingOptionsTab","inspectOptionsTab","log","dataList","map","seriesHandler","dataChanged","render","actions","push","text","click","scope","elem","attrs","ctrl","RulesHandler","import","styles","countRules","addRule","FlowchartHandler","countFlowcharts","addFlowchart","$new","publishAppEvent","templateHtml","modalClass","subItem","value","refresh","seriesData","TimeSeries","datapoints","alias","target","unit","flotpairs","getFlotPairs","nullPointMode","length","last","from","range","isOutsideRange","MetricsPanelCtrl","templateUrl"],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/no-unresolved\r\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport TimeSeries from 'app/core/time_series2';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport kbn from 'app/core/utils/kbn';\r\nimport { mappingOptionsTab } from './mapping_options';\r\nimport { flowchartOptionsTab } from './flowchart_options';\r\nimport { inspectOptionsTab } from './inspect_options';\r\nimport RulesHandler from './rulesHandler';\r\nimport FlowchartHandler from './flowchartHandler';\r\n\r\nconst u = require('./utils');\r\n\r\nwindow.u = window.u || u;\r\n\r\nclass FlowchartCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $rootScope) {\r\n    super($scope, $injector);\r\n    this.version = '0.3.0';\r\n    this.$rootScope = $rootScope;\r\n    this.$scope = $scope;\r\n    this.unitFormats = kbn.getUnitFormats();\r\n    this.changedSource = true;\r\n    this.changedData = true;\r\n    this.changedOptions = true;\r\n    this.rulesHandler = undefined;\r\n    this.flowchartHandler = undefined;\r\n    this.series = [];\r\n    this.panelDefaults = {\r\n      version: this.version,\r\n      newFlag: true,\r\n      format: 'short',\r\n      valueName: 'current',\r\n      rulesData: [],\r\n      flowchartsData: [],\r\n    };\r\n\r\n    _.defaults(this.panel, this.panelDefaults);\r\n    this.panel.graphId = `flowchart_${this.panel.id}`;\r\n    this.containerDivId = `container_${this.panel.graphId}`;\r\n\r\n    // events\r\n    this.events.on('render', this.onRender.bind(this));\r\n    this.events.on('refresh', this.onRefresh.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\r\n  }\r\n\r\n  //\r\n  // EVENTS FCT\r\n  //\r\n  onInitEditMode() {\r\n    this.addEditorTab('Flowchart', flowchartOptionsTab, 2);\r\n    this.addEditorTab('Mapping', mappingOptionsTab, 3);\r\n    this.addEditorTab('Inspect', inspectOptionsTab, 4);\r\n  }\r\n\r\n  onRefresh() {\r\n    u.log(1, 'ctrl.onRefresh()');\r\n    this.onRender();\r\n  }\r\n\r\n  onRender() {\r\n    u.log(1, 'ctrl.onRender()');\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    u.log(1, 'ctrl.onDataReceived()');\r\n    u.log(0, 'ctrl.onDataReceived() dataList', dataList);\r\n    this.series = dataList.map(this.seriesHandler.bind(this));\r\n    u.log(0, 'ctrl.onDataReceived() this.series', dataList);\r\n    this.flowchartHandler.dataChanged();\r\n    this.render();\r\n  }\r\n\r\n  onDataError() {\r\n    this.series = [];\r\n    this.render();\r\n  }\r\n\r\n  onInitPanelActions(actions) {\r\n    actions.push({\r\n      text: 'Export SVG',\r\n      click: 'ctrl.exportSVG()'\r\n    });\r\n  }\r\n\r\n  //\r\n  // FUNCTIONS\r\n  //\r\n  link(scope, elem, attrs, ctrl) {\r\n    u.log(1, 'ctrl.link()');\r\n    // RULES\r\n    this.rulesHandler = new RulesHandler(scope, this.panel.rulesData);\r\n    if (this.panel.version === undefined) this.rulesHandler.import(this.panel.styles);\r\n    else if (this.panel.version !== this.version) {\r\n      this.rulesHandler.import(this.panel.styles);\r\n    }\r\n    if (this.panel.newFlag && this.rulesHandler.countRules() === 0) this.rulesHandler.addRule('.*');\r\n\r\n    // FLOWCHART\r\n    this.flowchartHandler = new FlowchartHandler(scope, elem, ctrl, this.panel.flowchartsData);\r\n    if (this.panel.version === undefined) this.flowchartHandler.import(this.panel.flowchartsData);\r\n    else if (this.panel.version !== this.version) {\r\n      this.flowchartHandler.import(this.panel.flowchartsData);\r\n    }\r\n    if (this.panel.newFlag && this.flowchartHandler.countFlowcharts() === 0) {\r\n      this.flowchartHandler.addFlowchart('Main');\r\n    }\r\n    this.panel.newFlag = false;\r\n    this.panel.version = this.version;\r\n  }\r\n\r\n  exportSVG() {\r\n    const scope = this.$scope.$new(true);\r\n    scope.panel = 'table';\r\n    this.publishAppEvent('show-modal', {\r\n      templateHtml: '<export-data-modal panel=\"panel\" data=\"tableData\"></export-data-modal>',\r\n      scope,\r\n      modalClass: 'modal--narrow',\r\n    });\r\n  }\r\n\r\n  setUnitFormat(subItem) {\r\n    this.panel.format = subItem.value;\r\n    this.refresh();\r\n  }\r\n\r\n  //\r\n  // Series\r\n  //\r\n\r\n  seriesHandler(seriesData) {\r\n    u.log(1, 'ctrl.seriesHandler()');\r\n    const series = new TimeSeries({\r\n      datapoints: seriesData.datapoints,\r\n      alias: seriesData.target,\r\n      unit: seriesData.unit,\r\n    });\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    const datapoints = seriesData.datapoints || [];\r\n    if (datapoints && datapoints.length > 0) {\r\n      const last = datapoints[datapoints.length - 1][1];\r\n      const from = this.range.from;\r\n      if (last - from < -10000) {\r\n        series.isOutsideRange = true;\r\n      }\r\n    }\r\n    return series;\r\n  }\r\n}\r\n\r\nexport { FlowchartCtrl, FlowchartCtrl as MetricsPanelCtrl };\r\n\r\nFlowchartCtrl.templateUrl = './partials/module.html';\r\n"],"file":"flowchart_ctrl.js"}