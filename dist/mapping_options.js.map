{"version":3,"sources":["../src/mapping_options.js"],"names":["MappingOptionsCtrl","$scope","editor","panelCtrl","ctrl","panel","rulesHandler","flowchartHandler","unitFormats","kbn","getUnitFormats","style","text","value","colorOn","textOn","textReplace","propTypes","textPattern","metricTypes","dateFormats","aggregationTypes","mappingTypes","getMetricNames","series","_","map","t","alias","getCellNamesForShape","cells","getNamesByProp","getCellNamesForText","getCellNamesForLink","render","column","subItem","unit","onOptionsChange","changedGraphFlag","mappingOptionsTab","$q","uiSegmentSrv","restrict","scope","templateUrl","plugin","id","controller"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport { plugin } from './plugin';\n\nexport class MappingOptionsCtrl {\n  /** @ngInject */\n  constructor($scope) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    $scope.rulesHandler = this.panelCtrl.rulesHandler;\n    $scope.flowchartHandler = this.panelCtrl.flowchartHandler;\n    this.flowchartHandler = $scope.ctrl.flowchartHandler;\n    this.unitFormats = kbn.getUnitFormats();\n    this.style = [\n      { text: 'Disabled', value: null },\n      { text: 'Stroke', value: 'strokeColor' },\n      { text: 'Fill', value: 'fillColor' },\n      { text: 'Text', value: 'fontColor' }\n    ];\n    this.colorOn = [{ text: 'Warning / Critical', value: 'wc' }, { text: 'Always', value: 'a' }];\n    this.textOn = [\n      { text: 'Never', value: 'n' },\n      { text: 'When Metric Displayed', value: 'wmd' },\n      { text: 'Warning / Critical', value: 'wc' },\n      { text: 'Critical Only', value: 'co' }\n    ];\n    this.textReplace = [\n      { text: 'All content', value: 'content' },\n      { text: 'Substring', value: 'pattern' }\n    ];\n    this.propTypes = [\n      { text: 'Id', value: 'id' }\n      // { text: \"Substring\", value: \"pattern\" }\n    ];\n    this.textPattern = '/.*/';\n    this.metricTypes = [\n      { text: 'Number', value: 'number' },\n      { text: 'String', value: 'string' },\n      { text: 'Date', value: 'date' }\n    ];\n    this.dateFormats = [\n      { text: 'YYYY-MM-DD HH:mm:ss', value: 'YYYY-MM-DD HH:mm:ss' },\n      { text: 'YYYY-MM-DD HH:mm:ss.SSS', value: 'YYYY-MM-DD HH:mm:ss.SSS' },\n      { text: 'MM/DD/YY h:mm:ss a', value: 'MM/DD/YY h:mm:ss a' },\n      { text: 'MMMM D, YYYY LT', value: 'MMMM D, YYYY LT' },\n      { text: 'YYYY-MM-DD', value: 'YYYY-MM-DD' }\n    ];\n    this.aggregationTypes = [\n      { text: 'First', value: 'first' },\n      { text: 'Last', value: 'current' },\n      { text: 'Min', value: 'min' },\n      { text: 'Max', value: 'max' },\n      { text: 'Sum', value: 'total' },\n      { text: 'Avg', value: 'avg' },\n      { text: 'Count', value: 'count' },\n      { text: 'Delta', value: 'delta' },\n      { text: 'Range', value: 'range' },\n      { text: 'Diff', value: 'diff' }\n    ];\n    this.mappingTypes = [{ text: 'Value to text', value: 1 }, { text: 'Range to text', value: 2 }];\n\n    this.getMetricNames = () => {\n      if (!this.panelCtrl.series) {\n        return [];\n      }\n      return _.map(this.panelCtrl.series, t => {\n        return t.alias;\n      });\n    };\n\n    this.getCellNamesForShape = () => {\n      let cells = this.flowchartHandler.getNamesByProp('id');\n      return _.map(cells, t => {\n        return t;\n      });\n    };\n\n    this.getCellNamesForText = () => {\n      let cells = this.flowchartHandler.getNamesByProp('id');\n      return _.map(cells, t => {\n        return t;\n      });\n    };\n\n    this.getCellNamesForLink = () => {\n      let cells = this.flowchartHandler.getNamesByProp('id');\n      return _.map(cells, t => {\n        return t;\n      });\n    };\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  setUnitFormat(column, subItem) {\n    column.unit = subItem.value;\n    this.onOptionsChange();\n  }\n\n  onOptionsChange() {\n    this.flowchartHandler.changedGraphFlag = true;\n    this.render();\n  }\n}\n\n/** @ngInject */\nexport function mappingOptionsTab($q, uiSegmentSrv) {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/plugins/' + plugin.id + '/partials/mapping_options.html',\n    controller: MappingOptionsCtrl\n  };\n}\n"],"file":"mapping_options.js"}