{"version":3,"sources":["../../../../src/mxgraph/javascript/dist/build.js"],"names":["root","factory","define","amd","module","exports","mxgraph","opts","name","__mxOutput","mxClient","VERSION","IS_IE","navigator","userAgent","indexOf","IS_IE6","IS_IE11","match","IS_EDGE","IS_QUIRKS","document","documentMode","IS_EM","createElement","VML_PREFIX","OFFICE_PREFIX","IS_NS","IS_OP","IS_OT","IS_SF","IS_IOS","IS_GC","IS_CHROMEAPP","window","chrome","app","runtime","IS_FF","IS_MT","IS_SVG","NO_FO","createElementNS","IS_VML","appName","toUpperCase","IS_WIN","appVersion","IS_MAC","IS_TOUCH","documentElement","IS_POINTER","PointerEvent","IS_LOCAL","location","href","defaultBundles","isBrowserSupported","link","rel","doc","write","setAttribute","head","getElementsByTagName","appendChild","loadResources","fn","lan","pending","length","callback","i","mxResources","add","include","src","mxLoadResources","mxForceIncludes","mxResourceExtension","mxLoadStylesheets","mxBasePath","substring","basePath","mxImageBasePath","imageBasePath","mxLanguage","language","userLanguage","mxDefaultLanguage","defaultLanguage","mxLanguages","languages","namespaces","styleSheets","node","type","styleSheet","cssText","createStyleSheet","undefined","mxLog","consoleName","TRACE","DEBUG","WARN","buffer","init","body","title","table","tbody","tr","td","style","verticalAlign","textarea","height","resize","value","compatMode","width","addButton","evt","info","content","mxUtils","getInnerHtml","debug","copy","err","alert","popup","h","w","innerWidth","innerHeight","clientHeight","clientWidth","mxWindow","Math","max","setMaximizable","setScrollable","setResizable","setClosable","destroyOnClose","elt","getElement","resizeHandler","sender","offsetHeight","addListener","mxEvent","RESIZE_END","MAXIMIZE","NORMALIZE","writeln","toString","lab","funct","button","isVisible","show","setVisible","visible","enter","string","Date","getTime","leave","t0","dt","apply","arguments","warn","visibility","scrollTop","scrollHeight","mxObjectIdentity","FIELD_NAME","counter","get","obj","ctor","getFunctionName","constructor","clear","mxDictionary","prototype","map","key","id","put","previous","remove","getKeys","result","push","getValues","visit","visitor","resources","extension","resourcesEncoded","loadDefaultBundle","loadSpecialBundle","isLanguageSupported","getDefaultBundle","basename","getSpecialBundle","dash","toLowerCase","mxConstants","NONE","defaultBundle","specialBundle","req","parse","getText","load","isReady","e","text","lines","split","charAt","index","idx","charCodeAt","replace","unescape","params","defaultValue","replacePlaceholders","c","parseInt","join","mxPoint","x","y","equals","clone","mxRectangle","call","setRect","getCenterX","getCenterY","rect","minX","min","minY","maxX","maxY","intersect","r1","r2","b1","b2","grow","amount","getPoint","rotate90","t","tmp","fromRectangle","mxEffects","animateChanges","graph","changes","done","maxStep","step","animate","isRequired","change","mxGeometryChange","mxTerminalChange","mxValueChange","mxChildChange","mxStyleChange","state","getView","getState","cell","child","model","isEdge","setOpacity","shape","scale","dx","geometry","dy","sx","sy","cellRenderer","redraw","cascadeOpacity","setTimeout","delay","opacity","childCount","getChildCount","getChildAt","childState","edges","getEdges","edgeState","fadeOut","from","isEnabled","f","parentNode","removeChild","errorResource","closeResource","errorImage","removeCursors","element","cursor","children","childNodes","getCurrentStyle","currentStyle","getComputedStyle","parseCssNumber","parseFloat","isNaN","setPrefixedStyle","prefix","hasScrollbars","overflow","bind","scope","eval","expr","_mxJavaScriptExpression","message","findNode","attr","nodeType","NODETYPE_ELEMENT","getAttribute","firstChild","nextSibling","str","trim","test","ltrim","idx2","array","forEach","splice","isNode","nodeName","attributeName","attributeValue","isAncestorNode","ancestor","parent","getChildNodes","importNode","allChildren","newNode","attributes","createTextNode","createXmlDocument","implementation","createDocument","ActiveXObject","parseXml","DOMParser","xml","parser","parseFromString","async","validateOnParse","resolveExternals","loadXML","clearSelection","selection","empty","getSelection","removeAllRanges","getPrettyXml","tab","indent","NODETYPE_TEXT","getTextContent","htmlEntities","attrs","val","removeWhitespace","before","previousSibling","next","s","newline","String","isVml","tagUrn","getXml","linefeed","XMLSerializer","xmlSerializer","serializeToString","extractTextWithWhitespace","elems","blocks","ret","doExtract","elts","innerHTML","elem","nodeValue","replaceTrailingNewlines","pattern","postfix","innerText","textContent","setTextContent","serializer","getOuterHtml","outerHTML","ownerDocument","br","count","label","para","p","addTransparentBackgroundFilter","filter","linkAction","editor","action","pad","execute","linkInvoke","functName","arg","a","color","textDecoration","paddingLeft","fit","left","offsetLeft","offsetWidth","offset","getDocumentScrollOrigin","sl","st","b","d","right","top","offsetTop","bottom","url","mxXmlRequest","send","onload","onerror","binary","timeout","ontimeout","setBinary","getAll","urls","remain","errors","status","getStatus","post","submit","target","simulate","loadInto","onreadystatechange","readyState","addEventListener","getValue","getNumber","Number","getColor","transients","shallow","equalPoints","equalEntries","removeDuplicates","arr","dict","extend","superCtor","output","toRadians","deg","PI","toDegree","rad","arcToCurves","x0","y0","angle","largeArcFlag","sweepFlag","fS","psai","abs","ctx","cty","cpsi","cos","spsi","sin","rxd","ryd","rxdd","rydd","r1x","r2y","lamda","sds","sqrt","seif","txd","tyd","tx","ty","atan2","s1","dr","sse","seg","ceil","segr","cpsir1","cpsir2","spsir1","spsir2","mc","ms","x2","y2","x3","y3","n","getBoundingBox","rotation","cx","p1","p2","p3","p4","getRotatedPoint","pt","x1","y1","getPortConstraints","terminal","edge","source","STYLE_PORT_CONSTRAINT","STYLE_SOURCE_PORT_CONSTRAINT","STYLE_TARGET_PORT_CONSTRAINT","directions","returnValue","DIRECTION_MASK_NONE","constraintRotationEnabled","STYLE_PORT_CONSTRAINT_ROTATION","STYLE_ROTATION","quad","DIRECTION_NORTH","DIRECTION_MASK_NORTH","DIRECTION_MASK_EAST","DIRECTION_MASK_SOUTH","DIRECTION_MASK_WEST","DIRECTION_WEST","DIRECTION_SOUTH","DIRECTION_EAST","reversePortConstraints","constraint","findNearestSegment","absolutePoints","last","current","dist","ptSegDistSq","getDirectedBounds","m","flipH","flipV","STYLE_DIRECTION","STYLE_FLIPH","STYLE_FLIPV","round","m2","getPerimeterPoint","pts","center","point","intersection","ip","distSq","rectangleIntersectsSegment","bounds","contains","intersects","tw","th","rw","rh","rx","ry","intersectsHotspot","hotspot","cy","start","STYLE_STARTSIZE","view","STYLE_HORIZONTAL","alpha","getOffset","container","scrollOffset","fixed","position","r","getBoundingClientRect","scrollLeft","wnd","defaultView","parentWindow","pageXOffset","pageYOffset","getScrollOrigin","includeAncestors","includeDocument","origin","convertPoint","chars","RegExp","rtrim","isNumeric","isFinite","isInteger","mod","denom","nume_a","nume_b","ua","ub","px","py","dotprod","projlenSq","lenSq","ptLineDist","relativeCcw","ccw","createImage","imageNode","borderStyle","sortCells","cells","ascending","lookup","sort","o1","o2","mxCellPath","create","PATH_SEPARATOR","comp","compare","getStylename","pairs","stylename","getStylenames","indexOfStylename","tokens","pos","addStylename","removeStylename","removeAllStylenames","setCellStyles","beginUpdate","setStyle","getStyle","endUpdate","isValue","sep","setCellStyleFlags","flag","setStyleFlag","cont","getAlignmentAsPoint","align","valign","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_MIDDLE","ALIGN_BOTTOM","getSizeForString","fontSize","fontFamily","textWidth","DEFAULT_FONTSIZE","DEFAULT_FONTFAMILY","div","lineHeight","LINE_HEIGHT","display","zoom","whiteSpace","size","getViewXml","getModel","getRoot","eventsEnabled","isEventsEnabled","setEventsEnabled","drawPane","overlayPane","dialect","DIALECT_SVG","NS_SVG","canvas","cloneNode","translate","getTranslate","temp","mxTemporaryCellStates","enc","mxCodec","encode","destroy","getScaleForPageCount","pageCount","pageFormat","border","PAGE_FORMAT_A4_PORTRAIT","availablePageWidth","availablePageHeight","graphBounds","getGraphBounds","sc","getScale","graphWidth","graphHeight","pageFormatAspectRatio","graphAspectRatio","pagesAspectRatio","pageRoot","pagesAspectRatioSqrt","numRowPages","numColumnPages","scaleChange","currentTotalPages","numLoops","roundRowDownProportion","floor","roundColumnDownProportion","posterWidth","open","html","base","close","links","styles","outer","svg","ownerSVGElement","minWidth","minHeight","printScreen","print","focus","isInternalWindow","pre","prompt","confirm","error","icon","padding","img","makeDraggable","graphF","dragElement","autoscroll","scalePreview","highlightDropTargets","getDropTarget","dragSource","mxDragSource","dragOffset","TOOLTIP_VERTICAL_OFFSET","setGuidesEnabled","getGraphForEvent","createDragElement","createPreviewElement","DEFAULT_HOTSPOT","MIN_HOTSPOT_SIZE","MAX_HOTSPOT_SIZE","RENDERING_HINT_EXACT","RENDERING_HINT_FASTER","RENDERING_HINT_FASTEST","DIALECT_VML","DIALECT_MIXEDHTML","DIALECT_PREFERHTML","DIALECT_STRICTHTML","NS_XHTML","NS_XLINK","SHADOWCOLOR","VML_SHADOWCOLOR","SHADOW_OFFSET_X","SHADOW_OFFSET_Y","SHADOW_OPACITY","NODETYPE_ATTRIBUTE","NODETYPE_CDATA","NODETYPE_ENTITY_REFERENCE","NODETYPE_ENTITY","NODETYPE_PROCESSING_INSTRUCTION","NODETYPE_COMMENT","NODETYPE_DOCUMENT","NODETYPE_DOCUMENTTYPE","NODETYPE_DOCUMENT_FRAGMENT","NODETYPE_NOTATION","DEFAULT_VALID_COLOR","DEFAULT_INVALID_COLOR","OUTLINE_HIGHLIGHT_COLOR","OUTLINE_HIGHLIGHT_STROKEWIDTH","HIGHLIGHT_STROKEWIDTH","HIGHLIGHT_SIZE","HIGHLIGHT_OPACITY","CURSOR_MOVABLE_VERTEX","CURSOR_MOVABLE_EDGE","CURSOR_LABEL_HANDLE","CURSOR_TERMINAL_HANDLE","CURSOR_BEND_HANDLE","CURSOR_VIRTUAL_BEND_HANDLE","CURSOR_CONNECT","HIGHLIGHT_COLOR","CONNECT_TARGET_COLOR","INVALID_CONNECT_TARGET_COLOR","DROP_TARGET_COLOR","VALID_COLOR","INVALID_COLOR","EDGE_SELECTION_COLOR","VERTEX_SELECTION_COLOR","VERTEX_SELECTION_STROKEWIDTH","EDGE_SELECTION_STROKEWIDTH","VERTEX_SELECTION_DASHED","EDGE_SELECTION_DASHED","GUIDE_COLOR","GUIDE_STROKEWIDTH","OUTLINE_COLOR","OUTLINE_STROKEWIDTH","HANDLE_SIZE","LABEL_HANDLE_SIZE","HANDLE_FILLCOLOR","HANDLE_STROKECOLOR","LABEL_HANDLE_FILLCOLOR","CONNECT_HANDLE_FILLCOLOR","LOCKED_HANDLE_FILLCOLOR","OUTLINE_HANDLE_FILLCOLOR","OUTLINE_HANDLE_STROKECOLOR","DEFAULT_TEXT_DIRECTION","WORD_WRAP","ABSOLUTE_LINE_HEIGHT","DEFAULT_FONTSTYLE","DEFAULT_STARTSIZE","DEFAULT_MARKERSIZE","DEFAULT_IMAGESIZE","ENTITY_SEGMENT","RECTANGLE_ROUNDING_FACTOR","LINE_ARCSIZE","ARROW_SPACING","ARROW_WIDTH","ARROW_SIZE","PAGE_FORMAT_A4_LANDSCAPE","PAGE_FORMAT_LETTER_PORTRAIT","PAGE_FORMAT_LETTER_LANDSCAPE","STYLE_PERIMETER","STYLE_SOURCE_PORT","STYLE_TARGET_PORT","STYLE_OPACITY","STYLE_FILL_OPACITY","STYLE_STROKE_OPACITY","STYLE_TEXT_OPACITY","STYLE_TEXT_DIRECTION","STYLE_OVERFLOW","STYLE_ORTHOGONAL","STYLE_EXIT_X","STYLE_EXIT_Y","STYLE_EXIT_PERIMETER","STYLE_ENTRY_X","STYLE_ENTRY_Y","STYLE_ENTRY_PERIMETER","STYLE_WHITE_SPACE","STYLE_FILLCOLOR","STYLE_POINTER_EVENTS","STYLE_SWIMLANE_FILLCOLOR","STYLE_MARGIN","STYLE_GRADIENTCOLOR","STYLE_GRADIENT_DIRECTION","STYLE_STROKECOLOR","STYLE_SEPARATORCOLOR","STYLE_STROKEWIDTH","STYLE_ALIGN","STYLE_VERTICAL_ALIGN","STYLE_LABEL_WIDTH","STYLE_LABEL_POSITION","STYLE_VERTICAL_LABEL_POSITION","STYLE_IMAGE_ASPECT","STYLE_IMAGE_ALIGN","STYLE_IMAGE_VERTICAL_ALIGN","STYLE_GLASS","STYLE_IMAGE","STYLE_IMAGE_WIDTH","STYLE_IMAGE_HEIGHT","STYLE_IMAGE_BACKGROUND","STYLE_IMAGE_BORDER","STYLE_NOLABEL","STYLE_NOEDGESTYLE","STYLE_LABEL_BACKGROUNDCOLOR","STYLE_LABEL_BORDERCOLOR","STYLE_LABEL_PADDING","STYLE_INDICATOR_SHAPE","STYLE_INDICATOR_IMAGE","STYLE_INDICATOR_COLOR","STYLE_INDICATOR_STROKECOLOR","STYLE_INDICATOR_GRADIENTCOLOR","STYLE_INDICATOR_SPACING","STYLE_INDICATOR_WIDTH","STYLE_INDICATOR_HEIGHT","STYLE_INDICATOR_DIRECTION","STYLE_SHADOW","STYLE_SEGMENT","STYLE_ENDARROW","STYLE_STARTARROW","STYLE_ENDSIZE","STYLE_SWIMLANE_LINE","STYLE_ENDFILL","STYLE_STARTFILL","STYLE_DASHED","STYLE_DASH_PATTERN","STYLE_FIX_DASH","STYLE_ROUNDED","STYLE_CURVED","STYLE_ARCSIZE","STYLE_ABSOLUTE_ARCSIZE","STYLE_SOURCE_PERIMETER_SPACING","STYLE_TARGET_PERIMETER_SPACING","STYLE_PERIMETER_SPACING","STYLE_SPACING","STYLE_SPACING_TOP","STYLE_SPACING_LEFT","STYLE_SPACING_BOTTOM","STYLE_SPACING_RIGHT","STYLE_ANCHOR_POINT_DIRECTION","STYLE_ELBOW","STYLE_FONTCOLOR","STYLE_FONTFAMILY","STYLE_FONTSIZE","STYLE_FONTSTYLE","STYLE_ASPECT","STYLE_AUTOSIZE","STYLE_FOLDABLE","STYLE_EDITABLE","STYLE_BACKGROUND_OUTLINE","STYLE_BENDABLE","STYLE_MOVABLE","STYLE_RESIZABLE","STYLE_RESIZE_WIDTH","STYLE_RESIZE_HEIGHT","STYLE_ROTATABLE","STYLE_CLONEABLE","STYLE_DELETABLE","STYLE_SHAPE","STYLE_EDGE","STYLE_JETTY_SIZE","STYLE_SOURCE_JETTY_SIZE","STYLE_TARGET_JETTY_SIZE","STYLE_LOOP","STYLE_ORTHOGONAL_LOOP","STYLE_ROUTING_CENTER_X","STYLE_ROUTING_CENTER_Y","FONT_BOLD","FONT_ITALIC","FONT_UNDERLINE","SHAPE_RECTANGLE","SHAPE_ELLIPSE","SHAPE_DOUBLE_ELLIPSE","SHAPE_RHOMBUS","SHAPE_LINE","SHAPE_IMAGE","SHAPE_ARROW","SHAPE_ARROW_CONNECTOR","SHAPE_LABEL","SHAPE_CYLINDER","SHAPE_SWIMLANE","SHAPE_CONNECTOR","SHAPE_ACTOR","SHAPE_CLOUD","SHAPE_TRIANGLE","SHAPE_HEXAGON","ARROW_CLASSIC","ARROW_CLASSIC_THIN","ARROW_BLOCK","ARROW_BLOCK_THIN","ARROW_OPEN","ARROW_OPEN_THIN","ARROW_OVAL","ARROW_DIAMOND","ARROW_DIAMOND_THIN","ALIGN_LEFT","ALIGN_TOP","TEXT_DIRECTION_DEFAULT","TEXT_DIRECTION_AUTO","TEXT_DIRECTION_LTR","TEXT_DIRECTION_RTL","DIRECTION_MASK_ALL","ELBOW_VERTICAL","ELBOW_HORIZONTAL","EDGESTYLE_ELBOW","EDGESTYLE_ENTITY_RELATION","EDGESTYLE_LOOP","EDGESTYLE_SIDETOSIDE","EDGESTYLE_TOPTOBOTTOM","EDGESTYLE_ORTHOGONAL","EDGESTYLE_SEGMENT","PERIMETER_ELLIPSE","PERIMETER_RECTANGLE","PERIMETER_RHOMBUS","PERIMETER_HEXAGON","PERIMETER_TRIANGLE","mxEventObject","properties","consumed","getName","getProperties","getProperty","isConsumed","consume","mxMouseEvent","sourceState","graphX","graphY","getEvent","getSource","isSource","getX","getClientX","getY","getClientY","getGraphX","getGraphY","getCell","isPopupTrigger","preventDefault","mxEventSource","eventSource","setEventSource","eventListeners","getEventSource","removeListener","fireEvent","args","listen","updateListenerList","eventName","mxListenerList","entry","attachEvent","updateListener","listenerCount","removeEventListener","detachEvent","removeAllListeners","list","addGestureListeners","startListener","moveListener","endListener","removeGestureListeners","redirectMouseEvents","down","move","up","dblClick","fireMouseEvent","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","release","addMouseWheelListener","wheelHandler","event","delta","detail","wheelDelta","disableContextMenu","srcElement","isTouchEvent","pointerType","MSPOINTER_TYPE_TOUCH","mozInputSource","isPenEvent","MSPOINTER_TYPE_PEN","isMultiTouchEvent","touches","isMouseEvent","MSPOINTER_TYPE_MOUSE","isLeftMouseButton","buttons","which","isMiddleMouseButton","isRightMouseButton","isControlDown","isShiftDown","isMetaDown","isAltDown","shiftKey","altKey","ctrlKey","metaKey","getMainEvent","changedTouches","clientX","clientY","stopPropagation","cancelBubble","LABEL_HANDLE","ROTATION_HANDLE","CUSTOM_HANDLE","VIRTUAL_HANDLE","ACTIVATE","RESIZE_START","RESIZE","MOVE_START","MOVE","MOVE_END","PAN_START","PAN","PAN_END","MINIMIZE","HIDE","SHOW","CLOSE","DESTROY","REFRESH","SIZE","SELECT","FIRED","FIRE_MOUSE_EVENT","GESTURE","TAP_AND_HOLD","GET","RECEIVE","CONNECT","DISCONNECT","SUSPEND","RESUME","MARK","ROOT","POST","OPEN","SAVE","BEFORE_ADD_VERTEX","ADD_VERTEX","AFTER_ADD_VERTEX","DONE","EXECUTE","EXECUTED","BEGIN_UPDATE","START_EDIT","END_UPDATE","END_EDIT","BEFORE_UNDO","UNDO","REDO","CHANGE","NOTIFY","LAYOUT_CELLS","CLICK","SCALE","TRANSLATE","SCALE_AND_TRANSLATE","UP","DOWN","ADD","REMOVE","CLEAR","ADD_CELLS","CELLS_ADDED","MOVE_CELLS","CELLS_MOVED","RESIZE_CELLS","CELLS_RESIZED","TOGGLE_CELLS","CELLS_TOGGLED","ORDER_CELLS","CELLS_ORDERED","REMOVE_CELLS","CELLS_REMOVED","GROUP_CELLS","UNGROUP_CELLS","REMOVE_CELLS_FROM_PARENT","FOLD_CELLS","CELLS_FOLDED","ALIGN_CELLS","LABEL_CHANGED","CONNECT_CELL","CELL_CONNECTED","SPLIT_EDGE","FLIP_EDGE","START_EDITING","EDITING_STARTED","EDITING_STOPPED","ADD_OVERLAY","REMOVE_OVERLAY","UPDATE_CELL_SIZE","ESCAPE","DOUBLE_CLICK","START","RESET","method","username","password","withCredentials","request","decodeSimulateValues","isBinary","responseText","getDocumentElement","responseXML","XMLHttpRequest","overrideMimeType","onreadystatechaange","setRequestHeaders","setRequestHeader","old","onbeforeunload","form","pars","decodeURIComponent","mxClipboard","STEPSIZE","insertCount","setCells","getCells","isEmpty","cut","removeCells","getSelectionCells","getExportableCells","getTopmostCells","cloneCells","paste","getImportableCells","getDefaultParent","importCells","setSelectionCells","minimizable","movable","replaceNode","installMaximizeHandler","installMinimizeHandler","installCloseHandler","setMinimizable","setTitle","installMoveHandler","replaceChild","closeImage","minimizeImage","normalizeImage","maximizeImage","resizeImage","minimumSize","contentHeightCorrection","className","touchAction","contentWrapper","activator","activate","hide","scrollable","activeWindow","zIndex","previousWindow","isResizable","resizable","startX","startY","dragHandler","dropHandler","setSize","minimize","getMinimumSize","marginLeft","minimized","maxDisplay","maximize","minSize","maximizable","maximized","minDisplay","docHeight","setLocation","closeImg","setImage","image","marginRight","marginTop","insertBefore","closable","mxForm","getTable","addButtons","okFunct","cancelFunct","addText","input","addField","addCheckbox","checked","addTextarea","rows","addCombo","isMultiSelect","select","addOption","combo","isSelected","option","mxImage","mxDivResizer","resizeWidth","resizeHeight","handlingResize","getDocumentWidth","getDocumentHeight","l","mouseDown","eventConsumer","evtName","me","previewElement","enabled","currentGraph","currentDropTarget","currentPoint","currentGuide","currentHighlight","guidesEnabled","gridEnabled","dragElementZIndex","dragElementOpacity","checkEventSource","setEnabled","isGuidesEnabled","isGridEnabled","setGridEnabled","getCellAt","isActive","mouseMoveHandler","reset","dragExit","removeDragElement","removeListeners","stopDrag","startDrag","mouseMove","mouseUpHandler","mouseUp","pointerEvents","getElementForEvent","elementFromPoint","graphContainsEvent","dragEnter","dragOver","drop","isMouseDown","isMouseTrigger","mxGuide","graphHandler","getGuideStates","mxCellHighlight","panDx","panDy","autoScroll","scrollPointToVisible","autoExtend","isDropEnabled","highlight","isGridEnabledEvent","hideGuide","isEnabledForEvent","off","gridSize","snap","previewOffset","dropTarget","mxToolbar","noReset","updateDefaultMode","addItem","pressedIcon","factoryMethod","initialClassName","mouseHandler","backgroundColor","menu","mxPopupMenu","currentImg","isMenuShowing","hideMenu","addActionCombo","options","selectedIndex","addSwitchMode","altIcon","selectedMode","defaultMode","selectMode","addMode","toggle","defaultFunction","domNode","resetMode","forced","addSeparator","addBreak","addLine","hr","mxUndoableEdit","significant","undone","redone","isSignificant","notify","die","undo","redo","mxUndoManager","history","indexOfNextAdd","canUndo","edit","canRedo","undoableEditHappened","undoableEdit","shift","edits","mxUrlConverter","baseUrl","baseDomain","updateBaseUrl","protocol","host","pathname","lastIndexOf","getBaseUrl","setBaseUrl","getBaseDomain","setBaseDomain","isRelativeUrl","convert","mxPanningManager","thread","active","tdx","tdy","t0x","t0y","scrollbars","mouseListener","stop","addMouseListener","mouseUpListener","createThread","setInterval","panGraph","getDx","getDy","panTo","handleMouseOut","damper","clearInterval","setTranslate","removeMouseListener","submenuImage","useLeftButtonForPopup","itemCount","autoExpand","smartSeparators","labels","iconCls","willAddSeparator","containsItems","col1","col2","col3","paddingRight","textAlign","createSubmenu","currentSelection","eventReceiver","activeRow","hideSubmenu","showSubmenu","createRange","addCheckmark","item","backgroundImage","backgroundRepeat","backgroundPosition","row","force","showMenu","mxAutoSaveManager","changeHandler","graphModelChanged","setGraph","autoSaveDelay","autoSaveThrottle","autoSaveThreshold","ignoredChanges","lastSnapshot","save","now","mxAnimation","isRunning","startAnimation","updateAnimation","stopAnimation","mxMorphing","steps","ease","mxCellStatePreview","animateCell","recurse","getDelta","isVertex","moveState","stopRecursion","getOriginForCell","getParent","geo","getCellGeometry","relative","pgeo","mxImageBundle","alt","images","putImage","fallback","getImage","mxImageExport","includeOverlays","drawState","visitStatesRecursive","drawCellState","drawOverlays","getLinkForCellState","setLink","drawShape","drawText","mxShape","checkBounds","paint","restore","overlays","mxAbstractCanvas2D","converter","createUrlConverter","states","path","rotateHtml","lastX","lastY","moveOp","lineOp","quadOp","curveOp","closeOp","createState","fillAlpha","strokeAlpha","fillColor","gradientFillAlpha","gradientColor","gradientAlpha","gradientDirection","strokeColor","strokeWidth","dashed","dashPattern","fixDash","lineCap","lineJoin","miterLimit","fontColor","fontBackgroundColor","fontBorderColor","fontStyle","shadow","shadowColor","shadowAlpha","shadowDx","shadowDy","rotationCx","rotationCy","format","addOp","rotatePoint","theta","pop","rotate","setAlpha","setFillAlpha","setStrokeAlpha","setFillColor","setGradient","color1","color2","direction","alpha1","alpha2","setStrokeColor","setStrokeWidth","setDashed","setDashPattern","setLineCap","setLineJoin","setMiterLimit","setFontColor","setFontBackgroundColor","setFontBorderColor","setFontSize","setFontFamily","setFontStyle","setShadow","setShadowColor","setShadowAlpha","setShadowOffset","begin","moveTo","lineTo","quadTo","curveTo","arcTo","curves","end","mxXmlCanvas2D","writeDefaults","textEnabled","compressed","toFixed","roundrect","ellipse","aspect","wrap","clip","dir","stroke","fill","fillAndStroke","mxSvgCanvas2D","styleEnabled","gradients","defs","createStyle","useDomParser","matchHtmlAlignment","foEnabled","foAltText","foOffset","textOffset","imageOffset","strokeTolerance","minStrokeWidth","refCount","blockImagePointerEvents","lineHeightCorrection","pointerEventsValue","fontMetricsPadding","cacheOffsetSize","hash","tagName","namespace","createAlternateContent","fo","createGradientId","getSvgGradient","gradient","tmpId","getElementById","createSvgGradient","op","addNode","filled","stroked","updateFill","updateStroke","transform","createShadow","createTolerance","originalRoot","IS_CHROME_APP","getCurrentStrokeWidth","sw","updateStrokeAttributes","createDashPattern","pat","tol","removeAttribute","setAttributeNS","convertHtml","xd","xb","adoptNode","ta","createDiv","lh","css","invalidateCachedOffsetSize","mxCachedOffsetWidth","mxCachedFinalOffsetWidth","mxCachedFinalOffsetHeight","updateText","group","maxHeight","maxWidth","ow","oh","padX","padY","sizeDiv","div2","wordWrap","padDx","ws","plainText","createClip","updateFont","anchor","textHeight","addTextBackground","bbox","getBBox","ie","fontWeight","mxVmlCanvas2D","rotatedHtmlBackground","vmlScale","createVmlElement","coordsize","strokeweight","strokecolor","createStroke","createFill","createTransparentFill","flip","endcap","joinstyle","miterlimit","dashstyle","getVmlDashStyle","tok","createShadowStroke","createShadowFill","cpx0","cpy0","qpx1","qpy1","cpx3","cpy3","cpx1","cpy1","cpx2","cpy2","createRect","box","margin","inner","rot","real_cos","real_sin","top_fix","left_fix","divParent","textpathok","v","tp","on","setStates","horizontal","vertical","guideX","guideY","getGuideTolerance","createGuideShape","guide","mxPolyline","isDashed","snapX","override","ttX","stateX","valueX","getOverlayPane","overrideX","snapY","middle","ttY","stateY","valueY","overrideY","trx","tt","points","getGuideColor","scrollWidth","mxStencil","desc","parseDescription","parseConstraints","defaultLocalized","allowEval","constraints","w0","h0","bgNode","fgNode","strokewidth","conns","parseConstraint","perimeter","mxConnectionConstraint","evaluateTextAttribute","attribute","evaluateAttribute","loc","computeAspect","minScale","drawChildren","outline","disableShadow","drawNode","inverse","childNode","arcsize","factor","stencil","mxStencilRegistry","getStencil","initStyles","antiAlias","minSvgStrokeWidth","boundingBox","svgStrokeTolerance","svgPointerEvents","shapePointerEvents","stencilPointerEvents","useSvgBoundingBox","fillOpacity","strokeOpacity","isParseVml","isHtmlAllowed","getSvgScreenOffset","createSvg","createHtml","createVml","reconfigure","updateBoundsFromPoints","redrawHtmlShape","redrawShape","updateBoundingBox","lastChild","getLabelBounds","isPaintBoundsInverted","getLabelMargins","createVmlGroup","createCanvas","insertAdjacentHTML","destroyCanvas","createSvgCanvas","updateVmlContainer","createVmlCanvas","updateHtmlBounds","updateHtmlFilters","updateHtmlColors","isShadow","east","south","west","north","borderColor","borderWidth","setTransparentBackgroundImage","mxRefCount","releaseSvgGradients","oldGradients","strokeDrawn","updateTransform","configureCanvas","bg","bb","createBoundingBox","createTransparentSvgRectangle","paintEdgeShape","paintVertexShape","getGradientBounds","getShapeRotation","paintBackground","paintForeground","getArcSize","paintGlassEffect","arc","isRounded","addPoints","rounded","arcSize","exclude","initialMove","pe","slice","p0","wp","nx1","ny1","nx2","ny2","resetStyles","spacing","startSize","endSize","startArrow","endArrow","glass","setCursor","getCursor","isRoundable","augmentBoundingBox","getRotation","getTextRotation","mxText","verticalTextRotation","grads","stencils","addStencil","mxMarker","markers","addMarker","createMarker","unitX","unitY","createArrow","widthFactor","endOffsetX","endOffsetY","createOpenArrow","diamond","swFactor","tk","mxActor","redrawPath","mxCloud","mxRectangleShape","events","mxEllipse","mxDoubleEllipse","mxRhombus","hw","hh","paintLine","paintCurvedLine","ix","iy","mxArrow","arrowWidth","arrow","nx","ny","basex","basey","floorx","floory","p0x","p0y","p1x","p1y","p2x","p2y","p3x","p3y","p5x","p5y","mxArrowConnector","arrowSpacing","getEdgeWidth","isMarkerStart","getStartArrowWidth","isMarkerEnd","getEndArrowWidth","startWidth","endWidth","edgeWidth","openEnded","isOpenEnded","markerStart","markerEnd","isArrowRounded","i0","orthx","orthy","fns","startNx","startNy","paintMarker","outStartX","outStartY","inEndX","inEndY","dx1","dy1","dist1","tmp1","dist2","strokeWidthFactor","angleFactor","outX","outY","inX","inY","c1x","c1y","c2x","c2y","inStartX","inStartY","ptX","ptY","widthArrowRatio","spaceX","spaceY","family","spacingTop","spacingRight","spacingBottom","spacingLeft","background","clipped","labelPadding","textDirection","updateMargin","baseSpacingTop","baseSpacingBottom","baseSpacingLeft","baseSpacingRight","replaceLinefeeds","ignoreClippedStringSize","ignoreStringSize","textWidthPadding","lastValue","cacheEnabled","update","unscaledWidth","lastUnscaledWidth","realHtml","fmt","getAutoDirection","updateSize","textDiv","updateHtmlFilter","updateHtmlTransform","exec","updateInnerHtml","divs","unrotatedBoundingBox","updateValue","bd","enableWrap","prev","getSpacing","mxTriangle","mxHexagon","mxLine","mid","mxImageShape","preserveImageAspect","useVml","mxLabel","imageSize","indicatorSize","indicatorSpacing","indicatorShape","indicator","indicatorColor","indicatorStrokeColor","indicatorGradientColor","indicatorDirection","paintImage","paintIndicator","getImageBounds","getIndicatorBounds","indicatorImage","hasChildNodes","mxCylinder","getCylinderSize","isForeground","mxConnector","sourceMarker","targetMarker","mxSwimlane","getTitleSize","isHorizontal","shapeVertical","realHorizontal","realFlipH","realFlipV","swimlaneLine","paintSwimlane","paintRoundedSwimlane","paintSeparator","paintDivider","mxGraphLayout","useBoundingBox","moveCell","getGraph","getConstraint","getCellStyle","traverse","vertex","directed","func","visited","edgeCount","getEdgeCount","getEdgeAt","getTerminal","getVisibleTerminal","isAncestor","traverseAncestors","isVertexMovable","isCellMovable","isVertexIgnored","isCellVisible","isEdgeIgnored","setEdgeStyleEnabled","setOrthogonalEdge","getParentOffset","parentGeo","getGeometry","setEdgePoints","mxGeometry","setRelative","parentOffset","setGeometry","setVertexLocation","getVertexBounds","dx0","dy0","arrangeGroups","topBorder","rightBorder","bottomBorder","leftBorder","updateGroupBounds","WeightedCellSorter","weightedValue","nudge","rankIndex","mxStackLayout","marginBottom","keepFirstLocation","resizeParent","resizeParentMax","resizeLast","borderCollapse","pstate","getIndex","getParentSize","isLayer","currentRoot","fillValue","isSwimlane","horz","childStyle","setChildGeometry","isCellCollapsed","updateParentGeometry","geo2","pgeo2","mxPartitionLayout","resizeVertices","other","getStartSize","mxCompactTreeLayout","invert","maintainParentLocation","groupPadding","groupPaddingTop","groupPaddingRight","groupPaddingBottom","groupPaddingLeft","parentsChanged","moveTree","levelDistance","nodeDistance","resetEdges","prefHozEdgeSep","prefVertEdgeOff","minEdgeJetty","channelBuffer","edgeRouting","sortEdges","alignRanks","maxRankHeight","getConnections","roots","findTreeRoots","Object","parentX","parentY","dfs","findRankHeights","setCellHeights","layout","g","horizontalLayout","verticalLayout","moveNode","adjustParents","localEdgeProcessing","sortOutgoingEdges","e1","e2","end1","end2","rank","createNode","out","attachParent","layoutLeaf","offsetX","offsetY","siblingOffset","contour","upperHead","createLine","lowerHead","upperTail","lowerTail","sum","merge","total","upper","lower","bridge","a1","a2","line1","line2","line","processNodeOutgoing","parentCell","sortedCells","sortingCriterion","availableWidth","requiredWidth","edgeSpacing","currentXOffset","currentYOffset","maxYOffset","parentBounds","j","childCell","childBounds","getEdgesBetween","newPoints","mxRadialTreeLayout","angleOffset","rootx","rooty","autoRadius","rowMinX","rowMaxX","rowMinCenX","rowMaxCenX","rowRadi","rootBounds","centerX","centerY","vertexBounds","calcRowDims","maxLeftGrad","maxRightGrad","leftGrad","rightGrad","xLeftLimit","xRightLimit","fullWidth","xProportion","totalTheta","averTheta","nextTheta","lastTheta","rowNum","rowHasChildren","mxFastOrganicLayout","useInputOrigin","disableEdgeStyle","forceConstant","forceConstantSquared","minDistanceLimit","maxDistanceLimit","minDistanceLimitSquared","initialTemp","temperature","maxIterations","iteration","vertexArray","dispX","dispY","cellLocation","radius","radiusSquared","isMoveable","neighbours","indices","allowedToRun","getChildVertices","initialBounds","getBoundingBoxFromGeometry","getOpposites","resetEdge","calcRepulsion","calcAttraction","calcPositions","reduceTemperature","minx","miny","moveCells","deltaLength","newXDisp","newYDisp","k","xDelta","yDelta","deltaLengthSquared","displacementX","displacementY","vertexCount","random","deltaLengthWithRadius","mxCircleLayout","moveCircle","vertices","getRadius","circle","phi","mxParallelEdgeLayout","findParallels","parallels","getEdgeId","trg","route","scx","scy","tcx","tcy","len","mxCompositeLayout","layouts","master","mxEdgeLabelLayout","placeLabels","avoid","labRect","dy2","dx2","mxGraphAbstractHierarchyCell","maxRank","minRank","nextLayerConnectedCells","previousLayerConnectedCells","getNextLayerConnectedCells","layer","getPreviousLayerConnectedCells","getGeneralPurposeVariable","setGeneralPurposeVariable","setX","setY","mxGraphHierarchyNode","connectsAsTarget","connectsAsSource","hashCode","getRankValue","otherNode","getCoreCell","mxGraphHierarchyEdge","ids","isReversed","mxGraphHierarchyModel","tightenToSource","vertexMapper","edgeMapper","internalVertices","SOURCESCANSTARTRANK","createInternalCells","internalEdge","realEdges","realEdge","targetCell","internalTargetCell","ranks","dfsCount","undirectedEdges","directedEdges","initialRank","startNodes","internalNode","internalNodes","startNodesCopy","layerDeterminingEdges","edgesToBeMarked","allEdgesScanned","minimumLayer","removedCell","currentMaxLayer","fixRanks","rankList","rootsArray","oldRootsArray","seen","parentToCellRankDifference","dfsRoots","trackAncestors","seenNodes","extendedDfs","connectingEdge","rootId","outgoingEdges","targetNode","ancestors","childHash","hashCodeLength","mxSwimlaneModel","ranksPerGroup","swimlanes","swimlaneIndex","ii","maxChainDfs","lowerRank","upperRank","chainCount","slIndex","incomingEdges","mxHierarchicalLayoutStage","mxMedianHybridCrossingReduction","nestedBestRanks","currentBestCrossings","iterationsWithoutImprovement","maxNoImprovementIterations","calculateCrossings","weightedMedian","transpose","candidateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","connectedCells","nodeIndices","connectedNode","otherCellRankPosition","concat","firstIndex","treeSize","tree","treeIndex","mainLoopIteration","improved","maxCount","orderedCells","tempRank","leftCellAboveConnections","leftCellBelowConnections","rightCellAboveConnections","rightCellBelowConnections","leftAbovePositions","leftBelowPositions","rightAbovePositions","rightBelowPositions","leftCell","rightCell","totalCurrentCrossings","totalSwitchedCrossings","ik","downwardSweep","medianRank","rankValue","numCellsForRank","medianValues","reservedPositions","sorterEntry","MedianCellSorter","nextLevelConnectedCells","nextRankValue","medianValue","arrayCount","medianPoint","leftMedian","rightMedian","mxMinimumCycleRemover","unseenNodesArray","unseenNodes","modelRoots","seenNodesCopy","mxCoordinateAssignment","intraCellSpacing","interRankCellSpacing","orientation","initialX","parallelEdgeSpacing","jettyPositions","limitX","currentXDelta","widestRank","rankTopY","rankBottomY","widestRankValue","rankWidths","rankY","fineTuning","nextLayerConnectedCache","previousLayerConnectedCache","printStatus","initialCoords","minNode","bestXDelta","medianPos","minPath","setCellLocations","nodeList","nodeWrapper","maxTries","tolerance","cellWrapper","numNextLayerConnected","numPreviousLayerConnected","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","currentPosition","cellMedian","positionChanged","leftLimit","rankSize","rightLimit","connectedCell","connectedCellWrapper","rankMedianPosition","weightedValues","cellMap","currentCell","calculatedWeightedValue","numConnectionsNextLevel","leftBuffer","rightBuffer","collection","totalWeight","facade","calculateWidestRank","rankCoordinates","localX","boundsWarning","numEdges","lastRankMaxCellHeight","maxCellHeight","distanceToNextRank","referenceX","edgeStraight","refSegCount","upSegCount","downSegCount","upXPositions","downXPositions","currentX","nextX","repositionValid","rankArray","MAX_VALUE","edgeStyle","mxHierarchicalEdgeStyle","ORTHOGONAL","POLYLINE","CURVE","setEdgePosition","cellIndex","currentCells","currentRank","sorter","connectedEdgeCount","connectedEdgeGroupCount","connectedEdges","innerCell","connections","connIndex","numActualEdges","parallelEdgeCount","jettys","layoutReversed","realSource","reversed","arrayOffset","jetty","modelSource","isPort","loopStart","loopLimit","loopDelta","positionX","topChannelY","bottomChannelY","modelTarget","realTarget","processReversedEdge","realCell","positionY","mxSwimlaneOrdering","nodeId","reversedOverSwimlane","cellId","mxHierarchicalLayout","deterministic","STRAIGHT","moveParent","parentBorder","interHierarchySpacing","edgesCache","edgeSourceTermCache","edgesTargetTermCache","Array","rootsCopy","run","findRoots","best","maxDiff","fanOut","fanIn","diff","cachedEdges","isCollapsed","terminalCache","term","hierarchyVertices","allVertexSet","filledVertexSet","filterDescendants","filledVertexSetEmpty","candidateRoots","vertexSet","cycleStage","layeringStage","crossingStage","placementStage","allVertices","currentComp","vertexID","edgeIsSource","netCount","isSource2","otherTerm","mxSwimlaneLayout","dummyVertices","dummyVertexWidth","getChildCells","insertVertex","layoutBounds","lane","childrenY","maxChildrenY","newGeo","leftGroupBorder","isValidAncestor","laneCounter","otherVertex","otherIndex","mxGraphModel","currentEdit","createUndoableEdit","setRoot","maintainEdgeParent","ignoreRelativeEdgeParent","createIds","nextId","updateLevel","endingUpdate","createRoot","isCreateIds","setCreateIds","mxCell","insert","filterCells","getDescendants","mxRootChange","rootChanged","oldRoot","cellAdded","isRoot","parentChanged","updateEdgeParents","getId","setId","createId","collision","updateEdgeParent","getNearestCommonAncestor","origin1","getOrigin","origin2","cell1","cell2","getParentPath","cellRemoved","parentForCellChanged","oldIndex","getChildren","getChildEdges","setTerminal","terminalChanged","setTerminals","terminalForCellChanged","insertEdge","removeEdge","getDirectedEdgeCount","outgoing","ignoredEdge","getIncomingEdges","getOutgoingEdges","incoming","includeLoops","tmp2","directedMatch","oppositeMatch","sources","targets","terminals","topmost","isConnectable","setValue","valueForCellChanged","valueChanged","geometryForCellChanged","styleForCellChanged","setCollapsed","collapsed","mxCollapseChange","collapsedStateForCellChanged","mxVisibleChange","visibleStateForCellChanged","mergeChildren","to","cloneAllEdges","mapping","mergeChildrenImpl","getParents","parents","cloneCell","includeChildren","clones","cloneCellImpl","restoreClone","ident","cellCloned","cloneChild","previousIndex","connect","isConnect","mxCellAttributeChange","onInit","connectable","mxTransient","newValue","setVertex","setEdge","setConnectable","setParent","removeFromParent","getEdgeIndex","isOutgoing","removeFromTerminal","hasAttribute","userObject","cloneValue","TRANSLATE_CONTROL_POINTS","alternateBounds","sourcePoint","targetPoint","swap","getTerminalPoint","setTerminalPoint","ct","fixedAspect","resolve","t1","t2","mxPerimeter","RectanglePerimeter","orthogonal","pi","pi2","beta","tan","EllipsePerimeter","det","xout1","xout2","yout1","yout2","pow","xout","yout","RhombusPerimeter","TrianglePerimeter","corner","HexagonPerimeter","mxPrintPreview","pageSelector","pageScale","autoOrigin","printOverlays","printControls","printBackgroundImage","targetWindow","clipping","getWindow","getDoctype","appendGraph","forcePageBreaks","keepOpen","previousInitializeOverlay","initializeOverlay","overlay","getDrawPane","initControl","control","handleEvents","clickHandler","isNewWindow","writeHead","currentScale","availableHeight","hpages","vpages","writePageSelector","createPageSelector","addPage","pageBreakAfter","addPageBreak","cov","getCoverPages","apx","getAppendices","pageNum","renderPage","addGraphFragment","insertBackgroundImage","closeDocument","writePostfix","js","pageNumber","pageBreakInside","innerDiv","viewport","previousContainer","getCanvas","backgroundPane","getBackgroundPane","graphEnabled","tempClip","rendering","orig","svgs","getLinkForCell","mxStylesheet","putDefaultVertexStyle","createDefaultVertexStyle","putDefaultEdgeStyle","createDefaultEdgeStyle","putCellStyle","getDefaultVertexStyle","getDefaultEdgeStyle","defaultStyle","tmpStyle","mxCellState","absoluteOffset","invalid","visibleSourceState","visibleTargetState","terminalDistance","segments","getPerimeterBounds","setAbsoluteTerminalPoint","getVisibleTerminalState","setVisibleTerminalState","terminalState","getCellBounds","cellBounds","getPaintBounds","paintBounds","updateCachedBounds","setState","mxGraphSelectionModel","doneResource","updatingSelectionResource","singleSelection","isSingleSelection","setSingleSelection","changeSelection","setCell","getFirstSelectableCell","isCellSelectable","addCell","addCells","removeCell","added","removed","mxSelectionChange","selectionModel","mxCellEditor","zoomHandler","isEditing","editingCell","stopEditing","trigger","modified","autoSize","selectText","emptyLabelText","escapeCancelsEditing","textNode","minResize","wordWrapPadding","blurEnabled","initialValue","contentEditable","isLegacyEditor","installListeners","applyValue","labelChanged","getInitialValue","getEditingValue","getCurrentValue","isCancelEditingKeyEvent","focusLost","isStopEditingEvent","keyCode","keypressHandler","clearOnChange","getEmptyLabelText","keyupHandler","resizeThread","clearTimeout","isEnterStopsCellEditing","isEventSource","getEditorBounds","isWrapping","lw","bds","hpos","vpos","legacySpacing","isInvokesStopCellEditing","getBackgroundColor","absoluteRoot","startEditing","tooltipHandler","hideTooltip","bold","italic","uline","isHideLabel","isSelectText","execCommand","cancel","initial","blur","prepareTextarea","getEditingCell","mxCellRenderer","defaultShapes","defaultEdgeShape","defaultVertexShape","defaultTextShape","legacyControlPosition","forceControlClickHandler","registerShape","initializeShape","configureShape","createShape","getShapeConstructor","createIndicatorShape","getShape","getIndicatorShape","getIndicatorColor","getIndicatorGradientColor","getIndicatorImage","postConfigureShape","resolveColor","checkPlaceholderStyles","values","field","referenced","getSwimlane","swimlaneIndicatorColorAttribute","rstate","getLabelValue","getLabel","createLabel","isForceHtml","isHtmlLabel","getVerticalAlign","isLabelClipped","initializeLabel","forceGetCell","isLabelEvent","nativeDblClickEnabled","createCellOverlays","getCellOverlays","installCellOverlayListeners","createControl","getFoldingImage","foldingEnabled","createControlClickHandler","collapse","foldCells","innerNode","first","isShapeEvent","redrawLabel","wrapping","isTextShapeInvalid","nextScale","getTextScale","isClipping","vis","redrawLabelShape","check","property","dh","rotateLabelBounds","redrawCellOverlays","getBounds","redrawControl","getControlBounds","insertStateAfter","htmlNode","shapes","getShapesForState","shapeChanged","selectionCellsHandler","updateHandler","isShapeInvalid","doRedrawShape","mxEdgeStyle","EntityRelation","segment","isSourceLeft","sourceGeometry","isTargetLeft","targetGeometry","getRoutingCenterY","xe","ye","dep","midY","Loop","transformControlPoint","getRoutingCenterX","ElbowConnector","TopToBottom","SideToSide","SegmentConnector","hints","lastPushed","hint","pushPoint","lastInx","newHints","currentTerm","currentPt","hozChan","vertChan","currentHint","fixedVertAlign","fixedHozAlign","inHozChan","inVertChan","orthBuffer","orthPointsFallback","dirVectors","wayPoints1","routePatterns","inlineRoutePatterns","vertexSeperations","limits","LEFT_MASK","TOP_MASK","RIGHT_MASK","BOTTOM_MASK","LEFT","TOP","RIGHT","BOTTOM","SIDE_MASK","CENTER_MASK","SOURCE_MASK","TARGET_MASK","VERTEX_MASK","getJettySize","OrthConnector","sourceEdge","targetEdge","sourceX","sourceY","sourceWidth","sourceHeight","targetX","targetY","targetWidth","targetHeight","scaledSourceBuffer","scaledTargetBuffer","totalBuffer","tooShort","portConstraint","newRect","sourceCenX","sourceCenY","targetCenX","targetCenY","sourceTopDist","sourceLeftDist","sourceBottomDist","sourceRightDist","dirPref","horPref","vertPref","preferredHorizDist","preferredVertDist","prefOrdering","preferredOrderSet","sourceIndex","targetIndex","routePattern","currentIndex","lastOrientation","initialOrientation","currentOrientation","nextDirection","directionIndex","tar","sou","side","limit","souTar","deltaX","deltaY","targetOrientation","sameOrient","getRoutePattern","mxStyleRegistry","putValue","mxGraphView","EMPTY_POINT","updatingDocumentResource","captureDocumentGesture","optimizeVmlReflows","updateStyle","lastNode","lastHtmlNode","lastForegroundNode","lastForegroundHtmlNode","setGraphBounds","setCurrentRoot","mxCurrentRootChange","sizeDidChange","scaleAndTranslate","previousScale","previousTranslate","viewStateChanged","setScale","revalidate","refresh","invalidate","validate","removeState","includeEdges","invalidating","resetValidationState","prevDisplay","placeholder","validateCellState","validateCell","getEmptyBounds","validateBackground","createBackgroundPageShape","validateBackgroundImage","validateBackgroundPage","getBackgroundImage","redrawBackgroundImage","pageVisible","getBackgroundPageBounds","backgroundPageShape","isHideOnHover","ps","updateCellState","isRendering","stateValidated","pState","getChildOffsetForCell","updateVertexState","updateEdgeState","updateVertexLabelOffset","updateFixedTerminalPoints","updatePoints","updateFloatingTerminalPoints","updateEdgeBounds","updateEdgeLabelOffset","fg","keepEdgesInForeground","keepEdgesInBackground","updateFixedTerminalPoint","getConnectionConstraint","getFixedTerminalPoint","getConnectionPoint","updateBoundsFromStencil","asp","getEdgeStyle","getTerminalPort","srcBounds","trgBounds","isLoopStyleEnabled","tc","defaultLoopStyle","isAllowEval","updateFloatingTerminalPoint","getFloatingTerminalPoint","getNextPoint","orth","isOrthogonal","getPerimeterFunction","opposite","markerSize","gx","pointCount","gy","getRelativePoint","totalLength","minDist","xSegment","ySegment","projlen","yDistance","setRendering","setAllowEval","getStates","getCellStates","getDecoratorPane","decoratorPane","isContainerEvent","isScrollEvent","outWidth","inWidth","outHeight","inHeight","fireGestureEvent","popupMenuHandler","moveHandler","endHandler","createHtmlPane","updateContainerStyle","onResize","updateHtmlCanvasSize","pane","createVmlPane","isUp","getTranslateForRoot","mxGraph","renderHint","stylesheet","mouseListeners","multiplicities","imageBundles","createCellRenderer","setSelectionModel","createSelectionModel","setStylesheet","createStylesheet","createGraphView","graphModelChangeListener","createHandlers","EMPTY_ARRAY","cellEditor","portsEnabled","doubleTapEnabled","doubleTapTimeout","doubleTapTolerance","lastTouchY","lastTouchTime","tapAndHoldEnabled","tapAndHoldDelay","tapAndHoldInProgress","tapAndHoldValid","initialTouchX","initialTouchY","defaultOverlap","defaultParent","alternateEdgeStyle","pageBreaksVisible","pageBreakColor","pageBreakDashed","minPageBreakDist","preferPageSize","escapeEnabled","invokesStopCellEditing","enterStopsCellEditing","useScrollbarsForPanning","exportEnabled","importEnabled","cellsLocked","cellsCloneable","cellsEditable","cellsDeletable","cellsMovable","edgeLabelsMovable","vertexLabelsMovable","dropEnabled","splitEnabled","cellsResizable","cellsBendable","cellsSelectable","cellsDisconnectable","autoSizeCells","autoSizeCellsOnAdd","ignoreScrollbars","translateToScrollPosition","timerAutoScroll","allowAutoPanning","maximumGraphBounds","minimumGraphSize","minimumContainerSize","maximumContainerSize","resizeContainer","allowNegativeCoordinates","constrainChildren","constrainRelativeChildren","extendParents","extendParentsOnAdd","extendParentsOnMove","recursiveResize","collapseToPreferredSize","zoomFactor","keepSelectionVisibleOnZoom","centerZoom","resetViewOnRootChange","resetEdgesOnResize","resetEdgesOnMove","resetEdgesOnConnect","allowLoops","multigraph","connectableEdges","allowDanglingEdges","cloneInvalidEdges","disconnectOnMove","labelsVisible","htmlLabels","swimlaneSelectionEnabled","swimlaneNesting","minFitScale","maxFitScale","collapsedImage","expandedImage","warningImage","alreadyConnectedResource","containsValidationErrorsResource","collapseExpandResource","createCellEditor","createTooltipHandler","createSelectionCellsHandler","connectionHandler","createConnectionHandler","createGraphHandler","panningHandler","createPanningHandler","panningEnabled","createPopupMenuHandler","mxTooltipHandler","mxSelectionCellsHandler","mxConnectionHandler","mxGraphHandler","mxPanningHandler","mxPopupMenuHandler","getStylesheet","getSelectionModel","getSelectionCellsForChanges","processChange","removeSelectionCells","getRemovedCellsForChanges","setDefaultParent","removeStateForCell","newParent","home","addCellOverlay","removeCellOverlay","removeCellOverlays","clearCellOverlays","setCellWarning","warning","isSelect","mxCellOverlay","setSelectionCell","startEditingAtCell","getSelectionCell","isCellEditable","convertValueToString","cellLabelChanged","isAutoSizeCell","cellSizeUpdated","escape","click","mxe","isTransparentClickEvent","selected","isCellSelected","selectCellForEvent","swimlane","isSwimlaneSelectionEnabled","getSwimlaneAt","isToggleEvent","tapAndHold","panningTrigger","marker","currentColor","validColor","markedState","mark","createEdgeState","panningManager","createPanningManager","getBorderSizes","borderLeftStyle","borderLeftWidth","paddingTop","borderTopStyle","borderTopWidth","borderRightStyle","borderRightWidth","paddingBottom","borderBottomStyle","borderBottomWidth","getPreferredPageSize","page","hCount","vCount","keepOrigin","ignoreWidth","ignoreHeight","getBorder","cssBorder","w1","h1","w2","h2","s2","doResizeContainer","updatePageBreaks","gb","horizontalCount","verticalCount","horizontalPageBreaks","verticalPageBreaks","drawPageBreaks","breaks","pageBreak","postProcessCellStyle","getImageFromBundles","encodeURIComponent","comma","setCellStyle","toggleCellStyle","toggleCellStyles","toggleCellStyleFlags","alignCells","param","resizeCell","flipEdge","addImageBundle","bundle","removeImageBundle","orderCells","back","cellsOrdered","groupCells","getCellsForGroup","createGroupCell","getBoundsForGroup","cellsAdded","cellsMoved","cellsResized","ungroupCells","removeCellsAfterUngroup","cellsRemoved","addAllEdges","removeCellsFromParent","moveGroup","allowInvalidEdges","keepPosition","trans","getEdgeValidationError","createVertex","createEdge","addEdge","absolute","constrain","parentState","zero","oldState","isAllowNegativeCoordinates","autoSizeCell","isExtendParentsOnAdd","isExtendParent","extendParent","constrainChild","cellConnected","updateCellSize","getDeletableCells","getAllEdges","disconnectTerminal","connected","splitEdge","newEdge","toggleCells","cellsToggled","checkFoldable","getFoldableCells","cellsFolded","isCellFoldable","swapBounds","willCollapse","updateAlternateBounds","getPreferredSizeForCell","allCells","ignoreChildren","cellStyle","gs2","resizeCells","isRecursiveResize","cellResized","ignoreRelative","resizeChildCells","constrainChildCells","scaleCell","isCellResizable","isCloneInvalidEdges","setAllowNegativeCoordinates","isDisconnectOnMove","isAllowDanglingEdges","isExtendParentsOnMove","disconnect","disconnectGraph","translateCell","getCellContainmentArea","getMaximumGraphBounds","sizeFirst","isConstrainRelativeChildren","isConstrainChild","overlap","getOverlap","getOutlineConstraint","getAllConnectionConstraints","setConnectionConstraint","connectCell","isPortsEnabled","getTerminalForPort","isCellDisconnectable","getCurrentRoot","enterGroup","isValidRoot","exitGroup","includeDescendants","addPoint","shiftPreview1","shiftPreview2","zoomIn","zoomOut","zoomActual","zoomTo","cw","ch","sh","scrollRectToVisible","zoomToRect","scaleX","scaleY","aspectFactor","rectRight","rectBottom","newHeight","deltaHeightBuffer","upperBuffer","newWidth","deltaWidthBuffer","newScale","scrollCellToVisible","tr2","isChanged","widthLimit","heightLimit","ddx","ddy","isCellConnectable","isLoop","isCloneEvent","isConstrainedEvent","isIgnoreTerminalEvent","validationAlert","isEdgeValid","isValidConnection","sourceOut","targetIn","validateEdge","validateGraph","context","isValid","getCellValidationError","outCount","inCount","rule","countError","setBackgroundImage","isHtmlLabels","setHtmlLabels","getTooltip","tip","handler","getHandler","getTooltipForNode","getTooltipForCell","getCursorForMouseEvent","getCursorForCell","setBorder","isResizeContainer","setResizeContainer","isEscapeEnabled","setEscapeEnabled","setInvokesStopCellEditing","setEnterStopsCellEditing","isCellLocked","isCellsLocked","setCellsLocked","getCloneableCells","isCellCloneable","isCellsCloneable","setCellsCloneable","canExportCell","canImportCell","isCellsSelectable","setCellsSelectable","isCellDeletable","isCellsDeletable","setCellsDeletable","isLabelMovable","isCellRotatable","getMovableCells","isCellsMovable","setCellsMovable","setPortsEnabled","getGridSize","setGridSize","getTolerance","setTolerance","isVertexLabelsMovable","setVertexLabelsMovable","isEdgeLabelsMovable","setEdgeLabelsMovable","isSwimlaneNesting","setSwimlaneNesting","setSwimlaneSelectionEnabled","isMultigraph","setMultigraph","isAllowLoops","setAllowDanglingEdges","setConnectableEdges","isConnectableEdges","setCloneInvalidEdges","setAllowLoops","setDisconnectOnMove","setDropEnabled","isSplitEnabled","setSplitEnabled","isCellsResizable","setCellsResizable","isTerminalPointMovable","isCellBendable","isCellsBendable","setCellsBendable","isCellsEditable","setCellsEditable","isCellsDisconnectable","setCellsDisconnectable","isValidSource","isValidTarget","setTooltips","setPanning","isAutoSizeCells","setAutoSizeCells","isExtendParents","setExtendParents","setExtendParentsOnAdd","setExtendParentsOnMove","setRecursiveResize","isConstrainChildren","setConstrainChildren","setConstrainRelativeChildren","isAllowOverlapParent","isValidDropTarget","isSplitTarget","ignoreFn","hitsSwimlaneContent","getPointForEvent","addOffset","getCellsBeyond","rightHalfpane","bottomHalfpane","isolate","isSelectionEmpty","getSelectionCount","addSelectionCell","addSelectionCells","removeSelectionCell","selectRegion","selectCellsForEvent","selectNextCell","selectCell","selectPreviousCell","selectParentCell","selectChildCell","isNext","isParent","isChild","sel","selectAll","descendants","selectVertices","selectCells","selectEdges","createHandler","createEdgeHandler","createVertexHandler","mxVertexHandler","createElbowEdgeHandler","createEdgeSegmentHandler","mxEdgeHandler","mxEdgeSegmentHandler","mxElbowEdgeHandler","listener","updateMouseEvent","getStateForTouchEvent","isEventIgnored","mouseEvent","lastEvent","mouseMoveRedirect","mouseUpRedirect","isSyntheticEventIgnored","lastMouseX","lastMouseY","ignoreMouseEvents","isEventSourceIgnored","candidate","getEventState","currentTime","fireDoubleClick","lastTouchEvent","lastTouchX","doubleClickCounter","doubleClickFired","lastTouchCell","valid","tapAndHoldThread","consumeMouseEvent","destroyed","tooltip","mxOutline","graphRenderHint","showViewport","sizerSize","updateOnPan","sizerImage","suspended","forceVmlHandles","createGraph","outlineGraphModelChanged","panHandler","refreshHandler","selectionBorder","redirect","redirect2","sizer","createSizer","setZoomEnabled","getSourceContainerSize","getOutlineOffset","getSourceGraphBounds","sourceScale","scaledGraphBounds","unscaledGraphBounds","unscaledFinderBounds","union","completeWidth","completeHeight","outlineScale","navView","scale2","scale3","hit","allowHandleBoundsCheck","getTranslateForEvent","viewRatio","mxMultiplicity","validNeighbors","typeError","validNeighborsAllowed","checkTerminal","checkNeighbors","sourceValue","targetValue","checkType","attrValue","mxLayoutManager","undoHandler","beforeUndo","bubbling","isBubbling","setBubbling","getLayout","getCellsForChanges","executeLayoutForCells","sorted","reverse","layoutCells","getCellsForChange","executeLayout","mxSwimlaneManager","addEnabled","resizeEnabled","addHandler","isAddEnabled","isResizeEnabled","setHorizontal","setAddEnabled","setResizeEnabled","isSwimlaneIgnored","isCellHorizontal","swimlaneAdded","parentHorizontal","resizeSwimlane","isCellVisibleFn","oldValidateCellState","oldBounds","oldStates","oldScale","oldDoRedrawShape","self","oldPaint","resurse","deltas","addEdges","translateState","revalidateState","updatePreviewShape","updateHint","escapeHandler","pBounds","getPreviewBounds","maxCells","highlightEnabled","cloneEnabled","moveEnabled","currentDx","currentDy","updateCursor","selectEnabled","connectOnDrop","scrollOnMove","previewColor","htmlPreview","scaleGrid","rotationEnabled","isCloneEnabled","setCloneEnabled","isMoveEnabled","setMoveEnabled","isSelectEnabled","setSelectEnabled","isRemoveCellsFromParent","setRemoveCellsFromParent","getInitialCellForEvent","isDelayedSelection","delayedSelection","cellWasClicked","initialCell","createPreviewShape","useGuidesForEvent","vector","roundLength","removeHint","setHighlightColor","selectDelayed","destroyShapes","guides","shouldRemoveCellsFromParent","forcePanningHandler","isForcePanningEvent","gestureHandler","eo","isPinchEnabled","initialScale","mouseDownEvent","maxScale","useLeftButtonForPanning","usePopupTrigger","ignoreCell","previewEnabled","useGrid","pinchEnabled","isPanningEnabled","setPanningEnabled","setPinchEnabled","isPanningTrigger","consumePanningTrigger","inTolerance","selectOnPopup","clearSelectionOnBackground","triggerX","triggerY","screenX","screenY","isSelectOnPopup","popupTrigger","getCellForPopupEvent","mxCellMarker","invalidColor","hotspotEnabled","validState","setHotspot","getHotspot","setHotspotEnabled","isHotspotEnabled","hasValidState","getValidState","getMarkedState","unmark","process","setCurrentState","isValidState","getMarkerColor","markCell","getStateToMark","resetHandler","handlers","maxHandlers","oldHandlers","isHandlerActive","moveIconFront","moveIconBack","connectImage","targetConnectImage","createTarget","constraintHandler","waypointsEnabled","ignoreMouseDown","connectIconOffset","drillHandler","mouseDownCounter","movePreviewAway","outlineConnect","livePreview","insertBeforeSource","isInsertBefore","isCreateTarget","setCreateTarget","mxConstraintHandler","iconState","redrawIcons","icons","isConnectableCell","isConnecting","validateConnection","getConnectImage","isMoveIconToFrontForState","createIcons","currentState","getIconPosition","destroyIcons","selectedIcon","isStartEvent","currentFocus","currentConstraint","sourceConstraint","waypoints","isImmediateConnectSource","isOutlineConnectEvent","clientLeft","clientTop","gridX","gridY","isHighlightAt","updateCurrentState","repaint","isCellEnabled","setFocus","convertWaypoint","snapToPreview","pt2","getTargetPerimeterPoint","getSourcePerimeterPoint","originalPoint","drawPreview","hitsIcon","updateIcons","realPoints","targetPerimeter","sourcePerimeter","isStopEvent","addWaypointForEvent","checkConstraints","c1","c2","updatePreview","getEdgeColor","terminalInserted","createTargetVertex","getAlignmentTolerance","pointImage","highlightColor","focusIcons","focusHighlight","currentFocusArea","focusPoints","getImageForConstraint","isStateIgnored","destroyFocusHighlight","isKeepFocusEvent","getCellForEvent","existingEdge","mouseleaveHandler","grid","mouse","minDistSq","hl","createHighlightShape","cp","mxRubberband","forceRubberbandHandler","isForceRubberbandEvent","defaultOpacity","sharedDiv","currentY","createMouseEvent","mxHandle","ignoreGrid","getPosition","setPosition","copyStyle","processEvent","getTotalRotation","flipPoint","snapPoint","isHtmlRequired","initShape","ignore","singleSizer","handleImage","parentHighlightEnabled","rotationRaster","rotationCursor","manageSizers","constrainGroupByChildren","rotationHandleVSpacing","horizontalOffset","verticalOffset","selectionBounds","getSelectionBounds","createSelectionShape","sizers","labelShape","isRotationHandleVisible","rotationShape","customHandles","createCustomHandles","updateMinBounds","isCenteredEvent","minBounds","createParentHighlightShape","getSelectionColor","getSelectionStrokeWidth","isSelectionDashed","createSizerShape","isSizerVisible","moveSizerTo","getHandleForEvent","checkShape","isCustomHandleEvent","handle","isLivePreviewBorder","childOffsetX","childOffsetY","preview","hideSizers","edgeHandlers","setHandlesVisible","checkTolerance","roundAngle","moveLabel","rotateVertex","resizeVertex","currentAlpha","atan","raster","redrawHandles","unscaledBounds","dx3","dy3","dx4","dy4","dx5","dy5","updateLivePreview","tempState","rotateCell","rotateClick","constrained","moveChildren","centered","cdx","cdy","getHandlePadding","crs","da","getRotationHandlePosition","updateParentHighlight","parentHighlight","dirty","bends","removeEnabled","dblClickRemoveEnabled","mergeRemoveEnabled","straightRemoveEnabled","virtualBendsEnabled","virtualBendOpacity","preferHtml","snapToTerminals","manageLabelHandle","abspoints","getSelectionPoints","targetState","createBends","isVirtualBendsEnabled","virtualBends","createVirtualBends","createLabelHandleShape","initBend","isAddPointEvent","isRemovePointEvent","otherCell","isHandleVisible","bend","createHandleShape","removePoint","isHandleEnabled","labelHandleImage","isAddVirtualBendEvent","isTarget","isLabel","clonePreviewState","getSnapToTerminalTolerance","isSnapToTerminalsEvent","snapToPoint","snapToTerminal","getPreviewTerminalState","getPreviewPoints","checkRemove","updatePreviewState","targetConstraint","setPreviewColor","changeTerminalPoint","changePoints","isClone","addPointAt","getHandleFillColor","checkLabelHandle","xn","yn","bn","redrawInnerBends","destroyBends","flipEnabled","doubleClickOrientationResource","createVirtualBend","dblClickHandler","getCursorForBend","getCurrentPoints","pt0","pt1","rpts","straight","mxKeyHandler","normalKeys","shiftKeys","controlKeys","controlShiftKeys","keydownHandler","keyDown","bindKey","code","bindShiftKey","bindControlKey","bindControlShiftKey","getFunction","isGraphEvent","boundFunction","ignoreTouchEvents","hideOnHover","setHideOnHover","getStateForEvent","stateSource","resetTimer","restart","mxCellTracker","repaintHandler","keepOnTop","drawHighlight","getStrokeWidth","mxDefaultKeyHandler","hideProperties","bindAction","keyHandler","mxDefaultPopupMenu","config","createMenu","conditions","createConditions","addItems","condition","as","enabledCond","addAction","isCell","condNodes","mxDefaultToolbar","toolbar","insertFunction","pressed","addActionOption","mode","setMode","addPrototype","ptype","installDropHandler","addVertex","horizontalFlow","edgeGeometry","sprite","loader","mxEditor","actions","addActions","cycleAttributeValues","popupHandler","undoManager","createToolbar","configure","cycleAttributeName","askZoomResource","lastSavedResource","currentFileResource","propertiesResource","tasksResource","helpResource","outlineResource","dblClickAction","swimlaneRequired","forcedInserting","templates","defaultEdge","defaultEdgeStyle","defaultGroup","groupBorderSize","filename","postParameterName","escapePostData","urlPost","urlImage","layoutDiagram","swimlaneSpacing","maintainSwimlanes","layoutSwimlanes","cycleAttributeIndex","tasks","tasksWindowImage","tasksTop","help","helpWindowImage","urlHelp","helpWidth","helpHeight","propertiesWidth","propertiesHeight","movePropertiesDialog","validating","isModified","setModified","getUrlImage","showProperties","showTasks","showHelp","showOutline","dec","decode","resetHistory","resetFirstTime","cookie","actionname","addTemplate","template","getTemplate","installDblClickHandler","installUndoHandler","installDrillHandler","installChangeHandler","installInsertHandler","createPopupMenu","createSwimlaneManager","createLayoutManager","swimlaneMgr","layoutMgr","swimlaneLayout","createSwimlaneLayout","diagramLayout","createDiagramLayout","setGraphContainer","rubberband","insertHandler","gs","setToolbarContainer","setStatusContainer","tstamp","toLocaleString","setStatus","setTitleContainer","getTitle","treeLayout","getRootTitle","createGroup","readGraphModel","getUrlPost","data","writeGraphModel","postDiagram","swapStyles","second","createProperties","isPropertiesVisible","yField","xField","widthField","heightField","texts","okFunction","cancelFunction","createTasks","refreshTasks","frame","modename","consumeCycleAttribute","cycleAttribute","isConstrainedMoving","mxCodecRegistry","codecs","aliases","register","codec","classname","addAlias","codecname","getCodec","mxObjectCodec","objects","elements","encodeDefaults","putObject","getObject","addElement","reference","into","encodeCell","isCellCodec","decodeCell","restoreStructures","decoder","insertIntoGraph","idrefs","cloneTemplate","getFieldName","attributename","mapped","getAttributeName","fieldname","isExcluded","isReference","beforeEncode","encodeObject","afterEncode","encodeValue","writeAttribute","writePrimitiveAttribute","writeComplexAttribute","convertAttributeToXml","isBooleanAttribute","convertAttributeFromXml","isNumericAttribute","beforeDecode","decodeNode","afterDecode","decodeAttributes","decodeChildren","decodeAttribute","isIgnoredAttribute","processInclude","decodeChild","getFieldTemplate","addObjectValue","isWrite","ref","object","mxCellCodec","rootNode","decodeRoot","rootCell","mxModelCodec","mxRootChangeCodec","childRef","mxChildChangeCodec","mxTerminalChangeCodec","mxGenericChangeCodec","variable","mxGraphCodec","mxGraphViewCodec","mxStylesheetCodec","styleNode","getStringValue","mxDefaultKeyHandlerCodec","mxDefaultToolbarCodec","act","inc","mxDefaultPopupMenuCodec","role","decodeTemplates","decodeUi","setMapContainer","mxEditorCodec"],"mappings":"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","file":"build.js","sourcesContent":["(function (root, factory) {\nif (typeof define === 'function' && define.amd) {\ndefine([], factory);\n} else if (typeof module === 'object' && module.exports) {\nmodule.exports = factory();\n} else {\nroot.mxgraph = factory();\n}\n}(this, function () {\nreturn function (opts) {\nfor (var name in opts) { this[name] = opts[name]; }\nvar __mxOutput = {};\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\nvar mxClient =\n{\n\t/**\n\t * Class: mxClient\n\t *\n\t * Bootstrapping mechanism for the mxGraph thin client. The production version\n\t * of this file contains all code required to run the mxGraph thin client, as\n\t * well as global constants to identify the browser and operating system in\n\t * use. You may have to load chrome://global/content/contentAreaUtils.js in\n\t * your page to disable certain security restrictions in Mozilla.\n\t * \n\t * Variable: VERSION\n\t *\n\t * Contains the current version of the mxGraph library. The strings that\n\t * communicate versions of mxGraph use the following format.\n\t * \n\t * versionMajor.versionMinor.buildNumber.revisionNumber\n\t * \n\t * Current version is 3.9.12.\n\t */\n\tVERSION: '3.9.12',\n\n\t/**\n\t * Variable: IS_IE\n\t *\n\t * True if the current browser is Internet Explorer 10 or below. Use <mxClient.IS_IE11>\n\t * to detect IE 11.\n\t */\n\tIS_IE: navigator.userAgent.indexOf('MSIE') >= 0,\n\n\t/**\n\t * Variable: IS_IE6\n\t *\n\t * True if the current browser is Internet Explorer 6.x.\n\t */\n\tIS_IE6: navigator.userAgent.indexOf('MSIE 6') >= 0,\n\n\t/**\n\t * Variable: IS_IE11\n\t *\n\t * True if the current browser is Internet Explorer 11.x.\n\t */\n\tIS_IE11: !!navigator.userAgent.match(/Trident\\/7\\./),\n\n\t/**\n\t * Variable: IS_EDGE\n\t *\n\t * True if the current browser is Microsoft Edge.\n\t */\n\tIS_EDGE: !!navigator.userAgent.match(/Edge\\//),\n\n\t/**\n\t * Variable: IS_QUIRKS\n\t *\n\t * True if the current browser is Internet Explorer and it is in quirks mode.\n\t */\n\tIS_QUIRKS: navigator.userAgent.indexOf('MSIE') >= 0 && (document.documentMode == null || document.documentMode == 5),\n\n\t/**\n\t * Variable: IS_EM\n\t * \n\t * True if the browser is IE11 in enterprise mode (IE8 standards mode).\n\t */\n\tIS_EM: 'spellcheck' in document.createElement('textarea') && document.documentMode == 8,\n\n\t/**\n\t * Variable: VML_PREFIX\n\t * \n\t * Prefix for VML namespace in node names. Default is 'v'.\n\t */\n\tVML_PREFIX: 'v',\n\n\t/**\n\t * Variable: OFFICE_PREFIX\n\t * \n\t * Prefix for VML office namespace in node names. Default is 'o'.\n\t */\n\tOFFICE_PREFIX: 'o',\n\n\t/**\n\t * Variable: IS_NS\n\t *\n\t * True if the current browser is Netscape (including Firefox).\n\t */\n  \tIS_NS: navigator.userAgent.indexOf('Mozilla/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('MSIE') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Edge/') < 0,\n\n\t/**\n\t * Variable: IS_OP\n\t *\n\t * True if the current browser is Opera.\n\t */\n  \tIS_OP: navigator.userAgent.indexOf('Opera/') >= 0 ||\n  \t\tnavigator.userAgent.indexOf('OPR/') >= 0,\n\n\t/**\n\t * Variable: IS_OT\n\t *\n\t * True if -o-transform is available as a CSS style, ie for Opera browsers\n\t * based on a Presto engine with version 2.5 or later.\n\t */\n  \tIS_OT: navigator.userAgent.indexOf('Presto/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.4.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.3.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.2.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.0.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/1.') < 0,\n  \t\n\t/**\n\t * Variable: IS_SF\n\t *\n\t * True if the current browser is Safari.\n\t */\n  \tIS_SF: navigator.userAgent.indexOf('AppleWebKit/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Chrome/') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Edge/') < 0,\n  \t\n\t/**\n\t * Variable: IS_IOS\n\t * \n\t * Returns true if the user agent is an iPad, iPhone or iPod.\n\t */\n  \tIS_IOS: (navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false),\n  \t\t\n\t/**\n\t * Variable: IS_GC\n\t *\n\t * True if the current browser is Google Chrome.\n\t */\n  \tIS_GC: navigator.userAgent.indexOf('Chrome/') >= 0 &&\n\t\tnavigator.userAgent.indexOf('Edge/') < 0,\n\t\n\t/**\n\t * Variable: IS_CHROMEAPP\n\t *\n\t * True if the this is running inside a Chrome App.\n\t */\n  \tIS_CHROMEAPP: window.chrome != null && chrome.app != null && chrome.app.runtime != null,\n\t\t\n\t/**\n\t * Variable: IS_FF\n\t *\n\t * True if the current browser is Firefox.\n\t */\n  \tIS_FF: navigator.userAgent.indexOf('Firefox/') >= 0,\n  \t\n\t/**\n\t * Variable: IS_MT\n\t *\n\t * True if -moz-transform is available as a CSS style. This is the case\n\t * for all Firefox-based browsers newer than or equal 3, such as Camino,\n\t * Iceweasel, Seamonkey and Iceape.\n\t */\n  \tIS_MT: (navigator.userAgent.indexOf('Firefox/') >= 0 &&\n\t\tnavigator.userAgent.indexOf('Firefox/1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Firefox/2.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('Iceweasel/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceweasel/1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceweasel/2.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('SeaMonkey/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('SeaMonkey/1.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('Iceape/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceape/1.') < 0),\n\n\t/**\n\t * Variable: IS_SVG\n\t *\n\t * True if the browser supports SVG.\n\t */\n  \tIS_SVG: navigator.userAgent.indexOf('Firefox/') >= 0 || // FF and Camino\n\t  \tnavigator.userAgent.indexOf('Iceweasel/') >= 0 || // Firefox on Debian\n\t  \tnavigator.userAgent.indexOf('Seamonkey/') >= 0 || // Firefox-based\n\t  \tnavigator.userAgent.indexOf('Iceape/') >= 0 || // Seamonkey on Debian\n\t  \tnavigator.userAgent.indexOf('Galeon/') >= 0 || // Gnome Browser (old)\n\t  \tnavigator.userAgent.indexOf('Epiphany/') >= 0 || // Gnome Browser (new)\n\t  \tnavigator.userAgent.indexOf('AppleWebKit/') >= 0 || // Safari/Google Chrome\n\t  \tnavigator.userAgent.indexOf('Gecko/') >= 0 || // Netscape/Gecko\n\t  \tnavigator.userAgent.indexOf('Opera/') >= 0 || // Opera\n\t  \t(document.documentMode != null && document.documentMode >= 9), // IE9+\n\n\t/**\n\t * Variable: NO_FO\n\t *\n\t * True if foreignObject support is not available. This is the case for\n\t * Opera, older SVG-based browsers and all versions of IE.\n\t */\n  \tNO_FO: !document.createElementNS || document.createElementNS('http://www.w3.org/2000/svg',\n  \t\t'foreignObject') != '[object SVGForeignObjectElement]' || navigator.userAgent.indexOf('Opera/') >= 0,\n\n\t/**\n\t * Variable: IS_VML\n\t *\n\t * True if the browser supports VML.\n\t */\n  \tIS_VML: navigator.appName.toUpperCase() == 'MICROSOFT INTERNET EXPLORER',\n\n\t/**\n\t * Variable: IS_WIN\n\t *\n\t * True if the client is a Windows.\n\t */\n  \tIS_WIN: navigator.appVersion.indexOf('Win') > 0,\n\n\t/**\n\t * Variable: IS_MAC\n\t *\n\t * True if the client is a Mac.\n\t */\n  \tIS_MAC: navigator.appVersion.indexOf('Mac') > 0,\n\n\t/**\n\t * Variable: IS_TOUCH\n\t * \n\t * True if this device supports touchstart/-move/-end events (Apple iOS,\n\t * Android, Chromebook and Chrome Browser on touch-enabled devices).\n\t */\n  \tIS_TOUCH: 'ontouchstart' in document.documentElement,\n\n\t/**\n\t * Variable: IS_POINTER\n\t * \n\t * True if this device supports Microsoft pointer events (always false on Macs).\n\t */\n  \tIS_POINTER: window.PointerEvent != null && !(navigator.appVersion.indexOf('Mac') > 0),\n\n\t/**\n\t * Variable: IS_LOCAL\n\t *\n\t * True if the documents location does not start with http:// or https://.\n\t */\n  \tIS_LOCAL: document.location.href.indexOf('http://') < 0 &&\n  \t\t\t  document.location.href.indexOf('https://') < 0,\n\n\t/**\n\t * Variable: defaultBundles\n\t * \n\t * Contains the base names of the default bundles if mxLoadResources is false.\n\t */\n  \tdefaultBundles: [],\n\n\t/**\n\t * Function: isBrowserSupported\n\t *\n\t * Returns true if the current browser is supported, that is, if\n\t * <mxClient.IS_VML> or <mxClient.IS_SVG> is true.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * if (!mxClient.isBrowserSupported())\n\t * {\n\t *   mxUtils.error('Browser is not supported!', 200, false);\n\t * }\n\t * (end)\n\t */\n\tisBrowserSupported: function()\n\t{\n\t\treturn mxClient.IS_VML || mxClient.IS_SVG;\n\t},\n\n\t/**\n\t * Function: link\n\t *\n\t * Adds a link node to the head of the document. Use this\n\t * to add a stylesheet to the page as follows:\n\t *\n\t * (code)\n\t * mxClient.link('stylesheet', filename);\n\t * (end)\n\t *\n\t * where filename is the (relative) URL of the stylesheet. The charset\n\t * is hardcoded to ISO-8859-1 and the type is text/css.\n\t * \n\t * Parameters:\n\t * \n\t * rel - String that represents the rel attribute of the link node.\n\t * href - String that represents the href attribute of the link node.\n\t * doc - Optional parent document of the link node.\n\t */\n\tlink: function(rel, href, doc)\n\t{\n\t\tdoc = doc || document;\n\n\t\t// Workaround for Operation Aborted in IE6 if base tag is used in head\n\t\tif (mxClient.IS_IE6)\n\t\t{\n\t\t\tdoc.write('<link rel=\"' + rel + '\" href=\"' + href + '\" charset=\"UTF-8\" type=\"text/css\"/>');\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tvar link = doc.createElement('link');\n\t\t\t\n\t\t\tlink.setAttribute('rel', rel);\n\t\t\tlink.setAttribute('href', href);\n\t\t\tlink.setAttribute('charset', 'UTF-8');\n\t\t\tlink.setAttribute('type', 'text/css');\n\t\t\t\n\t\t\tvar head = doc.getElementsByTagName('head')[0];\n\t   \t\thead.appendChild(link);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: loadResources\n\t * \n\t * Helper method to load the default bundles if mxLoadResources is false.\n\t * \n\t * Parameters:\n\t * \n\t * fn - Function to call after all resources have been loaded.\n\t * lan - Optional string to pass to <mxResources.add>.\n\t */\n\tloadResources: function(fn, lan)\n\t{\n\t\tvar pending = mxClient.defaultBundles.length;\n\t\t\n\t\tfunction callback()\n\t\t{\n\t\t\tif (--pending == 0)\n\t\t\t{\n\t\t\t\tfn();\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < mxClient.defaultBundles.length; i++)\n\t\t{\n\t\t\tmxResources.add(mxClient.defaultBundles[i], lan, callback);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: include\n\t *\n\t * Dynamically adds a script node to the document header.\n\t * \n\t * In production environments, the includes are resolved in the mxClient.js\n\t * file to reduce the number of requests required for client startup. This\n\t * function should only be used in development environments, but not in\n\t * production systems.\n\t */\n\tinclude: function(src)\n\t{\n\t\tdocument.write('<script src=\"'+src+'\"></script>');\n\t}\n};\n\n/**\n * Variable: mxLoadResources\n * \n * Optional global config variable to toggle loading of the two resource files\n * in <mxGraph> and <mxEditor>. Default is true. NOTE: This is a global variable,\n * not a variable of mxClient. If this is false, you can use <mxClient.loadResources>\n * with its callback to load the default bundles asynchronously.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadResources = false;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxLoadResources) == 'undefined')\n{\n\tmxLoadResources = true;\n}\n\n/**\n * Variable: mxForceIncludes\n * \n * Optional global config variable to force loading the JavaScript files in\n * development mode. Default is undefined. NOTE: This is a global variable,\n * not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadResources = true;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxForceIncludes) == 'undefined')\n{\n\tmxForceIncludes = false;\n}\n\n/**\n * Variable: mxResourceExtension\n * \n * Optional global config variable to specify the extension of resource files.\n * Default is true. NOTE: This is a global variable, not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxResourceExtension = '.txt';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxResourceExtension) == 'undefined')\n{\n\tmxResourceExtension = '.txt';\n}\n\n/**\n * Variable: mxLoadStylesheets\n * \n * Optional global config variable to toggle loading of the CSS files when\n * the library is initialized. Default is true. NOTE: This is a global variable,\n * not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadStylesheets = false;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxLoadStylesheets) == 'undefined')\n{\n\tmxLoadStylesheets = true;\n}\n\n/**\n * Variable: basePath\n *\n * Basepath for all URLs in the core without trailing slash. Default is '.'.\n * Set mxBasePath prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxBasePath = '/path/to/core/directory';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n * \n * When using a relative path, the path is relative to the URL of the page that\n * contains the assignment. Trailing slashes are automatically removed.\n */\nif (typeof(mxBasePath) != 'undefined' && mxBasePath.length > 0)\n{\n\t// Adds a trailing slash if required\n\tif (mxBasePath.substring(mxBasePath.length - 1) == '/')\n\t{\n\t\tmxBasePath = mxBasePath.substring(0, mxBasePath.length - 1);\n\t}\n\n\tmxClient.basePath = mxBasePath;\n}\nelse\n{\n\tmxClient.basePath = '.';\n}\n\n/**\n * Variable: imageBasePath\n *\n * Basepath for all images URLs in the core without trailing slash. Default is\n * <mxClient.basePath> + '/images'. Set mxImageBasePath prior to loading the\n * mxClient library as follows to override this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxImageBasePath = '/path/to/image/directory';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n * \n * When using a relative path, the path is relative to the URL of the page that\n * contains the assignment. Trailing slashes are automatically removed.\n */\nif (typeof(mxImageBasePath) != 'undefined' && mxImageBasePath.length > 0)\n{\n\t// Adds a trailing slash if required\n\tif (mxImageBasePath.substring(mxImageBasePath.length - 1) == '/')\n\t{\n\t\tmxImageBasePath = mxImageBasePath.substring(0, mxImageBasePath.length - 1);\n\t}\n\n\tmxClient.imageBasePath = mxImageBasePath;\n}\nelse\n{\n\tmxClient.imageBasePath = mxClient.basePath + '/images';\t\n}\n\n/**\n * Variable: language\n *\n * Defines the language of the client, eg. en for english, de for german etc.\n * The special value 'none' will disable all built-in internationalization and\n * resource loading. See <mxResources.getSpecialBundle> for handling identifiers\n * with and without a dash.\n * \n * Set mxLanguage prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxLanguage = 'en';\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n * \n * If internationalization is disabled, then the following variables should be\n * overridden to reflect the current language of the system. These variables are\n * cleared when i18n is disabled.\n * <mxEditor.askZoomResource>, <mxEditor.lastSavedResource>,\n * <mxEditor.currentFileResource>, <mxEditor.propertiesResource>,\n * <mxEditor.tasksResource>, <mxEditor.helpResource>, <mxEditor.outlineResource>,\n * <mxElbowEdgeHandler.doubleClickOrientationResource>, <mxUtils.errorResource>,\n * <mxUtils.closeResource>, <mxGraphSelectionModel.doneResource>,\n * <mxGraphSelectionModel.updatingSelectionResource>, <mxGraphView.doneResource>,\n * <mxGraphView.updatingDocumentResource>, <mxCellRenderer.collapseExpandResource>,\n * <mxGraph.containsValidationErrorsResource> and\n * <mxGraph.alreadyConnectedResource>.\n */\nif (typeof(mxLanguage) != 'undefined' && mxLanguage != null)\n{\n\tmxClient.language = mxLanguage;\n}\nelse\n{\n\tmxClient.language = (mxClient.IS_IE) ? navigator.userLanguage : navigator.language;\n}\n\n/**\n * Variable: defaultLanguage\n * \n * Defines the default language which is used in the common resource files. Any\n * resources for this language will only load the common resource file, but not\n * the language-specific resource file. Default is 'en'.\n * \n * Set mxDefaultLanguage prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxDefaultLanguage = 'de';\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxDefaultLanguage) != 'undefined' && mxDefaultLanguage != null)\n{\n\tmxClient.defaultLanguage = mxDefaultLanguage;\n}\nelse\n{\n\tmxClient.defaultLanguage = 'en';\n}\n\n// Adds all required stylesheets and namespaces\nif (mxLoadStylesheets)\n{\n\tmxClient.link('stylesheet', mxClient.basePath + '/css/common.css');\n}\n\n/**\n * Variable: languages\n *\n * Defines the optional array of all supported language extensions. The default\n * language does not have to be part of this list. See\n * <mxResources.isLanguageSupported>.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxLanguages = ['de', 'it', 'fr'];\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n * \n * This is used to avoid unnecessary requests to language files, ie. if a 404\n * will be returned.\n */\nif (typeof(mxLanguages) != 'undefined' && mxLanguages != null)\n{\n\tmxClient.languages = mxLanguages;\n}\n\n// Adds required namespaces, stylesheets and memory handling for older IE browsers\nif (mxClient.IS_VML)\n{\n\tif (mxClient.IS_SVG)\n\t{\n\t\tmxClient.IS_VML = false;\n\t}\n\telse\n\t{\n\t\t// Enables support for IE8 standards mode. Note that this requires all attributes for VML\n\t\t// elements to be set using direct notation, ie. node.attr = value. The use of setAttribute\n\t\t// is not possible.\n\t\tif (document.documentMode == 8)\n\t\t{\n\t\t\tdocument.namespaces.add(mxClient.VML_PREFIX, 'urn:schemas-microsoft-com:vml', '#default#VML');\n\t\t\tdocument.namespaces.add(mxClient.OFFICE_PREFIX, 'urn:schemas-microsoft-com:office:office', '#default#VML');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.namespaces.add(mxClient.VML_PREFIX, 'urn:schemas-microsoft-com:vml');\n\t\t\tdocument.namespaces.add(mxClient.OFFICE_PREFIX, 'urn:schemas-microsoft-com:office:office');\n\t\t}\n\n\t\t// Workaround for limited number of stylesheets in IE (does not work in standards mode)\n\t\tif (mxClient.IS_QUIRKS && document.styleSheets.length >= 30)\n\t\t{\n\t\t\t(function()\n\t\t\t{\n\t\t\t\tvar node = document.createElement('style');\n\t\t\t\tnode.type = 'text/css';\n\t\t\t\tnode.styleSheet.cssText = mxClient.VML_PREFIX + '\\\\:*{behavior:url(#default#VML)}' +\n\t\t        \tmxClient.OFFICE_PREFIX + '\\\\:*{behavior:url(#default#VML)}';\n\t\t        document.getElementsByTagName('head')[0].appendChild(node);\n\t\t\t})();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.createStyleSheet().cssText = mxClient.VML_PREFIX + '\\\\:*{behavior:url(#default#VML)}' +\n\t\t    \tmxClient.OFFICE_PREFIX + '\\\\:*{behavior:url(#default#VML)}';\n\t\t}\n\t    \n\t    if (mxLoadStylesheets)\n\t    {\n\t    \tmxClient.link('stylesheet', mxClient.basePath + '/css/explorer.css');\n\t    }\n\t}\n}\n\n// PREPROCESSOR-REMOVE-START\n// If script is loaded via CommonJS, do not write <script> tags to the page\n// for dependencies. These are already included in the build.\nif (mxForceIncludes || !(typeof module === 'object' && module.exports != null))\n{\n// PREPROCESSOR-REMOVE-END\n\tmxClient.include(mxClient.basePath+'/js/util/mxLog.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxObjectIdentity.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxDictionary.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxResources.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxPoint.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxRectangle.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEffects.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUtils.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxConstants.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEventObject.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxMouseEvent.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEventSource.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEvent.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxXmlRequest.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxClipboard.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxWindow.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxForm.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxImage.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxDivResizer.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxDragSource.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxToolbar.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUndoableEdit.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUndoManager.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUrlConverter.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxPanningManager.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxPopupMenu.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxAutoSaveManager.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxAnimation.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxMorphing.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxImageBundle.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxImageExport.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxAbstractCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxXmlCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxSvgCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxVmlCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxGuide.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxStencil.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxShape.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxStencilRegistry.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxMarker.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxActor.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxCloud.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxRectangleShape.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxEllipse.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxDoubleEllipse.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxRhombus.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxPolyline.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxArrow.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxArrowConnector.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxText.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxTriangle.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxHexagon.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxLine.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxImageShape.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxLabel.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxCylinder.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxConnector.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxSwimlane.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxGraphLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxStackLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxPartitionLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxCompactTreeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxRadialTreeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxFastOrganicLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxCircleLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxParallelEdgeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxCompositeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxEdgeLabelLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphAbstractHierarchyCell.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphHierarchyNode.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphHierarchyEdge.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphHierarchyModel.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxSwimlaneModel.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxHierarchicalLayoutStage.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxMedianHybridCrossingReduction.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxMinimumCycleRemover.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxCoordinateAssignment.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxSwimlaneOrdering.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/mxHierarchicalLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/mxSwimlaneLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxGraphModel.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxCell.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxGeometry.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxCellPath.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxPerimeter.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxPrintPreview.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxStylesheet.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellState.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxGraphSelectionModel.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellEditor.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellRenderer.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxEdgeStyle.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxStyleRegistry.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxGraphView.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxGraph.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellOverlay.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxOutline.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxMultiplicity.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxLayoutManager.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxSwimlaneManager.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxTemporaryCellStates.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellStatePreview.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxConnectionConstraint.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxGraphHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxPanningHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxPopupMenuHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxCellMarker.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxSelectionCellsHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxConnectionHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxConstraintHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxRubberband.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxHandle.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxVertexHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxEdgeHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxElbowEdgeHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxEdgeSegmentHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxKeyHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxTooltipHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxCellTracker.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxCellHighlight.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxDefaultKeyHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxDefaultPopupMenu.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxDefaultToolbar.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxEditor.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxCodecRegistry.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxObjectCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxCellCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxModelCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxRootChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxChildChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxTerminalChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxGenericChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxGraphCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxGraphViewCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxStylesheetCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxDefaultKeyHandlerCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxDefaultToolbarCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxDefaultPopupMenuCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxEditorCodec.js');\n// PREPROCESSOR-REMOVE-START\n}\n// PREPROCESSOR-REMOVE-END\n\n__mxOutput.mxClient = typeof mxClient !== 'undefined' ? mxClient : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxLog =\n{\n\t/**\n\t * Class: mxLog\n\t * \n\t * A singleton class that implements a simple console.\n\t * \n\t * Variable: consoleName\n\t * \n\t * Specifies the name of the console window. Default is 'Console'.\n\t */\n\tconsoleName: 'Console',\n\t\n\t/**\n\t * Variable: TRACE\n\t * \n\t * Specified if the output for <enter> and <leave> should be visible in the\n\t * console. Default is false.\n\t */\n\tTRACE: false,\n\n\t/**\n\t * Variable: DEBUG\n\t * \n\t * Specifies if the output for <debug> should be visible in the console.\n\t * Default is true.\n\t */\n\tDEBUG: true,\n\n\t/**\n\t * Variable: WARN\n\t * \n\t * Specifies if the output for <warn> should be visible in the console.\n\t * Default is true.\n\t */\n\tWARN: true,\n\n\t/**\n\t * Variable: buffer\n\t * \n\t * Buffer for pre-initialized content.\n\t */\n\tbuffer: '',\n\t\n\t/**\n\t * Function: init\n\t *\n\t * Initializes the DOM node for the console. This requires document.body to\n\t * point to a non-null value. This is called from within <setVisible> if the\n\t * log has not yet been initialized.\n\t */\n\tinit: function()\n\t{\n\t\tif (mxLog.window == null && document.body != null)\n\t\t{\n\t\t\tvar title = mxLog.consoleName + ' - mxGraph ' + mxClient.VERSION;\n\n\t\t\t// Creates a table that maintains the layout\n\t\t\tvar table = document.createElement('table');\n\t\t\ttable.setAttribute('width', '100%');\n\t\t\ttable.setAttribute('height', '100%');\n\n\t\t\tvar tbody = document.createElement('tbody');\n\t\t\tvar tr = document.createElement('tr');\n\t\t\tvar td = document.createElement('td');\n\t\t\ttd.style.verticalAlign = 'top';\n\t\t\t\t\n\t\t\t// Adds the actual console as a textarea\n\t\t\tmxLog.textarea = document.createElement('textarea');\n\t\t\tmxLog.textarea.setAttribute('wrap', 'off');\n\t\t\tmxLog.textarea.setAttribute('readOnly', 'true');\n\t\t\tmxLog.textarea.style.height = '100%';\n\t\t\tmxLog.textarea.style.resize = 'none';\n\t\t\tmxLog.textarea.value = mxLog.buffer;\n\n\t\t\t// Workaround for wrong width in standards mode\n\t\t\tif (mxClient.IS_NS && document.compatMode != 'BackCompat')\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.width = '99%';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.width = '100%';\n\t\t\t}\n\t\t\t\n\t\t\ttd.appendChild(mxLog.textarea);\n\t\t\ttr.appendChild(td);\n\t\t\ttbody.appendChild(tr);\n\n\t\t\t// Creates the container div\n\t\t\ttr = document.createElement('tr');\n\t\t\tmxLog.td = document.createElement('td');\n\t\t\tmxLog.td.style.verticalAlign = 'top';\n\t\t\tmxLog.td.setAttribute('height', '30px');\n\t\t\t\n\t\t\ttr.appendChild(mxLog.td);\n\t\t\ttbody.appendChild(tr);\n\t\t\ttable.appendChild(tbody);\n\n\t\t\t// Adds various debugging buttons\n\t\t\tmxLog.addButton('Info', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.info();\n\t\t\t});\n\t\t\n\t\t\tmxLog.addButton('DOM', function (evt)\n\t\t\t{\n\t\t\t\tvar content = mxUtils.getInnerHtml(document.body);\n\t\t\t\tmxLog.debug(content);\n\t\t\t});\n\t\n\t\t\tmxLog.addButton('Trace', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.TRACE = !mxLog.TRACE;\n\t\t\t\t\n\t\t\t\tif (mxLog.TRACE)\n\t\t\t\t{\n\t\t\t\t\tmxLog.debug('Tracing enabled');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmxLog.debug('Tracing disabled');\n\t\t\t\t}\n\t\t\t});\t\n\n\t\t\tmxLog.addButton('Copy', function (evt)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmxUtils.copy(mxLog.textarea.value);\n\t\t\t\t}\n\t\t\t\tcatch (err)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.alert(err);\n\t\t\t\t}\n\t\t\t});\t\t\t\n\n\t\t\tmxLog.addButton('Show', function (evt)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmxUtils.popup(mxLog.textarea.value);\n\t\t\t\t}\n\t\t\t\tcatch (err)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.alert(err);\n\t\t\t\t}\n\t\t\t});\t\n\t\t\t\n\t\t\tmxLog.addButton('Clear', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.textarea.value = '';\n\t\t\t});\n\n\t\t\t// Cross-browser code to get window size\n\t\t\tvar h = 0;\n\t\t\tvar w = 0;\n\t\t\t\n\t\t\tif (typeof(window.innerWidth) === 'number')\n\t\t\t{\n\t\t\t\th = window.innerHeight;\n\t\t\t\tw = window.innerWidth;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\th = (document.documentElement.clientHeight || document.body.clientHeight);\n\t\t\t\tw = document.body.clientWidth;\n\t\t\t}\n\n\t\t\tmxLog.window = new mxWindow(title, table, Math.max(0, w - 320), Math.max(0, h - 210), 300, 160);\n\t\t\tmxLog.window.setMaximizable(true);\n\t\t\tmxLog.window.setScrollable(false);\n\t\t\tmxLog.window.setResizable(true);\n\t\t\tmxLog.window.setClosable(true);\n\t\t\tmxLog.window.destroyOnClose = false;\n\t\t\t\n\t\t\t// Workaround for ignored textarea height in various setups\n\t\t\tif (((mxClient.IS_NS || mxClient.IS_IE) && !mxClient.IS_GC &&\n\t\t\t\t!mxClient.IS_SF && document.compatMode != 'BackCompat') ||\n\t\t\t\tdocument.documentMode == 11)\n\t\t\t{\n\t\t\t\tvar elt = mxLog.window.getElement();\n\t\t\t\t\n\t\t\t\tvar resizeHandler = function(sender, evt)\n\t\t\t\t{\n\t\t\t\t\tmxLog.textarea.style.height = Math.max(0, elt.offsetHeight - 70) + 'px';\n\t\t\t\t}; \n\t\t\t\t\n\t\t\t\tmxLog.window.addListener(mxEvent.RESIZE_END, resizeHandler);\n\t\t\t\tmxLog.window.addListener(mxEvent.MAXIMIZE, resizeHandler);\n\t\t\t\tmxLog.window.addListener(mxEvent.NORMALIZE, resizeHandler);\n\n\t\t\t\tmxLog.textarea.style.height = '92px';\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: info\n\t * \n\t * Writes the current navigator information to the console.\n\t */\n\tinfo: function()\n\t{\n\t\tmxLog.writeln(mxUtils.toString(navigator));\n\t},\n\t\t\t\n\t/**\n\t * Function: addButton\n\t * \n\t * Adds a button to the console using the given label and function.\n\t */\n\taddButton: function(lab, funct)\n\t{\n\t\tvar button = document.createElement('button');\n\t\tmxUtils.write(button, lab);\n\t\tmxEvent.addListener(button, 'click', funct);\n\t\tmxLog.td.appendChild(button);\n\t},\n\t\t\t\t\n\t/**\n\t * Function: isVisible\n\t * \n\t * Returns true if the console is visible.\n\t */\n\tisVisible: function()\n\t{\n\t\tif (mxLog.window != null)\n\t\t{\n\t\t\treturn mxLog.window.isVisible();\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\n\t/**\n\t * Function: show\n\t * \n\t * Shows the console.\n\t */\n\tshow: function()\n\t{\n\t\tmxLog.setVisible(true);\n\t},\n\n\t/**\n\t * Function: setVisible\n\t * \n\t * Shows or hides the console.\n\t */\n\tsetVisible: function(visible)\n\t{\n\t\tif (mxLog.window == null)\n\t\t{\n\t\t\tmxLog.init();\n\t\t}\n\n\t\tif (mxLog.window != null)\n\t\t{\n\t\t\tmxLog.window.setVisible(visible);\n\t\t}\n\t},\n\n\t/**\n\t * Function: enter\n\t * \n\t * Writes the specified string to the console\n\t * if <TRACE> is true and returns the current \n\t * time in milliseconds.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * var t0 = mxLog.enter('Hello');\n\t * // Do something\n\t * mxLog.leave('World!', t0);\n\t * (end)\n\t */\n\tenter: function(string)\n\t{\n\t\tif (mxLog.TRACE)\n\t\t{\n\t\t\tmxLog.writeln('Entering '+string);\n\t\t\t\n\t\t\treturn new Date().getTime();\n\t\t}\n\t},\n\n\t/**\n\t * Function: leave\n\t * \n\t * Writes the specified string to the console\n\t * if <TRACE> is true and computes the difference\n\t * between the current time and t0 in milliseconds.\n\t * See <enter> for an example.\n\t */\n\tleave: function(string, t0)\n\t{\n\t\tif (mxLog.TRACE)\n\t\t{\n\t\t\tvar dt = (t0 != 0) ? ' ('+(new Date().getTime() - t0)+' ms)' : '';\n\t\t\tmxLog.writeln('Leaving '+string+dt);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: debug\n\t * \n\t * Adds all arguments to the console if <DEBUG> is enabled.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * mxLog.debug('Hello, World!');\n\t * (end)\n\t */\n\tdebug: function()\n\t{\n\t\tif (mxLog.DEBUG)\n\t\t{\n\t\t\tmxLog.writeln.apply(this, arguments);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: warn\n\t * \n\t * Adds all arguments to the console if <WARN> is enabled.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * mxLog.warn('Hello, World!');\n\t * (end)\n\t */\n\twarn: function()\n\t{\n\t\tif (mxLog.WARN)\n\t\t{\n\t\t\tmxLog.writeln.apply(this, arguments);\n\t\t}\n\t},\n\n\t/**\n\t * Function: write\n\t * \n\t * Adds the specified strings to the console.\n\t */\n\twrite: function()\n\t{\n\t\tvar string = '';\n\t\t\n\t\tfor (var i = 0; i < arguments.length; i++)\n\t\t{\n\t\t\tstring += arguments[i];\n\t\t\t\n\t\t\tif (i < arguments.length - 1)\n\t\t\t{\n\t\t\t\tstring += ' ';\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (mxLog.textarea != null)\n\t\t{\n\t\t\tmxLog.textarea.value = mxLog.textarea.value + string;\n\n\t\t\t// Workaround for no update in Presto 2.5.22 (Opera 10.5)\n\t\t\tif (navigator.userAgent.indexOf('Presto/2.5') >= 0)\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.visibility = 'hidden';\n\t\t\t\tmxLog.textarea.style.visibility = 'visible';\n\t\t\t}\n\t\t\t\n\t\t\tmxLog.textarea.scrollTop = mxLog.textarea.scrollHeight;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxLog.buffer += string;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: writeln\n\t * \n\t * Adds the specified strings to the console, appending a linefeed at the\n\t * end of each string.\n\t */\n\twriteln: function()\n\t{\n\t\tvar string = '';\n\t\t\n\t\tfor (var i = 0; i < arguments.length; i++)\n\t\t{\n\t\t\tstring += arguments[i];\n\t\t\t\n\t\t\tif (i < arguments.length - 1)\n\t\t\t{\n\t\t\t\tstring += ' ';\n\t\t\t}\n\t\t}\n\n\t\tmxLog.write(string + '\\n');\n\t}\n\t\n};\n\n__mxOutput.mxLog = typeof mxLog !== 'undefined' ? mxLog : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxObjectIdentity =\n{\n\t/**\n\t * Class: mxObjectIdentity\n\t * \n\t * Identity for JavaScript objects and functions. This is implemented using\n\t * a simple incrementing counter which is stored in each object under\n\t * <FIELD_NAME>.\n\t * \n\t * The identity for an object does not change during its lifecycle.\n\t * \n\t * Variable: FIELD_NAME\n\t * \n\t * Name of the field to be used to store the object ID. Default is\n\t * <code>mxObjectId</code>.\n\t */\n\tFIELD_NAME: 'mxObjectId',\n\n\t/**\n\t * Variable: counter\n\t * \n\t * Current counter.\n\t */\n\tcounter: 0,\n\n\t/**\n\t * Function: get\n\t * \n\t * Returns the ID for the given object or function or null if no object\n\t * is specified.\n\t */\n\tget: function(obj)\n\t{\n\t\tif (obj != null)\n\t\t{\n\t\t\tif (obj[mxObjectIdentity.FIELD_NAME] == null)\n\t\t\t{\n\t\t\t\tif (typeof obj === 'object')\n\t\t\t\t{\n\t\t\t\t\tvar ctor = mxUtils.getFunctionName(obj.constructor);\n\t\t\t\t\tobj[mxObjectIdentity.FIELD_NAME] = ctor + '#' + mxObjectIdentity.counter++;\n\t\t\t\t}\n\t\t\t\telse if (typeof obj === 'function')\n\t\t\t\t{\n\t\t\t\t\tobj[mxObjectIdentity.FIELD_NAME] = 'Function#' + mxObjectIdentity.counter++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn obj[mxObjectIdentity.FIELD_NAME];\n\t\t}\n\t\t\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: clear\n\t * \n\t * Deletes the ID from the given object or function.\n\t */\n\tclear: function(obj)\n\t{\n\t\tif (typeof(obj) === 'object' || typeof obj === 'function')\n\t\t{\n\t\t\tdelete obj[mxObjectIdentity.FIELD_NAME];\n\t\t}\n\t}\n\n};\n\n__mxOutput.mxObjectIdentity = typeof mxObjectIdentity !== 'undefined' ? mxObjectIdentity : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDictionary\n *\n * A wrapper class for an associative array with object keys. Note: This\n * implementation uses <mxObjectIdentitiy> to turn object keys into strings.\n * \n * Constructor: mxEventSource\n *\n * Constructs a new dictionary which allows object to be used as keys.\n */\nfunction mxDictionary()\n{\n\tthis.clear();\n};\n\n/**\n * Function: map\n *\n * Stores the (key, value) pairs in this dictionary.\n */\nmxDictionary.prototype.map = null;\n\n/**\n * Function: clear\n *\n * Clears the dictionary.\n */\nmxDictionary.prototype.clear = function()\n{\n\tthis.map = {};\n};\n\n/**\n * Function: get\n *\n * Returns the value for the given key.\n */\nmxDictionary.prototype.get = function(key)\n{\n\tvar id = mxObjectIdentity.get(key);\n\t\n\treturn this.map[id];\n};\n\n/**\n * Function: put\n *\n * Stores the value under the given key and returns the previous\n * value for that key.\n */\nmxDictionary.prototype.put = function(key, value)\n{\n\tvar id = mxObjectIdentity.get(key);\n\tvar previous = this.map[id];\n\tthis.map[id] = value;\n\t\n\treturn previous;\n};\n\n/**\n * Function: remove\n *\n * Removes the value for the given key and returns the value that\n * has been removed.\n */\nmxDictionary.prototype.remove = function(key)\n{\n\tvar id = mxObjectIdentity.get(key);\n\tvar previous = this.map[id];\n\tdelete this.map[id];\n\t\n\treturn previous;\n};\n\n/**\n * Function: getKeys\n *\n * Returns all keys as an array.\n */\nmxDictionary.prototype.getKeys = function()\n{\n\tvar result = [];\n\t\n\tfor (var key in this.map)\n\t{\n\t\tresult.push(key);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getValues\n *\n * Returns all values as an array.\n */\nmxDictionary.prototype.getValues = function()\n{\n\tvar result = [];\n\t\n\tfor (var key in this.map)\n\t{\n\t\tresult.push(this.map[key]);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: visit\n *\n * Visits all entries in the dictionary using the given function with the\n * following signature: function(key, value) where key is a string and\n * value is an object.\n * \n * Parameters:\n * \n * visitor - A function that takes the key and value as arguments.\n */\nmxDictionary.prototype.visit = function(visitor)\n{\n\tfor (var key in this.map)\n\t{\n\t\tvisitor(key, this.map[key]);\n\t}\n};\n\n__mxOutput.mxDictionary = typeof mxDictionary !== 'undefined' ? mxDictionary : undefined;\n\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\nvar mxResources =\n{\n\t/**\n\t * Class: mxResources\n\t * \n\t * Implements internationalization. You can provide any number of \n\t * resource files on the server using the following format for the \n\t * filename: name[-en].properties. The en stands for any lowercase \n\t * 2-character language shortcut (eg. de for german, fr for french).\n\t *\n\t * If the optional language extension is omitted, then the file is used as a \n\t * default resource which is loaded in all cases. If a properties file for a \n\t * specific language exists, then it is used to override the settings in the \n\t * default resource. All entries in the file are of the form key=value. The\n\t * values may then be accessed in code via <get>. Lines without \n\t * equal signs in the properties files are ignored.\n\t *\n\t * Resource files may either be added programmatically using\n\t * <add> or via a resource tag in the UI section of the \n\t * editor configuration file, eg:\n\t * \n\t * (code)\n\t * <mxEditor>\n\t *   <ui>\n\t *     <resource basename=\"examples/resources/mxWorkflow\"/>\n\t * (end)\n\t * \n\t * The above element will load examples/resources/mxWorkflow.properties as well\n\t * as the language specific file for the current language, if it exists.\n\t * \n\t * Values may contain placeholders of the form {1}...{n} where each placeholder\n\t * is replaced with the value of the corresponding array element in the params\n\t * argument passed to <mxResources.get>. The placeholder {1} maps to the first\n\t * element in the array (at index 0).\n\t * \n\t * See <mxClient.language> for more information on specifying the default\n\t * language or disabling all loading of resources.\n\t * \n\t * Lines that start with a # sign will be ignored.\n\t * \n\t * Special characters\n\t * \n\t * To use unicode characters, use the standard notation (eg. \\u8fd1) or %u as a\n\t * prefix (eg. %u20AC will display a Euro sign). For normal hex encoded strings,\n\t * use % as a prefix, eg. %F6 will display a \"o umlaut\" (&ouml;).\n\t * \n\t * See <resourcesEncoded> to disable this. If you disable this, make sure that\n\t * your files are UTF-8 encoded.\n\t * \n\t * Asynchronous loading\n\t * \n\t * By default, the core adds two resource files synchronously at load time.\n\t * To load these files asynchronously, set <mxLoadResources> to false\n\t * before loading mxClient.js and use <mxResources.loadResources> instead.\n\t * \n\t * Variable: resources\n\t * \n\t * Object that maps from keys to values.\n\t */\n\tresources: {},\n\n\t/**\n\t * Variable: extension\n\t * \n\t * Specifies the extension used for language files. Default is <mxResourceExtension>.\n\t */\n\textension: mxResourceExtension,\n\n\t/**\n\t * Variable: resourcesEncoded\n\t * \n\t * Specifies whether or not values in resource files are encoded with \\u or\n\t * percentage. Default is false.\n\t */\n\tresourcesEncoded: false,\n\n\t/**\n\t * Variable: loadDefaultBundle\n\t * \n\t * Specifies if the default file for a given basename should be loaded.\n\t * Default is true.\n\t */\n\tloadDefaultBundle: true,\n\n\t/**\n\t * Variable: loadDefaultBundle\n\t * \n\t * Specifies if the specific language file file for a given basename should\n\t * be loaded. Default is true.\n\t */\n\tloadSpecialBundle: true,\n\n\t/**\n\t * Function: isLanguageSupported\n\t * \n\t * Hook for subclassers to disable support for a given language. This\n\t * implementation returns true if lan is in <mxClient.languages>.\n\t * \n\t * Parameters:\n\t *\n\t * lan - The current language.\n\t */\n\tisLanguageSupported: function(lan)\n\t{\n\t\tif (mxClient.languages != null)\n\t\t{\n\t\t\treturn mxUtils.indexOf(mxClient.languages, lan) >= 0;\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: getDefaultBundle\n\t * \n\t * Hook for subclassers to return the URL for the special bundle. This\n\t * implementation returns basename + <extension> or null if\n\t * <loadDefaultBundle> is false.\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The current language.\n\t */\n\tgetDefaultBundle: function(basename, lan)\n\t{\n\t\tif (mxResources.loadDefaultBundle || !mxResources.isLanguageSupported(lan))\n\t\t{\n\t\t\treturn basename + mxResources.extension;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Function: getSpecialBundle\n\t * \n\t * Hook for subclassers to return the URL for the special bundle. This\n\t * implementation returns basename + '_' + lan + <extension> or null if\n\t * <loadSpecialBundle> is false or lan equals <mxClient.defaultLanguage>.\n\t * \n\t * If <mxResources.languages> is not null and <mxClient.language> contains\n\t * a dash, then this method checks if <isLanguageSupported> returns true\n\t * for the full language (including the dash). If that returns false the\n\t * first part of the language (up to the dash) will be tried as an extension.\n\t * \n\t * If <mxResources.language> is null then the first part of the language is\n\t * used to maintain backwards compatibility.\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The language for which the file should be loaded.\n\t */\n\tgetSpecialBundle: function(basename, lan)\n\t{\n\t\tif (mxClient.languages == null || !this.isLanguageSupported(lan))\n\t\t{\n\t\t\tvar dash = lan.indexOf('-');\n\t\t\t\n\t\t\tif (dash > 0)\n\t\t\t{\n\t\t\t\tlan = lan.substring(0, dash);\n\t\t\t}\n\t\t}\n\n\t\tif (mxResources.loadSpecialBundle && mxResources.isLanguageSupported(lan) && lan != mxClient.defaultLanguage)\n\t\t{\n\t\t\treturn basename + '_' + lan + mxResources.extension;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Function: add\n\t * \n\t * Adds the default and current language properties file for the specified\n\t * basename. Existing keys are overridden as new files are added. If no\n\t * callback is used then the request is synchronous.\n\t *\n\t * Example:\n\t * \n\t * At application startup, additional resources may be \n\t * added using the following code:\n\t * \n\t * (code)\n\t * mxResources.add('resources/editor');\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The language for which the file should be loaded.\n\t * callback - Optional callback for asynchronous loading.\n\t */\n\tadd: function(basename, lan, callback)\n\t{\n\t\tlan = (lan != null) ? lan : ((mxClient.language != null) ?\n\t\t\tmxClient.language.toLowerCase() : mxConstants.NONE);\n\t\t\n\t\tif (lan != mxConstants.NONE)\n\t\t{\n\t\t\tvar defaultBundle = mxResources.getDefaultBundle(basename, lan);\n\t\t\tvar specialBundle = mxResources.getSpecialBundle(basename, lan);\n\t\t\t\n\t\t\tvar loadSpecialBundle = function()\n\t\t\t{\n\t\t\t\tif (specialBundle != null)\n\t\t\t\t{\n\t\t\t\t\tif (callback)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxUtils.get(specialBundle, function(req)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxResources.parse(req.getText());\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t}, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t   \t\tvar req = mxUtils.load(specialBundle);\n\t\t\t\t\t   \t\t\n\t\t\t\t\t   \t\tif (req.isReady())\n\t\t\t\t\t   \t\t{\n\t\t\t\t\t \t   \t\tmxResources.parse(req.getText());\n\t\t\t\t\t   \t\t}\n\t\t\t\t   \t\t}\n\t\t\t\t   \t\tcatch (e)\n\t\t\t\t   \t\t{\n\t\t\t\t   \t\t\t// ignore\n\t\t\t\t\t   \t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (callback != null)\n\t\t\t\t{\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (defaultBundle != null)\n\t\t\t{\n\t\t\t\tif (callback)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.get(defaultBundle, function(req)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxResources.parse(req.getText());\n\t\t\t\t\t\tloadSpecialBundle();\n\t\t\t\t\t}, function()\n\t\t\t\t\t{\n\t\t\t\t\t\tloadSpecialBundle();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t   \t\tvar req = mxUtils.load(defaultBundle);\n\t\t\t\t   \t\t\n\t\t\t\t   \t\tif (req.isReady())\n\t\t\t\t   \t\t{\n\t\t\t\t \t   \t\tmxResources.parse(req.getText());\n\t\t\t\t   \t\t}\n\t\t\t\t   \t\t\n\t\t\t\t   \t\tloadSpecialBundle();\n\t\t\t\t  \t}\n\t\t\t\t  \tcatch (e)\n\t\t\t\t  \t{\n\t\t\t\t  \t\t// ignore\n\t\t\t\t  \t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Overlays the language specific file (_lan-extension)\n\t\t\t\tloadSpecialBundle();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: parse\n\t * \n\t * Parses the key, value pairs in the specified\n\t * text and stores them as local resources.\n\t */\n\tparse: function(text)\n\t{\n\t\tif (text != null)\n\t\t{\n\t\t\tvar lines = text.split('\\n');\n\t\t\t\n\t\t\tfor (var i = 0; i < lines.length; i++)\n\t\t\t{\n\t\t\t\tif (lines[i].charAt(0) != '#')\n\t\t\t\t{\n\t\t\t\t\tvar index = lines[i].indexOf('=');\n\t\t\t\t\t\n\t\t\t\t\tif (index > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar key = lines[i].substring(0, index);\n\t\t\t\t\t\tvar idx = lines[i].length;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lines[i].charCodeAt(idx - 1) == 13)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tidx--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar value = lines[i].substring(index + 1, idx);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.resourcesEncoded)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue = value.replace(/\\\\(?=u[a-fA-F\\d]{4})/g,\"%\");\n\t\t\t\t\t\t\tmxResources.resources[key] = unescape(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxResources.resources[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: get\n\t * \n\t * Returns the value for the specified resource key.\n\t *\n\t * Example:\n\t * To read the value for 'welomeMessage', use the following:\n\t * (code)\n\t * var result = mxResources.get('welcomeMessage') || '';\n\t * (end)\n\t *\n\t * This would require an entry of the following form in\n\t * one of the English language resource files:\n\t * (code)\n\t * welcomeMessage=Welcome to mxGraph!\n\t * (end)\n\t * \n\t * The part behind the || is the string value to be used if the given\n\t * resource is not available.\n\t * \n\t * Parameters:\n\t * \n\t * key - String that represents the key of the resource to be returned.\n\t * params - Array of the values for the placeholders of the form {1}...{n}\n\t * to be replaced with in the resulting string.\n\t * defaultValue - Optional string that specifies the default return value.\n\t */\n\tget: function(key, params, defaultValue)\n\t{\n\t\tvar value = mxResources.resources[key];\n\t\t\n\t\t// Applies the default value if no resource was found\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\t\n\t\t// Replaces the placeholders with the values in the array\n\t\tif (value != null && params != null)\n\t\t{\n\t\t\tvalue = mxResources.replacePlaceholders(value, params);\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: replacePlaceholders\n\t * \n\t * Replaces the given placeholders with the given parameters.\n\t * \n\t * Parameters:\n\t * \n\t * value - String that contains the placeholders.\n\t * params - Array of the values for the placeholders of the form {1}...{n}\n\t * to be replaced with in the resulting string.\n\t */\n\treplacePlaceholders: function(value, params)\n\t{\n\t\tvar result = [];\n\t\tvar index = null;\n\t\t\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tvar c = value.charAt(i);\n\n\t\t\tif (c == '{')\n\t\t\t{\n\t\t\t\tindex = '';\n\t\t\t}\n\t\t\telse if (index != null && \tc == '}')\n\t\t\t{\n\t\t\t\tindex = parseInt(index)-1;\n\t\t\t\t\n\t\t\t\tif (index >= 0 && index < params.length)\n\t\t\t\t{\n\t\t\t\t\tresult.push(params[index]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tindex = null;\n\t\t\t}\n\t\t\telse if (index != null)\n\t\t\t{\n\t\t\t\tindex += c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(c);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join('');\n\t},\n\n\t/**\n\t * Function: loadResources\n\t * \n\t * Loads all required resources asynchronously. Use this to load the graph and\n\t * editor resources if <mxLoadResources> is false.\n\t * \n\t * Parameters:\n\t * \n\t * callback - Callback function for asynchronous loading.\n\t */\n\tloadResources: function(callback)\n\t{\n\t\tmxResources.add(mxClient.basePath+'/resources/editor', null, function()\n\t\t{\n\t\t\tmxResources.add(mxClient.basePath+'/resources/graph', null, callback);\n\t\t});\n\t}\n\n};\n\n__mxOutput.mxResources = typeof mxResources !== 'undefined' ? mxResources : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPoint\n *\n * Implements a 2-dimensional vector with double precision coordinates.\n * \n * Constructor: mxPoint\n *\n * Constructs a new point for the optional x and y coordinates. If no\n * coordinates are given, then the default values for <x> and <y> are used.\n */\nfunction mxPoint(x, y)\n{\n\tthis.x = (x != null) ? x : 0;\n\tthis.y = (y != null) ? y : 0;\n};\n\n/**\n * Variable: x\n *\n * Holds the x-coordinate of the point. Default is 0.\n */\nmxPoint.prototype.x = null;\n\n/**\n * Variable: y\n *\n * Holds the y-coordinate of the point. Default is 0.\n */\nmxPoint.prototype.y = null;\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this point.\n */\nmxPoint.prototype.equals = function(obj)\n{\n\treturn obj != null && obj.x == this.x && obj.y == this.y;\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of this <mxPoint>.\n */\nmxPoint.prototype.clone = function()\n{\n\t// Handles subclasses as well\n\treturn mxUtils.clone(this);\n};\n\n__mxOutput.mxPoint = typeof mxPoint !== 'undefined' ? mxPoint : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRectangle\n *\n * Extends <mxPoint> to implement a 2-dimensional rectangle with double\n * precision coordinates.\n * \n * Constructor: mxRectangle\n *\n * Constructs a new rectangle for the optional parameters. If no parameters\n * are given then the respective default values are used.\n */\nfunction mxRectangle(x, y, width, height)\n{\n\tmxPoint.call(this, x, y);\n\n\tthis.width = (width != null) ? width : 0;\n\tthis.height = (height != null) ? height : 0;\n};\n\n/**\n * Extends mxPoint.\n */\nmxRectangle.prototype = new mxPoint();\nmxRectangle.prototype.constructor = mxRectangle;\n\n/**\n * Variable: width\n *\n * Holds the width of the rectangle. Default is 0.\n */\nmxRectangle.prototype.width = null;\n\n/**\n * Variable: height\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxRectangle.prototype.height = null;\n\n/**\n * Function: setRect\n * \n * Sets this rectangle to the specified values\n */\nmxRectangle.prototype.setRect = function(x, y, w, h)\n{\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n};\n\n/**\n * Function: getCenterX\n * \n * Returns the x-coordinate of the center point.\n */\nmxRectangle.prototype.getCenterX = function ()\n{\n\treturn this.x + this.width/2;\n};\n\n/**\n * Function: getCenterY\n * \n * Returns the y-coordinate of the center point.\n */\nmxRectangle.prototype.getCenterY = function ()\n{\n\treturn this.y + this.height/2;\n};\n\n/**\n * Function: add\n *\n * Adds the given rectangle to this rectangle.\n */\nmxRectangle.prototype.add = function(rect)\n{\n\tif (rect != null)\n\t{\n\t\tvar minX = Math.min(this.x, rect.x);\n\t\tvar minY = Math.min(this.y, rect.y);\n\t\tvar maxX = Math.max(this.x + this.width, rect.x + rect.width);\n\t\tvar maxY = Math.max(this.y + this.height, rect.y + rect.height);\n\t\t\n\t\tthis.x = minX;\n\t\tthis.y = minY;\n\t\tthis.width = maxX - minX;\n\t\tthis.height = maxY - minY;\n\t}\n};\n\n/**\n * Function: intersect\n * \n * Changes this rectangle to where it overlaps with the given rectangle.\n */\nmxRectangle.prototype.intersect = function(rect)\n{\n\tif (rect != null)\n\t{\n\t\tvar r1 = this.x + this.width;\n\t\tvar r2 = rect.x + rect.width;\n\t\t\n\t\tvar b1 = this.y + this.height;\n\t\tvar b2 = rect.y + rect.height;\n\t\t\n\t\tthis.x = Math.max(this.x, rect.x);\n\t\tthis.y = Math.max(this.y, rect.y);\n\t\tthis.width = Math.min(r1, r2) - this.x;\n\t\tthis.height = Math.min(b1, b2) - this.y;\n\t}\n};\n\n/**\n * Function: grow\n *\n * Grows the rectangle by the given amount, that is, this method subtracts\n * the given amount from the x- and y-coordinates and adds twice the amount\n * to the width and height.\n */\nmxRectangle.prototype.grow = function(amount)\n{\n\tthis.x -= amount;\n\tthis.y -= amount;\n\tthis.width += 2 * amount;\n\tthis.height += 2 * amount;\n};\n\n/**\n * Function: getPoint\n * \n * Returns the top, left corner as a new <mxPoint>.\n */\nmxRectangle.prototype.getPoint = function()\n{\n\treturn new mxPoint(this.x, this.y);\n};\n\n/**\n * Function: rotate90\n * \n * Rotates this rectangle by 90 degree around its center point.\n */\nmxRectangle.prototype.rotate90 = function()\n{\n\tvar t = (this.width - this.height) / 2;\n\tthis.x += t;\n\tthis.y -= t;\n\tvar tmp = this.width;\n\tthis.width = this.height;\n\tthis.height = tmp;\n};\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this rectangle.\n */\nmxRectangle.prototype.equals = function(obj)\n{\n\treturn obj != null && obj.x == this.x && obj.y == this.y &&\n\t\tobj.width == this.width && obj.height == this.height;\n};\n\n/**\n * Function: fromRectangle\n * \n * Returns a new <mxRectangle> which is a copy of the given rectangle.\n */\nmxRectangle.fromRectangle = function(rect)\n{\n\treturn new mxRectangle(rect.x, rect.y, rect.width, rect.height);\n};\n\n__mxOutput.mxRectangle = typeof mxRectangle !== 'undefined' ? mxRectangle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEffects =\n{\n\n\t/**\n\t * Class: mxEffects\n\t * \n\t * Provides animation effects.\n\t */\n\n\t/**\n\t * Function: animateChanges\n\t * \n\t * Asynchronous animated move operation. See also: <mxMorphing>.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n\t * {\n\t *   var changes = evt.getProperty('edit').changes;\n\t * \n\t *   if (changes.length < 10)\n\t *   {\n\t *     mxEffects.animateChanges(graph, changes);\n\t *   }\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that received the changes.\n\t * changes - Array of changes to be animated.\n\t * done - Optional function argument that is invoked after the\n\t * last step of the animation.\n\t */\n\tanimateChanges: function(graph, changes, done)\n\t{\n\t\tvar maxStep = 10;\n\t\tvar step = 0;\n\n\t\tvar animate = function() \n\t\t{\n\t\t\tvar isRequired = false;\n\t\t\t\n\t\t\tfor (var i = 0; i < changes.length; i++)\n\t\t\t{\n\t\t\t\tvar change = changes[i];\n\t\t\t\t\n\t\t\t\tif (change instanceof mxGeometryChange ||\n\t\t\t\t\tchange instanceof mxTerminalChange ||\n\t\t\t\t\tchange instanceof mxValueChange ||\n\t\t\t\t\tchange instanceof mxChildChange ||\n\t\t\t\t\tchange instanceof mxStyleChange)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.getView().getState(change.cell || change.child, false);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tisRequired = true;\n\t\t\t\t\t\n\t\t\t\t\t\tif (change.constructor != mxGeometryChange || graph.model.isEdge(change.cell))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxUtils.setOpacity(state.shape.node, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar scale = graph.getView().scale;\t\t\t\t\t\n\n\t\t\t\t\t\t\tvar dx = (change.geometry.x - change.previous.x) * scale;\n\t\t\t\t\t\t\tvar dy = (change.geometry.y - change.previous.y) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar sx = (change.geometry.width - change.previous.width) * scale;\n\t\t\t\t\t\t\tvar sy = (change.geometry.height - change.previous.height) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (step == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x -= dx;\n\t\t\t\t\t\t\t\tstate.y -= dy;\n\t\t\t\t\t\t\t\tstate.width -= sx;\n\t\t\t\t\t\t\t\tstate.height -= sy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x += dx / maxStep;\n\t\t\t\t\t\t\t\tstate.y += dy / maxStep;\n\t\t\t\t\t\t\t\tstate.width += sx / maxStep;\n\t\t\t\t\t\t\t\tstate.height += sy / maxStep;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgraph.cellRenderer.redraw(state);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Fades all connected edges and children\n\t\t\t\t\t\t\tmxEffects.cascadeOpacity(graph, change.cell, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (step < maxStep && isRequired)\n\t\t\t{\n\t\t\t\tstep++;\n\t\t\t\twindow.setTimeout(animate, delay);\n\t\t\t}\n\t\t\telse if (done != null)\n\t\t\t{\n\t\t\t\tdone();\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar delay = 30;\n\t\tanimate();\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * Sets the opacity on the given cell and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells.\n\t * cell - <mxCell> to set the opacity for.\n\t * opacity - New value for the opacity in %.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\t// Fades all children\n\t\tvar childCount = graph.model.getChildCount(cell);\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tvar child = graph.model.getChildAt(cell, i);\n\t\t\tvar childState = graph.getView().getState(child);\n\t\t\t\n\t\t\tif (childState != null)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(childState.shape.node, opacity);\n\t\t\t\tmxEffects.cascadeOpacity(graph, child, opacity);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Fades all connected edges\n\t\tvar edges = graph.model.getEdges(cell);\n\t\t\n\t\tif (edges != null)\n\t\t{\n\t\t\tfor (var i=0; i<edges.length; i++)\n\t\t\t{\n\t\t\t\tvar edgeState = graph.getView().getState(edges[i]);\n\t\t\t\t\n\t\t\t\tif (edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.setOpacity(edgeState.shape.node, opacity);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * Asynchronous fade-out operation.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tstep = step || 40;\n\t\tdelay = delay || 30;\n\t\t\n\t\tvar opacity = from || 100;\n\t\t\n\t\tmxUtils.setOpacity(node, opacity);\n\t\t\n\t\tif (isEnabled || isEnabled == null)\n\t\t{\n\t\t\tvar f = function()\n\t\t\t{\n\t\t\t    opacity = Math.max(opacity-step, 0);\n\t\t\t\tmxUtils.setOpacity(node, opacity);\n\t\t\t\t\n\t\t\t\tif (opacity > 0)\n\t\t\t\t{\n\t\t\t\t\twindow.setTimeout(f, delay);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\t\t\n\t\t\t\t\tif (remove && node.parentNode)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\twindow.setTimeout(f, delay);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\n\t\t\tif (remove && node.parentNode)\n\t\t\t{\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t}\n\t\t}\n\t}\n\n};\n\n__mxOutput.mxEffects = typeof mxEffects !== 'undefined' ? mxEffects : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxUtils =\n{\n\t/**\n\t * Class: mxUtils\n\t * \n\t * A singleton class that provides cross-browser helper methods.\n\t * This is a global functionality. To access the functions in this\n\t * class, use the global classname appended by the functionname.\n\t * You may have to load chrome://global/content/contentAreaUtils.js\n\t * to disable certain security restrictions in Mozilla for the <open>,\n\t * <save>, <saveAs> and <copy> function.\n\t * \n\t * For example, the following code displays an error message:\n\t * \n\t * (code)\n\t * mxUtils.error('Browser is not supported!', 200, false);\n\t * (end)\n\t * \n\t * Variable: errorResource\n\t * \n\t * Specifies the resource key for the title of the error window. If the\n\t * resource for this key does not exist then the value is used as\n\t * the title. Default is 'error'.\n\t */\n\terrorResource: (mxClient.language != 'none') ? 'error' : '',\n\t\n\t/**\n\t * Variable: closeResource\n\t * \n\t * Specifies the resource key for the label of the close button. If the\n\t * resource for this key does not exist then the value is used as\n\t * the label. Default is 'close'.\n\t */\n\tcloseResource: (mxClient.language != 'none') ? 'close' : '',\n\n\t/**\n\t * Variable: errorImage\n\t * \n\t * Defines the image used for error dialogs.\n\t */\n\terrorImage: mxClient.imageBasePath + '/error.gif',\n\t\n\t/**\n\t * Function: removeCursors\n\t * \n\t * Removes the cursors from the style of the given DOM node and its\n\t * descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the cursor style from.\n\t */\n\tremoveCursors: function(element)\n\t{\n\t\tif (element.style != null)\n\t\t{\n\t\t\telement.style.cursor = '';\n\t\t}\n\t\t\n\t\tvar children = element.childNodes;\n\t\t\n\t\tif (children != null)\n\t\t{\n\t        var childCount = children.length;\n\t        \n\t        for (var i = 0; i < childCount; i += 1)\n\t        {\n\t            mxUtils.removeCursors(children[i]);\n\t        }\n\t    }\n\t},\n\n\t/**\n\t * Function: getCurrentStyle\n\t * \n\t * Returns the current style of the specified element.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node whose current style should be returned.\n\t */\n\tgetCurrentStyle: function()\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 9))\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ? element.currentStyle : null;\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ?\n\t\t\t\t\twindow.getComputedStyle(element, '') :\n\t\t\t\t\tnull;\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: parseCssNumber\n\t * \n\t * Parses the given CSS numeric value adding handling for the values thin,\n\t * medium and thick (2, 4 and 6).\n\t */\n\tparseCssNumber: function(value)\n\t{\n\t\tif (value == 'thin')\n\t\t{\n\t\t\tvalue = '2';\n\t\t}\n\t\telse if (value == 'medium')\n\t\t{\n\t\t\tvalue = '4';\n\t\t}\n\t\telse if (value == 'thick')\n\t\t{\n\t\t\tvalue = '6';\n\t\t}\n\t\t\n\t\tvalue = parseFloat(value);\n\t\t\n\t\tif (isNaN(value))\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: setPrefixedStyle\n\t * \n\t * Adds the given style with the standard name and an optional vendor prefix for the current\n\t * browser.\n\t * \n\t * (code)\n\t * mxUtils.setPrefixedStyle(node.style, 'transformOrigin', '0% 0%');\n\t * (end)\n\t */\n\tsetPrefixedStyle: function()\n\t{\n\t\tvar prefix = null;\n\t\t\n\t\tif (mxClient.IS_OT)\n\t\t{\n\t\t\tprefix = 'O';\n\t\t}\n\t\telse if (mxClient.IS_SF || mxClient.IS_GC)\n\t\t{\n\t\t\tprefix = 'Webkit';\n\t\t}\n\t\telse if (mxClient.IS_MT)\n\t\t{\n\t\t\tprefix = 'Moz';\n\t\t}\n\t\telse if (mxClient.IS_IE && document.documentMode >= 9 && document.documentMode < 10)\n\t\t{\n\t\t\tprefix = 'ms';\n\t\t}\n\n\t\treturn function(style, name, value)\n\t\t{\n\t\t\tstyle[name] = value;\n\t\t\t\n\t\t\tif (prefix != null && name.length > 0)\n\t\t\t{\n\t\t\t\tname = prefix + name.substring(0, 1).toUpperCase() + name.substring(1);\n\t\t\t\tstyle[name] = value;\n\t\t\t}\n\t\t};\n\t}(),\n\t\n\t/**\n\t * Function: hasScrollbars\n\t * \n\t * Returns true if the overflow CSS property of the given node is either\n\t * scroll or auto.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose style should be checked for scrollbars.\n\t */\n\thasScrollbars: function(node)\n\t{\n\t\tvar style = mxUtils.getCurrentStyle(node);\n\n\t\treturn style != null && (style.overflow == 'scroll' || style.overflow == 'auto');\n\t},\n\t\n\t/**\n\t * Function: bind\n\t * \n\t * Returns a wrapper function that locks the execution scope of the given\n\t * function to the specified scope. Inside funct, the \"this\" keyword\n\t * becomes a reference to that scope.\n\t */\n\tbind: function(scope, funct)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\treturn funct.apply(scope, arguments);\n\t\t};\n\t},\n\t\n\t/**\n\t * Function: eval\n\t * \n\t * Evaluates the given expression using eval and returns the JavaScript\n\t * object that represents the expression result. Supports evaluation of\n\t * expressions that define functions and returns the function object for\n\t * these expressions.\n\t * \n\t * Parameters:\n\t * \n\t * expr - A string that represents a JavaScript expression.\n\t */\n\teval: function(expr)\n\t{\n\t\tvar result = null;\n\n\t\tif (expr.indexOf('function') >= 0)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\teval('var _mxJavaScriptExpression='+expr);\n\t\t\t\tresult = _mxJavaScriptExpression;\n\t\t\t\t// TODO: Use delete here?\n\t\t\t\t_mxJavaScriptExpression = null;\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tresult = eval(expr);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNode\n\t * \n\t * Returns the first node where attr equals value.\n\t * This implementation does not use XPath.\n\t */\n\tfindNode: function(node, attr, value)\n\t{\n\t\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\tvar tmp = node.getAttribute(attr);\n\t\n\t\t\tif (tmp != null && tmp == value)\n\t\t\t{\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t\n\t\tnode = node.firstChild;\n\t\t\n\t\twhile (node != null)\n\t\t{\n\t\t\tvar result = mxUtils.findNode(node, attr, value);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\t\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: getFunctionName\n\t * \n\t * Returns the name for the given function.\n\t * \n\t * Parameters:\n\t * \n\t * f - JavaScript object that represents a function.\n\t */\n\tgetFunctionName: function(f)\n\t{\n\t\tvar str = null;\n\n\t\tif (f != null)\n\t\t{\n\t\t\tif (f.name != null)\n\t\t\t{\n\t\t\t\tstr = f.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr = mxUtils.trim(f.toString());\n\t\t\t\t\n\t\t\t\tif (/^function\\s/.test(str))\n\t\t\t\t{\n\t\t\t\t\tstr = mxUtils.ltrim(str.substring(9));\n\t\t\t\t\tvar idx2 = str.indexOf('(');\n\t\t\t\t\t\n\t\t\t\t\tif (idx2 > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tstr = str.substring(0, idx2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn str;\n\t},\n\n\t/**\n\t * Function: indexOf\n\t * \n\t * Returns the index of obj in array or -1 if the array does not contain\n\t * the given object.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array to check for the given obj.\n\t * obj - Object to find in the given array.\n\t */\n\tindexOf: function(array, obj)\n\t{\n\t\tif (array != null && obj != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tif (array[i] == obj)\n\t\t\t\t{\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn -1;\n\t},\n\n\t/**\n\t * Function: forEach\n\t * \n\t * Calls the given function for each element of the given array and returns\n\t * the array.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array that contains the elements.\n\t * fn - Function to be called for each object.\n\t */\n\tforEach: function(array, fn)\n\t{\n\t\tif (array != null && fn != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tfn(array[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn array;\n\t},\n\n\t/**\n\t * Function: remove\n\t * \n\t * Removes all occurrences of the given object in the given array or\n\t * object. If there are multiple occurrences of the object, be they\n\t * associative or as an array entry, all occurrences are removed from\n\t * the array or deleted from the object. By removing the object from\n\t * the array, all elements following the removed element are shifted\n\t * by one step towards the beginning of the array.\n\t * \n\t * The length of arrays is not modified inside this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to find in the given array.\n\t * array - Array to check for the given obj.\n\t */\n\tremove: function(obj, array)\n\t{\n\t\tvar result = null;\n\t\t\n\t\tif (typeof(array) == 'object')\n\t\t{\n\t\t\tvar index = mxUtils.indexOf(array, obj);\n\t\t\t\n\t\t\twhile (index >= 0)\n\t\t\t{\n\t\t\t\tarray.splice(index, 1);\n\t\t\t\tresult = obj;\n\t\t\t\tindex = mxUtils.indexOf(array, obj);\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in array)\n\t\t{\n\t\t\tif (array[key] == obj)\n\t\t\t{\n\t\t\t\tdelete array[key];\n\t\t\t\tresult = obj;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNode\n\t * \n\t * Returns true if the given value is an XML node with the node name\n\t * and if the optional attribute has the specified value.\n\t * \n\t * This implementation assumes that the given value is a DOM node if the\n\t * nodeType property is numeric, that is, if isNaN returns false for\n\t * value.nodeType.\n\t * \n\t * Parameters:\n\t * \n\t * value - Object that should be examined as a node.\n\t * nodeName - String that specifies the node name.\n\t * attributeName - Optional attribute name to check.\n\t * attributeValue - Optional attribute value to check.\n\t */\n\t isNode: function(value, nodeName, attributeName, attributeValue)\n\t {\n\t \tif (value != null && !isNaN(value.nodeType) && (nodeName == null ||\n\t \t\tvalue.nodeName.toLowerCase() == nodeName.toLowerCase()))\n \t\t{\n \t\t\treturn attributeName == null ||\n \t\t\t\tvalue.getAttribute(attributeName) == attributeValue;\n \t\t}\n\t \t\n\t \treturn false;\n\t },\n\t\n\t/**\n\t * Function: isAncestorNode\n\t * \n\t * Returns true if the given ancestor is an ancestor of the\n\t * given DOM node in the DOM. This also returns true if the\n\t * child is the ancestor.\n\t * \n\t * Parameters:\n\t * \n\t * ancestor - DOM node that represents the ancestor.\n\t * child - DOM node that represents the child.\n\t */\n\t isAncestorNode: function(ancestor, child)\n\t {\n\t \tvar parent = child;\n\t \t\n\t \twhile (parent != null)\n\t \t{\n\t \t\tif (parent == ancestor)\n\t \t\t{\n\t \t\t\treturn true;\n\t \t\t}\n\n\t \t\tparent = parent.parentNode;\n\t \t}\n\t \t\n\t \treturn false;\n\t },\n\n\t/**\n\t * Function: getChildNodes\n\t * \n\t * Returns an array of child nodes that are of the given node type.\n\t * \n\t * Parameters:\n\t * \n\t * node - Parent DOM node to return the children from.\n\t * nodeType - Optional node type to return. Default is\n\t * <mxConstants.NODETYPE_ELEMENT>.\n\t */\n\tgetChildNodes: function(node, nodeType)\n\t{\n\t\tnodeType = nodeType || mxConstants.NODETYPE_ELEMENT;\n\t\t\n\t\tvar children = [];\n\t\tvar tmp = node.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeType == nodeType)\n\t\t\t{\n\t\t\t\tchildren.push(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\t\t\n\t\treturn children;\n\t},\n\n\t/**\n\t * Function: importNode\n\t * \n\t * Cross browser implementation for document.importNode. Uses document.importNode\n\t * in all browsers but IE, where the node is cloned by creating a new node and\n\t * copying all attributes and children into it using importNode, recursively.\n\t * \n\t * Parameters:\n\t * \n\t * doc - Document to import the node into.\n\t * node - Node to be imported.\n\t * allChildren - If all children should be imported.\n\t */\n\timportNode: function(doc, node, allChildren)\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 10))\n\t\t{\n\t\t\tswitch (node.nodeType)\n\t\t\t{\n\t\t\t\tcase 1: /* element */\n\t\t\t\t{\n\t\t\t\t\tvar newNode = doc.createElement(node.nodeName);\n\t\t\t\t\t\n\t\t\t\t\tif (node.attributes && node.attributes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < node.attributes.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewNode.setAttribute(node.attributes[i].nodeName,\n\t\t\t\t\t\t\t\tnode.getAttribute(node.attributes[i].nodeName));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (allChildren && node.childNodes && node.childNodes.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tnewNode.appendChild(mxUtils.importNode(doc, node.childNodes[i], allChildren));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn newNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 3: /* text */\n\t\t\t    case 4: /* cdata-section */\n\t\t\t    case 8: /* comment */\n\t\t\t    {\n\t\t\t      return doc.createTextNode(node.value);\n\t\t\t      break;\n\t\t\t    }\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn doc.importNode(node, allChildren);\n\t\t}\n\t},\n\n\t/**\n\t * Function: createXmlDocument\n\t * \n\t * Returns a new, empty XML document.\n\t */\n\tcreateXmlDocument: function()\n\t{\n\t\tvar doc = null;\n\t\t\n\t\tif (document.implementation && document.implementation.createDocument)\n\t\t{\n\t\t\tdoc = document.implementation.createDocument('', '', null);\n\t\t}\n\t\telse if (window.ActiveXObject)\n\t\t{\n\t\t\tdoc = new ActiveXObject('Microsoft.XMLDOM');\n\t \t}\n\t \t\n\t \treturn doc;\n\t},\n\n\t/**\n\t * Function: parseXml\n\t * \n\t * Parses the specified XML string into a new XML document and returns the\n\t * new document.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var doc = mxUtils.parseXml(\n\t *   '<mxGraphModel><root><MyDiagram id=\"0\"><mxCell/></MyDiagram>'+\n\t *   '<MyLayer id=\"1\"><mxCell parent=\"0\" /></MyLayer><MyObject id=\"2\">'+\n\t *   '<mxCell style=\"strokeColor=blue;fillColor=red\" parent=\"1\" vertex=\"1\">'+\n\t *   '<mxGeometry x=\"10\" y=\"10\" width=\"80\" height=\"30\" as=\"geometry\"/>'+\n\t *   '</mxCell></MyObject></root></mxGraphModel>');\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * xml - String that contains the XML data.\n\t */\n\tparseXml: function()\n\t{\n\t\tif (window.DOMParser)\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\n\t\t\t\treturn parser.parseFromString(xml, 'text/xml');\n\t\t\t};\n\t\t}\n\t\telse // IE<=9\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar result = mxUtils.createXmlDocument();\n\t\t\t\tresult.async = false;\n\t\t\t\t// Workaround for parsing errors with SVG DTD\n\t\t\t\tresult.validateOnParse = false;\n\t\t\t\tresult.resolveExternals = false;\n\t\t\t\tresult.loadXML(xml);\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: clearSelection\n\t * \n\t * Clears the current selection in the page.\n\t */\n\tclearSelection: function()\n\t{\n\t\tif (document.selection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tdocument.selection.empty();\n\t\t\t};\n\t\t}\n\t\telse if (window.getSelection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tif (window.getSelection().empty)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().empty();\n\t\t\t\t}\n\t\t\t\telse if (window.getSelection().removeAllRanges)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function() { };\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: getPrettyXML\n\t * \n\t * Returns a pretty printed string that represents the XML tree for the\n\t * given node. This method should only be used to print XML for reading,\n\t * use <getXml> instead to obtain a string for processing.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * tab - Optional string that specifies the indentation for one level.\n\t * Default is two spaces.\n\t * indent - Optional string that represents the current indentation.\n\t * Default is an empty string.\n\t */\n\tgetPrettyXml: function(node, tab, indent)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (node != null)\n\t\t{\n\t\t\ttab = tab || '  ';\n\t\t\tindent = indent || '';\n\t\t\t\n\t\t\tif (node.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t\t{\n\t\t\t\tvar value =  mxUtils.trim(mxUtils.getTextContent(node));\n\t\t\t\t\n\t\t\t\tif (value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(indent + mxUtils.htmlEntities(value) + '\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(indent + '<' + node.nodeName);\n\t\t\t\t\n\t\t\t\t// Creates the string with the node attributes\n\t\t\t\t// and converts all HTML entities in the values\n\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\n\t\t\t\tif (attrs != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar val = mxUtils.htmlEntities(attrs[i].value);\n\t\t\t\t\t\tresult.push(' ' + attrs[i].nodeName + '=\"' + val + '\"');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Recursively creates the XML string for each\n\t\t\t\t// child nodes and appends it here with an\n\t\t\t\t// indentation\n\t\t\t\tvar tmp = node.firstChild;\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tresult.push('>\\n');\n\t\t\t\t\t\n\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(mxUtils.getPrettyXml(tmp, tab, indent + tab));\n\t\t\t\t\t\ttmp = tmp.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tresult.push(indent + '</'+node.nodeName + '>\\n');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.push('/>\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join('');\n\t},\n\t\n\t/**\n\t * Function: removeWhitespace\n\t * \n\t * Removes the sibling text nodes for the given node that only consists\n\t * of tabs, newlines and spaces.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose siblings should be removed.\n\t * before - Optional boolean that specifies the direction of the traversal.\n\t */\n\tremoveWhitespace: function(node, before)\n\t{\n\t\tvar tmp = (before) ? node.previousSibling : node.nextSibling;\n\t\t\n\t\twhile (tmp != null && tmp.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t{\n\t\t\tvar next = (before) ? tmp.previousSibling : tmp.nextSibling;\n\t\t\tvar text = mxUtils.getTextContent(tmp);\n\t\t\t\n\t\t\tif (mxUtils.trim(text).length == 0)\n\t\t\t{\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = next;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: htmlEntities\n\t * \n\t * Replaces characters (less than, greater than, newlines and quotes) with\n\t * their HTML entities in the given string and returns the result.\n\t * \n\t * Parameters:\n\t * \n\t * s - String that contains the characters to be converted.\n\t * newline - If newlines should be replaced. Default is true.\n\t */\n\thtmlEntities: function(s, newline)\n\t{\n\t\ts = String(s || '');\n\t\t\n\t\ts = s.replace(/&/g,'&amp;'); // 38 26\n\t\ts = s.replace(/\"/g,'&quot;'); // 34 22\n\t\ts = s.replace(/\\'/g,'&#39;'); // 39 27\n\t\ts = s.replace(/</g,'&lt;'); // 60 3C\n\t\ts = s.replace(/>/g,'&gt;'); // 62 3E\n\n\t\tif (newline == null || newline)\n\t\t{\n\t\t\ts = s.replace(/\\n/g, '&#xa;');\n\t\t}\n\t\t\n\t\treturn s;\n\t},\n\t\n\t/**\n\t * Function: isVml\n\t * \n\t * Returns true if the given node is in the VML namespace.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose tag urn should be checked.\n\t */\n\tisVml: function(node)\n\t{\n\t\treturn node != null && node.tagUrn == 'urn:schemas-microsoft-com:vml';\n\t},\n\n\t/**\n\t * Function: getXml\n\t * \n\t * Returns the XML content of the specified node. For Internet Explorer,\n\t * all \\r\\n\\t[\\t]* are removed from the XML string and the remaining \\r\\n\n\t * are replaced by \\n. All \\n are then replaced with linefeed, or &#xa; if\n\t * no linefeed is defined.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * linefeed - Optional string that linefeeds are converted into. Default is\n\t * &#xa;\n\t */\n\tgetXml: function(node, linefeed)\n\t{\n\t\tvar xml = '';\n\n\t\tif (window.XMLSerializer != null)\n\t\t{\n\t\t\tvar xmlSerializer = new XMLSerializer();\n\t\t\txml = xmlSerializer.serializeToString(node);     \n\t\t}\n\t\telse if (node.xml != null)\n\t\t{\n\t\t\txml = node.xml.replace(/\\r\\n\\t[\\t]*/g, '').\n\t\t\t\treplace(/>\\r\\n/g, '>').\n\t\t\t\treplace(/\\r\\n/g, '\\n');\n\t\t}\n\n\t\t// Replaces linefeeds with HTML Entities.\n\t\tlinefeed = linefeed || '&#xa;';\n\t\txml = xml.replace(/\\n/g, linefeed);\n\t\t  \n\t\treturn xml;\n\t},\n\t\n\t/**\n\t * Function: extractTextWithWhitespace\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * elems - DOM nodes to return the text for.\n\t */\n\textractTextWithWhitespace: function(elems)\n\t{\n\t    // Known block elements for handling linefeeds (list is not complete)\n\t\tvar blocks = ['BLOCKQUOTE', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'OL', 'P', 'PRE', 'TABLE', 'UL'];\n\t\tvar ret = [];\n\t\t\n\t\tfunction doExtract(elts)\n\t\t{\n\t\t\t// Single break should be ignored\n\t\t\tif (elts.length == 1 && (elts[0].nodeName == 'BR' ||\n\t\t\t\telts[0].innerHTML == '\\n'))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t    for (var i = 0; i < elts.length; i++)\n\t\t    {\n\t\t        var elem = elts[i];\n\n\t\t\t\t// DIV with a br or linefeed forces a linefeed\n\t\t\t\tif (elem.nodeName == 'BR' || elem.innerHTML == '\\n' ||\n\t\t\t\t\t((elts.length == 1 || i == 0) && (elem.nodeName == 'DIV' &&\n\t\t\t\t\telem.innerHTML.toLowerCase() == '<br>')))\n\t\t    \t{\n\t    \t\t\tret.push('\\n');\n\t\t    \t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t        if (elem.nodeType === 3 || elem.nodeType === 4)\n\t\t\t        {\n\t\t\t        \tif (elem.nodeValue.length > 0)\n\t\t\t        \t{\n\t\t\t        \t\tret.push(elem.nodeValue);\n\t\t\t        \t}\n\t\t\t        }\n\t\t\t        else if (elem.nodeType !== 8 && elem.childNodes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoExtract(elem.childNodes);\n\t\t\t\t\t}\n\t\t\t        \n\t        \t\tif (i < elts.length - 1 && mxUtils.indexOf(blocks, elts[i + 1].nodeName) >= 0)\n\t        \t\t{\n\t        \t\t\tret.push('\\n');\t\t\n\t        \t\t}\n\t\t\t\t}\n\t\t    }\n\t\t};\n\t\t\n\t\tdoExtract(elems);\n\t    \n\t    return ret.join('');\n\t},\n\n\t/**\n\t * Function: replaceTrailingNewlines\n\t * \n\t * Replaces each trailing newline with the given pattern.\n\t */\n\treplaceTrailingNewlines: function(str, pattern)\n\t{\n\t\t// LATER: Check is this can be done with a regular expression\n\t\tvar postfix = '';\n\t\t\n\t\twhile (str.length > 0 && str.charAt(str.length - 1) == '\\n')\n\t\t{\n\t\t\tstr = str.substring(0, str.length - 1);\n\t\t\tpostfix += pattern;\n\t\t}\n\t\t\n\t\treturn str + postfix;\n\t},\n\n\t/**\n\t * Function: getTextContent\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the text content for.\n\t */\n\tgetTextContent: function(node)\n\t{\n\t\t// Only IE10-\n\t\tif (mxClient.IS_IE && node.innerText !== undefined)\n\t\t{\n\t\t\treturn node.innerText;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (node != null) ? node[(node.textContent === undefined) ? 'text' : 'textContent'] : '';\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setTextContent\n\t * \n\t * Sets the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the text content for.\n\t * text - String that represents the text content.\n\t */\n\tsetTextContent: function(node, text)\n\t{\n\t\tif (node.innerText !== undefined)\n\t\t{\n\t\t\tnode.innerText = text;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode[(node.textContent === undefined) ? 'text' : 'textContent'] = text;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getInnerHtml\n\t * \n\t * Returns the inner HTML for the given node as a string or an empty string\n\t * if no node was specified. The inner HTML is the text representing all\n\t * children of the node, but not the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the inner HTML for.\n\t */\n\tgetInnerHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\treturn node.innerHTML;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: getOuterHtml\n\t * \n\t * Returns the outer HTML for the given node as a string or an empty\n\t * string if no node was specified. The outer HTML is the text representing\n\t * all children of the node including the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the outer HTML for.\n\t */\n\tgetOuterHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tif (node.outerHTML != null)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn node.outerHTML;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = [];\n\t\t\t\t\t\ttmp.push('<'+node.nodeName);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (attrs != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar value = attrs[i].value;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (value != null && value.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp.push(' ');\n\t\t\t\t\t\t\t\t\ttmp.push(attrs[i].nodeName);\n\t\t\t\t\t\t\t\t\ttmp.push('=\"');\n\t\t\t\t\t\t\t\t\ttmp.push(value);\n\t\t\t\t\t\t\t\t\ttmp.push('\"');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (node.innerHTML.length == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('/>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('>');\n\t\t\t\t\t\t\ttmp.push(node.innerHTML);\n\t\t\t\t\t\t\ttmp.push('</'+node.nodeName+'>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn tmp.join('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: write\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twrite: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: writeln\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent with an additional linefeed. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twriteln: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t\tparent.appendChild(document.createElement('br'));\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: br\n\t * \n\t * Appends a linebreak to the given parent and returns the linebreak.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the linebreak to.\n\t */\n\tbr: function(parent, count)\n\t{\n\t\tcount = count || 1;\n\t\tvar br = null;\n\t\t\n\t\tfor (var i = 0; i < count; i++)\n\t\t{\n\t\t\tif (parent != null)\n\t\t\t{\n\t\t\t\tbr = parent.ownerDocument.createElement('br');\n\t\t\t\tparent.appendChild(br);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn br;\n\t},\n\t\t\n\t/**\n\t * Function: button\n\t * \n\t * Returns a new button with the given level and function as an onclick\n\t * event handler.\n\t * \n\t * (code)\n\t * document.body.appendChild(mxUtils.button('Test', function(evt)\n\t * {\n\t *   alert('Hello, World!');\n\t * }));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * label - String that represents the label of the button.\n\t * funct - Function to be called if the button is pressed.\n\t * doc - Optional document to be used for creating the button. Default is the\n\t * current document.\n\t */\n\tbutton: function(label, funct, doc)\n\t{\n\t\tdoc = (doc != null) ? doc : document;\n\t\t\n\t\tvar button = doc.createElement('button');\n\t\tmxUtils.write(button, label);\n\n\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t{\n\t\t\tfunct(evt);\n\t\t});\n\t\t\n\t\treturn button;\n\t},\n\t\n\t/**\n\t * Function: para\n\t * \n\t * Appends a new paragraph with the given text to the specified parent and\n\t * returns the paragraph.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text for the new paragraph.\n\t */\n\tpara: function(parent, text)\n\t{\n\t\tvar p = document.createElement('p');\n\t\tmxUtils.write(p, text);\n\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(p);\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: addTransparentBackgroundFilter\n\t * \n\t * Adds a transparent background to the filter of the given node. This\n\t * background can be used in IE8 standards mode (native IE8 only) to pass\n\t * events through the node.\n\t */\n\taddTransparentBackgroundFilter: function(node)\n\t{\n\t\tnode.style.filter += 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\\'' +\n\t\t\tmxClient.imageBasePath + '/transparent.gif\\', sizingMethod=\\'scale\\')';\n\t},\n\n\t/**\n\t * Function: linkAction\n\t * \n\t * Adds a hyperlink to the specified parent that invokes action on the\n\t * specified editor.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> that will execute the action.\n\t * action - String that defines the name of the action to be executed.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkAction: function(parent, text, editor, action, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor.execute(action);\n\t\t}, pad);\n\t},\n\n\t/**\n\t * Function: linkInvoke\n\t * \n\t * Adds a hyperlink to the specified parent that invokes the specified\n\t * function on the editor passing along the specified argument. The\n\t * function name is the name of a function of the editor instance,\n\t * not an action name.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> instance to execute the function on.\n\t * functName - String that represents the name of the function.\n\t * arg - Object that represents the argument to the function.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkInvoke: function(parent, text, editor, functName, arg, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor[functName](arg);\n\t\t}, pad);\n\t},\n\t\n\t/**\n\t * Function: link\n\t * \n\t * Adds a hyperlink to the specified parent and invokes the given function\n\t * when the link is clicked.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * funct - Function to execute when the link is clicked.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlink: function(parent, text, funct, pad)\n\t{\n\t\tvar a = document.createElement('span');\n\t\t\n\t\ta.style.color = 'blue';\n\t\ta.style.textDecoration = 'underline';\n\t\ta.style.cursor = 'pointer';\n\t\t\n\t\tif (pad != null)\n\t\t{\n\t\t\ta.style.paddingLeft = pad+'px';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(a, 'click', funct);\n\t\tmxUtils.write(a, text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(a);\n\t\t}\n\t\t\n\t\treturn a;\n\t},\n\n\t/**\n\t * Function: fit\n\t * \n\t * Makes sure the given node is inside the visible area of the window. This\n\t * is done by setting the left and top in the style. \n\t */\n\tfit: function(node)\n\t{\n\t\tvar left = parseInt(node.offsetLeft);\n\t\tvar width = parseInt(node.offsetWidth);\n\t\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(node.ownerDocument);\n\t\tvar sl = offset.x;\n\t\tvar st = offset.y;\n\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\tvar right = (sl) + (b.clientWidth || d.clientWidth);\n\t\t\n\t\tif (left + width > right)\n\t\t{\n\t\t\tnode.style.left = Math.max(sl, right - width) + 'px';\n\t\t}\n\t\t\n\t\tvar top = parseInt(node.offsetTop);\n\t\tvar height = parseInt(node.offsetHeight);\n\t\t\n\t\tvar bottom = st + Math.max(b.clientHeight || 0, d.clientHeight);\n\t\t\n\t\tif (top + height > bottom)\n\t\t{\n\t\t\tnode.style.top = Math.max(st, bottom - height) + 'px';\n\t\t}\n\t},\n\n\t/**\n\t * Function: load\n\t * \n\t * Loads the specified URL *synchronously* and returns the <mxXmlRequest>.\n\t * Throws an exception if the file cannot be loaded. See <mxUtils.get> for\n\t * an asynchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * try\n\t * {\n\t *   var req = mxUtils.load(filename);\n\t *   var root = req.getDocumentElement();\n\t *   // Process XML DOM...\n\t * }\n\t * catch (ex)\n\t * {\n\t *   mxUtils.alert('Cannot load '+filename+': '+ex);\n\t * }\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t */\n\tload: function(url)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET', false);\n\t\treq.send();\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: get\n\t * \n\t * Loads the specified URL *asynchronously* and invokes the given functions\n\t * depending on the request status. Returns the <mxXmlRequest> in use. Both\n\t * functions take the <mxXmlRequest> as the only parameter. See\n\t * <mxUtils.load> for a synchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *    var node = req.getDocumentElement();\n\t *    // Process XML DOM...\n\t * });\n\t * (end)\n\t * \n\t * So for example, to load a diagram into an existing graph model, the\n\t * following code is used.\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *   var node = req.getDocumentElement();\n\t *   var dec = new mxCodec(node.ownerDocument);\n\t *   dec.decode(node, graph.getModel());\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t * binary - Optional boolean parameter that specifies if the request is\n\t * binary.\n\t * timeout - Optional timeout in ms before calling ontimeout.\n\t * ontimeout - Optional function to execute on timeout.\n\t */\n\tget: function(url, onload, onerror, binary, timeout, ontimeout)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET');\n\t\t\n\t\tif (binary != null)\n\t\t{\n\t\t\treq.setBinary(binary);\n\t\t}\n\t\t\n\t\treq.send(onload, onerror, timeout, ontimeout);\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: getAll\n\t * \n\t * Loads the URLs in the given array *asynchronously* and invokes the given function\n\t * if all requests returned with a valid 2xx status. The error handler is invoked\n\t * once on the first error or invalid response.\n\t *\n\t * Parameters:\n\t * \n\t * urls - Array of URLs to be loaded.\n\t * onload - Callback with array of <mxXmlRequests>.\n\t * onerror - Optional function to execute on error.\n\t */\n\tgetAll: function(urls, onload, onerror)\n\t{\n\t\tvar remain = urls.length;\n\t\tvar result = [];\n\t\tvar errors = 0;\n\t\tvar err = function()\n\t\t{\n\t\t\tif (errors == 0 && onerror != null)\n\t\t\t{\n\t\t\t\tonerror();\n\t\t\t}\n\n\t\t\terrors++;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < urls.length; i++)\n\t\t{\n\t\t\t(function(url, index)\n\t\t\t{\n\t\t\t\tmxUtils.get(url, function(req)\n\t\t\t\t{\n\t\t\t\t\tvar status = req.getStatus();\n\t\t\t\t\t\n\t\t\t\t\tif (status < 200 || status > 299)\n\t\t\t\t\t{\n\t\t\t\t\t\terr();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult[index] = req;\n\t\t\t\t\t\tremain--;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (remain == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonload(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, err);\n\t\t\t})(urls[i], i);\n\t\t}\n\t\t\n\t\tif (remain == 0)\n\t\t{\n\t\t\tonload(result);\t\t\t\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: post\n\t * \n\t * Posts the specified params to the given URL *asynchronously* and invokes\n\t * the given functions depending on the request status. Returns the\n\t * <mxXmlRequest> in use. Both functions take the <mxXmlRequest> as the\n\t * only parameter. Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.post(url, 'key=value', function(req)\n\t * {\n\t * \tmxUtils.alert('Ready: '+req.isReady()+' Status: '+req.getStatus());\n\t *  // Process req.getDocumentElement() using DOM API if OK...\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the post request.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t */\n\tpost: function(url, params, onload, onerror)\n\t{\n\t\treturn new mxXmlRequest(url, params).send(onload, onerror);\n\t},\n\t\n\t/**\n\t * Function: submit\n\t * \n\t * Submits the given parameters to the specified URL using\n\t * <mxXmlRequest.simulate> and returns the <mxXmlRequest>.\n\t * Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the form.\n\t * doc - Document to create the form in.\n\t * target - Target to send the form result to.\n\t */\n\tsubmit: function(url, params, doc, target)\n\t{\n\t\treturn new mxXmlRequest(url, params).simulate(doc, target);\n\t},\n\t\n\t/**\n\t * Function: loadInto\n\t * \n\t * Loads the specified URL *asynchronously* into the specified document,\n\t * invoking onload after the document has been loaded. This implementation\n\t * does not use <mxXmlRequest>, but the document.load method.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * doc - The document to load the URL into.\n\t * onload - Function to execute when the URL has been loaded.\n\t */\n\tloadInto: function(url, doc, onload)\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tdoc.onreadystatechange = function ()\n\t\t\t{\n\t\t\t\tif (doc.readyState == 4)\n\t\t\t\t{\n\t\t\t\t\tonload();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.addEventListener('load', onload, false);\n\t\t}\n\t\t\n\t\tdoc.load(url);\n\t},\n\t\n\t/**\n\t * Function: getValue\n\t * \n\t * Returns the value for the given key in the given associative array or\n\t * the given default value if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null.\n\t */\n\tgetValue: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\t\n\t/**\n\t * Function: getNumber\n\t * \n\t * Returns the numeric value for the given key in the given associative\n\t * array or the given default value (or 0) if the value is null. The value\n\t * is converted to a numeric value using the Number function.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is 0.\n\t */\n\tgetNumber: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue || 0;\t\t\t\n\t\t}\n\t\t\n\t\treturn Number(value);\n\t},\n\t\n\t/**\n\t * Function: getColor\n\t * \n\t * Returns the color value for the given key in the given associative\n\t * array or the given default value if the value is null. If the value\n\t * is <mxConstants.NONE> then null is returned.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is null.\n\t */\n\tgetColor: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\telse if (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: clone\n\t * \n\t * Recursively clones the specified object ignoring all fieldnames in the\n\t * given array of transient fields. <mxObjectIdentity.FIELD_NAME> is always\n\t * ignored by this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to be cloned.\n\t * transients - Optional array of strings representing the fieldname to be\n\t * ignored.\n\t * shallow - Optional boolean argument to specify if a shallow clone should\n\t * be created, that is, one where all object references are not cloned or,\n\t * in other words, one where only atomic (strings, numbers) values are\n\t * cloned. Default is false.\n\t */\n\tclone: function(obj, transients, shallow)\n\t{\n\t\tshallow = (shallow != null) ? shallow : false;\n\t\tvar clone = null;\n\t\t\n\t\tif (obj != null && typeof(obj.constructor) == 'function')\n\t\t{\n\t\t\tclone = new obj.constructor();\n\t\t\t\n\t\t    for (var i in obj)\n\t\t    {\n\t\t    \tif (i != mxObjectIdentity.FIELD_NAME && (transients == null ||\n\t\t    \t\tmxUtils.indexOf(transients, i) < 0))\n\t\t    \t{\n\t\t\t    \tif (!shallow && typeof(obj[i]) == 'object')\n\t\t\t    \t{\n\t\t\t            clone[i] = mxUtils.clone(obj[i]);\n\t\t\t        }\n\t\t\t        else\n\t\t\t        {\n\t\t\t            clone[i] = obj[i];\n\t\t\t        }\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t    return clone;\n\t},\n\n\t/**\n\t * Function: equalPoints\n\t * \n\t * Compares all mxPoints in the given lists.\n\t * \n\t * Parameters:\n\t * \n\t * a - Array of <mxPoints> to be compared.\n\t * b - Array of <mxPoints> to be compared.\n\t */\n\tequalPoints: function(a, b)\n\t{\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\tfor (var i = 0; i < a.length; i++)\n\t\t\t{\n\t\t\t\tif (a[i] == b[i] || (a[i] != null && !a[i].equals(b[i])))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: equalEntries\n\t * \n\t * Returns true if all properties of the given objects are equal. Values\n\t * with NaN are equal to NaN and unequal to any other value.\n\t * \n\t * Parameters:\n\t * \n\t * a - First object to be compared.\n\t * b - Second object to be compared.\n\t */\n\tequalEntries: function(a, b)\n\t{\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\t// Counts keys in b to check if all values have been compared\n\t\t\tvar count = 0;\n\t\t\t\n\t\t\tfor (var key in b)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var key in a)\n\t\t\t{\n\t\t\t\tcount--\n\t\t\t\t\n\t\t\t\tif ((!mxUtils.isNaN(a[key]) || !mxUtils.isNaN(b[key])) && a[key] != b[key])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn count == 0;\n\t},\n\t\n\t/**\n\t * Function: removeDuplicates\n\t * \n\t * Removes all duplicates from the given array.\n\t */\n\tremoveDuplicates: function(arr)\n\t{\n\t\tvar dict = new mxDictionary();\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 0; i < arr.length; i++)\n\t\t{\n\t\t\tif (!dict.get(arr[i]))\n\t\t\t{\n\t\t\t\tresult.push(arr[i]);\n\t\t\t\tdict.put(arr[i], true);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNaN\n\t *\n\t * Returns true if the given value is of type number and isNaN returns true.\n\t */\n\tisNaN: function(value)\n\t{\n\t\treturn typeof(value) == 'number' && isNaN(value);\n\t},\n\t\n\t/**\n\t * Function: extend\n\t *\n\t * Assigns a copy of the superclass prototype to the subclass prototype.\n\t * Note that this does not call the constructor of the superclass at this\n\t * point, the superclass constructor should be called explicitely in the\n\t * subclass constructor. Below is an example.\n\t * \n\t * (code)\n\t * MyGraph = function(container, model, renderHint, stylesheet)\n\t * {\n\t *   mxGraph.call(this, container, model, renderHint, stylesheet);\n\t * }\n\t * \n\t * mxUtils.extend(MyGraph, mxGraph);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * ctor - Constructor of the subclass.\n\t * superCtor - Constructor of the superclass.\n\t */\n\textend: function(ctor, superCtor)\n\t{\n\t\tvar f = function() {};\n\t\tf.prototype = superCtor.prototype;\n\t\t\n\t\tctor.prototype = new f();\n\t\tctor.prototype.constructor = ctor;\n\t},\n\n\t/**\n\t * Function: toString\n\t * \n\t * Returns a textual representation of the specified object.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to return the string representation for.\n\t */\n\ttoString: function(obj)\n\t{\n\t    var output = '';\n\t    \n\t    for (var i in obj)\n\t    {\n\t    \ttry\n\t    \t{\n\t\t\t    if (obj[i] == null)\n\t\t\t    {\n\t\t            output += i + ' = [null]\\n';\n\t\t\t    }\n\t\t\t    else if (typeof(obj[i]) == 'function')\n\t\t\t    {\n\t\t            output += i + ' => [Function]\\n';\n\t\t        }\n\t\t        else if (typeof(obj[i]) == 'object')\n\t\t        {\n\t\t        \tvar ctor = mxUtils.getFunctionName(obj[i].constructor); \n\t\t            output += i + ' => [' + ctor + ']\\n';\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            output += i + ' = ' + obj[i] + '\\n';\n\t\t        }\n\t    \t}\n\t    \tcatch (e)\n\t    \t{\n\t    \t\toutput += i + '=' + e.message;\n\t    \t}\n\t    }\n\t    \n\t    return output;\n\t},\n\n\t/**\n\t * Function: toRadians\n\t * \n\t * Converts the given degree to radians.\n\t */\n\ttoRadians: function(deg)\n\t{\n\t\treturn Math.PI * deg / 180;\n\t},\n\n\t/**\n\t * Function: toDegree\n\t * \n\t * Converts the given radians to degree.\n\t */\n\ttoDegree: function(rad)\n\t{\n\t\treturn rad * 180 / Math.PI;\n\t},\n\t\n\t/**\n\t * Function: arcToCurves\n\t * \n\t * Converts the given arc to a series of curves.\n\t */\n\tarcToCurves: function(x0, y0, r1, r2, angle, largeArcFlag, sweepFlag, x, y)\n\t{\n\t\tx -= x0;\n\t\ty -= y0;\n\t\t\n        if (r1 === 0 || r2 === 0) \n        {\n        \treturn result;\n        }\n        \n        var fS = sweepFlag;\n        var psai = angle;\n        r1 = Math.abs(r1);\n        r2 = Math.abs(r2);\n        var ctx = -x / 2;\n        var cty = -y / 2;\n        var cpsi = Math.cos(psai * Math.PI / 180);\n        var spsi = Math.sin(psai * Math.PI / 180);\n        var rxd = cpsi * ctx + spsi * cty;\n        var ryd = -1 * spsi * ctx + cpsi * cty;\n        var rxdd = rxd * rxd;\n        var rydd = ryd * ryd;\n        var r1x = r1 * r1;\n        var r2y = r2 * r2;\n        var lamda = rxdd / r1x + rydd / r2y;\n        var sds;\n        \n        if (lamda > 1) \n        {\n        \tr1 = Math.sqrt(lamda) * r1;\n        \tr2 = Math.sqrt(lamda) * r2;\n        \tsds = 0;\n        }  \n        else\n        {\n        \tvar seif = 1;\n            \n        \tif (largeArcFlag === fS) \n        \t{\n        \t\tseif = -1;\n        \t}\n            \n        \tsds = seif * Math.sqrt((r1x * r2y - r1x * rydd - r2y * rxdd) / (r1x * rydd + r2y * rxdd));\n        }\n        \n        var txd = sds * r1 * ryd / r2;\n        var tyd = -1 * sds * r2 * rxd / r1;\n        var tx = cpsi * txd - spsi * tyd + x / 2;\n        var ty = spsi * txd + cpsi * tyd + y / 2;\n        var rad = Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1) - Math.atan2(0, 1);\n        var s1 = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        rad = Math.atan2((-ryd - tyd) / r2, (-rxd - txd) / r1) - Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1);\n        var dr = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        \n        if (fS == 0 && dr > 0) \n        {\n        \tdr -= 2 * Math.PI;\n        }\n        else if (fS != 0 && dr < 0) \n        {\n        \tdr += 2 * Math.PI;\n        }\n        \n        var sse = dr * 2 / Math.PI;\n        var seg = Math.ceil(sse < 0 ? -1 * sse : sse);\n        var segr = dr / seg;\n        var t = 8/3 * Math.sin(segr / 4) * Math.sin(segr / 4) / Math.sin(segr / 2);\n        var cpsir1 = cpsi * r1;\n        var cpsir2 = cpsi * r2;\n        var spsir1 = spsi * r1;\n        var spsir2 = spsi * r2;\n        var mc = Math.cos(s1);\n        var ms = Math.sin(s1);\n        var x2 = -t * (cpsir1 * ms + spsir2 * mc);\n        var y2 = -t * (spsir1 * ms - cpsir2 * mc);\n        var x3 = 0;\n        var y3 = 0;\n\n\t\tvar result = [];\n        \n        for (var n = 0; n < seg; ++n) \n        {\n            s1 += segr;\n            mc = Math.cos(s1);\n            ms = Math.sin(s1);\n            \n            x3 = cpsir1 * mc - spsir2 * ms + tx;\n            y3 = spsir1 * mc + cpsir2 * ms + ty;\n            var dx = -t * (cpsir1 * ms + spsir2 * mc);\n            var dy = -t * (spsir1 * ms - cpsir2 * mc);\n            \n            // CurveTo updates x0, y0 so need to restore it\n            var index = n * 6;\n            result[index] = Number(x2 + x0);\n            result[index + 1] = Number(y2 + y0);\n            result[index + 2] = Number(x3 - dx + x0);\n            result[index + 3] = Number(y3 - dy + y0);\n            result[index + 4] = Number(x3 + x0);\n            result[index + 5] = Number(y3 + y0);\n            \n\t\t\tx2 = x3 + dx;\n            y2 = y3 + dy;\n        }\n        \n        return result;\n\t},\n\n\t/**\n\t * Function: getBoundingBox\n\t * \n\t * Returns the bounding box for the rotated rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * rect - <mxRectangle> to be rotated.\n\t * angle - Number that represents the angle (in degrees).\n\t * cx - Optional <mxPoint> that represents the rotation center. If no\n\t * rotation center is given then the center of rect is used.\n\t */\n\tgetBoundingBox: function(rect, rotation, cx)\n\t{\n        var result = null;\n\n        if (rect != null && rotation != null && rotation != 0)\n        {\n            var rad = mxUtils.toRadians(rotation);\n            var cos = Math.cos(rad);\n            var sin = Math.sin(rad);\n\n            cx = (cx != null) ? cx : new mxPoint(rect.x + rect.width / 2, rect.y  + rect.height / 2);\n\n            var p1 = new mxPoint(rect.x, rect.y);\n            var p2 = new mxPoint(rect.x + rect.width, rect.y);\n            var p3 = new mxPoint(p2.x, rect.y + rect.height);\n            var p4 = new mxPoint(rect.x, p3.y);\n\n            p1 = mxUtils.getRotatedPoint(p1, cos, sin, cx);\n            p2 = mxUtils.getRotatedPoint(p2, cos, sin, cx);\n            p3 = mxUtils.getRotatedPoint(p3, cos, sin, cx);\n            p4 = mxUtils.getRotatedPoint(p4, cos, sin, cx);\n\n            result = new mxRectangle(p1.x, p1.y, 0, 0);\n            result.add(new mxRectangle(p2.x, p2.y, 0, 0));\n            result.add(new mxRectangle(p3.x, p3.y, 0, 0));\n            result.add(new mxRectangle(p4.x, p4.y, 0, 0));\n        }\n\n        return result;\n\t},\n\n\t/**\n\t * Function: getRotatedPoint\n\t * \n\t * Rotates the given point by the given cos and sin.\n\t */\n\tgetRotatedPoint: function(pt, cos, sin, c)\n\t{\n\t\tc = (c != null) ? c : new mxPoint();\n\t\tvar x = pt.x - c.x;\n\t\tvar y = pt.y - c.y;\n\n\t\tvar x1 = x * cos - y * sin;\n\t\tvar y1 = y * cos + x * sin;\n\n\t\treturn new mxPoint(x1 + c.x, y1 + c.y);\n\t},\n\t\n\t/**\n\t * Returns an integer mask of the port constraints of the given map\n\t * @param dict the style map to determine the port constraints for\n\t * @param defaultValue Default value to return if the key is undefined.\n\t * @return the mask of port constraint directions\n\t * \n\t * Parameters:\n\t * \n\t * terminal - <mxCelState> that represents the terminal.\n\t * edge - <mxCellState> that represents the edge.\n\t * source - Boolean that specifies if the terminal is the source terminal.\n\t * defaultValue - Default value to be returned.\n\t */\n\tgetPortConstraints: function(terminal, edge, source, defaultValue)\n\t{\n\t\tvar value = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT,\n\t\t\tmxUtils.getValue(edge.style, (source) ? mxConstants.STYLE_SOURCE_PORT_CONSTRAINT :\n\t\t\t\tmxConstants.STYLE_TARGET_PORT_CONSTRAINT, null));\n\t\t\n\t\tif (value == null)\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar directions = value.toString();\n\t\t\tvar returnValue = mxConstants.DIRECTION_MASK_NONE;\n\t\t\tvar constraintRotationEnabled = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT_ROTATION, 0);\n\t\t\tvar rotation = 0;\n\t\t\t\n\t\t\tif (constraintRotationEnabled == 1)\n\t\t\t{\n\t\t\t\trotation = mxUtils.getValue(terminal.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t}\n\t\t\t\n\t\t\tvar quad = 0;\n\n\t\t\tif (rotation > 45)\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t\t\n\t\t\t\tif (rotation >= 135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (rotation < -45)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\tif (rotation <= -135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_NORTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_WEST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_SOUTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_EAST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn returnValue;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: reversePortConstraints\n\t * \n\t * Reverse the port constraint bitmask. For example, north | east\n\t * becomes south | west\n\t */\n\treversePortConstraints: function(constraint)\n\t{\n\t\tvar result = 0;\n\t\t\n\t\tresult = (constraint & mxConstants.DIRECTION_MASK_WEST) << 3;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_NORTH) << 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_SOUTH) >> 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_EAST) >> 3;\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNearestSegment\n\t * \n\t * Finds the index of the nearest segment on the given cell state for\n\t * the specified coordinate pair.\n\t */\n\tfindNearestSegment: function(state, x, y)\n\t{\n\t\tvar index = -1;\n\t\t\n\t\tif (state.absolutePoints.length > 0)\n\t\t{\n\t\t\tvar last = state.absolutePoints[0];\n\t\t\tvar min = null;\n\t\t\t\n\t\t\tfor (var i = 1; i < state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tvar current = state.absolutePoints[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(last.x, last.y,\n\t\t\t\t\tcurrent.x, current.y, x, y);\n\t\t\t\t\n\t\t\t\tif (min == null || dist < min)\n\t\t\t\t{\n\t\t\t\t\tmin = dist;\n\t\t\t\t\tindex = i - 1;\n\t\t\t\t}\n\n\t\t\t\tlast = current;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn index;\n\t},\n\n\t/**\n\t * Function: getDirectedBounds\n\t * \n\t * Adds the given margins to the given rectangle and rotates and flips the\n\t * rectangle according to the respective styles in style.\n\t */\n\tgetDirectedBounds: function (rect, m, style, flipH, flipV)\n\t{\n\t\tvar d = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\t\tflipH = (flipH != null) ? flipH : mxUtils.getValue(style, mxConstants.STYLE_FLIPH, false);\n\t\tflipV = (flipV != null) ? flipV : mxUtils.getValue(style, mxConstants.STYLE_FLIPV, false);\n\n\t\tm.x = Math.round(Math.max(0, Math.min(rect.width, m.x)));\n\t\tm.y = Math.round(Math.max(0, Math.min(rect.height, m.y)));\n\t\tm.width = Math.round(Math.max(0, Math.min(rect.width, m.width)));\n\t\tm.height = Math.round(Math.max(0, Math.min(rect.height, m.height)));\n\t\t\n\t\tif ((flipV && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipH && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.width;\n\t\t\tm.width = tmp;\n\t\t}\n\t\t\t\n\t\tif ((flipH && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipV && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.y;\n\t\t\tm.y = m.height;\n\t\t\tm.height = tmp;\n\t\t}\n\t\t\n\t\tvar m2 = mxRectangle.fromRectangle(m);\n\t\t\n\t\tif (d == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tm2.y = m.x;\n\t\t\tm2.x = m.height;\n\t\t\tm2.width = m.y;\n\t\t\tm2.height = m.width;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tm2.y = m.height;\n\t\t\tm2.x = m.width;\n\t\t\tm2.width = m.x;\n\t\t\tm2.height = m.y;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tm2.y = m.width;\n\t\t\tm2.x = m.y;\n\t\t\tm2.width = m.height;\n\t\t\tm2.height = m.x;\n\t\t}\n\t\t\n\t\treturn new mxRectangle(rect.x + m2.x, rect.y + m2.y, rect.width - m2.width - m2.x, rect.height - m2.height - m2.y);\n\t},\n\n\t/**\n\t * Function: getPerimeterPoint\n\t * \n\t * Returns the intersection between the polygon defined by the array of\n\t * points and the line between center and point.\n\t */\n\tgetPerimeterPoint: function (pts, center, point)\n\t{\n\t\tvar min = null;\n\t\t\n\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t{\n\t\t\tvar pt = mxUtils.intersection(pts[i].x, pts[i].y, pts[i + 1].x, pts[i + 1].y,\n\t\t\t\tcenter.x, center.y, point.x, point.y);\n\t\t\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar dx = point.x - pt.x;\n\t\t\t\tvar dy = point.y - pt.y;\n\t\t\t\tvar ip = {p: pt, distSq: dy * dy + dx * dx};\n\t\t\t\t\n\t\t\t\tif (ip != null && (min == null || min.distSq > ip.distSq))\n\t\t\t\t{\n\t\t\t\t\tmin = ip;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (min != null) ? min.p : null;\n\t},\n\n\t/**\n\t * Function: rectangleIntersectsSegment\n\t * \n\t * Returns true if the given rectangle intersects the given segment.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the rectangle.\n\t * p1 - <mxPoint> that represents the first point of the segment.\n\t * p2 - <mxPoint> that represents the second point of the segment.\n\t */\n\trectangleIntersectsSegment: function(bounds, p1, p2)\n\t{\n\t\tvar top = bounds.y;\n\t\tvar left = bounds.x;\n\t\tvar bottom = top + bounds.height;\n\t\tvar right = left + bounds.width;\n\t\t\t\n\t\t// Find min and max X for the segment\n\t\tvar minX = p1.x;\n\t\tvar maxX = p2.x;\n\t\t\n\t\tif (p1.x > p2.x)\n\t\t{\n\t\t  minX = p2.x;\n\t\t  maxX = p1.x;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's x-projections\n\t\tif (maxX > right)\n\t\t{\n\t\t  maxX = right;\n\t\t}\n\t\t\n\t\tif (minX < left)\n\t\t{\n\t\t  minX = left;\n\t\t}\n\t\t\n\t\tif (minX > maxX) // If their projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\t// Find corresponding min and max Y for min and max X we found before\n\t\tvar minY = p1.y;\n\t\tvar maxY = p2.y;\n\t\tvar dx = p2.x - p1.x;\n\t\t\n\t\tif (Math.abs(dx) > 0.0000001)\n\t\t{\n\t\t  var a = (p2.y - p1.y) / dx;\n\t\t  var b = p1.y - a * p1.x;\n\t\t  minY = a * minX + b;\n\t\t  maxY = a * maxX + b;\n\t\t}\n\t\t\n\t\tif (minY > maxY)\n\t\t{\n\t\t  var tmp = maxY;\n\t\t  maxY = minY;\n\t\t  minY = tmp;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's y-projections\n\t\tif (maxY > bottom)\n\t\t{\n\t\t  maxY = bottom;\n\t\t}\n\t\t\n\t\tif (minY < top)\n\t\t{\n\t\t  minY = top;\n\t\t}\n\t\t\n\t\tif (minY > maxY) // If Y-projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\t\n\t/**\n\t * Function: contains\n\t * \n\t * Returns true if the specified point (x, y) is contained in the given rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the area.\n\t * x - X-coordinate of the point.\n\t * y - Y-coordinate of the point.\n\t */\n\tcontains: function(bounds, x, y)\n\t{\n\t\treturn (bounds.x <= x && bounds.x + bounds.width >= x &&\n\t\t\t\tbounds.y <= y && bounds.y + bounds.height >= y);\n\t},\n\n\t/**\n\t * Function: intersects\n\t * \n\t * Returns true if the two rectangles intersect.\n\t * \n\t * Parameters:\n\t * \n\t * a - <mxRectangle> to be checked for intersection.\n\t * b - <mxRectangle> to be checked for intersection.\n\t */\n\tintersects: function(a, b)\n\t{\n\t\tvar tw = a.width;\n\t\tvar th = a.height;\n\t\tvar rw = b.width;\n\t\tvar rh = b.height;\n\t\t\n\t\tif (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0)\n\t\t{\n\t\t    return false;\n\t\t}\n\t\t\n\t\tvar tx = a.x;\n\t\tvar ty = a.y;\n\t\tvar rx = b.x;\n\t\tvar ry = b.y;\n\t\t\n\t\trw += rx;\n\t\trh += ry;\n\t\ttw += tx;\n\t\tth += ty;\n\n\t\treturn ((rw < rx || rw > tx) &&\n\t\t\t(rh < ry || rh > ty) &&\n\t\t\t(tw < tx || tw > rx) &&\n\t\t\t(th < ty || th > ry));\n\t},\n\n\t/**\n\t * Function: intersects\n\t * \n\t * Returns true if the two rectangles intersect.\n\t * \n\t * Parameters:\n\t * \n\t * a - <mxRectangle> to be checked for intersection.\n\t * b - <mxRectangle> to be checked for intersection.\n\t */\n\tintersectsHotspot: function(state, x, y, hotspot, min, max)\n\t{\n\t\thotspot = (hotspot != null) ? hotspot : 1;\n\t\tmin = (min != null) ? min : 0;\n\t\tmax = (max != null) ? max : 0;\n\t\t\n\t\tif (hotspot > 0)\n\t\t{\n\t\t\tvar cx = state.getCenterX();\n\t\t\tvar cy = state.getCenterY();\n\t\t\tvar w = state.width;\n\t\t\tvar h = state.height;\n\t\t\t\n\t\t\tvar start = mxUtils.getValue(state.style, mxConstants.STYLE_STARTSIZE) * state.view.scale;\n\n\t\t\tif (start > 0)\n\t\t\t{\n\t\t\t\tif (mxUtils.getValue(state.style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t{\n\t\t\t\t\tcy = state.y + start / 2;\n\t\t\t\t\th = start;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcx = state.x + start / 2;\n\t\t\t\t\tw = start;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tw = Math.max(min, w * hotspot);\n\t\t\th = Math.max(min, h * hotspot);\n\t\t\t\n\t\t\tif (max > 0)\n\t\t\t{\n\t\t\t\tw = Math.min(w, max);\n\t\t\t\th = Math.min(h, max);\n\t\t\t}\n\t\t\t\n\t\t\tvar rect = new mxRectangle(cx - w / 2, cy - h / 2, w, h);\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(x, y), cos, sin, cx);\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\treturn mxUtils.contains(rect, x, y);\t\t\t\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: getOffset\n\t * \n\t * Returns the offset for the specified container as an <mxPoint>. The\n\t * offset is the distance from the top left corner of the container to the\n\t * top left corner of the document.\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to return the offset for.\n\t * scollOffset - Optional boolean to add the scroll offset of the document.\n\t * Default is false.\n\t */\n\tgetOffset: function(container, scrollOffset)\n\t{\n\t\tvar offsetLeft = 0;\n\t\tvar offsetTop = 0;\n\t\t\n\t\t// Ignores document scroll origin for fixed elements\n\t\tvar fixed = false;\n\t\tvar node = container;\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\n\t\twhile (node != null && node != b && node != d && !fixed)\n\t\t{\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\t\n\t\tif (!scrollOffset && !fixed)\n\t\t{\n\t\t\tvar offset = mxUtils.getDocumentScrollOrigin(container.ownerDocument);\n\t\t\toffsetLeft += offset.x;\n\t\t\toffsetTop += offset.y;\n\t\t}\n\t\t\n\t\tvar r = container.getBoundingClientRect();\n\t\t\n\t\tif (r != null)\n\t\t{\n\t\t\toffsetLeft += r.left;\n\t\t\toffsetTop += r.top;\n\t\t}\n\t\t\n\t\treturn new mxPoint(offsetLeft, offsetTop);\n\t},\n\n\t/**\n\t * Function: getDocumentScrollOrigin\n\t * \n\t * Returns the scroll origin of the given document or the current document\n\t * if no document is given.\n\t */\n\tgetDocumentScrollOrigin: function(doc)\n\t{\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\treturn new mxPoint(doc.body.scrollLeft, doc.body.scrollTop);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar wnd = doc.defaultView || doc.parentWindow;\n\t\t\t\n\t\t\tvar x = (wnd != null && window.pageXOffset !== undefined) ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft;\n\t\t\tvar y = (wnd != null && window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getScrollOrigin\n\t * \n\t * Returns the top, left corner of the viewrect as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose scroll origin should be returned.\n\t * includeAncestors - Whether the scroll origin of the ancestors should be\n\t * included. Default is false.\n\t * includeDocument - Whether the scroll origin of the document should be\n\t * included. Default is true.\n\t */\n\tgetScrollOrigin: function(node, includeAncestors, includeDocument)\n\t{\n\t\tincludeAncestors = (includeAncestors != null) ? includeAncestors : false;\n\t\tincludeDocument = (includeDocument != null) ? includeDocument : true;\n\t\t\n\t\tvar doc = (node != null) ? node.ownerDocument : document;\n\t\tvar b = doc.body;\n\t\tvar d = doc.documentElement;\n\t\tvar result = new mxPoint();\n\t\tvar fixed = false;\n\n\t\twhile (node != null && node != b && node != d)\n\t\t{\n\t\t\tif (!isNaN(node.scrollLeft) && !isNaN(node.scrollTop))\n\t\t\t{\n\t\t\t\tresult.x += node.scrollLeft;\n\t\t\t\tresult.y += node.scrollTop;\n\t\t\t}\n\t\t\t\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\n\t\t\tnode = (includeAncestors) ? node.parentNode : null;\n\t\t}\n\n\t\tif (!fixed && includeDocument)\n\t\t{\n\t\t\tvar origin = mxUtils.getDocumentScrollOrigin(doc);\n\n\t\t\tresult.x += origin.x;\n\t\t\tresult.y += origin.y;\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: convertPoint\n\t * \n\t * Converts the specified point (x, y) using the offset of the specified\n\t * container and returns a new <mxPoint> with the result.\n\t * \n\t * (code)\n\t * var pt = mxUtils.convertPoint(graph.container,\n\t *   mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to use for the offset.\n\t * x - X-coordinate of the point to be converted.\n\t * y - Y-coordinate of the point to be converted.\n\t */\n\tconvertPoint: function(container, x, y)\n\t{\n\t\tvar origin = mxUtils.getScrollOrigin(container, false);\n\t\tvar offset = mxUtils.getOffset(container);\n\n\t\toffset.x -= origin.x;\n\t\toffset.y -= origin.y;\n\t\t\n\t\treturn new mxPoint(x - offset.x, y - offset.y);\n\t},\n\t\n\t/**\n\t * Function: ltrim\n\t * \n\t * Strips all whitespaces from the beginning of the string. Without the\n\t * second parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\tltrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"^[\" + chars + \"]+\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: rtrim\n\t * \n\t * Strips all whitespaces from the end of the string. Without the second\n\t * parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\trtrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"[\" + chars + \"]+$\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: trim\n\t * \n\t * Strips all whitespaces from both end of the string.\n\t * Without the second parameter, Javascript function will trim these\n\t * characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\ttrim: function(str, chars)\n\t{\n\t\treturn mxUtils.ltrim(mxUtils.rtrim(str, chars), chars);\n\t},\n\t\n\t/**\n\t * Function: isNumeric\n\t * \n\t * Returns true if the specified value is numeric, that is, if it is not\n\t * null, not an empty string, not a HEX number and isNaN returns false.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisNumeric: function(n)\n\t{\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n) && (typeof(n) != 'string' || n.toLowerCase().indexOf('0x') < 0);\n\t},\n\n\t/**\n\t * Function: isInteger\n\t * \n\t * Returns true if the given value is an valid integer number.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisInteger: function(n)\n\t{\n\t\treturn String(parseInt(n)) === String(n);\n\t},\n\n\t/**\n\t * Function: mod\n\t * \n\t * Returns the remainder of division of n by m. You should use this instead\n\t * of the built-in operation as the built-in operation does not properly\n\t * handle negative numbers.\n\t */\n\tmod: function(n, m)\n\t{\n\t\treturn ((n % m) + m) % m;\n\t},\n\n\t/**\n\t * Function: intersection\n\t * \n\t * Returns the intersection of two lines as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * x0 - X-coordinate of the first line's startpoint.\n\t * y0 - X-coordinate of the first line's startpoint.\n\t * x1 - X-coordinate of the first line's endpoint.\n\t * y1 - Y-coordinate of the first line's endpoint.\n\t * x2 - X-coordinate of the second line's startpoint.\n\t * y2 - Y-coordinate of the second line's startpoint.\n\t * x3 - X-coordinate of the second line's endpoint.\n\t * y3 - Y-coordinate of the second line's endpoint.\n\t */\n\tintersection: function (x0, y0, x1, y1, x2, y2, x3, y3)\n\t{\n\t\tvar denom = ((y3 - y2) * (x1 - x0)) - ((x3 - x2) * (y1 - y0));\n\t\tvar nume_a = ((x3 - x2) * (y0 - y2)) - ((y3 - y2) * (x0 - x2));\n\t\tvar nume_b = ((x1 - x0) * (y0 - y2)) - ((y1 - y0) * (x0 - x2));\n\n\t\tvar ua = nume_a / denom;\n\t\tvar ub = nume_b / denom;\n\t\t\n\t\tif(ua >= 0.0 && ua <= 1.0 && ub >= 0.0 && ub <= 1.0)\n\t\t{\n\t\t\t// Get the intersection point\n\t\t\tvar x = x0 + ua * (x1 - x0);\n\t\t\tvar y = y0 + ua * (y1 - y0);\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t\t\n\t\t// No intersection\n\t\treturn null;\n\t},\n\t\n\t/**\n\t * Function: ptSegDistSq\n\t * \n\t * Returns the square distance between a segment and a point. To get the\n\t * distance between a point and a line (with infinite length) use\n\t * <mxUtils.ptLineDist>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\tptSegDistSq: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\n\t\tpx -= x1;\n\t\tpy -= y1;\n\n\t\tvar dotprod = px * x2 + py * y2;\n\t\tvar projlenSq;\n\n\t\tif (dotprod <= 0.0)\n\t\t{\n\t\t    projlenSq = 0.0;\n\t\t}\n\t\telse\n\t\t{\n\t\t    px = x2 - px;\n\t\t    py = y2 - py;\n\t\t    dotprod = px * x2 + py * y2;\n\n\t\t    if (dotprod <= 0.0)\n\t\t    {\n\t\t\t\tprojlenSq = 0.0;\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t\t\tprojlenSq = dotprod * dotprod / (x2 * x2 + y2 * y2);\n\t\t    }\n\t\t}\n\n\t\tvar lenSq = px * px + py * py - projlenSq;\n\t\t\n\t\tif (lenSq < 0)\n\t\t{\n\t\t    lenSq = 0;\n\t\t}\n\t\t\n\t\treturn lenSq;\n    },\n\t\n\t/**\n\t * Function: ptLineDist\n\t * \n\t * Returns the distance between a line defined by two points and a point.\n\t * To get the distance between a point and a segment (with a specific\n\t * length) use <mxUtils.ptSeqDistSq>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of point 1 of the line.\n\t * y1 - Y-coordinate of point 1 of the line.\n\t * x2 - X-coordinate of point 1 of the line.\n\t * y2 - Y-coordinate of point 1 of the line.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n    ptLineDist: function(x1, y1, x2, y2, px, py)\n    {\n\t\treturn Math.abs((y2 - y1) * px - (x2 - x1) * py + x2 * y1 - y2 * x1) /\n\t\t\tMath.sqrt((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n    },\n    \t\n\t/**\n\t * Function: relativeCcw\n\t * \n\t * Returns 1 if the given point on the right side of the segment, 0 if its\n\t * on the segment, and -1 if the point is on the left side of the segment.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\trelativeCcw: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\t\tpx -= x1;\n\t\tpy -= y1;\n\t\tvar ccw = px * y2 - py * x2;\n\t\t\n\t\tif (ccw == 0.0)\n\t\t{\n\t\t    ccw = px * x2 + py * y2;\n\t\t    \n\t\t    if (ccw > 0.0)\n\t\t    {\n\t\t\t\tpx -= x2;\n\t\t\t\tpy -= y2;\n\t\t\t\tccw = px * x2 + py * y2;\n\t\t\t\t\n\t\t\t\tif (ccw < 0.0)\n\t\t\t\t{\n\t\t\t\t    ccw = 0.0;\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t\treturn (ccw < 0.0) ? -1 : ((ccw > 0.0) ? 1 : 0);\n    },\n    \n\t/**\n\t * Function: animateChanges\n\t * \n\t * See <mxEffects.animateChanges>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tanimateChanges: function(graph, changes)\n\t{\n\t\t// LATER: Deprecated, remove this function\n    \tmxEffects.animateChanges.apply(this, arguments);\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * See <mxEffects.cascadeOpacity>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\tmxEffects.cascadeOpacity.apply(this, arguments);\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * See <mxEffects.fadeOut>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tmxEffects.fadeOut.apply(this, arguments);\n\t},\n\t\n\t/**\n\t * Function: setOpacity\n\t * \n\t * Sets the opacity of the specified DOM node to the given value in %.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the opacity for.\n\t * value - Opacity in %. Possible values are between 0 and 100.\n\t */\n\tsetOpacity: function(node, value)\n\t{\n\t\tif (mxUtils.isVml(node))\n\t\t{\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t    \t\t// TODO: Why is the division by 5 needed in VML?\n\t\t\t    node.style.filter = 'alpha(opacity=' + (value/5) + ')';\n\t    \t}\n\t\t}\n\t\telse if (mxClient.IS_IE && (typeof(document.documentMode) === 'undefined' || document.documentMode < 9))\n\t    {\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t\t\t    node.style.filter = 'alpha(opacity=' + value + ')';\n\t    \t}\n\t\t}\n\t\telse\n\t\t{\n\t\t    node.style.opacity = (value / 100);\n\t\t}\n\t},\n\n\t/**\n\t * Function: createImage\n\t * \n\t * Creates and returns an image (IMG node) or VML image (v:image) in IE6 in\n\t * quirks mode.\n\t * \n\t * Parameters:\n\t * \n\t * src - URL that points to the image to be displayed.\n\t */\n\tcreateImage: function(src)\n\t{\n        var imageNode = null;\n        \n\t\tif (mxClient.IS_IE6 && document.compatMode != 'CSS1Compat')\n\t\t{\n        \timageNode = document.createElement(mxClient.VML_PREFIX + ':image');\n        \timageNode.setAttribute('src', src);\n        \timageNode.style.borderStyle = 'none';\n        }\n\t\telse\n\t\t{\n\t\t\timageNode = document.createElement('img');\n\t\t\timageNode.setAttribute('src', src);\n\t\t\timageNode.setAttribute('border', '0');\n\t\t}\n\t\t\n\t\treturn imageNode;\n\t},\n\n\t/**\n\t * Function: sortCells\n\t * \n\t * Sorts the given cells according to the order in the cell hierarchy.\n\t * Ascending is optional and defaults to true.\n\t */\n\tsortCells: function(cells, ascending)\n\t{\n\t\tascending = (ascending != null) ? ascending : true;\n\t\tvar lookup = new mxDictionary();\n\t\tcells.sort(function(o1, o2)\n\t\t{\n\t\t\tvar p1 = lookup.get(o1);\n\t\t\t\n\t\t\tif (p1 == null)\n\t\t\t{\n\t\t\t\tp1 = mxCellPath.create(o1).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o1, p1);\n\t\t\t}\n\t\t\t\n\t\t\tvar p2 = lookup.get(o2);\n\t\t\t\n\t\t\tif (p2 == null)\n\t\t\t{\n\t\t\t\tp2 = mxCellPath.create(o2).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o2, p2);\n\t\t\t}\n\t\t\t\n\t\t\tvar comp = mxCellPath.compare(p1, p2);\n\t\t\t\n\t\t\treturn (comp == 0) ? 0 : (((comp > 0) == ascending) ? 1 : -1);\n\t\t});\n\t\t\n\t\treturn cells;\n\t},\n\n\t/**\n\t * Function: getStylename\n\t * \n\t * Returns the stylename in a style of the form [(stylename|key=value);] or\n\t * an empty string if the given style does not contain a stylename.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylename: function(style)\n\t{\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\tvar stylename = pairs[0];\n\t\t\t\n\t\t\tif (stylename.indexOf('=') < 0)\n\t\t\t{\n\t\t\t\treturn stylename;\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn '';\n\t},\n\n\t/**\n\t * Function: getStylenames\n\t * \n\t * Returns the stylenames in a style of the form [(stylename|key=value);]\n\t * or an empty array if the given style does not contain any stylenames.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < pairs.length; i++)\n\t\t\t{\n\t\t\t\tif (pairs[i].indexOf('=') < 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(pairs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: indexOfStylename\n\t * \n\t * Returns the index of the given stylename in the given style. This\n\t * returns -1 if the given stylename does not occur (as a stylename) in the\n\t * given style, otherwise it returns the index of the first character.\n\t */\n\tindexOfStylename: function(style, stylename)\n\t{\n\t\tif (style != null && stylename != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\tvar pos = 0;\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] == stylename)\n\t\t\t\t{\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpos += tokens[i].length + 1;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\t\n\t/**\n\t * Function: addStylename\n\t * \n\t * Adds the specified stylename to the given style if it does not already\n\t * contain the stylename.\n\t */\n\taddStylename: function(style, stylename)\n\t{\n\t\tif (mxUtils.indexOfStylename(style, stylename) < 0)\n\t\t{\n\t\t\tif (style == null)\n\t\t\t{\n\t\t\t\tstyle = '';\n\t\t\t}\n\t\t\telse if (style.length > 0 && style.charAt(style.length - 1) != ';')\n\t\t\t{\n\t\t\t\tstyle += ';';\n\t\t\t}\n\t\t\t\n\t\t\tstyle += stylename;\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: removeStylename\n\t * \n\t * Removes all occurrences of the specified stylename in the given style\n\t * and returns the updated style. Trailing semicolons are not preserved.\n\t */\n\tremoveStylename: function(style, stylename)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] != stylename)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\t\n\t/**\n\t * Function: removeAllStylenames\n\t * \n\t * Removes all stylenames from the given style and returns the updated\n\t * style.\n\t */\n\tremoveAllStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\t// Keeps the key, value assignments\n\t\t\t\tif (tokens[i].indexOf('=') >= 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\n\t/**\n\t * Function: setCellStyles\n\t * \n\t * Assigns the value for the given key in the styles of the given cells, or\n\t * removes the key from the styles if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> to execute the transaction in.\n\t * cells - Array of <mxCells> to be updated.\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetCellStyles: function(model, cells, key, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyle(model.getStyle(cells[i]), key, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyle\n\t * \n\t * Adds or removes the given key, value pair to the style and returns the\n\t * new style. If value is null or zero length then the key is removed from\n\t * the style. This is for cell styles, not for CSS styles.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetStyle: function(style, key, value)\n\t{\n\t\tvar isValue = value != null && (typeof(value.length) == 'undefined' || value.length > 0);\n\t\t\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (isValue)\n\t\t\t{\n\t\t\t\tstyle = key + '=' + value + ';';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (style.substring(0, key.length + 1) == key + '=')\n\t\t\t{\n\t\t\t\tvar next = style.indexOf(';');\n\t\t\t\t\n\t\t\t\tif (isValue)\n\t\t\t\t{\n\t\t\t\t\tstyle = key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = (next < 0 || next == style.length - 1) ? '' : style.substring(next + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar index = style.indexOf(';' + key + '=');\n\t\t\t\t\n\t\t\t\tif (index < 0)\n\t\t\t\t{\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sep = (style.charAt(style.length - 1) == ';') ? '' : ';';\n\t\t\t\t\t\tstyle = style + sep + key + '=' + value + ';';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar next = style.indexOf(';', index + 1);\n\t\t\t\t\t\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index + 1) + key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index) + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\n\t/**\n\t * Function: setCellStyleFlags\n\t * \n\t * Sets or toggles the flag bit for the given key in the cell's styles.\n\t * If value is null then the flag is toggled.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var cells = graph.getSelectionCells();\n\t * mxUtils.setCellStyleFlags(graph.model,\n\t * \t\t\tcells,\n\t * \t\t\tmxConstants.STYLE_FONTSTYLE,\n\t * \t\t\tmxConstants.FONT_BOLD);\n\t * (end)\n\t * \n\t * Toggles the bold font style.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> that contains the cells.\n\t * cells - Array of <mxCells> to change the style for.\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the flag.\n\t */\n\tsetCellStyleFlags: function(model, cells, key, flag, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyleFlag(\n\t\t\t\t\t\t\tmodel.getStyle(cells[i]),\n\t\t\t\t\t\t\tkey, flag, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyleFlag\n\t * \n\t * Sets or removes the given key from the specified style and returns the\n\t * new style. If value is null then the flag is toggled.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the given flag.\n\t */\n\tsetStyleFlag: function(style, key, flag, value)\n\t{\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (value || value == null)\n\t\t\t{\n\t\t\t\tstyle = key+'='+flag;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstyle = key+'=0';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar index = style.indexOf(key+'=');\n\t\t\t\n\t\t\tif (index < 0)\n\t\t\t{\n\t\t\t\tvar sep = (style.charAt(style.length-1) == ';') ? '' : ';';\n\n\t\t\t\tif (value || value == null)\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=' + flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=0';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar cont = style.indexOf(';', index);\n\t\t\t\tvar tmp = '';\n\t\t\t\t\n\t\t\t\tif (cont < 0)\n\t\t\t\t{\n\t\t\t\t\ttmp  = style.substring(index+key.length+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = style.substring(index+key.length+1, cont);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (value == null)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) ^ flag;\n\t\t\t\t}\n\t\t\t\telse if (value)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) | flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) & ~flag;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstyle = style.substring(0, index) + key + '=' + tmp +\n\t\t\t\t\t((cont >= 0) ? style.substring(cont) : '');\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: getAlignmentAsPoint\n\t * \n\t * Returns an <mxPoint> that represents the horizontal and vertical alignment\n\t * for numeric computations. X is -0.5 for center, -1 for right and 0 for\n\t * left alignment. Y is -0.5 for middle, -1 for bottom and 0 for top\n\t * alignment. Default values for missing arguments is top, left.\n\t */\n\tgetAlignmentAsPoint: function(align, valign)\n\t{\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\t// Horizontal alignment\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tdx = -0.5;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tdx = -1;\n\t\t}\n\n\t\t// Vertical alignment\n\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tdy = -0.5;\n\t\t}\n\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy = -1;\n\t\t}\n\t\t\n\t\treturn new mxPoint(dx, dy);\n\t},\n\t\n\t/**\n\t * Function: getSizeForString\n\t * \n\t * Returns an <mxRectangle> with the size (width and height in pixels) of\n\t * the given string. The string may contain HTML markup. Newlines should be\n\t * converted to <br> before calling this method. The caller is responsible\n\t * for sanitizing the HTML markup.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var label = graph.getLabel(cell).replace(/\\n/g, \"<br>\");\n\t * var size = graph.getSizeForString(label);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * text - String whose size should be returned.\n\t * fontSize - Integer that specifies the font size in pixels. Default is\n\t * <mxConstants.DEFAULT_FONTSIZE>.\n\t * fontFamily - String that specifies the name of the font family. Default\n\t * is <mxConstants.DEFAULT_FONTFAMILY>.\n\t * textWidth - Optional width for text wrapping.\n\t */\n\tgetSizeForString: function(text, fontSize, fontFamily, textWidth)\n\t{\n\t\tfontSize = (fontSize != null) ? fontSize : mxConstants.DEFAULT_FONTSIZE;\n\t\tfontFamily = (fontFamily != null) ? fontFamily : mxConstants.DEFAULT_FONTFAMILY;\n\t\tvar div = document.createElement('div');\n\t\t\n\t\t// Sets the font size and family\n\t\tdiv.style.fontFamily = fontFamily;\n\t\tdiv.style.fontSize = Math.round(fontSize) + 'px';\n\t\tdiv.style.lineHeight = Math.round(fontSize * mxConstants.LINE_HEIGHT) + 'px';\n\t\t\n\t\t// Disables block layout and outside wrapping and hides the div\n\t\tdiv.style.position = 'absolute';\n\t\tdiv.style.visibility = 'hidden';\n\t\tdiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\tdiv.style.zoom = '1';\n\t\t\n\t\tif (textWidth != null)\n\t\t{\n\t\t\tdiv.style.width = textWidth + 'px';\n\t\t\tdiv.style.whiteSpace = 'normal';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\t// Adds the text and inserts into DOM for updating of size\n\t\tdiv.innerHTML = text;\n\t\tdocument.body.appendChild(div);\n\t\t\n\t\t// Gets the size and removes from DOM\n\t\tvar size = new mxRectangle(0, 0, div.offsetWidth, div.offsetHeight);\n\t\tdocument.body.removeChild(div);\n\t\t\n\t\treturn size;\n\t},\n\t\n\t/**\n\t * Function: getViewXml\n\t */\n\tgetViewXml: function(graph, scale, cells, x0, y0)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\tscale = (scale != null) ? scale : 1;\n\n\t\tif (cells == null)\n\t\t{\n\t\t\tvar model = graph.getModel();\n\t\t\tcells = [model.getRoot()];\n\t\t}\n\t\t\n\t\tvar view = graph.getView();\n\t\tvar result = null;\n\n\t\t// Disables events on the view\n\t\tvar eventsEnabled = view.isEventsEnabled();\n\t\tview.setEventsEnabled(false);\n\n\t\t// Workaround for label bounds not taken into account for image export.\n\t\t// Creates a temporary draw pane which is used for rendering the text.\n\t\t// Text rendering is required for finding the bounds of the labels.\n\t\tvar drawPane = view.drawPane;\n\t\tvar overlayPane = view.overlayPane;\n\n\t\tif (graph.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tview.drawPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.drawPane);\n\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tview.drawPane = view.drawPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.drawPane);\n\t\t\t\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = view.overlayPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\n\t\t// Resets the translation\n\t\tvar translate = view.getTranslate();\n\t\tview.translate = new mxPoint(x0, y0);\n\n\t\t// Creates the temporary cell states in the view\n\t\tvar temp = new mxTemporaryCellStates(graph.getView(), scale, cells);\n\n\t\ttry\n\t\t{\n\t\t\tvar enc = new mxCodec();\n\t\t\tresult = enc.encode(graph.getView());\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\ttemp.destroy();\n\t\t\tview.translate = translate;\n\t\t\tview.canvas.removeChild(view.drawPane);\n\t\t\tview.canvas.removeChild(view.overlayPane);\n\t\t\tview.drawPane = drawPane;\n\t\t\tview.overlayPane = overlayPane;\n\t\t\tview.setEventsEnabled(eventsEnabled);\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: getScaleForPageCount\n\t * \n\t * Returns the scale to be used for printing the graph with the given\n\t * bounds across the specifies number of pages with the given format. The\n\t * scale is always computed such that it given the given amount or fewer\n\t * pages in the print output. See <mxPrintPreview> for an example.\n\t * \n\t * Parameters:\n\t * \n\t * pageCount - Specifies the number of pages in the print output.\n\t * graph - <mxGraph> that should be printed.\n\t * pageFormat - Optional <mxRectangle> that specifies the page format.\n\t * Default is <mxConstants.PAGE_FORMAT_A4_PORTRAIT>.\n\t * border - The border along each side of every page.\n\t */\n\tgetScaleForPageCount: function(pageCount, graph, pageFormat, border)\n\t{\n\t\tif (pageCount < 1)\n\t\t{\n\t\t\t// We can't work with less than 1 page, return no scale\n\t\t\t// change\n\t\t\treturn 1;\n\t\t}\n\t\t\n\t\tpageFormat = (pageFormat != null) ? pageFormat : mxConstants.PAGE_FORMAT_A4_PORTRAIT;\n\t\tborder = (border != null) ? border : 0;\n\t\t\n\t\tvar availablePageWidth = pageFormat.width - (border * 2);\n\t\tvar availablePageHeight = pageFormat.height - (border * 2);\n\n\t\t// Work out the number of pages required if the\n\t\t// graph is not scaled.\n\t\tvar graphBounds = graph.getGraphBounds().clone();\n\t\tvar sc = graph.getView().getScale();\n\t\tgraphBounds.width /= sc;\n\t\tgraphBounds.height /= sc;\n\t\tvar graphWidth = graphBounds.width;\n\t\tvar graphHeight = graphBounds.height;\n\n\t\tvar scale = 1;\n\t\t\n\t\t// The ratio of the width/height for each printer page\n\t\tvar pageFormatAspectRatio = availablePageWidth / availablePageHeight;\n\t\t// The ratio of the width/height for the graph to be printer\n\t\tvar graphAspectRatio = graphWidth / graphHeight;\n\t\t\n\t\t// The ratio of horizontal pages / vertical pages for this \n\t\t// graph to maintain its aspect ratio on this page format\n\t\tvar pagesAspectRatio = graphAspectRatio / pageFormatAspectRatio;\n\t\t\n\t\t// Factor the square root of the page count up and down \n\t\t// by the pages aspect ratio to obtain a horizontal and \n\t\t// vertical page count that adds up to the page count\n\t\t// and has the correct aspect ratio\n\t\tvar pageRoot = Math.sqrt(pageCount);\n\t\tvar pagesAspectRatioSqrt = Math.sqrt(pagesAspectRatio);\n\t\tvar numRowPages = pageRoot * pagesAspectRatioSqrt;\n\t\tvar numColumnPages = pageRoot / pagesAspectRatioSqrt;\n\n\t\t// These value are rarely more than 2 rounding downs away from\n\t\t// a total that meets the page count. In cases of one being less \n\t\t// than 1 page, the other value can be too high and take more iterations \n\t\t// In this case, just change that value to be the page count, since \n\t\t// we know the other value is 1\n\t\tif (numRowPages < 1 && numColumnPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numColumnPages / pageCount;\n\t\t\tnumColumnPages = pageCount;\n\t\t\tnumRowPages /= scaleChange;\n\t\t}\n\t\t\n\t\tif (numColumnPages < 1 && numRowPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numRowPages / pageCount;\n\t\t\tnumRowPages = pageCount;\n\t\t\tnumColumnPages /= scaleChange;\n\t\t}\t\t\n\n\t\tvar currentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\n\t\tvar numLoops = 0;\n\t\t\n\t\t// Iterate through while the rounded up number of pages comes to\n\t\t// a total greater than the required number\n\t\twhile (currentTotalPages > pageCount)\n\t\t{\n\t\t\t// Round down the page count (rows or columns) that is\n\t\t\t// closest to its next integer down in percentage terms.\n\t\t\t// i.e. Reduce the page total by reducing the total\n\t\t\t// page area by the least possible amount\n\n\t\t\tvar roundRowDownProportion = Math.floor(numRowPages) / numRowPages;\n\t\t\tvar roundColumnDownProportion = Math.floor(numColumnPages) / numColumnPages;\n\t\t\t\n\t\t\t// If the round down proportion is, work out the proportion to\n\t\t\t// round down to 1 page less\n\t\t\tif (roundRowDownProportion == 1)\n\t\t\t{\n\t\t\t\troundRowDownProportion = Math.floor(numRowPages-1) / numRowPages;\n\t\t\t}\n\t\t\tif (roundColumnDownProportion == 1)\n\t\t\t{\n\t\t\t\troundColumnDownProportion = Math.floor(numColumnPages-1) / numColumnPages;\n\t\t\t}\n\t\t\t\n\t\t\t// Check which rounding down is smaller, but in the case of very small roundings\n\t\t\t// try the other dimension instead\n\t\t\tvar scaleChange = 1;\n\t\t\t\n\t\t\t// Use the higher of the two values\n\t\t\tif (roundRowDownProportion > roundColumnDownProportion)\n\t\t\t{\n\t\t\t\tscaleChange = roundRowDownProportion;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tscaleChange = roundColumnDownProportion;\n\t\t\t}\n\n\t\t\tnumRowPages = numRowPages * scaleChange;\n\t\t\tnumColumnPages = numColumnPages * scaleChange;\n\t\t\tcurrentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\t\t\t\n\t\t\tnumLoops++;\n\t\t\t\n\t\t\tif (numLoops > 10)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Work out the scale from the number of row pages required\n\t\t// The column pages will give the same value\n\t\tvar posterWidth = availablePageWidth * numRowPages;\n\t\tscale = posterWidth / graphWidth;\n\t\t\n\t\t// Allow for rounding errors\n\t\treturn scale * 0.99999;\n\t},\n\t\n\t/**\n\t * Function: show\n\t * \n\t * Copies the styles and the markup from the graph's container into the\n\t * given document and removes all cursor styles. The document is returned.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * If you experience problems with missing stylesheets in IE then try adding\n\t * the domain to the trusted sites.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be copied.\n\t * doc - Document where the new graph is created.\n\t * x0 - X-coordinate of the graph view origin. Default is 0.\n\t * y0 - Y-coordinate of the graph view origin. Default is 0.\n\t * w - Optional width of the graph view.\n\t * h - Optional height of the graph view.\n\t */\n\tshow: function(graph, doc, x0, y0, w, h)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\t\n\t\tif (doc == null)\n\t\t{\n\t\t\tvar wnd = window.open();\n\t\t\tdoc = wnd.document;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.open();\n\t\t}\n\n\t\t// Workaround for missing print output in IE9 standards\n\t\tif (document.documentMode == 9)\n\t\t{\n\t\t\tdoc.writeln('<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\"><![endif]-->');\n\t\t}\n\t\t\n\t\tvar bounds = graph.getGraphBounds();\n\t\tvar dx = Math.ceil(x0 - bounds.x);\n\t\tvar dy = Math.ceil(y0 - bounds.y);\n\t\t\n\t\tif (w == null)\n\t\t{\n\t\t\tw = Math.ceil(bounds.width + x0) + Math.ceil(Math.ceil(bounds.x) - bounds.x);\n\t\t}\n\t\t\n\t\tif (h == null)\n\t\t{\n\t\t\th = Math.ceil(bounds.height + y0) + Math.ceil(Math.ceil(bounds.y) - bounds.y);\n\t\t}\n\t\t\n\t\t// Needs a special way of creating the page so that no click is required\n\t\t// to refresh the contents after the external CSS styles have been loaded.\n\t\t// To avoid a click or programmatic refresh, the styleSheets[].cssText\n\t\t// property is copied over from the original document.\n\t\tif (mxClient.IS_IE || document.documentMode == 11)\n\t\t{\n\t\t\tvar html = '<html><head>';\n\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\thtml += base[i].outerHTML;\n\t\t\t}\n\n\t\t\thtml += '<style>';\n\n\t\t\t// Copies the stylesheets without having to load them again\n\t\t\tfor (var i = 0; i < document.styleSheets.length; i++)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\thtml += document.styleSheets[i].cssText;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// ignore security exception\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</style></head><body style=\"margin:0px;\">';\n\t\t\t\n\t\t\t// Copies the contents of the graph container\n\t\t\thtml += '<div style=\"position:absolute;overflow:hidden;width:' + w + 'px;height:' + h + 'px;\"><div style=\"position:relative;left:' + dx + 'px;top:' + dy + 'px;\">';\n\t\t\thtml += graph.container.innerHTML;\n\t\t\thtml += '</div></div></body><html>';\n\n\t\t\tdoc.writeln(html);\n\t\t\tdoc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.writeln('<html><head>');\n\t\t\t\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(base[i]));\n\t\t\t}\n\t\t\t\n\t\t\tvar links = document.getElementsByTagName('link');\n\t\t\t\n\t\t\tfor (var i = 0; i < links.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(links[i]));\n\t\t\t}\n\t\n\t\t\tvar styles = document.getElementsByTagName('style');\n\t\t\t\n\t\t\tfor (var i = 0; i < styles.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(styles[i]));\n\t\t\t}\n\n\t\t\tdoc.writeln('</head><body style=\"margin:0px;\"></body></html>');\n\t\t\tdoc.close();\n\n\t\t\tvar outer = doc.createElement('div');\n\t\t\touter.position = 'absolute';\n\t\t\touter.overflow = 'hidden';\n\t\t\touter.style.width = w + 'px';\n\t\t\touter.style.height = h + 'px';\n\n\t\t\t// Required for HTML labels if foreignObjects are disabled\n\t\t\tvar div = doc.createElement('div');\n\t\t\tdiv.style.position = 'absolute';\n\t\t\tdiv.style.left = dx + 'px';\n\t\t\tdiv.style.top = dy + 'px';\n\n\t\t\tvar node = graph.container.firstChild;\n\t\t\tvar svg = null;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tvar clone = node.cloneNode(true);\n\t\t\t\t\n\t\t\t\tif (node == graph.view.drawPane.ownerSVGElement)\n\t\t\t\t{\n\t\t\t\t\touter.appendChild(clone);\n\t\t\t\t\tsvg = clone;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdiv.appendChild(clone);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\n\t\t\tdoc.body.appendChild(outer);\n\t\t\t\n\t\t\tif (div.firstChild != null)\n\t\t\t{\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tif (svg != null)\n\t\t\t{\n\t\t\t\tsvg.style.minWidth = '';\n\t\t\t\tsvg.style.minHeight = '';\n\t\t\t\tsvg.firstChild.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t}\n\t\t}\n\t\t\n\t\tmxUtils.removeCursors(doc.body);\n\t\n\t\treturn doc;\n\t},\n\t\n\t/**\n\t * Function: printScreen\n\t * \n\t * Prints the specified graph using a new window and the built-in print\n\t * dialog.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be printed.\n\t */\n\tprintScreen: function(graph)\n\t{\n\t\tvar wnd = window.open();\n\t\tvar bounds = graph.getGraphBounds();\n\t\tmxUtils.show(graph, wnd.document);\n\t\t\n\t\tvar print = function()\n\t\t{\n\t\t\twnd.focus();\n\t\t\twnd.print();\n\t\t\twnd.close();\n\t\t};\n\t\t\n\t\t// Workaround for Google Chrome which needs a bit of a\n\t\t// delay in order to render the SVG contents\n\t\tif (mxClient.IS_GC)\n\t\t{\n\t\t\twnd.setTimeout(print, 500);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint();\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: popup\n\t * \n\t * Shows the specified text content in a new <mxWindow> or a new browser\n\t * window if isInternalWindow is false.\n\t * \n\t * Parameters:\n\t * \n\t * content - String that specifies the text to be displayed.\n\t * isInternalWindow - Optional boolean indicating if an mxWindow should be\n\t * used instead of a new browser window. Default is false.\n\t */\n\tpopup: function(content, isInternalWindow)\n\t{\n\t   \tif (isInternalWindow)\n\t   \t{\n\t\t\tvar div = document.createElement('div');\n\t\t\t\n\t\t\tdiv.style.overflow = 'scroll';\n\t\t\tdiv.style.width = '636px';\n\t\t\tdiv.style.height = '460px';\n\t\t\t\n\t\t\tvar pre = document.createElement('pre');\n\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t\n\t\t\tdiv.appendChild(pre);\n\t\t\t\n\t\t\tvar w = document.body.clientWidth;\n\t\t\tvar h = Math.max(document.body.clientHeight || 0, document.documentElement.clientHeight)\n\t\t\tvar wnd = new mxWindow('Popup Window', div,\n\t\t\t\tw/2-320, h/2-240, 640, 480, false, true);\n\n\t\t\twnd.setClosable(true);\n\t\t\twnd.setVisible(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Wraps up the XML content in a textarea\n\t\t\tif (mxClient.IS_NS)\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t\twnd.document.writeln('<pre>'+mxUtils.htmlEntities(content)+'</pre');\n\t\t\t   \twnd.document.close();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t    var pre = wnd.document.createElement('pre');\n\t\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t   \twnd.document.body.appendChild(pre);\n\t\t\t}\n\t   \t}\n\t},\n\t\n\t/**\n\t * Function: alert\n\t * \n\t * Displayss the given alert in a new dialog. This implementation uses the\n\t * built-in alert function. This is used to display validation errors when\n\t * connections cannot be changed or created.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\talert: function(message)\n\t{\n\t\talert(message);\n\t},\n\t\n\t/**\n\t * Function: prompt\n\t * \n\t * Displays the given message in a prompt dialog. This implementation uses\n\t * the built-in prompt function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * defaultValue - Optional string specifying the default value.\n\t */\n\tprompt: function(message, defaultValue)\n\t{\n\t\treturn prompt(message, (defaultValue != null) ? defaultValue : '');\n\t},\n\t\n\t/**\n\t * Function: confirm\n\t * \n\t * Displays the given message in a confirm dialog. This implementation uses\n\t * the built-in confirm function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\tconfirm: function(message)\n\t{\n\t\treturn confirm(message);\n\t},\n\n\t/**\n\t * Function: error\n\t * \n\t * Displays the given error message in a new <mxWindow> of the given width.\n\t * If close is true then an additional close button is added to the window.\n\t * The optional icon specifies the icon to be used for the window. Default\n\t * is <mxUtils.errorImage>.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * width - Integer specifying the width of the window.\n\t * close - Optional boolean indicating whether to add a close button.\n\t * icon - Optional icon for the window decoration.\n\t */\n\terror: function(message, width, close, icon)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.padding = '20px';\n\n\t\tvar img = document.createElement('img');\n\t\timg.setAttribute('src', icon || mxUtils.errorImage);\n\t\timg.setAttribute('valign', 'bottom');\n\t\timg.style.verticalAlign = 'middle';\n\t\tdiv.appendChild(img);\n\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tmxUtils.write(div, message);\n\n\t\tvar w = document.body.clientWidth;\n\t\tvar h = (document.body.clientHeight || document.documentElement.clientHeight);\n\t\tvar warn = new mxWindow(mxResources.get(mxUtils.errorResource) ||\n\t\t\tmxUtils.errorResource, div, (w-width)/2, h/4, width, null,\n\t\t\tfalse, true);\n\n\t\tif (close)\n\t\t{\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\tvar tmp = document.createElement('p');\n\t\t\tvar button = document.createElement('button');\n\n\t\t\tif (mxClient.IS_IE)\n\t\t\t{\n\t\t\t\tbutton.style.cssText = 'float:right';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbutton.setAttribute('style', 'float:right');\n\t\t\t}\n\n\t\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t\t{\n\t\t\t\twarn.destroy();\n\t\t\t});\n\n\t\t\tmxUtils.write(button, mxResources.get(mxUtils.closeResource) ||\n\t\t\t\tmxUtils.closeResource);\n\t\t\t\n\t\t\ttmp.appendChild(button);\n\t\t\tdiv.appendChild(tmp);\n\t\t\t\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\twarn.setClosable(true);\n\t\t}\n\t\t\n\t\twarn.setVisible(true);\n\t\t\n\t\treturn warn;\n\t},\n\n\t/**\n\t * Function: makeDraggable\n\t * \n\t * Configures the given DOM element to act as a drag source for the\n\t * specified graph. Returns a a new <mxDragSource>. If\n\t * <mxDragSource.guideEnabled> is enabled then the x and y arguments must\n\t * be used in funct to match the preview location.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var funct = function(graph, evt, cell, x, y)\n\t * {\n\t *   if (graph.canImportCell(cell))\n\t *   {\n\t *     var parent = graph.getDefaultParent();\n\t *     var vertex = null;\n\t *     \n\t *     graph.getModel().beginUpdate();\n\t *     try\n\t *     {\n\t * \t     vertex = graph.insertVertex(parent, null, 'Hello', x, y, 80, 30);\n\t *     }\n\t *     finally\n\t *     {\n\t *       graph.getModel().endUpdate();\n\t *     }\n\t *\n\t *     graph.setSelectionCell(vertex);\n\t *   }\n\t * }\n\t * \n\t * var img = document.createElement('img');\n\t * img.setAttribute('src', 'editors/images/rectangle.gif');\n\t * img.style.position = 'absolute';\n\t * img.style.left = '0px';\n\t * img.style.top = '0px';\n\t * img.style.width = '16px';\n\t * img.style.height = '16px';\n\t * \n\t * var dragImage = img.cloneNode(true);\n\t * dragImage.style.width = '32px';\n\t * dragImage.style.height = '32px';\n\t * mxUtils.makeDraggable(img, graph, funct, dragImage);\n\t * document.body.appendChild(img);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM element to make draggable.\n\t * graphF - <mxGraph> that acts as the drop target or a function that takes a\n\t * mouse event and returns the current <mxGraph>.\n\t * funct - Function to execute on a successful drop.\n\t * dragElement - Optional DOM node to be used for the drag preview.\n\t * dx - Optional horizontal offset between the cursor and the drag\n\t * preview.\n\t * dy - Optional vertical offset between the cursor and the drag\n\t * preview.\n\t * autoscroll - Optional boolean that specifies if autoscroll should be\n\t * used. Default is mxGraph.autoscroll.\n\t * scalePreview - Optional boolean that specifies if the preview element\n\t * should be scaled according to the graph scale. If this is true, then\n\t * the offsets will also be scaled. Default is false.\n\t * highlightDropTargets - Optional boolean that specifies if dropTargets\n\t * should be highlighted. Default is true.\n\t * getDropTarget - Optional function to return the drop target for a given\n\t * location (x, y). Default is mxGraph.getCellAt.\n\t */\n\tmakeDraggable: function(element, graphF, funct, dragElement, dx, dy, autoscroll,\n\t\t\tscalePreview, highlightDropTargets, getDropTarget)\n\t{\n\t\tvar dragSource = new mxDragSource(element, funct);\n\t\tdragSource.dragOffset = new mxPoint((dx != null) ? dx : 0,\n\t\t\t(dy != null) ? dy : mxConstants.TOOLTIP_VERTICAL_OFFSET);\n\t\tdragSource.autoscroll = autoscroll;\n\t\t\n\t\t// Cannot enable this by default. This needs to be enabled in the caller\n\t\t// if the funct argument uses the new x- and y-arguments.\n\t\tdragSource.setGuidesEnabled(false);\n\t\t\n\t\tif (highlightDropTargets != null)\n\t\t{\n\t\t\tdragSource.highlightDropTargets = highlightDropTargets;\n\t\t}\n\t\t\n\t\t// Overrides function to find drop target cell\n\t\tif (getDropTarget != null)\n\t\t{\n\t\t\tdragSource.getDropTarget = getDropTarget;\n\t\t}\n\t\t\n\t\t// Overrides function to get current graph\n\t\tdragSource.getGraphForEvent = function(evt)\n\t\t{\n\t\t\treturn (typeof(graphF) == 'function') ? graphF(evt) : graphF;\n\t\t};\n\t\t\n\t\t// Translates switches into dragSource customizations\n\t\tif (dragElement != null)\n\t\t{\n\t\t\tdragSource.createDragElement = function()\n\t\t\t{\n\t\t\t\treturn dragElement.cloneNode(true);\n\t\t\t};\n\t\t\t\n\t\t\tif (scalePreview)\n\t\t\t{\n\t\t\t\tdragSource.createPreviewElement = function(graph)\n\t\t\t\t{\n\t\t\t\t\tvar elt = dragElement.cloneNode(true);\n\n\t\t\t\t\tvar w = parseInt(elt.style.width);\n\t\t\t\t\tvar h = parseInt(elt.style.height);\n\t\t\t\t\telt.style.width = Math.round(w * graph.view.scale) + 'px';\n\t\t\t\t\telt.style.height = Math.round(h * graph.view.scale) + 'px';\n\t\t\t\t\t\n\t\t\t\t\treturn elt;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn dragSource;\n\t}\n\n};\n\n__mxOutput.mxUtils = typeof mxUtils !== 'undefined' ? mxUtils : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n var mxConstants =\n {\n\t/**\n\t * Class: mxConstants\n\t * \n\t * Defines various global constants.\n\t * \n\t * Variable: DEFAULT_HOTSPOT\n\t * \n\t * Defines the portion of the cell which is to be used as a connectable\n\t * region. Default is 0.3. Possible values are 0 < x <= 1. \n\t */\n\tDEFAULT_HOTSPOT: 0.3,\n\n\t/**\n\t * Variable: MIN_HOTSPOT_SIZE\n\t * \n\t * Defines the minimum size in pixels of the portion of the cell which is\n\t * to be used as a connectable region. Default is 8.\n\t */\n\tMIN_HOTSPOT_SIZE: 8,\n\n\t/**\n\t * Variable: MAX_HOTSPOT_SIZE\n\t * \n\t * Defines the maximum size in pixels of the portion of the cell which is\n\t * to be used as a connectable region. Use 0 for no maximum. Default is 0.\n\t */\n\tMAX_HOTSPOT_SIZE: 0,\n\n\t/**\n\t * Variable: RENDERING_HINT_EXACT\n\t * \n\t * Defines the exact rendering hint.\n\t */\n\tRENDERING_HINT_EXACT: 'exact',\n\n\t/**\n\t * Variable: RENDERING_HINT_FASTER\n\t * \n\t * Defines the faster rendering hint.\n\t */\n\tRENDERING_HINT_FASTER: 'faster',\n\n\t/**\n\t * Variable: RENDERING_HINT_FASTEST\n\t * \n\t * Defines the fastest rendering hint.\n\t */\n\tRENDERING_HINT_FASTEST: 'fastest',\n\n\t/**\n\t * Variable: DIALECT_SVG\n\t * \n\t * Defines the SVG display dialect name.\n\t */\n\tDIALECT_SVG: 'svg',\n\n\t/**\n\t * Variable: DIALECT_VML\n\t * \n\t * Defines the VML display dialect name.\n\t */\n\tDIALECT_VML: 'vml',\n\n\t/**\n\t * Variable: DIALECT_MIXEDHTML\n\t * \n\t * Defines the mixed HTML display dialect name.\n\t */\n\tDIALECT_MIXEDHTML: 'mixedHtml',\n\n\t/**\n\t * Variable: DIALECT_PREFERHTML\n\t * \n\t * Defines the preferred HTML display dialect name.\n\t */\n\tDIALECT_PREFERHTML: 'preferHtml',\n\n\t/**\n\t * Variable: DIALECT_STRICTHTML\n\t * \n\t * Defines the strict HTML display dialect.\n\t */\n\tDIALECT_STRICTHTML: 'strictHtml',\n\n\t/**\n\t * Variable: NS_SVG\n\t * \n\t * Defines the SVG namespace.\n\t */\n\tNS_SVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * Variable: NS_XHTML\n\t * \n\t * Defines the XHTML namespace.\n\t */\n\tNS_XHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Variable: NS_XLINK\n\t * \n\t * Defines the XLink namespace.\n\t */\n\tNS_XLINK: 'http://www.w3.org/1999/xlink',\n\n\t/**\n\t * Variable: SHADOWCOLOR\n\t * \n\t * Defines the color to be used to draw shadows in shapes and windows.\n\t * Default is gray.\n\t */\n\tSHADOWCOLOR: 'gray',\n\n\t/**\n\t * Variable: VML_SHADOWCOLOR\n\t * \n\t * Used for shadow color in filters where transparency is not supported\n\t * (Microsoft Internet Explorer). Default is gray.\n\t */\n\tVML_SHADOWCOLOR: 'gray',\n\n\t/**\n\t * Variable: SHADOW_OFFSET_X\n\t * \n\t * Specifies the x-offset of the shadow. Default is 2.\n\t */\n\tSHADOW_OFFSET_X: 2,\n\n\t/**\n\t * Variable: SHADOW_OFFSET_Y\n\t * \n\t * Specifies the y-offset of the shadow. Default is 3.\n\t */\n\tSHADOW_OFFSET_Y: 3,\n\t\n\t/**\n\t * Variable: SHADOW_OPACITY\n\t * \n\t * Defines the opacity for shadows. Default is 1.\n\t */\n\tSHADOW_OPACITY: 1,\n \n\t/**\n\t * Variable: NODETYPE_ELEMENT\n\t * \n\t * DOM node of type ELEMENT.\n\t */\n\tNODETYPE_ELEMENT: 1,\n\n\t/**\n\t * Variable: NODETYPE_ATTRIBUTE\n\t * \n\t * DOM node of type ATTRIBUTE.\n\t */\n\tNODETYPE_ATTRIBUTE: 2,\n\n\t/**\n\t * Variable: NODETYPE_TEXT\n\t * \n\t * DOM node of type TEXT.\n\t */\n\tNODETYPE_TEXT: 3,\n\n\t/**\n\t * Variable: NODETYPE_CDATA\n\t * \n\t * DOM node of type CDATA.\n\t */\n\tNODETYPE_CDATA: 4,\n\t\n\t/**\n\t * Variable: NODETYPE_ENTITY_REFERENCE\n\t * \n\t * DOM node of type ENTITY_REFERENCE.\n\t */\n\tNODETYPE_ENTITY_REFERENCE: 5,\n\n\t/**\n\t * Variable: NODETYPE_ENTITY\n\t * \n\t * DOM node of type ENTITY.\n\t */\n\tNODETYPE_ENTITY: 6,\n\n\t/**\n\t * Variable: NODETYPE_PROCESSING_INSTRUCTION\n\t * \n\t * DOM node of type PROCESSING_INSTRUCTION.\n\t */\n\tNODETYPE_PROCESSING_INSTRUCTION: 7,\n\n\t/**\n\t * Variable: NODETYPE_COMMENT\n\t * \n\t * DOM node of type COMMENT.\n\t */\n\tNODETYPE_COMMENT: 8,\n\t\t\n\t/**\n\t * Variable: NODETYPE_DOCUMENT\n\t * \n\t * DOM node of type DOCUMENT.\n\t */\n\tNODETYPE_DOCUMENT: 9,\n\n\t/**\n\t * Variable: NODETYPE_DOCUMENTTYPE\n\t * \n\t * DOM node of type DOCUMENTTYPE.\n\t */\n\tNODETYPE_DOCUMENTTYPE: 10,\n\n\t/**\n\t * Variable: NODETYPE_DOCUMENT_FRAGMENT\n\t * \n\t * DOM node of type DOCUMENT_FRAGMENT.\n\t */\n\tNODETYPE_DOCUMENT_FRAGMENT: 11,\n\n\t/**\n\t * Variable: NODETYPE_NOTATION\n\t * \n\t * DOM node of type NOTATION.\n\t */\n\tNODETYPE_NOTATION: 12,\n\t\n\t/**\n\t * Variable: TOOLTIP_VERTICAL_OFFSET\n\t * \n\t * Defines the vertical offset for the tooltip.\n\t * Default is 16.\n\t */\n\tTOOLTIP_VERTICAL_OFFSET: 16,\n\n\t/**\n\t * Variable: DEFAULT_VALID_COLOR\n\t * \n\t * Specifies the default valid color. Default is #0000FF.\n\t */\n\tDEFAULT_VALID_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: DEFAULT_INVALID_COLOR\n\t * \n\t * Specifies the default invalid color. Default is #FF0000.\n\t */\n\tDEFAULT_INVALID_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: OUTLINE_HIGHLIGHT_COLOR\n\t * \n\t * Specifies the default highlight color for shape outlines.\n\t * Default is #0000FF. This is used in <mxEdgeHandler>.\n\t */\n\tOUTLINE_HIGHLIGHT_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: OUTLINE_HIGHLIGHT_COLOR\n\t * \n\t * Defines the strokewidth to be used for shape outlines.\n\t * Default is 5. This is used in <mxEdgeHandler>.\n\t */\n\tOUTLINE_HIGHLIGHT_STROKEWIDTH: 5,\n\n\t/**\n\t * Variable: HIGHLIGHT_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the highlights.\n\t * Default is 3.\n\t */\n\tHIGHLIGHT_STROKEWIDTH: 3,\n\n\t/**\n\t * Variable: CONSTRAINT_HIGHLIGHT_SIZE\n\t * \n\t * Size of the constraint highlight (in px). Default is 2.\n\t */\n\tHIGHLIGHT_SIZE: 2,\n\t\n\t/**\n\t * Variable: HIGHLIGHT_OPACITY\n\t * \n\t * Opacity (in %) used for the highlights (including outline).\n\t * Default is 100.\n\t */\n\tHIGHLIGHT_OPACITY: 100,\n\t\n\t/**\n\t * Variable: CURSOR_MOVABLE_VERTEX\n\t * \n\t * Defines the cursor for a movable vertex. Default is 'move'.\n\t */\n\tCURSOR_MOVABLE_VERTEX: 'move',\n\t\n\t/**\n\t * Variable: CURSOR_MOVABLE_EDGE\n\t * \n\t * Defines the cursor for a movable edge. Default is 'move'.\n\t */\n\tCURSOR_MOVABLE_EDGE: 'move',\n\t\n\t/**\n\t * Variable: CURSOR_LABEL_HANDLE\n\t * \n\t * Defines the cursor for a movable label. Default is 'default'.\n\t */\n\tCURSOR_LABEL_HANDLE: 'default',\n\t\n\t/**\n\t * Variable: CURSOR_TERMINAL_HANDLE\n\t * \n\t * Defines the cursor for a terminal handle. Default is 'pointer'.\n\t */\n\tCURSOR_TERMINAL_HANDLE: 'pointer',\n\t\n\t/**\n\t * Variable: CURSOR_BEND_HANDLE\n\t * \n\t * Defines the cursor for a movable bend. Default is 'crosshair'.\n\t */\n\tCURSOR_BEND_HANDLE: 'crosshair',\n\n\t/**\n\t * Variable: CURSOR_VIRTUAL_BEND_HANDLE\n\t * \n\t * Defines the cursor for a movable bend. Default is 'crosshair'.\n\t */\n\tCURSOR_VIRTUAL_BEND_HANDLE: 'crosshair',\n\t\n\t/**\n\t * Variable: CURSOR_CONNECT\n\t * \n\t * Defines the cursor for a connectable state. Default is 'pointer'.\n\t */\n\tCURSOR_CONNECT: 'pointer',\n\n\t/**\n\t * Variable: HIGHLIGHT_COLOR\n\t * \n\t * Defines the color to be used for the cell highlighting.\n\t * Use 'none' for no color. Default is #00FF00.\n\t */\n\tHIGHLIGHT_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: TARGET_HIGHLIGHT_COLOR\n\t * \n\t * Defines the color to be used for highlighting a target cell for a new\n\t * or changed connection. Note that this may be either a source or\n\t * target terminal in the graph. Use 'none' for no color.\n\t * Default is #0000FF.\n\t */\n\tCONNECT_TARGET_COLOR: '#0000FF',\n\n\t/**\n\t * Variable: INVALID_CONNECT_TARGET_COLOR\n\t * \n\t * Defines the color to be used for highlighting a invalid target cells\n\t * for a new or changed connections. Note that this may be either a source\n\t * or target terminal in the graph. Use 'none' for no color. Default is\n\t * #FF0000.\n\t */\n\tINVALID_CONNECT_TARGET_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: DROP_TARGET_COLOR\n\t * \n\t * Defines the color to be used for the highlighting target parent cells\n\t * (for drag and drop). Use 'none' for no color. Default is #0000FF.\n\t */\n\tDROP_TARGET_COLOR: '#0000FF',\n\n\t/**\n\t * Variable: VALID_COLOR\n\t * \n\t * Defines the color to be used for the coloring valid connection\n\t * previews. Use 'none' for no color. Default is #FF0000.\n\t */\n\tVALID_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: INVALID_COLOR\n\t * \n\t * Defines the color to be used for the coloring invalid connection\n\t * previews. Use 'none' for no color. Default is #FF0000.\n\t */\n\tINVALID_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: EDGE_SELECTION_COLOR\n\t * \n\t * Defines the color to be used for the selection border of edges. Use\n\t * 'none' for no color. Default is #00FF00.\n\t */\n\tEDGE_SELECTION_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: VERTEX_SELECTION_COLOR\n\t * \n\t * Defines the color to be used for the selection border of vertices. Use\n\t * 'none' for no color. Default is #00FF00.\n\t */\n\tVERTEX_SELECTION_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: VERTEX_SELECTION_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for vertex selections.\n\t * Default is 1.\n\t */\n\tVERTEX_SELECTION_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: EDGE_SELECTION_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for edge selections.\n\t * Default is 1.\n\t */\n\tEDGE_SELECTION_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: SELECTION_DASHED\n\t * \n\t * Defines the dashed state to be used for the vertex selection\n\t * border. Default is true.\n\t */\n\tVERTEX_SELECTION_DASHED: true,\n\n\t/**\n\t * Variable: SELECTION_DASHED\n\t * \n\t * Defines the dashed state to be used for the edge selection\n\t * border. Default is true.\n\t */\n\tEDGE_SELECTION_DASHED: true,\n\n\t/**\n\t * Variable: GUIDE_COLOR\n\t * \n\t * Defines the color to be used for the guidelines in mxGraphHandler.\n\t * Default is #FF0000.\n\t */\n\tGUIDE_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: GUIDE_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the guidelines in mxGraphHandler.\n\t * Default is 1.\n\t */\n\tGUIDE_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: OUTLINE_COLOR\n\t * \n\t * Defines the color to be used for the outline rectangle\n\t * border.  Use 'none' for no color. Default is #0099FF.\n\t */\n\tOUTLINE_COLOR: '#0099FF',\n\n\t/**\n\t * Variable: OUTLINE_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the outline rectangle\n\t * stroke width. Default is 3.\n\t */\n\tOUTLINE_STROKEWIDTH: (mxClient.IS_IE) ? 2 : 3,\n\n\t/**\n\t * Variable: HANDLE_SIZE\n\t * \n\t * Defines the default size for handles. Default is 6.\n\t */\n\tHANDLE_SIZE: 6,\n\n\t/**\n\t * Variable: LABEL_HANDLE_SIZE\n\t * \n\t * Defines the default size for label handles. Default is 4.\n\t */\n\tLABEL_HANDLE_SIZE: 4,\n\n\t/**\n\t * Variable: HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the handle fill color. Use 'none' for\n\t * no color. Default is #00FF00 (green).\n\t */\n\tHANDLE_FILLCOLOR: '#00FF00',\n\n\t/**\n\t * Variable: HANDLE_STROKECOLOR\n\t * \n\t * Defines the color to be used for the handle stroke color. Use 'none' for\n\t * no color. Default is black.\n\t */\n\tHANDLE_STROKECOLOR: 'black',\n\n\t/**\n\t * Variable: LABEL_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the label handle fill color. Use 'none'\n\t * for no color. Default is yellow.\n\t */\n\tLABEL_HANDLE_FILLCOLOR: 'yellow',\n\n\t/**\n\t * Variable: CONNECT_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the connect handle fill color. Use\n\t * 'none' for no color. Default is #0000FF (blue).\n\t */\n\tCONNECT_HANDLE_FILLCOLOR: '#0000FF',\n\n\t/**\n\t * Variable: LOCKED_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the locked handle fill color. Use\n\t * 'none' for no color. Default is #FF0000 (red).\n\t */\n\tLOCKED_HANDLE_FILLCOLOR: '#FF0000',\n\n\t/**\n\t * Variable: OUTLINE_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the outline sizer fill color. Use\n\t * 'none' for no color. Default is #00FFFF.\n\t */\n\tOUTLINE_HANDLE_FILLCOLOR: '#00FFFF',\n\n\t/**\n\t * Variable: OUTLINE_HANDLE_STROKECOLOR\n\t * \n\t * Defines the color to be used for the outline sizer stroke color. Use\n\t * 'none' for no color. Default is #0033FF.\n\t */\n\tOUTLINE_HANDLE_STROKECOLOR: '#0033FF',\n\n\t/**\n\t * Variable: DEFAULT_FONTFAMILY\n\t * \n\t * Defines the default family for all fonts. Default is Arial,Helvetica.\n\t */\n\tDEFAULT_FONTFAMILY: 'Arial,Helvetica',\n\n\t/**\n\t * Variable: DEFAULT_FONTSIZE\n\t * \n\t * Defines the default size (in px). Default is 11.\n\t */\n\tDEFAULT_FONTSIZE: 11,\n\n\t/**\n\t * Variable: DEFAULT_TEXT_DIRECTION\n\t * \n\t * Defines the default value for the <STYLE_TEXT_DIRECTION> if no value is\n\t * defined for it in the style. Default value is an empty string which means\n\t * the default system setting is used and no direction is set.\n\t */\n\tDEFAULT_TEXT_DIRECTION: '',\n\n\t/**\n\t * Variable: LINE_HEIGHT\n\t * \n\t * Defines the default line height for text labels. Default is 1.2.\n\t */\n\tLINE_HEIGHT: 1.2,\n\n\t/**\n\t * Variable: WORD_WRAP\n\t * \n\t * Defines the CSS value for the word-wrap property. Default is \"normal\".\n\t * Change this to \"break-word\" to allow long words to be able to be broken\n\t * and wrap onto the next line.\n\t */\n\tWORD_WRAP: 'normal',\n\n\t/**\n\t * Variable: ABSOLUTE_LINE_HEIGHT\n\t * \n\t * Specifies if absolute line heights should be used (px) in CSS. Default\n\t * is false. Set this to true for backwards compatibility.\n\t */\n\tABSOLUTE_LINE_HEIGHT: false,\n\n\t/**\n\t * Variable: DEFAULT_FONTSTYLE\n\t * \n\t * Defines the default style for all fonts. Default is 0. This can be set\n\t * to any combination of font styles as follows.\n\t * \n\t * (code)\n\t * mxConstants.DEFAULT_FONTSTYLE = mxConstants.FONT_BOLD | mxConstants.FONT_ITALIC;\n\t * (end)\n\t */\n\tDEFAULT_FONTSTYLE: 0,\n\n\t/**\n\t * Variable: DEFAULT_STARTSIZE\n\t * \n\t * Defines the default start size for swimlanes. Default is 40.\n\t */\n\tDEFAULT_STARTSIZE: 40,\n\n\t/**\n\t * Variable: DEFAULT_MARKERSIZE\n\t * \n\t * Defines the default size for all markers. Default is 6.\n\t */\n\tDEFAULT_MARKERSIZE: 6,\n\n\t/**\n\t * Variable: DEFAULT_IMAGESIZE\n\t * \n\t * Defines the default width and height for images used in the\n\t * label shape. Default is 24.\n\t */\n\tDEFAULT_IMAGESIZE: 24,\n\n\t/**\n\t * Variable: ENTITY_SEGMENT\n\t * \n\t * Defines the length of the horizontal segment of an Entity Relation.\n\t * This can be overridden using <mxConstants.STYLE_SEGMENT> style.\n\t * Default is 30.\n\t */\n\tENTITY_SEGMENT: 30,\n\n\t/**\n\t * Variable: RECTANGLE_ROUNDING_FACTOR\n\t * \n\t * Defines the rounding factor for rounded rectangles in percent between\n\t * 0 and 1. Values should be smaller than 0.5. Default is 0.15.\n\t */\n\tRECTANGLE_ROUNDING_FACTOR: 0.15,\n\n\t/**\n\t * Variable: LINE_ARCSIZE\n\t * \n\t * Defines the size of the arcs for rounded edges. Default is 20.\n\t */\n\tLINE_ARCSIZE: 20,\n\n\t/**\n\t * Variable: ARROW_SPACING\n\t * \n\t * Defines the spacing between the arrow shape and its terminals. Default is 0.\n\t */\n\tARROW_SPACING: 0,\n\n\t/**\n\t * Variable: ARROW_WIDTH\n\t * \n\t * Defines the width of the arrow shape. Default is 30.\n\t */\n\tARROW_WIDTH: 30,\n\n\t/**\n\t * Variable: ARROW_SIZE\n\t * \n\t * Defines the size of the arrowhead in the arrow shape. Default is 30.\n\t */\n\tARROW_SIZE: 30,\n\n\t/**\n\t * Variable: PAGE_FORMAT_A4_PORTRAIT\n\t * \n\t * Defines the rectangle for the A4 portrait page format. The dimensions\n\t * of this page format are 826x1169 pixels.\n\t */\n\tPAGE_FORMAT_A4_PORTRAIT: new mxRectangle(0, 0, 827, 1169),\n\n\t/**\n\t * Variable: PAGE_FORMAT_A4_PORTRAIT\n\t * \n\t * Defines the rectangle for the A4 portrait page format. The dimensions\n\t * of this page format are 826x1169 pixels.\n\t */\n\tPAGE_FORMAT_A4_LANDSCAPE: new mxRectangle(0, 0, 1169, 827),\n\n\t/**\n\t * Variable: PAGE_FORMAT_LETTER_PORTRAIT\n\t * \n\t * Defines the rectangle for the Letter portrait page format. The\n\t * dimensions of this page format are 850x1100 pixels.\n\t */\n\tPAGE_FORMAT_LETTER_PORTRAIT: new mxRectangle(0, 0, 850, 1100),\n\n\t/**\n\t * Variable: PAGE_FORMAT_LETTER_PORTRAIT\n\t * \n\t * Defines the rectangle for the Letter portrait page format. The dimensions\n\t * of this page format are 850x1100 pixels.\n\t */\n\tPAGE_FORMAT_LETTER_LANDSCAPE: new mxRectangle(0, 0, 1100, 850),\n\n\t/**\n\t * Variable: NONE\n\t * \n\t * Defines the value for none. Default is \"none\".\n\t */\n\tNONE: 'none',\n\n\t/**\n\t * Variable: STYLE_PERIMETER\n\t * \n\t * Defines the key for the perimeter style. This is a function that defines\n\t * the perimeter around a particular shape. Possible values are the\n\t * functions defined in <mxPerimeter>. Alternatively, the constants in this\n\t * class that start with \"PERIMETER_\" may be used to access\n\t * perimeter styles in <mxStyleRegistry>. Value is \"perimeter\".\n\t */\n\tSTYLE_PERIMETER: 'perimeter',\n\t\n\t/**\n\t * Variable: STYLE_SOURCE_PORT\n\t * \n\t * Defines the ID of the cell that should be used for computing the\n\t * perimeter point of the source for an edge. This allows for graphically\n\t * connecting to a cell while keeping the actual terminal of the edge.\n\t * Value is \"sourcePort\".\n\t */\n\tSTYLE_SOURCE_PORT: 'sourcePort',\n\t\n\t/**\n\t * Variable: STYLE_TARGET_PORT\n\t * \n\t * Defines the ID of the cell that should be used for computing the\n\t * perimeter point of the target for an edge. This allows for graphically\n\t * connecting to a cell while keeping the actual terminal of the edge.\n\t * Value is \"targetPort\".\n\t */\n\tSTYLE_TARGET_PORT: 'targetPort',\n\n\t/**\n\t * Variable: STYLE_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to cells in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, \n\t * DIRECTION_EAST\" and \"DIRECTION_WEST\". Value is\n\t * \"portConstraint\".\n\t */\n\tSTYLE_PORT_CONSTRAINT: 'portConstraint',\n\n\t/**\n\t * Variable: STYLE_PORT_CONSTRAINT_ROTATION\n\t * \n\t * Define whether port constraint directions are rotated with vertex\n\t * rotation. 0 (default) causes port constraints to remain absolute, \n\t * relative to the graph, 1 causes the constraints to rotate with\n\t * the vertex. Value is \"portConstraintRotation\".\n\t */\n\tSTYLE_PORT_CONSTRAINT_ROTATION: 'portConstraintRotation',\n\n\t/**\n\t * Variable: STYLE_SOURCE_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to sources in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST\"\n\t * and \"DIRECTION_WEST\". Value is \"sourcePortConstraint\".\n\t */\n\tSTYLE_SOURCE_PORT_CONSTRAINT: 'sourcePortConstraint',\n\n\t/**\n\t * Variable: STYLE_TARGET_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to targets in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST\"\n\t * and \"DIRECTION_WEST\". Value is \"targetPortConstraint\".\n\t */\n\tSTYLE_TARGET_PORT_CONSTRAINT: 'targetPortConstraint',\n\n\t/**\n\t * Variable: STYLE_OPACITY\n\t * \n\t * Defines the key for the opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"opacity\".\n\t */\n\tSTYLE_OPACITY: 'opacity',\n\n\t/**\n\t * Variable: STYLE_FILL_OPACITY\n\t * \n\t * Defines the key for the fill opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"fillOpacity\".\n\t */\n\tSTYLE_FILL_OPACITY: 'fillOpacity',\n\n\t/**\n\t * Variable: STYLE_STROKE_OPACITY\n\t * \n\t * Defines the key for the stroke opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"strokeOpacity\".\n\t */\n\tSTYLE_STROKE_OPACITY: 'strokeOpacity',\n\n\t/**\n\t * Variable: STYLE_TEXT_OPACITY\n\t * \n\t * Defines the key for the text opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"textOpacity\".\n\t */\n\tSTYLE_TEXT_OPACITY: 'textOpacity',\n\n\t/**\n\t * Variable: STYLE_TEXT_DIRECTION\n\t * \n\t * Defines the key for the text direction style. Possible values are\n\t * \"TEXT_DIRECTION_DEFAULT, TEXT_DIRECTION_AUTO, TEXT_DIRECTION_LTR\"\n\t * and \"TEXT_DIRECTION_RTL\". Value is \"textDirection\".\n\t * The default value for the style is defined in <DEFAULT_TEXT_DIRECTION>.\n\t * It is used is no value is defined for this key in a given style. This is\n\t * an experimental style that is currently ignored in the backends.\n\t */\n\tSTYLE_TEXT_DIRECTION: 'textDirection',\n\n\t/**\n\t * Variable: STYLE_OVERFLOW\n\t * \n\t * Defines the key for the overflow style. Possible values are 'visible',\n\t * 'hidden', 'fill' and 'width'. The default value is 'visible'. This value\n\t * specifies how overlapping vertex labels are handled. A value of\n\t * 'visible' will show the complete label. A value of 'hidden' will clip\n\t * the label so that it does not overlap the vertex bounds. A value of\n\t * 'fill' will use the vertex bounds and a value of 'width' will use the\n\t * the vertex width for the label. See <mxGraph.isLabelClipped>. Note that\n\t * the vertical alignment is ignored for overflow fill and for horizontal\n\t * alignment, left should be used to avoid pixel offsets in Internet Explorer\n\t * 11 and earlier or if foreignObjects are disabled. Value is \"overflow\".\n\t */\n\tSTYLE_OVERFLOW: 'overflow',\n\n\t/**\n\t * Variable: STYLE_ORTHOGONAL\n\t * \n\t * Defines if the connection points on either end of the edge should be\n\t * computed so that the edge is vertical or horizontal if possible and\n\t * if the point is not at a fixed location. Default is false. This is\n\t * used in <mxGraph.isOrthogonal>, which also returns true if the edgeStyle\n\t * of the edge is an elbow or entity. Value is \"orthogonal\".\n\t */\n\tSTYLE_ORTHOGONAL: 'orthogonal',\n\n\t/**\n\t * Variable: STYLE_EXIT_X\n\t * \n\t * Defines the key for the horizontal relative coordinate connection point\n\t * of an edge with its source terminal. Value is \"exitX\".\n\t */\n\tSTYLE_EXIT_X: 'exitX',\n\n\t/**\n\t * Variable: STYLE_EXIT_Y\n\t * \n\t * Defines the key for the vertical relative coordinate connection point\n\t * of an edge with its source terminal. Value is \"exitY\".\n\t */\n\tSTYLE_EXIT_Y: 'exitY',\n\n\t/**\n\t * Variable: STYLE_EXIT_PERIMETER\n\t * \n\t * Defines if the perimeter should be used to find the exact entry point\n\t * along the perimeter of the source. Possible values are 0 (false) and\n\t * 1 (true). Default is 1 (true). Value is \"exitPerimeter\".\n\t */\n\tSTYLE_EXIT_PERIMETER: 'exitPerimeter',\n\n\t/**\n\t * Variable: STYLE_ENTRY_X\n\t * \n\t * Defines the key for the horizontal relative coordinate connection point\n\t * of an edge with its target terminal. Value is \"entryX\".\n\t */\n\tSTYLE_ENTRY_X: 'entryX',\n\n\t/**\n\t * Variable: STYLE_ENTRY_Y\n\t * \n\t * Defines the key for the vertical relative coordinate connection point\n\t * of an edge with its target terminal. Value is \"entryY\".\n\t */\n\tSTYLE_ENTRY_Y: 'entryY',\n\n\t/**\n\t * Variable: STYLE_ENTRY_PERIMETER\n\t * \n\t * Defines if the perimeter should be used to find the exact entry point\n\t * along the perimeter of the target. Possible values are 0 (false) and\n\t * 1 (true). Default is 1 (true). Value is \"entryPerimeter\".\n\t */\n\tSTYLE_ENTRY_PERIMETER: 'entryPerimeter',\n\n\t/**\n\t * Variable: STYLE_WHITE_SPACE\n\t * \n\t * Defines the key for the white-space style. Possible values are 'nowrap'\n\t * and 'wrap'. The default value is 'nowrap'. This value specifies how\n\t * white-space inside a HTML vertex label should be handled. A value of\n\t * 'nowrap' means the text will never wrap to the next line until a\n\t * linefeed is encountered. A value of 'wrap' means text will wrap when\n\t * necessary. This style is only used for HTML labels.\n\t * See <mxGraph.isWrapping>. Value is \"whiteSpace\".\n\t */\n\tSTYLE_WHITE_SPACE: 'whiteSpace',\n\n\t/**\n\t * Variable: STYLE_ROTATION\n\t * \n\t * Defines the key for the rotation style. The type of the value is \n\t * numeric and the possible range is 0-360. Value is \"rotation\".\n\t */\n\tSTYLE_ROTATION: 'rotation',\n\n\t/**\n\t * Variable: STYLE_FILLCOLOR\n\t * \n\t * Defines the key for the fill color. Possible values are all HTML color\n\t * names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit' or 'indicated' to use the color code of a related cell or the\n\t * indicator shape. Value is \"fillColor\".\n\t */\n\tSTYLE_FILLCOLOR: 'fillColor',\n\n\t/**\n\t * Variable: STYLE_POINTER_EVENTS\n\t * \n\t * Specifies if pointer events should be fired on transparent backgrounds.\n\t * This style is currently only supported in <mxRectangleShape>. Default\n\t * is true. Value is \"pointerEvents\". This is typically set to\n\t * false in groups where the transparent part should allow any underlying\n\t * cells to be clickable.\n\t */\n\tSTYLE_POINTER_EVENTS: 'pointerEvents',\n\n\t/**\n\t * Variable: STYLE_SWIMLANE_FILLCOLOR\n\t * \n\t * Defines the key for the fill color of the swimlane background. Possible\n\t * values are all HTML color names or HEX codes. Default is no background.\n\t * Value is \"swimlaneFillColor\".\n\t */\n\tSTYLE_SWIMLANE_FILLCOLOR: 'swimlaneFillColor',\n\n\t/**\n\t * Variable: STYLE_MARGIN\n\t * \n\t * Defines the key for the margin between the ellipses in the double ellipse shape.\n\t * Possible values are all positive numbers. Value is \"margin\".\n\t */\n\tSTYLE_MARGIN: 'margin',\n\n\t/**\n\t * Variable: STYLE_GRADIENTCOLOR\n\t * \n\t * Defines the key for the gradient color. Possible values are all HTML color\n\t * names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit' or 'indicated' to use the color code of a related cell or the\n\t * indicator shape. This is ignored if no fill color is defined. Value is\n\t * \"gradientColor\".\n\t */\n\tSTYLE_GRADIENTCOLOR: 'gradientColor',\n\n\t/**\n\t * Variable: STYLE_GRADIENT_DIRECTION\n\t * \n\t * Defines the key for the gradient direction. Possible values are\n\t * <DIRECTION_EAST>, <DIRECTION_WEST>, <DIRECTION_NORTH> and\n\t * <DIRECTION_SOUTH>. Default is <DIRECTION_SOUTH>. Generally, and by\n\t * default in mxGraph, gradient painting is done from the value of\n\t * <STYLE_FILLCOLOR> to the value of <STYLE_GRADIENTCOLOR>. Taking the\n\t * example of <DIRECTION_NORTH>, this means <STYLE_FILLCOLOR> color at the \n\t * bottom of paint pattern and <STYLE_GRADIENTCOLOR> at top, with a\n\t * gradient in-between. Value is \"gradientDirection\".\n\t */\n\tSTYLE_GRADIENT_DIRECTION: 'gradientDirection',\n\n\t/**\n\t * Variable: STYLE_STROKECOLOR\n\t * \n\t * Defines the key for the strokeColor style. Possible values are all HTML\n\t * color names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit', 'indicated' to use the color code of a related cell or the\n\t * indicator shape or 'none' for no color. Value is \"strokeColor\".\n\t */\n\tSTYLE_STROKECOLOR: 'strokeColor',\n\n\t/**\n\t * Variable: STYLE_SEPARATORCOLOR\n\t * \n\t * Defines the key for the separatorColor style. Possible values are all\n\t * HTML color names or HEX codes. This style is only used for\n\t * <SHAPE_SWIMLANE> shapes. Value is \"separatorColor\".\n\t */\n\tSTYLE_SEPARATORCOLOR: 'separatorColor',\n\n\t/**\n\t * Variable: STYLE_STROKEWIDTH\n\t * \n\t * Defines the key for the strokeWidth style. The type of the value is \n\t * numeric and the possible range is any non-negative value larger or equal\n\t * to 1. The value defines the stroke width in pixels. Note: To hide a\n\t * stroke use strokeColor none. Value is \"strokeWidth\".\n\t */\n\tSTYLE_STROKEWIDTH: 'strokeWidth',\n\n\t/**\n\t * Variable: STYLE_ALIGN\n\t * \n\t * Defines the key for the align style. Possible values are <ALIGN_LEFT>,\n\t * <ALIGN_CENTER> and <ALIGN_RIGHT>. This value defines how the lines of\n\t * the label are horizontally aligned. <ALIGN_LEFT> mean label text lines\n\t * are aligned to left of the label bounds, <ALIGN_RIGHT> to the right of\n\t * the label bounds and <ALIGN_CENTER> means the center of the text lines\n\t * are aligned in the center of the label bounds. Note this value doesn't\n\t * affect the positioning of the overall label bounds relative to the\n\t * vertex, to move the label bounds horizontally, use\n\t * <STYLE_LABEL_POSITION>. Value is \"align\".\n\t */\n\tSTYLE_ALIGN: 'align',\n\n\t/**\n\t * Variable: STYLE_VERTICAL_ALIGN\n\t * \n\t * Defines the key for the verticalAlign style. Possible values are\n\t * <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>. This value defines how\n\t * the lines of the label are vertically aligned. <ALIGN_TOP> means the\n\t * topmost label text line is aligned against the top of the label bounds,\n\t * <ALIGN_BOTTOM> means the bottom-most label text line is aligned against\n\t * the bottom of the label bounds and <ALIGN_MIDDLE> means there is equal\n\t * spacing between the topmost text label line and the top of the label\n\t * bounds and the bottom-most text label line and the bottom of the label\n\t * bounds. Note this value doesn't affect the positioning of the overall\n\t * label bounds relative to the vertex, to move the label bounds\n\t * vertically, use <STYLE_VERTICAL_LABEL_POSITION>. Value is \"verticalAlign\".\n\t */\n\tSTYLE_VERTICAL_ALIGN: 'verticalAlign',\n\n\t/**\n\t * Variable: STYLE_LABEL_WIDTH\n\t * \n\t * Defines the key for the width of the label if the label position is not\n\t * center. Value is \"labelWidth\".\n\t */\n\tSTYLE_LABEL_WIDTH: 'labelWidth',\n\n\t/**\n\t * Variable: STYLE_LABEL_POSITION\n\t * \n\t * Defines the key for the horizontal label position of vertices. Possible\n\t * values are <ALIGN_LEFT>, <ALIGN_CENTER> and <ALIGN_RIGHT>. Default is\n\t * <ALIGN_CENTER>. The label align defines the position of the label\n\t * relative to the cell. <ALIGN_LEFT> means the entire label bounds is\n\t * placed completely just to the left of the vertex, <ALIGN_RIGHT> means\n\t * adjust to the right and <ALIGN_CENTER> means the label bounds are\n\t * vertically aligned with the bounds of the vertex. Note this value\n\t * doesn't affect the positioning of label within the label bounds, to move\n\t * the label horizontally within the label bounds, use <STYLE_ALIGN>.\n\t * Value is \"labelPosition\".\n\t */\n\tSTYLE_LABEL_POSITION: 'labelPosition',\n\n\t/**\n\t * Variable: STYLE_VERTICAL_LABEL_POSITION\n\t * \n\t * Defines the key for the vertical label position of vertices. Possible\n\t * values are <ALIGN_TOP>, <ALIGN_BOTTOM> and <ALIGN_MIDDLE>. Default is\n\t * <ALIGN_MIDDLE>. The label align defines the position of the label\n\t * relative to the cell. <ALIGN_TOP> means the entire label bounds is\n\t * placed completely just on the top of the vertex, <ALIGN_BOTTOM> means\n\t * adjust on the bottom and <ALIGN_MIDDLE> means the label bounds are\n\t * horizontally aligned with the bounds of the vertex. Note this value\n\t * doesn't affect the positioning of label within the label bounds, to move\n\t * the label vertically within the label bounds, use\n\t * <STYLE_VERTICAL_ALIGN>. Value is \"verticalLabelPosition\".\n\t */\n\tSTYLE_VERTICAL_LABEL_POSITION: 'verticalLabelPosition',\n\t\n\t/**\n\t * Variable: STYLE_IMAGE_ASPECT\n\t * \n\t * Defines the key for the image aspect style. Possible values are 0 (do\n\t * not preserve aspect) or 1 (keep aspect). This is only used in\n\t * <mxImageShape>. Default is 1. Value is \"imageAspect\".\n\t */\n\tSTYLE_IMAGE_ASPECT: 'imageAspect',\n\n\t/**\n\t * Variable: STYLE_IMAGE_ALIGN\n\t * \n\t * Defines the key for the align style. Possible values are <ALIGN_LEFT>,\n\t * <ALIGN_CENTER> and <ALIGN_RIGHT>. The value defines how any image in the\n\t * vertex label is aligned horizontally within the label bounds of a\n\t * <SHAPE_LABEL> shape. Value is \"imageAlign\".\n\t */\n\tSTYLE_IMAGE_ALIGN: 'imageAlign',\n\n\t/**\n\t * Variable: STYLE_IMAGE_VERTICAL_ALIGN\n\t * \n\t * Defines the key for the verticalAlign style. Possible values are\n\t * <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>. The value defines how\n\t * any image in the vertex label is aligned vertically within the label\n\t * bounds of a <SHAPE_LABEL> shape. Value is \"imageVerticalAlign\".\n\t */\n\tSTYLE_IMAGE_VERTICAL_ALIGN: 'imageVerticalAlign',\n\n\t/**\n\t * Variable: STYLE_GLASS\n\t * \n\t * Defines the key for the glass style. Possible values are 0 (disabled) and\n\t * 1(enabled). The default value is 0. This is used in <mxLabel>. Value is\n\t * \"glass\".\n\t */\n\tSTYLE_GLASS: 'glass',\n\n\t/**\n\t * Variable: STYLE_IMAGE\n\t * \n\t * Defines the key for the image style. Possible values are any image URL,\n\t * the type of the value is String. This is the path to the image that is\n\t * to be displayed within the label of a vertex. Data URLs should use the\n\t * following format: data:image/png,xyz where xyz is the base64 encoded\n\t * data (without the \"base64\"-prefix). Note that Data URLs are only\n\t * supported in modern browsers. Value is \"image\".\n\t */\n\tSTYLE_IMAGE: 'image',\n\n\t/**\n\t * Variable: STYLE_IMAGE_WIDTH\n\t * \n\t * Defines the key for the imageWidth style. The type of this value is\n\t * int, the value is the image width in pixels and must be greater than 0.\n\t * Value is \"imageWidth\".\n\t */\n\tSTYLE_IMAGE_WIDTH: 'imageWidth',\n\n\t/**\n\t * Variable: STYLE_IMAGE_HEIGHT\n\t * \n\t * Defines the key for the imageHeight style. The type of this value is\n\t * int, the value is the image height in pixels and must be greater than 0.\n\t * Value is \"imageHeight\".\n\t */\n\tSTYLE_IMAGE_HEIGHT: 'imageHeight',\n\n\t/**\n\t * Variable: STYLE_IMAGE_BACKGROUND\n\t * \n\t * Defines the key for the image background color. This style is only used\n\t * in <mxImageShape>. Possible values are all HTML color names or HEX\n\t * codes. Value is \"imageBackground\".\n\t */\n\tSTYLE_IMAGE_BACKGROUND: 'imageBackground',\n\n\t/**\n\t * Variable: STYLE_IMAGE_BORDER\n\t * \n\t * Defines the key for the image border color. This style is only used in\n\t * <mxImageShape>. Possible values are all HTML color names or HEX codes.\n\t * Value is \"imageBorder\".\n\t */\n\tSTYLE_IMAGE_BORDER: 'imageBorder',\n\n\t/**\n\t * Variable: STYLE_FLIPH\n\t * \n\t * Defines the key for the horizontal image flip. This style is only used\n\t * in <mxImageShape>. Possible values are 0 and 1. Default is 0. Value is\n\t * \"flipH\".\n\t */\n\tSTYLE_FLIPH: 'flipH',\n\n\t/**\n\t * Variable: STYLE_FLIPV\n\t * \n\t * Defines the key for the vertical flip. Possible values are 0 and 1.\n\t * Default is 0. Value is \"flipV\".\n\t */\n\tSTYLE_FLIPV: 'flipV',\n\n\t/**\n\t * Variable: STYLE_NOLABEL\n\t * \n\t * Defines the key for the noLabel style. If this is true then no label is\n\t * visible for a given cell. Possible values are true or false (1 or 0).\n\t * Default is false. Value is \"noLabel\".\n\t */\n\tSTYLE_NOLABEL: 'noLabel',\n\n\t/**\n\t * Variable: STYLE_NOEDGESTYLE\n\t * \n\t * Defines the key for the noEdgeStyle style. If this is true then no edge\n\t * style is applied for a given edge. Possible values are true or false\n\t * (1 or 0). Default is false. Value is \"noEdgeStyle\".\n\t */\n\tSTYLE_NOEDGESTYLE: 'noEdgeStyle',\n\n\t/**\n\t * Variable: STYLE_LABEL_BACKGROUNDCOLOR\n\t * \n\t * Defines the key for the label background color. Possible values are all\n\t * HTML color names or HEX codes. Value is \"labelBackgroundColor\".\n\t */\n\tSTYLE_LABEL_BACKGROUNDCOLOR: 'labelBackgroundColor',\n\n\t/**\n\t * Variable: STYLE_LABEL_BORDERCOLOR\n\t * \n\t * Defines the key for the label border color. Possible values are all\n\t * HTML color names or HEX codes. Value is \"labelBorderColor\".\n\t */\n\tSTYLE_LABEL_BORDERCOLOR: 'labelBorderColor',\n\n\t/**\n\t * Variable: STYLE_LABEL_PADDING\n\t * \n\t * Defines the key for the label padding, ie. the space between the label\n\t * border and the label. Value is \"labelPadding\".\n\t */\n\tSTYLE_LABEL_PADDING: 'labelPadding',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_SHAPE\n\t * \n\t * Defines the key for the indicator shape used within an <mxLabel>.\n\t * Possible values are all SHAPE_* constants or the names of any new\n\t * shapes. The indicatorShape has precedence over the indicatorImage.\n\t * Value is \"indicatorShape\".\n\t */\n\tSTYLE_INDICATOR_SHAPE: 'indicatorShape',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_IMAGE\n\t * \n\t * Defines the key for the indicator image used within an <mxLabel>.\n\t * Possible values are all image URLs. The indicatorShape has\n\t * precedence over the indicatorImage. Value is \"indicatorImage\".\n\t */\n\tSTYLE_INDICATOR_IMAGE: 'indicatorImage',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_COLOR\n\t * \n\t * Defines the key for the indicatorColor style. Possible values are all\n\t * HTML color names or HEX codes, as well as the special 'swimlane' keyword\n\t * to refer to the color of the parent swimlane if one exists. Value is\n\t * \"indicatorColor\".\n\t */\n\tSTYLE_INDICATOR_COLOR: 'indicatorColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_STROKECOLOR\n\t * \n\t * Defines the key for the indicator stroke color in <mxLabel>.\n\t * Possible values are all color codes. Value is \"indicatorStrokeColor\".\n\t */\n\tSTYLE_INDICATOR_STROKECOLOR: 'indicatorStrokeColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_GRADIENTCOLOR\n\t * \n\t * Defines the key for the indicatorGradientColor style. Possible values\n\t * are all HTML color names or HEX codes. This style is only supported in\n\t * <SHAPE_LABEL> shapes. Value is \"indicatorGradientColor\".\n\t */\n\tSTYLE_INDICATOR_GRADIENTCOLOR: 'indicatorGradientColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_SPACING\n\t * \n\t * The defines the key for the spacing between the label and the\n\t * indicator in <mxLabel>. Possible values are in pixels. Value is\n\t * \"indicatorSpacing\".\n\t */\n\tSTYLE_INDICATOR_SPACING: 'indicatorSpacing',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_WIDTH\n\t * \n\t * Defines the key for the indicator width. Possible values start at 0 (in\n\t * pixels). Value is \"indicatorWidth\".\n\t */\n\tSTYLE_INDICATOR_WIDTH: 'indicatorWidth',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_HEIGHT\n\t * \n\t * Defines the key for the indicator height. Possible values start at 0 (in\n\t * pixels). Value is \"indicatorHeight\".\n\t */\n\tSTYLE_INDICATOR_HEIGHT: 'indicatorHeight',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_DIRECTION\n\t * \n\t * Defines the key for the indicatorDirection style. The direction style is\n\t * used to specify the direction of certain shapes (eg. <mxTriangle>).\n\t * Possible values are <DIRECTION_EAST> (default), <DIRECTION_WEST>,\n\t * <DIRECTION_NORTH> and <DIRECTION_SOUTH>. Value is \"indicatorDirection\".\n\t */\n\tSTYLE_INDICATOR_DIRECTION: 'indicatorDirection',\n\n\t/**\n\t * Variable: STYLE_SHADOW\n\t * \n\t * Defines the key for the shadow style. The type of the value is Boolean.\n\t * Value is \"shadow\".\n\t */\n\tSTYLE_SHADOW: 'shadow',\n\t\n\t/**\n\t * Variable: STYLE_SEGMENT\n\t * \n\t * Defines the key for the segment style. The type of this value is float\n\t * and the value represents the size of the horizontal segment of the\n\t * entity relation style. Default is ENTITY_SEGMENT. Value is \"segment\".\n\t */\n\tSTYLE_SEGMENT: 'segment',\n\t\n\t/**\n\t * Variable: STYLE_ENDARROW\n\t *\n\t * Defines the key for the end arrow marker. Possible values are all\n\t * constants with an ARROW-prefix. This is only used in <mxConnector>.\n\t * Value is \"endArrow\".\n\t *\n\t * Example:\n\t * (code)\n\t * style[mxConstants.STYLE_ENDARROW] = mxConstants.ARROW_CLASSIC;\n\t * (end)\n\t */\n\tSTYLE_ENDARROW: 'endArrow',\n\n\t/**\n\t * Variable: STYLE_STARTARROW\n\t * \n\t * Defines the key for the start arrow marker. Possible values are all\n\t * constants with an ARROW-prefix. This is only used in <mxConnector>.\n\t * See <STYLE_ENDARROW>. Value is \"startArrow\".\n\t */\n\tSTYLE_STARTARROW: 'startArrow',\n\n\t/**\n\t * Variable: STYLE_ENDSIZE\n\t * \n\t * Defines the key for the endSize style. The type of this value is numeric\n\t * and the value represents the size of the end marker in pixels. Value is\n\t * \"endSize\".\n\t */\n\tSTYLE_ENDSIZE: 'endSize',\n\n\t/**\n\t * Variable: STYLE_STARTSIZE\n\t * \n\t * Defines the key for the startSize style. The type of this value is\n\t * numeric and the value represents the size of the start marker or the\n\t * size of the swimlane title region depending on the shape it is used for.\n\t * Value is \"startSize\".\n\t */\n\tSTYLE_STARTSIZE: 'startSize',\n\n\t/**\n\t * Variable: STYLE_SWIMLANE_LINE\n\t * \n\t * Defines the key for the swimlaneLine style. This style specifies whether\n\t * the line between the title regio of a swimlane should be visible. Use 0\n\t * for hidden or 1 (default) for visible. Value is \"swimlaneLine\".\n\t */\n\tSTYLE_SWIMLANE_LINE: 'swimlaneLine',\n\n\t/**\n\t * Variable: STYLE_ENDFILL\n\t * \n\t * Defines the key for the endFill style. Use 0 for no fill or 1 (default)\n\t * for fill. (This style is only exported via <mxImageExport>.) Value is\n\t * \"endFill\".\n\t */\n\tSTYLE_ENDFILL: 'endFill',\n\n\t/**\n\t * Variable: STYLE_STARTFILL\n\t * \n\t * Defines the key for the startFill style. Use 0 for no fill or 1 (default)\n\t * for fill. (This style is only exported via <mxImageExport>.) Value is\n\t * \"startFill\".\n\t */\n\tSTYLE_STARTFILL: 'startFill',\n\n\t/**\n\t * Variable: STYLE_DASHED\n\t * \n\t * Defines the key for the dashed style. Use 0 (default) for non-dashed or 1\n\t * for dashed. Value is \"dashed\".\n\t */\n\tSTYLE_DASHED: 'dashed',\n\n\t/**\n\t * Defines the key for the dashed pattern style in SVG and image exports.\n\t * The type of this value is a space separated list of numbers that specify\n\t * a custom-defined dash pattern. Dash styles are defined in terms of the\n\t * length of the dash (the drawn part of the stroke) and the length of the\n\t * space between the dashes. The lengths are relative to the line width: a\n\t * length of \"1\" is equal to the line width. VML ignores this style and\n\t * uses dashStyle instead as defined in the VML specification. This style\n\t * is only used in the <mxConnector> shape. Value is \"dashPattern\".\n\t */\n\tSTYLE_DASH_PATTERN: 'dashPattern',\n\n\t/**\n\t * Variable: STYLE_FIX_DASH\n\t * \n\t * Defines the key for the fixDash style. Use 0 (default) for dash patterns\n\t * that depend on the linewidth and 1 for dash patterns that ignore the\n\t * line width. Value is \"fixDash\".\n\t */\n\tSTYLE_FIX_DASH: 'fixDash',\n\n\t/**\n\t * Variable: STYLE_ROUNDED\n\t * \n\t * Defines the key for the rounded style. The type of this value is\n\t * Boolean. For edges this determines whether or not joins between edges\n\t * segments are smoothed to a rounded finish. For vertices that have the\n\t * rectangle shape, this determines whether or not the rectangle is\n\t * rounded. Use 0 (default) for non-rounded or 1 for rounded. Value is\n\t * \"rounded\".\n\t */\n\tSTYLE_ROUNDED: 'rounded',\n\n\t/**\n\t * Variable: STYLE_CURVED\n\t * \n\t * Defines the key for the curved style. The type of this value is\n\t * Boolean. It is only applicable for connector shapes. Use 0 (default)\n\t * for non-curved or 1 for curved. Value is \"curved\".\n\t */\n\tSTYLE_CURVED: 'curved',\n\n\t/**\n\t * Variable: STYLE_ARCSIZE\n\t * \n\t * Defines the rounding factor for a rounded rectangle in percent (without\n\t * the percent sign). Possible values are between 0 and 100. If this value\n\t * is not specified then RECTANGLE_ROUNDING_FACTOR * 100 is used. For\n\t * edges, this defines the absolute size of rounded corners in pixels. If\n\t * this values is not specified then LINE_ARCSIZE is used.\n\t * (This style is only exported via <mxImageExport>.) Value is \"arcSize\".\n\t */\n\tSTYLE_ARCSIZE: 'arcSize',\n\n\t/**\n\t * Variable: STYLE_ABSOLUTE_ARCSIZE\n\t * \n\t * Defines the key for the absolute arc size style. This specifies if\n\t * arcSize for rectangles is abolute or relative. Possible values are 1\n\t * and 0 (default). Value is \"absoluteArcSize\".\n\t */\n\tSTYLE_ABSOLUTE_ARCSIZE: 'absoluteArcSize',\n\n\t/**\n\t * Variable: STYLE_SOURCE_PERIMETER_SPACING\n\t * \n\t * Defines the key for the source perimeter spacing. The type of this value\n\t * is numeric. This is the distance between the source connection point of\n\t * an edge and the perimeter of the source vertex in pixels. This style\n\t * only applies to edges. Value is \"sourcePerimeterSpacing\".\n\t */\n\tSTYLE_SOURCE_PERIMETER_SPACING: 'sourcePerimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_TARGET_PERIMETER_SPACING\n\t * \n\t * Defines the key for the target perimeter spacing. The type of this value\n\t * is numeric. This is the distance between the target connection point of\n\t * an edge and the perimeter of the target vertex in pixels. This style\n\t * only applies to edges. Value is \"targetPerimeterSpacing\".\n\t */\n\tSTYLE_TARGET_PERIMETER_SPACING: 'targetPerimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_PERIMETER_SPACING\n\t * \n\t * Defines the key for the perimeter spacing. This is the distance between\n\t * the connection point and the perimeter in pixels. When used in a vertex\n\t * style, this applies to all incoming edges to floating ports (edges that\n\t * terminate on the perimeter of the vertex). When used in an edge style,\n\t * this spacing applies to the source and target separately, if they\n\t * terminate in floating ports (on the perimeter of the vertex). Value is\n\t * \"perimeterSpacing\".\n\t */\n\tSTYLE_PERIMETER_SPACING: 'perimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_SPACING\n\t * \n\t * Defines the key for the spacing. The value represents the spacing, in\n\t * pixels, added to each side of a label in a vertex (style applies to\n\t * vertices only). Value is \"spacing\".\n\t */\n\tSTYLE_SPACING: 'spacing',\n\n\t/**\n\t * Variable: STYLE_SPACING_TOP\n\t * \n\t * Defines the key for the spacingTop style. The value represents the\n\t * spacing, in pixels, added to the top side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingTop\".\n\t */\n\tSTYLE_SPACING_TOP: 'spacingTop',\n\n\t/**\n\t * Variable: STYLE_SPACING_LEFT\n\t * \n\t * Defines the key for the spacingLeft style. The value represents the\n\t * spacing, in pixels, added to the left side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingLeft\".\n\t */\n\tSTYLE_SPACING_LEFT: 'spacingLeft',\n\n\t/**\n\t * Variable: STYLE_SPACING_BOTTOM\n\t * \n\t * Defines the key for the spacingBottom style The value represents the\n\t * spacing, in pixels, added to the bottom side of a label in a vertex\n\t * (style applies to vertices only). Value is \"spacingBottom\".\n\t */\n\tSTYLE_SPACING_BOTTOM: 'spacingBottom',\n\n\t/**\n\t * Variable: STYLE_SPACING_RIGHT\n\t * \n\t * Defines the key for the spacingRight style The value represents the\n\t * spacing, in pixels, added to the right side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingRight\".\n\t */\n\tSTYLE_SPACING_RIGHT: 'spacingRight',\n\n\t/**\n\t * Variable: STYLE_HORIZONTAL\n\t * \n\t * Defines the key for the horizontal style. Possible values are\n\t * true or false. This value only applies to vertices. If the <STYLE_SHAPE>\n\t * is \"SHAPE_SWIMLANE\" a value of false indicates that the\n\t * swimlane should be drawn vertically, true indicates to draw it\n\t * horizontally. If the shape style does not indicate that this vertex is a\n\t * swimlane, this value affects only whether the label is drawn\n\t * horizontally or vertically. Value is \"horizontal\".\n\t */\n\tSTYLE_HORIZONTAL: 'horizontal',\n\n\t/**\n\t * Variable: STYLE_DIRECTION\n\t * \n\t * Defines the key for the direction style. The direction style is used\n\t * to specify the direction of certain shapes (eg. <mxTriangle>).\n\t * Possible values are <DIRECTION_EAST> (default), <DIRECTION_WEST>,\n\t * <DIRECTION_NORTH> and <DIRECTION_SOUTH>. Value is \"direction\".\n\t */\n\tSTYLE_DIRECTION: 'direction',\n\n\t/**\n\t * Variable: STYLE_ANCHOR_POINT_DIRECTION\n\t * \n\t * Defines the key for the anchorPointDirection style. The defines if the\n\t * direction style should be taken into account when computing the fixed\n\t * point location for connected edges. Default is 1 (yes). Set this to 0\n\t * to ignore the direction style for fixed connection points. Value is\n\t * \"anchorPointDirection\".\n\t */\n\tSTYLE_ANCHOR_POINT_DIRECTION: 'anchorPointDirection',\n\n\t/**\n\t * Variable: STYLE_ELBOW\n\t * \n\t * Defines the key for the elbow style. Possible values are\n\t * <ELBOW_HORIZONTAL> and <ELBOW_VERTICAL>. Default is <ELBOW_HORIZONTAL>.\n\t * This defines how the three segment orthogonal edge style leaves its\n\t * terminal vertices. The vertical style leaves the terminal vertices at\n\t * the top and bottom sides. Value is \"elbow\".\n\t */\n\tSTYLE_ELBOW: 'elbow',\n\n\t/**\n\t * Variable: STYLE_FONTCOLOR\n\t * \n\t * Defines the key for the fontColor style. Possible values are all HTML\n\t * color names or HEX codes. Value is \"fontColor\".\n\t */\n\tSTYLE_FONTCOLOR: 'fontColor',\n\n\t/**\n\t * Variable: STYLE_FONTFAMILY\n\t * \n\t * Defines the key for the fontFamily style. Possible values are names such\n\t * as Arial; Dialog; Verdana; Times New Roman. The value is of type String.\n\t * Value is fontFamily.\n\t */\n\tSTYLE_FONTFAMILY: 'fontFamily',\n\n\t/**\n\t * Variable: STYLE_FONTSIZE\n\t * \n\t * Defines the key for the fontSize style (in px). The type of the value\n\t * is int. Value is \"fontSize\".\n\t */\n\tSTYLE_FONTSIZE: 'fontSize',\n\n\t/**\n\t * Variable: STYLE_FONTSTYLE\n\t * \n\t * Defines the key for the fontStyle style. Values may be any logical AND\n\t * (sum) of <FONT_BOLD>, <FONT_ITALIC> and <FONT_UNDERLINE>.\n\t * The type of the value is int. Value is \"fontStyle\".\n\t */\n\tSTYLE_FONTSTYLE: 'fontStyle',\n\t\n\t/**\n\t * Variable: STYLE_ASPECT\n\t * \n\t * Defines the key for the aspect style. Possible values are empty or fixed.\n\t * If fixed is used then the aspect ratio of the cell will be maintained\n\t * when resizing. Default is empty. Value is \"aspect\".\n\t */\n\tSTYLE_ASPECT: 'aspect',\n\n\t/**\n\t * Variable: STYLE_AUTOSIZE\n\t * \n\t * Defines the key for the autosize style. This specifies if a cell should be\n\t * resized automatically if the value has changed. Possible values are 0 or 1.\n\t * Default is 0. See <mxGraph.isAutoSizeCell>. This is normally combined with\n\t * <STYLE_RESIZABLE> to disable manual sizing. Value is \"autosize\".\n\t */\n\tSTYLE_AUTOSIZE: 'autosize',\n\n\t/**\n\t * Variable: STYLE_FOLDABLE\n\t * \n\t * Defines the key for the foldable style. This specifies if a cell is foldable\n\t * using a folding icon. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellFoldable>. Value is \"foldable\".\n\t */\n\tSTYLE_FOLDABLE: 'foldable',\n\n\t/**\n\t * Variable: STYLE_EDITABLE\n\t * \n\t * Defines the key for the editable style. This specifies if the value of\n\t * a cell can be edited using the in-place editor. Possible values are 0 or\n\t * 1. Default is 1. See <mxGraph.isCellEditable>. Value is \"editable\".\n\t */\n\tSTYLE_EDITABLE: 'editable',\n\n\t/**\n\t * Variable: STYLE_BACKGROUND_OUTLINE\n\t * \n\t * Defines the key for the backgroundOutline style. This specifies if a\n\t * only the background of a cell should be painted when it is highlighted.\n\t * Possible values are 0 or 1. Default is 0. Value is \"backgroundOutline\".\n\t */\n\tSTYLE_BACKGROUND_OUTLINE: 'backgroundOutline',\n\n\t/**\n\t * Variable: STYLE_BENDABLE\n\t * \n\t * Defines the key for the bendable style. This specifies if the control\n\t * points of an edge can be moved. Possible values are 0 or 1. Default is\n\t * 1. See <mxGraph.isCellBendable>. Value is \"bendable\".\n\t */\n\tSTYLE_BENDABLE: 'bendable',\n\n\t/**\n\t * Variable: STYLE_MOVABLE\n\t * \n\t * Defines the key for the movable style. This specifies if a cell can\n\t * be moved. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellMovable>. Value is \"movable\".\n\t */\n\tSTYLE_MOVABLE: 'movable',\n\n\t/**\n\t * Variable: STYLE_RESIZABLE\n\t * \n\t * Defines the key for the resizable style. This specifies if a cell can\n\t * be resized. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellResizable>. Value is \"resizable\".\n\t */\n\tSTYLE_RESIZABLE: 'resizable',\n\n\t/**\n\t * Variable: STYLE_RESIZE_WIDTH\n\t * \n\t * Defines the key for the resizeWidth style. This specifies if a cell's\n\t * width is resized if the parent is resized. If this is 1 then the width\n\t * will be resized even if the cell's geometry is relative. If this is 0\n\t * then the cell's width will not be resized. Default is not defined. Value\n\t * is \"resizeWidth\".\n\t */\n\tSTYLE_RESIZE_WIDTH: 'resizeWidth',\n\n\t/**\n\t * Variable: STYLE_RESIZE_WIDTH\n\t * \n\t * Defines the key for the resizeHeight style. This specifies if a cell's\n\t * height if resize if the parent is resized. If this is 1 then the height\n\t * will be resized even if the cell's geometry is relative. If this is 0\n\t * then the cell's height will not be resized. Default is not defined. Value\n\t * is \"resizeHeight\".\n\t */\n\tSTYLE_RESIZE_HEIGHT: 'resizeHeight',\n\n\t/**\n\t * Variable: STYLE_ROTATABLE\n\t * \n\t * Defines the key for the rotatable style. This specifies if a cell can\n\t * be rotated. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellRotatable>. Value is \"rotatable\".\n\t */\n\tSTYLE_ROTATABLE: 'rotatable',\n\n\t/**\n\t * Variable: STYLE_CLONEABLE\n\t * \n\t * Defines the key for the cloneable style. This specifies if a cell can\n\t * be cloned. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellCloneable>. Value is \"cloneable\".\n\t */\n\tSTYLE_CLONEABLE: 'cloneable',\n\n\t/**\n\t * Variable: STYLE_DELETABLE\n\t * \n\t * Defines the key for the deletable style. This specifies if a cell can be\n\t * deleted. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellDeletable>. Value is \"deletable\".\n\t */\n\tSTYLE_DELETABLE: 'deletable',\n\n\t/**\n\t * Variable: STYLE_SHAPE\n\t * \n\t * Defines the key for the shape. Possible values are all constants with\n\t * a SHAPE-prefix or any newly defined shape names. Value is \"shape\".\n\t */\n\tSTYLE_SHAPE: 'shape',\n\n\t/**\n\t * Variable: STYLE_EDGE\n\t * \n\t * Defines the key for the edge style. Possible values are the functions\n\t * defined in <mxEdgeStyle>. Value is \"edgeStyle\".\n\t */\n\tSTYLE_EDGE: 'edgeStyle',\n\n\t/**\n\t * Variable: STYLE_JETTY_SIZE\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are all numeric values or \"auto\".\n\t * Value is \"jettySize\".\n\t */\n\tSTYLE_JETTY_SIZE: 'jettySize',\n\n\t/**\n\t * Variable: STYLE_SOURCE_JETTY_SIZE\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are numeric values or \"auto\". This has\n\t * precedence over <STYLE_JETTY_SIZE>. Value is \"sourceJettySize\".\n\t */\n\tSTYLE_SOURCE_JETTY_SIZE: 'sourceJettySize',\n\n\t/**\n\t * Variable: targetJettySize\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are numeric values or \"auto\". This has\n\t * precedence over <STYLE_JETTY_SIZE>. Value is \"targetJettySize\".\n\t */\n\tSTYLE_TARGET_JETTY_SIZE: 'targetJettySize',\n\n\t/**\n\t * Variable: STYLE_LOOP\n\t * \n\t * Defines the key for the loop style. Possible values are the functions\n\t * defined in <mxEdgeStyle>. Value is \"loopStyle\".\n\t */\n\tSTYLE_LOOP: 'loopStyle',\n\n\t/**\n\t * Variable: STYLE_ORTHOGONAL_LOOP\n\t * \n\t * Defines the key for the orthogonal loop style. Possible values are 0 and\n\t * 1. Default is 0. Value is \"orthogonalLoop\". Use this style to specify\n\t * if loops should be routed using an orthogonal router. Currently, this\n\t * uses <mxEdgeStyle.OrthConnector> but will be replaced with a dedicated\n\t * orthogonal loop router in later releases.\n\t */\n\tSTYLE_ORTHOGONAL_LOOP: 'orthogonalLoop',\n\n\t/**\n\t * Variable: STYLE_ROUTING_CENTER_X\n\t * \n\t * Defines the key for the horizontal routing center. Possible values are\n\t * between -0.5 and 0.5. This is the relative offset from the center used\n\t * for connecting edges. The type of this value is numeric. Value is\n\t * \"routingCenterX\".\n\t */\n\tSTYLE_ROUTING_CENTER_X: 'routingCenterX',\n\n\t/**\n\t * Variable: STYLE_ROUTING_CENTER_Y\n\t * \n\t * Defines the key for the vertical routing center. Possible values are\n\t * between -0.5 and 0.5. This is the relative offset from the center used\n\t * for connecting edges. The type of this value is numeric. Value is\n\t * \"routingCenterY\".\n\t */\n\tSTYLE_ROUTING_CENTER_Y: 'routingCenterY',\n\n\t/**\n\t * Variable: FONT_BOLD\n\t * \n\t * Constant for bold fonts. Default is 1.\n\t */\n\tFONT_BOLD: 1,\n\n\t/**\n\t * Variable: FONT_ITALIC\n\t * \n\t * Constant for italic fonts. Default is 2.\n\t */\n\tFONT_ITALIC: 2,\n\n\t/**\n\t * Variable: FONT_UNDERLINE\n\t * \n\t * Constant for underlined fonts. Default is 4.\n\t */\n\tFONT_UNDERLINE: 4,\n\n\t/**\n\t * Variable: SHAPE_RECTANGLE\n\t * \n\t * Name under which <mxRectangleShape> is registered in <mxCellRenderer>.\n\t * Default is rectangle.\n\t */\n\tSHAPE_RECTANGLE: 'rectangle',\n\n\t/**\n\t * Variable: SHAPE_ELLIPSE\n\t * \n\t * Name under which <mxEllipse> is registered in <mxCellRenderer>.\n\t * Default is ellipse.\n\t */\n\tSHAPE_ELLIPSE: 'ellipse',\n\n\t/**\n\t * Variable: SHAPE_DOUBLE_ELLIPSE\n\t * \n\t * Name under which <mxDoubleEllipse> is registered in <mxCellRenderer>.\n\t * Default is doubleEllipse.\n\t */\n\tSHAPE_DOUBLE_ELLIPSE: 'doubleEllipse',\n\n\t/**\n\t * Variable: SHAPE_RHOMBUS\n\t * \n\t * Name under which <mxRhombus> is registered in <mxCellRenderer>.\n\t * Default is rhombus.\n\t */\n\tSHAPE_RHOMBUS: 'rhombus',\n\n\t/**\n\t * Variable: SHAPE_LINE\n\t * \n\t * Name under which <mxLine> is registered in <mxCellRenderer>.\n\t * Default is line.\n\t */\n\tSHAPE_LINE: 'line',\n\n\t/**\n\t * Variable: SHAPE_IMAGE\n\t * \n\t * Name under which <mxImageShape> is registered in <mxCellRenderer>.\n\t * Default is image.\n\t */\n\tSHAPE_IMAGE: 'image',\n\t\n\t/**\n\t * Variable: SHAPE_ARROW\n\t * \n\t * Name under which <mxArrow> is registered in <mxCellRenderer>.\n\t * Default is arrow.\n\t */\n\tSHAPE_ARROW: 'arrow',\n\t\n\t/**\n\t * Variable: SHAPE_ARROW_CONNECTOR\n\t * \n\t * Name under which <mxArrowConnector> is registered in <mxCellRenderer>.\n\t * Default is arrowConnector.\n\t */\n\tSHAPE_ARROW_CONNECTOR: 'arrowConnector',\n\t\n\t/**\n\t * Variable: SHAPE_LABEL\n\t * \n\t * Name under which <mxLabel> is registered in <mxCellRenderer>.\n\t * Default is label.\n\t */\n\tSHAPE_LABEL: 'label',\n\t\n\t/**\n\t * Variable: SHAPE_CYLINDER\n\t * \n\t * Name under which <mxCylinder> is registered in <mxCellRenderer>.\n\t * Default is cylinder.\n\t */\n\tSHAPE_CYLINDER: 'cylinder',\n\t\n\t/**\n\t * Variable: SHAPE_SWIMLANE\n\t * \n\t * Name under which <mxSwimlane> is registered in <mxCellRenderer>.\n\t * Default is swimlane.\n\t */\n\tSHAPE_SWIMLANE: 'swimlane',\n\t\t\n\t/**\n\t * Variable: SHAPE_CONNECTOR\n\t * \n\t * Name under which <mxConnector> is registered in <mxCellRenderer>.\n\t * Default is connector.\n\t */\n\tSHAPE_CONNECTOR: 'connector',\n\n\t/**\n\t * Variable: SHAPE_ACTOR\n\t * \n\t * Name under which <mxActor> is registered in <mxCellRenderer>.\n\t * Default is actor.\n\t */\n\tSHAPE_ACTOR: 'actor',\n\t\t\n\t/**\n\t * Variable: SHAPE_CLOUD\n\t * \n\t * Name under which <mxCloud> is registered in <mxCellRenderer>.\n\t * Default is cloud.\n\t */\n\tSHAPE_CLOUD: 'cloud',\n\t\t\n\t/**\n\t * Variable: SHAPE_TRIANGLE\n\t * \n\t * Name under which <mxTriangle> is registered in <mxCellRenderer>.\n\t * Default is triangle.\n\t */\n\tSHAPE_TRIANGLE: 'triangle',\n\t\t\n\t/**\n\t * Variable: SHAPE_HEXAGON\n\t * \n\t * Name under which <mxHexagon> is registered in <mxCellRenderer>.\n\t * Default is hexagon.\n\t */\n\tSHAPE_HEXAGON: 'hexagon',\n\n\t/**\n\t * Variable: ARROW_CLASSIC\n\t * \n\t * Constant for classic arrow markers.\n\t */\n\tARROW_CLASSIC: 'classic',\n\n\t/**\n\t * Variable: ARROW_CLASSIC_THIN\n\t * \n\t * Constant for thin classic arrow markers.\n\t */\n\tARROW_CLASSIC_THIN: 'classicThin',\n\n\t/**\n\t * Variable: ARROW_BLOCK\n\t * \n\t * Constant for block arrow markers.\n\t */\n\tARROW_BLOCK: 'block',\n\n\t/**\n\t * Variable: ARROW_BLOCK_THIN\n\t * \n\t * Constant for thin block arrow markers.\n\t */\n\tARROW_BLOCK_THIN: 'blockThin',\n\n\t/**\n\t * Variable: ARROW_OPEN\n\t * \n\t * Constant for open arrow markers.\n\t */\n\tARROW_OPEN: 'open',\n\n\t/**\n\t * Variable: ARROW_OPEN_THIN\n\t * \n\t * Constant for thin open arrow markers.\n\t */\n\tARROW_OPEN_THIN: 'openThin',\n\n\t/**\n\t * Variable: ARROW_OVAL\n\t * \n\t * Constant for oval arrow markers.\n\t */\n\tARROW_OVAL: 'oval',\n\n\t/**\n\t * Variable: ARROW_DIAMOND\n\t * \n\t * Constant for diamond arrow markers.\n\t */\n\tARROW_DIAMOND: 'diamond',\n\n\t/**\n\t * Variable: ARROW_DIAMOND_THIN\n\t * \n\t * Constant for thin diamond arrow markers.\n\t */\n\tARROW_DIAMOND_THIN: 'diamondThin',\n\n\t/**\n\t * Variable: ALIGN_LEFT\n\t * \n\t * Constant for left horizontal alignment. Default is left.\n\t */\n\tALIGN_LEFT: 'left',\n\n\t/**\n\t * Variable: ALIGN_CENTER\n\t * \n\t * Constant for center horizontal alignment. Default is center.\n\t */\n\tALIGN_CENTER: 'center',\n\n\t/**\n\t * Variable: ALIGN_RIGHT\n\t * \n\t * Constant for right horizontal alignment. Default is right.\n\t */\n\tALIGN_RIGHT: 'right',\n\n\t/**\n\t * Variable: ALIGN_TOP\n\t * \n\t * Constant for top vertical alignment. Default is top.\n\t */\n\tALIGN_TOP: 'top',\n\n\t/**\n\t * Variable: ALIGN_MIDDLE\n\t * \n\t * Constant for middle vertical alignment. Default is middle.\n\t */\n\tALIGN_MIDDLE: 'middle',\n\n\t/**\n\t * Variable: ALIGN_BOTTOM\n\t * \n\t * Constant for bottom vertical alignment. Default is bottom.\n\t */\n\tALIGN_BOTTOM: 'bottom',\n\n\t/**\n\t * Variable: DIRECTION_NORTH\n\t * \n\t * Constant for direction north. Default is north.\n\t */\n\tDIRECTION_NORTH: 'north',\n\n\t/**\n\t * Variable: DIRECTION_SOUTH\n\t * \n\t * Constant for direction south. Default is south.\n\t */\n\tDIRECTION_SOUTH: 'south',\n\n\t/**\n\t * Variable: DIRECTION_EAST\n\t * \n\t * Constant for direction east. Default is east.\n\t */\n\tDIRECTION_EAST: 'east',\n\n\t/**\n\t * Variable: DIRECTION_WEST\n\t * \n\t * Constant for direction west. Default is west.\n\t */\n\tDIRECTION_WEST: 'west',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_DEFAULT\n\t * \n\t * Constant for text direction default. Default is an empty string. Use\n\t * this value to use the default text direction of the operating system. \n\t */\n\tTEXT_DIRECTION_DEFAULT: '',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_AUTO\n\t * \n\t * Constant for text direction automatic. Default is auto. Use this value\n\t * to find the direction for a given text with <mxText.getAutoDirection>. \n\t */\n\tTEXT_DIRECTION_AUTO: 'auto',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_LTR\n\t * \n\t * Constant for text direction left to right. Default is ltr. Use this\n\t * value for left to right text direction.\n\t */\n\tTEXT_DIRECTION_LTR: 'ltr',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_RTL\n\t * \n\t * Constant for text direction right to left. Default is rtl. Use this\n\t * value for right to left text direction.\n\t */\n\tTEXT_DIRECTION_RTL: 'rtl',\n\n\t/**\n\t * Variable: DIRECTION_MASK_NONE\n\t * \n\t * Constant for no direction.\n\t */\n\tDIRECTION_MASK_NONE: 0,\n\n\t/**\n\t * Variable: DIRECTION_MASK_WEST\n\t * \n\t * Bitwise mask for west direction.\n\t */\n\tDIRECTION_MASK_WEST: 1,\n\t\n\t/**\n\t * Variable: DIRECTION_MASK_NORTH\n\t * \n\t * Bitwise mask for north direction.\n\t */\n\tDIRECTION_MASK_NORTH: 2,\n\n\t/**\n\t * Variable: DIRECTION_MASK_SOUTH\n\t * \n\t * Bitwise mask for south direction.\n\t */\n\tDIRECTION_MASK_SOUTH: 4,\n\n\t/**\n\t * Variable: DIRECTION_MASK_EAST\n\t * \n\t * Bitwise mask for east direction.\n\t */\n\tDIRECTION_MASK_EAST: 8,\n\t\n\t/**\n\t * Variable: DIRECTION_MASK_ALL\n\t * \n\t * Bitwise mask for all directions.\n\t */\n\tDIRECTION_MASK_ALL: 15,\n\n\t/**\n\t * Variable: ELBOW_VERTICAL\n\t * \n\t * Constant for elbow vertical. Default is horizontal.\n\t */\n\tELBOW_VERTICAL: 'vertical',\n\n\t/**\n\t * Variable: ELBOW_HORIZONTAL\n\t * \n\t * Constant for elbow horizontal. Default is horizontal.\n\t */\n\tELBOW_HORIZONTAL: 'horizontal',\n\n\t/**\n\t * Variable: EDGESTYLE_ELBOW\n\t * \n\t * Name of the elbow edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ELBOW: 'elbowEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_ENTITY_RELATION\n\t * \n\t * Name of the entity relation edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ENTITY_RELATION: 'entityRelationEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_LOOP\n\t * \n\t * Name of the loop edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_LOOP: 'loopEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_SIDETOSIDE\n\t * \n\t * Name of the side to side edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_SIDETOSIDE: 'sideToSideEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_TOPTOBOTTOM\n\t * \n\t * Name of the top to bottom edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_TOPTOBOTTOM: 'topToBottomEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_ORTHOGONAL\n\t * \n\t * Name of the generic orthogonal edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ORTHOGONAL: 'orthogonalEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_SEGMENT\n\t * \n\t * Name of the generic segment edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_SEGMENT: 'segmentEdgeStyle',\n \n\t/**\n\t * Variable: PERIMETER_ELLIPSE\n\t * \n\t * Name of the ellipse perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_ELLIPSE: 'ellipsePerimeter',\n\n\t/**\n\t * Variable: PERIMETER_RECTANGLE\n\t *\n\t * Name of the rectangle perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_RECTANGLE: 'rectanglePerimeter',\n\n\t/**\n\t * Variable: PERIMETER_RHOMBUS\n\t * \n\t * Name of the rhombus perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_RHOMBUS: 'rhombusPerimeter',\n\n\t/**\n\t * Variable: PERIMETER_HEXAGON\n\t * \n\t * Name of the hexagon perimeter. Can be used as a string value \n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_HEXAGON: 'hexagonPerimeter',\n\n\t/**\n\t * Variable: PERIMETER_TRIANGLE\n\t * \n\t * Name of the triangle perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_TRIANGLE: 'trianglePerimeter'\n\n};\n\n__mxOutput.mxConstants = typeof mxConstants !== 'undefined' ? mxConstants : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEventObject\n * \n * The mxEventObject is a wrapper for all properties of a single event.\n * Additionally, it also offers functions to consume the event and check if it\n * was consumed as follows:\n * \n * (code)\n * evt.consume();\n * INV: evt.isConsumed() == true\n * (end)\n * \n * Constructor: mxEventObject\n *\n * Constructs a new event object with the specified name. An optional\n * sequence of key, value pairs can be appended to define properties.\n * \n * Example:\n *\n * (code)\n * new mxEventObject(\"eventName\", key1, val1, .., keyN, valN)\n * (end)\n */\nfunction mxEventObject(name)\n{\n\tthis.name = name;\n\tthis.properties = [];\n\t\n\tfor (var i = 1; i < arguments.length; i += 2)\n\t{\n\t\tif (arguments[i + 1] != null)\n\t\t{\n\t\t\tthis.properties[arguments[i]] = arguments[i + 1];\n\t\t}\n\t}\n};\n\n/**\n * Variable: name\n *\n * Holds the name.\n */\nmxEventObject.prototype.name = null;\n\n/**\n * Variable: properties\n *\n * Holds the properties as an associative array.\n */\nmxEventObject.prototype.properties = null;\n\n/**\n * Variable: consumed\n *\n * Holds the consumed state. Default is false.\n */\nmxEventObject.prototype.consumed = false;\n\n/**\n * Function: getName\n * \n * Returns <name>.\n */\nmxEventObject.prototype.getName = function()\n{\n\treturn this.name;\n};\n\n/**\n * Function: getProperties\n * \n * Returns <properties>.\n */\nmxEventObject.prototype.getProperties = function()\n{\n\treturn this.properties;\n};\n\n/**\n * Function: getProperty\n * \n * Returns the property for the given key.\n */\nmxEventObject.prototype.getProperty = function(key)\n{\n\treturn this.properties[key];\n};\n\n/**\n * Function: isConsumed\n *\n * Returns true if the event has been consumed.\n */\nmxEventObject.prototype.isConsumed = function()\n{\n\treturn this.consumed;\n};\n\n/**\n * Function: consume\n *\n * Consumes the event.\n */\nmxEventObject.prototype.consume = function()\n{\n\tthis.consumed = true;\n};\n\n__mxOutput.mxEventObject = typeof mxEventObject !== 'undefined' ? mxEventObject : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMouseEvent\n * \n * Base class for all mouse events in mxGraph. A listener for this event should\n * implement the following methods:\n * \n * (code)\n * graph.addMouseListener(\n * {\n *   mouseDown: function(sender, evt)\n *   {\n *     mxLog.debug('mouseDown');\n *   },\n *   mouseMove: function(sender, evt)\n *   {\n *     mxLog.debug('mouseMove');\n *   },\n *   mouseUp: function(sender, evt)\n *   {\n *     mxLog.debug('mouseUp');\n *   }\n * });\n * (end)\n * \n * Constructor: mxMouseEvent\n *\n * Constructs a new event object for the given arguments.\n * \n * Parameters:\n * \n * evt - Native mouse event.\n * state - Optional <mxCellState> under the mouse.\n * \n */\nfunction mxMouseEvent(evt, state)\n{\n\tthis.evt = evt;\n\tthis.state = state;\n\tthis.sourceState = state;\n};\n\n/**\n * Variable: consumed\n *\n * Holds the consumed state of this event.\n */\nmxMouseEvent.prototype.consumed = false;\n\n/**\n * Variable: evt\n *\n * Holds the inner event object.\n */\nmxMouseEvent.prototype.evt = null;\n\n/**\n * Variable: graphX\n *\n * Holds the x-coordinate of the event in the graph. This value is set in\n * <mxGraph.fireMouseEvent>.\n */\nmxMouseEvent.prototype.graphX = null;\n\n/**\n * Variable: graphY\n *\n * Holds the y-coordinate of the event in the graph. This value is set in\n * <mxGraph.fireMouseEvent>.\n */\nmxMouseEvent.prototype.graphY = null;\n\n/**\n * Variable: state\n *\n * Holds the optional <mxCellState> associated with this event.\n */\nmxMouseEvent.prototype.state = null;\n\n/**\n * Variable: sourceState\n * \n * Holds the <mxCellState> that was passed to the constructor. This can be\n * different from <state> depending on the result of <mxGraph.getEventState>.\n */\nmxMouseEvent.prototype.sourceState = null;\n\n/**\n * Function: getEvent\n * \n * Returns <evt>.\n */\nmxMouseEvent.prototype.getEvent = function()\n{\n\treturn this.evt;\n};\n\n/**\n * Function: getSource\n * \n * Returns the target DOM element using <mxEvent.getSource> for <evt>.\n */\nmxMouseEvent.prototype.getSource = function()\n{\n\treturn mxEvent.getSource(this.evt);\n};\n\n/**\n * Function: isSource\n * \n * Returns true if the given <mxShape> is the source of <evt>.\n */\nmxMouseEvent.prototype.isSource = function(shape)\n{\n\tif (shape != null)\n\t{\n\t\treturn mxUtils.isAncestorNode(shape.node, this.getSource());\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getX\n * \n * Returns <evt.clientX>.\n */\nmxMouseEvent.prototype.getX = function()\n{\n\treturn mxEvent.getClientX(this.getEvent());\n};\n\n/**\n * Function: getY\n * \n * Returns <evt.clientY>.\n */\nmxMouseEvent.prototype.getY = function()\n{\n\treturn mxEvent.getClientY(this.getEvent());\n};\n\n/**\n * Function: getGraphX\n * \n * Returns <graphX>.\n */\nmxMouseEvent.prototype.getGraphX = function()\n{\n\treturn this.graphX;\n};\n\n/**\n * Function: getGraphY\n * \n * Returns <graphY>.\n */\nmxMouseEvent.prototype.getGraphY = function()\n{\n\treturn this.graphY;\n};\n\n/**\n * Function: getState\n * \n * Returns <state>.\n */\nmxMouseEvent.prototype.getState = function()\n{\n\treturn this.state;\n};\n\n/**\n * Function: getCell\n * \n * Returns the <mxCell> in <state> is not null.\n */\nmxMouseEvent.prototype.getCell = function()\n{\n\tvar state = this.getState();\n\t\n\tif (state != null)\n\t{\n\t\treturn state.cell;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: isPopupTrigger\n *\n * Returns true if the event is a popup trigger.\n */\nmxMouseEvent.prototype.isPopupTrigger = function()\n{\n\treturn mxEvent.isPopupTrigger(this.getEvent());\n};\n\n/**\n * Function: isConsumed\n *\n * Returns <consumed>.\n */\nmxMouseEvent.prototype.isConsumed = function()\n{\n\treturn this.consumed;\n};\n\n/**\n * Function: consume\n *\n * Sets <consumed> to true and invokes preventDefault on the native event\n * if such a method is defined. This is used mainly to avoid the cursor from\n * being changed to a text cursor in Webkit. You can use the preventDefault\n * flag to disable this functionality.\n * \n * Parameters:\n * \n * preventDefault - Specifies if the native event should be canceled. Default\n * is true.\n */\nmxMouseEvent.prototype.consume = function(preventDefault)\n{\n\tpreventDefault = (preventDefault != null) ? preventDefault : true;\n\t\n\tif (preventDefault && this.evt.preventDefault)\n\t{\n\t\tthis.evt.preventDefault();\n\t}\n\n\t// Workaround for images being dragged in IE\n\t// Does not change returnValue in Opera\n\tif (mxClient.IS_IE)\n\t{\n\t\tthis.evt.returnValue = true;\n\t}\n\n\t// Sets local consumed state\n\tthis.consumed = true;\n};\n\n__mxOutput.mxMouseEvent = typeof mxMouseEvent !== 'undefined' ? mxMouseEvent : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEventSource\n *\n * Base class for objects that dispatch named events. To create a subclass that\n * inherits from mxEventSource, the following code is used.\n *\n * (code)\n * function MyClass() { };\n *\n * MyClass.prototype = new mxEventSource();\n * MyClass.prototype.constructor = MyClass;\n * (end)\n *\n * Known Subclasses:\n *\n * <mxGraphModel>, <mxGraph>, <mxGraphView>, <mxEditor>, <mxCellOverlay>,\n * <mxToolbar>, <mxWindow>\n * \n * Constructor: mxEventSource\n *\n * Constructs a new event source.\n */\nfunction mxEventSource(eventSource)\n{\n\tthis.setEventSource(eventSource);\n};\n\n/**\n * Variable: eventListeners\n *\n * Holds the event names and associated listeners in an array. The array\n * contains the event name followed by the respective listener for each\n * registered listener.\n */\nmxEventSource.prototype.eventListeners = null;\n\n/**\n * Variable: eventsEnabled\n *\n * Specifies if events can be fired. Default is true.\n */\nmxEventSource.prototype.eventsEnabled = true;\n\n/**\n * Variable: eventSource\n *\n * Optional source for events. Default is null.\n */\nmxEventSource.prototype.eventSource = null;\n\n/**\n * Function: isEventsEnabled\n * \n * Returns <eventsEnabled>.\n */\nmxEventSource.prototype.isEventsEnabled = function()\n{\n\treturn this.eventsEnabled;\n};\n\n/**\n * Function: setEventsEnabled\n * \n * Sets <eventsEnabled>.\n */\nmxEventSource.prototype.setEventsEnabled = function(value)\n{\n\tthis.eventsEnabled = value;\n};\n\n/**\n * Function: getEventSource\n * \n * Returns <eventSource>.\n */\nmxEventSource.prototype.getEventSource = function()\n{\n\treturn this.eventSource;\n};\n\n/**\n * Function: setEventSource\n * \n * Sets <eventSource>.\n */\nmxEventSource.prototype.setEventSource = function(value)\n{\n\tthis.eventSource = value;\n};\n\n/**\n * Function: addListener\n *\n * Binds the specified function to the given event name. If no event name\n * is given, then the listener is registered for all events.\n * \n * The parameters of the listener are the sender and an <mxEventObject>.\n */\nmxEventSource.prototype.addListener = function(name, funct)\n{\n\tif (this.eventListeners == null)\n\t{\n\t\tthis.eventListeners = [];\n\t}\n\t\n\tthis.eventListeners.push(name);\n\tthis.eventListeners.push(funct);\n};\n\n/**\n * Function: removeListener\n *\n * Removes all occurrences of the given listener from <eventListeners>.\n */\nmxEventSource.prototype.removeListener = function(funct)\n{\n\tif (this.eventListeners != null)\n\t{\n\t\tvar i = 0;\n\t\t\n\t\twhile (i < this.eventListeners.length)\n\t\t{\n\t\t\tif (this.eventListeners[i+1] == funct)\n\t\t\t{\n\t\t\t\tthis.eventListeners.splice(i, 2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: fireEvent\n *\n * Dispatches the given event to the listeners which are registered for\n * the event. The sender argument is optional. The current execution scope\n * (\"this\") is used for the listener invocation (see <mxUtils.bind>).\n *\n * Example:\n *\n * (code)\n * fireEvent(new mxEventObject(\"eventName\", key1, val1, .., keyN, valN))\n * (end)\n * \n * Parameters:\n *\n * evt - <mxEventObject> that represents the event.\n * sender - Optional sender to be passed to the listener. Default value is\n * the return value of <getEventSource>.\n */\nmxEventSource.prototype.fireEvent = function(evt, sender)\n{\n\tif (this.eventListeners != null && this.isEventsEnabled())\n\t{\n\t\tif (evt == null)\n\t\t{\n\t\t\tevt = new mxEventObject();\n\t\t}\n\t\t\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this.getEventSource();\n\t\t}\n\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this;\n\t\t}\n\n\t\tvar args = [sender, evt];\n\t\t\n\t\tfor (var i = 0; i < this.eventListeners.length; i += 2)\n\t\t{\n\t\t\tvar listen = this.eventListeners[i];\n\t\t\t\n\t\t\tif (listen == null || listen == evt.getName())\n\t\t\t{\n\t\t\t\tthis.eventListeners[i+1].apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n};\n\n__mxOutput.mxEventSource = typeof mxEventSource !== 'undefined' ? mxEventSource : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEvent =\n{\n\n\t/**\n\t * Class: mxEvent\n\t * \n\t * Cross-browser DOM event support. For internal event handling,\n\t * <mxEventSource> and the graph event dispatch loop in <mxGraph> are used.\n\t * \n\t * Memory Leaks:\n\t * \n\t * Use this class for adding and removing listeners to/from DOM nodes. The\n\t * <removeAllListeners> function is provided to remove all listeners that\n\t * have been added using <addListener>. The function should be invoked when\n\t * the last reference is removed in the JavaScript code, typically when the\n\t * referenced DOM node is removed from the DOM.\n\t *\n\t * Function: addListener\n\t * \n\t * Binds the function to the specified event on the given element. Use\n\t * <mxUtils.bind> in order to bind the \"this\" keyword inside the function\n\t * to a given execution scope.\n\t */\n\taddListener: function()\n\t{\n\t\tvar updateListenerList = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList == null)\n\t\t\t{\n\t\t\t\telement.mxListenerList = [];\n\t\t\t}\n\t\t\t\n\t\t\tvar entry = {name: eventName, f: funct};\n\t\t\telement.mxListenerList.push(entry);\n\t\t};\n\t\t\n\t\tif (window.addEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.addEventListener(eventName, funct, false);\n\t\t\t\tupdateListenerList(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.attachEvent('on' + eventName, funct);\n\t\t\t\tupdateListenerList(element, eventName, funct);\t\t\t\t\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeListener\n\t *\n\t * Removes the specified listener from the given element.\n\t */\n\tremoveListener: function()\n\t{\n\t\tvar updateListener = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList != null)\n\t\t\t{\n\t\t\t\tvar listenerCount = element.mxListenerList.length;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < listenerCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar entry = element.mxListenerList[i];\n\t\t\t\t\t\n\t\t\t\t\tif (entry.f == funct)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.mxListenerList.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (element.mxListenerList.length == 0)\n\t\t\t\t{\n\t\t\t\t\telement.mxListenerList = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tif (window.removeEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.removeEventListener(eventName, funct, false);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.detachEvent('on' + eventName, funct);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeAllListeners\n\t * \n\t * Removes all listeners from the given element.\n\t */\n\tremoveAllListeners: function(element)\n\t{\n\t\tvar list = element.mxListenerList;\n\n\t\tif (list != null)\n\t\t{\n\t\t\twhile (list.length > 0)\n\t\t\t{\n\t\t\t\tvar entry = list[0];\n\t\t\t\tmxEvent.removeListener(element, entry.name, entry.f);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: addGestureListeners\n\t * \n\t * Adds the given listeners for touch, mouse and/or pointer events. If\n\t * <mxClient.IS_POINTER> is true then pointer events will be registered,\n\t * else the respective mouse events will be registered. If <mxClient.IS_POINTER>\n\t * is false and <mxClient.IS_TOUCH> is true then the respective touch events\n\t * will be registered as well as the mouse events.\n\t */\n\taddGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: removeGestureListeners\n\t * \n\t * Removes the given listeners from mousedown, mousemove, mouseup and the\n\t * respective touch events if <mxClient.IS_TOUCH> is true.\n\t */\n\tremoveGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: redirectMouseEvents\n\t *\n\t * Redirects the mouse events from the given DOM node to the graph dispatch\n\t * loop using the event and given state as event arguments. State can\n\t * either be an instance of <mxCellState> or a function that returns an\n\t * <mxCellState>. The down, move, up and dblClick arguments are optional\n\t * functions that take the trigger event as arguments and replace the\n\t * default behaviour.\n\t */\n\tredirectMouseEvents: function(node, graph, state, down, move, up, dblClick)\n\t{\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\treturn (typeof(state) == 'function') ? state(evt) : state;\n\t\t};\n\t\t\n\t\tmxEvent.addGestureListeners(node, function (evt)\n\t\t{\n\t\t\tif (down != null)\n\t\t\t{\n\t\t\t\tdown(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (move != null)\n\t\t\t{\n\t\t\t\tmove(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (up != null)\n\t\t\t{\n\t\t\t\tup(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t});\n\n\t\tmxEvent.addListener(node, 'dblclick', function (evt)\n\t\t{\n\t\t\tif (dblClick != null)\n\t\t\t{\n\t\t\t\tdblClick(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tvar tmp = getState(evt);\n\t\t\t\tgraph.dblClick(evt, (tmp != null) ? tmp.cell : null);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Function: release\n\t * \n\t * Removes the known listeners from the given DOM node and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the listeners from.\n\t */\n\trelease: function(element)\n\t{\n\t\ttry\n\t\t{\n\t\t\tif (element != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeAllListeners(element);\n\t\t\t\t\n\t\t\t\tvar children = element.childNodes;\n\t\t\t\t\n\t\t\t\tif (children != null)\n\t\t\t\t{\n\t\t\t        var childCount = children.length;\n\t\t\t        \n\t\t\t        for (var i = 0; i < childCount; i += 1)\n\t\t\t        {\n\t\t\t        \tmxEvent.release(children[i]);\n\t\t\t        }\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignores errors as this is typically called in cleanup code\n\t\t}\n\t},\n\n\t/**\n\t * Function: addMouseWheelListener\n\t * \n\t * Installs the given function as a handler for mouse wheel events. The\n\t * function has two arguments: the mouse event and a boolean that specifies\n\t * if the wheel was moved up or down.\n\t * \n\t * This has been tested with IE 6 and 7, Firefox (all versions), Opera and\n\t * Safari. It does currently not work on Safari for Mac.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * mxEvent.addMouseWheelListener(function (evt, up)\n\t * {\n\t *   mxLog.show();\n\t *   mxLog.debug('mouseWheel: up='+up);\n\t * });\n\t *(end)\n\t * \n\t * Parameters:\n\t * \n\t * funct - Handler function that takes the event argument and a boolean up\n\t * argument for the mousewheel direction.\n\t */\n\taddMouseWheelListener: function(funct)\n\t{\n\t\tif (funct != null)\n\t\t{\n\t\t\tvar wheelHandler = function(evt)\n\t\t\t{\n\t\t\t\t// IE does not give an event object but the\n\t\t\t\t// global event object is the mousewheel event\n\t\t\t\t// at this point in time.\n\t\t\t\tif (evt == null)\n\t\t\t\t{\n\t\t\t\t\tevt = window.event;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar delta = 0;\n\t\t\t\t\n\t\t\t\tif (mxClient.IS_FF)\n\t\t\t\t{\n\t\t\t\t\tdelta = -evt.detail / 2;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelta = evt.wheelDelta / 120;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Handles the event using the given function\n\t\t\t\tif (delta != 0)\n\t\t\t\t{\n\t\t\t\t\tfunct(evt, delta > 0);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\t// Webkit has NS event API, but IE event name and details \n\t\t\tif (mxClient.IS_NS && document.documentMode == null)\n\t\t\t{\n\t\t\t\tvar eventName = (mxClient.IS_SF || \tmxClient.IS_GC) ? 'mousewheel' : 'DOMMouseScroll';\n\t\t\t\tmxEvent.addListener(window, eventName, wheelHandler);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.addListener(document, 'mousewheel', wheelHandler);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: disableContextMenu\n\t *\n\t * Disables the context menu for the given element.\n\t */\n\tdisableContextMenu: function(element)\n\t{\n\t\tmxEvent.addListener(element, 'contextmenu', function(evt)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t},\n\t\n\t/**\n\t * Function: getSource\n\t * \n\t * Returns the event's target or srcElement depending on the browser.\n\t */\n\tgetSource: function(evt)\n\t{\n\t\treturn (evt.srcElement != null) ? evt.srcElement : evt.target;\n\t},\n\n\t/**\n\t * Function: isConsumed\n\t * \n\t * Returns true if the event has been consumed using <consume>.\n\t */\n\tisConsumed: function(evt)\n\t{\n\t\treturn evt.isConsumed != null && evt.isConsumed;\n\t},\n\n\t/**\n\t * Function: isTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisTouchEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'touch' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_TOUCH) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 5 : evt.type.indexOf('touch') == 0);\n\t},\n\n\t/**\n\t * Function: isPenEvent\n\t * \n\t * Returns true if the event was generated using a pen (not a touch device or mouse).\n\t */\n\tisPenEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'pen' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_PEN) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 2 : evt.type.indexOf('pen') == 0);\n\t},\n\n\t/**\n\t * Function: isMultiTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisMultiTouchEvent: function(evt)\n\t{\n\t\treturn (evt.type != null && evt.type.indexOf('touch') == 0 && evt.touches != null && evt.touches.length > 1);\n\t},\n\n\t/**\n\t * Function: isMouseEvent\n\t * \n\t * Returns true if the event was generated using a mouse (not a pen or touch device).\n\t */\n\tisMouseEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'mouse' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_MOUSE) : ((evt.mozInputSource != null) ?\n\t\t\t\tevt.mozInputSource == 1 : evt.type.indexOf('mouse') == 0);\n\t},\n\t\n\t/**\n\t * Function: isLeftMouseButton\n\t * \n\t * Returns true if the left mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property. Note that this returns true in Firefox\n\t * for control+left-click on the Mac.\n\t */\n\tisLeftMouseButton: function(evt)\n\t{\n\t\t// Special case for mousemove and mousedown we check the buttons\n\t\t// if it exists because which is 0 even if no button is pressed\n\t\tif ('buttons' in evt && (evt.type == 'mousedown' || evt.type == 'mousemove'))\n\t\t{\n\t\t\treturn evt.buttons == 1;\n\t\t}\n\t\telse if ('which' in evt)\n\t\t{\n\t        return evt.which === 1;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 1;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isMiddleMouseButton\n\t * \n\t * Returns true if the middle mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property.\n\t */\n\tisMiddleMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 2;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 4;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isRightMouseButton\n\t * \n\t * Returns true if the right mouse button was pressed. Note that this\n\t * button might not be available on some systems. For handling a popup\n\t * trigger <isPopupTrigger> should be used.\n\t */\n\tisRightMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 3;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 2;\n\t    }\n\t},\n\n\t/**\n\t * Function: isPopupTrigger\n\t * \n\t * Returns true if the event is a popup trigger. This implementation\n\t * returns true if the right button or the left button and control was\n\t * pressed on a Mac.\n\t */\n\tisPopupTrigger: function(evt)\n\t{\n\t\treturn mxEvent.isRightMouseButton(evt) || (mxClient.IS_MAC && mxEvent.isControlDown(evt) &&\n\t\t\t!mxEvent.isShiftDown(evt) && !mxEvent.isMetaDown(evt) && !mxEvent.isAltDown(evt));\n\t},\n\n\t/**\n\t * Function: isShiftDown\n\t * \n\t * Returns true if the shift key is pressed for the given event.\n\t */\n\tisShiftDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.shiftKey : false;\n\t},\n\n\t/**\n\t * Function: isAltDown\n\t * \n\t * Returns true if the alt key is pressed for the given event.\n\t */\n\tisAltDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.altKey : false;\n\t},\n\n\t/**\n\t * Function: isControlDown\n\t * \n\t * Returns true if the control key is pressed for the given event.\n\t */\n\tisControlDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.ctrlKey : false;\n\t},\n\n\t/**\n\t * Function: isMetaDown\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tisMetaDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.metaKey : false;\n\t},\n\n\t/**\n\t * Function: getMainEvent\n\t * \n\t * Returns the touch or mouse event that contains the mouse coordinates.\n\t */\n\tgetMainEvent: function(e)\n\t{\n\t\tif ((e.type == 'touchstart' || e.type == 'touchmove') && e.touches != null && e.touches[0] != null)\n\t\t{\n\t\t\te = e.touches[0];\n\t\t}\n\t\telse if (e.type == 'touchend' && e.changedTouches != null && e.changedTouches[0] != null)\n\t\t{\n\t\t\te = e.changedTouches[0];\n\t\t}\n\t\t\n\t\treturn e;\n\t},\n\t\n\t/**\n\t * Function: getClientX\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientX: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientX;\n\t},\n\n\t/**\n\t * Function: getClientY\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientY: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientY;\n\t},\n\n\t/**\n\t * Function: consume\n\t * \n\t * Consumes the given event.\n\t * \n\t * Parameters:\n\t * \n\t * evt - Native event to be consumed.\n\t * preventDefault - Optional boolean to prevent the default for the event.\n\t * Default is true.\n\t * stopPropagation - Option boolean to stop event propagation. Default is\n\t * true.\n\t */\n\tconsume: function(evt, preventDefault, stopPropagation)\n\t{\n\t\tpreventDefault = (preventDefault != null) ? preventDefault : true;\n\t\tstopPropagation = (stopPropagation != null) ? stopPropagation : true;\n\t\t\n\t\tif (preventDefault)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tif (stopPropagation)\n\t\t\t\t{\n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\telse if (stopPropagation)\n\t\t\t{\n\t\t\t\tevt.cancelBubble = true;\n\t\t\t}\n\t\t}\n\n\t\t// Opera\n\t\tevt.isConsumed = true;\n\n\t\t// Other browsers\n\t\tif (!evt.preventDefault)\n\t\t{\n\t\t\tevt.returnValue = false;\n\t\t}\n\t},\n\t\n\t//\n\t// Special handles in mouse events\n\t//\n\t\n\t/**\n\t * Variable: LABEL_HANDLE\n\t * \n\t * Index for the label handle in an mxMouseEvent. This should be a negative\n\t * value that does not interfere with any possible handle indices. Default\n\t * is -1.\n\t */\n\tLABEL_HANDLE: -1,\n\t\n\t/**\n\t * Variable: ROTATION_HANDLE\n\t * \n\t * Index for the rotation handle in an mxMouseEvent. This should be a\n\t * negative value that does not interfere with any possible handle indices.\n\t * Default is -2.\n\t */\n\tROTATION_HANDLE: -2,\n\t\n\t/**\n\t * Variable: CUSTOM_HANDLE\n\t * \n\t * Start index for the custom handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * custom handle. Default is -100.\n\t */\n\tCUSTOM_HANDLE: -100,\n\t\n\t/**\n\t * Variable: VIRTUAL_HANDLE\n\t * \n\t * Start index for the virtual handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * virtual handle. Default is -100000. This assumes that there are no more\n\t * than VIRTUAL_HANDLE - CUSTOM_HANDLE custom handles.\n\t * \n\t */\n\tVIRTUAL_HANDLE: -100000,\n\t\n\t//\n\t// Event names\n\t//\n\t\n\t/**\n\t * Variable: MOUSE_DOWN\n\t *\n\t * Specifies the event name for mouseDown.\n\t */\n\tMOUSE_DOWN: 'mouseDown',\n\t\n\t/**\n\t * Variable: MOUSE_MOVE\n\t *\n\t * Specifies the event name for mouseMove. \n\t */\n\tMOUSE_MOVE: 'mouseMove',\n\t\n\t/**\n\t * Variable: MOUSE_UP\n\t *\n\t * Specifies the event name for mouseUp. \n\t */\n\tMOUSE_UP: 'mouseUp',\n\n\t/**\n\t * Variable: ACTIVATE\n\t *\n\t * Specifies the event name for activate.\n\t */\n\tACTIVATE: 'activate',\n\n\t/**\n\t * Variable: RESIZE_START\n\t *\n\t * Specifies the event name for resizeStart.\n\t */\n\tRESIZE_START: 'resizeStart',\n\n\t/**\n\t * Variable: RESIZE\n\t *\n\t * Specifies the event name for resize.\n\t */\n\tRESIZE: 'resize',\n\n\t/**\n\t * Variable: RESIZE_END\n\t *\n\t * Specifies the event name for resizeEnd.\n\t */\n\tRESIZE_END: 'resizeEnd',\n\n\t/**\n\t * Variable: MOVE_START\n\t *\n\t * Specifies the event name for moveStart.\n\t */\n\tMOVE_START: 'moveStart',\n\n\t/**\n\t * Variable: MOVE\n\t *\n\t * Specifies the event name for move.\n\t */\n\tMOVE: 'move',\n\n\t/**\n\t * Variable: MOVE_END\n\t *\n\t * Specifies the event name for moveEnd.\n\t */\n\tMOVE_END: 'moveEnd',\n\n\t/**\n\t * Variable: PAN_START\n\t *\n\t * Specifies the event name for panStart.\n\t */\n\tPAN_START: 'panStart',\n\n\t/**\n\t * Variable: PAN\n\t *\n\t * Specifies the event name for pan.\n\t */\n\tPAN: 'pan',\n\n\t/**\n\t * Variable: PAN_END\n\t *\n\t * Specifies the event name for panEnd.\n\t */\n\tPAN_END: 'panEnd',\n\n\t/**\n\t * Variable: MINIMIZE\n\t *\n\t * Specifies the event name for minimize.\n\t */\n\tMINIMIZE: 'minimize',\n\n\t/**\n\t * Variable: NORMALIZE\n\t *\n\t * Specifies the event name for normalize.\n\t */\n\tNORMALIZE: 'normalize',\n\n\t/**\n\t * Variable: MAXIMIZE\n\t *\n\t * Specifies the event name for maximize.\n\t */\n\tMAXIMIZE: 'maximize',\n\n\t/**\n\t * Variable: HIDE\n\t *\n\t * Specifies the event name for hide.\n\t */\n\tHIDE: 'hide',\n\n\t/**\n\t * Variable: SHOW\n\t *\n\t * Specifies the event name for show.\n\t */\n\tSHOW: 'show',\n\n\t/**\n\t * Variable: CLOSE\n\t *\n\t * Specifies the event name for close.\n\t */\n\tCLOSE: 'close',\n\n\t/**\n\t * Variable: DESTROY\n\t *\n\t * Specifies the event name for destroy.\n\t */\n\tDESTROY: 'destroy',\n\n\t/**\n\t * Variable: REFRESH\n\t *\n\t * Specifies the event name for refresh.\n\t */\n\tREFRESH: 'refresh',\n\n\t/**\n\t * Variable: SIZE\n\t *\n\t * Specifies the event name for size.\n\t */\n\tSIZE: 'size',\n\t\n\t/**\n\t * Variable: SELECT\n\t *\n\t * Specifies the event name for select.\n\t */\n\tSELECT: 'select',\n\n\t/**\n\t * Variable: FIRED\n\t *\n\t * Specifies the event name for fired.\n\t */\n\tFIRED: 'fired',\n\n\t/**\n\t * Variable: FIRE_MOUSE_EVENT\n\t *\n\t * Specifies the event name for fireMouseEvent.\n\t */\n\tFIRE_MOUSE_EVENT: 'fireMouseEvent',\n\n\t/**\n\t * Variable: GESTURE\n\t *\n\t * Specifies the event name for gesture.\n\t */\n\tGESTURE: 'gesture',\n\n\t/**\n\t * Variable: TAP_AND_HOLD\n\t *\n\t * Specifies the event name for tapAndHold.\n\t */\n\tTAP_AND_HOLD: 'tapAndHold',\n\n\t/**\n\t * Variable: GET\n\t *\n\t * Specifies the event name for get.\n\t */\n\tGET: 'get',\n\n\t/**\n\t * Variable: RECEIVE\n\t *\n\t * Specifies the event name for receive.\n\t */\n\tRECEIVE: 'receive',\n\n\t/**\n\t * Variable: CONNECT\n\t *\n\t * Specifies the event name for connect.\n\t */\n\tCONNECT: 'connect',\n\n\t/**\n\t * Variable: DISCONNECT\n\t *\n\t * Specifies the event name for disconnect.\n\t */\n\tDISCONNECT: 'disconnect',\n\n\t/**\n\t * Variable: SUSPEND\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tSUSPEND: 'suspend',\n\n\t/**\n\t * Variable: RESUME\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tRESUME: 'resume',\n\n\t/**\n\t * Variable: MARK\n\t *\n\t * Specifies the event name for mark.\n\t */\n\tMARK: 'mark',\n\n\t/**\n\t * Variable: ROOT\n\t *\n\t * Specifies the event name for root.\n\t */\n\tROOT: 'root',\n\n\t/**\n\t * Variable: POST\n\t *\n\t * Specifies the event name for post.\n\t */\n\tPOST: 'post',\n\n\t/**\n\t * Variable: OPEN\n\t *\n\t * Specifies the event name for open.\n\t */\n\tOPEN: 'open',\n\n\t/**\n\t * Variable: SAVE\n\t *\n\t * Specifies the event name for open.\n\t */\n\tSAVE: 'save',\n\n\t/**\n\t * Variable: BEFORE_ADD_VERTEX\n\t *\n\t * Specifies the event name for beforeAddVertex.\n\t */\n\tBEFORE_ADD_VERTEX: 'beforeAddVertex',\n\n\t/**\n\t * Variable: ADD_VERTEX\n\t *\n\t * Specifies the event name for addVertex.\n\t */\n\tADD_VERTEX: 'addVertex',\n\n\t/**\n\t * Variable: AFTER_ADD_VERTEX\n\t *\n\t * Specifies the event name for afterAddVertex.\n\t */\n\tAFTER_ADD_VERTEX: 'afterAddVertex',\n\n\t/**\n\t * Variable: DONE\n\t *\n\t * Specifies the event name for done.\n\t */\n\tDONE: 'done',\n\n\t/**\n\t * Variable: EXECUTE\n\t *\n\t * Specifies the event name for execute.\n\t */\n\tEXECUTE: 'execute',\n\n\t/**\n\t * Variable: EXECUTED\n\t *\n\t * Specifies the event name for executed.\n\t */\n\tEXECUTED: 'executed',\n\n\t/**\n\t * Variable: BEGIN_UPDATE\n\t *\n\t * Specifies the event name for beginUpdate.\n\t */\n\tBEGIN_UPDATE: 'beginUpdate',\n\n\t/**\n\t * Variable: START_EDIT\n\t *\n\t * Specifies the event name for startEdit.\n\t */\n\tSTART_EDIT: 'startEdit',\n\n\t/**\n\t * Variable: END_UPDATE\n\t *\n\t * Specifies the event name for endUpdate.\n\t */\n\tEND_UPDATE: 'endUpdate',\n\n\t/**\n\t * Variable: END_EDIT\n\t *\n\t * Specifies the event name for endEdit.\n\t */\n\tEND_EDIT: 'endEdit',\n\n\t/**\n\t * Variable: BEFORE_UNDO\n\t *\n\t * Specifies the event name for beforeUndo.\n\t */\n\tBEFORE_UNDO: 'beforeUndo',\n\n\t/**\n\t * Variable: UNDO\n\t *\n\t * Specifies the event name for undo.\n\t */\n\tUNDO: 'undo',\n\n\t/**\n\t * Variable: REDO\n\t *\n\t * Specifies the event name for redo.\n\t */\n\tREDO: 'redo',\n\n\t/**\n\t * Variable: CHANGE\n\t *\n\t * Specifies the event name for change.\n\t */\n\tCHANGE: 'change',\n\n\t/**\n\t * Variable: NOTIFY\n\t *\n\t * Specifies the event name for notify.\n\t */\n\tNOTIFY: 'notify',\n\n\t/**\n\t * Variable: LAYOUT_CELLS\n\t *\n\t * Specifies the event name for layoutCells.\n\t */\n\tLAYOUT_CELLS: 'layoutCells',\n\n\t/**\n\t * Variable: CLICK\n\t *\n\t * Specifies the event name for click.\n\t */\n\tCLICK: 'click',\n\n\t/**\n\t * Variable: SCALE\n\t *\n\t * Specifies the event name for scale.\n\t */\n\tSCALE: 'scale',\n\n\t/**\n\t * Variable: TRANSLATE\n\t *\n\t * Specifies the event name for translate.\n\t */\n\tTRANSLATE: 'translate',\n\n\t/**\n\t * Variable: SCALE_AND_TRANSLATE\n\t *\n\t * Specifies the event name for scaleAndTranslate.\n\t */\n\tSCALE_AND_TRANSLATE: 'scaleAndTranslate',\n\n\t/**\n\t * Variable: UP\n\t *\n\t * Specifies the event name for up.\n\t */\n\tUP: 'up',\n\n\t/**\n\t * Variable: DOWN\n\t *\n\t * Specifies the event name for down.\n\t */\n\tDOWN: 'down',\n\n\t/**\n\t * Variable: ADD\n\t *\n\t * Specifies the event name for add.\n\t */\n\tADD: 'add',\n\n\t/**\n\t * Variable: REMOVE\n\t *\n\t * Specifies the event name for remove.\n\t */\n\tREMOVE: 'remove',\n\t\n\t/**\n\t * Variable: CLEAR\n\t *\n\t * Specifies the event name for clear.\n\t */\n\tCLEAR: 'clear',\n\n\t/**\n\t * Variable: ADD_CELLS\n\t *\n\t * Specifies the event name for addCells.\n\t */\n\tADD_CELLS: 'addCells',\n\n\t/**\n\t * Variable: CELLS_ADDED\n\t *\n\t * Specifies the event name for cellsAdded.\n\t */\n\tCELLS_ADDED: 'cellsAdded',\n\n\t/**\n\t * Variable: MOVE_CELLS\n\t *\n\t * Specifies the event name for moveCells.\n\t */\n\tMOVE_CELLS: 'moveCells',\n\n\t/**\n\t * Variable: CELLS_MOVED\n\t *\n\t * Specifies the event name for cellsMoved.\n\t */\n\tCELLS_MOVED: 'cellsMoved',\n\n\t/**\n\t * Variable: RESIZE_CELLS\n\t *\n\t * Specifies the event name for resizeCells.\n\t */\n\tRESIZE_CELLS: 'resizeCells',\n\n\t/**\n\t * Variable: CELLS_RESIZED\n\t *\n\t * Specifies the event name for cellsResized.\n\t */\n\tCELLS_RESIZED: 'cellsResized',\n\n\t/**\n\t * Variable: TOGGLE_CELLS\n\t *\n\t * Specifies the event name for toggleCells.\n\t */\n\tTOGGLE_CELLS: 'toggleCells',\n\n\t/**\n\t * Variable: CELLS_TOGGLED\n\t *\n\t * Specifies the event name for cellsToggled.\n\t */\n\tCELLS_TOGGLED: 'cellsToggled',\n\n\t/**\n\t * Variable: ORDER_CELLS\n\t *\n\t * Specifies the event name for orderCells.\n\t */\n\tORDER_CELLS: 'orderCells',\n\n\t/**\n\t * Variable: CELLS_ORDERED\n\t *\n\t * Specifies the event name for cellsOrdered.\n\t */\n\tCELLS_ORDERED: 'cellsOrdered',\n\n\t/**\n\t * Variable: REMOVE_CELLS\n\t *\n\t * Specifies the event name for removeCells.\n\t */\n\tREMOVE_CELLS: 'removeCells',\n\n\t/**\n\t * Variable: CELLS_REMOVED\n\t *\n\t * Specifies the event name for cellsRemoved.\n\t */\n\tCELLS_REMOVED: 'cellsRemoved',\n\n\t/**\n\t * Variable: GROUP_CELLS\n\t *\n\t * Specifies the event name for groupCells.\n\t */\n\tGROUP_CELLS: 'groupCells',\n\n\t/**\n\t * Variable: UNGROUP_CELLS\n\t *\n\t * Specifies the event name for ungroupCells.\n\t */\n\tUNGROUP_CELLS: 'ungroupCells',\n\n\t/**\n\t * Variable: REMOVE_CELLS_FROM_PARENT\n\t *\n\t * Specifies the event name for removeCellsFromParent.\n\t */\n\tREMOVE_CELLS_FROM_PARENT: 'removeCellsFromParent',\n\n\t/**\n\t * Variable: FOLD_CELLS\n\t *\n\t * Specifies the event name for foldCells.\n\t */\n\tFOLD_CELLS: 'foldCells',\n\n\t/**\n\t * Variable: CELLS_FOLDED\n\t *\n\t * Specifies the event name for cellsFolded.\n\t */\n\tCELLS_FOLDED: 'cellsFolded',\n\n\t/**\n\t * Variable: ALIGN_CELLS\n\t *\n\t * Specifies the event name for alignCells.\n\t */\n\tALIGN_CELLS: 'alignCells',\n\n\t/**\n\t * Variable: LABEL_CHANGED\n\t *\n\t * Specifies the event name for labelChanged.\n\t */\n\tLABEL_CHANGED: 'labelChanged',\n\n\t/**\n\t * Variable: CONNECT_CELL\n\t *\n\t * Specifies the event name for connectCell.\n\t */\n\tCONNECT_CELL: 'connectCell',\n\n\t/**\n\t * Variable: CELL_CONNECTED\n\t *\n\t * Specifies the event name for cellConnected.\n\t */\n\tCELL_CONNECTED: 'cellConnected',\n\n\t/**\n\t * Variable: SPLIT_EDGE\n\t *\n\t * Specifies the event name for splitEdge.\n\t */\n\tSPLIT_EDGE: 'splitEdge',\n\n\t/**\n\t * Variable: FLIP_EDGE\n\t *\n\t * Specifies the event name for flipEdge.\n\t */\n\tFLIP_EDGE: 'flipEdge',\n\n\t/**\n\t * Variable: START_EDITING\n\t *\n\t * Specifies the event name for startEditing.\n\t */\n\tSTART_EDITING: 'startEditing',\n\n\t/**\n\t * Variable: EDITING_STARTED\n\t *\n\t * Specifies the event name for editingStarted.\n\t */\n\tEDITING_STARTED: 'editingStarted',\n\n\t/**\n\t * Variable: EDITING_STOPPED\n\t *\n\t * Specifies the event name for editingStopped.\n\t */\n\tEDITING_STOPPED: 'editingStopped',\n\n\t/**\n\t * Variable: ADD_OVERLAY\n\t *\n\t * Specifies the event name for addOverlay.\n\t */\n\tADD_OVERLAY: 'addOverlay',\n\n\t/**\n\t * Variable: REMOVE_OVERLAY\n\t *\n\t * Specifies the event name for removeOverlay.\n\t */\n\tREMOVE_OVERLAY: 'removeOverlay',\n\n\t/**\n\t * Variable: UPDATE_CELL_SIZE\n\t *\n\t * Specifies the event name for updateCellSize.\n\t */\n\tUPDATE_CELL_SIZE: 'updateCellSize',\n\n\t/**\n\t * Variable: ESCAPE\n\t *\n\t * Specifies the event name for escape.\n\t */\n\tESCAPE: 'escape',\n\n\t/**\n\t * Variable: DOUBLE_CLICK\n\t *\n\t * Specifies the event name for doubleClick.\n\t */\n\tDOUBLE_CLICK: 'doubleClick',\n\n\t/**\n\t * Variable: START\n\t *\n\t * Specifies the event name for start.\n\t */\n\tSTART: 'start',\n\n\t/**\n\t * Variable: RESET\n\t *\n\t * Specifies the event name for reset.\n\t */\n\tRESET: 'reset'\n\n};\n\n__mxOutput.mxEvent = typeof mxEvent !== 'undefined' ? mxEvent : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxXmlRequest\n * \n * XML HTTP request wrapper. See also: <mxUtils.get>, <mxUtils.post> and\n * <mxUtils.load>. This class provides a cross-browser abstraction for Ajax\n * requests.\n * \n * Encoding:\n * \n * For encoding parameter values, the built-in encodeURIComponent JavaScript\n * method must be used. For automatic encoding of post data in <mxEditor> the\n * <mxEditor.escapePostData> switch can be set to true (default). The encoding\n * will be carried out using the conte type of the page. That is, the page\n * containting the editor should contain a meta tag in the header, eg.\n * <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n * \n * Example:\n * \n * (code)\n * var onload = function(req)\n * {\n *   mxUtils.alert(req.getDocumentElement());\n * }\n * \n * var onerror = function(req)\n * {\n *   mxUtils.alert('Error');\n * }\n * new mxXmlRequest(url, 'key=value').send(onload, onerror);\n * (end)\n * \n * Sends an asynchronous POST request to the specified URL.\n * \n * Example:\n * \n * (code)\n * var req = new mxXmlRequest(url, 'key=value', 'POST', false);\n * req.send();\n * mxUtils.alert(req.getDocumentElement());\n * (end)\n * \n * Sends a synchronous POST request to the specified URL.\n * \n * Example:\n * \n * (code)\n * var encoder = new mxCodec();\n * var result = encoder.encode(graph.getModel());\n * var xml = encodeURIComponent(mxUtils.getXml(result));\n * new mxXmlRequest(url, 'xml='+xml).send();\n * (end)\n * \n * Sends an encoded graph model to the specified URL using xml as the\n * parameter name. The parameter can then be retrieved in C# as follows:\n * \n * (code)\n * string xml = HttpUtility.UrlDecode(context.Request.Params[\"xml\"]);\n * (end)\n * \n * Or in Java as follows:\n * \n * (code)\n * String xml = URLDecoder.decode(request.getParameter(\"xml\"), \"UTF-8\").replace(\"\\n\", \"&#xa;\");\n * (end)\n *\n * Note that the linefeeds should only be replaced if the XML is\n * processed in Java, for example when creating an image.\n * \n * Constructor: mxXmlRequest\n * \n * Constructs an XML HTTP request.\n * \n * Parameters:\n * \n * url - Target URL of the request.\n * params - Form encoded parameters to send with a POST request.\n * method - String that specifies the request method. Possible values are\n * POST and GET. Default is POST.\n * async - Boolean specifying if an asynchronous request should be used.\n * Default is true.\n * username - String specifying the username to be used for the request.\n * password - String specifying the password to be used for the request.\n */\nfunction mxXmlRequest(url, params, method, async, username, password)\n{\n\tthis.url = url;\n\tthis.params = params;\n\tthis.method = method || 'POST';\n\tthis.async = (async != null) ? async : true;\n\tthis.username = username;\n\tthis.password = password;\n};\n\n/**\n * Variable: url\n * \n * Holds the target URL of the request.\n */\nmxXmlRequest.prototype.url = null;\n\n/**\n * Variable: params\n * \n * Holds the form encoded data for the POST request.\n */\nmxXmlRequest.prototype.params = null;\n\n/**\n * Variable: method\n * \n * Specifies the request method. Possible values are POST and GET. Default\n * is POST.\n */\nmxXmlRequest.prototype.method = null;\n\n/**\n * Variable: async\n * \n * Boolean indicating if the request is asynchronous.\n */\nmxXmlRequest.prototype.async = null;\n\n/**\n * Variable: binary\n * \n * Boolean indicating if the request is binary. This option is ignored in IE.\n * In all other browsers the requested mime type is set to\n * text/plain; charset=x-user-defined. Default is false.\n */\nmxXmlRequest.prototype.binary = false;\n\n/**\n * Variable: withCredentials\n * \n * Specifies if withCredentials should be used in HTML5-compliant browsers. Default is\n * false.\n */\nmxXmlRequest.prototype.withCredentials = false;\n\n/**\n * Variable: username\n * \n * Specifies the username to be used for authentication.\n */\nmxXmlRequest.prototype.username = null;\n\n/**\n * Variable: password\n * \n * Specifies the password to be used for authentication.\n */\nmxXmlRequest.prototype.password = null;\n\n/**\n * Variable: request\n * \n * Holds the inner, browser-specific request object.\n */\nmxXmlRequest.prototype.request = null;\n\n/**\n * Variable: decodeSimulateValues\n * \n * Specifies if request values should be decoded as URIs before setting the\n * textarea value in <simulate>. Defaults to false for backwards compatibility,\n * to avoid another decode on the server this should be set to true.\n */\nmxXmlRequest.prototype.decodeSimulateValues = false;\n\n/**\n * Function: isBinary\n * \n * Returns <binary>.\n */\nmxXmlRequest.prototype.isBinary = function()\n{\n\treturn this.binary;\n};\n\n/**\n * Function: setBinary\n * \n * Sets <binary>.\n */\nmxXmlRequest.prototype.setBinary = function(value)\n{\n\tthis.binary = value;\n};\n\n/**\n * Function: getText\n * \n * Returns the response as a string.\n */\nmxXmlRequest.prototype.getText = function()\n{\n\treturn this.request.responseText;\n};\n\n/**\n * Function: isReady\n * \n * Returns true if the response is ready.\n */\nmxXmlRequest.prototype.isReady = function()\n{\n\treturn this.request.readyState == 4;\n};\n\n/**\n * Function: getDocumentElement\n * \n * Returns the document element of the response XML document.\n */\nmxXmlRequest.prototype.getDocumentElement = function()\n{\n\tvar doc = this.getXml();\n\t\n\tif (doc != null)\n\t{\n\t\treturn doc.documentElement;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getXml\n * \n * Returns the response as an XML document. Use <getDocumentElement> to get\n * the document element of the XML document.\n */\nmxXmlRequest.prototype.getXml = function()\n{\n\tvar xml = this.request.responseXML;\n\t\n\t// Handles missing response headers in IE, the first condition handles\n\t// the case where responseXML is there, but using its nodes leads to\n\t// type errors in the mxCellCodec when putting the nodes into a new\n\t// document. This happens in IE9 standards mode and with XML user\n\t// objects only, as they are used directly as values in cells.\n\tif (document.documentMode >= 9 || xml == null || xml.documentElement == null)\n\t{\n\t\txml = mxUtils.parseXml(this.request.responseText);\n\t}\n\t\n\treturn xml;\n};\n\n/**\n * Function: getText\n * \n * Returns the response as a string.\n */\nmxXmlRequest.prototype.getText = function()\n{\n\treturn this.request.responseText;\n};\n\n/**\n * Function: getStatus\n * \n * Returns the status as a number, eg. 404 for \"Not found\" or 200 for \"OK\".\n * Note: The NS_ERROR_NOT_AVAILABLE for invalid responses cannot be cought.\n */\nmxXmlRequest.prototype.getStatus = function()\n{\n\treturn this.request.status;\n};\n\n/**\n * Function: create\n * \n * Creates and returns the inner <request> object.\n */\nmxXmlRequest.prototype.create = function()\n{\n\tif (window.XMLHttpRequest)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\tvar req = new XMLHttpRequest();\n\t\t\t\n\t\t\t// TODO: Check for overrideMimeType required here?\n\t\t\tif (this.isBinary() && req.overrideMimeType)\n\t\t\t{\n\t\t\t\treq.overrideMimeType('text/plain; charset=x-user-defined');\n\t\t\t}\n\n\t\t\treturn req;\n\t\t};\n\t}\n\telse if (typeof(ActiveXObject) != 'undefined')\n\t{\n\t\treturn function()\n\t\t{\n\t\t\t// TODO: Implement binary option\n\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\n\t\t};\n\t}\n}();\n\n/**\n * Function: send\n * \n * Send the <request> to the target URL using the specified functions to\n * process the response asychronously.\n * \n * Note: Due to technical limitations, onerror is currently ignored.\n * \n * Parameters:\n * \n * onload - Function to be invoked if a successful response was received.\n * onerror - Function to be called on any error.\n * timeout - Optional timeout in ms before calling ontimeout.\n * ontimeout - Optional function to execute on timeout.\n */\nmxXmlRequest.prototype.send = function(onload, onerror, timeout, ontimeout)\n{\n\tthis.request = this.create();\n\t\n\tif (this.request != null)\n\t{\n\t\tif (onload != null)\n\t\t{\n\t\t\tthis.request.onreadystatechange = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tif (this.isReady())\n\t\t\t\t{\n\t\t\t\t\tonload(this);\n\t\t\t\t\tthis.request.onreadystatechaange = null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.request.open(this.method, this.url, this.async,\n\t\t\tthis.username, this.password);\n\t\tthis.setRequestHeaders(this.request, this.params);\n\t\t\n\t\tif (window.XMLHttpRequest && this.withCredentials)\n\t\t{\n\t\t\tthis.request.withCredentials = 'true';\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_QUIRKS && (document.documentMode == null || document.documentMode > 9) &&\n\t\t\twindow.XMLHttpRequest && timeout != null && ontimeout != null)\n\t\t{\n\t\t\tthis.request.timeout = timeout;\n\t\t\tthis.request.ontimeout = ontimeout;\n\t\t}\n\t\t\t\t\n\t\tthis.request.send(this.params);\n\t}\n};\n\n/**\n * Function: setRequestHeaders\n * \n * Sets the headers for the given request and parameters. This sets the\n * content-type to application/x-www-form-urlencoded if any params exist.\n * \n * Example:\n * \n * (code)\n * request.setRequestHeaders = function(request, params)\n * {\n *   if (params != null)\n *   {\n *     request.setRequestHeader('Content-Type',\n *             'multipart/form-data');\n *     request.setRequestHeader('Content-Length',\n *             params.length);\n *   }\n * };\n * (end)\n * \n * Use the code above before calling <send> if you require a\n * multipart/form-data request.   \n */\nmxXmlRequest.prototype.setRequestHeaders = function(request, params)\n{\n\tif (params != null)\n\t{\n\t\trequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t}\n};\n\n/**\n * Function: simulate\n * \n * Creates and posts a request to the given target URL using a dynamically\n * created form inside the given document.\n * \n * Parameters:\n * \n * docs - Document that contains the form element.\n * target - Target to send the form result to.\n */\nmxXmlRequest.prototype.simulate = function(doc, target)\n{\n\tdoc = doc || document;\n\tvar old = null;\n\n\tif (doc == document)\n\t{\n\t\told = window.onbeforeunload;\t\t\n\t\twindow.onbeforeunload = null;\n\t}\n\t\t\t\n\tvar form = doc.createElement('form');\n\tform.setAttribute('method', this.method);\n\tform.setAttribute('action', this.url);\n\n\tif (target != null)\n\t{\n\t\tform.setAttribute('target', target);\n\t}\n\n\tform.style.display = 'none';\n\tform.style.visibility = 'hidden';\n\t\n\tvar pars = (this.params.indexOf('&') > 0) ?\n\t\tthis.params.split('&') :\n\t\tthis.params.split();\n\n\t// Adds the parameters as textareas to the form\n\tfor (var i=0; i<pars.length; i++)\n\t{\n\t\tvar pos = pars[i].indexOf('=');\n\t\t\n\t\tif (pos > 0)\n\t\t{\n\t\t\tvar name = pars[i].substring(0, pos);\n\t\t\tvar value = pars[i].substring(pos+1);\n\t\t\t\n\t\t\tif (this.decodeSimulateValues)\n\t\t\t{\n\t\t\t\tvalue = decodeURIComponent(value);\n\t\t\t}\n\t\t\t\n\t\t\tvar textarea = doc.createElement('textarea');\n\t\t\ttextarea.setAttribute('wrap', 'off');\n\t\t\ttextarea.setAttribute('name', name);\n\t\t\tmxUtils.write(textarea, value);\n\t\t\tform.appendChild(textarea);\n\t\t}\n\t}\n\t\n\tdoc.body.appendChild(form);\n\tform.submit();\n\t\n\tif (form.parentNode != null)\n\t{\n\t\tform.parentNode.removeChild(form);\n\t}\n\n\tif (old != null)\n\t{\t\t\n\t\twindow.onbeforeunload = old;\n\t}\n};\n\n__mxOutput.mxXmlRequest = typeof mxXmlRequest !== 'undefined' ? mxXmlRequest : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxClipboard =\n{\n\t/**\n\t * Class: mxClipboard\n\t * \n\t * Singleton that implements a clipboard for graph cells.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxClipboard.copy(graph);\n\t * mxClipboard.paste(graph2);\n\t * (end)\n\t *\n\t * This copies the selection cells from the graph to the clipboard and\n\t * pastes them into graph2.\n\t * \n\t * For fine-grained control of the clipboard data the <mxGraph.canExportCell>\n\t * and <mxGraph.canImportCell> functions can be overridden.\n\t * \n\t * To restore previous parents for pasted cells, the implementation for\n\t * <copy> and <paste> can be changed as follows.\n\t * \n\t * (code)\n\t * mxClipboard.copy = function(graph, cells)\n\t * {\n\t *   cells = cells || graph.getSelectionCells();\n\t *   var result = graph.getExportableCells(cells);\n\t *   \n\t *   mxClipboard.parents = new Object();\n\t *   \n\t *   for (var i = 0; i < result.length; i++)\n\t *   {\n\t *     mxClipboard.parents[i] = graph.model.getParent(cells[i]);\n\t *   }\n\t *   \n\t *   mxClipboard.insertCount = 1;\n\t *   mxClipboard.setCells(graph.cloneCells(result));\n\t *   \n\t *   return result;\n\t * };\n\t * \n\t * mxClipboard.paste = function(graph)\n\t * {\n\t *   if (!mxClipboard.isEmpty())\n\t *   {\n\t *     var cells = graph.getImportableCells(mxClipboard.getCells());\n\t *     var delta = mxClipboard.insertCount * mxClipboard.STEPSIZE;\n\t *     var parent = graph.getDefaultParent();\n\t *     \n\t *     graph.model.beginUpdate();\n\t *     try\n\t *     {\n\t *       for (var i = 0; i < cells.length; i++)\n\t *       {\n\t *         var tmp = (mxClipboard.parents != null && graph.model.contains(mxClipboard.parents[i])) ?\n\t *              mxClipboard.parents[i] : parent;\n\t *         cells[i] = graph.importCells([cells[i]], delta, delta, tmp)[0];\n\t *       }\n\t *     }\n\t *     finally\n\t *     {\n\t *       graph.model.endUpdate();\n\t *     }\n\t *     \n\t *     // Increments the counter and selects the inserted cells\n\t *     mxClipboard.insertCount++;\n\t *     graph.setSelectionCells(cells);\n\t *   }\n\t * };\n\t * (end)\n\t * \n\t * Variable: STEPSIZE\n\t * \n\t * Defines the step size to offset the cells after each paste operation.\n\t * Default is 10.\n\t */\n\tSTEPSIZE: 10,\n\n\t/**\n\t * Variable: insertCount\n\t * \n\t * Counts the number of times the clipboard data has been inserted.\n\t */\n\tinsertCount: 1,\n\n\t/**\n\t * Variable: cells\n\t * \n\t * Holds the array of <mxCells> currently in the clipboard.\n\t */\n\tcells: null,\n\n\t/**\n\t * Function: setCells\n\t * \n\t * Sets the cells in the clipboard. Fires a <mxEvent.CHANGE> event.\n\t */\n\tsetCells: function(cells)\n\t{\n\t\tmxClipboard.cells = cells;\n\t},\n\n\t/**\n\t * Function: getCells\n\t * \n\t * Returns  the cells in the clipboard.\n\t */\n\tgetCells: function()\n\t{\n\t\treturn mxClipboard.cells;\n\t},\n\t\n\t/**\n\t * Function: isEmpty\n\t * \n\t * Returns true if the clipboard currently has not data stored.\n\t */\n\tisEmpty: function()\n\t{\n\t\treturn mxClipboard.getCells() == null;\n\t},\n\t\n\t/**\n\t * Function: cut\n\t * \n\t * Cuts the given array of <mxCells> from the specified graph.\n\t * If cells is null then the selection cells of the graph will\n\t * be used. Returns the cells that have been cut from the graph.\n\t *\n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be cut.\n\t * cells - Optional array of <mxCells> to be cut.\n\t */\n\tcut: function(graph, cells)\n\t{\n\t\tcells = mxClipboard.copy(graph, cells);\n\t\tmxClipboard.insertCount = 0;\n\t\tmxClipboard.removeCells(graph, cells);\n\t\t\n\t\treturn cells;\n\t},\n\n\t/**\n\t * Function: removeCells\n\t * \n\t * Hook to remove the given cells from the given graph after\n\t * a cut operation.\n\t *\n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be cut.\n\t * cells - Array of <mxCells> to be cut.\n\t */\n\tremoveCells: function(graph, cells)\n\t{\n\t\tgraph.removeCells(cells);\n\t},\n\n\t/**\n\t * Function: copy\n\t * \n\t * Copies the given array of <mxCells> from the specified\n\t * graph to <cells>. Returns the original array of cells that has\n\t * been cloned. Descendants of cells in the array are ignored.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be copied.\n\t * cells - Optional array of <mxCells> to be copied.\n\t */\n\tcopy: function(graph, cells)\n\t{\n\t\tcells = cells || graph.getSelectionCells();\n\t\tvar result = graph.getExportableCells(graph.model.getTopmostCells(cells));\n\t\tmxClipboard.insertCount = 1;\n\t\tmxClipboard.setCells(graph.cloneCells(result));\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: paste\n\t * \n\t * Pastes the <cells> into the specified graph restoring\n\t * the relation to <parents>, if possible. If the parents\n\t * are no longer in the graph or invisible then the\n\t * cells are added to the graph's default or into the\n\t * swimlane under the cell's new location if one exists.\n\t * The cells are added to the graph using <mxGraph.importCells>\n\t * and returned.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to paste the <cells> into.\n\t */\n\tpaste: function(graph)\n\t{\n\t\tvar cells = null;\n\t\t\n\t\tif (!mxClipboard.isEmpty())\n\t\t{\n\t\t\tcells = graph.getImportableCells(mxClipboard.getCells());\n\t\t\tvar delta = mxClipboard.insertCount * mxClipboard.STEPSIZE;\n\t\t\tvar parent = graph.getDefaultParent();\n\t\t\tcells = graph.importCells(cells, delta, delta, parent);\n\t\t\t\n\t\t\t// Increments the counter and selects the inserted cells\n\t\t\tmxClipboard.insertCount++;\n\t\t\tgraph.setSelectionCells(cells);\n\t\t}\n\t\t\n\t\treturn cells;\n\t}\n\n};\n\n__mxOutput.mxClipboard = typeof mxClipboard !== 'undefined' ? mxClipboard : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxWindow\n * \n * Basic window inside a document.\n * \n * Examples:\n * \n * Creating a simple window.\n *\n * (code)\n * var tb = document.createElement('div');\n * var wnd = new mxWindow('Title', tb, 100, 100, 200, 200, true, true);\n * wnd.setVisible(true); \n * (end)\n *\n * Creating a window that contains an iframe. \n * \n * (code)\n * var frame = document.createElement('iframe');\n * frame.setAttribute('width', '192px');\n * frame.setAttribute('height', '172px');\n * frame.setAttribute('src', 'http://www.example.com/');\n * frame.style.backgroundColor = 'white';\n * \n * var w = document.body.clientWidth;\n * var h = (document.body.clientHeight || document.documentElement.clientHeight);\n * var wnd = new mxWindow('Title', frame, (w-200)/2, (h-200)/3, 200, 200);\n * wnd.setVisible(true);\n * (end)\n * \n * To limit the movement of a window, eg. to keep it from being moved beyond\n * the top, left corner the following method can be overridden (recommended):\n * \n * (code)\n * wnd.setLocation = function(x, y)\n * {\n *   x = Math.max(0, x);\n *   y = Math.max(0, y);\n *   mxWindow.prototype.setLocation.apply(this, arguments);\n * };\n * (end)\n * \n * Or the following event handler can be used:\n * \n * (code)\n * wnd.addListener(mxEvent.MOVE, function(e)\n * {\n *   wnd.setLocation(Math.max(0, wnd.getX()), Math.max(0, wnd.getY()));\n * });\n * (end)\n * \n * To keep a window inside the current window:\n * \n * (code)\n * mxEvent.addListener(window, 'resize', mxUtils.bind(this, function()\n * {\n *   var iw = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n *   var ih = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n *   \n *   var x = this.window.getX();\n *   var y = this.window.getY();\n *   \n *   if (x + this.window.table.clientWidth > iw)\n *   {\n *     x = Math.max(0, iw - this.window.table.clientWidth);\n *   }\n *   \n *   if (y + this.window.table.clientHeight > ih)\n *   {\n *     y = Math.max(0, ih - this.window.table.clientHeight);\n *   }\n *   \n *   if (this.window.getX() != x || this.window.getY() != y)\n *   {\n *     this.window.setLocation(x, y);\n *   }\n * }));\n * (end)\n *\n * Event: mxEvent.MOVE_START\n *\n * Fires before the window is moved. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.MOVE\n *\n * Fires while the window is being moved. The <code>event</code> property\n * contains the corresponding mouse event.\n *\n * Event: mxEvent.MOVE_END\n *\n * Fires after the window is moved. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE_START\n *\n * Fires before the window is resized. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE\n *\n * Fires while the window is being resized. The <code>event</code> property\n * contains the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE_END\n *\n * Fires after the window is resized. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.MAXIMIZE\n * \n * Fires after the window is maximized. The <code>event</code> property\n * contains the corresponding mouse event.\n * \n * Event: mxEvent.MINIMIZE\n * \n * Fires after the window is minimized. The <code>event</code> property\n * contains the corresponding mouse event.\n * \n * Event: mxEvent.NORMALIZE\n * \n * Fires after the window is normalized, that is, it returned from\n * maximized or minimized state. The <code>event</code> property contains the\n * corresponding mouse event.\n *  \n * Event: mxEvent.ACTIVATE\n * \n * Fires after a window is activated. The <code>previousWindow</code> property\n * contains the previous window. The event sender is the active window.\n * \n * Event: mxEvent.SHOW\n * \n * Fires after the window is shown. This event has no properties.\n * \n * Event: mxEvent.HIDE\n * \n * Fires after the window is hidden. This event has no properties.\n * \n * Event: mxEvent.CLOSE\n * \n * Fires before the window is closed. The <code>event</code> property contains\n * the corresponding mouse event.\n * \n * Event: mxEvent.DESTROY\n * \n * Fires before the window is destroyed. This event has no properties.\n * \n * Constructor: mxWindow\n * \n * Constructs a new window with the given dimension and title to display\n * the specified content. The window elements use the given style as a\n * prefix for the classnames of the respective window elements, namely,\n * the window title and window pane. The respective postfixes are appended\n * to the given stylename as follows:\n * \n *   style - Base style for the window.\n *   style+Title - Style for the window title.\n *   style+Pane - Style for the window pane.\n * \n * The default value for style is mxWindow, resulting in the following\n * classnames for the window elements: mxWindow, mxWindowTitle and\n * mxWindowPane.\n * \n * If replaceNode is given then the window replaces the given DOM node in\n * the document.\n * \n * Parameters:\n * \n * title - String that represents the title of the new window.\n * content - DOM node that is used as the window content.\n * x - X-coordinate of the window location.\n * y - Y-coordinate of the window location.\n * width - Width of the window.\n * height - Optional height of the window. Default is to match the height\n * of the content at the specified width.\n * minimizable - Optional boolean indicating if the window is minimizable.\n * Default is true.\n * movable - Optional boolean indicating if the window is movable. Default\n * is true.\n * replaceNode - Optional DOM node that the window should replace.\n * style - Optional base classname for the window elements. Default is\n * mxWindow.\n */\nfunction mxWindow(title, content, x, y, width, height, minimizable, movable, replaceNode, style)\n{\n\tif (content != null)\n\t{\n\t\tminimizable = (minimizable != null) ? minimizable : true;\n\t\tthis.content = content;\n\t\tthis.init(x, y, width, height, style);\n\t\t\n\t\tthis.installMaximizeHandler();\n\t\tthis.installMinimizeHandler();\n\t\tthis.installCloseHandler();\n\t\tthis.setMinimizable(minimizable);\n\t\tthis.setTitle(title);\n\t\t\n\t\tif (movable == null || movable)\n\t\t{\n\t\t\tthis.installMoveHandler();\n\t\t}\n\n\t\tif (replaceNode != null && replaceNode.parentNode != null)\n\t\t{\n\t\t\treplaceNode.parentNode.replaceChild(this.div, replaceNode);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.body.appendChild(this.div);\n\t\t}\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxWindow.prototype = new mxEventSource();\nmxWindow.prototype.constructor = mxWindow;\n\n/**\n * Variable: closeImage\n * \n * URL of the image to be used for the close icon in the titlebar.\n */\nmxWindow.prototype.closeImage = mxClient.imageBasePath + '/close.gif';\n\n/**\n * Variable: minimizeImage\n * \n * URL of the image to be used for the minimize icon in the titlebar.\n */\nmxWindow.prototype.minimizeImage = mxClient.imageBasePath + '/minimize.gif';\n\t\n/**\n * Variable: normalizeImage\n * \n * URL of the image to be used for the normalize icon in the titlebar.\n */\nmxWindow.prototype.normalizeImage = mxClient.imageBasePath + '/normalize.gif';\n\t\n/**\n * Variable: maximizeImage\n * \n * URL of the image to be used for the maximize icon in the titlebar.\n */\nmxWindow.prototype.maximizeImage = mxClient.imageBasePath + '/maximize.gif';\n\n/**\n * Variable: normalizeImage\n * \n * URL of the image to be used for the resize icon.\n */\nmxWindow.prototype.resizeImage = mxClient.imageBasePath + '/resize.gif';\n\n/**\n * Variable: visible\n * \n * Boolean flag that represents the visible state of the window.\n */\nmxWindow.prototype.visible = false;\n\n/**\n * Variable: minimumSize\n * \n * <mxRectangle> that specifies the minimum width and height of the window.\n * Default is (50, 40).\n */\nmxWindow.prototype.minimumSize = new mxRectangle(0, 0, 50, 40);\n\n/**\n * Variable: destroyOnClose\n * \n * Specifies if the window should be destroyed when it is closed. If this\n * is false then the window is hidden using <setVisible>. Default is true.\n */\nmxWindow.prototype.destroyOnClose = true;\n\n/**\n * Variable: contentHeightCorrection\n * \n * Defines the correction factor for computing the height of the contentWrapper.\n * Default is 6 for IE 7/8 standards mode and 2 for all other browsers and modes.\n */\nmxWindow.prototype.contentHeightCorrection = (document.documentMode == 8 || document.documentMode == 7) ? 6 : 2;\n\n/**\n * Variable: title\n * \n * Reference to the DOM node (TD) that contains the title.\n */\nmxWindow.prototype.title = null;\n\n/**\n * Variable: content\n * \n * Reference to the DOM node that represents the window content.\n */\nmxWindow.prototype.content = null;\n\n/**\n * Function: init\n * \n * Initializes the DOM tree that represents the window.\n */\nmxWindow.prototype.init = function(x, y, width, height, style)\n{\n\tstyle = (style != null) ? style : 'mxWindow';\n\t\n\tthis.div = document.createElement('div');\n\tthis.div.className = style;\n\n\tthis.div.style.left = x + 'px';\n\tthis.div.style.top = y + 'px';\n\tthis.table = document.createElement('table');\n\tthis.table.className = style;\n\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tthis.div.style.touchAction = 'none';\n\t}\n\t\n\t// Workaround for table size problems in FF\n\tif (width != null)\n\t{\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tthis.div.style.width = width + 'px'; \n\t\t}\n\t\t\n\t\tthis.table.style.width = width + 'px';\n\t} \n\t\n\tif (height != null)\n\t{\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tthis.div.style.height = height + 'px';\n\t\t}\n\t\t\n\t\tthis.table.style.height = height + 'px';\n\t}\t\t\n\t\n\t// Creates title row\n\tvar tbody = document.createElement('tbody');\n\tvar tr = document.createElement('tr');\n\t\n\tthis.title = document.createElement('td');\n\tthis.title.className = style + 'Title';\n\t\n\tthis.buttons = document.createElement('div');\n\tthis.buttons.style.position = 'absolute';\n\tthis.buttons.style.display = 'inline-block';\n\tthis.buttons.style.right = '4px';\n\tthis.buttons.style.top = '5px';\n\tthis.title.appendChild(this.buttons);\n\t\n\ttr.appendChild(this.title);\n\ttbody.appendChild(tr);\n\t\n\t// Creates content row and table cell\n\ttr = document.createElement('tr');\n\tthis.td = document.createElement('td');\n\tthis.td.className = style + 'Pane';\n\t\n\tif (document.documentMode == 7)\n\t{\n\t\tthis.td.style.height = '100%';\n\t}\n\n\tthis.contentWrapper = document.createElement('div');\n\tthis.contentWrapper.className = style + 'Pane';\n\tthis.contentWrapper.style.width = '100%';\n\tthis.contentWrapper.appendChild(this.content);\n\n\t// Workaround for div around div restricts height\n\t// of inner div if outerdiv has hidden overflow\n\tif (mxClient.IS_QUIRKS || this.content.nodeName.toUpperCase() != 'DIV')\n\t{\n\t\tthis.contentWrapper.style.height = '100%';\n\t}\n\n\t// Puts all content into the DOM\n\tthis.td.appendChild(this.contentWrapper);\n\ttr.appendChild(this.td);\n\ttbody.appendChild(tr);\n\tthis.table.appendChild(tbody);\n\tthis.div.appendChild(this.table);\n\t\n\t// Puts the window on top of other windows when clicked\n\tvar activator = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t});\n\t\n\tmxEvent.addGestureListeners(this.title, activator);\n\tmxEvent.addGestureListeners(this.table, activator);\n\n\tthis.hide();\n};\n\n/**\n * Function: setTitle\n * \n * Sets the window title to the given string. HTML markup inside the title\n * will be escaped.\n */\nmxWindow.prototype.setTitle = function(title)\n{\n\t// Removes all text content nodes (normally just one)\n\tvar child = this.title.firstChild;\n\t\n\twhile (child != null)\n\t{\n\t\tvar next = child.nextSibling;\n\t\t\n\t\tif (child.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t{\n\t\t\tchild.parentNode.removeChild(child);\n\t\t}\n\t\t\n\t\tchild = next;\n\t}\n\t\n\tmxUtils.write(this.title, title || '');\n\tthis.title.appendChild(this.buttons);\n};\n\n/**\n * Function: setScrollable\n * \n * Sets if the window contents should be scrollable.\n */\nmxWindow.prototype.setScrollable = function(scrollable)\n{\n\t// Workaround for hang in Presto 2.5.22 (Opera 10.5)\n\tif (navigator.userAgent.indexOf('Presto/2.5') < 0)\n\t{\n\t\tif (scrollable)\n\t\t{\n\t\t\tthis.contentWrapper.style.overflow = 'auto';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.contentWrapper.style.overflow = 'hidden';\n\t\t}\n\t}\n};\n\n/**\n * Function: activate\n * \n * Puts the window on top of all other windows.\n */\nmxWindow.prototype.activate = function()\n{\n\tif (mxWindow.activeWindow != this)\n\t{\n\t\tvar style = mxUtils.getCurrentStyle(this.getElement());\n\t\tvar index = (style != null) ? style.zIndex : 3;\n\n\t\tif (mxWindow.activeWindow)\n\t\t{\n\t\t\tvar elt = mxWindow.activeWindow.getElement();\n\t\t\t\n\t\t\tif (elt != null && elt.style != null)\n\t\t\t{\n\t\t\t\telt.style.zIndex = index;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar previousWindow = mxWindow.activeWindow;\n\t\tthis.getElement().style.zIndex = parseInt(index) + 1;\n\t\tmxWindow.activeWindow = this;\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ACTIVATE, 'previousWindow', previousWindow));\n\t}\n};\n\n/**\n * Function: getElement\n * \n * Returuns the outermost DOM node that makes up the window.\n */\nmxWindow.prototype.getElement = function()\n{\n\treturn this.div;\n};\n\n/**\n * Function: fit\n * \n * Makes sure the window is inside the client area of the window.\n */\nmxWindow.prototype.fit = function()\n{\n\tmxUtils.fit(this.div);\n};\n\n/**\n * Function: isResizable\n * \n * Returns true if the window is resizable.\n */\nmxWindow.prototype.isResizable = function()\n{\n\tif (this.resize != null)\n\t{\n\t\treturn this.resize.style.display != 'none';\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: setResizable\n * \n * Sets if the window should be resizable. To avoid interference with some\n * built-in features of IE10 and later, the use of the following code is\n * recommended if there are resizable <mxWindow>s in the page:\n * \n * (code)\n * if (mxClient.IS_POINTER)\n * {\n *   document.body.style.msTouchAction = 'none';\n * }\n * (end)\n */\nmxWindow.prototype.setResizable = function(resizable)\n{\n\tif (resizable)\n\t{\n\t\tif (this.resize == null)\n\t\t{\n\t\t\tthis.resize = document.createElement('img');\n\t\t\tthis.resize.style.position = 'absolute';\n\t\t\tthis.resize.style.bottom = '2px';\n\t\t\tthis.resize.style.right = '2px';\n\n\t\t\tthis.resize.setAttribute('src', this.resizeImage);\n\t\t\tthis.resize.style.cursor = 'nw-resize';\n\t\t\t\n\t\t\tvar startX = null;\n\t\t\tvar startY = null;\n\t\t\tvar width = null;\n\t\t\tvar height = null;\n\t\t\t\n\t\t\tvar start = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\t// LATER: pointerdown starting on border of resize does start\n\t\t\t\t// the drag operation but does not fire consecutive events via\n\t\t\t\t// one of the listeners below (does pan instead).\n\t\t\t\t// Workaround: document.body.style.msTouchAction = 'none'\n\t\t\t\tthis.activate();\n\t\t\t\tstartX = mxEvent.getClientX(evt);\n\t\t\t\tstartY = mxEvent.getClientY(evt);\n\t\t\t\twidth = this.div.offsetWidth;\n\t\t\t\theight = this.div.offsetHeight;\n\t\t\t\t\n\t\t\t\tmxEvent.addGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_START, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\n\t\t\t// Adds a temporary pair of listeners to intercept\n\t\t\t// the gesture event in the document\n\t\t\tvar dragHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (startX != null && startY != null)\n\t\t\t\t{\n\t\t\t\t\tvar dx = mxEvent.getClientX(evt) - startX;\n\t\t\t\t\tvar dy = mxEvent.getClientY(evt) - startY;\n\t\n\t\t\t\t\tthis.setSize(width + dx, height + dy);\n\t\n\t\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE, 'event', evt));\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tvar dropHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (startX != null && startY != null)\n\t\t\t\t{\n\t\t\t\t\tstartX = null;\n\t\t\t\t\tstartY = null;\n\t\t\t\t\tmxEvent.removeGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_END, 'event', evt));\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addGestureListeners(this.resize, start, dragHandler, dropHandler);\n\t\t\tthis.div.appendChild(this.resize);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tthis.resize.style.display = 'inline';\n\t\t}\n\t}\n\telse if (this.resize != null)\n\t{\n\t\tthis.resize.style.display = 'none';\n\t}\n};\n\t\n/**\n * Function: setSize\n * \n * Sets the size of the window.\n */\nmxWindow.prototype.setSize = function(width, height)\n{\n\twidth = Math.max(this.minimumSize.width, width);\n\theight = Math.max(this.minimumSize.height, height);\n\n\t// Workaround for table size problems in FF\n\tif (!mxClient.IS_QUIRKS)\n\t{\n\t\tthis.div.style.width =  width + 'px';\n\t\tthis.div.style.height = height + 'px';\n\t}\n\t\n\tthis.table.style.width =  width + 'px';\n\tthis.table.style.height = height + 'px';\n\n\tif (!mxClient.IS_QUIRKS)\n\t{\n\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t}\n};\n\t\n/**\n * Function: setMinimizable\n * \n * Sets if the window is minimizable.\n */\nmxWindow.prototype.setMinimizable = function(minimizable)\n{\n\tthis.minimize.style.display = (minimizable) ? '' : 'none';\n};\n\n/**\n * Function: getMinimumSize\n * \n * Returns an <mxRectangle> that specifies the size for the minimized window.\n * A width or height of 0 means keep the existing width or height. This\n * implementation returns the height of the window title and keeps the width.\n */\nmxWindow.prototype.getMinimumSize = function()\n{\n\treturn new mxRectangle(0, 0, 0, this.title.offsetHeight);\n};\n\n/**\n * Function: installMinimizeHandler\n * \n * Installs the event listeners required for minimizing the window.\n */\nmxWindow.prototype.installMinimizeHandler = function()\n{\n\tthis.minimize = document.createElement('img');\n\t\n\tthis.minimize.setAttribute('src', this.minimizeImage);\n\tthis.minimize.setAttribute('title', 'Minimize');\n\tthis.minimize.style.cursor = 'pointer';\n\tthis.minimize.style.marginLeft = '2px';\n\tthis.minimize.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.minimize);\n\t\n\tvar minimized = false;\n\tvar maxDisplay = null;\n\tvar height = null;\n\n\tvar funct = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t\t\n\t\tif (!minimized)\n\t\t{\n\t\t\tminimized = true;\n\t\t\t\n\t\t\tthis.minimize.setAttribute('src', this.normalizeImage);\n\t\t\tthis.minimize.setAttribute('title', 'Normalize');\n\t\t\tthis.contentWrapper.style.display = 'none';\n\t\t\tmaxDisplay = this.maximize.style.display;\n\t\t\t\n\t\t\tthis.maximize.style.display = 'none';\n\t\t\theight = this.table.style.height;\n\t\t\t\n\t\t\tvar minSize = this.getMinimumSize();\n\t\t\t\n\t\t\tif (minSize.height > 0)\n\t\t\t{\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.height = minSize.height + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.height = minSize.height + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (minSize.width > 0)\n\t\t\t{\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.width = minSize.width + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.width = minSize.width + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (this.resize != null)\n\t\t\t{\n\t\t\t\tthis.resize.style.visibility = 'hidden';\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MINIMIZE, 'event', evt));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tminimized = false;\n\t\t\t\n\t\t\tthis.minimize.setAttribute('src', this.minimizeImage);\n\t\t\tthis.minimize.setAttribute('title', 'Minimize');\n\t\t\tthis.contentWrapper.style.display = ''; // default\n\t\t\tthis.maximize.style.display = maxDisplay;\n\t\t\t\n\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\tthis.div.style.height = height;\n\t\t\t}\n\t\t\t\n\t\t\tthis.table.style.height = height;\n\n\t\t\tif (this.resize != null)\n\t\t\t{\n\t\t\t\tthis.resize.style.visibility = '';\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.NORMALIZE, 'event', evt));\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tmxEvent.addGestureListeners(this.minimize, funct);\n};\n\t\n/**\n * Function: setMaximizable\n * \n * Sets if the window is maximizable.\n */\nmxWindow.prototype.setMaximizable = function(maximizable)\n{\n\tthis.maximize.style.display = (maximizable) ? '' : 'none';\n};\n\n/**\n * Function: installMaximizeHandler\n * \n * Installs the event listeners required for maximizing the window.\n */\nmxWindow.prototype.installMaximizeHandler = function()\n{\n\tthis.maximize = document.createElement('img');\n\t\n\tthis.maximize.setAttribute('src', this.maximizeImage);\n\tthis.maximize.setAttribute('title', 'Maximize');\n\tthis.maximize.style.cursor = 'default';\n\tthis.maximize.style.marginLeft = '2px';\n\tthis.maximize.style.cursor = 'pointer';\n\tthis.maximize.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.maximize);\n\t\n\tvar maximized = false;\n\tvar x = null;\n\tvar y = null;\n\tvar height = null;\n\tvar width = null;\n\tvar minDisplay = null;\n\n\tvar funct = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t\t\n\t\tif (this.maximize.style.display != 'none')\n\t\t{\n\t\t\tif (!maximized)\n\t\t\t{\n\t\t\t\tmaximized = true;\n\t\t\t\t\n\t\t\t\tthis.maximize.setAttribute('src', this.normalizeImage);\n\t\t\t\tthis.maximize.setAttribute('title', 'Normalize');\n\t\t\t\tthis.contentWrapper.style.display = '';\n\t\t\t\tminDisplay = this.minimize.style.display;\n\t\t\t\tthis.minimize.style.display = 'none';\n\t\t\t\t\n\t\t\t\t// Saves window state\n\t\t\t\tx = parseInt(this.div.style.left);\n\t\t\t\ty = parseInt(this.div.style.top);\n\t\t\t\theight = this.table.style.height;\n\t\t\t\twidth = this.table.style.width;\n\n\t\t\t\tthis.div.style.left = '0px';\n\t\t\t\tthis.div.style.top = '0px';\n\t\t\t\tvar docHeight = Math.max(document.body.clientHeight || 0, document.documentElement.clientHeight || 0);\n\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.width = (document.body.clientWidth - 2) + 'px';\n\t\t\t\t\tthis.div.style.height = (docHeight - 2) + 'px';\n\t\t\t\t}\n\n\t\t\t\tthis.table.style.width = (document.body.clientWidth - 2) + 'px';\n\t\t\t\tthis.table.style.height = (docHeight - 2) + 'px';\n\t\t\t\t\n\t\t\t\tif (this.resize != null)\n\t\t\t\t{\n\t\t\t\t\tthis.resize.style.visibility = 'hidden';\n\t\t\t\t}\n\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\t\n\t\t\t\t\tif (style.overflow == 'auto' || this.resize != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MAXIMIZE, 'event', evt));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmaximized = false;\n\t\t\t\t\n\t\t\t\tthis.maximize.setAttribute('src', this.maximizeImage);\n\t\t\t\tthis.maximize.setAttribute('title', 'Maximize');\n\t\t\t\tthis.contentWrapper.style.display = '';\n\t\t\t\tthis.minimize.style.display = minDisplay;\n\n\t\t\t\t// Restores window state\n\t\t\t\tthis.div.style.left = x+'px';\n\t\t\t\tthis.div.style.top = y+'px';\n\t\t\t\t\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.height = height;\n\t\t\t\t\tthis.div.style.width = width;\n\n\t\t\t\t\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\t\n\t\t\t\t\tif (style.overflow == 'auto' || this.resize != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.height = height;\n\t\t\t\tthis.table.style.width = width;\n\n\t\t\t\tif (this.resize != null)\n\t\t\t\t{\n\t\t\t\t\tthis.resize.style.visibility = '';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.NORMALIZE, 'event', evt));\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t});\n\t\n\tmxEvent.addGestureListeners(this.maximize, funct);\n\tmxEvent.addListener(this.title, 'dblclick', funct);\n};\n\t\n/**\n * Function: installMoveHandler\n * \n * Installs the event listeners required for moving the window.\n */\nmxWindow.prototype.installMoveHandler = function()\n{\n\tthis.title.style.cursor = 'move';\n\t\n\tmxEvent.addGestureListeners(this.title,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tvar startX = mxEvent.getClientX(evt);\n\t\t\tvar startY = mxEvent.getClientY(evt);\n\t\t\tvar x = this.getX();\n\t\t\tvar y = this.getY();\n\t\t\t\t\t\t\n\t\t\t// Adds a temporary pair of listeners to intercept\n\t\t\t// the gesture event in the document\n\t\t\tvar dragHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tvar dx = mxEvent.getClientX(evt) - startX;\n\t\t\t\tvar dy = mxEvent.getClientY(evt) - startY;\n\t\t\t\tthis.setLocation(x + dx, y + dy);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\t\n\t\t\tvar dropHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tmxEvent.removeGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_END, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_START, 'event', evt));\n\t\t\tmxEvent.consume(evt);\n\t\t}));\n\t\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tthis.title.style.touchAction = 'none';\n\t}\n};\n\n/**\n * Function: setLocation\n * \n * Sets the upper, left corner of the window.\n */\n mxWindow.prototype.setLocation = function(x, y)\n {\n\tthis.div.style.left = x + 'px';\n\tthis.div.style.top = y + 'px';\n };\n\n/**\n * Function: getX\n *\n * Returns the current position on the x-axis.\n */\nmxWindow.prototype.getX = function()\n{\n\treturn parseInt(this.div.style.left);\n};\n\n/**\n * Function: getY\n *\n * Returns the current position on the y-axis.\n */\nmxWindow.prototype.getY = function()\n{\n\treturn parseInt(this.div.style.top);\n};\n\n/**\n * Function: installCloseHandler\n *\n * Adds the <closeImage> as a new image node in <closeImg> and installs the\n * <close> event.\n */\nmxWindow.prototype.installCloseHandler = function()\n{\n\tthis.closeImg = document.createElement('img');\n\t\n\tthis.closeImg.setAttribute('src', this.closeImage);\n\tthis.closeImg.setAttribute('title', 'Close');\n\tthis.closeImg.style.marginLeft = '2px';\n\tthis.closeImg.style.cursor = 'pointer';\n\tthis.closeImg.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.closeImg);\n\n\tmxEvent.addGestureListeners(this.closeImg,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CLOSE, 'event', evt));\n\t\t\t\n\t\t\tif (this.destroyOnClose)\n\t\t\t{\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.setVisible(false);\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(evt);\n\t\t}));\n};\n\n/**\n * Function: setImage\n * \n * Sets the image associated with the window.\n * \n * Parameters:\n * \n * image - URL of the image to be used.\n */\nmxWindow.prototype.setImage = function(image)\n{\n\tthis.image = document.createElement('img');\n\tthis.image.setAttribute('src', image);\n\tthis.image.setAttribute('align', 'left');\n\tthis.image.style.marginRight = '4px';\n\tthis.image.style.marginLeft = '0px';\n\tthis.image.style.marginTop = '-2px';\n\t\n\tthis.title.insertBefore(this.image, this.title.firstChild);\n};\n\n/**\n * Function: setClosable\n * \n * Sets the image associated with the window.\n * \n * Parameters:\n * \n * closable - Boolean specifying if the window should be closable.\n */\nmxWindow.prototype.setClosable = function(closable)\n{\n\tthis.closeImg.style.display = (closable) ? '' : 'none';\n};\n\n/**\n * Function: isVisible\n * \n * Returns true if the window is visible.\n */\nmxWindow.prototype.isVisible = function()\n{\n\tif (this.div != null)\n\t{\n\t\treturn this.div.style.display != 'none';\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: setVisible\n *\n * Shows or hides the window depending on the given flag.\n * \n * Parameters:\n * \n * visible - Boolean indicating if the window should be made visible.\n */\nmxWindow.prototype.setVisible = function(visible)\n{\n\tif (this.div != null && this.isVisible() != visible)\n\t{\n\t\tif (visible)\n\t\t{\n\t\t\tthis.show();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.hide();\n\t\t}\n\t}\n};\n\n/**\n * Function: show\n *\n * Shows the window.\n */\nmxWindow.prototype.show = function()\n{\n\tthis.div.style.display = '';\n\tthis.activate();\n\t\n\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\n\tif (!mxClient.IS_QUIRKS && (style.overflow == 'auto' || this.resize != null) &&\n\t\tthis.contentWrapper.style.display != 'none')\n\t{\n\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SHOW));\n};\n\n/**\n * Function: hide\n *\n * Hides the window.\n */\nmxWindow.prototype.hide = function()\n{\n\tthis.div.style.display = 'none';\n\tthis.fireEvent(new mxEventObject(mxEvent.HIDE));\n};\n\n/**\n * Function: destroy\n *\n * Destroys the window and removes all associated resources. Fires a\n * <destroy> event prior to destroying the window.\n */\nmxWindow.prototype.destroy = function()\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.DESTROY));\n\t\n\tif (this.div != null)\n\t{\n\t\tmxEvent.release(this.div);\n\t\tthis.div.parentNode.removeChild(this.div);\n\t\tthis.div = null;\n\t}\n\t\n\tthis.title = null;\n\tthis.content = null;\n\tthis.contentWrapper = null;\n};\n\n__mxOutput.mxWindow = typeof mxWindow !== 'undefined' ? mxWindow : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxForm\n * \n * A simple class for creating HTML forms.\n * \n * Constructor: mxForm\n * \n * Creates a HTML table using the specified classname.\n */\nfunction mxForm(className)\n{\n\tthis.table = document.createElement('table');\n\tthis.table.className = className;\n\tthis.body = document.createElement('tbody');\n\t\n\tthis.table.appendChild(this.body);\n};\n\n/**\n * Variable: table\n * \n * Holds the DOM node that represents the table.\n */\nmxForm.prototype.table = null;\n\n/**\n * Variable: body\n * \n * Holds the DOM node that represents the tbody (table body). New rows\n * can be added to this object using DOM API.\n */\nmxForm.prototype.body = false;\n\n/**\n * Function: getTable\n * \n * Returns the table that contains this form.\n */\nmxForm.prototype.getTable = function()\n{\n\treturn this.table;\n};\n\n/**\n * Function: addButtons\n * \n * Helper method to add an OK and Cancel button using the respective\n * functions.\n */\nmxForm.prototype.addButtons = function(okFunct, cancelFunct)\n{\n\tvar tr = document.createElement('tr');\n\tvar td = document.createElement('td');\n\ttr.appendChild(td);\n\ttd = document.createElement('td');\n\n\t// Adds the ok button\n\tvar button = document.createElement('button');\n\tmxUtils.write(button, mxResources.get('ok') || 'OK');\n\ttd.appendChild(button);\n\n\tmxEvent.addListener(button, 'click', function()\n\t{\n\t\tokFunct();\n\t});\n\t\n\t// Adds the cancel button\n\tbutton = document.createElement('button');\n\tmxUtils.write(button, mxResources.get('cancel') || 'Cancel');\n\ttd.appendChild(button);\n\t\n\tmxEvent.addListener(button, 'click', function()\n\t{\n\t\tcancelFunct();\n\t});\n\t\n\ttr.appendChild(td);\n\tthis.body.appendChild(tr);\n};\n\n/**\n * Function: addText\n * \n * Adds an input for the given name, type and value and returns it.\n */\nmxForm.prototype.addText = function(name, value, type)\n{\n\tvar input = document.createElement('input');\n\t\n\tinput.setAttribute('type', type || 'text');\n\tinput.value = value;\n\t\n\treturn this.addField(name, input);\n};\n\n/**\n * Function: addCheckbox\n * \n * Adds a checkbox for the given name and value and returns the textfield.\n */\nmxForm.prototype.addCheckbox = function(name, value)\n{\n\tvar input = document.createElement('input');\n\t\n\tinput.setAttribute('type', 'checkbox');\n\tthis.addField(name, input);\n\n\t// IE can only change the checked value if the input is inside the DOM\n\tif (value)\n\t{\n\t\tinput.checked = true;\n\t}\n\n\treturn input;\n};\n\n/**\n * Function: addTextarea\n * \n * Adds a textarea for the given name and value and returns the textarea.\n */\nmxForm.prototype.addTextarea = function(name, value, rows)\n{\n\tvar input = document.createElement('textarea');\n\t\n\tif (mxClient.IS_NS)\n\t{\n\t\trows--;\n\t}\n\t\n\tinput.setAttribute('rows', rows || 2);\n\tinput.value = value;\n\t\n\treturn this.addField(name, input);\n};\n\n/**\n * Function: addCombo\n * \n * Adds a combo for the given name and returns the combo.\n */\nmxForm.prototype.addCombo = function(name, isMultiSelect, size)\n{\n\tvar select = document.createElement('select');\n\t\n\tif (size != null)\n\t{\n\t\tselect.setAttribute('size', size);\n\t}\n\t\n\tif (isMultiSelect)\n\t{\n\t\tselect.setAttribute('multiple', 'true');\n\t}\n\t\n\treturn this.addField(name, select);\n};\n\n/**\n * Function: addOption\n * \n * Adds an option for the given label to the specified combo.\n */\nmxForm.prototype.addOption = function(combo, label, value, isSelected)\n{\n\tvar option = document.createElement('option');\n\t\n\tmxUtils.writeln(option, label);\n\toption.setAttribute('value', value);\n\t\n\tif (isSelected)\n\t{\n\t\toption.setAttribute('selected', isSelected);\n\t}\n\t\n\tcombo.appendChild(option);\n};\n\n/**\n * Function: addField\n * \n * Adds a new row with the name and the input field in two columns and\n * returns the given input.\n */\nmxForm.prototype.addField = function(name, input)\n{\n\tvar tr = document.createElement('tr');\n\tvar td = document.createElement('td');\n\tmxUtils.write(td, name);\n\ttr.appendChild(td);\n\t\n\ttd = document.createElement('td');\n\ttd.appendChild(input);\n\ttr.appendChild(td);\n\tthis.body.appendChild(tr);\n\t\n\treturn input;\n};\n\n__mxOutput.mxForm = typeof mxForm !== 'undefined' ? mxForm : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImage\n *\n * Encapsulates the URL, width and height of an image.\n * \n * Constructor: mxImage\n * \n * Constructs a new image.\n */\nfunction mxImage(src, width, height)\n{\n\tthis.src = src;\n\tthis.width = width;\n\tthis.height = height;\n};\n\n/**\n * Variable: src\n *\n * String that specifies the URL of the image.\n */\nmxImage.prototype.src = null;\n\n/**\n * Variable: width\n *\n * Integer that specifies the width of the image.\n */\nmxImage.prototype.width = null;\n\n/**\n * Variable: height\n *\n * Integer that specifies the height of the image.\n */\nmxImage.prototype.height = null;\n\n__mxOutput.mxImage = typeof mxImage !== 'undefined' ? mxImage : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDivResizer\n * \n * Maintains the size of a div element in Internet Explorer. This is a\n * workaround for the right and bottom style being ignored in IE.\n * \n * If you need a div to cover the scrollwidth and -height of a document,\n * then you can use this class as follows:\n * \n * (code)\n * var resizer = new mxDivResizer(background);\n * resizer.getDocumentHeight = function()\n * {\n *   return document.body.scrollHeight;\n * }\n * resizer.getDocumentWidth = function()\n * {\n *   return document.body.scrollWidth;\n * }\n * resizer.resize();\n * (end)\n * \n * Constructor: mxDivResizer\n * \n * Constructs an object that maintains the size of a div\n * element when the window is being resized. This is only\n * required for Internet Explorer as it ignores the respective\n * stylesheet information for DIV elements.\n * \n * Parameters:\n * \n * div - Reference to the DOM node whose size should be maintained.\n * container - Optional Container that contains the div. Default is the\n * window.\n */\nfunction mxDivResizer(div, container)\n{\n\tif (div.nodeName.toLowerCase() == 'div')\n\t{\n\t\tif (container == null)\n\t\t{\n\t\t\tcontainer = window;\n\t\t}\n\n\t\tthis.div = div;\n\t\tvar style = mxUtils.getCurrentStyle(div);\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tthis.resizeWidth = style.width == 'auto';\n\t\t\tthis.resizeHeight = style.height == 'auto';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(container, 'resize',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (!this.handlingResize)\n\t\t\t\t{\n\t\t\t\t\tthis.handlingResize = true;\n\t\t\t\t\tthis.resize();\n\t\t\t\t\tthis.handlingResize = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\t\n\t\tthis.resize();\n\t}\n};\n\n/**\n * Function: resizeWidth\n * \n * Boolean specifying if the width should be updated.\n */\nmxDivResizer.prototype.resizeWidth = true;\n\n/**\n * Function: resizeHeight\n * \n * Boolean specifying if the height should be updated.\n */\nmxDivResizer.prototype.resizeHeight = true;\n\n/**\n * Function: handlingResize\n * \n * Boolean specifying if the width should be updated.\n */\nmxDivResizer.prototype.handlingResize = false;\n\n/**\n * Function: resize\n * \n * Updates the style of the DIV after the window has been resized.\n */\nmxDivResizer.prototype.resize = function()\n{\n\tvar w = this.getDocumentWidth();\n\tvar h = this.getDocumentHeight();\n\n\tvar l = parseInt(this.div.style.left);\n\tvar r = parseInt(this.div.style.right);\n\tvar t = parseInt(this.div.style.top);\n\tvar b = parseInt(this.div.style.bottom);\n\t\n\tif (this.resizeWidth &&\n\t\t!isNaN(l) &&\n\t\t!isNaN(r) &&\n\t\tl >= 0 &&\n\t\tr >= 0 &&\n\t\tw - r - l > 0)\n\t{\n\t\tthis.div.style.width = (w - r - l)+'px';\n\t}\n\t\n\tif (this.resizeHeight &&\n\t\t!isNaN(t) &&\n\t\t!isNaN(b) &&\n\t\tt >= 0 &&\n\t\tb >= 0 &&\n\t\th - t - b > 0)\n\t{\n\t\tthis.div.style.height = (h - t - b)+'px';\n\t}\n};\n\n/**\n * Function: getDocumentWidth\n * \n * Hook for subclassers to return the width of the document (without\n * scrollbars).\n */\nmxDivResizer.prototype.getDocumentWidth = function()\n{\n\treturn document.body.clientWidth;\n};\n\n/**\n * Function: getDocumentHeight\n * \n * Hook for subclassers to return the height of the document (without\n * scrollbars).\n */\nmxDivResizer.prototype.getDocumentHeight = function()\n{\n\treturn document.body.clientHeight;\n};\n\n__mxOutput.mxDivResizer = typeof mxDivResizer !== 'undefined' ? mxDivResizer : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDragSource\n * \n * Wrapper to create a drag source from a DOM element so that the element can\n * be dragged over a graph and dropped into the graph as a new cell.\n * \n * Problem is that in the dropHandler the current preview location is not\n * available, so the preview and the dropHandler must match.\n * \n * Constructor: mxDragSource\n * \n * Constructs a new drag source for the given element.\n */\nfunction mxDragSource(element, dropHandler)\n{\n\tthis.element = element;\n\tthis.dropHandler = dropHandler;\n\t\n\t// Handles a drag gesture on the element\n\tmxEvent.addGestureListeners(element, mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseDown(evt);\n\t}));\n\t\n\t// Prevents native drag and drop\n\tmxEvent.addListener(element, 'dragstart', function(evt)\n\t{\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tthis.eventConsumer = function(sender, evt)\n\t{\n\t\tvar evtName = evt.getProperty('eventName');\n\t\tvar me = evt.getProperty('event');\n\t\t\n\t\tif (evtName != mxEvent.MOUSE_DOWN)\n\t\t{\n\t\t\tme.consume();\n\t\t}\n\t};\n};\n\n/**\n * Variable: element\n *\n * Reference to the DOM node which was made draggable.\n */\nmxDragSource.prototype.element = null;\n\n/**\n * Variable: dropHandler\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dropHandler = null;\n\n/**\n * Variable: dragOffset\n *\n * <mxPoint> that specifies the offset of the <dragElement>. Default is null.\n */\nmxDragSource.prototype.dragOffset = null;\n\n/**\n * Variable: dragElement\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dragElement = null;\n\n/**\n * Variable: previewElement\n *\n * Optional <mxRectangle> that specifies the unscaled size of the preview.\n */\nmxDragSource.prototype.previewElement = null;\n\n/**\n * Variable: enabled\n *\n * Specifies if this drag source is enabled. Default is true.\n */\nmxDragSource.prototype.enabled = true;\n\n/**\n * Variable: currentGraph\n *\n * Reference to the <mxGraph> that is the current drop target.\n */\nmxDragSource.prototype.currentGraph = null;\n\n/**\n * Variable: currentDropTarget\n *\n * Holds the current drop target under the mouse.\n */\nmxDragSource.prototype.currentDropTarget = null;\n\n/**\n * Variable: currentPoint\n *\n * Holds the current drop location.\n */\nmxDragSource.prototype.currentPoint = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentGuide = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentHighlight = null;\n\n/**\n * Variable: autoscroll\n *\n * Specifies if the graph should scroll automatically. Default is true.\n */\nmxDragSource.prototype.autoscroll = true;\n\n/**\n * Variable: guidesEnabled\n *\n * Specifies if <mxGuide> should be enabled. Default is true.\n */\nmxDragSource.prototype.guidesEnabled = true;\n\n/**\n * Variable: gridEnabled\n *\n * Specifies if the grid should be allowed. Default is true.\n */\nmxDragSource.prototype.gridEnabled = true;\n\n/**\n * Variable: highlightDropTargets\n *\n * Specifies if drop targets should be highlighted. Default is true.\n */\nmxDragSource.prototype.highlightDropTargets = true;\n\n/**\n * Variable: dragElementZIndex\n * \n * ZIndex for the drag element. Default is 100.\n */\nmxDragSource.prototype.dragElementZIndex = 100;\n\n/**\n * Variable: dragElementOpacity\n * \n * Opacity of the drag element in %. Default is 70.\n */\nmxDragSource.prototype.dragElementOpacity = 70;\n\n/**\n * Variable: checkEventSource\n * \n * Whether the event source should be checked in <graphContainerEvent>. Default\n * is true.\n */\nmxDragSource.prototype.checkEventSource = true;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxDragSource.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxDragSource.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isGuidesEnabled\n * \n * Returns <guidesEnabled>.\n */\nmxDragSource.prototype.isGuidesEnabled = function()\n{\n\treturn this.guidesEnabled;\n};\n\n/**\n * Function: setGuidesEnabled\n * \n * Sets <guidesEnabled>.\n */\nmxDragSource.prototype.setGuidesEnabled = function(value)\n{\n\tthis.guidesEnabled = value;\n};\n\n/**\n * Function: isGridEnabled\n * \n * Returns <gridEnabled>.\n */\nmxDragSource.prototype.isGridEnabled = function()\n{\n\treturn this.gridEnabled;\n};\n\n/**\n * Function: setGridEnabled\n * \n * Sets <gridEnabled>.\n */\nmxDragSource.prototype.setGridEnabled = function(value)\n{\n\tthis.gridEnabled = value;\n};\n\n/**\n * Function: getGraphForEvent\n * \n * Returns the graph for the given mouse event. This implementation returns\n * null.\n */\nmxDragSource.prototype.getGraphForEvent = function(evt)\n{\n\treturn null;\n};\n\n/**\n * Function: getDropTarget\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.getDropTarget = function(graph, x, y, evt)\n{\n\treturn graph.getCellAt(x, y);\n};\n\n/**\n * Function: createDragElement\n * \n * Creates and returns a clone of the <dragElementPrototype> or the <element>\n * if the former is not defined.\n */\nmxDragSource.prototype.createDragElement = function(evt)\n{\n\treturn this.element.cloneNode(true);\n};\n\n/**\n * Function: createPreviewElement\n * \n * Creates and returns an element which can be used as a preview in the given\n * graph.\n */\nmxDragSource.prototype.createPreviewElement = function(graph)\n{\n\treturn null;\n};\n\n/**\n * Function: isActive\n * \n * Returns true if this drag source is active.\n */\nmxDragSource.prototype.isActive = function()\n{\n\treturn this.mouseMoveHandler != null;\n};\n\n/**\n * Function: reset\n * \n * Stops and removes everything and restores the state of the object.\n */\nmxDragSource.prototype.reset = function()\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\t\n\tthis.removeDragElement();\n\tthis.removeListeners();\n\tthis.stopDrag();\n};\n\n/**\n * Function: mouseDown\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n * \n * To ignore popup menu events for a drag source, this function can be\n * overridden as follows.\n * \n * (code)\n * var mouseDown = dragSource.mouseDown;\n * \n * dragSource.mouseDown = function(evt)\n * {\n *   if (!mxEvent.isPopupTrigger(evt))\n *   {\n *     mouseDown.apply(this, arguments);\n *   }\n * };\n * (end)\n */\nmxDragSource.prototype.mouseDown = function(evt)\n{\n\tif (this.enabled && !mxEvent.isConsumed(evt) && this.mouseMoveHandler == null)\n\t{\n\t\tthis.startDrag(evt);\n\t\tthis.mouseMoveHandler = mxUtils.bind(this, this.mouseMove);\n\t\tthis.mouseUpHandler = mxUtils.bind(this, this.mouseUp);\t\t\n\t\tmxEvent.addGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t\n\t\tif (mxClient.IS_TOUCH && !mxEvent.isMouseEvent(evt))\n\t\t{\n\t\t\tthis.eventSource = mxEvent.getSource(evt);\n\t\t\tmxEvent.addGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t}\n\t}\n};\n\n/**\n * Function: startDrag\n * \n * Creates the <dragElement> using <createDragElement>.\n */\nmxDragSource.prototype.startDrag = function(evt)\n{\n\tthis.dragElement = this.createDragElement(evt);\n\tthis.dragElement.style.position = 'absolute';\n\tthis.dragElement.style.zIndex = this.dragElementZIndex;\n\tmxUtils.setOpacity(this.dragElement, this.dragElementOpacity);\n\n\tif (this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.dragElement.style.pointerEvents = 'none';\n\t}\n};\n\n/**\n * Function: stopDrag\n * \n * Invokes <removeDragElement>.\n */\nmxDragSource.prototype.stopDrag = function()\n{\n\t// LATER: This used to have a mouse event. If that is still needed we need to add another\n\t// final call to the DnD protocol to add a cleanup step in the case of escape press, which\n\t// is not associated with a mouse event and which currently calles this method.\n\tthis.removeDragElement();\n};\n\n/**\n * Function: removeDragElement\n * \n * Removes and destroys the <dragElement>.\n */\nmxDragSource.prototype.removeDragElement = function()\n{\n\tif (this.dragElement != null)\n\t{\n\t\tif (this.dragElement.parentNode != null)\n\t\t{\n\t\t\tthis.dragElement.parentNode.removeChild(this.dragElement);\n\t\t}\n\t\t\n\t\tthis.dragElement = null;\n\t}\n};\n\n/**\n * Function: getElementForEvent\n * \n * Returns the topmost element under the given event.\n */\nmxDragSource.prototype.getElementForEvent = function(evt)\n{\n\treturn ((mxEvent.isTouchEvent(evt) || mxEvent.isPenEvent(evt)) ?\n\t\t\tdocument.elementFromPoint(mxEvent.getClientX(evt), mxEvent.getClientY(evt)) :\n\t\t\t\tmxEvent.getSource(evt));\n};\n\n/**\n * Function: graphContainsEvent\n * \n * Returns true if the given graph contains the given event.\n */\nmxDragSource.prototype.graphContainsEvent = function(graph, evt)\n{\n\tvar x = mxEvent.getClientX(evt);\n\tvar y = mxEvent.getClientY(evt);\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin();\n\tvar elt = this.getElementForEvent(evt);\n\t\n\tif (this.checkEventSource)\n\t{\n\t\twhile (elt != null && elt != graph.container)\n\t\t{\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\n\t// Checks if event is inside the bounds of the graph container\n\treturn elt != null && x >= offset.x - origin.x && y >= offset.y - origin.y &&\n\t\tx <= offset.x - origin.x + graph.container.offsetWidth &&\n\t\ty <= offset.y - origin.y + graph.container.offsetHeight;\n};\n\n/**\n * Function: mouseMove\n * \n * Gets the graph for the given event using <getGraphForEvent>, updates the\n * <currentGraph>, calling <dragEnter> and <dragExit> on the new and old graph,\n * respectively, and invokes <dragOver> if <currentGraph> is not null.\n */\nmxDragSource.prototype.mouseMove = function(evt)\n{\n\tvar graph = this.getGraphForEvent(evt);\n\t\n\t// Checks if event is inside the bounds of the graph container\n\tif (graph != null && !this.graphContainsEvent(graph, evt))\n\t{\n\t\tgraph = null;\n\t}\n\n\tif (graph != this.currentGraph)\n\t{\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragExit(this.currentGraph, evt);\n\t\t}\n\t\t\n\t\tthis.currentGraph = graph;\n\t\t\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragEnter(this.currentGraph, evt);\n\t\t}\n\t}\n\t\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragOver(this.currentGraph, evt);\n\t}\n\n\tif (this.dragElement != null && (this.previewElement == null || this.previewElement.style.visibility != 'visible'))\n\t{\n\t\tvar x = mxEvent.getClientX(evt);\n\t\tvar y = mxEvent.getClientY(evt);\n\t\t\n\t\tif (this.dragElement.parentNode == null)\n\t\t{\n\t\t\tdocument.body.appendChild(this.dragElement);\n\t\t}\n\n\t\tthis.dragElement.style.visibility = 'visible';\n\t\t\n\t\tif (this.dragOffset != null)\n\t\t{\n\t\t\tx += this.dragOffset.x;\n\t\t\ty += this.dragOffset.y;\n\t\t}\n\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(document);\n\t\t\n\t\tthis.dragElement.style.left = (x + offset.x) + 'px';\n\t\tthis.dragElement.style.top = (y + offset.y) + 'px';\n\t}\n\telse if (this.dragElement != null)\n\t{\n\t\tthis.dragElement.style.visibility = 'hidden';\n\t}\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: mouseUp\n * \n * Processes the mouse up event and invokes <drop>, <dragExit> and <stopDrag>\n * as required.\n */\nmxDragSource.prototype.mouseUp = function(evt)\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tif (this.currentPoint != null && (this.previewElement == null ||\n\t\t\tthis.previewElement.style.visibility != 'hidden'))\n\t\t{\n\t\t\tvar scale = this.currentGraph.view.scale;\n\t\t\tvar tr = this.currentGraph.view.translate;\n\t\t\tvar x = this.currentPoint.x / scale - tr.x;\n\t\t\tvar y = this.currentPoint.y / scale - tr.y;\n\t\t\t\n\t\t\tthis.drop(this.currentGraph, evt, this.currentDropTarget, x, y);\n\t\t}\n\t\t\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\n\tthis.stopDrag();\n\tthis.removeListeners();\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: removeListeners\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.removeListeners = function()\n{\n\tif (this.eventSource != null)\n\t{\n\t\tmxEvent.removeGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\tthis.eventSource = null;\n\t}\n\t\n\tmxEvent.removeGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\tthis.mouseMoveHandler = null;\n\tthis.mouseUpHandler = null;\n};\n\n/**\n * Function: dragEnter\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.dragEnter = function(graph, evt)\n{\n\tgraph.isMouseDown = true;\n\tgraph.isMouseTrigger = mxEvent.isMouseEvent(evt);\n\tthis.previewElement = this.createPreviewElement(graph);\n\t\n\tif (this.previewElement != null && this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.previewElement.style.pointerEvents = 'none';\n\t}\n\t\n\t// Guide is only needed if preview element is used\n\tif (this.isGuidesEnabled() && this.previewElement != null)\n\t{\n\t\tthis.currentGuide = new mxGuide(graph, graph.graphHandler.getGuideStates());\n\t}\n\t\n\tif (this.highlightDropTargets)\n\t{\n\t\tthis.currentHighlight = new mxCellHighlight(graph, mxConstants.DROP_TARGET_COLOR);\n\t}\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.eventConsumer);\n};\n\n/**\n * Function: dragExit\n * \n * Deactivates the given graph as a drop target.\n */\nmxDragSource.prototype.dragExit = function(graph, evt)\n{\n\tthis.currentDropTarget = null;\n\tthis.currentPoint = null;\n\tgraph.isMouseDown = false;\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.removeListener(this.eventConsumer);\n\t\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode != null)\n\t\t{\n\t\t\tthis.previewElement.parentNode.removeChild(this.previewElement);\n\t\t}\n\t\t\n\t\tthis.previewElement = null;\n\t}\n\t\n\tif (this.currentGuide != null)\n\t{\n\t\tthis.currentGuide.destroy();\n\t\tthis.currentGuide = null;\n\t}\n\t\n\tif (this.currentHighlight != null)\n\t{\n\t\tthis.currentHighlight.destroy();\n\t\tthis.currentHighlight = null;\n\t}\n};\n\n/**\n * Function: dragOver\n * \n * Implements autoscroll, updates the <currentPoint>, highlights any drop\n * targets and updates the preview.\n */\nmxDragSource.prototype.dragOver = function(graph, evt)\n{\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin(graph.container);\n\tvar x = mxEvent.getClientX(evt) - offset.x + origin.x - graph.panDx;\n\tvar y = mxEvent.getClientY(evt) - offset.y + origin.y - graph.panDy;\n\n\tif (graph.autoScroll && (this.autoscroll == null || this.autoscroll))\n\t{\n\t\tgraph.scrollPointToVisible(x, y, graph.autoExtend);\n\t}\n\n\t// Highlights the drop target under the mouse\n\tif (this.currentHighlight != null && graph.isDropEnabled())\n\t{\n\t\tthis.currentDropTarget = this.getDropTarget(graph, x, y, evt);\n\t\tvar state = graph.getView().getState(this.currentDropTarget);\n\t\tthis.currentHighlight.highlight(state);\n\t}\n\n\t// Updates the location of the preview\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode == null)\n\t\t{\n\t\t\tgraph.container.appendChild(this.previewElement);\n\t\t\t\n\t\t\tthis.previewElement.style.zIndex = '3';\n\t\t\tthis.previewElement.style.position = 'absolute';\n\t\t}\n\t\t\n\t\tvar gridEnabled = this.isGridEnabled() && graph.isGridEnabledEvent(evt);\n\t\tvar hideGuide = true;\n\n\t\t// Grid and guides\n\t\tif (this.currentGuide != null && this.currentGuide.isEnabledForEvent(evt))\n\t\t{\n\t\t\t// LATER: HTML preview appears smaller than SVG preview\n\t\t\tvar w = parseInt(this.previewElement.style.width);\n\t\t\tvar h = parseInt(this.previewElement.style.height);\n\t\t\tvar bounds = new mxRectangle(0, 0, w, h);\n\t\t\tvar delta = new mxPoint(x, y);\n\t\t\tdelta = this.currentGuide.move(bounds, delta, gridEnabled, true);\n\t\t\thideGuide = false;\n\t\t\tx = delta.x;\n\t\t\ty = delta.y;\n\t\t}\n\t\telse if (gridEnabled)\n\t\t{\n\t\t\tvar scale = graph.view.scale;\n\t\t\tvar tr = graph.view.translate;\n\t\t\tvar off = graph.gridSize / 2;\n\t\t\tx = (graph.snap(x / scale - tr.x - off) + tr.x) * scale;\n\t\t\ty = (graph.snap(y / scale - tr.y - off) + tr.y) * scale;\n\t\t}\n\t\t\n\t\tif (this.currentGuide != null && hideGuide)\n\t\t{\n\t\t\tthis.currentGuide.hide();\n\t\t}\n\t\t\n\t\tif (this.previewOffset != null)\n\t\t{\n\t\t\tx += this.previewOffset.x;\n\t\t\ty += this.previewOffset.y;\n\t\t}\n\n\t\tthis.previewElement.style.left = Math.round(x) + 'px';\n\t\tthis.previewElement.style.top = Math.round(y) + 'px';\n\t\tthis.previewElement.style.visibility = 'visible';\n\t}\n\t\n\tthis.currentPoint = new mxPoint(x, y);\n};\n\n/**\n * Function: drop\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.drop = function(graph, evt, dropTarget, x, y)\n{\n\tthis.dropHandler.apply(this, arguments);\n\t\n\t// Had to move this to after the insert because it will\n\t// affect the scrollbars of the window in IE to try and\n\t// make the complete container visible.\n\t// LATER: Should be made optional.\n\tif (graph.container.style.visibility != 'hidden')\n\t{\n\t\tgraph.container.focus();\n\t}\n};\n\n__mxOutput.mxDragSource = typeof mxDragSource !== 'undefined' ? mxDragSource : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxToolbar\n * \n * Creates a toolbar inside a given DOM node. The toolbar may contain icons,\n * buttons and combo boxes.\n * \n * Event: mxEvent.SELECT\n * \n * Fires when an item was selected in the toolbar. The <code>function</code>\n * property contains the function that was selected in <selectMode>.\n * \n * Constructor: mxToolbar\n * \n * Constructs a toolbar in the specified container.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n */\nfunction mxToolbar(container)\n{\n\tthis.container = container;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxToolbar.prototype = new mxEventSource();\nmxToolbar.prototype.constructor = mxToolbar;\n\n/**\n * Variable: container\n * \n * Reference to the DOM nodes that contains the toolbar.\n */\nmxToolbar.prototype.container = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxToolbar.prototype.enabled = true;\n\n/**\n * Variable: noReset\n * \n * Specifies if <resetMode> requires a forced flag of true for resetting\n * the current mode in the toolbar. Default is false. This is set to true\n * if the toolbar item is double clicked to avoid a reset after a single\n * use of the item.\n */\nmxToolbar.prototype.noReset = false;\n\n/**\n * Variable: updateDefaultMode\n * \n * Boolean indicating if the default mode should be the last selected\n * switch mode or the first inserted switch mode. Default is true, that\n * is the last selected switch mode is the default mode. The default mode\n * is the mode to be selected after a reset of the toolbar. If this is\n * false, then the default mode is the first inserted mode item regardless\n * of what was last selected. Otherwise, the selected item after a reset is\n * the previously selected item.\n */\nmxToolbar.prototype.updateDefaultMode = true;\n\n/**\n * Function: addItem\n * \n * Adds the given function as an image with the specified title and icon\n * and returns the new image node.\n * \n * Parameters:\n * \n * title - Optional string that is used as the tooltip.\n * icon - Optional URL of the image to be used. If no URL is given, then a\n * button is created.\n * funct - Function to execute on a mouse click.\n * pressedIcon - Optional URL of the pressed image. Default is a gray\n * background.\n * style - Optional style classname. Default is mxToolbarItem.\n * factoryMethod - Optional factory method for popup menu, eg.\n * function(menu, evt, cell) { menu.addItem('Hello, World!'); }\n */\nmxToolbar.prototype.addItem = function(title, icon, funct, pressedIcon, style, factoryMethod)\n{\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\tvar initialClassName = style || ((factoryMethod != null) ?\n\t\t\t'mxToolbarMode' : 'mxToolbarItem');\n\timg.className = initialClassName;\n\timg.setAttribute('src', icon);\n\t\n\tif (title != null)\n\t{\n\t\tif (icon != null)\n\t\t{\n\t\t\timg.setAttribute('title', title);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.write(img, title);\n\t\t}\n\t}\n\t\n\tthis.container.appendChild(img);\n\n\t// Invokes the function on a click on the toolbar item\n\tif (funct != null)\n\t{\n\t\tmxEvent.addListener(img, 'click', funct);\n\t\t\n\t\tif (mxClient.IS_TOUCH)\n\t\t{\n\t\t\tmxEvent.addListener(img, 'touchend', funct);\n\t\t}\n\t}\n\n\tvar mouseHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', icon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = '';\n\t\t}\n\t});\n\n\t// Highlights the toolbar item with a gray background\n\t// while it is being clicked with the mouse\n\tmxEvent.addGestureListeners(img, mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', pressedIcon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = 'gray';\n\t\t}\n\t\t\n\t\t// Popup Menu\n\t\tif (factoryMethod != null)\n\t\t{\n\t\t\tif (this.menu == null)\n\t\t\t{\n\t\t\t\tthis.menu = new mxPopupMenu();\n\t\t\t\tthis.menu.init();\n\t\t\t}\n\t\t\t\n\t\t\tvar last = this.currentImg;\n\t\t\t\n\t\t\tif (this.menu.isMenuShowing())\n\t\t\t{\n\t\t\t\tthis.menu.hideMenu();\n\t\t\t}\n\t\t\t\n\t\t\tif (last != img)\n\t\t\t{\n\t\t\t\t// Redirects factory method to local factory method\n\t\t\t\tthis.currentImg = img;\n\t\t\t\tthis.menu.factoryMethod = factoryMethod;\n\t\t\t\t\n\t\t\t\tvar point = new mxPoint(\n\t\t\t\t\timg.offsetLeft,\n\t\t\t\t\timg.offsetTop + img.offsetHeight);\n\t\t\t\tthis.menu.popup(point.x, point.y, null, evt);\n\n\t\t\t\t// Sets and overrides to restore classname\n\t\t\t\tif (this.menu.isMenuShowing())\n\t\t\t\t{\n\t\t\t\t\timg.className = initialClassName + 'Selected';\n\t\t\t\t\t\n\t\t\t\t\tthis.menu.hideMenu = function()\n\t\t\t\t\t{\n\t\t\t\t\t\tmxPopupMenu.prototype.hideMenu.apply(this);\n\t\t\t\t\t\timg.className = initialClassName;\n\t\t\t\t\t\tthis.currentImg = null;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}), null, mouseHandler);\n\n\tmxEvent.addListener(img, 'mouseout', mouseHandler);\n\t\n\treturn img;\n};\n\n/**\n * Function: addCombo\n * \n * Adds and returns a new SELECT element using the given style. The element\n * is placed inside a DIV with the mxToolbarComboContainer style classname.\n * \n * Parameters:\n * \n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addCombo = function(style)\n{\n\tvar div = document.createElement('div');\n\tdiv.style.display = 'inline';\n\tdiv.className = 'mxToolbarComboContainer';\n\t\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tdiv.appendChild(select);\n\t\n\tthis.container.appendChild(div);\n\t\n\treturn select;\n};\n\n/**\n * Function: addCombo\n * \n * Adds and returns a new SELECT element using the given title as the\n * default element. The selection is reset to this element after each\n * change.\n * \n * Parameters:\n * \n * title - String that specifies the title of the default element.\n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addActionCombo = function(title, style)\n{\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tthis.addOption(select, title, null);\n\t\n\tmxEvent.addListener(select, 'change', function(evt)\n\t{\n\t\tvar value = select.options[select.selectedIndex];\n\t\tselect.selectedIndex = 0;\n\t\t\n\t\tif (value.funct != null)\n\t\t{\n\t\t\tvalue.funct(evt);\n\t\t}\n\t});\n\t\n\tthis.container.appendChild(select);\n\t\n\treturn select;\n};\n\n/**\n * Function: addOption\n * \n * Adds and returns a new OPTION element inside the given SELECT element.\n * If the given value is a function then it is stored in the option's funct\n * field.\n * \n * Parameters:\n * \n * combo - SELECT element that will contain the new entry.\n * title - String that specifies the title of the option.\n * value - Specifies the value associated with this option.\n */\nmxToolbar.prototype.addOption = function(combo, title, value)\n{\n\tvar option = document.createElement('option');\n\tmxUtils.writeln(option, title);\n\t\n\tif (typeof(value) == 'function')\n\t{\n\t\toption.funct = value;\n\t}\n\telse\n\t{\n\t\toption.setAttribute('value', value);\n\t}\n\t\n\tcombo.appendChild(option);\n\t\n\treturn option;\n};\n\n/**\n * Function: addSwitchMode\n * \n * Adds a new selectable item to the toolbar. Only one switch mode item may\n * be selected at a time. The currently selected item is the default item\n * after a reset of the toolbar.\n */\nmxToolbar.prototype.addSwitchMode = function(title, icon, funct, pressedIcon, style)\n{\n\tvar img = document.createElement('img');\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\t\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t{\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t}\n\t\t\n\t\tif (this.updateDefaultMode)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t}\n\t\t\n\t\tthis.selectedMode = img;\n\t\t\n\t\tvar tmp = img.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\timg.altIcon = img.getAttribute('src');\n\t\t\timg.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.className = img.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT));\n\t\tfunct();\n\t}));\n\t\n\tthis.container.appendChild(img);\n\t\n\tif (this.defaultMode == null)\n\t{\n\t\tthis.defaultMode = img;\n\t\t\n\t\t// Function should fire only once so\n\t\t// do not pass it with the select event\n\t\tthis.selectMode(img);\n\t\tfunct();\n\t}\n\t\n\treturn img;\n};\n\n/**\n * Function: addMode\n * \n * Adds a new item to the toolbar. The selection is typically reset after\n * the item has been consumed, for example by adding a new vertex to the\n * graph. The reset is not carried out if the item is double clicked.\n * \n * The function argument uses the following signature: funct(evt, cell) where\n * evt is the native mouse event and cell is the cell under the mouse.\n */\nmxToolbar.prototype.addMode = function(title, icon, funct, pressedIcon, style, toggle)\n{\n\ttoggle = (toggle != null) ? toggle : true;\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\t\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tif (this.enabled && toggle)\n\t{\n\t\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = false;\n\t\t}));\n\t\t\n\t\tmxEvent.addListener(img, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = true;\n\t\t}));\n\t\t\n\t\tif (this.defaultMode == null)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t\tthis.defaultFunction = funct;\n\t\t\tthis.selectMode(img, funct);\n\t\t}\n\t}\n\n\tthis.container.appendChild(img);\t\t\t\t\t\n\n\treturn img;\n};\n\n/**\n * Function: selectMode\n * \n * Resets the state of the previously selected mode and displays the given\n * DOM node as selected. This function fires a select event with the given\n * function as a parameter.\n */\nmxToolbar.prototype.selectMode = function(domNode, funct)\n{\n\tif (this.selectedMode != domNode)\n\t{\n\t\tif (this.selectedMode != null)\n\t\t{\n\t\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.selectedMode = domNode;\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT, \"function\", funct));\n\t}\n};\n\n/**\n * Function: resetMode\n * \n * Selects the default mode and resets the state of the previously selected\n * mode.\n */\nmxToolbar.prototype.resetMode = function(forced)\n{\n\tif ((forced || !this.noReset) && this.selectedMode != this.defaultMode)\n\t{\n\t\t// The last selected switch mode will be activated\n\t\t// so the function was already executed and is\n\t\t// no longer required here\n\t\tthis.selectMode(this.defaultMode, this.defaultFunction);\n\t}\n};\n\n/**\n * Function: addSeparator\n * \n * Adds the specifies image as a separator.\n * \n * Parameters:\n * \n * icon - URL of the separator icon.\n */\nmxToolbar.prototype.addSeparator = function(icon)\n{\n\treturn this.addItem(null, icon, null);\n};\n\n/**\n * Function: addBreak\n * \n * Adds a break to the container.\n */\nmxToolbar.prototype.addBreak = function()\n{\n\tmxUtils.br(this.container);\n};\n\n/**\n * Function: addLine\n * \n * Adds a horizontal line to the container.\n */\nmxToolbar.prototype.addLine = function()\n{\n\tvar hr = document.createElement('hr');\n\t\n\thr.style.marginRight = '6px';\n\thr.setAttribute('size', '1');\n\t\n\tthis.container.appendChild(hr);\n};\n\n/**\n * Function: destroy\n * \n * Removes the toolbar and all its associated resources.\n */\nmxToolbar.prototype.destroy = function ()\n{\n\tmxEvent.release(this.container);\n\tthis.container = null;\n\tthis.defaultMode = null;\n\tthis.defaultFunction = null;\n\tthis.selectedMode = null;\n\t\n\tif (this.menu != null)\n\t{\n\t\tthis.menu.destroy();\n\t}\n};\n\n__mxOutput.mxToolbar = typeof mxToolbar !== 'undefined' ? mxToolbar : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxUndoableEdit\n * \n * Implements a composite undoable edit. Here is an example for a custom change\n * which gets executed via the model:\n * \n * (code)\n * function CustomChange(model, name)\n * {\n *   this.model = model;\n *   this.name = name;\n *   this.previous = name;\n * };\n * \n * CustomChange.prototype.execute = function()\n * {\n *   var tmp = this.model.name;\n *   this.model.name = this.previous;\n *   this.previous = tmp;\n * };\n * \n * var name = prompt('Enter name');\n * graph.model.execute(new CustomChange(graph.model, name));\n * (end)\n * \n * Event: mxEvent.EXECUTED\n * \n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The <code>change</code> property contains the change that was executed.\n * \n * Event: mxEvent.START_EDIT\n * \n * Fires before a set of changes will be executed in <undo> or <redo>.\n * This event contains no properties.\n * \n * Event: mxEvent.END_EDIT\n *\n * Fires after a set of changeswas executed in <undo> or <redo>.\n * This event contains no properties.\n * \n * Constructor: mxUndoableEdit\n * \n * Constructs a new undoable edit for the given source.\n */\nfunction mxUndoableEdit(source, significant)\n{\n\tthis.source = source;\n\tthis.changes = [];\n\tthis.significant = (significant != null) ? significant : true;\n};\n\n/**\n * Variable: source\n * \n * Specifies the source of the edit.\n */\nmxUndoableEdit.prototype.source = null;\n\n/**\n * Variable: changes\n * \n * Array that contains the changes that make up this edit. The changes are\n * expected to either have an undo and redo function, or an execute\n * function. Default is an empty array.\n */\nmxUndoableEdit.prototype.changes = null;\n\n/**\n * Variable: significant\n * \n * Specifies if the undoable change is significant.\n * Default is true.\n */\nmxUndoableEdit.prototype.significant = null;\n\n/**\n * Variable: undone\n * \n * Specifies if this edit has been undone. Default is false.\n */\nmxUndoableEdit.prototype.undone = false;\n\n/**\n * Variable: redone\n * \n * Specifies if this edit has been redone. Default is false.\n */\nmxUndoableEdit.prototype.redone = false;\n\n/**\n * Function: isEmpty\n * \n * Returns true if the this edit contains no changes.\n */\nmxUndoableEdit.prototype.isEmpty = function()\n{\n\treturn this.changes.length == 0;\n};\n\n/**\n * Function: isSignificant\n * \n * Returns <significant>.\n */\nmxUndoableEdit.prototype.isSignificant = function()\n{\n\treturn this.significant;\n};\n\n/**\n * Function: add\n * \n * Adds the specified change to this edit. The change is an object that is\n * expected to either have an undo and redo, or an execute function.\n */\nmxUndoableEdit.prototype.add = function(change)\n{\n\tthis.changes.push(change);\n};\n\n/**\n * Function: notify\n * \n * Hook to notify any listeners of the changes after an <undo> or <redo>\n * has been carried out. This implementation is empty.\n */\nmxUndoableEdit.prototype.notify = function() { };\n\n/**\n * Function: die\n * \n * Hook to free resources after the edit has been removed from the command\n * history. This implementation is empty.\n */\nmxUndoableEdit.prototype.die = function() { };\n\n/**\n * Function: undo\n * \n * Undoes all changes in this edit.\n */\nmxUndoableEdit.prototype.undo = function()\n{\n\tif (!this.undone)\n\t{\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t\tvar count = this.changes.length;\n\t\t\n\t\tfor (var i = count - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar change = this.changes[i];\n\t\t\t\n\t\t\tif (change.execute != null)\n\t\t\t{\n\t\t\t\tchange.execute();\n\t\t\t}\n\t\t\telse if (change.undo != null)\n\t\t\t{\n\t\t\t\tchange.undo();\n\t\t\t}\n\t\t\t\n\t\t\t// New global executed event\n\t\t\tthis.source.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\t\t}\n\t\t\n\t\tthis.undone = true;\n\t\tthis.redone = false;\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tthis.notify();\n};\n\n/**\n * Function: redo\n * \n * Redoes all changes in this edit.\n */\nmxUndoableEdit.prototype.redo = function()\n{\n\tif (!this.redone)\n\t{\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t\tvar count = this.changes.length;\n\t\t\n\t\tfor (var i = 0; i < count; i++)\n\t\t{\n\t\t\tvar change = this.changes[i];\n\t\t\t\n\t\t\tif (change.execute != null)\n\t\t\t{\n\t\t\t\tchange.execute();\n\t\t\t}\n\t\t\telse if (change.redo != null)\n\t\t\t{\n\t\t\t\tchange.redo();\n\t\t\t}\n\t\t\t\n\t\t\t// New global executed event\n\t\t\tthis.source.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\t\t}\n\t\t\n\t\tthis.undone = false;\n\t\tthis.redone = true;\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tthis.notify();\n};\n\n__mxOutput.mxUndoableEdit = typeof mxUndoableEdit !== 'undefined' ? mxUndoableEdit : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxUndoManager\n *\n * Implements a command history. When changing the graph model, an\n * <mxUndoableChange> object is created at the start of the transaction (when\n * model.beginUpdate is called). All atomic changes are then added to this\n * object until the last model.endUpdate call, at which point the\n * <mxUndoableEdit> is dispatched in an event, and added to the history inside\n * <mxUndoManager>. This is done by an event listener in\n * <mxEditor.installUndoHandler>.\n * \n * Each atomic change of the model is represented by an object (eg.\n * <mxRootChange>, <mxChildChange>, <mxTerminalChange> etc) which contains the\n * complete undo information. The <mxUndoManager> also listens to the\n * <mxGraphView> and stores it's changes to the current root as insignificant\n * undoable changes, so that drilling (step into, step up) is undone.\n * \n * This means when you execute an atomic change on the model, then change the\n * current root on the view and click undo, the change of the root will be\n * undone together with the change of the model so that the display represents\n * the state at which the model was changed. However, these changes are not\n * transmitted for sharing as they do not represent a state change.\n *\n * Example:\n * \n * When adding an undo manager to a graph, make sure to add it\n * to the model and the view as well to maintain a consistent\n * display across multiple undo/redo steps.\n *\n * (code)\n * var undoManager = new mxUndoManager();\n * var listener = function(sender, evt)\n * {\n *   undoManager.undoableEditHappened(evt.getProperty('edit'));\n * };\n * graph.getModel().addListener(mxEvent.UNDO, listener);\n * graph.getView().addListener(mxEvent.UNDO, listener);\n * (end)\n * \n * The code creates a function that informs the undoManager\n * of an undoable edit and binds it to the undo event of\n * <mxGraphModel> and <mxGraphView> using\n * <mxEventSource.addListener>.\n * \n * Event: mxEvent.CLEAR\n * \n * Fires after <clear> was invoked. This event has no properties.\n * \n * Event: mxEvent.UNDO\n * \n * Fires afer a significant edit was undone in <undo>. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was undone.\n * \n * Event: mxEvent.REDO\n * \n * Fires afer a significant edit was redone in <redo>. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was redone.\n * \n * Event: mxEvent.ADD\n * \n * Fires after an undoable edit was added to the history. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was added.\n * \n * Constructor: mxUndoManager\n *\n * Constructs a new undo manager with the given history size. If no history\n * size is given, then a default size of 100 steps is used.\n */\nfunction mxUndoManager(size)\n{\n\tthis.size = (size != null) ? size : 100;\n\tthis.clear();\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUndoManager.prototype = new mxEventSource();\nmxUndoManager.prototype.constructor = mxUndoManager;\n\n/**\n * Variable: size\n * \n * Maximum command history size. 0 means unlimited history. Default is\n * 100.\n */\nmxUndoManager.prototype.size = null;\n\n/**\n * Variable: history\n * \n * Array that contains the steps of the command history.\n */\nmxUndoManager.prototype.history = null;\n\n/**\n * Variable: indexOfNextAdd\n * \n * Index of the element to be added next.\n */\nmxUndoManager.prototype.indexOfNextAdd = 0;\n\n/**\n * Function: isEmpty\n * \n * Returns true if the history is empty.\n */\nmxUndoManager.prototype.isEmpty = function()\n{\n\treturn this.history.length == 0;\n};\n\n/**\n * Function: clear\n * \n * Clears the command history.\n */\nmxUndoManager.prototype.clear = function()\n{\n\tthis.history = [];\n\tthis.indexOfNextAdd = 0;\n\tthis.fireEvent(new mxEventObject(mxEvent.CLEAR));\n};\n\n/**\n * Function: canUndo\n * \n * Returns true if an undo is possible.\n */\nmxUndoManager.prototype.canUndo = function()\n{\n\treturn this.indexOfNextAdd > 0;\n};\n\n/**\n * Function: undo\n * \n * Undoes the last change.\n */\nmxUndoManager.prototype.undo = function()\n{\n    while (this.indexOfNextAdd > 0)\n    {\n        var edit = this.history[--this.indexOfNextAdd];\n        edit.undo();\n\n\t\tif (edit.isSignificant())\n        {\n        \tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n            break;\n        }\n    }\n};\n\n/**\n * Function: canRedo\n * \n * Returns true if a redo is possible.\n */\nmxUndoManager.prototype.canRedo = function()\n{\n\treturn this.indexOfNextAdd < this.history.length;\n};\n\n/**\n * Function: redo\n * \n * Redoes the last change.\n */\nmxUndoManager.prototype.redo = function()\n{\n    var n = this.history.length;\n    \n    while (this.indexOfNextAdd < n)\n    {\n        var edit =  this.history[this.indexOfNextAdd++];\n        edit.redo();\n        \n        if (edit.isSignificant())\n        {\n        \tthis.fireEvent(new mxEventObject(mxEvent.REDO, 'edit', edit));\n            break;\n        }\n    }\n};\n\n/**\n * Function: undoableEditHappened\n * \n * Method to be called to add new undoable edits to the <history>.\n */\nmxUndoManager.prototype.undoableEditHappened = function(undoableEdit)\n{\n\tthis.trim();\n\t\n\tif (this.size > 0 &&\n\t\tthis.size == this.history.length)\n\t{\n\t\tthis.history.shift();\n\t}\n\t\n\tthis.history.push(undoableEdit);\n\tthis.indexOfNextAdd = this.history.length;\n\tthis.fireEvent(new mxEventObject(mxEvent.ADD, 'edit', undoableEdit));\n};\n\n/**\n * Function: trim\n * \n * Removes all pending steps after <indexOfNextAdd> from the history,\n * invoking die on each edit. This is called from <undoableEditHappened>.\n */\nmxUndoManager.prototype.trim = function()\n{\n\tif (this.history.length > this.indexOfNextAdd)\n\t{\n\t\tvar edits = this.history.splice(this.indexOfNextAdd,\n\t\t\tthis.history.length - this.indexOfNextAdd);\n\t\t\t\n\t\tfor (var i = 0; i < edits.length; i++)\n\t\t{\n\t\t\tedits[i].die();\n\t\t}\n\t}\n};\n\n__mxOutput.mxUndoManager = typeof mxUndoManager !== 'undefined' ? mxUndoManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxUrlConverter\n * \n * Converts relative and absolute URLs to absolute URLs with protocol and domain.\n */\nvar mxUrlConverter = function()\n{\n\t// Empty constructor\n};\n\n/**\n * Variable: enabled\n * \n * Specifies if the converter is enabled. Default is true.\n */\nmxUrlConverter.prototype.enabled = true;\n\n/**\n * Variable: baseUrl\n * \n * Specifies the base URL to be used as a prefix for relative URLs.\n */\nmxUrlConverter.prototype.baseUrl = null;\n\n/**\n * Variable: baseDomain\n * \n * Specifies the base domain to be used as a prefix for absolute URLs.\n */\nmxUrlConverter.prototype.baseDomain = null;\n\n/**\n * Function: updateBaseUrl\n * \n * Private helper function to update the base URL.\n */\nmxUrlConverter.prototype.updateBaseUrl = function()\n{\n\tthis.baseDomain = location.protocol + '//' + location.host;\n\tthis.baseUrl = this.baseDomain + location.pathname;\n\tvar tmp = this.baseUrl.lastIndexOf('/');\n\t\n\t// Strips filename etc\n\tif (tmp > 0)\n\t{\n\t\tthis.baseUrl = this.baseUrl.substring(0, tmp + 1);\n\t}\n};\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxUrlConverter.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxUrlConverter.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: getBaseUrl\n * \n * Returns <baseUrl>.\n */\nmxUrlConverter.prototype.getBaseUrl = function()\n{\n\treturn this.baseUrl;\n};\n\n/**\n * Function: setBaseUrl\n * \n * Sets <baseUrl>.\n */\nmxUrlConverter.prototype.setBaseUrl = function(value)\n{\n\tthis.baseUrl = value;\n};\n\n/**\n * Function: getBaseDomain\n * \n * Returns <baseDomain>.\n */\nmxUrlConverter.prototype.getBaseDomain = function()\n{\n\treturn this.baseDomain;\n},\n\n/**\n * Function: setBaseDomain\n * \n * Sets <baseDomain>.\n */\nmxUrlConverter.prototype.setBaseDomain = function(value)\n{\n\tthis.baseDomain = value;\n},\n\n/**\n * Function: isRelativeUrl\n * \n * Returns true if the given URL is relative.\n */\nmxUrlConverter.prototype.isRelativeUrl = function(url)\n{\n\treturn url.substring(0, 2) != '//' && url.substring(0, 7) != 'http://' &&\n\t\turl.substring(0, 8) != 'https://' && url.substring(0, 10) != 'data:image' &&\n\t\turl.substring(0, 7) != 'file://';\n};\n\n/**\n * Function: convert\n * \n * Converts the given URL to an absolute URL with protol and domain.\n * Relative URLs are first converted to absolute URLs.\n */\nmxUrlConverter.prototype.convert = function(url)\n{\n\tif (this.isEnabled() && this.isRelativeUrl(url))\n\t{\n\t\tif (this.getBaseUrl() == null)\n\t\t{\n\t\t\tthis.updateBaseUrl();\n\t\t}\n\t\t\n\t\tif (url.charAt(0) == '/')\n\t\t{\n\t\t\turl = this.getBaseDomain() + url;\n\t\t}\n\t\telse\n\t\t{\n\t\t\turl = this.getBaseUrl() + url;\n\t\t}\n\t}\n\t\n\treturn url;\n};\n\n__mxOutput.mxUrlConverter = typeof mxUrlConverter !== 'undefined' ? mxUrlConverter : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPanningManager\n *\n * Implements a handler for panning.\n */\nfunction mxPanningManager(graph)\n{\n\tthis.thread = null;\n\tthis.active = false;\n\tthis.tdx = 0;\n\tthis.tdy = 0;\n\tthis.t0x = 0;\n\tthis.t0y = 0;\n\tthis.dx = 0;\n\tthis.dy = 0;\n\tthis.scrollbars = false;\n\tthis.scrollLeft = 0;\n\tthis.scrollTop = 0;\n\t\n\tthis.mouseListener =\n\t{\n\t    mouseDown: function(sender, me) { },\n\t    mouseMove: function(sender, me) { },\n\t    mouseUp: mxUtils.bind(this, function(sender, me)\n\t    {\n\t    \tif (this.active)\n\t    \t{\n\t    \t\tthis.stop();\n\t    \t}\n\t    })\n\t};\n\t\n\tgraph.addMouseListener(this.mouseListener);\n\t\n\tthis.mouseUpListener = mxUtils.bind(this, function()\n\t{\n\t    \tif (this.active)\n\t    \t{\n\t    \t\tthis.stop();\n\t    \t}\n\t});\n\t\n\t// Stops scrolling on every mouseup anywhere in the document\n\tmxEvent.addListener(document, 'mouseup', this.mouseUpListener);\n\t\n\tvar createThread = mxUtils.bind(this, function()\n\t{\n\t    \tthis.scrollbars = mxUtils.hasScrollbars(graph.container);\n\t    \tthis.scrollLeft = graph.container.scrollLeft;\n\t    \tthis.scrollTop = graph.container.scrollTop;\n\t\n\t    \treturn window.setInterval(mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.tdx -= this.dx;\n\t\t\tthis.tdy -= this.dy;\n\n\t\t\tif (this.scrollbars)\n\t\t\t{\n\t\t\t\tvar left = -graph.container.scrollLeft - Math.ceil(this.dx);\n\t\t\t\tvar top = -graph.container.scrollTop - Math.ceil(this.dy);\n\t\t\t\tgraph.panGraph(left, top);\n\t\t\t\tgraph.panDx = this.scrollLeft - graph.container.scrollLeft;\n\t\t\t\tgraph.panDy = this.scrollTop - graph.container.scrollTop;\n\t\t\t\tgraph.fireEvent(new mxEventObject(mxEvent.PAN));\n\t\t\t\t// TODO: Implement graph.autoExtend\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgraph.panGraph(this.getDx(), this.getDy());\n\t\t\t}\n\t\t}), this.delay);\n\t});\n\t\n\tthis.isActive = function()\n\t{\n\t\treturn active;\n\t};\n\t\n\tthis.getDx = function()\n\t{\n\t\treturn Math.round(this.tdx);\n\t};\n\t\n\tthis.getDy = function()\n\t{\n\t\treturn Math.round(this.tdy);\n\t};\n\t\n\tthis.start = function()\n\t{\n\t\tthis.t0x = graph.view.translate.x;\n\t\tthis.t0y = graph.view.translate.y;\n\t\tthis.active = true;\n\t};\n\t\n\tthis.panTo = function(x, y, w, h)\n\t{\n\t\tif (!this.active)\n\t\t{\n\t\t\tthis.start();\n\t\t}\n\t\t\n    \tthis.scrollLeft = graph.container.scrollLeft;\n    \tthis.scrollTop = graph.container.scrollTop;\n\t\t\n\t\tw = (w != null) ? w : 0;\n\t\th = (h != null) ? h : 0;\n\t\t\n\t\tvar c = graph.container;\n\t\tthis.dx = x + w - c.scrollLeft - c.clientWidth;\n\t\t\n\t\tif (this.dx < 0 && Math.abs(this.dx) < this.border)\n\t\t{\n\t\t\tthis.dx = this.border + this.dx;\n\t\t}\n\t\telse if (this.handleMouseOut)\n\t\t{\n\t\t\tthis.dx = Math.max(this.dx, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dx = 0;\n\t\t}\n\t\t\n\t\tif (this.dx == 0)\n\t\t{\n\t\t\tthis.dx = x - c.scrollLeft;\n\t\t\t\n\t\t\tif (this.dx > 0 && this.dx < this.border)\n\t\t\t{\n\t\t\t\tthis.dx = this.dx - this.border;\n\t\t\t}\n\t\t\telse if (this.handleMouseOut)\n\t\t\t{\n\t\t\t\tthis.dx = Math.min(0, this.dx);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.dx = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.dy = y + h - c.scrollTop - c.clientHeight;\n\n\t\tif (this.dy < 0 && Math.abs(this.dy) < this.border)\n\t\t{\n\t\t\tthis.dy = this.border + this.dy;\n\t\t}\n\t\telse if (this.handleMouseOut)\n\t\t{\n\t\t\tthis.dy = Math.max(this.dy, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dy = 0;\n\t\t}\n\t\t\n\t\tif (this.dy == 0)\n\t\t{\n\t\t\tthis.dy = y - c.scrollTop;\n\t\t\t\n\t\t\tif (this.dy > 0 && this.dy < this.border)\n\t\t\t{\n\t\t\t\tthis.dy = this.dy - this.border;\n\t\t\t}\n\t\t\telse if (this.handleMouseOut)\n\t\t\t{\n\t\t\t\tthis.dy = Math.min(0, this.dy);\n\t\t\t} \n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.dy = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.dx != 0 || this.dy != 0)\n\t\t{\n\t\t\tthis.dx *= this.damper;\n\t\t\tthis.dy *= this.damper;\n\t\t\t\n\t\t\tif (this.thread == null)\n\t\t\t{\n\t\t\t\tthis.thread = createThread();\n\t\t\t}\n\t\t}\n\t\telse if (this.thread != null)\n\t\t{\n\t\t\twindow.clearInterval(this.thread);\n\t\t\tthis.thread = null;\n\t\t}\n\t};\n\t\n\tthis.stop = function()\n\t{\n\t\tif (this.active)\n\t\t{\n\t\t\tthis.active = false;\n\t\t\n\t\t\tif (this.thread != null)\n\t    \t{\n\t\t\t\twindow.clearInterval(this.thread);\n\t\t\t\tthis.thread = null;\n\t    \t}\n\t\t\t\n\t\t\tthis.tdx = 0;\n\t\t\tthis.tdy = 0;\n\t\t\t\n\t\t\tif (!this.scrollbars)\n\t\t\t{\n\t\t\t\tvar px = graph.panDx;\n\t\t\t\tvar py = graph.panDy;\n\t\t    \t\n\t\t    \tif (px != 0 || py != 0)\n\t\t    \t{\n\t\t    \t\tgraph.panGraph(0, 0);\n\t\t\t    \tgraph.view.setTranslate(this.t0x + px / graph.view.scale, this.t0y + py / graph.view.scale);\n\t\t    \t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgraph.panDx = 0;\n\t\t\t\tgraph.panDy = 0;\n\t\t\t\tgraph.fireEvent(new mxEventObject(mxEvent.PAN));\n\t\t\t}\n\t\t}\n\t};\n\t\n\tthis.destroy = function()\n\t{\n\t\tgraph.removeMouseListener(this.mouseListener);\n\t\tmxEvent.removeListener(document, 'mouseup', this.mouseUpListener);\n\t};\n};\n\n/**\n * Variable: damper\n * \n * Damper value for the panning. Default is 1/6.\n */\nmxPanningManager.prototype.damper = 1/6;\n\n/**\n * Variable: delay\n * \n * Delay in milliseconds for the panning. Default is 10.\n */\nmxPanningManager.prototype.delay = 10;\n\n/**\n * Variable: handleMouseOut\n * \n * Specifies if mouse events outside of the component should be handled. Default is true. \n */\nmxPanningManager.prototype.handleMouseOut = true;\n\n/**\n * Variable: border\n * \n * Border to handle automatic panning inside the component. Default is 0 (disabled).\n */\nmxPanningManager.prototype.border = 0;\n\n__mxOutput.mxPanningManager = typeof mxPanningManager !== 'undefined' ? mxPanningManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPopupMenu\n * \n * Basic popup menu. To add a vertical scrollbar to a given submenu, the\n * following code can be used.\n * \n * (code)\n * var mxPopupMenuShowMenu = mxPopupMenu.prototype.showMenu;\n * mxPopupMenu.prototype.showMenu = function()\n * {\n *   mxPopupMenuShowMenu.apply(this, arguments);\n *   \n *   this.div.style.overflowY = 'auto';\n *   this.div.style.overflowX = 'hidden';\n *   this.div.style.maxHeight = '160px';\n * };\n * (end)\n * \n * Constructor: mxPopupMenu\n * \n * Constructs a popupmenu.\n * \n * Event: mxEvent.SHOW\n *\n * Fires after the menu has been shown in <popup>.\n */\nfunction mxPopupMenu(factoryMethod)\n{\n\tthis.factoryMethod = factoryMethod;\n\t\n\tif (factoryMethod != null)\n\t{\n\t\tthis.init();\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxPopupMenu.prototype = new mxEventSource();\nmxPopupMenu.prototype.constructor = mxPopupMenu;\n\n/**\n * Variable: submenuImage\n * \n * URL of the image to be used for the submenu icon.\n */\nmxPopupMenu.prototype.submenuImage = mxClient.imageBasePath + '/submenu.gif';\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the popupmenu and its shadow. Default is 1006.\n */\nmxPopupMenu.prototype.zIndex = 10006;\n\n/**\n * Variable: factoryMethod\n * \n * Function that is used to create the popup menu. The function takes the\n * current panning handler, the <mxCell> under the mouse and the mouse\n * event that triggered the call as arguments.\n */\nmxPopupMenu.prototype.factoryMethod = null;\n\n/**\n * Variable: useLeftButtonForPopup\n * \n * Specifies if popupmenus should be activated by clicking the left mouse\n * button. Default is false.\n */\nmxPopupMenu.prototype.useLeftButtonForPopup = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxPopupMenu.prototype.enabled = true;\n\n/**\n * Variable: itemCount\n * \n * Contains the number of times <addItem> has been called for a new menu.\n */\nmxPopupMenu.prototype.itemCount = 0;\n\n/**\n * Variable: autoExpand\n * \n * Specifies if submenus should be expanded on mouseover. Default is false.\n */\nmxPopupMenu.prototype.autoExpand = false;\n\n/**\n * Variable: smartSeparators\n * \n * Specifies if separators should only be added if a menu item follows them.\n * Default is false.\n */\nmxPopupMenu.prototype.smartSeparators = false;\n\n/**\n * Variable: labels\n * \n * Specifies if any labels should be visible. Default is true.\n */\nmxPopupMenu.prototype.labels = true;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxPopupMenu.prototype.init = function()\n{\n\t// Adds the inner table\n\tthis.table = document.createElement('table');\n\tthis.table.className = 'mxPopupMenu';\n\t\n\tthis.tbody = document.createElement('tbody');\n\tthis.table.appendChild(this.tbody);\n\n\t// Adds the outer div\n\tthis.div = document.createElement('div');\n\tthis.div.className = 'mxPopupMenu';\n\tthis.div.style.display = 'inline';\n\tthis.div.style.zIndex = this.zIndex;\n\tthis.div.appendChild(this.table);\n\n\t// Disables the context menu on the outer div\n\tmxEvent.disableContextMenu(this.div);\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxPopupMenu.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n */\nmxPopupMenu.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isPopupTrigger\n * \n * Returns true if the given event is a popupmenu trigger for the optional\n * given cell.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the mouse event.\n */\nmxPopupMenu.prototype.isPopupTrigger = function(me)\n{\n\treturn me.isPopupTrigger() || (this.useLeftButtonForPopup && mxEvent.isLeftMouseButton(me.getEvent()));\n};\n\n/**\n * Function: addItem\n * \n * Adds the given item to the given parent item. If no parent item is specified\n * then the item is added to the top-level menu. The return value may be used\n * as the parent argument, ie. as a submenu item. The return value is the table\n * row that represents the item.\n * \n * Paramters:\n * \n * title - String that represents the title of the menu item.\n * image - Optional URL for the image icon.\n * funct - Function associated that takes a mouseup or touchend event.\n * parent - Optional item returned by <addItem>.\n * iconCls - Optional string that represents the CSS class for the image icon.\n * IconsCls is ignored if image is given.\n * enabled - Optional boolean indicating if the item is enabled. Default is true.\n * active - Optional boolean indicating if the menu should implement any event handling.\n * Default is true.\n */\nmxPopupMenu.prototype.addItem = function(title, image, funct, parent, iconCls, enabled, active)\n{\n\tparent = parent || this;\n\tthis.itemCount++;\n\t\n\t// Smart separators only added if element contains items\n\tif (parent.willAddSeparator)\n\t{\n\t\tif (parent.containsItems)\n\t\t{\n\t\t\tthis.addSeparator(parent, true);\n\t\t}\n\n\t\tparent.willAddSeparator = false;\n\t}\n\n\tparent.containsItems = true;\n\tvar tr = document.createElement('tr');\n\ttr.className = 'mxPopupMenuItem';\n\tvar col1 = document.createElement('td');\n\tcol1.className = 'mxPopupMenuIcon';\n\n\t// Adds the given image into the first column\n\tif (image != null)\n\t{\n\t\tvar img = document.createElement('img');\n\t\timg.src = image;\n\t\tcol1.appendChild(img);\n\t}\n\telse if (iconCls != null)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.className = iconCls;\n\t\tcol1.appendChild(div);\n\t}\n\t\n\ttr.appendChild(col1);\n\t\n\tif (this.labels)\n\t{\n\t\tvar col2 = document.createElement('td');\n\t\tcol2.className = 'mxPopupMenuItem' +\n\t\t\t((enabled != null && !enabled) ? ' mxDisabled' : '');\n\t\t\n\t\tmxUtils.write(col2, title);\n\t\tcol2.align = 'left';\n\t\ttr.appendChild(col2);\n\t\n\t\tvar col3 = document.createElement('td');\n\t\tcol3.className = 'mxPopupMenuItem' +\n\t\t\t((enabled != null && !enabled) ? ' mxDisabled' : '');\n\t\tcol3.style.paddingRight = '6px';\n\t\tcol3.style.textAlign = 'right';\n\t\t\n\t\ttr.appendChild(col3);\n\t\t\n\t\tif (parent.div == null)\n\t\t{\n\t\t\tthis.createSubmenu(parent);\n\t\t}\n\t}\n\t\n\tparent.tbody.appendChild(tr);\n\n\tif (active != false && enabled != false)\n\t{\n\t\tvar currentSelection = null;\n\t\t\n\t\tmxEvent.addGestureListeners(tr,\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tthis.eventReceiver = tr;\n\t\t\t\t\n\t\t\t\tif (parent.activeRow != tr && parent.activeRow != parent)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != null && parent.activeRow.div.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideSubmenu(parent);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (tr.div != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showSubmenu(parent, tr);\n\t\t\t\t\t\tparent.activeRow = tr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Workaround for lost current selection in page because of focus in IE\n\t\t\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t\t\t{\n\t\t\t\t\tcurrentSelection = document.selection.createRange();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (parent.activeRow != tr && parent.activeRow != parent)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != null && parent.activeRow.div.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideSubmenu(parent);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.autoExpand && tr.div != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showSubmenu(parent, tr);\n\t\t\t\t\t\tparent.activeRow = tr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// Sets hover style because TR in IE doesn't have hover\n\t\t\t\ttr.className = 'mxPopupMenuItemHover';\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\t// EventReceiver avoids clicks on a submenu item\n\t\t\t\t// which has just been shown in the mousedown\n\t\t\t\tif (this.eventReceiver == tr)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != tr)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideMenu();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for lost current selection in page because of focus in IE\n\t\t\t\t\tif (currentSelection != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Workaround for \"unspecified error\" in IE8 standards\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentSelection.select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentSelection = null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (funct != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfunct(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.eventReceiver = null;\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t})\n\t\t);\n\t\n\t\t// Resets hover style because TR in IE doesn't have hover\n\t\tmxEvent.addListener(tr, 'mouseout',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\ttr.className = 'mxPopupMenuItem';\n\t\t\t})\n\t\t);\n\t}\n\t\n\treturn tr;\n};\n\n/**\n * Adds a checkmark to the given menuitem.\n */\nmxPopupMenu.prototype.addCheckmark = function(item, img)\n{\n\tvar td = item.firstChild.nextSibling;\n\ttd.style.backgroundImage = 'url(\\'' + img + '\\')';\n\ttd.style.backgroundRepeat = 'no-repeat';\n\ttd.style.backgroundPosition = '2px 50%';\n};\n\n/**\n * Function: createSubmenu\n * \n * Creates the nodes required to add submenu items inside the given parent\n * item. This is called in <addItem> if a parent item is used for the first\n * time. This adds various DOM nodes and a <submenuImage> to the parent.\n * \n * Parameters:\n * \n * parent - An item returned by <addItem>.\n */\nmxPopupMenu.prototype.createSubmenu = function(parent)\n{\n\tparent.table = document.createElement('table');\n\tparent.table.className = 'mxPopupMenu';\n\n\tparent.tbody = document.createElement('tbody');\n\tparent.table.appendChild(parent.tbody);\n\n\tparent.div = document.createElement('div');\n\tparent.div.className = 'mxPopupMenu';\n\n\tparent.div.style.position = 'absolute';\n\tparent.div.style.display = 'inline';\n\tparent.div.style.zIndex = this.zIndex;\n\t\n\tparent.div.appendChild(parent.table);\n\t\n\tvar img = document.createElement('img');\n\timg.setAttribute('src', this.submenuImage);\n\t\n\t// Last column of the submenu item in the parent menu\n\ttd = parent.firstChild.nextSibling.nextSibling;\n\ttd.appendChild(img);\n};\n\n/**\n * Function: showSubmenu\n * \n * Shows the submenu inside the given parent row.\n */\nmxPopupMenu.prototype.showSubmenu = function(parent, row)\n{\n\tif (row.div != null)\n\t{\n\t\trow.div.style.left = (parent.div.offsetLeft +\n\t\t\trow.offsetLeft+row.offsetWidth - 1) + 'px';\n\t\trow.div.style.top = (parent.div.offsetTop+row.offsetTop) + 'px';\n\t\tdocument.body.appendChild(row.div);\n\t\t\n\t\t// Moves the submenu to the left side if there is no space\n\t\tvar left = parseInt(row.div.offsetLeft);\n\t\tvar width = parseInt(row.div.offsetWidth);\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(document);\n\t\t\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\t\n\t\tvar right = offset.x + (b.clientWidth || d.clientWidth);\n\t\t\n\t\tif (left + width > right)\n\t\t{\n\t\t\trow.div.style.left = Math.max(0, (parent.div.offsetLeft - width + ((mxClient.IS_IE) ? 6 : -6))) + 'px';\n\t\t}\n\t\t\n\t\tmxUtils.fit(row.div);\n\t}\n};\n\n/**\n * Function: addSeparator\n * \n * Adds a horizontal separator in the given parent item or the top-level menu\n * if no parent is specified.\n * \n * Parameters:\n * \n * parent - Optional item returned by <addItem>.\n * force - Optional boolean to ignore <smartSeparators>. Default is false.\n */\nmxPopupMenu.prototype.addSeparator = function(parent, force)\n{\n\tparent = parent || this;\n\t\n\tif (this.smartSeparators && !force)\n\t{\n\t\tparent.willAddSeparator = true;\n\t}\n\telse if (parent.tbody != null)\n\t{\n\t\tparent.willAddSeparator = false;\n\t\tvar tr = document.createElement('tr');\n\t\t\n\t\tvar col1 = document.createElement('td');\n\t\tcol1.className = 'mxPopupMenuIcon';\n\t\tcol1.style.padding = '0 0 0 0px';\n\t\t\n\t\ttr.appendChild(col1);\n\t\t\n\t\tvar col2 = document.createElement('td');\n\t\tcol2.style.padding = '0 0 0 0px';\n\t\tcol2.setAttribute('colSpan', '2');\n\t\n\t\tvar hr = document.createElement('hr');\n\t\thr.setAttribute('size', '1');\n\t\tcol2.appendChild(hr);\n\t\t\n\t\ttr.appendChild(col2);\n\t\t\n\t\tparent.tbody.appendChild(tr);\n\t}\n};\n\n/**\n * Function: popup\n * \n * Shows the popup menu for the given event and cell.\n * \n * Example:\n * \n * (code)\n * graph.panningHandler.popup = function(x, y, cell, evt)\n * {\n *   mxUtils.alert('Hello, World!');\n * }\n * (end)\n */\nmxPopupMenu.prototype.popup = function(x, y, cell, evt)\n{\n\tif (this.div != null && this.tbody != null && this.factoryMethod != null)\n\t{\n\t\tthis.div.style.left = x + 'px';\n\t\tthis.div.style.top = y + 'px';\n\t\t\n\t\t// Removes all child nodes from the existing menu\n\t\twhile (this.tbody.firstChild != null)\n\t\t{\n\t\t\tmxEvent.release(this.tbody.firstChild);\n\t\t\tthis.tbody.removeChild(this.tbody.firstChild);\n\t\t}\n\t\t\n\t\tthis.itemCount = 0;\n\t\tthis.factoryMethod(this, cell, evt);\n\t\t\n\t\tif (this.itemCount > 0)\n\t\t{\n\t\t\tthis.showMenu();\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.SHOW));\n\t\t}\n\t}\n};\n\n/**\n * Function: isMenuShowing\n * \n * Returns true if the menu is showing.\n */\nmxPopupMenu.prototype.isMenuShowing = function()\n{\n\treturn this.div != null && this.div.parentNode == document.body;\n};\n\n/**\n * Function: showMenu\n * \n * Shows the menu.\n */\nmxPopupMenu.prototype.showMenu = function()\n{\n\t// Disables filter-based shadow in IE9 standards mode\n\tif (document.documentMode >= 9)\n\t{\n\t\tthis.div.style.filter = 'none';\n\t}\n\t\n\t// Fits the div inside the viewport\n\tdocument.body.appendChild(this.div);\n\tmxUtils.fit(this.div);\n};\n\n/**\n * Function: hideMenu\n * \n * Removes the menu and all submenus.\n */\nmxPopupMenu.prototype.hideMenu = function()\n{\n\tif (this.div != null)\n\t{\n\t\tif (this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.hideSubmenu(this);\n\t\tthis.containsItems = false;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.HIDE));\n\t}\n};\n\n/**\n * Function: hideSubmenu\n * \n * Removes all submenus inside the given parent.\n * \n * Parameters:\n * \n * parent - An item returned by <addItem>.\n */\nmxPopupMenu.prototype.hideSubmenu = function(parent)\n{\n\tif (parent.activeRow != null)\n\t{\n\t\tthis.hideSubmenu(parent.activeRow);\n\t\t\n\t\tif (parent.activeRow.div.parentNode != null)\n\t\t{\n\t\t\tparent.activeRow.div.parentNode.removeChild(parent.activeRow.div);\n\t\t}\n\t\t\n\t\tparent.activeRow = null;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPopupMenu.prototype.destroy = function()\n{\n\tif (this.div != null)\n\t{\n\t\tmxEvent.release(this.div);\n\t\t\n\t\tif (this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.div = null;\n\t}\n};\n\n__mxOutput.mxPopupMenu = typeof mxPopupMenu !== 'undefined' ? mxPopupMenu : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxAutoSaveManager\n * \n * Manager for automatically saving diagrams. The <save> hook must be\n * implemented.\n * \n * Example:\n * \n * (code)\n * var mgr = new mxAutoSaveManager(editor.graph);\n * mgr.save = function()\n * {\n *   mxLog.show();\n *   mxLog.debug('save');\n * };\n * (end)\n * \n * Constructor: mxAutoSaveManager\n *\n * Constructs a new automatic layout for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxAutoSaveManager(graph)\n{\n\t// Notifies the manager of a change\n\tthis.changeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.graphModelChanged(evt.getProperty('edit').changes);\n\t\t}\n\t});\n\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxAutoSaveManager.prototype = new mxEventSource();\nmxAutoSaveManager.prototype.constructor = mxAutoSaveManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxAutoSaveManager.prototype.graph = null;\n\n/**\n * Variable: autoSaveDelay\n * \n * Minimum amount of seconds between two consecutive autosaves. Eg. a\n * value of 1 (s) means the graph is not stored more than once per second.\n * Default is 10.\n */\nmxAutoSaveManager.prototype.autoSaveDelay = 10;\n\n/**\n * Variable: autoSaveThrottle\n * \n * Minimum amount of seconds between two consecutive autosaves triggered by\n * more than <autoSaveThreshhold> changes within a timespan of less than\n * <autoSaveDelay> seconds. Eg. a value of 1 (s) means the graph is not\n * stored more than once per second even if there are more than\n * <autoSaveThreshold> changes within that timespan. Default is 2.\n */\nmxAutoSaveManager.prototype.autoSaveThrottle = 2;\n\n/**\n * Variable: autoSaveThreshold\n * \n * Minimum amount of ignored changes before an autosave. Eg. a value of 2\n * means after 2 change of the graph model the autosave will trigger if the\n * condition below is true. Default is 5.\n */\nmxAutoSaveManager.prototype.autoSaveThreshold = 5;\n\n/**\n * Variable: ignoredChanges\n * \n * Counter for ignored changes in autosave.\n */\nmxAutoSaveManager.prototype.ignoredChanges = 0;\n\n/**\n * Variable: lastSnapshot\n * \n * Used for autosaving. See <autosave>.\n */\nmxAutoSaveManager.prototype.lastSnapshot = 0;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxAutoSaveManager.prototype.enabled = true;\n\n/**\n * Variable: changeHandler\n * \n * Holds the function that handles graph model changes.\n */\nmxAutoSaveManager.prototype.changeHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxAutoSaveManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxAutoSaveManager.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the layouts operate on.\n */\nmxAutoSaveManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n\t}\n};\n\n/**\n * Function: save\n * \n * Empty hook that is called if the graph should be saved.\n */\nmxAutoSaveManager.prototype.save = function()\n{\n\t// empty\n};\n\n/**\n * Function: graphModelChanged\n * \n * Invoked when the graph model has changed.\n */\nmxAutoSaveManager.prototype.graphModelChanged = function(changes)\n{\n\tvar now = new Date().getTime();\n\tvar dt = (now - this.lastSnapshot) / 1000;\n\t\n\tif (dt > this.autoSaveDelay ||\n\t\t(this.ignoredChanges >= this.autoSaveThreshold &&\n\t\t dt > this.autoSaveThrottle))\n\t{\n\t\tthis.save();\n\t\tthis.reset();\n\t}\n\telse\n\t{\n\t\t// Increments the number of ignored changes\n\t\tthis.ignoredChanges++;\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets all counters.\n */\nmxAutoSaveManager.prototype.reset = function()\n{\n\tthis.lastSnapshot = new Date().getTime();\n\tthis.ignoredChanges = 0;\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxAutoSaveManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n\n__mxOutput.mxAutoSaveManager = typeof mxAutoSaveManager !== 'undefined' ? mxAutoSaveManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxAnimation\n * \n * Implements a basic animation in JavaScript.\n * \n * Constructor: mxAnimation\n * \n * Constructs an animation.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxAnimation(delay)\n{\n\tthis.delay = (delay != null) ? delay : 20;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxAnimation.prototype = new mxEventSource();\nmxAnimation.prototype.constructor = mxAnimation;\n\n/**\n * Variable: delay\n * \n * Specifies the delay between the animation steps. Defaul is 30ms.\n */\nmxAnimation.prototype.delay = null;\n\n/**\n * Variable: thread\n * \n * Reference to the thread while the animation is running.\n */\nmxAnimation.prototype.thread = null;\n\n/**\n * Function: isRunning\n * \n * Returns true if the animation is running.\n */\nmxAnimation.prototype.isRunning = function()\n{\n\treturn this.thread != null;\n};\n\n/**\n * Function: startAnimation\n *\n * Starts the animation by repeatedly invoking updateAnimation.\n */\nmxAnimation.prototype.startAnimation = function()\n{\n\tif (this.thread == null)\n\t{\n\t\tthis.thread = window.setInterval(mxUtils.bind(this, this.updateAnimation), this.delay);\n\t}\n};\n\n/**\n * Function: updateAnimation\n *\n * Hook for subclassers to implement the animation. Invoke stopAnimation\n * when finished, startAnimation to resume. This is called whenever the\n * timer fires and fires an mxEvent.EXECUTE event with no properties.\n */\nmxAnimation.prototype.updateAnimation = function()\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTE));\n};\n\n/**\n * Function: stopAnimation\n *\n * Stops the animation by deleting the timer and fires an <mxEvent.DONE>.\n */\nmxAnimation.prototype.stopAnimation = function()\n{\n\tif (this.thread != null)\n\t{\n\t\twindow.clearInterval(this.thread);\n\t\tthis.thread = null;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.DONE));\n\t}\n};\n\n__mxOutput.mxAnimation = typeof mxAnimation !== 'undefined' ? mxAnimation : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxMorphing\n * \n * Implements animation for morphing cells. Here is an example of\n * using this class for animating the result of a layout algorithm:\n * \n * (code)\n * graph.getModel().beginUpdate();\n * try\n * {\n *   var circleLayout = new mxCircleLayout(graph);\n *   circleLayout.execute(graph.getDefaultParent());\n * }\n * finally\n * {\n *   var morph = new mxMorphing(graph);\n *   morph.addListener(mxEvent.DONE, function()\n *   {\n *     graph.getModel().endUpdate();\n *   });\n *   \n *   morph.startAnimation();\n * }\n * (end)\n * \n * Constructor: mxMorphing\n * \n * Constructs an animation.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * steps - Optional number of steps in the morphing animation. Default is 6.\n * ease - Optional easing constant for the animation. Default is 1.5.\n * delay - Optional delay between the animation steps. Passed to <mxAnimation>.\n */\nfunction mxMorphing(graph, steps, ease, delay)\n{\n\tmxAnimation.call(this, delay);\n\tthis.graph = graph;\n\tthis.steps = (steps != null) ? steps : 6;\n\tthis.ease = (ease != null) ? ease : 1.5;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxMorphing.prototype = new mxAnimation();\nmxMorphing.prototype.constructor = mxMorphing;\n\n/**\n * Variable: graph\n * \n * Specifies the delay between the animation steps. Defaul is 30ms.\n */\nmxMorphing.prototype.graph = null;\n\n/**\n * Variable: steps\n * \n * Specifies the maximum number of steps for the morphing.\n */\nmxMorphing.prototype.steps = null;\n\n/**\n * Variable: step\n * \n * Contains the current step.\n */\nmxMorphing.prototype.step = 0;\n\n/**\n * Variable: ease\n * \n * Ease-off for movement towards the given vector. Larger values are\n * slower and smoother. Default is 4.\n */\nmxMorphing.prototype.ease = null;\n\n/**\n * Variable: cells\n * \n * Optional array of cells to be animated. If this is not specified\n * then all cells are checked and animated if they have been moved\n * in the current transaction.\n */\nmxMorphing.prototype.cells = null;\n\n/**\n * Function: updateAnimation\n *\n * Animation step.\n */\nmxMorphing.prototype.updateAnimation = function()\n{\n\tmxAnimation.prototype.updateAnimation.apply(this, arguments);\n\tvar move = new mxCellStatePreview(this.graph);\n\n\tif (this.cells != null)\n\t{\n\t\t// Animates the given cells individually without recursion\n\t\tfor (var i = 0; i < this.cells.length; i++)\n\t\t{\n\t\t\tthis.animateCell(this.cells[i], move, false);\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Animates all changed cells by using recursion to find\n\t\t// the changed cells but not for the animation itself\n\t\tthis.animateCell(this.graph.getModel().getRoot(), move, true);\n\t}\n\t\n\tthis.show(move);\n\t\n\tif (move.isEmpty() || this.step++ >= this.steps)\n\t{\n\t\tthis.stopAnimation();\n\t}\n};\n\n/**\n * Function: show\n *\n * Shows the changes in the given <mxCellStatePreview>.\n */\nmxMorphing.prototype.show = function(move)\n{\n\tmove.show();\n};\n\n/**\n * Function: animateCell\n *\n * Animates the given cell state using <mxCellStatePreview.moveState>.\n */\nmxMorphing.prototype.animateCell = function(cell, move, recurse)\n{\n\tvar state = this.graph.getView().getState(cell);\n\tvar delta = null;\n\n\tif (state != null)\n\t{\n\t\t// Moves the animated state from where it will be after the model\n\t\t// change by subtracting the given delta vector from that location\n\t\tdelta = this.getDelta(state);\n\n\t\tif (this.graph.getModel().isVertex(cell) && (delta.x != 0 || delta.y != 0))\n\t\t{\n\t\t\tvar translate = this.graph.view.getTranslate();\n\t\t\tvar scale = this.graph.view.getScale();\n\t\t\t\n\t\t\tdelta.x += translate.x * scale;\n\t\t\tdelta.y += translate.y * scale;\n\t\t\t\n\t\t\tmove.moveState(state, -delta.x / this.ease, -delta.y / this.ease);\n\t\t}\n\t}\n\t\n\tif (recurse && !this.stopRecursion(state, delta))\n\t{\n\t\tvar childCount = this.graph.getModel().getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.animateCell(this.graph.getModel().getChildAt(cell, i), move, recurse);\n\t\t}\n\t}\n};\n\n/**\n * Function: stopRecursion\n *\n * Returns true if the animation should not recursively find more\n * deltas for children if the given parent state has been animated.\n */\nmxMorphing.prototype.stopRecursion = function(state, delta)\n{\n\treturn delta != null && (delta.x != 0 || delta.y != 0);\n};\n\n/**\n * Function: getDelta\n *\n * Returns the vector between the current rendered state and the future\n * location of the state after the display will be updated.\n */\nmxMorphing.prototype.getDelta = function(state)\n{\n\tvar origin = this.getOriginForCell(state.cell);\n\tvar translate = this.graph.getView().getTranslate();\n\tvar scale = this.graph.getView().getScale();\n\tvar x = state.x / scale - translate.x;\n\tvar y = state.y / scale - translate.y;\n\n\treturn new mxPoint((origin.x - x) * scale, (origin.y - y) * scale);\n};\n\n/**\n * Function: getOriginForCell\n *\n * Returns the top, left corner of the given cell. TODO: Improve performance\n * by using caching inside this method as the result per cell never changes\n * during the lifecycle of this object.\n */\nmxMorphing.prototype.getOriginForCell = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\tvar geo = this.graph.getCellGeometry(cell);\n\t\tresult = this.getOriginForCell(parent);\n\t\t\n\t\t// TODO: Handle offsets\n\t\tif (geo != null)\n\t\t{\n\t\t\tif (geo.relative)\n\t\t\t{\n\t\t\t\tvar pgeo = this.graph.getCellGeometry(parent);\n\t\t\t\t\n\t\t\t\tif (pgeo != null)\n\t\t\t\t{\n\t\t\t\t\tresult.x += geo.x * pgeo.width;\n\t\t\t\t\tresult.y += geo.y * pgeo.height;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.x += geo.x;\n\t\t\t\tresult.y += geo.y;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (result == null)\n\t{\n\t\tvar t = this.graph.view.getTranslate();\n\t\tresult = new mxPoint(-t.x, -t.y);\n\t}\n\t\n\treturn result;\n};\n\n__mxOutput.mxMorphing = typeof mxMorphing !== 'undefined' ? mxMorphing : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageBundle\n *\n * Maps from keys to base64 encoded images or file locations. All values must\n * be URLs or use the format data:image/format followed by a comma and the base64\n * encoded image data, eg. \"data:image/gif,XYZ\", where XYZ is the base64 encoded\n * image data.\n * \n * To add a new image bundle to an existing graph, the following code is used:\n * \n * (code)\n * var bundle = new mxImageBundle(alt);\n * bundle.putImage('myImage', 'data:image/gif,R0lGODlhEAAQAMIGAAAAAICAAICAgP' +\n *   '//AOzp2O3r2////////yH+FUNyZWF0ZWQgd2l0aCBUaGUgR0lNUAAh+QQBCgAHACwAAAAA' +\n *   'EAAQAAADTXi63AowynnAMDfjPUDlnAAJhmeBFxAEloliKltWmiYCQvfVr6lBPB1ggxN1hi' +\n *   'laSSASFQpIV5HJBDyHpqK2ejVRm2AAgZCdmCGO9CIBADs=', fallback);\n * bundle.putImage('mySvgImage', 'data:image/svg+xml,' + encodeURIComponent(\n *   '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">' +\n *   '<linearGradient id=\"gradient\"><stop offset=\"10%\" stop-color=\"#F00\"/>' +\n *   '<stop offset=\"90%\" stop-color=\"#fcc\"/></linearGradient>' +\n *   '<rect fill=\"url(#gradient)\" width=\"100%\" height=\"100%\"/></svg>'), fallback);\n * graph.addImageBundle(bundle);\n * (end);\n * \n * Alt is an optional boolean (default is false) that specifies if the value\n * or the fallback should be returned in <getImage>.\n * \n * The image can then be referenced in any cell style using image=myImage.\n * If you are using mxOutline, you should use the same image bundles in the\n * graph that renders the outline.\n * \n * The keys for images are resolved in <mxGraph.postProcessCellStyle> and\n * turned into a data URI if the returned value has a short data URI format\n * as specified above.\n * \n * A typical value for the fallback is a MTHML link as defined in RFC 2557.\n * Note that this format requires a file to be dynamically created on the\n * server-side, or the page that contains the graph to be modified to contain\n * the resources, this can be done by adding a comment that contains the\n * resource in the HEAD section of the page after the title tag.\n * \n * This type of fallback mechanism should be used in IE6 and IE7. IE8 does\n * support data URIs, but the maximum size is limited to 32 KB, which means\n * all data URIs should be limited to 32 KB.\n */\nfunction mxImageBundle(alt)\n{\n\tthis.images = [];\n\tthis.alt = (alt != null) ? alt : false;\n};\n\n/**\n * Variable: images\n * \n * Maps from keys to images.\n */\nmxImageBundle.prototype.images = null;\n\n/**\n * Variable: alt\n * \n * Specifies if the fallback representation should be returned.\n */\nmxImageBundle.prototype.images = null;\n\n/**\n * Function: putImage\n * \n * Adds the specified entry to the map. The entry is an object with a value and\n * fallback property as specified in the arguments.\n */\nmxImageBundle.prototype.putImage = function(key, value, fallback)\n{\n\tthis.images[key] = {value: value, fallback: fallback};\n};\n\n/**\n * Function: getImage\n * \n * Returns the value for the given key. This returns the value\n * or fallback, depending on <alt>. The fallback is returned if\n * <alt> is true, the value is returned otherwise.\n */\nmxImageBundle.prototype.getImage = function(key)\n{\n\tvar result = null;\n\t\n\tif (key != null)\n\t{\n\t\tvar img = this.images[key];\n\t\t\n\t\tif (img != null)\n\t\t{\n\t\t\tresult = (this.alt) ? img.fallback : img.value;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n__mxOutput.mxImageBundle = typeof mxImageBundle !== 'undefined' ? mxImageBundle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageExport\n * \n * Creates a new image export instance to be used with an export canvas. Here\n * is an example that uses this class to create an image via a backend using\n * <mxXmlExportCanvas>.\n * \n * (code)\n * var xmlDoc = mxUtils.createXmlDocument();\n * var root = xmlDoc.createElement('output');\n * xmlDoc.appendChild(root);\n * \n * var xmlCanvas = new mxXmlCanvas2D(root);\n * var imgExport = new mxImageExport();\n * imgExport.drawState(graph.getView().getState(graph.model.root), xmlCanvas);\n * \n * var bounds = graph.getGraphBounds();\n * var w = Math.ceil(bounds.x + bounds.width);\n * var h = Math.ceil(bounds.y + bounds.height);\n * \n * var xml = mxUtils.getXml(root);\n * new mxXmlRequest('export', 'format=png&w=' + w +\n * \t\t'&h=' + h + '&bg=#F9F7ED&xml=' + encodeURIComponent(xml))\n * \t\t.simulate(document, '_blank');\n * (end)\n * \n * Constructor: mxImageExport\n * \n * Constructs a new image export.\n */\nfunction mxImageExport() { };\n\n/**\n * Variable: includeOverlays\n * \n * Specifies if overlays should be included in the export. Default is false.\n */\nmxImageExport.prototype.includeOverlays = false;\n\n/**\n * Function: drawState\n * \n * Draws the given state and all its descendants to the given canvas.\n */\nmxImageExport.prototype.drawState = function(state, canvas)\n{\n\tif (state != null)\n\t{\n\t\tthis.visitStatesRecursive(state, canvas, mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.drawCellState.apply(this, arguments);\n\t\t}));\n\t\t\t\t\n\t\t// Paints the overlays\n\t\tif (this.includeOverlays)\n\t\t{\n\t\t\tthis.visitStatesRecursive(state, canvas, mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.drawOverlays.apply(this, arguments);\n\t\t\t}));\n\t\t}\n\t}\n};\n\n/**\n * Function: drawState\n * \n * Draws the given state and all its descendants to the given canvas.\n */\nmxImageExport.prototype.visitStatesRecursive = function(state, canvas, visitor)\n{\n\tif (state != null)\n\t{\n\t\tvisitor(state, canvas);\n\t\t\n\t\tvar graph = state.view.graph;\n\t\tvar childCount = graph.model.getChildCount(state.cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar childState = graph.view.getState(graph.model.getChildAt(state.cell, i));\n\t\t\tthis.visitStatesRecursive(childState, canvas, visitor);\n\t\t}\n\t}\n};\n\n/**\n * Function: getLinkForCellState\n * \n * Returns the link for the given cell state and canvas. This returns null.\n */\nmxImageExport.prototype.getLinkForCellState = function(state, canvas)\n{\n\treturn null;\n};\n\n/**\n * Function: drawCellState\n * \n * Draws the given state to the given canvas.\n */\nmxImageExport.prototype.drawCellState = function(state, canvas)\n{\n\t// Experimental feature\n\tvar link = this.getLinkForCellState(state, canvas);\n\t\n\tif (link != null)\n\t{\n\t\tcanvas.setLink(link);\n\t}\n\t\n\t// Paints the shape and text\n\tthis.drawShape(state, canvas);\n\tthis.drawText(state, canvas);\n\n\tif (link != null)\n\t{\n\t\tcanvas.setLink(null);\n\t}\n};\n\n/**\n * Function: drawShape\n * \n * Draws the shape of the given state.\n */\nmxImageExport.prototype.drawShape = function(state, canvas)\n{\n\tif (state.shape instanceof mxShape && state.shape.checkBounds())\n\t{\n\t\tcanvas.save();\n\t\tstate.shape.paint(canvas);\n\t\tcanvas.restore();\n\t}\n};\n\n/**\n * Function: drawText\n * \n * Draws the text of the given state.\n */\nmxImageExport.prototype.drawText = function(state, canvas)\n{\n\tif (state.text != null && state.text.checkBounds())\n\t{\n\t\tcanvas.save();\n\t\tstate.text.paint(canvas);\n\t\tcanvas.restore();\n\t}\n};\n\n/**\n * Function: drawOverlays\n * \n * Draws the overlays for the given state. This is called if <includeOverlays>\n * is true.\n */\nmxImageExport.prototype.drawOverlays = function(state, canvas)\n{\n\tif (state.overlays != null)\n\t{\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tif (shape instanceof mxShape)\n\t\t\t{\n\t\t\t\tshape.paint(canvas);\n\t\t\t}\n\t\t});\n\t}\n};\n\n\n__mxOutput.mxImageExport = typeof mxImageExport !== 'undefined' ? mxImageExport : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxAbstractCanvas2D\n *\n * Base class for all canvases. A description of the public API is available in <mxXmlCanvas2D>.\n * All color values of <mxConstants.NONE> will be converted to null in the state.\n * \n * Constructor: mxAbstractCanvas2D\n *\n * Constructs a new abstract canvas.\n */\nfunction mxAbstractCanvas2D()\n{\n\t/**\n\t * Variable: converter\n\t * \n\t * Holds the <mxUrlConverter> to convert image URLs.\n\t */\n\tthis.converter = this.createUrlConverter();\n\t\n\tthis.reset();\n};\n\n/**\n * Variable: state\n * \n * Holds the current state.\n */\nmxAbstractCanvas2D.prototype.state = null;\n\n/**\n * Variable: states\n * \n * Stack of states.\n */\nmxAbstractCanvas2D.prototype.states = null;\n\n/**\n * Variable: path\n * \n * Holds the current path as an array.\n */\nmxAbstractCanvas2D.prototype.path = null;\n\n/**\n * Variable: rotateHtml\n * \n * Switch for rotation of HTML. Default is false.\n */\nmxAbstractCanvas2D.prototype.rotateHtml = true;\n\n/**\n * Variable: lastX\n * \n * Holds the last x coordinate.\n */\nmxAbstractCanvas2D.prototype.lastX = 0;\n\n/**\n * Variable: lastY\n * \n * Holds the last y coordinate.\n */\nmxAbstractCanvas2D.prototype.lastY = 0;\n\n/**\n * Variable: moveOp\n * \n * Contains the string used for moving in paths. Default is 'M'.\n */\nmxAbstractCanvas2D.prototype.moveOp = 'M';\n\n/**\n * Variable: lineOp\n * \n * Contains the string used for moving in paths. Default is 'L'.\n */\nmxAbstractCanvas2D.prototype.lineOp = 'L';\n\n/**\n * Variable: quadOp\n * \n * Contains the string used for quadratic paths. Default is 'Q'.\n */\nmxAbstractCanvas2D.prototype.quadOp = 'Q';\n\n/**\n * Variable: curveOp\n * \n * Contains the string used for bezier curves. Default is 'C'.\n */\nmxAbstractCanvas2D.prototype.curveOp = 'C';\n\n/**\n * Variable: closeOp\n * \n * Holds the operator for closing curves. Default is 'Z'.\n */\nmxAbstractCanvas2D.prototype.closeOp = 'Z';\n\n/**\n * Variable: pointerEvents\n * \n * Boolean value that specifies if events should be handled. Default is false.\n */\nmxAbstractCanvas2D.prototype.pointerEvents = false;\n\n/**\n * Function: createUrlConverter\n * \n * Create a new <mxUrlConverter> and returns it.\n */\nmxAbstractCanvas2D.prototype.createUrlConverter = function()\n{\n\treturn new mxUrlConverter();\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this canvas.\n */\nmxAbstractCanvas2D.prototype.reset = function()\n{\n\tthis.state = this.createState();\n\tthis.states = [];\n};\n\n/**\n * Function: createState\n * \n * Creates the state of the this canvas.\n */\nmxAbstractCanvas2D.prototype.createState = function()\n{\n\treturn {\n\t\tdx: 0,\n\t\tdy: 0,\n\t\tscale: 1,\n\t\talpha: 1,\n\t\tfillAlpha: 1,\n\t\tstrokeAlpha: 1,\n\t\tfillColor: null,\n\t\tgradientFillAlpha: 1,\n\t\tgradientColor: null,\n\t\tgradientAlpha: 1,\n\t\tgradientDirection: null,\n\t\tstrokeColor: null,\n\t\tstrokeWidth: 1,\n\t\tdashed: false,\n\t\tdashPattern: '3 3',\n\t\tfixDash: false,\n\t\tlineCap: 'flat',\n\t\tlineJoin: 'miter',\n\t\tmiterLimit: 10,\n\t\tfontColor: '#000000',\n\t\tfontBackgroundColor: null,\n\t\tfontBorderColor: null,\n\t\tfontSize: mxConstants.DEFAULT_FONTSIZE,\n\t\tfontFamily: mxConstants.DEFAULT_FONTFAMILY,\n\t\tfontStyle: 0,\n\t\tshadow: false,\n\t\tshadowColor: mxConstants.SHADOWCOLOR,\n\t\tshadowAlpha: mxConstants.SHADOW_OPACITY,\n\t\tshadowDx: mxConstants.SHADOW_OFFSET_X,\n\t\tshadowDy: mxConstants.SHADOW_OFFSET_Y,\n\t\trotation: 0,\n\t\trotationCx: 0,\n\t\trotationCy: 0\n\t};\n};\n\n/**\n * Function: format\n * \n * Rounds all numbers to integers.\n */\nmxAbstractCanvas2D.prototype.format = function(value)\n{\n\treturn Math.round(parseFloat(value));\n};\n\n/**\n * Function: addOp\n * \n * Adds the given operation to the path.\n */\nmxAbstractCanvas2D.prototype.addOp = function()\n{\n\tif (this.path != null)\n\t{\n\t\tthis.path.push(arguments[0]);\n\t\t\n\t\tif (arguments.length > 2)\n\t\t{\n\t\t\tvar s = this.state;\n\n\t\t\tfor (var i = 2; i < arguments.length; i += 2)\n\t\t\t{\n\t\t\t\tthis.lastX = arguments[i - 1];\n\t\t\t\tthis.lastY = arguments[i];\n\t\t\t\t\n\t\t\t\tthis.path.push(this.format((this.lastX + s.dx) * s.scale));\n\t\t\t\tthis.path.push(this.format((this.lastY + s.dy) * s.scale));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the given point and returns the result as an <mxPoint>.\n */\nmxAbstractCanvas2D.prototype.rotatePoint = function(x, y, theta, cx, cy)\n{\n\tvar rad = theta * (Math.PI / 180);\n\t\n\treturn mxUtils.getRotatedPoint(new mxPoint(x, y), Math.cos(rad),\n\t\tMath.sin(rad), new mxPoint(cx, cy));\n};\n\n/**\n * Function: save\n * \n * Saves the current state.\n */\nmxAbstractCanvas2D.prototype.save = function()\n{\n\tthis.states.push(this.state);\n\tthis.state = mxUtils.clone(this.state);\n};\n\n/**\n * Function: restore\n * \n * Restores the current state.\n */\nmxAbstractCanvas2D.prototype.restore = function()\n{\n\tif (this.states.length > 0)\n\t{\n\t\tthis.state = this.states.pop();\n\t}\n};\n\n/**\n * Function: setLink\n * \n * Sets the current link. Hook for subclassers.\n */\nmxAbstractCanvas2D.prototype.setLink = function(link)\n{\n\t// nop\n};\n\n/**\n * Function: scale\n * \n * Scales the current state.\n */\nmxAbstractCanvas2D.prototype.scale = function(value)\n{\n\tthis.state.scale *= value;\n\tthis.state.strokeWidth *= value;\n};\n\n/**\n * Function: translate\n * \n * Translates the current state.\n */\nmxAbstractCanvas2D.prototype.translate = function(dx, dy)\n{\n\tthis.state.dx += dx;\n\tthis.state.dy += dy;\n};\n\n/**\n * Function: rotate\n * \n * Rotates the current state.\n */\nmxAbstractCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\t// nop\n};\n\n/**\n * Function: setAlpha\n * \n * Sets the current alpha.\n */\nmxAbstractCanvas2D.prototype.setAlpha = function(value)\n{\n\tthis.state.alpha = value;\n};\n\n/**\n * Function: setFillAlpha\n * \n * Sets the current solid fill alpha.\n */\nmxAbstractCanvas2D.prototype.setFillAlpha = function(value)\n{\n\tthis.state.fillAlpha = value;\n};\n\n/**\n * Function: setStrokeAlpha\n * \n * Sets the current stroke alpha.\n */\nmxAbstractCanvas2D.prototype.setStrokeAlpha = function(value)\n{\n\tthis.state.strokeAlpha = value;\n};\n\n/**\n * Function: setFillColor\n * \n * Sets the current fill color.\n */\nmxAbstractCanvas2D.prototype.setFillColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fillColor = value;\n\tthis.state.gradientColor = null;\n};\n\n/**\n * Function: setGradient\n * \n * Sets the current gradient.\n */\nmxAbstractCanvas2D.prototype.setGradient = function(color1, color2, x, y, w, h, direction, alpha1, alpha2)\n{\n\tvar s = this.state;\n\ts.fillColor = color1;\n\ts.gradientFillAlpha = (alpha1 != null) ? alpha1 : 1;\n\ts.gradientColor = color2;\n\ts.gradientAlpha = (alpha2 != null) ? alpha2 : 1;\n\ts.gradientDirection = direction;\n};\n\n/**\n * Function: setStrokeColor\n * \n * Sets the current stroke color.\n */\nmxAbstractCanvas2D.prototype.setStrokeColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.strokeColor = value;\n};\n\n/**\n * Function: setStrokeWidth\n * \n * Sets the current stroke width.\n */\nmxAbstractCanvas2D.prototype.setStrokeWidth = function(value)\n{\n\tthis.state.strokeWidth = value;\n};\n\n/**\n * Function: setDashed\n * \n * Enables or disables dashed lines.\n */\nmxAbstractCanvas2D.prototype.setDashed = function(value, fixDash)\n{\n\tthis.state.dashed = value;\n\tthis.state.fixDash = fixDash;\n};\n\n/**\n * Function: setDashPattern\n * \n * Sets the current dash pattern.\n */\nmxAbstractCanvas2D.prototype.setDashPattern = function(value)\n{\n\tthis.state.dashPattern = value;\n};\n\n/**\n * Function: setLineCap\n * \n * Sets the current line cap.\n */\nmxAbstractCanvas2D.prototype.setLineCap = function(value)\n{\n\tthis.state.lineCap = value;\n};\n\n/**\n * Function: setLineJoin\n * \n * Sets the current line join.\n */\nmxAbstractCanvas2D.prototype.setLineJoin = function(value)\n{\n\tthis.state.lineJoin = value;\n};\n\n/**\n * Function: setMiterLimit\n * \n * Sets the current miter limit.\n */\nmxAbstractCanvas2D.prototype.setMiterLimit = function(value)\n{\n\tthis.state.miterLimit = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontColor = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontBackgroundColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBackgroundColor = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontBorderColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBorderColor = value;\n};\n\n/**\n * Function: setFontSize\n * \n * Sets the current font size.\n */\nmxAbstractCanvas2D.prototype.setFontSize = function(value)\n{\n\tthis.state.fontSize = parseFloat(value);\n};\n\n/**\n * Function: setFontFamily\n * \n * Sets the current font family.\n */\nmxAbstractCanvas2D.prototype.setFontFamily = function(value)\n{\n\tthis.state.fontFamily = value;\n};\n\n/**\n * Function: setFontStyle\n * \n * Sets the current font style.\n */\nmxAbstractCanvas2D.prototype.setFontStyle = function(value)\n{\n\tif (value == null)\n\t{\n\t\tvalue = 0;\n\t}\n\t\n\tthis.state.fontStyle = value;\n};\n\n/**\n * Function: setShadow\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadow = function(enabled)\n{\n\tthis.state.shadow = enabled;\n};\n\n/**\n * Function: setShadowColor\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.shadowColor = value;\n};\n\n/**\n * Function: setShadowAlpha\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowAlpha = function(value)\n{\n\tthis.state.shadowAlpha = value;\n};\n\n/**\n * Function: setShadowOffset\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowOffset = function(dx, dy)\n{\n\tthis.state.shadowDx = dx;\n\tthis.state.shadowDy = dy;\n};\n\n/**\n * Function: begin\n * \n * Starts a new path.\n */\nmxAbstractCanvas2D.prototype.begin = function()\n{\n\tthis.lastX = 0;\n\tthis.lastY = 0;\n\tthis.path = [];\n};\n\n/**\n * Function: moveTo\n * \n *  Moves the current path the given coordinates.\n */\nmxAbstractCanvas2D.prototype.moveTo = function(x, y)\n{\n\tthis.addOp(this.moveOp, x, y);\n};\n\n/**\n * Function: lineTo\n * \n * Draws a line to the given coordinates. Uses moveTo with the op argument.\n */\nmxAbstractCanvas2D.prototype.lineTo = function(x, y)\n{\n\tthis.addOp(this.lineOp, x, y);\n};\n\n/**\n * Function: quadTo\n * \n * Adds a quadratic curve to the current path.\n */\nmxAbstractCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tthis.addOp(this.quadOp, x1, y1, x2, y2);\n};\n\n/**\n * Function: curveTo\n * \n * Adds a bezier curve to the current path.\n */\nmxAbstractCanvas2D.prototype.curveTo = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.curveOp, x1, y1, x2, y2, x3, y3);\n};\n\n/**\n * Function: arcTo\n * \n * Adds the given arc to the current path. This is a synthetic operation that\n * is broken down into curves.\n */\nmxAbstractCanvas2D.prototype.arcTo = function(rx, ry, angle, largeArcFlag, sweepFlag, x, y)\n{\n\tvar curves = mxUtils.arcToCurves(this.lastX, this.lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y);\n\t\n\tif (curves != null)\n\t{\n\t\tfor (var i = 0; i < curves.length; i += 6) \n\t\t{\n\t\t\tthis.curveTo(curves[i], curves[i + 1], curves[i + 2],\n\t\t\t\tcurves[i + 3], curves[i + 4], curves[i + 5]);\n\t\t}\n\t}\n};\n\n/**\n * Function: close\n * \n * Closes the current path.\n */\nmxAbstractCanvas2D.prototype.close = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.closeOp);\n};\n\n/**\n * Function: end\n * \n * Empty implementation for backwards compatibility. This will be removed.\n */\nmxAbstractCanvas2D.prototype.end = function() { };\n\n__mxOutput.mxAbstractCanvas2D = typeof mxAbstractCanvas2D !== 'undefined' ? mxAbstractCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxXmlCanvas2D\n *\n * Base class for all canvases. The following methods make up the public\n * interface of the canvas 2D for all painting in mxGraph:\n * \n * - <save>, <restore>\n * - <scale>, <translate>, <rotate>\n * - <setAlpha>, <setFillAlpha>, <setStrokeAlpha>, <setFillColor>, <setGradient>,\n *   <setStrokeColor>, <setStrokeWidth>, <setDashed>, <setDashPattern>, <setLineCap>, \n *   <setLineJoin>, <setMiterLimit>\n * - <setFontColor>, <setFontBackgroundColor>, <setFontBorderColor>, <setFontSize>,\n *   <setFontFamily>, <setFontStyle>\n * - <setShadow>, <setShadowColor>, <setShadowAlpha>, <setShadowOffset>\n * - <rect>, <roundrect>, <ellipse>, <image>, <text>\n * - <begin>, <moveTo>, <lineTo>, <quadTo>, <curveTo>\n * - <stroke>, <fill>, <fillAndStroke>\n * \n * <mxAbstractCanvas2D.arcTo> is an additional method for drawing paths. This is\n * a synthetic method, meaning that it is turned into a sequence of curves by\n * default. Subclassers may add native support for arcs.\n * \n * Constructor: mxXmlCanvas2D\n *\n * Constructs a new abstract canvas.\n */\nfunction mxXmlCanvas2D(root)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n\n\t// Writes default settings;\n\tthis.writeDefaults();\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxXmlCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabled. Default is true.\n */\nmxXmlCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: compressed\n * \n * Specifies if the output should be compressed by removing redundant calls.\n * Default is true.\n */\nmxXmlCanvas2D.prototype.compressed = true;\n\n/**\n * Function: writeDefaults\n * \n * Writes the rendering defaults to <root>:\n */\nmxXmlCanvas2D.prototype.writeDefaults = function()\n{\n\tvar elem;\n\t\n\t// Writes font defaults\n\telem = this.createElement('fontfamily');\n\telem.setAttribute('family', mxConstants.DEFAULT_FONTFAMILY);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('fontsize');\n\telem.setAttribute('size', mxConstants.DEFAULT_FONTSIZE);\n\tthis.root.appendChild(elem);\n\t\n\t// Writes shadow defaults\n\telem = this.createElement('shadowcolor');\n\telem.setAttribute('color', mxConstants.SHADOWCOLOR);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('shadowalpha');\n\telem.setAttribute('alpha', mxConstants.SHADOW_OPACITY);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('shadowoffset');\n\telem.setAttribute('dx', mxConstants.SHADOW_OFFSET_X);\n\telem.setAttribute('dy', mxConstants.SHADOW_OFFSET_Y);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: format\n * \n * Returns a formatted number with 2 decimal places.\n */\nmxXmlCanvas2D.prototype.format = function(value)\n{\n\treturn parseFloat(parseFloat(value).toFixed(2));\n};\n\n/**\n * Function: createElement\n * \n * Creates the given element using the owner document of <root>.\n */\nmxXmlCanvas2D.prototype.createElement = function(name)\n{\n\treturn this.root.ownerDocument.createElement(name);\n};\n\n/**\n * Function: save\n * \n * Saves the drawing state.\n */\nmxXmlCanvas2D.prototype.save = function()\n{\n\tif (this.compressed)\n\t{\n\t\tmxAbstractCanvas2D.prototype.save.apply(this, arguments);\n\t}\n\t\n\tthis.root.appendChild(this.createElement('save'));\n};\n\n/**\n * Function: restore\n * \n * Restores the drawing state.\n */\nmxXmlCanvas2D.prototype.restore = function()\n{\n\tif (this.compressed)\n\t{\n\t\tmxAbstractCanvas2D.prototype.restore.apply(this, arguments);\n\t}\n\t\n\tthis.root.appendChild(this.createElement('restore'));\n};\n\n/**\n * Function: scale\n * \n * Scales the output.\n * \n * Parameters:\n * \n * scale - Number that represents the scale where 1 is equal to 100%.\n */\nmxXmlCanvas2D.prototype.scale = function(value)\n{\n        var elem = this.createElement('scale');\n        elem.setAttribute('scale', value);\n        this.root.appendChild(elem);\n};\n\n/**\n * Function: translate\n * \n * Translates the output.\n * \n * Parameters:\n * \n * dx - Number that specifies the horizontal translation.\n * dy - Number that specifies the vertical translation.\n */\nmxXmlCanvas2D.prototype.translate = function(dx, dy)\n{\n\tvar elem = this.createElement('translate');\n\telem.setAttribute('dx', this.format(dx));\n\telem.setAttribute('dy', this.format(dy));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: rotate\n * \n * Rotates and/or flips the output around a given center. (Note: Due to\n * limitations in VML, the rotation cannot be concatenated.)\n * \n * Parameters:\n * \n * theta - Number that represents the angle of the rotation (in degrees).\n * flipH - Boolean indicating if the output should be flipped horizontally.\n * flipV - Boolean indicating if the output should be flipped vertically.\n * cx - Number that represents the x-coordinate of the rotation center.\n * cy - Number that represents the y-coordinate of the rotation center.\n */\nmxXmlCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tvar elem = this.createElement('rotate');\n\t\n\tif (theta != 0 || flipH || flipV)\n\t{\n\t\telem.setAttribute('theta', this.format(theta));\n\t\telem.setAttribute('flipH', (flipH) ? '1' : '0');\n\t\telem.setAttribute('flipV', (flipV) ? '1' : '0');\n\t\telem.setAttribute('cx', this.format(cx));\n\t\telem.setAttribute('cy', this.format(cy));\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setAlpha\n * \n * Sets the current alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.alpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('alpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFillAlpha\n * \n * Sets the current fill alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new fill alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setFillAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.fillAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setFillAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('fillalpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setStrokeAlpha\n * \n * Sets the current stroke alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new stroke alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setStrokeAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokealpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFillColor\n * \n * Sets the current fill color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFillColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tif (this.compressed)\n\t{\n\t\tif (this.state.fillColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setFillColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('fillcolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setGradient\n * \n * Sets the gradient. Note that the coordinates may be ignored by some implementations.\n * \n * Parameters:\n * \n * color1 - Hexadecimal representation of the start color.\n * color2 - Hexadecimal representation of the end color.\n * x - X-coordinate of the gradient region.\n * y - y-coordinate of the gradient region.\n * w - Width of the gradient region.\n * h - Height of the gradient region.\n * direction - One of <mxConstants.DIRECTION_NORTH>, <mxConstants.DIRECTION_EAST>,\n * <mxConstants.DIRECTION_SOUTH> or <mxConstants.DIRECTION_WEST>.\n * alpha1 - Optional alpha of the start color. Default is 1. Possible values\n * are between 1 (opaque) and 0 (transparent).\n * alpha2 - Optional alpha of the end color. Default is 1. Possible values\n * are between 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setGradient = function(color1, color2, x, y, w, h, direction, alpha1, alpha2)\n{\n\tif (color1 != null && color2 != null)\n\t{\n\t\tmxAbstractCanvas2D.prototype.setGradient.apply(this, arguments);\n\t\t\n\t\tvar elem = this.createElement('gradient');\n\t\telem.setAttribute('c1', color1);\n\t\telem.setAttribute('c2', color2);\n\t\telem.setAttribute('x', this.format(x));\n\t\telem.setAttribute('y', this.format(y));\n\t\telem.setAttribute('w', this.format(w));\n\t\telem.setAttribute('h', this.format(h));\n\t\t\n\t\t// Default direction is south\n\t\tif (direction != null)\n\t\t{\n\t\t\telem.setAttribute('direction', direction);\n\t\t}\n\t\t\n\t\tif (alpha1 != null)\n\t\t{\n\t\t\telem.setAttribute('alpha1', alpha1);\n\t\t}\n\t\t\n\t\tif (alpha2 != null)\n\t\t{\n\t\t\telem.setAttribute('alpha2', alpha2);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setStrokeColor\n * \n * Sets the current stroke color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setStrokeColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokecolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setStrokeWidth\n * \n * Sets the current stroke width.\n * \n * Parameters:\n * \n * value - Numeric representation of the stroke width.\n */\nmxXmlCanvas2D.prototype.setStrokeWidth = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeWidth == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeWidth.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokewidth');\n\telem.setAttribute('width', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setDashed\n * \n * Enables or disables dashed lines.\n * \n * Parameters:\n * \n * value - Boolean that specifies if dashed lines should be enabled.\n * value - Boolean that specifies if the stroke width should be ignored\n * for the dash pattern. Default is false.\n */\nmxXmlCanvas2D.prototype.setDashed = function(value, fixDash)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.dashed == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setDashed.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('dashed');\n\telem.setAttribute('dashed', (value) ? '1' : '0');\n\t\n\tif (fixDash != null)\n\t{\n\t\telem.setAttribute('fixDash', (fixDash) ? '1' : '0');\n\t}\n\t\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setDashPattern\n * \n * Sets the current dash pattern. Default is '3 3'.\n * \n * Parameters:\n * \n * value - String that represents the dash pattern, which is a sequence of\n * numbers defining the length of the dashes and the length of the spaces\n * between the dashes. The lengths are relative to the line width - a length\n * of 1 is equals to the line width.\n */\nmxXmlCanvas2D.prototype.setDashPattern = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.dashPattern == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setDashPattern.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('dashpattern');\n\telem.setAttribute('pattern', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setLineCap\n * \n * Sets the line cap. Default is 'flat' which corresponds to 'butt' in SVG.\n * \n * Parameters:\n * \n * value - String that represents the line cap. Possible values are flat, round\n * and square.\n */\nmxXmlCanvas2D.prototype.setLineCap = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.lineCap == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setLineCap.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('linecap');\n\telem.setAttribute('cap', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setLineJoin\n * \n * Sets the line join. Default is 'miter'.\n * \n * Parameters:\n * \n * value - String that represents the line join. Possible values are miter,\n * round and bevel.\n */\nmxXmlCanvas2D.prototype.setLineJoin = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.lineJoin == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setLineJoin.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('linejoin');\n\telem.setAttribute('join', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setMiterLimit\n * \n * Sets the miter limit. Default is 10.\n * \n * Parameters:\n * \n * value - Number that represents the miter limit.\n */\nmxXmlCanvas2D.prototype.setMiterLimit = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.miterLimit == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setMiterLimit.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('miterlimit');\n\telem.setAttribute('limit', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color. Default is '#000000'.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontColor.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontcolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontBackgroundColor\n * \n * Sets the current font background color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontBackgroundColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontBackgroundColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontBackgroundColor.apply(this, arguments);\n\t\t}\n\n\t\tvar elem = this.createElement('fontbackgroundcolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontBorderColor\n * \n * Sets the current font border color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontBorderColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontBorderColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontBorderColor.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontbordercolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontSize\n * \n * Sets the current font size. Default is <mxConstants.DEFAULT_FONTSIZE>.\n * \n * Parameters:\n * \n * value - Numeric representation of the font size.\n */\nmxXmlCanvas2D.prototype.setFontSize = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontSize == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontSize.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontsize');\n\t\telem.setAttribute('size', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontFamily\n * \n * Sets the current font family. Default is <mxConstants.DEFAULT_FONTFAMILY>.\n * \n * Parameters:\n * \n * value - String representation of the font family. This handles the same\n * values as the CSS font-family property.\n */\nmxXmlCanvas2D.prototype.setFontFamily = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontFamily == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontFamily.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontfamily');\n\t\telem.setAttribute('family', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontStyle\n * \n * Sets the current font style.\n * \n * Parameters:\n * \n * value - Numeric representation of the font family. This is the sum of the\n * font styles from <mxConstants>.\n */\nmxXmlCanvas2D.prototype.setFontStyle = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontStyle == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontStyle.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontstyle');\n\t\telem.setAttribute('style', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setShadow\n * \n * Enables or disables shadows.\n * \n * Parameters:\n * \n * value - Boolean that specifies if shadows should be enabled.\n */\nmxXmlCanvas2D.prototype.setShadow = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadow == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadow.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadow');\n\telem.setAttribute('enabled', (value) ? '1' : '0');\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setShadowColor\n * \n * Sets the current shadow color. Default is <mxConstants.SHADOWCOLOR>.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setShadowColor = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.state.shadowColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowcolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setShadowAlpha\n * \n * Sets the current shadows alpha. Default is <mxConstants.SHADOW_OPACITY>.\n * \n * Parameters:\n * \n * value - Number that represents the new alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setShadowAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadowAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowalpha');\n\telem.setAttribute('alpha', value);\n\tthis.root.appendChild(elem);\n\t\n};\n\n/**\n * Function: setShadowOffset\n * \n * Sets the current shadow offset.\n * \n * Parameters:\n * \n * dx - Number that represents the horizontal offset of the shadow.\n * dy - Number that represents the vertical offset of the shadow.\n */\nmxXmlCanvas2D.prototype.setShadowOffset = function(dx, dy)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadowDx == dx && this.state.shadowDy == dy)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowOffset.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowoffset');\n\telem.setAttribute('dx', dx);\n\telem.setAttribute('dy', dy);\n\tthis.root.appendChild(elem);\n\t\n};\n\n/**\n * Function: rect\n * \n * Puts a rectangle into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the rectangle.\n * y - Number that represents the y-coordinate of the rectangle.\n * w - Number that represents the width of the rectangle.\n * h - Number that represents the height of the rectangle.\n */\nmxXmlCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tvar elem = this.createElement('rect');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: roundrect\n * \n * Puts a rounded rectangle into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the rectangle.\n * y - Number that represents the y-coordinate of the rectangle.\n * w - Number that represents the width of the rectangle.\n * h - Number that represents the height of the rectangle.\n * dx - Number that represents the horizontal rounding.\n * dy - Number that represents the vertical rounding.\n */\nmxXmlCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tvar elem = this.createElement('roundrect');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\telem.setAttribute('dx', this.format(dx));\n\telem.setAttribute('dy', this.format(dy));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: ellipse\n * \n * Puts an ellipse into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the ellipse.\n * y - Number that represents the y-coordinate of the ellipse.\n * w - Number that represents the width of the ellipse.\n * h - Number that represents the height of the ellipse.\n */\nmxXmlCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tvar elem = this.createElement('ellipse');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: image\n * \n * Paints an image.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the image.\n * y - Number that represents the y-coordinate of the image.\n * w - Number that represents the width of the image.\n * h - Number that represents the height of the image.\n * src - String that specifies the URL of the image.\n * aspect - Boolean indicating if the aspect of the image should be preserved.\n * flipH - Boolean indicating if the image should be flipped horizontally.\n * flipV - Boolean indicating if the image should be flipped vertically.\n */\nmxXmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tsrc = this.converter.convert(src);\n\t\n\t// LATER: Add option for embedding images as base64.\n\tvar elem = this.createElement('image');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\telem.setAttribute('src', src);\n\telem.setAttribute('aspect', (aspect) ? '1' : '0');\n\telem.setAttribute('flipH', (flipH) ? '1' : '0');\n\telem.setAttribute('flipV', (flipV) ? '1' : '0');\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: begin\n * \n * Starts a new path and puts it into the drawing buffer.\n */\nmxXmlCanvas2D.prototype.begin = function()\n{\n\tthis.root.appendChild(this.createElement('begin'));\n\tthis.lastX = 0;\n\tthis.lastY = 0;\n};\n\n/**\n * Function: moveTo\n * \n * Moves the current path the given point.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the point.\n * y - Number that represents the y-coordinate of the point.\n */\nmxXmlCanvas2D.prototype.moveTo = function(x, y)\n{\n\tvar elem = this.createElement('move');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x;\n\tthis.lastY = y;\n};\n\n/**\n * Function: lineTo\n * \n * Draws a line to the given coordinates.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the endpoint.\n * y - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.lineTo = function(x, y)\n{\n\tvar elem = this.createElement('line');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x;\n\tthis.lastY = y;\n};\n\n/**\n * Function: quadTo\n * \n * Adds a quadratic curve to the current path.\n * \n * Parameters:\n * \n * x1 - Number that represents the x-coordinate of the control point.\n * y1 - Number that represents the y-coordinate of the control point.\n * x2 - Number that represents the x-coordinate of the endpoint.\n * y2 - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tvar elem = this.createElement('quad');\n\telem.setAttribute('x1', this.format(x1));\n\telem.setAttribute('y1', this.format(y1));\n\telem.setAttribute('x2', this.format(x2));\n\telem.setAttribute('y2', this.format(y2));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x2;\n\tthis.lastY = y2;\n};\n\n/**\n * Function: curveTo\n * \n * Adds a bezier curve to the current path.\n * \n * Parameters:\n * \n * x1 - Number that represents the x-coordinate of the first control point.\n * y1 - Number that represents the y-coordinate of the first control point.\n * x2 - Number that represents the x-coordinate of the second control point.\n * y2 - Number that represents the y-coordinate of the second control point.\n * x3 - Number that represents the x-coordinate of the endpoint.\n * y3 - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.curveTo = function(x1, y1, x2, y2, x3, y3)\n{\n\tvar elem = this.createElement('curve');\n\telem.setAttribute('x1', this.format(x1));\n\telem.setAttribute('y1', this.format(y1));\n\telem.setAttribute('x2', this.format(x2));\n\telem.setAttribute('y2', this.format(y2));\n\telem.setAttribute('x3', this.format(x3));\n\telem.setAttribute('y3', this.format(y3));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x3;\n\tthis.lastY = y3;\n};\n\n/**\n * Function: close\n * \n * Closes the current path.\n */\nmxXmlCanvas2D.prototype.close = function()\n{\n\tthis.root.appendChild(this.createElement('close'));\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for\n * plain text and html for HTML markup. Background and border color as well\n * as clipping is not available in plain text labels for VML. HTML labels\n * are not available as part of shapes with no foreignObject support in SVG\n * (eg. IE9, IE10).\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the text.\n * y - Number that represents the y-coordinate of the text.\n * w - Number that represents the available width for the text or 0 for automatic width.\n * h - Number that represents the available height for the text or 0 for automatic height.\n * str - String that specifies the text to be painted.\n * align - String that represents the horizontal alignment.\n * valign - String that represents the vertical alignment.\n * wrap - Boolean that specifies if word-wrapping is enabled. Requires w > 0.\n * format - Empty string for plain text or 'html' for HTML markup.\n * overflow - Specifies the overflow behaviour of the label. Requires w > 0 and/or h > 0.\n * clip - Boolean that specifies if the label should be clipped. Requires w > 0 and/or h > 0.\n * rotation - Number that specifies the angle of the rotation around the anchor point of the text.\n * dir - Optional string that specifies the text direction. Possible values are rtl and lrt.\n */\nmxXmlCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\tif (mxUtils.isNode(str))\n\t\t{\n\t\t\tstr = mxUtils.getOuterHtml(str);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('text');\n\t\telem.setAttribute('x', this.format(x));\n\t\telem.setAttribute('y', this.format(y));\n\t\telem.setAttribute('w', this.format(w));\n\t\telem.setAttribute('h', this.format(h));\n\t\telem.setAttribute('str', str);\n\t\t\n\t\tif (align != null)\n\t\t{\n\t\t\telem.setAttribute('align', align);\n\t\t}\n\t\t\n\t\tif (valign != null)\n\t\t{\n\t\t\telem.setAttribute('valign', valign);\n\t\t}\n\t\t\n\t\telem.setAttribute('wrap', (wrap) ? '1' : '0');\n\t\t\n\t\tif (format == null)\n\t\t{\n\t\t\tformat = '';\n\t\t}\n\t\t\n\t\telem.setAttribute('format', format);\n\t\t\n\t\tif (overflow != null)\n\t\t{\n\t\t\telem.setAttribute('overflow', overflow);\n\t\t}\n\t\t\n\t\tif (clip != null)\n\t\t{\n\t\t\telem.setAttribute('clip', (clip) ? '1' : '0');\n\t\t}\n\t\t\n\t\tif (rotation != null)\n\t\t{\n\t\t\telem.setAttribute('rotation', rotation);\n\t\t}\n\t\t\n\t\tif (dir != null)\n\t\t{\n\t\t\telem.setAttribute('dir', dir);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current drawing buffer.\n */\nmxXmlCanvas2D.prototype.stroke = function()\n{\n\tthis.root.appendChild(this.createElement('stroke'));\n};\n\n/**\n * Function: fill\n * \n * Fills the current drawing buffer.\n */\nmxXmlCanvas2D.prototype.fill = function()\n{\n\tthis.root.appendChild(this.createElement('fill'));\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills the current drawing buffer and its outline.\n */\nmxXmlCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.root.appendChild(this.createElement('fillstroke'));\n};\n\n__mxOutput.mxXmlCanvas2D = typeof mxXmlCanvas2D !== 'undefined' ? mxXmlCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSvgCanvas2D\n *\n * Extends <mxAbstractCanvas2D> to implement a canvas for SVG. This canvas writes all\n * calls as SVG output to the given SVG root node.\n * \n * (code)\n * var svgDoc = mxUtils.createXmlDocument();\n * var root = (svgDoc.createElementNS != null) ?\n * \t\tsvgDoc.createElementNS(mxConstants.NS_SVG, 'svg') : svgDoc.createElement('svg');\n * \n * if (svgDoc.createElementNS == null)\n * {\n *   root.setAttribute('xmlns', mxConstants.NS_SVG);\n *   root.setAttribute('xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * else\n * {\n *   root.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * \n * var bounds = graph.getGraphBounds();\n * root.setAttribute('width', (bounds.x + bounds.width + 4) + 'px');\n * root.setAttribute('height', (bounds.y + bounds.height + 4) + 'px');\n * root.setAttribute('version', '1.1');\n * \n * svgDoc.appendChild(root);\n * \n * var svgCanvas = new mxSvgCanvas2D(root);\n * (end)\n * \n * A description of the public API is available in <mxXmlCanvas2D>.\n * \n * To disable anti-aliasing in the output, use the following code.\n * \n * (code)\n * graph.view.canvas.ownerSVGElement.setAttribute('shape-rendering', 'crispEdges');\n * (end)\n * \n * Or set the respective attribute in the SVG element directly.\n * \n * Constructor: mxSvgCanvas2D\n *\n * Constructs a new SVG canvas.\n * \n * Parameters:\n * \n * root - SVG container for the output.\n * styleEnabled - Optional boolean that specifies if a style section should be\n * added. The style section sets the default font-size, font-family and\n * stroke-miterlimit globally. Default is false.\n */\nfunction mxSvgCanvas2D(root, styleEnabled)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n\n\t/**\n\t * Variable: gradients\n\t * \n\t * Local cache of gradients for quick lookups.\n\t */\n\tthis.gradients = [];\n\n\t/**\n\t * Variable: defs\n\t * \n\t * Reference to the defs section of the SVG document. Only for export.\n\t */\n\tthis.defs = null;\n\t\n\t/**\n\t * Variable: styleEnabled\n\t * \n\t * Stores the value of styleEnabled passed to the constructor.\n\t */\n\tthis.styleEnabled = (styleEnabled != null) ? styleEnabled : false;\n\t\n\tvar svg = null;\n\t\n\t// Adds optional defs section for export\n\tif (root.ownerDocument != document)\n\t{\n\t\tvar node = root;\n\n\t\t// Finds owner SVG element in XML DOM\n\t\twhile (node != null && node.nodeName != 'svg')\n\t\t{\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\t\n\t\tsvg = node;\n\t}\n\n\tif (svg != null)\n\t{\n\t\t// Tries to get existing defs section\n\t\tvar tmp = svg.getElementsByTagName('defs');\n\t\t\n\t\tif (tmp.length > 0)\n\t\t{\n\t\t\tthis.defs = svg.getElementsByTagName('defs')[0];\n\t\t}\n\t\t\n\t\t// Adds defs section if none exists\n\t\tif (this.defs == null)\n\t\t{\n\t\t\tthis.defs = this.createElement('defs');\n\t\t\t\n\t\t\tif (svg.firstChild != null)\n\t\t\t{\n\t\t\t\tsvg.insertBefore(this.defs, svg.firstChild);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsvg.appendChild(this.defs);\n\t\t\t}\n\t\t}\n\n\t\t// Adds stylesheet\n\t\tif (this.styleEnabled)\n\t\t{\n\t\t\tthis.defs.appendChild(this.createStyle());\n\t\t}\n\t}\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxSvgCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Capability check for DOM parser.\n */\n(function()\n{\n\tmxSvgCanvas2D.prototype.useDomParser = !mxClient.IS_IE && typeof DOMParser === 'function' && typeof XMLSerializer === 'function';\n\t\n\tif (mxSvgCanvas2D.prototype.useDomParser)\n\t{\n\t\t// Checks using a generic test text if the parsing actually works. This is a workaround\n\t\t// for older browsers where the capability check returns true but the parsing fails.\n\t\ttry\n\t\t{\n\t\t\tvar doc = new DOMParser().parseFromString('test text', 'text/html');\n\t\t\tmxSvgCanvas2D.prototype.useDomParser = doc != null;\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxSvgCanvas2D.prototype.useDomParser = false;\n\t\t}\n\t}\n})();\n\n/**\n * Variable: path\n * \n * Holds the current DOM node.\n */\nmxSvgCanvas2D.prototype.node = null;\n\n/**\n * Variable: matchHtmlAlignment\n * \n * Specifies if plain text output should match the vertical HTML alignment.\n * Defaul is true.\n */\nmxSvgCanvas2D.prototype.matchHtmlAlignment = true;\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabled. Default is true.\n */\nmxSvgCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: foEnabled\n * \n * Specifies if use of foreignObject for HTML markup is allowed. Default is true.\n */\nmxSvgCanvas2D.prototype.foEnabled = true;\n\n/**\n * Variable: foAltText\n * \n * Specifies the fallback text for unsupported foreignObjects in exported\n * documents. Default is '[Object]'. If this is set to null then no fallback\n * text is added to the exported document.\n */\nmxSvgCanvas2D.prototype.foAltText = '[Object]';\n\n/**\n * Variable: foOffset\n * \n * Offset to be used for foreignObjects.\n */\nmxSvgCanvas2D.prototype.foOffset = 0;\n\n/**\n * Variable: textOffset\n * \n * Offset to be used for text elements.\n */\nmxSvgCanvas2D.prototype.textOffset = 0;\n\n/**\n * Variable: imageOffset\n * \n * Offset to be used for image elements.\n */\nmxSvgCanvas2D.prototype.imageOffset = 0;\n\n/**\n * Variable: strokeTolerance\n * \n * Adds transparent paths for strokes.\n */\nmxSvgCanvas2D.prototype.strokeTolerance = 0;\n\n/**\n * Variable: minStrokeWidth\n * \n * Minimum stroke width for output.\n */\nmxSvgCanvas2D.prototype.minStrokeWidth = 1;\n\n/**\n * Variable: refCount\n * \n * Local counter for references in SVG export.\n */\nmxSvgCanvas2D.prototype.refCount = 0;\n\n/**\n * Variable: blockImagePointerEvents\n * \n * Specifies if a transparent rectangle should be added on top of images to absorb\n * all pointer events. Default is false. This is only needed in Firefox to disable\n * control-clicks on images.\n */\nmxSvgCanvas2D.prototype.blockImagePointerEvents = false;\n\n/**\n * Variable: lineHeightCorrection\n * \n * Correction factor for <mxConstants.LINE_HEIGHT> in HTML output. Default is 1.\n */\nmxSvgCanvas2D.prototype.lineHeightCorrection = 1;\n\n/**\n * Variable: pointerEventsValue\n * \n * Default value for active pointer events. Default is all.\n */\nmxSvgCanvas2D.prototype.pointerEventsValue = 'all';\n\n/**\n * Variable: fontMetricsPadding\n * \n * Padding to be added for text that is not wrapped to account for differences\n * in font metrics on different platforms in pixels. Default is 10.\n */\nmxSvgCanvas2D.prototype.fontMetricsPadding = 10;\n\n/**\n * Variable: cacheOffsetSize\n * \n * Specifies if offsetWidth and offsetHeight should be cached. Default is true.\n * This is used to speed up repaint of text in <updateText>.\n */\nmxSvgCanvas2D.prototype.cacheOffsetSize = true;\n\n/**\n * Function: format\n * \n * Rounds all numbers to 2 decimal points.\n */\nmxSvgCanvas2D.prototype.format = function(value)\n{\n\treturn parseFloat(parseFloat(value).toFixed(2));\n};\n\n/**\n * Function: getBaseUrl\n * \n * Returns the URL of the page without the hash part. This needs to use href to\n * include any search part with no params (ie question mark alone). This is a\n * workaround for the fact that window.location.search is empty if there is\n * no search string behind the question mark.\n */\nmxSvgCanvas2D.prototype.getBaseUrl = function()\n{\n\tvar href = window.location.href;\n\tvar hash = href.lastIndexOf('#');\n\t\n\tif (hash > 0)\n\t{\n\t\thref = href.substring(0, hash);\n\t}\n\t\n\treturn href;\n};\n\n/**\n * Function: reset\n * \n * Returns any offsets for rendering pixels.\n */\nmxSvgCanvas2D.prototype.reset = function()\n{\n\tmxAbstractCanvas2D.prototype.reset.apply(this, arguments);\n\tthis.gradients = [];\n};\n\n/**\n * Function: createStyle\n * \n * Creates the optional style section.\n */\nmxSvgCanvas2D.prototype.createStyle = function(x)\n{\n\tvar style = this.createElement('style');\n\tstyle.setAttribute('type', 'text/css');\n\tmxUtils.write(style, 'svg{font-family:' + mxConstants.DEFAULT_FONTFAMILY +\n\t\t\t';font-size:' + mxConstants.DEFAULT_FONTSIZE +\n\t\t\t';fill:none;stroke-miterlimit:10}');\n\t\n\treturn style;\n};\n\n/**\n * Function: createElement\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createElement = function(tagName, namespace)\n{\n\tif (this.root.ownerDocument.createElementNS != null)\n\t{\n\t\treturn this.root.ownerDocument.createElementNS(namespace || mxConstants.NS_SVG, tagName);\n\t}\n\telse\n\t{\n\t\tvar elt = this.root.ownerDocument.createElement(tagName);\n\t\t\n\t\tif (namespace != null)\n\t\t{\n\t\t\telt.setAttribute('xmlns', namespace);\n\t\t}\n\t\t\n\t\treturn elt;\n\t}\n};\n\n/**\n * Function: getAlternateContent\n * \n * Returns the alternate content for the given foreignObject.\n */\nmxSvgCanvas2D.prototype.createAlternateContent = function(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation)\n{\n\tif (this.foAltText != null)\n\t{\n\t\tvar s = this.state;\n\t\tvar alt = this.createElement('text');\n\t\talt.setAttribute('x', Math.round(w / 2));\n\t\talt.setAttribute('y', Math.round((h + s.fontSize) / 2));\n\t\talt.setAttribute('fill', s.fontColor || 'black');\n\t\talt.setAttribute('text-anchor', 'middle');\n\t\talt.setAttribute('font-size', s.fontSize + 'px');\n\t\talt.setAttribute('font-family', s.fontFamily);\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t\t{\n\t\t\talt.setAttribute('font-weight', 'bold');\n\t\t}\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t\t{\n\t\t\talt.setAttribute('font-style', 'italic');\n\t\t}\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t\t{\n\t\t\talt.setAttribute('text-decoration', 'underline');\n\t\t}\n\t\t\n\t\tmxUtils.write(alt, this.foAltText);\n\t\t\n\t\treturn alt;\n\t}\n\telse\n\t{\n\t\treturn null;\n\t}\n};\n\n/**\n * Function: createGradientId\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createGradientId = function(start, end, alpha1, alpha2, direction)\n{\n\t// Removes illegal characters from gradient ID\n\tif (start.charAt(0) == '#')\n\t{\n\t\tstart = start.substring(1);\n\t}\n\t\n\tif (end.charAt(0) == '#')\n\t{\n\t\tend = end.substring(1);\n\t}\n\t\n\t// Workaround for gradient IDs not working in Safari 5 / Chrome 6\n\t// if they contain uppercase characters\n\tstart = start.toLowerCase() + '-' + alpha1;\n\tend = end.toLowerCase() + '-' + alpha2;\n\n\t// Wrong gradient directions possible?\n\tvar dir = null;\n\t\n\tif (direction == null || direction == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tdir = 's';\n\t}\n\telse if (direction == mxConstants.DIRECTION_EAST)\n\t{\n\t\tdir = 'e';\n\t}\n\telse\n\t{\n\t\tvar tmp = start;\n\t\tstart = end;\n\t\tend = tmp;\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tdir = 's';\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tdir = 'e';\n\t\t}\n\t}\n\t\n\treturn 'mx-gradient-' + start + '-' + end + '-' + dir;\n};\n\n/**\n * Function: getSvgGradient\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.getSvgGradient = function(start, end, alpha1, alpha2, direction)\n{\n\tvar id = this.createGradientId(start, end, alpha1, alpha2, direction);\n\tvar gradient = this.gradients[id];\n\t\n\tif (gradient == null)\n\t{\n\t\tvar svg = this.root.ownerSVGElement;\n\n\t\tvar counter = 0;\n\t\tvar tmpId = id + '-' + counter;\n\n\t\tif (svg != null)\n\t\t{\n\t\t\tgradient = svg.ownerDocument.getElementById(tmpId);\n\t\t\t\n\t\t\twhile (gradient != null && gradient.ownerSVGElement != svg)\n\t\t\t{\n\t\t\t\ttmpId = id + '-' + counter++;\n\t\t\t\tgradient = svg.ownerDocument.getElementById(tmpId);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Uses shorter IDs for export\n\t\t\ttmpId = 'id' + (++this.refCount);\n\t\t}\n\t\t\n\t\tif (gradient == null)\n\t\t{\n\t\t\tgradient = this.createSvgGradient(start, end, alpha1, alpha2, direction);\n\t\t\tgradient.setAttribute('id', tmpId);\n\t\t\t\n\t\t\tif (this.defs != null)\n\t\t\t{\n\t\t\t\tthis.defs.appendChild(gradient);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsvg.appendChild(gradient);\n\t\t\t}\n\t\t}\n\n\t\tthis.gradients[id] = gradient;\n\t}\n\n\treturn gradient.getAttribute('id');\n};\n\n/**\n * Function: createSvgGradient\n * \n * Creates the given SVG gradient.\n */\nmxSvgCanvas2D.prototype.createSvgGradient = function(start, end, alpha1, alpha2, direction)\n{\n\tvar gradient = this.createElement('linearGradient');\n\tgradient.setAttribute('x1', '0%');\n\tgradient.setAttribute('y1', '0%');\n\tgradient.setAttribute('x2', '0%');\n\tgradient.setAttribute('y2', '0%');\n\t\n\tif (direction == null || direction == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tgradient.setAttribute('y2', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_EAST)\n\t{\n\t\tgradient.setAttribute('x2', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_NORTH)\n\t{\n\t\tgradient.setAttribute('y1', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_WEST)\n\t{\n\t\tgradient.setAttribute('x1', '100%');\n\t}\n\t\n\tvar op = (alpha1 < 1) ? ';stop-opacity:' + alpha1 : '';\n\t\n\tvar stop = this.createElement('stop');\n\tstop.setAttribute('offset', '0%');\n\tstop.setAttribute('style', 'stop-color:' + start + op);\n\tgradient.appendChild(stop);\n\t\n\top = (alpha2 < 1) ? ';stop-opacity:' + alpha2 : '';\n\t\n\tstop = this.createElement('stop');\n\tstop.setAttribute('offset', '100%');\n\tstop.setAttribute('style', 'stop-color:' + end + op);\n\tgradient.appendChild(stop);\n\t\n\treturn gradient;\n};\n\n/**\n * Function: addNode\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.addNode = function(filled, stroked)\n{\n\tvar node = this.node;\n\tvar s = this.state;\n\n\tif (node != null)\n\t{\n\t\tif (node.nodeName == 'path')\n\t\t{\n\t\t\t// Checks if the path is not empty\n\t\t\tif (this.path != null && this.path.length > 0)\n\t\t\t{\n\t\t\t\tnode.setAttribute('d', this.path.join(' '));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (filled && s.fillColor != null)\n\t\t{\n\t\t\tthis.updateFill();\n\t\t}\n\t\telse if (!this.styleEnabled)\n\t\t{\n\t\t\t// Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=814952\n\t\t\tif (node.nodeName == 'ellipse' && mxClient.IS_FF)\n\t\t\t{\n\t\t\t\tnode.setAttribute('fill', 'transparent');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode.setAttribute('fill', 'none');\n\t\t\t}\n\t\t\t\n\t\t\t// Sets the actual filled state for stroke tolerance\n\t\t\tfilled = false;\n\t\t}\n\t\t\n\t\tif (stroked && s.strokeColor != null)\n\t\t{\n\t\t\tthis.updateStroke();\n\t\t}\n\t\telse if (!this.styleEnabled)\n\t\t{\n\t\t\tnode.setAttribute('stroke', 'none');\n\t\t}\n\t\t\n\t\tif (s.transform != null && s.transform.length > 0)\n\t\t{\n\t\t\tnode.setAttribute('transform', s.transform);\n\t\t}\n\t\t\n\t\tif (s.shadow)\n\t\t{\n\t\t\tthis.root.appendChild(this.createShadow(node));\n\t\t}\n\t\n\t\t// Adds stroke tolerance\n\t\tif (this.strokeTolerance > 0 && !filled)\n\t\t{\n\t\t\tthis.root.appendChild(this.createTolerance(node));\n\t\t}\n\n\t\t// Adds pointer events\n\t\tif (this.pointerEvents && (node.nodeName != 'path' ||\n\t\t\tthis.path[this.path.length - 1] == this.closeOp))\n\t\t{\n\t\t\tnode.setAttribute('pointer-events', this.pointerEventsValue);\n\t\t}\n\t\t// Enables clicks for nodes inside a link element\n\t\telse if (!this.pointerEvents && this.originalRoot == null)\n\t\t{\n\t\t\tnode.setAttribute('pointer-events', 'none');\n\t\t}\n\t\t\n\t\t// Removes invisible nodes from output if they don't handle events\n\t\tif ((node.nodeName != 'rect' && node.nodeName != 'path' && node.nodeName != 'ellipse') ||\n\t\t\t(node.getAttribute('fill') != 'none' && node.getAttribute('fill') != 'transparent') ||\n\t\t\tnode.getAttribute('stroke') != 'none' || node.getAttribute('pointer-events') != 'none')\n\t\t{\n\t\t\t// LATER: Update existing DOM for performance\t\t\n\t\t\tthis.root.appendChild(node);\n\t\t}\n\t\t\n\t\tthis.node = null;\n\t}\n};\n\n/**\n * Function: updateFill\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateFill = function()\n{\n\tvar s = this.state;\n\t\n\tif (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tthis.node.setAttribute('fill-opacity', s.alpha * s.fillAlpha);\n\t}\n\t\n\tif (s.fillColor != null)\n\t{\n\t\tif (s.gradientColor != null)\n\t\t{\n\t\t\tvar id = this.getSvgGradient(s.fillColor, s.gradientColor, s.gradientFillAlpha, s.gradientAlpha, s.gradientDirection);\n\t\t\t\n\t\t\tif (!mxClient.IS_CHROME_APP && !mxClient.IS_IE && !mxClient.IS_IE11 &&\n\t\t\t\t!mxClient.IS_EDGE && this.root.ownerDocument == document)\n\t\t\t{\n\t\t\t\t// Workaround for potential base tag and brackets must be escaped\n\t\t\t\tvar base = this.getBaseUrl().replace(/([\\(\\)])/g, '\\\\$1');\n\t\t\t\tthis.node.setAttribute('fill', 'url(' + base + '#' + id + ')');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.node.setAttribute('fill', 'url(#' + id + ')');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.node.setAttribute('fill', s.fillColor.toLowerCase());\n\t\t}\n\t}\n};\n\n/**\n * Function: getCurrentStrokeWidth\n * \n * Returns the current stroke width (>= 1), ie. max(1, this.format(this.state.strokeWidth * this.state.scale)).\n */\nmxSvgCanvas2D.prototype.getCurrentStrokeWidth = function()\n{\n\treturn Math.max(this.minStrokeWidth, Math.max(0.01, this.format(this.state.strokeWidth * this.state.scale)));\n};\n\n/**\n * Function: updateStroke\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateStroke = function()\n{\n\tvar s = this.state;\n\n\tthis.node.setAttribute('stroke', s.strokeColor.toLowerCase());\n\t\n\tif (s.alpha < 1 || s.strokeAlpha < 1)\n\t{\n\t\tthis.node.setAttribute('stroke-opacity', s.alpha * s.strokeAlpha);\n\t}\n\t\n\tvar sw = this.getCurrentStrokeWidth();\n\t\n\tif (sw != 1)\n\t{\n\t\tthis.node.setAttribute('stroke-width', sw);\n\t}\n\t\n\tif (this.node.nodeName == 'path')\n\t{\n\t\tthis.updateStrokeAttributes();\n\t}\n\t\n\tif (s.dashed)\n\t{\n\t\tthis.node.setAttribute('stroke-dasharray', this.createDashPattern(\n\t\t\t((s.fixDash) ? 1 : s.strokeWidth) * s.scale));\n\t}\n};\n\n/**\n * Function: updateStrokeAttributes\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateStrokeAttributes = function()\n{\n\tvar s = this.state;\n\t\n\t// Linejoin miter is default in SVG\n\tif (s.lineJoin != null && s.lineJoin != 'miter')\n\t{\n\t\tthis.node.setAttribute('stroke-linejoin', s.lineJoin);\n\t}\n\t\n\tif (s.lineCap != null)\n\t{\n\t\t// flat is called butt in SVG\n\t\tvar value = s.lineCap;\n\t\t\n\t\tif (value == 'flat')\n\t\t{\n\t\t\tvalue = 'butt';\n\t\t}\n\t\t\n\t\t// Linecap butt is default in SVG\n\t\tif (value != 'butt')\n\t\t{\n\t\t\tthis.node.setAttribute('stroke-linecap', value);\n\t\t}\n\t}\n\t\n\t// Miterlimit 10 is default in our document\n\tif (s.miterLimit != null && (!this.styleEnabled || s.miterLimit != 10))\n\t{\n\t\tthis.node.setAttribute('stroke-miterlimit', s.miterLimit);\n\t}\n};\n\n/**\n * Function: createDashPattern\n * \n * Creates the SVG dash pattern for the given state.\n */\nmxSvgCanvas2D.prototype.createDashPattern = function(scale)\n{\n\tvar pat = [];\n\t\n\tif (typeof(this.state.dashPattern) === 'string')\n\t{\n\t\tvar dash = this.state.dashPattern.split(' ');\n\t\t\n\t\tif (dash.length > 0)\n\t\t{\n\t\t\tfor (var i = 0; i < dash.length; i++)\n\t\t\t{\n\t\t\t\tpat[i] = Number(dash[i]) * scale;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn pat.join(' ');\n};\n\n/**\n * Function: createTolerance\n * \n * Creates a hit detection tolerance shape for the given node.\n */\nmxSvgCanvas2D.prototype.createTolerance = function(node)\n{\n\tvar tol = node.cloneNode(true);\n\tvar sw = parseFloat(tol.getAttribute('stroke-width') || 1) + this.strokeTolerance;\n\ttol.setAttribute('pointer-events', 'stroke');\n\ttol.setAttribute('visibility', 'hidden');\n\ttol.removeAttribute('stroke-dasharray');\n\ttol.setAttribute('stroke-width', sw);\n\ttol.setAttribute('fill', 'none');\n\t\n\t// Workaround for Opera ignoring the visiblity attribute above while\n\t// other browsers need a stroke color to perform the hit-detection but\n\t// do not ignore the visibility attribute. Side-effect is that Opera's\n\t// hit detection for horizontal/vertical edges seems to ignore the tol.\n\ttol.setAttribute('stroke', (mxClient.IS_OT) ? 'none' : 'white');\n\t\n\treturn tol;\n};\n\n/**\n * Function: createShadow\n * \n * Creates a shadow for the given node.\n */\nmxSvgCanvas2D.prototype.createShadow = function(node)\n{\n\tvar shadow = node.cloneNode(true);\n\tvar s = this.state;\n\n\t// Firefox uses transparent for no fill in ellipses\n\tif (shadow.getAttribute('fill') != 'none' && (!mxClient.IS_FF || shadow.getAttribute('fill') != 'transparent'))\n\t{\n\t\tshadow.setAttribute('fill', s.shadowColor);\n\t}\n\t\n\tif (shadow.getAttribute('stroke') != 'none')\n\t{\n\t\tshadow.setAttribute('stroke', s.shadowColor);\n\t}\n\n\tshadow.setAttribute('transform', 'translate(' + this.format(s.shadowDx * s.scale) +\n\t\t',' + this.format(s.shadowDy * s.scale) + ')' + (s.transform || ''));\n\tshadow.setAttribute('opacity', s.shadowAlpha);\n\t\n\treturn shadow;\n};\n\n/**\n * Function: setLink\n * \n * Experimental implementation for hyperlinks.\n */\nmxSvgCanvas2D.prototype.setLink = function(link)\n{\n\tif (link == null)\n\t{\n\t\tthis.root = this.originalRoot;\n\t}\n\telse\n\t{\n\t\tthis.originalRoot = this.root;\n\t\t\n\t\tvar node = this.createElement('a');\n\t\t\n\t\t// Workaround for implicit namespace handling in HTML5 export, IE adds NS1 namespace so use code below\n\t\t// in all IE versions except quirks mode. KNOWN: Adds xlink namespace to each image tag in output.\n\t\tif (node.setAttributeNS == null || (this.root.ownerDocument != document && document.documentMode == null))\n\t\t{\n\t\t\tnode.setAttribute('xlink:href', link);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.setAttributeNS(mxConstants.NS_XLINK, 'xlink:href', link);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(node);\n\t\tthis.root = node;\n\t}\n};\n\n/**\n * Function: rotate\n * \n * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n */\nmxSvgCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tif (theta != 0 || flipH || flipV)\n\t{\n\t\tvar s = this.state;\n\t\tcx += s.dx;\n\t\tcy += s.dy;\n\t\n\t\tcx *= s.scale;\n\t\tcy *= s.scale;\n\n\t\ts.transform = s.transform || '';\n\t\t\n\t\t// This implementation uses custom scale/translate and built-in rotation\n\t\t// Rotation state is part of the AffineTransform in state.transform\n\t\tif (flipH && flipV)\n\t\t{\n\t\t\ttheta += 180;\n\t\t}\n\t\telse if (flipH != flipV)\n\t\t{\n\t\t\tvar tx = (flipH) ? cx : 0;\n\t\t\tvar sx = (flipH) ? -1 : 1;\n\t\n\t\t\tvar ty = (flipV) ? cy : 0;\n\t\t\tvar sy = (flipV) ? -1 : 1;\n\n\t\t\ts.transform += 'translate(' + this.format(tx) + ',' + this.format(ty) + ')' +\n\t\t\t\t'scale(' + this.format(sx) + ',' + this.format(sy) + ')' +\n\t\t\t\t'translate(' + this.format(-tx) + ',' + this.format(-ty) + ')';\n\t\t}\n\t\t\n\t\tif (flipH ? !flipV : flipV)\n\t\t{\n\t\t\ttheta *= -1;\n\t\t}\n\t\t\n\t\tif (theta != 0)\n\t\t{\n\t\t\ts.transform += 'rotate(' + this.format(theta) + ',' + this.format(cx) + ',' + this.format(cy) + ')';\n\t\t}\n\t\t\n\t\ts.rotation = s.rotation + theta;\n\t\ts.rotationCx = cx;\n\t\ts.rotationCy = cy;\n\t}\n};\n\n/**\n * Function: begin\n * \n * Extends superclass to create path.\n */\nmxSvgCanvas2D.prototype.begin = function()\n{\n\tmxAbstractCanvas2D.prototype.begin.apply(this, arguments);\n\tthis.node = this.createElement('path');\n};\n\n/**\n * Function: rect\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createElement('rect');\n\tn.setAttribute('x', this.format((x + s.dx) * s.scale));\n\tn.setAttribute('y', this.format((y + s.dy) * s.scale));\n\tn.setAttribute('width', this.format(w * s.scale));\n\tn.setAttribute('height', this.format(h * s.scale));\n\t\n\tthis.node = n;\n};\n\n/**\n * Function: roundrect\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tthis.rect(x, y, w, h);\n\t\n\tif (dx > 0)\n\t{\n\t\tthis.node.setAttribute('rx', this.format(dx * this.state.scale));\n\t}\n\t\n\tif (dy > 0)\n\t{\n\t\tthis.node.setAttribute('ry', this.format(dy * this.state.scale));\n\t}\n};\n\n/**\n * Function: ellipse\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createElement('ellipse');\n\t// No rounding for consistent output with 1.x\n\tn.setAttribute('cx', Math.round((x + w / 2 + s.dx) * s.scale));\n\tn.setAttribute('cy', Math.round((y + h / 2 + s.dy) * s.scale));\n\tn.setAttribute('rx', w / 2 * s.scale);\n\tn.setAttribute('ry', h / 2 * s.scale);\n\tthis.node = n;\n};\n\n/**\n * Function: image\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tsrc = this.converter.convert(src);\n\t\n\t// LATER: Add option for embedding images as base64.\n\taspect = (aspect != null) ? aspect : true;\n\tflipH = (flipH != null) ? flipH : false;\n\tflipV = (flipV != null) ? flipV : false;\n\t\n\tvar s = this.state;\n\tx += s.dx;\n\ty += s.dy;\n\t\n\tvar node = this.createElement('image');\n\tnode.setAttribute('x', this.format(x * s.scale) + this.imageOffset);\n\tnode.setAttribute('y', this.format(y * s.scale) + this.imageOffset);\n\tnode.setAttribute('width', this.format(w * s.scale));\n\tnode.setAttribute('height', this.format(h * s.scale));\n\t\n\t// Workaround for missing namespace support\n\tif (node.setAttributeNS == null)\n\t{\n\t\tnode.setAttribute('xlink:href', src);\n\t}\n\telse\n\t{\n\t\tnode.setAttributeNS(mxConstants.NS_XLINK, 'xlink:href', src);\n\t}\n\t\n\tif (!aspect)\n\t{\n\t\tnode.setAttribute('preserveAspectRatio', 'none');\n\t}\n\n\tif (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tnode.setAttribute('opacity', s.alpha * s.fillAlpha);\n\t}\n\t\n\tvar tr = this.state.transform || '';\n\t\n\tif (flipH || flipV)\n\t{\n\t\tvar sx = 1;\n\t\tvar sy = 1;\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\tif (flipH)\n\t\t{\n\t\t\tsx = -1;\n\t\t\tdx = -w - 2 * x;\n\t\t}\n\t\t\n\t\tif (flipV)\n\t\t{\n\t\t\tsy = -1;\n\t\t\tdy = -h - 2 * y;\n\t\t}\n\t\t\n\t\t// Adds image tansformation to existing transform\n\t\ttr += 'scale(' + sx + ',' + sy + ')translate(' + (dx * s.scale) + ',' + (dy * s.scale) + ')';\n\t}\n\n\tif (tr.length > 0)\n\t{\n\t\tnode.setAttribute('transform', tr);\n\t}\n\t\n\tif (!this.pointerEvents)\n\t{\n\t\tnode.setAttribute('pointer-events', 'none');\n\t}\n\t\n\tthis.root.appendChild(node);\n\t\n\t// Disables control-clicks on images in Firefox to open in new tab\n\t// by putting a rect in the foreground that absorbs all events and\n\t// disabling all pointer-events on the original image tag.\n\tif (this.blockImagePointerEvents)\n\t{\n\t\tnode.setAttribute('style', 'pointer-events:none');\n\t\t\n\t\tnode = this.createElement('rect');\n\t\tnode.setAttribute('visibility', 'hidden');\n\t\tnode.setAttribute('pointer-events', 'fill');\n\t\tnode.setAttribute('x', this.format(x * s.scale));\n\t\tnode.setAttribute('y', this.format(y * s.scale));\n\t\tnode.setAttribute('width', this.format(w * s.scale));\n\t\tnode.setAttribute('height', this.format(h * s.scale));\n\t\tthis.root.appendChild(node);\n\t}\n};\n\n/**\n * Function: convertHtml\n * \n * Converts the given HTML string to XHTML.\n */\nmxSvgCanvas2D.prototype.convertHtml = function(val)\n{\n\tif (this.useDomParser)\n\t{\n\t\tvar doc = new DOMParser().parseFromString(val, 'text/html');\n\n\t\tif (doc != null)\n\t\t{\n\t\t\tval = new XMLSerializer().serializeToString(doc.body);\n\t\t\t\n\t\t\t// Extracts body content from DOM\n\t\t\tif (val.substring(0, 5) == '<body')\n\t\t\t{\n\t\t\t\tval = val.substring(val.indexOf('>', 5) + 1);\n\t\t\t}\n\t\t\t\n\t\t\tif (val.substring(val.length - 7, val.length) == '</body>')\n\t\t\t{\n\t\t\t\tval = val.substring(0, val.length - 7);\n\t\t\t}\n\t\t}\n\t}\n\telse if (document.implementation != null && document.implementation.createDocument != null)\n\t{\n\t\tvar xd = document.implementation.createDocument('http://www.w3.org/1999/xhtml', 'html', null);\n\t\tvar xb = xd.createElement('body');\n\t\txd.documentElement.appendChild(xb);\n\t\t\n\t\tvar div = document.createElement('div');\n\t\tdiv.innerHTML = val;\n\t\tvar child = div.firstChild;\n\t\t\n\t\twhile (child != null)\n\t\t{\n\t\t\tvar next = child.nextSibling;\n\t\t\txb.appendChild(xd.adoptNode(child));\n\t\t\tchild = next;\n\t\t}\n\t\t\n\t\treturn xb.innerHTML;\n\t}\n\telse\n\t{\n\t\tvar ta = document.createElement('textarea');\n\t\t\n\t\t// Handles special HTML entities < and > and double escaping\n\t\t// and converts unclosed br, hr and img tags to XHTML\n\t\t// LATER: Convert all unclosed tags\n\t\tta.innerHTML = val.replace(/&amp;/g, '&amp;amp;').\n\t\t\treplace(/&#60;/g, '&amp;lt;').replace(/&#62;/g, '&amp;gt;').\n\t\t\treplace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;').\n\t\t\treplace(/</g, '&lt;').replace(/>/g, '&gt;');\n\t\tval = ta.value.replace(/&/g, '&amp;').replace(/&amp;lt;/g, '&lt;').\n\t\t\treplace(/&amp;gt;/g, '&gt;').replace(/&amp;amp;/g, '&amp;').\n\t\t\treplace(/<br>/g, '<br />').replace(/<hr>/g, '<hr />').\n\t\t\treplace(/(<img[^>]+)>/gm, \"$1 />\");\n\t}\n\t\n\treturn val;\n};\n\n/**\n * Function: createDiv\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createDiv = function(str, align, valign, style, overflow)\n{\n\tvar s = this.state;\n\n\t// Inline block for rendering HTML background over SVG in Safari\n\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (s.fontSize * mxConstants.LINE_HEIGHT) + 'px' :\n\t\t(mxConstants.LINE_HEIGHT * this.lineHeightCorrection);\n\t\n\tstyle = 'display:inline-block;font-size:' + s.fontSize + 'px;font-family:' + s.fontFamily +\n\t\t';color:' + s.fontColor + ';line-height:' + lh + ';' + style;\n\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle += 'font-weight:bold;';\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle += 'font-style:italic;';\n\t}\n\t\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle += 'text-decoration:underline;';\n\t}\n\t\n\tif (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tstyle += 'text-align:center;';\n\t}\n\telse if (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstyle += 'text-align:right;';\n\t}\n\n\tvar css = '';\n\t\n\tif (s.fontBackgroundColor != null)\n\t{\n\t\tcss += 'background-color:' + s.fontBackgroundColor + ';';\n\t}\n\t\n\tif (s.fontBorderColor != null)\n\t{\n\t\tcss += 'border:1px solid ' + s.fontBorderColor + ';';\n\t}\n\t\n\tvar val = str;\n\t\n\tif (!mxUtils.isNode(val))\n\t{\n\t\tval = this.convertHtml(val);\n\t\t\n\t\tif (overflow != 'fill' && overflow != 'width')\n\t\t{\n\t\t\t// Inner div always needed to measure wrapped text\n\t\t\tval = '<div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display:inline-block;text-align:inherit;text-decoration:inherit;' + css + '\">' + val + '</div>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle += css;\n\t\t}\n\t}\n\n\t// Uses DOM API where available. This cannot be used in IE to avoid\n\t// an opening and two (!) closing TBODY tags being added to tables.\n\tif (!mxClient.IS_IE && document.createElementNS)\n\t{\n\t\tvar div = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n\t\tdiv.setAttribute('style', style);\n\t\t\n\t\tif (mxUtils.isNode(val))\n\t\t{\n\t\t\t// Creates a copy for export\n\t\t\tif (this.root.ownerDocument != document)\n\t\t\t{\n\t\t\t\tdiv.appendChild(val.cloneNode(true));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.appendChild(val);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.innerHTML = val;\n\t\t}\n\t\t\n\t\treturn div;\n\t}\n\telse\n\t{\n\t\t// Serializes for export\n\t\tif (mxUtils.isNode(val) && this.root.ownerDocument != document)\n\t\t{\n\t\t\tval = val.outerHTML;\n\t\t}\n\n\t\t// NOTE: FF 3.6 crashes if content CSS contains \"height:100%\"\n\t\treturn mxUtils.parseXml('<div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"' + style + \n\t\t\t'\">' + val + '</div>').documentElement;\n\t}\n};\n\n/**\n * Invalidates the cached offset size for the given node.\n */\nmxSvgCanvas2D.prototype.invalidateCachedOffsetSize = function(node)\n{\n\tdelete node.firstChild.mxCachedOffsetWidth;\n\tdelete node.firstChild.mxCachedFinalOffsetWidth;\n\tdelete node.firstChild.mxCachedFinalOffsetHeight;\n};\n\n/**\n * Updates existing DOM nodes for text rendering. LATER: Merge common parts with text function below.\n */\nmxSvgCanvas2D.prototype.updateText = function(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node)\n{\n\tif (node != null && node.firstChild != null && node.firstChild.firstChild != null &&\n\t\tnode.firstChild.firstChild.firstChild != null)\n\t{\n\t\t// Uses outer group for opacity and transforms to\n\t\t// fix rendering order in Chrome\n\t\tvar group = node.firstChild;\n\t\tvar fo = group.firstChild;\n\t\tvar div = fo.firstChild;\n\n\t\trotation = (rotation != null) ? rotation : 0;\n\t\t\n\t\tvar s = this.state;\n\t\tx += s.dx;\n\t\ty += s.dy;\n\t\t\n\t\tif (clip)\n\t\t{\n\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\tdiv.style.maxWidth = Math.round(w) + 'px';\n\t\t}\n\t\telse if (overflow == 'fill')\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t\tdiv.style.height = Math.round(h + 1) + 'px';\n\t\t}\n\t\telse if (overflow == 'width')\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t\t\n\t\t\tif (h > 0)\n\t\t\t{\n\t\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\t}\n\t\t}\n\n\t\tif (wrap && w > 0)\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t}\n\t\t\n\t\t// Code that depends on the size which is computed after\n\t\t// the element was added to the DOM.\n\t\tvar ow = 0;\n\t\tvar oh = 0;\n\t\t\n\t\t// Padding avoids clipping on border and wrapping for differing font metrics on platforms\n\t\tvar padX = 0;\n\t\tvar padY = 2;\n\n\t\tvar sizeDiv = div;\n\t\t\n\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t{\n\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t}\n\t\t\n\t\tvar tmp = (group.mxCachedOffsetWidth != null) ? group.mxCachedOffsetWidth : sizeDiv.offsetWidth;\n\t\tow = tmp + padX;\n\n\t\t// Recomputes the height of the element for wrapped width\n\t\tif (wrap && overflow != 'fill')\n\t\t{\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tow = Math.min(ow, w);\n\t\t\t}\n\t\t\t\n\t\t\tdiv.style.width = Math.round(ow + 1) + 'px';\n\t\t}\n\n\t\tow = (group.mxCachedFinalOffsetWidth != null) ? group.mxCachedFinalOffsetWidth : sizeDiv.offsetWidth;\n\t\toh = (group.mxCachedFinalOffsetHeight != null) ? group.mxCachedFinalOffsetHeight : sizeDiv.offsetHeight;\n\t\t\n\t\tif (this.cacheOffsetSize)\n\t\t{\n\t\t\tgroup.mxCachedOffsetWidth = tmp;\n\t\t\tgroup.mxCachedFinalOffsetWidth = ow;\n\t\t\tgroup.mxCachedFinalOffsetHeight = oh;\n\t\t}\n\t\t\n\t\tow += padX;\n\t\toh -= 2;\n\t\t\n\t\tif (clip)\n\t\t{\n\t\t\toh = Math.min(oh, h);\n\t\t\tow = Math.min(ow, w);\n\t\t}\n\n\t\tif (overflow == 'width')\n\t\t{\n\t\t\th = oh;\n\t\t}\n\t\telse if (overflow != 'fill')\n\t\t{\n\t\t\tw = ow;\n\t\t\th = oh;\n\t\t}\n\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tdx -= w / 2;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tdx -= w;\n\t\t}\n\t\t\n\t\tx += dx;\n\t\t\n\t\t// FIXME: LINE_HEIGHT not ideal for all text sizes, fix for export\n\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tdy -= h / 2;\n\t\t}\n\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy -= h;\n\t\t}\n\t\t\n\t\t// Workaround for rendering offsets\n\t\t// TODO: Check if export needs these fixes, too\n\t\tif (overflow != 'fill' && mxClient.IS_FF && mxClient.IS_WIN)\n\t\t{\n\t\t\tdy -= 2;\n\t\t}\n\t\t\n\t\ty += dy;\n\n\t\tvar tr = (s.scale != 1) ? 'scale(' + s.scale + ')' : '';\n\n\t\tif (s.rotation != 0 && this.rotateHtml)\n\t\t{\n\t\t\ttr += 'rotate(' + (s.rotation) + ',' + (w / 2) + ',' + (h / 2) + ')';\n\t\t\tvar pt = this.rotatePoint((x + w / 2) * s.scale, (y + h / 2) * s.scale,\n\t\t\t\ts.rotation, s.rotationCx, s.rotationCy);\n\t\t\tx = pt.x - w * s.scale / 2;\n\t\t\ty = pt.y - h * s.scale / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx *= s.scale;\n\t\t\ty *= s.scale;\n\t\t}\n\n\t\tif (rotation != 0)\n\t\t{\n\t\t\ttr += 'rotate(' + (rotation) + ',' + (-dx) + ',' + (-dy) + ')';\n\t\t}\n\n\t\tgroup.setAttribute('transform', 'translate(' + Math.round(x) + ',' + Math.round(y) + ')' + tr);\n\t\tfo.setAttribute('width', Math.round(Math.max(1, w)));\n\t\tfo.setAttribute('height', Math.round(Math.max(1, h)));\n\t}\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for plain\n * text and html for HTML markup. Note that HTML markup is only supported if\n * foreignObject is supported and <foEnabled> is true. (This means IE9 and later\n * does currently not support HTML text as part of shapes.)\n */\nmxSvgCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\trotation = (rotation != null) ? rotation : 0;\n\t\t\n\t\tvar s = this.state;\n\t\tx += s.dx;\n\t\ty += s.dy;\n\t\t\n\t\tif (this.foEnabled && format == 'html')\n\t\t{\n\t\t\tvar style = 'vertical-align:top;';\n\t\t\t\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tstyle += 'overflow:hidden;max-height:' + Math.round(h) + 'px;max-width:' + Math.round(w) + 'px;';\n\t\t\t}\n\t\t\telse if (overflow == 'fill')\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;height:' + Math.round(h + 1) + 'px;overflow:hidden;';\n\t\t\t}\n\t\t\telse if (overflow == 'width')\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;';\n\t\t\t\t\n\t\t\t\tif (h > 0)\n\t\t\t\t{\n\t\t\t\t\tstyle += 'max-height:' + Math.round(h) + 'px;overflow:hidden;';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (wrap && w > 0)\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;white-space:normal;word-wrap:' +\n\t\t\t\t\tmxConstants.WORD_WRAP + ';';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstyle += 'white-space:nowrap;';\n\t\t\t}\n\t\t\t\n\t\t\t// Uses outer group for opacity and transforms to\n\t\t\t// fix rendering order in Chrome\n\t\t\tvar group = this.createElement('g');\n\t\t\t\n\t\t\tif (s.alpha < 1)\n\t\t\t{\n\t\t\t\tgroup.setAttribute('opacity', s.alpha);\n\t\t\t}\n\n\t\t\tvar fo = this.createElement('foreignObject');\n\t\t\tfo.setAttribute('style', 'overflow:visible;');\n\t\t\tfo.setAttribute('pointer-events', 'all');\n\t\t\t\n\t\t\tvar div = this.createDiv(str, align, valign, style, overflow);\n\t\t\t\n\t\t\t// Ignores invalid XHTML labels\n\t\t\tif (div == null)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (dir != null)\n\t\t\t{\n\t\t\t\tdiv.setAttribute('dir', dir);\n\t\t\t}\n\n\t\t\tgroup.appendChild(fo);\n\t\t\tthis.root.appendChild(group);\n\t\t\t\n\t\t\t// Code that depends on the size which is computed after\n\t\t\t// the element was added to the DOM.\n\t\t\tvar ow = 0;\n\t\t\tvar oh = 0;\n\t\t\t\n\t\t\t// Padding avoids clipping on border and wrapping for differing font metrics on platforms\n\t\t\tvar padX = 2;\n\t\t\tvar padY = 2;\n\n\t\t\t// NOTE: IE is always export as it does not support foreign objects\n\t\t\tif (mxClient.IS_IE && (document.documentMode == 9 || !mxClient.IS_SVG))\n\t\t\t{\n\t\t\t\t// Handles non-standard namespace for getting size in IE\n\t\t\t\tvar clone = document.createElement('div');\n\t\t\t\t\n\t\t\t\tclone.style.cssText = div.getAttribute('style');\n\t\t\t\tclone.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\t\tclone.style.position = 'absolute';\n\t\t\t\tclone.style.visibility = 'hidden';\n\n\t\t\t\t// Inner DIV is needed for text measuring\n\t\t\t\tvar div2 = document.createElement('div');\n\t\t\t\tdiv2.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\t\tdiv2.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tdiv2.innerHTML = (mxUtils.isNode(str)) ? str.outerHTML : str;\n\t\t\t\tclone.appendChild(div2);\n\n\t\t\t\tdocument.body.appendChild(clone);\n\n\t\t\t\t// Workaround for different box models\n\t\t\t\tif (document.documentMode != 8 && document.documentMode != 9 && s.fontBorderColor != null)\n\t\t\t\t{\n\t\t\t\t\tpadX += 2;\n\t\t\t\t\tpadY += 2;\n\t\t\t\t}\n\n\t\t\t\tif (wrap && w > 0)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = div2.offsetWidth;\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for adding padding twice in IE8/IE9 standards mode if label is wrapped\n\t\t\t\t\tpadDx = 0;\n\t\t\t\t\t\n\t\t\t\t\t// For export, if no wrapping occurs, we add a large padding to make\n\t\t\t\t\t// sure there is no wrapping even if the text metrics are different.\n\t\t\t\t\t// This adds support for text metrics on different operating systems.\n\t\t\t\t\t// Disables wrapping if text is not wrapped for given width\n\t\t\t\t\tif (!clip && wrap && w > 0 && this.root.ownerDocument != document && overflow != 'fill')\n\t\t\t\t\t{\n\t\t\t\t\t\tvar ws = clone.style.whiteSpace;\n\t\t\t\t\t\tdiv2.style.whiteSpace = 'nowrap';\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (tmp < div2.offsetWidth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclone.style.whiteSpace = ws;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (clip)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = Math.min(tmp, w);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tclone.style.width = tmp + 'px';\n\t\n\t\t\t\t\t// Padding avoids clipping on border\n\t\t\t\t\tow = div2.offsetWidth + padX + padDx;\n\t\t\t\t\toh = div2.offsetHeight + padY;\n\t\t\t\t\t\n\t\t\t\t\t// Overrides the width of the DIV via XML DOM by using the\n\t\t\t\t\t// clone DOM style, getting the CSS text for that and\n\t\t\t\t\t// then setting that on the DIV via setAttribute\n\t\t\t\t\tclone.style.display = 'inline-block';\n\t\t\t\t\tclone.style.position = '';\n\t\t\t\t\tclone.style.visibility = '';\n\t\t\t\t\tclone.style.width = ow + 'px';\n\t\t\t\t\t\n\t\t\t\t\tdiv.setAttribute('style', clone.style.cssText);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Padding avoids clipping on border\n\t\t\t\t\tow = div2.offsetWidth + padX;\n\t\t\t\t\toh = div2.offsetHeight + padY;\n\t\t\t\t}\n\n\t\t\t\tclone.parentNode.removeChild(clone);\n\t\t\t\tfo.appendChild(div);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Uses document for text measuring during export\n\t\t\t\tif (this.root.ownerDocument != document)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfo.appendChild(div);\n\t\t\t\t}\n\n\t\t\t\tvar sizeDiv = div;\n\t\t\t\t\n\t\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t\t\n\t\t\t\t\tif (wrap && div.style.wordWrap == 'break-word')\n\t\t\t\t\t{\n\t\t\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar tmp = sizeDiv.offsetWidth;\n\t\t\t\t\n\t\t\t\t// Workaround for text measuring in hidden containers\n\t\t\t\tif (tmp == 0 && div.parentNode == fo)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\t\n\t\t\t\t\ttmp = sizeDiv.offsetWidth;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.cacheOffsetSize)\n\t\t\t\t{\n\t\t\t\t\tgroup.mxCachedOffsetWidth = tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Disables wrapping if text is not wrapped for given width\n\t\t\t\tif (!clip && wrap && w > 0 && this.root.ownerDocument != document &&\n\t\t\t\t\toverflow != 'fill' && overflow != 'width')\n\t\t\t\t{\n\t\t\t\t\tvar ws = div.style.whiteSpace;\n\t\t\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\t\t\t\n\t\t\t\t\tif (tmp < sizeDiv.offsetWidth)\n\t\t\t\t\t{\n\t\t\t\t\t\tdiv.style.whiteSpace = ws;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tow = tmp + padX - 1;\n\n\t\t\t\t// Recomputes the height of the element for wrapped width\n\t\t\t\tif (wrap && overflow != 'fill' && overflow != 'width')\n\t\t\t\t{\n\t\t\t\t\tif (clip)\n\t\t\t\t\t{\n\t\t\t\t\t\tow = Math.min(ow, w);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdiv.style.width = ow + 'px';\n\t\t\t\t}\n\n\t\t\t\tow = sizeDiv.offsetWidth;\n\t\t\t\toh = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tif (this.cacheOffsetSize)\n\t\t\t\t{\n\t\t\t\t\tgroup.mxCachedFinalOffsetWidth = ow;\n\t\t\t\t\tgroup.mxCachedFinalOffsetHeight = oh;\n\t\t\t\t}\n\n\t\t\t\toh -= padY;\n\t\t\t\t\n\t\t\t\tif (div.parentNode != fo)\n\t\t\t\t{\n\t\t\t\t\tfo.appendChild(div);\n\t\t\t\t\tdiv.style.visibility = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\toh = Math.min(oh, h);\n\t\t\t\tow = Math.min(ow, w);\n\t\t\t}\n\n\t\t\tif (overflow == 'width')\n\t\t\t{\n\t\t\t\th = oh;\n\t\t\t}\n\t\t\telse if (overflow != 'fill')\n\t\t\t{\n\t\t\t\tw = ow;\n\t\t\t\th = oh;\n\t\t\t}\n\n\t\t\tif (s.alpha < 1)\n\t\t\t{\n\t\t\t\tgroup.setAttribute('opacity', s.alpha);\n\t\t\t}\n\t\t\t\n\t\t\tvar dx = 0;\n\t\t\tvar dy = 0;\n\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tdx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tdx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tx += dx;\n\t\t\t\n\t\t\t// FIXME: LINE_HEIGHT not ideal for all text sizes, fix for export\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\tdy -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tdy -= h;\n\t\t\t}\n\t\t\t\n\t\t\t// Workaround for rendering offsets\n\t\t\t// TODO: Check if export needs these fixes, too\n\t\t\t//if (this.root.ownerDocument == document)\n\t\t\tif (overflow != 'fill' && mxClient.IS_FF && mxClient.IS_WIN)\n\t\t\t{\n\t\t\t\tdy -= 2;\n\t\t\t}\n\t\t\t\n\t\t\ty += dy;\n\n\t\t\tvar tr = (s.scale != 1) ? 'scale(' + s.scale + ')' : '';\n\n\t\t\tif (s.rotation != 0 && this.rotateHtml)\n\t\t\t{\n\t\t\t\ttr += 'rotate(' + (s.rotation) + ',' + (w / 2) + ',' + (h / 2) + ')';\n\t\t\t\tvar pt = this.rotatePoint((x + w / 2) * s.scale, (y + h / 2) * s.scale,\n\t\t\t\t\ts.rotation, s.rotationCx, s.rotationCy);\n\t\t\t\tx = pt.x - w * s.scale / 2;\n\t\t\t\ty = pt.y - h * s.scale / 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx *= s.scale;\n\t\t\t\ty *= s.scale;\n\t\t\t}\n\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\ttr += 'rotate(' + (rotation) + ',' + (-dx) + ',' + (-dy) + ')';\n\t\t\t}\n\n\t\t\tgroup.setAttribute('transform', 'translate(' + (Math.round(x) + this.foOffset) + ',' +\n\t\t\t\t(Math.round(y) + this.foOffset) + ')' + tr);\n\t\t\tfo.setAttribute('width', Math.round(Math.max(1, w)));\n\t\t\tfo.setAttribute('height', Math.round(Math.max(1, h)));\n\t\t\t\n\t\t\t// Adds alternate content if foreignObject not supported in viewer\n\t\t\tif (this.root.ownerDocument != document)\n\t\t\t{\n\t\t\t\tvar alt = this.createAlternateContent(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n\t\t\t\t\n\t\t\t\tif (alt != null)\n\t\t\t\t{\n\t\t\t\t\tfo.setAttribute('requiredFeatures', 'http://www.w3.org/TR/SVG11/feature#Extensibility');\n\t\t\t\t\tvar sw = this.createElement('switch');\n\t\t\t\t\tsw.appendChild(fo);\n\t\t\t\t\tsw.appendChild(alt);\n\t\t\t\t\tgroup.appendChild(sw);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.plainText(x, y, w, h, str, align, valign, wrap, overflow, clip, rotation, dir);\n\t\t}\n\t}\n};\n\n/**\n * Function: createClip\n * \n * Creates a clip for the given coordinates.\n */\nmxSvgCanvas2D.prototype.createClip = function(x, y, w, h)\n{\n\tx = Math.round(x);\n\ty = Math.round(y);\n\tw = Math.round(w);\n\th = Math.round(h);\n\t\n\tvar id = 'mx-clip-' + x + '-' + y + '-' + w + '-' + h;\n\n\tvar counter = 0;\n\tvar tmp = id + '-' + counter;\n\t\n\t// Resolves ID conflicts\n\twhile (document.getElementById(tmp) != null)\n\t{\n\t\ttmp = id + '-' + (++counter);\n\t}\n\t\n\tclip = this.createElement('clipPath');\n\tclip.setAttribute('id', tmp);\n\t\n\tvar rect = this.createElement('rect');\n\trect.setAttribute('x', x);\n\trect.setAttribute('y', y);\n\trect.setAttribute('width', w);\n\trect.setAttribute('height', h);\n\t\t\n\tclip.appendChild(rect);\n\t\n\treturn clip;\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for\n * plain text and html for HTML markup.\n */\nmxSvgCanvas2D.prototype.plainText = function(x, y, w, h, str, align, valign, wrap, overflow, clip, rotation, dir)\n{\n\trotation = (rotation != null) ? rotation : 0;\n\tvar s = this.state;\n\tvar size = s.fontSize;\n\tvar node = this.createElement('g');\n\tvar tr = s.transform || '';\n\tthis.updateFont(node);\n\t\n\t// Non-rotated text\n\tif (rotation != 0)\n\t{\n\t\ttr += 'rotate(' + rotation  + ',' + this.format(x * s.scale) + ',' + this.format(y * s.scale) + ')';\n\t}\n\t\n\tif (dir != null)\n\t{\n\t\tnode.setAttribute('direction', dir);\n\t}\n\n\tif (clip && w > 0 && h > 0)\n\t{\n\t\tvar cx = x;\n\t\tvar cy = y;\n\t\t\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tcx -= w / 2;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tcx -= w;\n\t\t}\n\t\t\n\t\tif (overflow != 'fill')\n\t\t{\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\tcy -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tcy -= h;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// LATER: Remove spacing from clip rectangle\n\t\tvar c = this.createClip(cx * s.scale - 2, cy * s.scale - 2, w * s.scale + 4, h * s.scale + 4);\n\t\t\n\t\tif (this.defs != null)\n\t\t{\n\t\t\tthis.defs.appendChild(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Makes sure clip is removed with referencing node\n\t\t\tthis.root.appendChild(c);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_CHROME_APP && !mxClient.IS_IE && !mxClient.IS_IE11 &&\n\t\t\t!mxClient.IS_EDGE && this.root.ownerDocument == document)\n\t\t{\n\t\t\t// Workaround for potential base tag\n\t\t\tvar base = this.getBaseUrl().replace(/([\\(\\)])/g, '\\\\$1');\n\t\t\tnode.setAttribute('clip-path', 'url(' + base + '#' + c.getAttribute('id') + ')');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.setAttribute('clip-path', 'url(#' + c.getAttribute('id') + ')');\n\t\t}\n\t}\n\n\t// Default is left\n\tvar anchor = (align == mxConstants.ALIGN_RIGHT) ? 'end' :\n\t\t\t\t\t(align == mxConstants.ALIGN_CENTER) ? 'middle' :\n\t\t\t\t\t'start';\n\n\t// Text-anchor start is default in SVG\n\tif (anchor != 'start')\n\t{\n\t\tnode.setAttribute('text-anchor', anchor);\n\t}\n\t\n\tif (!this.styleEnabled || size != mxConstants.DEFAULT_FONTSIZE)\n\t{\n\t\tnode.setAttribute('font-size', (size * s.scale) + 'px');\n\t}\n\t\n\tif (tr.length > 0)\n\t{\n\t\tnode.setAttribute('transform', tr);\n\t}\n\t\n\tif (s.alpha < 1)\n\t{\n\t\tnode.setAttribute('opacity', s.alpha);\n\t}\n\t\n\tvar lines = str.split('\\n');\n\tvar lh = Math.round(size * mxConstants.LINE_HEIGHT);\n\tvar textHeight = size + (lines.length - 1) * lh;\n\n\tvar cy = y + size - 1;\n\n\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t{\n\t\tif (overflow == 'fill')\n\t\t{\n\t\t\tcy -= h / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar dy = ((this.matchHtmlAlignment && clip && h > 0) ? Math.min(textHeight, h) : textHeight) / 2;\n\t\t\tcy -= dy + 1;\n\t\t}\n\t}\n\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tif (overflow == 'fill')\n\t\t{\n\t\t\tcy -= h;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar dy = (this.matchHtmlAlignment && clip && h > 0) ? Math.min(textHeight, h) : textHeight;\n\t\t\tcy -= dy + 2;\n\t\t}\n\t}\n\n\tfor (var i = 0; i < lines.length; i++)\n\t{\n\t\t// Workaround for bounding box of empty lines and spaces\n\t\tif (lines[i].length > 0 && mxUtils.trim(lines[i]).length > 0)\n\t\t{\n\t\t\tvar text = this.createElement('text');\n\t\t\t// LATER: Match horizontal HTML alignment\n\t\t\ttext.setAttribute('x', this.format(x * s.scale) + this.textOffset);\n\t\t\ttext.setAttribute('y', this.format(cy * s.scale) + this.textOffset);\n\t\t\t\n\t\t\tmxUtils.write(text, lines[i]);\n\t\t\tnode.appendChild(text);\n\t\t}\n\n\t\tcy += lh;\n\t}\n\n\tthis.root.appendChild(node);\n\tthis.addTextBackground(node, str, x, y, w, (overflow == 'fill') ? h : textHeight, align, valign, overflow);\n};\n\n/**\n * Function: updateFont\n * \n * Updates the text properties for the given node. (NOTE: For this to work in\n * IE, the given node must be a text or tspan element.)\n */\nmxSvgCanvas2D.prototype.updateFont = function(node)\n{\n\tvar s = this.state;\n\n\tnode.setAttribute('fill', s.fontColor);\n\t\n\tif (!this.styleEnabled || s.fontFamily != mxConstants.DEFAULT_FONTFAMILY)\n\t{\n\t\tnode.setAttribute('font-family', s.fontFamily);\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tnode.setAttribute('font-weight', 'bold');\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tnode.setAttribute('font-style', 'italic');\n\t}\n\t\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tnode.setAttribute('text-decoration', 'underline');\n\t}\n};\n\n/**\n * Function: addTextBackground\n * \n * Background color and border\n */\nmxSvgCanvas2D.prototype.addTextBackground = function(node, str, x, y, w, h, align, valign, overflow)\n{\n\tvar s = this.state;\n\n\tif (s.fontBackgroundColor != null || s.fontBorderColor != null)\n\t{\n\t\tvar bbox = null;\n\t\t\n\t\tif (overflow == 'fill' || overflow == 'width')\n\t\t{\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\ty -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\ty -= h;\n\t\t\t}\n\t\t\t\n\t\t\tbbox = new mxRectangle((x + 1) * s.scale, y * s.scale, (w - 2) * s.scale, (h + 2) * s.scale);\n\t\t}\n\t\telse if (node.getBBox != null && this.root.ownerDocument == document)\n\t\t{\n\t\t\t// Uses getBBox only if inside document for correct size\n\t\t\ttry\n\t\t\t{\n\t\t\t\tbbox = node.getBBox();\n\t\t\t\tvar ie = mxClient.IS_IE && mxClient.IS_SVG;\n\t\t\t\tbbox = new mxRectangle(bbox.x, bbox.y + ((ie) ? 0 : 1), bbox.width, bbox.height + ((ie) ? 1 : 0));\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// Ignores NS_ERROR_FAILURE in FF if container display is none.\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Computes size if not in document or no getBBox available\n\t\t\tvar div = document.createElement('div');\n\n\t\t\t// Wrapping and clipping can be ignored here\n\t\t\tdiv.style.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (s.fontSize * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\t\t\tdiv.style.fontSize = s.fontSize + 'px';\n\t\t\tdiv.style.fontFamily = s.fontFamily;\n\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\tdiv.style.position = 'absolute';\n\t\t\tdiv.style.visibility = 'hidden';\n\t\t\tdiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\tdiv.style.zoom = '1';\n\t\t\t\n\t\t\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t\t\t{\n\t\t\t\tdiv.style.fontWeight = 'bold';\n\t\t\t}\n\n\t\t\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t\t\t{\n\t\t\t\tdiv.style.fontStyle = 'italic';\n\t\t\t}\n\t\t\t\n\t\t\tstr = mxUtils.htmlEntities(str, false);\n\t\t\tdiv.innerHTML = str.replace(/\\n/g, '<br/>');\n\t\t\t\n\t\t\tdocument.body.appendChild(div);\n\t\t\tvar w = div.offsetWidth;\n\t\t\tvar h = div.offsetHeight;\n\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\ty -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\ty -= h;\n\t\t\t}\n\t\t\t\n\t\t\tbbox = new mxRectangle((x + 1) * s.scale, (y + 2) * s.scale, w * s.scale, (h + 1) * s.scale);\n\t\t}\n\t\t\n\t\tif (bbox != null)\n\t\t{\n\t\t\tvar n = this.createElement('rect');\n\t\t\tn.setAttribute('fill', s.fontBackgroundColor || 'none');\n\t\t\tn.setAttribute('stroke', s.fontBorderColor || 'none');\n\t\t\tn.setAttribute('x', Math.floor(bbox.x - 1));\n\t\t\tn.setAttribute('y', Math.floor(bbox.y - 1));\n\t\t\tn.setAttribute('width', Math.ceil(bbox.width + 2));\n\t\t\tn.setAttribute('height', Math.ceil(bbox.height));\n\n\t\t\tvar sw = (s.fontBorderColor != null) ? Math.max(1, this.format(s.scale)) : 0;\n\t\t\tn.setAttribute('stroke-width', sw);\n\t\t\t\n\t\t\t// Workaround for crisp rendering - only required if not exporting\n\t\t\tif (this.root.ownerDocument == document && mxUtils.mod(sw, 2) == 1)\n\t\t\t{\n\t\t\t\tn.setAttribute('transform', 'translate(0.5, 0.5)');\n\t\t\t}\n\t\t\t\n\t\t\tnode.insertBefore(n, node.firstChild);\n\t\t}\n\t}\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current path.\n */\nmxSvgCanvas2D.prototype.stroke = function()\n{\n\tthis.addNode(false, true);\n};\n\n/**\n * Function: fill\n * \n * Fills the current path.\n */\nmxSvgCanvas2D.prototype.fill = function()\n{\n\tthis.addNode(true, false);\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills and paints the outline of the current path.\n */\nmxSvgCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.addNode(true, true);\n};\n\n__mxOutput.mxSvgCanvas2D = typeof mxSvgCanvas2D !== 'undefined' ? mxSvgCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxVmlCanvas2D\n * \n * Implements a canvas to be used for rendering VML. Here is an example of implementing a\n * fallback for SVG images which are not supported in VML-based browsers.\n * \n * (code)\n * var mxVmlCanvas2DImage = mxVmlCanvas2D.prototype.image;\n * mxVmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n * {\n *   if (src.substring(src.length - 4, src.length) == '.svg')\n *   {\n *     src = 'http://www.jgraph.com/images/mxgraph.gif';\n *   }\n *   \n *   mxVmlCanvas2DImage.apply(this, arguments);\n * };\n * (end)\n * \n * To disable anti-aliasing in the output, use the following code.\n * \n * (code)\n * document.createStyleSheet().cssText = mxClient.VML_PREFIX + '\\\\:*{antialias:false;)}';\n * (end)\n * \n * A description of the public API is available in <mxXmlCanvas2D>. Note that\n * there is a known issue in VML where gradients are painted using the outer\n * bounding box of rotated shapes, not the actual bounds of the shape. See\n * also <text> for plain text label restrictions in shapes for VML.\n */\nvar mxVmlCanvas2D = function(root)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxVmlCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Variable: path\n * \n * Holds the current DOM node.\n */\nmxVmlCanvas2D.prototype.node = null;\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabledetB. Default is true.\n */\nmxVmlCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: moveOp\n * \n * Contains the string used for moving in paths. Default is 'm'.\n */\nmxVmlCanvas2D.prototype.moveOp = 'm';\n\n/**\n * Variable: lineOp\n * \n * Contains the string used for moving in paths. Default is 'l'.\n */\nmxVmlCanvas2D.prototype.lineOp = 'l';\n\n/**\n * Variable: curveOp\n * \n * Contains the string used for bezier curves. Default is 'c'.\n */\nmxVmlCanvas2D.prototype.curveOp = 'c';\n\n/**\n * Variable: closeOp\n * \n * Holds the operator for closing curves. Default is 'x e'.\n */\nmxVmlCanvas2D.prototype.closeOp = 'x';\n\n/**\n * Variable: rotatedHtmlBackground\n * \n * Background color for rotated HTML. Default is ''. This can be set to eg.\n * white to improve rendering of rotated text in VML for IE9.\n */\nmxVmlCanvas2D.prototype.rotatedHtmlBackground = '';\n\n/**\n * Variable: vmlScale\n * \n * Specifies the scale used to draw VML shapes.\n */\nmxVmlCanvas2D.prototype.vmlScale = 1;\n\n/**\n * Function: createElement\n * \n * Creates the given element using the document.\n */\nmxVmlCanvas2D.prototype.createElement = function(name)\n{\n\treturn document.createElement(name);\n};\n\n/**\n * Function: createVmlElement\n * \n * Creates a new element using <createElement> and prefixes the given name with\n * <mxClient.VML_PREFIX>.\n */\nmxVmlCanvas2D.prototype.createVmlElement = function(name)\n{\n\treturn this.createElement(mxClient.VML_PREFIX + ':' + name);\n};\n\n/**\n * Function: addNode\n * \n * Adds the current node to the <root>.\n */\nmxVmlCanvas2D.prototype.addNode = function(filled, stroked)\n{\n\tvar node = this.node;\n\tvar s = this.state;\n\t\n\tif (node != null)\n\t{\n\t\tif (node.nodeName == 'shape')\n\t\t{\n\t\t\t// Checks if the path is not empty\n\t\t\tif (this.path != null && this.path.length > 0)\n\t\t\t{\n\t\t\t\tnode.path = this.path.join(' ') + ' e';\n\t\t\t\tnode.style.width = this.root.style.width;\n\t\t\t\tnode.style.height = this.root.style.height;\n\t\t\t\tnode.coordsize = parseInt(node.style.width) + ' ' + parseInt(node.style.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tnode.strokeweight = this.format(Math.max(1, s.strokeWidth * s.scale / this.vmlScale)) + 'px';\n\t\t\n\t\tif (s.shadow)\n\t\t{\n\t\t\tthis.root.appendChild(this.createShadow(node,\n\t\t\t\tfilled && s.fillColor != null,\n\t\t\t\tstroked && s.strokeColor != null));\n\t\t}\n\t\t\n\t\tif (stroked && s.strokeColor != null)\n\t\t{\n\t\t\tnode.stroked = 'true';\n\t\t\tnode.strokecolor = s.strokeColor;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.stroked = 'false';\n\t\t}\n\n\t\tnode.appendChild(this.createStroke());\n\n\t\tif (filled && s.fillColor != null)\n\t\t{\n\t\t\tnode.appendChild(this.createFill());\n\t\t}\n\t\telse if (this.pointerEvents && (node.nodeName != 'shape' ||\n\t\t\tthis.path[this.path.length - 1] == this.closeOp))\n\t\t{\n\t\t\tnode.appendChild(this.createTransparentFill());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.filled = 'false';\n\t\t}\n\n\t\t// LATER: Update existing DOM for performance\n\t\tthis.root.appendChild(node);\n\t}\n};\n\n/**\n * Function: createTransparentFill\n * \n * Creates a transparent fill.\n */\nmxVmlCanvas2D.prototype.createTransparentFill = function()\n{\n\tvar fill = this.createVmlElement('fill');\n\tfill.src = mxClient.imageBasePath + '/transparent.gif';\n\tfill.type = 'tile';\n\t\n\treturn fill;\n};\n\n/**\n * Function: createFill\n * \n * Creates a fill for the current state.\n */\nmxVmlCanvas2D.prototype.createFill = function()\n{\n\tvar s = this.state;\n\t\n\t// Gradients in foregrounds not supported because special gradients\n\t// with bounds must be created for each element in graphics-canvases\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = s.fillColor;\n\n\tif (s.gradientColor != null)\n\t{\n\t\tfill.type = 'gradient';\n\t\tfill.method = 'none';\n\t\tfill.color2 = s.gradientColor;\n\t\tvar angle = 180 - s.rotation;\n\t\t\n\t\tif (s.gradientDirection == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tangle -= 90 + ((this.root.style.flip == 'x') ? 180 : 0);\n\t\t}\n\t\telse if (s.gradientDirection == mxConstants.DIRECTION_EAST)\n\t\t{\n\t\t\tangle += 90 + ((this.root.style.flip == 'x') ? 180 : 0);\n\t\t}\n\t\telse if (s.gradientDirection == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tangle -= 180 + ((this.root.style.flip == 'y') ? -180 : 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t angle += ((this.root.style.flip == 'y') ? -180 : 0);\n\t\t}\n\t\t\n\t\tif (this.root.style.flip == 'x' || this.root.style.flip == 'y')\n\t\t{\n\t\t\tangle *= -1;\n\t\t}\n\n\t\t// LATER: Fix outer bounding box for rotated shapes used in VML.\n\t\tfill.angle = mxUtils.mod(angle, 360);\n\t\tfill.opacity = (s.alpha * s.gradientFillAlpha * 100) + '%';\n\t\tfill.setAttribute(mxClient.OFFICE_PREFIX + ':opacity2', (s.alpha * s.gradientAlpha * 100) + '%');\n\t}\n\telse if (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tfill.opacity = (s.alpha * s.fillAlpha * 100) + '%';\t\t\t\n\t}\n\t\n\treturn fill;\n};\n/**\n * Function: createStroke\n * \n * Creates a fill for the current state.\n */\nmxVmlCanvas2D.prototype.createStroke = function()\n{\n\tvar s = this.state;\n\tvar stroke = this.createVmlElement('stroke');\n\tstroke.endcap = s.lineCap || 'flat';\n\tstroke.joinstyle = s.lineJoin || 'miter';\n\tstroke.miterlimit = s.miterLimit || '10';\n\t\n\tif (s.alpha < 1 || s.strokeAlpha < 1)\n\t{\n\t\tstroke.opacity = (s.alpha * s.strokeAlpha * 100) + '%';\n\t}\n\t\n\tif (s.dashed)\n\t{\n\t\tstroke.dashstyle = this.getVmlDashStyle();\n\t}\n\t\n\treturn stroke;\n};\n\n/**\n * Function: getVmlDashPattern\n * \n * Returns a VML dash pattern for the current dashPattern.\n * See http://msdn.microsoft.com/en-us/library/bb264085(v=vs.85).aspx\n */\nmxVmlCanvas2D.prototype.getVmlDashStyle = function()\n{\n\tvar result = 'dash';\n\t\n\tif (typeof(this.state.dashPattern) === 'string')\n\t{\n\t\tvar tok = this.state.dashPattern.split(' ');\n\t\t\n\t\tif (tok.length > 0 && tok[0] == 1)\n\t\t{\n\t\t\tresult = '0 2';\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createShadow\n * \n * Creates a shadow for the given node.\n */\nmxVmlCanvas2D.prototype.createShadow = function(node, filled, stroked)\n{\n\tvar s = this.state;\n\tvar rad = -s.rotation * (Math.PI / 180);\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(rad);\n\n\tvar dx = s.shadowDx * s.scale;\n\tvar dy = s.shadowDy * s.scale;\n\n\tif (this.root.style.flip == 'x')\n\t{\n\t\tdx *= -1;\n\t}\n\telse if (this.root.style.flip == 'y')\n\t{\n\t\tdy *= -1;\n\t}\n\t\n\tvar shadow = node.cloneNode(true);\n\tshadow.style.marginLeft = Math.round(dx * cos - dy * sin) + 'px';\n\tshadow.style.marginTop = Math.round(dx * sin + dy * cos) + 'px';\n\n\t// Workaround for wrong cloning in IE8 standards mode\n\tif (document.documentMode == 8)\n\t{\n\t\tshadow.strokeweight = node.strokeweight;\n\t\t\n\t\tif (node.nodeName == 'shape')\n\t\t{\n\t\t\tshadow.path = this.path.join(' ') + ' e';\n\t\t\tshadow.style.width = this.root.style.width;\n\t\t\tshadow.style.height = this.root.style.height;\n\t\t\tshadow.coordsize = parseInt(node.style.width) + ' ' + parseInt(node.style.height);\n\t\t}\n\t}\n\t\n\tif (stroked)\n\t{\n\t\tshadow.strokecolor = s.shadowColor;\n\t\tshadow.appendChild(this.createShadowStroke());\n\t}\n\telse\n\t{\n\t\tshadow.stroked = 'false';\n\t}\n\t\n\tif (filled)\n\t{\n\t\tshadow.appendChild(this.createShadowFill());\n\t}\n\telse\n\t{\n\t\tshadow.filled = 'false';\n\t}\n\t\n\treturn shadow;\n};\n\n/**\n * Function: createShadowFill\n * \n * Creates the fill for the shadow.\n */\nmxVmlCanvas2D.prototype.createShadowFill = function()\n{\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = this.state.shadowColor;\n\tfill.opacity = (this.state.alpha * this.state.shadowAlpha * 100) + '%';\n\t\n\treturn fill;\n};\n\n/**\n * Function: createShadowStroke\n * \n * Creates the stroke for the shadow.\n */\nmxVmlCanvas2D.prototype.createShadowStroke = function()\n{\n\tvar stroke = this.createStroke();\n\tstroke.opacity = (this.state.alpha * this.state.shadowAlpha * 100) + '%';\n\t\n\treturn stroke;\n};\n\n/**\n * Function: rotate\n * \n * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n */\nmxVmlCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tif (flipH && flipV)\n\t{\n\t\ttheta += 180;\n\t}\n\telse if (flipH)\n\t{\n\t\tthis.root.style.flip = 'x';\n\t}\n\telse if (flipV)\n\t{\n\t\tthis.root.style.flip = 'y';\n\t}\n\n\tif (flipH ? !flipV : flipV)\n\t{\n\t\ttheta *= -1;\n\t}\n\n\tthis.root.style.rotation = theta;\n\tthis.state.rotation = this.state.rotation + theta;\n\tthis.state.rotationCx = cx;\n\tthis.state.rotationCy = cy;\n};\n\n/**\n * Function: begin\n * \n * Extends superclass to create path.\n */\nmxVmlCanvas2D.prototype.begin = function()\n{\n\tmxAbstractCanvas2D.prototype.begin.apply(this, arguments);\n\tthis.node = this.createVmlElement('shape');\n\tthis.node.style.position = 'absolute';\n};\n\n/**\n * Function: quadTo\n * \n * Replaces quadratic curve with bezier curve in VML.\n */\nmxVmlCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tvar s = this.state;\n\n\tvar cpx0 = (this.lastX + s.dx) * s.scale;\n\tvar cpy0 = (this.lastY + s.dy) * s.scale;\n\tvar qpx1 = (x1 + s.dx) * s.scale;\n\tvar qpy1 = (y1 + s.dy) * s.scale;\n\tvar cpx3 = (x2 + s.dx) * s.scale;\n\tvar cpy3 = (y2 + s.dy) * s.scale;\n\t\n\tvar cpx1 = cpx0 + 2/3 * (qpx1 - cpx0);\n\tvar cpy1 = cpy0 + 2/3 * (qpy1 - cpy0);\n\t\n\tvar cpx2 = cpx3 + 2/3 * (qpx1 - cpx3);\n\tvar cpy2 = cpy3 + 2/3 * (qpy1 - cpy3);\n\t\n\tthis.path.push('c ' + this.format(cpx1) + ' ' + this.format(cpy1) +\n\t\t\t' ' + this.format(cpx2) + ' ' + this.format(cpy2) +\n\t\t\t' ' + this.format(cpx3) + ' ' + this.format(cpy3));\n\tthis.lastX = (cpx3 / s.scale) - s.dx;\n\tthis.lastY = (cpy3 / s.scale) - s.dy;\n\t\n};\n\n/**\n * Function: createRect\n * \n * Sets the glass gradient.\n */\nmxVmlCanvas2D.prototype.createRect = function(nodeName, x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createVmlElement(nodeName);\n\tn.style.position = 'absolute';\n\tn.style.left = this.format((x + s.dx) * s.scale) + 'px';\n\tn.style.top = this.format((y + s.dy) * s.scale) + 'px';\n\tn.style.width = this.format(w * s.scale) + 'px';\n\tn.style.height = this.format(h * s.scale) + 'px';\n\t\n\treturn n;\n};\n\n/**\n * Function: rect\n * \n * Sets the current path to a rectangle.\n */\nmxVmlCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tthis.node = this.createRect('rect', x, y, w, h);\n};\n\n/**\n * Function: roundrect\n * \n * Sets the current path to a rounded rectangle.\n */\nmxVmlCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tthis.node = this.createRect('roundrect', x, y, w, h);\n\t// SetAttribute needed here for IE8\n\tthis.node.setAttribute('arcsize', Math.max(dx * 100 / w, dy * 100 / h) + '%');\n};\n\n/**\n * Function: ellipse\n * \n * Sets the current path to an ellipse.\n */\nmxVmlCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tthis.node = this.createRect('oval', x, y, w, h);\n};\n\n/**\n * Function: image\n * \n * Paints an image.\n */\nmxVmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tvar node = null;\n\t\n\tif (!aspect)\n\t{\n\t\tnode = this.createRect('image', x, y, w, h);\n\t\tnode.src = src;\n\t}\n\telse\n\t{\n\t\t// Uses fill with aspect to avoid asynchronous update of size\n\t\tnode = this.createRect('rect', x, y, w, h);\n\t\tnode.stroked = 'false';\n\t\t\n\t\t// Handles image aspect via fill\n\t\tvar fill = this.createVmlElement('fill');\n\t\tfill.aspect = (aspect) ? 'atmost' : 'ignore';\n\t\tfill.rotate = 'true';\n\t\tfill.type = 'frame';\n\t\tfill.src = src;\n\n\t\tnode.appendChild(fill);\n\t}\n\t\n\tif (flipH && flipV)\n\t{\n\t\tnode.style.rotation = '180';\n\t}\n\telse if (flipH)\n\t{\n\t\tnode.style.flip = 'x';\n\t}\n\telse if (flipV)\n\t{\n\t\tnode.style.flip = 'y';\n\t}\n\t\n\tif (this.state.alpha < 1 || this.state.fillAlpha < 1)\n\t{\n\t\t// KNOWN: Borders around transparent images in IE<9. Using fill.opacity\n\t\t// fixes this problem by adding a white background in all IE versions.\n\t\tnode.style.filter += 'alpha(opacity=' + (this.state.alpha * this.state.fillAlpha * 100) + ')';\n\t}\n\n\tthis.root.appendChild(node);\n};\n\n/**\n * Function: createText\n * \n * Creates the innermost element that contains the HTML text.\n */\nmxVmlCanvas2D.prototype.createDiv = function(str, align, valign, overflow)\n{\n\tvar div = this.createElement('div');\n\tvar state = this.state;\n\n\tvar css = '';\n\t\n\tif (state.fontBackgroundColor != null)\n\t{\n\t\tcss += 'background-color:' + state.fontBackgroundColor + ';';\n\t}\n\t\n\tif (state.fontBorderColor != null)\n\t{\n\t\tcss += 'border:1px solid ' + state.fontBorderColor + ';';\n\t}\n\t\n\tif (mxUtils.isNode(str))\n\t{\n\t\tdiv.appendChild(str);\n\t}\n\telse\n\t{\n\t\tif (overflow != 'fill' && overflow != 'width')\n\t\t{\n\t\t\tvar div2 = this.createElement('div');\n\t\t\tdiv2.style.cssText = css;\n\t\t\tdiv2.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\tdiv2.style.zoom = '1';\n\t\t\tdiv2.style.textDecoration = 'inherit';\n\t\t\tdiv2.innerHTML = str;\n\t\t\tdiv.appendChild(div2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.style.cssText = css;\n\t\t\tdiv.innerHTML = str;\n\t\t}\n\t}\n\t\n\tvar style = div.style;\n\n\tstyle.fontSize = (state.fontSize / this.vmlScale) + 'px';\n\tstyle.fontFamily = state.fontFamily;\n\tstyle.color = state.fontColor;\n\tstyle.verticalAlign = 'top';\n\tstyle.textAlign = align || 'left';\n\tstyle.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (state.fontSize * mxConstants.LINE_HEIGHT / this.vmlScale) + 'px' : mxConstants.LINE_HEIGHT;\n\n\tif ((state.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle.fontWeight = 'bold';\n\t}\n\n\tif ((state.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle.fontStyle = 'italic';\n\t}\n\t\n\tif ((state.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle.textDecoration = 'underline';\n\t}\n\t\n\treturn div;\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for plain\n * text and html for HTML markup. Clipping, text background and border are not\n * supported for plain text in VML.\n */\nmxVmlCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\tvar s = this.state;\n\t\t\n\t\tif (format == 'html')\n\t\t{\n\t\t\tif (s.rotation != null)\n\t\t\t{\n\t\t\t\tvar pt = this.rotatePoint(x, y, s.rotation, s.rotationCx, s.rotationCy);\n\t\t\t\t\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\n\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tx += s.dx;\n\t\t\t\ty += s.dy;\n\t\t\t\t\n\t\t\t\t// Workaround for rendering offsets\n\t\t\t\tif (overflow != 'fill' && valign == mxConstants.ALIGN_TOP)\n\t\t\t\t{\n\t\t\t\t\ty -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx *= s.scale;\n\t\t\t\ty *= s.scale;\n\t\t\t}\n\n\t\t\t// Adds event transparency in IE8 standards without the transparent background\n\t\t\t// filter which cannot be used due to bugs in the zoomed bounding box (too slow)\n\t\t\t// FIXME: No event transparency if inside v:rect (ie part of shape)\n\t\t\t// KNOWN: Offset wrong for rotated text with word that are longer than the wrapping\n\t\t\t// width in IE8 because real width of text cannot be determined here.\n\t\t\t// This should be fixed in mxText.updateBoundingBox by calling before this and\n\t\t\t// passing the real width to this method if not clipped and wrapped.\n\t\t\tvar abs = (document.documentMode == 8 && !mxClient.IS_EM) ? this.createVmlElement('group') : this.createElement('div');\n\t\t\tabs.style.position = 'absolute';\n\t\t\tabs.style.display = 'inline';\n\t\t\tabs.style.left = this.format(x) + 'px';\n\t\t\tabs.style.top = this.format(y) + 'px';\n\t\t\tabs.style.zoom = s.scale;\n\n\t\t\tvar box = this.createElement('div');\n\t\t\tbox.style.position = 'relative';\n\t\t\tbox.style.display = 'inline';\n\t\t\t\n\t\t\tvar margin = mxUtils.getAlignmentAsPoint(align, valign);\n\t\t\tvar dx = margin.x;\n\t\t\tvar dy = margin.y;\n\n\t\t\tvar div = this.createDiv(str, align, valign, overflow);\n\t\t\tvar inner = this.createElement('div');\n\t\t\t\n\t\t\tif (dir != null)\n\t\t\t{\n\t\t\t\tdiv.setAttribute('dir', dir);\n\t\t\t}\n\n\t\t\tif (wrap && w > 0)\n\t\t\t{\n\t\t\t\tif (!clip)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.width = Math.round(w) + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdiv.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tdiv.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t\t\t// LATER: Check if other cases need to be handled\n\t\t\t\tif (div.style.wordWrap == 'break-word')\n\t\t\t\t{\n\t\t\t\t\tvar tmp = div;\n\t\t\t\t\t\n\t\t\t\t\tif (tmp.firstChild != null && tmp.firstChild.nodeName == 'DIV')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp.firstChild.style.width = '100%';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\t}\n\t\t\t\n\t\t\tvar rot = s.rotation + (rotation || 0);\n\t\t\t\n\t\t\tif (this.rotateHtml && rot != 0)\n\t\t\t{\n\t\t\t\tinner.style.display = 'inline';\n\t\t\t\tinner.style.zoom = '1';\n\t\t\t\tinner.appendChild(div);\n\n\t\t\t\t// Box not needed for rendering in IE8 standards\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM && this.root.nodeName != 'DIV')\n\t\t\t\t{\n\t\t\t\t\tbox.appendChild(inner);\n\t\t\t\t\tabs.appendChild(box);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tabs.appendChild(inner);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tbox.appendChild(div);\n\t\t\t\tabs.appendChild(box);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.style.display = 'inline';\n\t\t\t\tabs.appendChild(div);\n\t\t\t}\n\t\t\t\n\t\t\t// Inserts the node into the DOM\n\t\t\tif (this.root.nodeName != 'DIV')\n\t\t\t{\n\t\t\t\t// Rectangle to fix position in group\n\t\t\t\tvar rect = this.createVmlElement('rect');\n\t\t\t\trect.stroked = 'false';\n\t\t\t\trect.filled = 'false';\n\n\t\t\t\trect.appendChild(abs);\n\t\t\t\tthis.root.appendChild(rect);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.root.appendChild(abs);\n\t\t\t}\n\t\t\t\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = Math.round(w) + 'px';\n\t\t\t\t\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (overflow == 'fill')\n\t\t\t{\n\t\t\t\t// KNOWN: Affects horizontal alignment in quirks\n\t\t\t\t// but fill should only be used with align=left\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = (Math.max(0, w) + 1) + 'px';\n\t\t\t\tdiv.style.height = (Math.max(0, h) + 1) + 'px';\n\t\t\t}\n\t\t\telse if (overflow == 'width')\n\t\t\t{\n\t\t\t\t// KNOWN: Affects horizontal alignment in quirks\n\t\t\t\t// but fill should only be used with align=left\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = (Math.max(0, w) + 1) + 'px';\n\t\t\t\tdiv.style.maxHeight = (Math.max(0, h) + 1) + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (this.rotateHtml && rot != 0)\n\t\t\t{\n\t\t\t\tvar rad = rot * (Math.PI / 180);\n\t\t\t\t\n\t\t\t\t// Precalculate cos and sin for the rotation\n\t\t\t\tvar real_cos = parseFloat(parseFloat(Math.cos(rad)).toFixed(8));\n\t\t\t\tvar real_sin = parseFloat(parseFloat(Math.sin(-rad)).toFixed(8));\n\n\t\t\t\trad %= 2 * Math.PI;\n\t\t\t\tif (rad < 0) rad += 2 * Math.PI;\n\t\t\t\trad %= Math.PI;\n\t\t\t\tif (rad > Math.PI / 2) rad = Math.PI - rad;\n\t\t\t\t\n\t\t\t\tvar cos = Math.cos(rad);\n\t\t\t\tvar sin = Math.sin(rad);\n\n\t\t\t\t// Adds div to document to measure size\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.display = 'inline-block';\n\t\t\t\t\tinner.style.display = 'inline-block';\n\t\t\t\t\tbox.style.display = 'inline-block';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\tdiv.style.position = 'absolute';\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\n\t\t\t\tvar sizeDiv = div;\n\t\t\t\t\n\t\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar tmp = sizeDiv.offsetWidth + 3;\n\t\t\t\tvar oh = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tif (clip)\n\t\t\t\t{\n\t\t\t\t\tw = Math.min(w, tmp);\n\t\t\t\t\toh = Math.min(oh, h);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tw = tmp;\n\t\t\t\t}\n\n\t\t\t\t// Handles words that are longer than the given wrapping width\n\t\t\t\tif (wrap)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.width = w + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Simulates max-height in quirks\n\t\t\t\tif (mxClient.IS_QUIRKS && (clip || overflow == 'width') && oh > h)\n\t\t\t\t{\n\t\t\t\t\toh = h;\n\t\t\t\t\t\n\t\t\t\t\t// Quirks does not support maxHeight\n\t\t\t\t\tdiv.style.height = oh + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\th = oh;\n\n\t\t\t\tvar top_fix = (h - h * cos + w * -sin) / 2 - real_sin * w * (dx + 0.5) + real_cos * h * (dy + 0.5);\n\t\t\t\tvar left_fix = (w - w * cos + h * -sin) / 2 + real_cos * w * (dx + 0.5) + real_sin * h * (dy + 0.5);\n\n\t\t\t\tif (abs.nodeName == 'group' && this.root.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\t// Workaround for bug where group gets moved away if left and top are non-zero in IE8 standards\n\t\t\t\t\tvar pos = this.createElement('div');\n\t\t\t\t\tpos.style.display = 'inline-block';\n\t\t\t\t\tpos.style.position = 'absolute';\n\t\t\t\t\tpos.style.left = this.format(x + (left_fix - w / 2) * s.scale) + 'px';\n\t\t\t\t\tpos.style.top = this.format(y + (top_fix - h / 2) * s.scale) + 'px';\n\t\t\t\t\t\n\t\t\t\t\tabs.parentNode.appendChild(pos);\n\t\t\t\t\tpos.appendChild(abs);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar sc = (document.documentMode == 8 && !mxClient.IS_EM) ? 1 : s.scale;\n\t\t\t\t\t\n\t\t\t\t\tabs.style.left = this.format(x + (left_fix - w / 2) * sc) + 'px';\n\t\t\t\t\tabs.style.top = this.format(y + (top_fix - h / 2) * sc) + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// KNOWN: Rotated text rendering quality is bad for IE9 quirks\n\t\t\t\tinner.style.filter = \"progid:DXImageTransform.Microsoft.Matrix(M11=\"+real_cos+\", M12=\"+\n\t\t\t\t\treal_sin+\", M21=\"+(-real_sin)+\", M22=\"+real_cos+\", sizingMethod='auto expand')\";\n\t\t\t\tinner.style.backgroundColor = this.rotatedHtmlBackground;\n\t\t\t\t\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tinner.style.filter += 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\n\t\t\t\t// Restore parent node for DIV\n\t\t\t\tinner.appendChild(div);\n\t\t\t\tdiv.style.position = '';\n\t\t\t\tdiv.style.visibility = '';\n\t\t\t}\n\t\t\telse if (document.documentMode != 8 || mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tdiv.style.verticalAlign = 'top';\n\t\t\t\t\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tabs.style.filter = 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Adds div to document to measure size\n\t\t\t\tvar divParent = div.parentNode;\n\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\n\t\t\t\tw = div.offsetWidth;\n\t\t\t\tvar oh = div.offsetHeight;\n\t\t\t\t\n\t\t\t\t// Simulates max-height in quirks\n\t\t\t\tif (mxClient.IS_QUIRKS && clip && oh > h)\n\t\t\t\t{\n\t\t\t\t\toh = h;\n\t\t\t\t\t\n\t\t\t\t\t// Quirks does not support maxHeight\n\t\t\t\t\tdiv.style.height = oh + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\th = oh;\n\t\t\t\t\n\t\t\t\tdiv.style.visibility = '';\n\t\t\t\tdivParent.appendChild(div);\n\t\t\t\t\n\t\t\t\tabs.style.left = this.format(x + w * dx * this.state.scale) + 'px';\n\t\t\t\tabs.style.top = this.format(y + h * dy * this.state.scale) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.filter = 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Faster rendering in IE8 without offsetWidth/Height\n\t\t\t\tbox.style.left = (dx * 100) + '%';\n\t\t\t\tbox.style.top = (dy * 100) + '%';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.plainText(x, y, w, h, mxUtils.htmlEntities(str, false), align, valign, wrap, format, overflow, clip, rotation, dir);\n\t\t}\n\t}\n};\n\n/**\n * Function: plainText\n * \n * Paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.plainText = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\t// TextDirection is ignored since this code is not used (format is always HTML in the text function)\n\tvar s = this.state;\n\tx = (x + s.dx) * s.scale;\n\ty = (y + s.dy) * s.scale;\n\t\n\tvar node = this.createVmlElement('shape');\n\tnode.style.width = '1px';\n\tnode.style.height = '1px';\n\tnode.stroked = 'false';\n\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = s.fontColor;\n\tfill.opacity = (s.alpha * 100) + '%';\n\tnode.appendChild(fill);\n\t\n\tvar path = this.createVmlElement('path');\n\tpath.textpathok = 'true';\n\tpath.v = 'm ' + this.format(0) + ' ' + this.format(0) + ' l ' + this.format(1) + ' ' + this.format(0);\n\t\n\tnode.appendChild(path);\n\t\n\t// KNOWN: Font family and text decoration ignored\n\tvar tp = this.createVmlElement('textpath');\n\ttp.style.cssText = 'v-text-align:' + align;\n\ttp.style.align = align;\n\ttp.style.fontFamily = s.fontFamily;\n\ttp.string = str;\n\ttp.on = 'true';\n\t\n\t// Scale via fontsize instead of node.style.zoom for correct offsets in IE8\n\tvar size = s.fontSize * s.scale / this.vmlScale;\n\ttp.style.fontSize = size + 'px';\n\t\n\t// Bold\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\ttp.style.fontWeight = 'bold';\n\t}\n\t\n\t// Italic\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\ttp.style.fontStyle = 'italic';\n\t}\n\n\t// Underline\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\ttp.style.textDecoration = 'underline';\n\t}\n\n\tvar lines = str.split('\\n');\n\tvar textHeight = size + (lines.length - 1) * size * mxConstants.LINE_HEIGHT;\n\tvar dx = 0;\n\tvar dy = 0;\n\n\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tdy = - textHeight / 2;\n\t}\n\telse if (valign != mxConstants.ALIGN_MIDDLE) // top\n\t{\n\t\tdy = textHeight / 2;\n\t}\n\n\tif (rotation != null)\n\t{\n\t\tnode.style.rotation = rotation;\n\t\tvar rad = rotation * (Math.PI / 180);\n\t\tdx = Math.sin(rad) * dy;\n\t\tdy = Math.cos(rad) * dy;\n\t}\n\n\t// FIXME: Clipping is relative to bounding box\n\t/*if (clip)\n\t{\n\t\tnode.style.clip = 'rect(0px ' + this.format(w) + 'px ' + this.format(h) + 'px 0px)';\n\t}*/\n\t\n\tnode.appendChild(tp);\n\tnode.style.left = this.format(x - dx) + 'px';\n\tnode.style.top = this.format(y + dy) + 'px';\n\t\n\tthis.root.appendChild(node);\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.stroke = function()\n{\n\tthis.addNode(false, true);\n};\n\n/**\n * Function: fill\n * \n * Fills the current path.\n */\nmxVmlCanvas2D.prototype.fill = function()\n{\n\tthis.addNode(true, false);\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills and paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.addNode(true, true);\n};\n\n__mxOutput.mxVmlCanvas2D = typeof mxVmlCanvas2D !== 'undefined' ? mxVmlCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGuide\n *\n * Implements the alignment of selection cells to other cells in the graph.\n * \n * Constructor: mxGuide\n * \n * Constructs a new guide object.\n */\nfunction mxGuide(graph, states)\n{\n\tthis.graph = graph;\n\tthis.setStates(states);\n};\n\n/**\n * Variable: graph\n *\n * Reference to the enclosing <mxGraph> instance.\n */\nmxGuide.prototype.graph = null;\n\n/**\n * Variable: states\n * \n * Contains the <mxCellStates> that are used for alignment.\n */\nmxGuide.prototype.states = null;\n\n/**\n * Variable: horizontal\n *\n * Specifies if horizontal guides are enabled. Default is true.\n */\nmxGuide.prototype.horizontal = true;\n\n/**\n * Variable: vertical\n *\n * Specifies if vertical guides are enabled. Default is true.\n */\nmxGuide.prototype.vertical = true;\n\n/**\n * Variable: vertical\n *\n * Holds the <mxShape> for the horizontal guide.\n */\nmxGuide.prototype.guideX = null;\n\n/**\n * Variable: vertical\n *\n * Holds the <mxShape> for the vertical guide.\n */\nmxGuide.prototype.guideY = null;\n\n/**\n * Function: setStates\n * \n * Sets the <mxCellStates> that should be used for alignment.\n */\nmxGuide.prototype.setStates = function(states)\n{\n\tthis.states = states;\n};\n\n/**\n * Function: isEnabledForEvent\n * \n * Returns true if the guide should be enabled for the given native event. This\n * implementation always returns true.\n */\nmxGuide.prototype.isEnabledForEvent = function(evt)\n{\n\treturn true;\n};\n\n/**\n * Function: getGuideTolerance\n * \n * Returns the tolerance for the guides. Default value is gridSize / 2.\n */\nmxGuide.prototype.getGuideTolerance = function()\n{\n\treturn this.graph.gridSize / 2;\n};\n\n/**\n * Function: createGuideShape\n * \n * Returns the mxShape to be used for painting the respective guide. This\n * implementation returns a new, dashed and crisp <mxPolyline> using\n * <mxConstants.GUIDE_COLOR> and <mxConstants.GUIDE_STROKEWIDTH> as the format.\n * \n * Parameters:\n * \n * horizontal - Boolean that specifies which guide should be created.\n */\nmxGuide.prototype.createGuideShape = function(horizontal)\n{\n\tvar guide = new mxPolyline([], mxConstants.GUIDE_COLOR, mxConstants.GUIDE_STROKEWIDTH);\n\tguide.isDashed = true;\n\t\n\treturn guide;\n};\n\n/**\n * Function: move\n * \n * Moves the <bounds> by the given <mxPoint> and returnt the snapped point.\n */\nmxGuide.prototype.move = function(bounds, delta, gridEnabled, clone)\n{\n\tif (this.states != null && (this.horizontal || this.vertical) && bounds != null && delta != null)\n\t{\n\t\tvar trx = this.graph.getView().translate;\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\t\n\t\tvar overrideX = false;\n\t\tvar stateX = null;\n\t\tvar valueX = null;\n\t\tvar overrideY = false;\n\t\tvar stateY = null;\n\t\tvar valueY = null;\n\t\t\n\t\tvar tt = this.getGuideTolerance();\n\t\tvar ttX = tt;\n\t\tvar ttY = tt;\n\t\t\n\t\tvar b = bounds.clone();\n\t\tb.x += delta.x;\n\t\tb.y += delta.y;\n\t\t\n\t\tvar left = b.x;\n\t\tvar right = b.x + b.width;\n\t\tvar center = b.getCenterX();\n\t\tvar top = b.y;\n\t\tvar bottom = b.y + b.height;\n\t\tvar middle = b.getCenterY();\n\t\n\t\t// Snaps the left, center and right to the given x-coordinate\n\t\tfunction snapX(x, state)\n\t\t{\n\t\t\tx += this.graph.panDx;\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (Math.abs(x - center) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.getCenterX();\n\t\t\t\tttX = Math.abs(x - center);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(x - left) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.x;\n\t\t\t\tttX = Math.abs(x - left);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(x - right) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.x - bounds.width;\n\t\t\t\tttX = Math.abs(x - right);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateX = state;\n\t\t\t\tvalueX = Math.round(x - this.graph.panDx);\n\t\t\t\t\n\t\t\t\tif (this.guideX == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideX = this.createGuideShape(true);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideX.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideX.pointerEvents = false;\n\t\t\t\t\tthis.guideX.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideX = overrideX || override;\n\t\t};\n\t\t\n\t\t// Snaps the top, middle or bottom to the given y-coordinate\n\t\tfunction snapY(y)\n\t\t{\n\t\t\ty += this.graph.panDy;\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (Math.abs(y - middle) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.getCenterY();\n\t\t\t\tttY = Math.abs(y -  middle);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(y - top) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.y;\n\t\t\t\tttY = Math.abs(y - top);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(y - bottom) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.y - bounds.height;\n\t\t\t\tttY = Math.abs(y - bottom);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateY = state;\n\t\t\t\tvalueY = Math.round(y - this.graph.panDy);\n\t\t\t\t\n\t\t\t\tif (this.guideY == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideY = this.createGuideShape(false);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideY.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideY.pointerEvents = false;\n\t\t\t\t\tthis.guideY.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideY = overrideY || override;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < this.states.length; i++)\n\t\t{\n\t\t\tvar state =  this.states[i];\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\t// Align x\n\t\t\t\tif (this.horizontal)\n\t\t\t\t{\n\t\t\t\t\tsnapX.call(this, state.getCenterX(), state);\n\t\t\t\t\tsnapX.call(this, state.x, state);\n\t\t\t\t\tsnapX.call(this, state.x + state.width, state);\n\t\t\t\t}\n\t\n\t\t\t\t// Align y\n\t\t\t\tif (this.vertical)\n\t\t\t\t{\n\t\t\t\t\tsnapY.call(this, state.getCenterY(), state);\n\t\t\t\t\tsnapY.call(this, state.y, state);\n\t\t\t\t\tsnapY.call(this, state.y + state.height, state);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Moves cells that are off-grid back to the grid on move\n\t\tif (gridEnabled)\n\t\t{\n\t\t\tif (!overrideX)\n\t\t\t{\n\t\t\t\tvar tx = bounds.x - (this.graph.snap(bounds.x /\n\t\t\t\t\tscale - trx.x) + trx.x) * scale;\n\t\t\t\tdx = this.graph.snap(dx / scale) * scale - tx;\n\t\t\t}\n\t\t\t\n\t\t\tif (!overrideY)\n\t\t\t{\n\t\t\t\tvar ty = bounds.y - (this.graph.snap(bounds.y /\n\t\t\t\t\tscale - trx.y) + trx.y) * scale;\n\t\t\t\tdy = this.graph.snap(dy / scale) * scale - ty;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Redraws the guides\n\t\tvar c = this.graph.container;\n\t\t\n\t\tif (!overrideX && this.guideX != null)\n\t\t{\n\t\t\tthis.guideX.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideX != null)\n\t\t{\n\t\t\tif (stateX != null && bounds != null)\n\t\t\t{\n\t\t\t\tminY = Math.min(bounds.y + dy - this.graph.panDy, stateX.y);\n\t\t\t\tmaxY = Math.max(bounds.y + bounds.height + dy - this.graph.panDy, stateX.y + stateX.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (minY != null && maxY != null)\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, minY), new mxPoint(valueX, maxY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, -this.graph.panDy), new mxPoint(valueX, c.scrollHeight - 3 - this.graph.panDy)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideX.stroke = this.getGuideColor(stateX, true);\n\t\t\tthis.guideX.node.style.visibility = 'visible';\n\t\t\tthis.guideX.redraw();\n\t\t}\n\t\t\n\t\tif (!overrideY && this.guideY != null)\n\t\t{\n\t\t\tthis.guideY.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideY != null)\n\t\t{\n\t\t\tif (stateY != null && bounds != null)\n\t\t\t{\n\t\t\t\tminX = Math.min(bounds.x + dx - this.graph.panDx, stateY.x);\n\t\t\t\tmaxX = Math.max(bounds.x + bounds.width + dx - this.graph.panDx, stateY.x + stateY.width);\n\t\t\t}\n\t\t\t\n\t\t\tif (minX != null && maxX != null)\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(minX, valueY), new mxPoint(maxX, valueY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(-this.graph.panDx, valueY), new mxPoint(c.scrollWidth - 3 - this.graph.panDx, valueY)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideY.stroke = this.getGuideColor(stateY, false);\n\t\t\tthis.guideY.node.style.visibility = 'visible';\n\t\t\tthis.guideY.redraw();\n\t\t}\n\t\t\n\t\tdelta = new mxPoint(dx, dy);\n\t}\n\t\n\treturn delta;\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.getGuideColor = function(state, horizontal)\n{\n\treturn mxConstants.GUIDE_COLOR;\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.hide = function()\n{\n\tthis.setVisible(false);\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides the current guides.\n */\nmxGuide.prototype.setVisible = function(visible)\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys all resources that this object uses.\n */\nmxGuide.prototype.destroy = function()\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.destroy();\n\t\tthis.guideX = null;\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.destroy();\n\t\tthis.guideY = null;\n\t}\n};\n\n__mxOutput.mxGuide = typeof mxGuide !== 'undefined' ? mxGuide : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStencil\n *\n * Implements a generic shape which is based on a XML node as a description.\n * \n * shape:\n * \n * The outer element is *shape*, that has attributes:\n * \n * - \"name\", string, required. The stencil name that uniquely identifies the shape.\n * - \"w\" and \"h\" are optional decimal view bounds. This defines your co-ordinate\n * system for the graphics operations in the shape. The default is 100,100.\n * - \"aspect\", optional string. Either \"variable\", the default, or \"fixed\". Fixed\n * means always render the shape with the aspect ratio defined by the ratio w/h.\n * Variable causes the ratio to match that of the geometry of the current vertex.\n * - \"strokewidth\", optional string. Either an integer or the string \"inherit\".\n * \"inherit\" indicates that the strokeWidth of the cell is only changed on scaling,\n * not on resizing. Default is \"1\".\n * If numeric values are used, the strokeWidth of the cell is changed on both\n * scaling and resizing and the value defines the multiple that is applied to\n * the width.\n * \n * connections:\n * \n * If you want to define specific fixed connection points on the shape use the\n * *connections* element. Each *constraint* element within connections defines\n * a fixed connection point on the shape. Constraints have attributes:\n * \n * - \"perimeter\", required. 1 or 0. 0 sets the connection point where specified\n * by x,y. 1 Causes the position of the connection point to be extrapolated from\n * the center of the shape, through x,y to the point of intersection with the\n * perimeter of the shape.\n * - \"x\" and \"y\" are the position of the fixed point relative to the bounds of\n * the shape. They can be automatically adjusted if perimeter=1. So, (0,0) is top\n * left, (0.5,0.5) the center, (1,0.5) the center of the right hand edge of the\n * bounds, etc. Values may be less than 0 or greater than 1 to be positioned\n * outside of the shape.\n * - \"name\", optional string. A unique identifier for the port on the shape.\n * \n * background and foreground:\n * \n * The path of the graphics drawing is split into two elements, *foreground* and\n * *background*. The split is to define which part any shadow applied to the shape\n * is derived from (the background). This, generally, means the background is the\n * line tracing of the outside of the shape, but not always.\n * \n * Any stroke, fill or fillstroke of a background must be the first element of the\n * foreground element, they must not be used within *background*. If the background\n * is empty, this is not required.\n * \n * Because the background cannot have any fill or stroke, it can contain only one\n * *path*, *rect*, *roundrect* or *ellipse* element (or none). It can also not\n * include *image*, *text* or *include-shape*.\n * \n * Note that the state, styling and drawing in mxGraph stencils is very close in\n * design to that of HTML 5 canvas. Tutorials on this subject, if you're not\n * familiar with the topic, will give a good high-level introduction to the\n * concepts used.\n * \n * State:\n * \n * Rendering within the foreground and background elements has the concept of\n * state. There are two types of operations other than state save/load, styling\n * and drawing. The styling operations change the current state, so you can save\n * the current state with <save/> and pull the last saved state from the state\n * stack using <restore/>.\n * \n * Styling:\n * \n * The elements that change colors within the current state all take a hash\n * prefixed hex color code (\"#FFEA80\").\n * \n * - *strokecolor*, this sets the color that drawing paths will be rendered in\n * when a stroke or fillstroke command is issued.\n * - *fillcolor*, this sets the color that the inside of closed paths will be\n * rendered in when a fill or fillstroke command is issued.\n * - *fontcolor*, this sets the color that fonts are rendered in when text is drawn.\n * \n * *alpha* defines the degree of transparency used between 1.0 for fully opaque\n * and 0.0 for fully transparent.\n * \n * *strokewidth* defines the integer thickness of drawing elements rendered by\n * stroking. Use fixed=\"1\" to apply the value as-is, without scaling.\n * \n * *dashed* is \"1\" for dashing enabled and \"0\" for disabled.\n * \n * When *dashed* is enabled the current dash pattern, defined by *dashpattern*,\n * is used on strokes. dashpattern is a sequence of space separated \"on, off\"\n * lengths that define what distance to paint the stroke for, then what distance\n * to paint nothing for, repeat... The default is \"3 3\". You could define a more\n * complex pattern with \"5 3 2 6\", for example. Generally, it makes sense to have\n * an even number of elements in the dashpattern, but that's not required.\n * \n * *linejoin*, *linecap* and *miterlimit* are best explained by the Mozilla page\n * on Canvas styling (about halfway down). The values are all the same except we\n * use \"flat\" for linecap, instead of Canvas' \"butt\".\n * \n * For font styling there are.\n * \n * - *fontsize*, an integer,\n * - *fontstyle*, an ORed bit pattern of bold (1), italic (2) and underline (4),\n * i.e bold underline is \"5\".\n * - *fontfamily*, is a string defining the typeface to be used.\n * \n * Drawing:\n * \n * Most drawing is contained within a *path* element. Again, the graphic\n * primitives are very similar to that of HTML 5 canvas.\n * \n * - *move* to attributes required decimals (x,y).\n * - *line* to attributes required decimals (x,y).\n * - *quad* to required decimals (x2,y2) via control point required decimals\n * (x1,y1).\n * - *curve* to required decimals (x3,y3), via control points required decimals\n * (x1,y1) and (x2,y2).\n * - *arc*, this doesn't follow the HTML Canvas signatures, instead it's a copy\n * of the SVG arc command. The SVG specification documentation gives the best\n * description of its behaviors. The attributes are named identically, they are\n * decimals and all required.\n * - *close* ends the current subpath and causes an automatic straight line to\n * be drawn from the current point to the initial point of the current subpath.\n * \n * Complex drawing:\n * \n * In addition to the graphics primitive operations there are non-primitive\n * operations. These provide an easy method to draw some basic shapes.\n * \n * - *rect*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals\n * - *roundrect*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals. Also\n * \"arcsize\" an optional decimal attribute defining how large, the corner curves\n * are.\n * - *ellipse*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals.\n * \n * Note that these 3 shapes and all paths must be followed by either a fill,\n * stroke, or fillstroke.\n * \n * Text:\n * \n * *text* elements have the following attributes.\n * \n * - \"str\", the text string to display, required.\n * - \"x\" and \"y\", the decimal location (x,y) of the text element, required.\n * - \"align\", the horizontal alignment of the text element, either \"left\",\n * \"center\" or \"right\". Optional, default is \"left\".\n * - \"valign\", the vertical alignment of the text element, either \"top\", \"middle\"\n * or \"bottom\". Optional, default is \"top\".\n * - \"localized\", 0 or 1, if 1 then the \"str\" actually contains a key to use to\n * fetch the value out of mxResources. Optional, default is\n * <mxStencil.defaultLocalized>.\n * - \"vertical\", 0 or 1, if 1 the label is rendered vertically (rotated by 90\n * degrees). Optional, default is 0.\n * - \"rotation\", angle in degrees (0 to 360). The angle to rotate the text by.\n * Optional, default is 0.\n * - \"align-shape\", 0 or 1, if 0 ignore the rotation of the shape when setting\n * the text rotation. Optional, default is 1.\n * \n * If <allowEval> is true, then the text content of the this element can define\n * a function which is invoked with the shape as the only argument and returns\n * the value for the text element (ignored if the str attribute is not null).\n * \n * Images:\n * \n * *image* elements can either be external URLs, or data URIs, where supported\n * (not in IE 7-). Attributes are:\n * \n * - \"src\", required string. Either a data URI or URL.\n * - \"x\", \"y\", required decimals. The (x,y) position of the image.\n * - \"w\", \"h\", required decimals. The width and height of the image.\n * - \"flipH\" and \"flipV\", optional 0 or 1. Whether to flip the image along the\n * horizontal/vertical axis. Default is 0 for both.\n * \n * If <allowEval> is true, then the text content of the this element can define\n * a function which is invoked with the shape as the only argument and returns\n * the value for the image source (ignored if the src attribute is not null).\n * \n * Sub-shapes:\n * \n * *include-shape* allow stencils to be rendered within the current stencil by\n * referencing the sub-stencil by name. Attributes are:\n * \n * - \"name\", required string. The unique shape name of the stencil.\n * - \"x\", \"y\", \"w\", \"h\", required decimals. The (x,y) position of the sub-shape\n * and its width and height.\n * \n * Constructor: mxStencil\n * \n * Constructs a new generic shape by setting <desc> to the given XML node and\n * invoking <parseDescription> and <parseConstraints>.\n * \n * Parameters:\n * \n * desc - XML node that contains the stencil description.\n */\nfunction mxStencil(desc)\n{\n\tthis.desc = desc;\n\tthis.parseDescription();\n\tthis.parseConstraints();\n};\n\n/**\n * Variable: defaultLocalized\n * \n * Static global variable that specifies the default value for the localized\n * attribute of the text element. Default is false.\n */\nmxStencil.defaultLocalized = false;\n\n/**\n * Function: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content and images. Default is false. Set this to true\n * if stencils can not contain user input.\n */\nmxStencil.allowEval = false;\n\n/**\n * Variable: desc\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.desc = null;\n\n/**\n * Variable: constraints\n * \n * Holds an array of <mxConnectionConstraints> as defined in the shape.\n */\nmxStencil.prototype.constraints = null;\n\n/**\n * Variable: aspect\n *\n * Holds the aspect of the shape. Default is 'auto'.\n */\nmxStencil.prototype.aspect = null;\n\n/**\n * Variable: w0\n *\n * Holds the width of the shape. Default is 100.\n */\nmxStencil.prototype.w0 = null;\n\n/**\n * Variable: h0\n *\n * Holds the height of the shape. Default is 100.\n */\nmxStencil.prototype.h0 = null;\n\n/**\n * Variable: bgNodes\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.bgNode = null;\n\n/**\n * Variable: fgNodes\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.fgNode = null;\n\n/**\n * Variable: strokewidth\n *\n * Holds the strokewidth direction from the description.\n */\nmxStencil.prototype.strokewidth = null;\n\n/**\n * Function: parseDescription\n *\n * Reads <w0>, <h0>, <aspect>, <bgNodes> and <fgNodes> from <desc>.\n */\nmxStencil.prototype.parseDescription = function()\n{\n\t// LATER: Preprocess nodes for faster painting\n\tthis.fgNode = this.desc.getElementsByTagName('foreground')[0];\n\tthis.bgNode = this.desc.getElementsByTagName('background')[0];\n\tthis.w0 = Number(this.desc.getAttribute('w') || 100);\n\tthis.h0 = Number(this.desc.getAttribute('h') || 100);\n\t\n\t// Possible values for aspect are: variable and fixed where\n\t// variable means fill the available space and fixed means\n\t// use w0 and h0 to compute the aspect.\n\tvar aspect = this.desc.getAttribute('aspect');\n\tthis.aspect = (aspect != null) ? aspect : 'variable';\n\t\n\t// Possible values for strokewidth are all numbers and \"inherit\"\n\t// where the inherit means take the value from the style (ie. the\n\t// user-defined stroke-width). Note that the strokewidth is scaled\n\t// by the minimum scaling that is used to draw the shape (sx, sy).\n\tvar sw = this.desc.getAttribute('strokewidth');\n\tthis.strokewidth = (sw != null) ? sw : '1';\n};\n\n/**\n * Function: parseConstraints\n *\n * Reads the constraints from <desc> into <constraints> using\n * <parseConstraint>.\n */\nmxStencil.prototype.parseConstraints = function()\n{\n\tvar conns = this.desc.getElementsByTagName('connections')[0];\n\t\n\tif (conns != null)\n\t{\n\t\tvar tmp = mxUtils.getChildNodes(conns);\n\t\t\n\t\tif (tmp != null && tmp.length > 0)\n\t\t{\n\t\t\tthis.constraints = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < tmp.length; i++)\n\t\t\t{\n\t\t\t\tthis.constraints.push(this.parseConstraint(tmp[i]));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: parseConstraint\n *\n * Parses the given XML node and returns its <mxConnectionConstraint>.\n */\nmxStencil.prototype.parseConstraint = function(node)\n{\n\tvar x = Number(node.getAttribute('x'));\n\tvar y = Number(node.getAttribute('y'));\n\tvar perimeter = node.getAttribute('perimeter') == '1';\n\tvar name = node.getAttribute('name');\n\t\n\treturn new mxConnectionConstraint(new mxPoint(x, y), perimeter, name);\n};\n\n/**\n * Function: evaluateTextAttribute\n * \n * Gets the given attribute as a text. The return value from <evaluateAttribute>\n * is used as a key to <mxResources.get> if the localized attribute in the text\n * node is 1 or if <defaultLocalized> is true.\n */\nmxStencil.prototype.evaluateTextAttribute = function(node, attribute, shape)\n{\n\tvar result = this.evaluateAttribute(node, attribute, shape);\n\tvar loc = node.getAttribute('localized');\n\t\n\tif ((mxStencil.defaultLocalized && loc == null) || loc == '1')\n\t{\n\t\tresult = mxResources.get(result);\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: evaluateAttribute\n *\n * Gets the attribute for the given name from the given node. If the attribute\n * does not exist then the text content of the node is evaluated and if it is\n * a function it is invoked with <shape> as the only argument and the return\n * value is used as the attribute value to be returned.\n */\nmxStencil.prototype.evaluateAttribute = function(node, attribute, shape)\n{\n\tvar result = node.getAttribute(attribute);\n\t\n\tif (result == null)\n\t{\n\t\tvar text = mxUtils.getTextContent(node);\n\t\t\n\t\tif (text != null && mxStencil.allowEval)\n\t\t{\n\t\t\tvar funct = mxUtils.eval(text);\n\t\t\t\n\t\t\tif (typeof(funct) == 'function')\n\t\t\t{\n\t\t\t\tresult = funct(shape);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: drawShape\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawShape = function(canvas, shape, x, y, w, h)\n{\n\t// TODO: Internal structure (array of special structs?), relative and absolute\n\t// coordinates (eg. note shape, process vs star, actor etc.), text rendering\n\t// and non-proportional scaling, how to implement pluggable edge shapes\n\t// (start, segment, end blocks), pluggable markers, how to implement\n\t// swimlanes (title area) with this API, add icon, horizontal/vertical\n\t// label, indicator for all shapes, rotation\n\tvar direction = mxUtils.getValue(shape.style, mxConstants.STYLE_DIRECTION, null);\n\tvar aspect = this.computeAspect(shape.style, x, y, w, h, direction);\n\tvar minScale = Math.min(aspect.width, aspect.height);\n\tvar sw = (this.strokewidth == 'inherit') ?\n\t\t\tNumber(mxUtils.getNumber(shape.style, mxConstants.STYLE_STROKEWIDTH, 1)) :\n\t\t\tNumber(this.strokewidth) * minScale;\n\tcanvas.setStrokeWidth(sw);\n\n\tthis.drawChildren(canvas, shape, x, y, w, h, this.bgNode, aspect, false, true);\n\tthis.drawChildren(canvas, shape, x, y, w, h, this.fgNode, aspect, true,\n\t\t!shape.outline || shape.style == null || mxUtils.getValue(\n\t\tshape.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0);\n};\n\n/**\n * Function: drawChildren\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawChildren = function(canvas, shape, x, y, w, h, node, aspect, disableShadow, paint)\n{\n\tif (node != null && w > 0 && h > 0)\n\t{\n\t\tvar tmp = node.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t{\n\t\t\t\tthis.drawNode(canvas, shape, tmp, aspect, disableShadow, paint);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\t}\n};\n\n/**\n * Function: computeAspect\n *\n * Returns a rectangle that contains the offset in x and y and the horizontal\n * and vertical scale in width and height used to draw this shape inside the\n * given <mxRectangle>.\n * \n * Parameters:\n * \n * shape - <mxShape> to be drawn.\n * bounds - <mxRectangle> that should contain the stencil.\n * direction - Optional direction of the shape to be darwn.\n */\nmxStencil.prototype.computeAspect = function(shape, x, y, w, h, direction)\n{\n\tvar x0 = x;\n\tvar y0 = y;\n\tvar sx = w / this.w0;\n\tvar sy = h / this.h0;\n\t\n\tvar inverse = (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH);\n\n\tif (inverse)\n\t{\n\t\tsy = w / this.h0;\n\t\tsx = h / this.w0;\n\t\t\n\t\tvar delta = (w - h) / 2;\n\n\t\tx0 += delta;\n\t\ty0 -= delta;\n\t}\n\n\tif (this.aspect == 'fixed')\n\t{\n\t\tsy = Math.min(sx, sy);\n\t\tsx = sy;\n\t\t\n\t\t// Centers the shape inside the available space\n\t\tif (inverse)\n\t\t{\n\t\t\tx0 += (h - this.w0 * sx) / 2;\n\t\t\ty0 += (w - this.h0 * sy) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx0 += (w - this.w0 * sx) / 2;\n\t\t\ty0 += (h - this.h0 * sy) / 2;\n\t\t}\n\t}\n\n\treturn new mxRectangle(x0, y0, sx, sy);\n};\n\n/**\n * Function: drawNode\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawNode = function(canvas, shape, node, aspect, disableShadow, paint)\n{\n\tvar name = node.nodeName;\n\tvar x0 = aspect.x;\n\tvar y0 = aspect.y;\n\tvar sx = aspect.width;\n\tvar sy = aspect.height;\n\tvar minScale = Math.min(sx, sy);\n\t\n\tif (name == 'save')\n\t{\n\t\tcanvas.save();\n\t}\n\telse if (name == 'restore')\n\t{\n\t\tcanvas.restore();\n\t}\n\telse if (paint)\n\t{\n\t\tif (name == 'path')\n\t\t{\n\t\t\tcanvas.begin();\n\t\n\t\t\t// Renders the elements inside the given path\n\t\t\tvar childNode = node.firstChild;\n\t\t\t\n\t\t\twhile (childNode != null)\n\t\t\t{\n\t\t\t\tif (childNode.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\tthis.drawNode(canvas, shape, childNode, aspect, disableShadow, paint);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tchildNode = childNode.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse if (name == 'close')\n\t\t{\n\t\t\tcanvas.close();\n\t\t}\n\t\telse if (name == 'move')\n\t\t{\n\t\t\tcanvas.moveTo(x0 + Number(node.getAttribute('x')) * sx, y0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'line')\n\t\t{\n\t\t\tcanvas.lineTo(x0 + Number(node.getAttribute('x')) * sx, y0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'quad')\n\t\t{\n\t\t\tcanvas.quadTo(x0 + Number(node.getAttribute('x1')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y1')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x2')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y2')) * sy);\n\t\t}\n\t\telse if (name == 'curve')\n\t\t{\n\t\t\tcanvas.curveTo(x0 + Number(node.getAttribute('x1')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y1')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x2')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y2')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x3')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y3')) * sy);\n\t\t}\n\t\telse if (name == 'arc')\n\t\t{\n\t\t\tcanvas.arcTo(Number(node.getAttribute('rx')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('ry')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('x-axis-rotation')),\n\t\t\t\t\tNumber(node.getAttribute('large-arc-flag')),\n\t\t\t\t\tNumber(node.getAttribute('sweep-flag')),\n\t\t\t\t\tx0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'rect')\n\t\t{\n\t\t\tcanvas.rect(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('h')) * sy);\n\t\t}\n\t\telse if (name == 'roundrect')\n\t\t{\n\t\t\tvar arcsize = Number(node.getAttribute('arcsize'));\n\t\n\t\t\tif (arcsize == 0)\n\t\t\t{\n\t\t\t\tarcsize = mxConstants.RECTANGLE_ROUNDING_FACTOR * 100;\n\t\t\t}\n\t\t\t\n\t\t\tvar w = Number(node.getAttribute('w')) * sx;\n\t\t\tvar h = Number(node.getAttribute('h')) * sy;\n\t\t\tvar factor = Number(arcsize) / 100;\n\t\t\tvar r = Math.min(w * factor, h * factor);\n\t\t\t\n\t\t\tcanvas.roundrect(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tw, h, r, r);\n\t\t}\n\t\telse if (name == 'ellipse')\n\t\t{\n\t\t\tcanvas.ellipse(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\tNumber(node.getAttribute('h')) * sy);\n\t\t}\n\t\telse if (name == 'image')\n\t\t{\n\t\t\tif (!shape.outline)\n\t\t\t{\n\t\t\t\tvar src = this.evaluateAttribute(node, 'src', shape);\n\t\t\t\t\n\t\t\t\tcanvas.image(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('h')) * sy,\n\t\t\t\t\tsrc, false, node.getAttribute('flipH') == '1',\n\t\t\t\t\tnode.getAttribute('flipV') == '1');\n\t\t\t}\n\t\t}\n\t\telse if (name == 'text')\n\t\t{\n\t\t\tif (!shape.outline)\n\t\t\t{\n\t\t\t\tvar str = this.evaluateTextAttribute(node, 'str', shape);\n\t\t\t\tvar rotation = node.getAttribute('vertical') == '1' ? -90 : 0;\n\t\t\t\t\n\t\t\t\tif (node.getAttribute('align-shape') == '0')\n\t\t\t\t{\n\t\t\t\t\tvar dr = shape.rotation;\n\t\t\n\t\t\t\t\t// Depends on flipping\n\t\t\t\t\tvar flipH = mxUtils.getValue(shape.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tvar flipV = mxUtils.getValue(shape.style, mxConstants.STYLE_FLIPV, 0) == 1;\n\t\t\t\t\t\n\t\t\t\t\tif (flipH && flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\trotation -= dr;\n\t\t\t\t\t}\n\t\t\t\t\telse if (flipH || flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\trotation += dr;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trotation -= dr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\trotation -= node.getAttribute('rotation');\n\t\t\n\t\t\t\tcanvas.text(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\t\t0, 0, str, node.getAttribute('align') || 'left',\n\t\t\t\t\t\tnode.getAttribute('valign') || 'top', false, '',\n\t\t\t\t\t\tnull, false, rotation);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'include-shape')\n\t\t{\n\t\t\tvar stencil = mxStencilRegistry.getStencil(node.getAttribute('name'));\n\t\t\t\n\t\t\tif (stencil != null)\n\t\t\t{\n\t\t\t\tvar x = x0 + Number(node.getAttribute('x')) * sx;\n\t\t\t\tvar y = y0 + Number(node.getAttribute('y')) * sy;\n\t\t\t\tvar w = Number(node.getAttribute('w')) * sx;\n\t\t\t\tvar h = Number(node.getAttribute('h')) * sy;\n\t\t\t\t\n\t\t\t\tstencil.drawShape(canvas, shape, x, y, w, h);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'fillstroke')\n\t\t{\n\t\t\tcanvas.fillAndStroke();\n\t\t}\n\t\telse if (name == 'fill')\n\t\t{\n\t\t\tcanvas.fill();\n\t\t}\n\t\telse if (name == 'stroke')\n\t\t{\n\t\t\tcanvas.stroke();\n\t\t}\n\t\telse if (name == 'strokewidth')\n\t\t{\n\t\t\tvar s = (node.getAttribute('fixed') == '1') ? 1 : minScale;\n\t\t\tcanvas.setStrokeWidth(Number(node.getAttribute('width')) * s);\n\t\t}\n\t\telse if (name == 'dashed')\n\t\t{\n\t\t\tcanvas.setDashed(node.getAttribute('dashed') == '1');\n\t\t}\n\t\telse if (name == 'dashpattern')\n\t\t{\n\t\t\tvar value = node.getAttribute('pattern');\n\t\t\t\n\t\t\tif (value != null)\n\t\t\t{\n\t\t\t\tvar tmp = value.split(' ');\n\t\t\t\tvar pat = [];\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < tmp.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (tmp[i].length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tpat.push(Number(tmp[i]) * minScale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue = pat.join(' ');\n\t\t\t\tcanvas.setDashPattern(value);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'strokecolor')\n\t\t{\n\t\t\tcanvas.setStrokeColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'linecap')\n\t\t{\n\t\t\tcanvas.setLineCap(node.getAttribute('cap'));\n\t\t}\n\t\telse if (name == 'linejoin')\n\t\t{\n\t\t\tcanvas.setLineJoin(node.getAttribute('join'));\n\t\t}\n\t\telse if (name == 'miterlimit')\n\t\t{\n\t\t\tcanvas.setMiterLimit(Number(node.getAttribute('limit')));\n\t\t}\n\t\telse if (name == 'fillcolor')\n\t\t{\n\t\t\tcanvas.setFillColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'alpha')\n\t\t{\n\t\t\tcanvas.setAlpha(node.getAttribute('alpha'));\n\t\t}\n\t\telse if (name == 'fontcolor')\n\t\t{\n\t\t\tcanvas.setFontColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'fontstyle')\n\t\t{\n\t\t\tcanvas.setFontStyle(node.getAttribute('style'));\n\t\t}\n\t\telse if (name == 'fontfamily')\n\t\t{\n\t\t\tcanvas.setFontFamily(node.getAttribute('family'));\n\t\t}\n\t\telse if (name == 'fontsize')\n\t\t{\n\t\t\tcanvas.setFontSize(Number(node.getAttribute('size')) * minScale);\n\t\t}\n\t\t\n\t\tif (disableShadow && (name == 'fillstroke' || name == 'fill' || name == 'stroke'))\n\t\t{\n\t\t\tdisableShadow = false;\n\t\t\tcanvas.setShadow(false);\n\t\t}\n\t}\n};\n\n__mxOutput.mxStencil = typeof mxStencil !== 'undefined' ? mxStencil : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxShape\n *\n * Base class for all shapes. A shape in mxGraph is a\n * separate implementation for SVG, VML and HTML. Which\n * implementation to use is controlled by the <dialect>\n * property which is assigned from within the <mxCellRenderer>\n * when the shape is created. The dialect must be assigned\n * for a shape, and it does normally depend on the browser and\n * the confiuration of the graph (see <mxGraph> rendering hint).\n *\n * For each supported shape in SVG and VML, a corresponding\n * shape exists in mxGraph, namely for text, image, rectangle,\n * rhombus, ellipse and polyline. The other shapes are a\n * combination of these shapes (eg. label and swimlane)\n * or they consist of one or more (filled) path objects\n * (eg. actor and cylinder). The HTML implementation is\n * optional but may be required for a HTML-only view of\n * the graph.\n *\n * Custom Shapes:\n *\n * To extend from this class, the basic code looks as follows.\n * In the special case where the custom shape consists only of\n * one filled region or one filled region and an additional stroke\n * the <mxActor> and <mxCylinder> should be subclassed,\n * respectively.\n *\n * (code)\n * function CustomShape() { }\n * \n * CustomShape.prototype = new mxShape();\n * CustomShape.prototype.constructor = CustomShape; \n * (end)\n *\n * To register a custom shape in an existing graph instance,\n * one must register the shape under a new name in the graph's\n * cell renderer as follows:\n *\n * (code)\n * mxCellRenderer.registerShape('customShape', CustomShape);\n * (end)\n *\n * The second argument is the name of the constructor.\n *\n * In order to use the shape you can refer to the given name above\n * in a stylesheet. For example, to change the shape for the default\n * vertex style, the following code is used:\n *\n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = 'customShape';\n * (end)\n * \n * Constructor: mxShape\n *\n * Constructs a new shape.\n */\nfunction mxShape(stencil)\n{\n\tthis.stencil = stencil;\n\tthis.initStyles();\n};\n\n/**\n * Variable: dialect\n *\n * Holds the dialect in which the shape is to be painted.\n * This can be one of the DIALECT constants in <mxConstants>.\n */\nmxShape.prototype.dialect = null;\n\n/**\n * Variable: scale\n *\n * Holds the scale in which the shape is being painted.\n */\nmxShape.prototype.scale = 1;\n\n/**\n * Variable: antiAlias\n * \n * Rendering hint for configuring the canvas.\n */\nmxShape.prototype.antiAlias = true;\n\n/**\n * Variable: minSvgStrokeWidth\n * \n * Minimum stroke width for SVG output.\n */\nmxShape.prototype.minSvgStrokeWidth = 1;\n\n/**\n * Variable: bounds\n *\n * Holds the <mxRectangle> that specifies the bounds of this shape.\n */\nmxShape.prototype.bounds = null;\n\n/**\n * Variable: points\n *\n * Holds the array of <mxPoints> that specify the points of this shape.\n */\nmxShape.prototype.points = null;\n\n/**\n * Variable: node\n *\n * Holds the outermost DOM node that represents this shape.\n */\nmxShape.prototype.node = null;\n \n/**\n * Variable: state\n * \n * Optional reference to the corresponding <mxCellState>.\n */\nmxShape.prototype.state = null;\n\n/**\n * Variable: style\n *\n * Optional reference to the style of the corresponding <mxCellState>.\n */\nmxShape.prototype.style = null;\n\n/**\n * Variable: boundingBox\n *\n * Contains the bounding box of the shape, that is, the smallest rectangle\n * that includes all pixels of the shape.\n */\nmxShape.prototype.boundingBox = null;\n\n/**\n * Variable: stencil\n *\n * Holds the <mxStencil> that defines the shape.\n */\nmxShape.prototype.stencil = null;\n\n/**\n * Variable: svgStrokeTolerance\n *\n * Event-tolerance for SVG strokes (in px). Default is 8. This is only passed\n * to the canvas in <createSvgCanvas> if <pointerEvents> is true.\n */\nmxShape.prototype.svgStrokeTolerance = 8;\n\n/**\n * Variable: pointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.pointerEvents = true;\n\n/**\n * Variable: svgPointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.svgPointerEvents = 'all';\n\n/**\n * Variable: shapePointerEvents\n * \n * Specifies if pointer events outside of shape should be handled. Default\n * is false.\n */\nmxShape.prototype.shapePointerEvents = false;\n\n/**\n * Variable: stencilPointerEvents\n * \n * Specifies if pointer events outside of stencils should be handled. Default\n * is false. Set this to true for backwards compatibility with the 1.x branch.\n */\nmxShape.prototype.stencilPointerEvents = false;\n\n/**\n * Variable: vmlScale\n * \n * Scale for improving the precision of VML rendering. Default is 1.\n */\nmxShape.prototype.vmlScale = 1;\n\n/**\n * Variable: outline\n * \n * Specifies if the shape should be drawn as an outline. This disables all\n * fill colors and can be used to disable other drawing states that should\n * not be painted for outlines. Default is false. This should be set before\n * calling <apply>.\n */\nmxShape.prototype.outline = false;\n\n/**\n * Variable: visible\n * \n * Specifies if the shape is visible. Default is true.\n */\nmxShape.prototype.visible = true;\n\n/**\n * Variable: useSvgBoundingBox\n * \n * Allows to use the SVG bounding box in SVG. Default is false for performance\n * reasons.\n */\nmxShape.prototype.useSvgBoundingBox = false;\n\n/**\n * Function: init\n *\n * Initializes the shape by creaing the DOM node using <create>\n * and adding it into the given container.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.init = function(container)\n{\n\tif (this.node == null)\n\t{\n\t\tthis.node = this.create(container);\n\t\t\n\t\tif (container != null)\n\t\t{\n\t\t\tcontainer.appendChild(this.node);\n\t\t}\n\t}\n};\n\n/**\n * Function: initStyles\n *\n * Sets the styles to their default values.\n */\nmxShape.prototype.initStyles = function(container)\n{\n\tthis.strokewidth = 1;\n\tthis.rotation = 0;\n\tthis.opacity = 100;\n\tthis.fillOpacity = 100;\n\tthis.strokeOpacity = 100;\n\tthis.flipH = false;\n\tthis.flipV = false;\n};\n\n/**\n * Function: isParseVml\n * \n * Specifies if any VML should be added via insertAdjacentHtml to the DOM. This\n * is only needed in IE8 and only if the shape contains VML markup. This method\n * returns true.\n */\nmxShape.prototype.isParseVml = function()\n{\n\treturn true;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxShape.prototype.isHtmlAllowed = function()\n{\n\treturn false;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Returns 0, or 0.5 if <strokewidth> % 2 == 1.\n */\nmxShape.prototype.getSvgScreenOffset = function()\n{\n\tvar sw = this.stencil && this.stencil.strokewidth != 'inherit' ? Number(this.stencil.strokewidth) : this.strokewidth;\n\t\n\treturn (mxUtils.mod(Math.max(1, Math.round(sw * this.scale)), 2) == 1) ? 0.5 : 0;\n};\n\n/**\n * Function: create\n *\n * Creates and returns the DOM node(s) for the shape in\n * the given container. This implementation invokes\n * <createSvg>, <createHtml> or <createVml> depending\n * on the <dialect> and style settings.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.create = function(container)\n{\n\tvar node = null;\n\t\n\tif (container != null && container.ownerSVGElement != null)\n\t{\n\t\tnode = this.createSvg(container);\n\t}\n\telse if (document.documentMode == 8 || !mxClient.IS_VML ||\n\t\t(this.dialect != mxConstants.DIALECT_VML && this.isHtmlAllowed()))\n\t{\n\t\tnode = this.createHtml(container);\n\t}\n\telse\n\t{\n\t\tnode = this.createVml(container);\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: createSvg\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.createSvg = function()\n{\n\treturn document.createElementNS(mxConstants.NS_SVG, 'g');\n};\n\n/**\n * Function: createVml\n *\n * Creates and returns the VML node to represent this shape.\n */\nmxShape.prototype.createVml = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: reconfigure\n *\n * Reconfigures this shape. This will update the colors etc in\n * addition to the bounds or points.\n */\nmxShape.prototype.reconfigure = function()\n{\n\tthis.redraw();\n};\n\n/**\n * Function: redraw\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.redraw = function()\n{\n\tthis.updateBoundsFromPoints();\n\t\n\tif (this.visible && this.checkBounds())\n\t{\n\t\tthis.node.style.visibility = 'visible';\n\t\tthis.clear();\n\t\t\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tthis.redrawHtmlShape();\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tthis.redrawShape();\n\t\t}\n\n\t\tthis.updateBoundingBox();\n\t}\n\telse\n\t{\n\t\tthis.node.style.visibility = 'hidden';\n\t\tthis.boundingBox = null;\n\t}\n};\n\n/**\n * Function: clear\n * \n * Removes all child nodes and resets all CSS.\n */\nmxShape.prototype.clear = function()\n{\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\twhile (this.node.lastChild != null)\n\t\t{\n\t\t\tthis.node.removeChild(this.node.lastChild);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.node.style.cssText = 'position:absolute;' + ((this.cursor != null) ?\n\t\t\t('cursor:' + this.cursor + ';') : '');\n\t\tthis.node.innerHTML = '';\n\t}\n};\n\n/**\n * Function: updateBoundsFromPoints\n * \n * Updates the bounds based on the points.\n */\nmxShape.prototype.updateBoundsFromPoints = function()\n{\n\tvar pts = this.points;\n\t\n\tif (pts != null && pts.length > 0 && pts[0] != null)\n\t{\n\t\tthis.bounds = new mxRectangle(Number(pts[0].x), Number(pts[0].y), 1, 1);\n\t\t\n\t\tfor (var i = 1; i < this.points.length; i++)\n\t\t{\n\t\t\tif (pts[i] != null)\n\t\t\t{\n\t\t\t\tthis.bounds.add(new mxRectangle(Number(pts[i].x), Number(pts[i].y), 1, 1));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the <mxRectangle> for the label bounds of this shape, based on the\n * given scaled and translated bounds of the shape. This method should not\n * change the rectangle in-place. This implementation returns the given rect.\n */\nmxShape.prototype.getLabelBounds = function(rect)\n{\n\tvar d = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\tvar bounds = rect;\n\t\n\t// Normalizes argument for getLabelMargins hook\n\tif (d != mxConstants.DIRECTION_SOUTH && d != mxConstants.DIRECTION_NORTH &&\n\t\tthis.state != null && this.state.text != null &&\n\t\tthis.state.text.isPaintBoundsInverted())\n\t{\n\t\tbounds = bounds.clone();\n\t\tvar tmp = bounds.width;\n\t\tbounds.width = bounds.height;\n\t\tbounds.height = tmp;\n\t}\n\t\t\n\tvar m = this.getLabelMargins(bounds);\n\t\n\tif (m != null)\n\t{\n\t\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, false) == '1';\n\t\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, false) == '1';\n\t\t\n\t\t// Handles special case for vertical labels\n\t\tif (this.state != null && this.state.text != null &&\n\t\t\tthis.state.text.isPaintBoundsInverted())\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.height;\n\t\t\tm.height = m.width;\n\t\t\tm.width = m.y;\n\t\t\tm.y = tmp;\n\n\t\t\ttmp = flipH;\n\t\t\tflipH = flipV;\n\t\t\tflipV = tmp;\n\t\t}\n\t\t\n\t\treturn mxUtils.getDirectedBounds(rect, m, this.style, flipH, flipV);\n\t}\n\t\n\treturn rect;\n};\n\n/**\n * Function: getLabelMargins\n * \n * Returns the scaled top, left, bottom and right margin to be used for\n * computing the label bounds as an <mxRectangle>, where the bottom and right\n * margin are defined in the width and height of the rectangle, respectively.\n */\nmxShape.prototype.getLabelMargins= function(rect)\n{\n\treturn null;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxShape.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height) &&\n\t\t\tthis.bounds.width > 0 && this.bounds.height > 0);\n};\n\n/**\n * Function: createVmlGroup\n *\n * Returns the temporary element used for rendering in IE8 standards mode.\n */\nmxShape.prototype.createVmlGroup = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\tnode.style.width = this.node.style.width;\n\tnode.style.height = this.node.style.height;\n\t\n\treturn node;\n};\n\n/**\n * Function: redrawShape\n *\n * Updates the SVG or VML shape.\n */\nmxShape.prototype.redrawShape = function()\n{\n\tvar canvas = this.createCanvas();\n\t\n\tif (canvas != null)\n\t{\n\t\t// Specifies if events should be handled\n\t\tcanvas.pointerEvents = this.pointerEvents;\n\t\n\t\tthis.paint(canvas);\n\t\n\t\tif (this.node != canvas.root)\n\t\t{\n\t\t\t// Forces parsing in IE8 standards mode - slow! avoid\n\t\t\tthis.node.insertAdjacentHTML('beforeend', canvas.root.outerHTML);\n\t\t}\n\t\n\t\tif (this.node.nodeName == 'DIV' && document.documentMode == 8)\n\t\t{\n\t\t\t// Makes DIV transparent to events for IE8 in IE8 standards\n\t\t\t// mode (Note: Does not work for IE9 in IE8 standards mode\n\t\t\t// and not for IE11 in enterprise mode)\n\t\t\tthis.node.style.filter = '';\n\t\t\t\n\t\t\t// Adds event transparency in IE8 standards\n\t\t\tmxUtils.addTransparentBackgroundFilter(this.node);\n\t\t}\n\t\t\n\t\tthis.destroyCanvas(canvas);\n\t}\n};\n\n/**\n * Function: createCanvas\n * \n * Creates a new canvas for drawing this shape. May return null.\n */\nmxShape.prototype.createCanvas = function()\n{\n\tvar canvas = null;\n\t\n\t// LATER: Check if reusing existing DOM nodes improves performance\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\tcanvas = this.createSvgCanvas();\n\t}\n\telse if (mxClient.IS_VML)\n\t{\n\t\tthis.updateVmlContainer();\n\t\tcanvas = this.createVmlCanvas();\n\t}\n\t\n\tif (canvas != null && this.outline)\n\t{\n\t\tcanvas.setStrokeWidth(this.strokewidth);\n\t\tcanvas.setStrokeColor(this.stroke);\n\t\t\n\t\tif (this.isDashed != null)\n\t\t{\n\t\t\tcanvas.setDashed(this.isDashed);\n\t\t}\n\t\t\n\t\tcanvas.setStrokeWidth = function() {};\n\t\tcanvas.setStrokeColor = function() {};\n\t\tcanvas.setFillColor = function() {};\n\t\tcanvas.setGradient = function() {};\n\t\tcanvas.setDashed = function() {};\n\t\tcanvas.text = function() {};\n\t}\n\n\treturn canvas;\n};\n\n/**\n * Function: createSvgCanvas\n * \n * Creates and returns an <mxSvgCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createSvgCanvas = function()\n{\n\tvar canvas = new mxSvgCanvas2D(this.node, false);\n\tcanvas.strokeTolerance = (this.pointerEvents) ? this.svgStrokeTolerance : 0;\n\tcanvas.pointerEventsValue = this.svgPointerEvents;\n\tcanvas.blockImagePointerEvents = mxClient.IS_FF;\n\tvar off = this.getSvgScreenOffset();\n\n\tif (off != 0)\n\t{\n\t\tthis.node.setAttribute('transform', 'translate(' + off + ',' + off + ')');\n\t}\n\telse\n\t{\n\t\tthis.node.removeAttribute('transform');\n\t}\n\n\tcanvas.minStrokeWidth = this.minSvgStrokeWidth;\n\t\n\tif (!this.antiAlias)\n\t{\n\t\t// Rounds all numbers in the SVG output to integers\n\t\tcanvas.format = function(value)\n\t\t{\n\t\t\treturn Math.round(parseFloat(value));\n\t\t};\n\t}\n\t\n\treturn canvas;\n};\n\n/**\n * Function: createVmlCanvas\n * \n * Creates and returns an <mxVmlCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createVmlCanvas = function()\n{\n\t// Workaround for VML rendering bug in IE8 standards mode\n\tvar node = (document.documentMode == 8 && this.isParseVml()) ? this.createVmlGroup() : this.node;\n\tvar canvas = new mxVmlCanvas2D(node, false);\n\t\n\tif (node.tagUrn != '')\n\t{\n\t\tvar w = Math.max(1, Math.round(this.bounds.width));\n\t\tvar h = Math.max(1, Math.round(this.bounds.height));\n\t\tnode.coordsize = (w * this.vmlScale) + ',' + (h * this.vmlScale);\n\t\tcanvas.scale(this.vmlScale);\n\t\tcanvas.vmlScale = this.vmlScale;\n\t}\n\n\t// Painting relative to top, left shape corner\n\tvar s = this.scale;\n\tcanvas.translate(-Math.round(this.bounds.x / s), -Math.round(this.bounds.y / s));\n\t\n\treturn canvas;\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Updates the bounds of the VML container.\n */\nmxShape.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tvar w = Math.max(1, Math.round(this.bounds.width));\n\tvar h = Math.max(1, Math.round(this.bounds.height));\n\tthis.node.style.width = w + 'px';\n\tthis.node.style.height = h + 'px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: redrawHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.redrawHtmlShape = function()\n{\n\t// LATER: Refactor methods\n\tthis.updateHtmlBounds(this.node);\n\tthis.updateHtmlFilters(this.node);\n\tthis.updateHtmlColors(this.node);\n};\n\n/**\n * Function: updateHtmlFilters\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlFilters = function(node)\n{\n\tvar f = '';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tf += 'alpha(opacity=' + (this.opacity) + ')';\n\t}\n\t\n\tif (this.isShadow)\n\t{\n\t\t// FIXME: Cannot implement shadow transparency with filter\n\t\tf += 'progid:DXImageTransform.Microsoft.dropShadow (' +\n\t\t\t'OffX=\\'' + Math.round(mxConstants.SHADOW_OFFSET_X * this.scale) + '\\', ' +\n\t\t\t'OffY=\\'' + Math.round(mxConstants.SHADOW_OFFSET_Y * this.scale) + '\\', ' +\n\t\t\t'Color=\\'' + mxConstants.VML_SHADOWCOLOR + '\\')';\n\t}\n\t\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar start = this.fill;\n\t\tvar end = this.gradient;\n\t\tvar type = '0';\n\t\t\n\t\tvar lookup = {east:0,south:1,west:2,north:3};\n\t\tvar dir = (this.direction != null) ? lookup[this.direction] : 0;\n\t\t\n\t\tif (this.gradientDirection != null)\n\t\t{\n\t\t\tdir = mxUtils.mod(dir + lookup[this.gradientDirection] - 1, 4);\n\t\t}\n\n\t\tif (dir == 1)\n\t\t{\n\t\t\ttype = '1';\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 2)\n\t\t{\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 3)\n\t\t{\n\t\t\ttype = '1';\n\t\t}\n\t\t\n\t\tf += 'progid:DXImageTransform.Microsoft.gradient(' +\n\t\t\t'startColorStr=\\'' + start + '\\', endColorStr=\\'' + end +\n\t\t\t'\\', gradientType=\\'' + type + '\\')';\n\t}\n\n\tnode.style.filter = f;\n};\n\n/**\n * Function: mixedModeHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlColors = function(node)\n{\n\tvar color = this.stroke;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.borderColor = color;\n\n\t\tif (this.isDashed)\n\t\t{\n\t\t\tnode.style.borderStyle = 'dashed';\n\t\t}\n\t\telse if (this.strokewidth > 0)\n\t\t{\n\t\t\tnode.style.borderStyle = 'solid';\n\t\t}\n\n\t\tnode.style.borderWidth = Math.max(1, Math.ceil(this.strokewidth * this.scale)) + 'px';\n\t}\n\telse\n\t{\n\t\tnode.style.borderWidth = '0px';\n\t}\n\n\tcolor = (this.outline) ? null : this.fill;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.backgroundColor = color;\n\t\tnode.style.backgroundImage = 'none';\n\t}\n\telse if (this.pointerEvents)\n\t{\n\t\t node.style.backgroundColor = 'transparent';\n\t}\n\telse if (document.documentMode == 8)\n\t{\n\t\tmxUtils.addTransparentBackgroundFilter(node);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(node);\n\t}\n};\n\n/**\n * Function: mixedModeHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlBounds = function(node)\n{\n\tvar sw = (document.documentMode >= 9) ? 0 : Math.ceil(this.strokewidth * this.scale);\n\tnode.style.borderWidth = Math.max(1, sw) + 'px';\n\tnode.style.overflow = 'hidden';\n\t\n\tnode.style.left = Math.round(this.bounds.x - sw / 2) + 'px';\n\tnode.style.top = Math.round(this.bounds.y - sw / 2) + 'px';\n\n\tif (document.compatMode == 'CSS1Compat')\n\t{\n\t\tsw = -sw;\n\t}\n\t\n\tnode.style.width = Math.round(Math.max(0, this.bounds.width + sw)) + 'px';\n\tnode.style.height = Math.round(Math.max(0, this.bounds.height + sw)) + 'px';\n};\n\n/**\n * Function: destroyCanvas\n * \n * Destroys the given canvas which was used for drawing. This implementation\n * increments the reference counts on all shared gradients used in the canvas.\n */\nmxShape.prototype.destroyCanvas = function(canvas)\n{\n\t// Manages reference counts\n\tif (canvas instanceof mxSvgCanvas2D)\n\t{\n\t\t// Increments ref counts\n\t\tfor (var key in canvas.gradients)\n\t\t{\n\t\t\tvar gradient = canvas.gradients[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) + 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.releaseSvgGradients(this.oldGradients);\n\t\tthis.oldGradients = canvas.gradients;\n\t}\n};\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxShape.prototype.paint = function(c)\n{\n\tvar strokeDrawn = false;\n\t\n\tif (c != null && this.outline)\n\t{\n\t\tvar stroke = c.stroke;\n\t\t\n\t\tc.stroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tstroke.apply(this, arguments);\n\t\t};\n\n\t\tvar fillAndStroke = c.fillAndStroke;\n\t\t\n\t\tc.fillAndStroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tfillAndStroke.apply(this, arguments);\n\t\t};\n\t}\n\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\tif (this.isPaintBoundsInverted())\n\t{\n\t\tvar t = (w - h) / 2;\n\t\tx += t;\n\t\ty -= t;\n\t\tvar tmp = w;\n\t\tw = h;\n\t\th = tmp;\n\t}\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\n\t// Adds background rectangle to capture events\n\tvar bg = null;\n\t\n\tif ((this.stencil == null && this.points == null && this.shapePointerEvents) ||\n\t\t(this.stencil != null && this.stencilPointerEvents))\n\t{\n\t\tvar bb = this.createBoundingBox();\n\t\t\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tbg = this.createTransparentSvgRectangle(bb.x, bb.y, bb.width, bb.height);\n\t\t\tthis.node.appendChild(bg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar rect = c.createRect('rect', bb.x / s, bb.y / s, bb.width / s, bb.height / s);\n\t\t\trect.appendChild(c.createTransparentFill());\n\t\t\trect.stroked = 'false';\n\t\t\tc.root.appendChild(rect);\n\t\t}\n\t}\n\n\tif (this.stencil != null)\n\t{\n\t\tthis.stencil.drawShape(c, this, x, y, w, h);\n\t}\n\telse\n\t{\n\t\t// Stencils have separate strokewidth\n\t\tc.setStrokeWidth(this.strokewidth);\n\t\t\n\t\tif (this.points != null)\n\t\t{\n\t\t\t// Paints edge shape\n\t\t\tvar pts = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t\t{\n\t\t\t\tif (this.points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tpts.push(new mxPoint(this.points[i].x / s, this.points[i].y / s));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.paintEdgeShape(c, pts);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Paints vertex shape\n\t\t\tthis.paintVertexShape(c, x, y, w, h);\n\t\t}\n\t}\n\t\n\tif (bg != null && c.state != null && c.state.transform != null)\n\t{\n\t\tbg.setAttribute('transform', c.state.transform);\n\t}\n\t\n\t// Draws highlight rectangle if no stroke was used\n\tif (c != null && this.outline && !strokeDrawn)\n\t{\n\t\tc.rect(x, y, w, h);\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxShape.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tvar dash = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tdash = this.style['dashPattern'];\t\t\n\t}\n\n\tc.setAlpha(this.opacity / 100);\n\tc.setFillAlpha(this.fillOpacity / 100);\n\tc.setStrokeAlpha(this.strokeOpacity / 100);\n\n\t// Sets alpha, colors and gradients\n\tif (this.isShadow != null)\n\t{\n\t\tc.setShadow(this.isShadow);\n\t}\n\t\n\t// Dash pattern\n\tif (this.isDashed != null)\n\t{\n\t\tc.setDashed(this.isDashed, (this.style != null) ?\n\t\t\tmxUtils.getValue(this.style, mxConstants.STYLE_FIX_DASH, false) == 1 : false);\n\t}\n\n\tif (dash != null)\n\t{\n\t\tc.setDashPattern(dash);\n\t}\n\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar b = this.getGradientBounds(c, x, y, w, h);\n\t\tc.setGradient(this.fill, this.gradient, b.x, b.y, b.width, b.height, this.gradientDirection);\n\t}\n\telse\n\t{\n\t\tc.setFillColor(this.fill);\n\t}\n\n\tc.setStrokeColor(this.stroke);\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxShape.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\treturn new mxRectangle(x, y, w, h);\n};\n\n/**\n * Function: updateTransform\n * \n * Sets the scale and rotation on the given canvas.\n */\nmxShape.prototype.updateTransform = function(c, x, y, w, h)\n{\n\t// NOTE: Currently, scale is implemented in state and canvas. This will\n\t// move to canvas in a later version, so that the states are unscaled\n\t// and untranslated and do not need an update after zooming or panning.\n\tc.scale(this.scale);\n\tc.rotate(this.getShapeRotation(), this.flipH, this.flipV, x + w / 2, y + h / 2);\n};\n\n/**\n * Function: paintVertexShape\n * \n * Paints the vertex shape.\n */\nmxShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tthis.paintBackground(c, x, y, w, h);\n\t\n\tif (!this.outline || this.style == null || mxUtils.getValue(\n\t\tthis.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintForeground(c, x, y, w, h);\n\t}\n};\n\n/**\n * Function: paintBackground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintBackground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintForeground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintForeground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintEdgeShape\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintEdgeShape = function(c, pts) { };\n\n/**\n * Function: getArcSize\n * \n * Returns the arc size for the given dimension.\n */\nmxShape.prototype.getArcSize = function(w, h)\n{\n\tvar r = 0;\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t{\n\t\tr = Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t}\n\telse\n\t{\n\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE,\n\t\t\tmxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\t\tr = Math.min(w * f, h * f);\n\t}\n\t\n\treturn r;\n};\n\n/**\n * Function: paintGlassEffect\n * \n * Paints the glass gradient effect.\n */\nmxShape.prototype.paintGlassEffect = function(c, x, y, w, h, arc)\n{\n\tvar sw = Math.ceil(this.strokewidth / 2);\n\tvar size = 0.4;\n\t\n\tc.setGradient('#ffffff', '#ffffff', x, y, w, h * 0.6, 'south', 0.9, 0.1);\n\tc.begin();\n\tarc += 2 * sw;\n\t\t\n\tif (this.isRounded)\n\t{\n\t\tc.moveTo(x - sw + arc, y - sw);\n\t\tc.quadTo(x - sw, y - sw, x - sw, y - sw + arc);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw + arc);\n\t\tc.quadTo(x + w + sw, y - sw, x + w + sw - arc, y - sw);\n\t}\n\telse\n\t{\n\t\tc.moveTo(x - sw, y - sw);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw);\n\t}\n\t\n\tc.close();\n\tc.fill();\n};\n\n/**\n * Function: addPoints\n * \n * Paints the given points with rounded corners.\n */\nmxShape.prototype.addPoints = function(c, pts, rounded, arcSize, close, exclude, initialMove)\n{\n\tif (pts != null && pts.length > 0)\n\t{\n\t\tinitialMove = (initialMove != null) ? initialMove : true;\n\t\tvar pe = pts[pts.length - 1];\n\t\t\n\t\t// Adds virtual waypoint in the center between start and end point\n\t\tif (close && rounded)\n\t\t{\n\t\t\tpts = pts.slice();\n\t\t\tvar p0 = pts[0];\n\t\t\tvar wp = new mxPoint(pe.x + (p0.x - pe.x) / 2, pe.y + (p0.y - pe.y) / 2);\n\t\t\tpts.splice(0, 0, wp);\n\t\t}\n\t\n\t\tvar pt = pts[0];\n\t\tvar i = 1;\n\t\n\t\t// Draws the line segments\n\t\tif (initialMove)\n\t\t{\n\t\t\tc.moveTo(pt.x, pt.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pt.x, pt.y);\n\t\t}\n\t\t\n\t\twhile (i < ((close) ? pts.length : pts.length - 1))\n\t\t{\n\t\t\tvar tmp = pts[mxUtils.mod(i, pts.length)];\n\t\t\tvar dx = pt.x - tmp.x;\n\t\t\tvar dy = pt.y - tmp.y;\n\t\n\t\t\tif (rounded && (dx != 0 || dy != 0) && (exclude == null || mxUtils.indexOf(exclude, i - 1) < 0))\n\t\t\t{\n\t\t\t\t// Draws a line from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the last point\n\t\t\t\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tvar nx1 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny1 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x1 = tmp.x + nx1;\n\t\t\t\tvar y1 = tmp.y + ny1;\n\t\t\t\tc.lineTo(x1, y1);\n\t\n\t\t\t\t// Draws a curve from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the next point\n\t\t\t\tvar next = pts[mxUtils.mod(i + 1, pts.length)];\n\t\t\t\t\n\t\t\t\t// Uses next non-overlapping point\n\t\t\t\twhile (i < pts.length - 2 && Math.round(next.x - tmp.x) == 0 && Math.round(next.y - tmp.y) == 0)\n\t\t\t\t{\n\t\t\t\t\tnext = pts[mxUtils.mod(i + 2, pts.length)];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdx = next.x - tmp.x;\n\t\t\t\tdy = next.y - tmp.y;\n\t\n\t\t\t\tdist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n\t\t\t\tvar nx2 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny2 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x2 = tmp.x + nx2;\n\t\t\t\tvar y2 = tmp.y + ny2;\n\t\n\t\t\t\tc.quadTo(tmp.x, tmp.y, x2, y2);\n\t\t\t\ttmp = new mxPoint(x2, y2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.lineTo(tmp.x, tmp.y);\n\t\t\t}\n\t\n\t\t\tpt = tmp;\n\t\t\ti++;\n\t\t}\n\t\n\t\tif (close)\n\t\t{\n\t\t\tc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pe.x, pe.y);\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxShape.prototype.resetStyles = function()\n{\n\tthis.initStyles();\n\n\tthis.spacing = 0;\n\t\n\tdelete this.fill;\n\tdelete this.gradient;\n\tdelete this.gradientDirection;\n\tdelete this.stroke;\n\tdelete this.startSize;\n\tdelete this.endSize;\n\tdelete this.startArrow;\n\tdelete this.endArrow;\n\tdelete this.direction;\n\tdelete this.isShadow;\n\tdelete this.isDashed;\n\tdelete this.isRounded;\n\tdelete this.glass;\n};\n\n/**\n * Function: apply\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_FILLCOLOR> => fill\n * - <mxConstants.STYLE_GRADIENTCOLOR> => gradient\n * - <mxConstants.STYLE_GRADIENT_DIRECTION> => gradientDirection\n * - <mxConstants.STYLE_OPACITY> => opacity\n * - <mxConstants.STYLE_FILL_OPACITY> => fillOpacity\n * - <mxConstants.STYLE_STROKE_OPACITY> => strokeOpacity\n * - <mxConstants.STYLE_STROKECOLOR> => stroke\n * - <mxConstants.STYLE_STROKEWIDTH> => strokewidth\n * - <mxConstants.STYLE_SHADOW> => isShadow\n * - <mxConstants.STYLE_DASHED> => isDashed\n * - <mxConstants.STYLE_SPACING> => spacing\n * - <mxConstants.STYLE_STARTSIZE> => startSize\n * - <mxConstants.STYLE_ENDSIZE> => endSize\n * - <mxConstants.STYLE_ROUNDED> => isRounded\n * - <mxConstants.STYLE_STARTARROW> => startArrow\n * - <mxConstants.STYLE_ENDARROW> => endArrow\n * - <mxConstants.STYLE_ROTATION> => rotation\n * - <mxConstants.STYLE_DIRECTION> => direction\n * - <mxConstants.STYLE_GLASS> => glass\n *\n * This keeps a reference to the <style>. If you need to keep a reference to\n * the cell, you can override this method and store a local reference to\n * state.cell or the <mxCellState> itself. If <outline> should be true, make\n * sure to set it before calling this method.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxShape.prototype.apply = function(state)\n{\n\tthis.state = state;\n\tthis.style = state.style;\n\n\tif (this.style != null)\n\t{\n\t\tthis.fill = mxUtils.getValue(this.style, mxConstants.STYLE_FILLCOLOR, this.fill);\n\t\tthis.gradient = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENTCOLOR, this.gradient);\n\t\tthis.gradientDirection = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENT_DIRECTION, this.gradientDirection);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_OPACITY, this.opacity);\n\t\tthis.fillOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_FILL_OPACITY, this.fillOpacity);\n\t\tthis.strokeOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_STROKE_OPACITY, this.strokeOpacity);\n\t\tthis.stroke = mxUtils.getValue(this.style, mxConstants.STYLE_STROKECOLOR, this.stroke);\n\t\tthis.strokewidth = mxUtils.getNumber(this.style, mxConstants.STYLE_STROKEWIDTH, this.strokewidth);\n\t\tthis.spacing = mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing);\n\t\tthis.startSize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, this.startSize);\n\t\tthis.endSize = mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, this.endSize);\n\t\tthis.startArrow = mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, this.startArrow);\n\t\tthis.endArrow = mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, this.endArrow);\n\t\tthis.rotation = mxUtils.getValue(this.style, mxConstants.STYLE_ROTATION, this.rotation);\n\t\tthis.direction = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, this.direction);\n\t\tthis.flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\tthis.flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\t\n\t\t// Legacy support for stencilFlipH/V\n\t\tif (this.stencil != null)\n\t\t{\n\t\t\tthis.flipH = mxUtils.getValue(this.style, 'stencilFlipH', 0) == 1 || this.flipH;\n\t\t\tthis.flipV = mxUtils.getValue(this.style, 'stencilFlipV', 0) == 1 || this.flipV;\n\t\t}\n\t\t\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH || this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tvar tmp = this.flipH;\n\t\t\tthis.flipH = this.flipV;\n\t\t\tthis.flipV = tmp;\n\t\t}\n\n\t\tthis.isShadow = mxUtils.getValue(this.style, mxConstants.STYLE_SHADOW, this.isShadow) == 1;\n\t\tthis.isDashed = mxUtils.getValue(this.style, mxConstants.STYLE_DASHED, this.isDashed) == 1;\n\t\tthis.isRounded = mxUtils.getValue(this.style, mxConstants.STYLE_ROUNDED, this.isRounded) == 1;\n\t\tthis.glass = mxUtils.getValue(this.style, mxConstants.STYLE_GLASS, this.glass) == 1;\n\t\t\n\t\tif (this.fill == mxConstants.NONE)\n\t\t{\n\t\t\tthis.fill = null;\n\t\t}\n\n\t\tif (this.gradient == mxConstants.NONE)\n\t\t{\n\t\t\tthis.gradient = null;\n\t\t}\n\n\t\tif (this.stroke == mxConstants.NONE)\n\t\t{\n\t\t\tthis.stroke = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: setCursor\n * \n * Sets the cursor on the given shape.\n *\n * Parameters:\n *\n * cursor - The cursor to be used.\n */\nmxShape.prototype.setCursor = function(cursor)\n{\n\tif (cursor == null)\n\t{\n\t\tcursor = '';\n\t}\n\t\n\tthis.cursor = cursor;\n\n\tif (this.node != null)\n\t{\n\t\tthis.node.style.cursor = cursor;\n\t}\n};\n\n/**\n * Function: getCursor\n * \n * Returns the current cursor.\n */\nmxShape.prototype.getCursor = function()\n{\n\treturn this.cursor;\n};\n\n/**\n * Function: isRoundable\n * \n * Hook for subclassers.\n */\nmxShape.prototype.isRoundable = function()\n{\n\treturn false;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using <createBoundingBox> and\n * <augmentBoundingBox> and stores the result in <boundingBox>.\n */\nmxShape.prototype.updateBoundingBox = function()\n{\n\t// Tries to get bounding box from SVG subsystem\n\t// LATER: Use getBoundingClientRect for fallback in VML\n\tif (this.useSvgBoundingBox && this.node != null && this.node.ownerSVGElement != null)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar b = this.node.getBBox();\n\t\n\t\t\tif (b.width > 0 && b.height > 0)\n\t\t\t{\n\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\n\t\t\t\t// Adds strokeWidth\n\t\t\t\tthis.boundingBox.grow(this.strokewidth * this.scale / 2);\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tcatch(e)\n\t\t{\n\t\t\t// fallback to code below\n\t\t}\n\t}\n\n\tif (this.bounds != null)\n\t{\n\t\tvar bbox = this.createBoundingBox();\n\t\t\n\t\tif (bbox != null)\n\t\t{\n\t\t\tthis.augmentBoundingBox(bbox);\n\t\t\tvar rot = this.getShapeRotation();\n\t\t\t\n\t\t\tif (rot != 0)\n\t\t\t{\n\t\t\t\tbbox = mxUtils.getBoundingBox(bbox, rot);\n\t\t\t}\n\t\t}\n\n\t\tthis.boundingBox = bbox;\n\t}\n};\n\n/**\n * Function: createBoundingBox\n *\n * Returns a new rectangle that represents the bounding box of the bare shape\n * with no shadows or strokewidths.\n */\nmxShape.prototype.createBoundingBox = function()\n{\n\tvar bb = this.bounds.clone();\n\n\tif ((this.stencil != null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\tthis.direction == mxConstants.DIRECTION_SOUTH)) || this.isPaintBoundsInverted())\n\t{\n\t\tbb.rotate90();\n\t}\n\t\n\treturn bb;\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the strokewidth and shadow offsets.\n */\nmxShape.prototype.augmentBoundingBox = function(bbox)\n{\n\tif (this.isShadow)\n\t{\n\t\tbbox.width += Math.ceil(mxConstants.SHADOW_OFFSET_X * this.scale);\n\t\tbbox.height += Math.ceil(mxConstants.SHADOW_OFFSET_Y * this.scale);\n\t}\n\t\n\t// Adds strokeWidth\n\tbbox.grow(this.strokewidth * this.scale / 2);\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Returns true if the bounds should be inverted.\n */\nmxShape.prototype.isPaintBoundsInverted = function()\n{\n\t// Stencil implements inversion via aspect\n\treturn this.stencil == null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation from the style.\n */\nmxShape.prototype.getRotation = function()\n{\n\treturn (this.rotation != null) ? this.rotation : 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label.\n */\nmxShape.prototype.getTextRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) != 1)\n\t{\n\t\trot += mxText.prototype.verticalTextRotation;\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns the actual rotation of the shape.\n */\nmxShape.prototype.getShapeRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (this.direction != null)\n\t{\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\trot += 270;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\trot += 180;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\trot += 90;\n\t\t}\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: createTransparentSvgRectangle\n * \n * Adds a transparent rectangle that catches all events.\n */\nmxShape.prototype.createTransparentSvgRectangle = function(x, y, w, h)\n{\n\tvar rect = document.createElementNS(mxConstants.NS_SVG, 'rect');\n\trect.setAttribute('x', x);\n\trect.setAttribute('y', y);\n\trect.setAttribute('width', w);\n\trect.setAttribute('height', h);\n\trect.setAttribute('fill', 'none');\n\trect.setAttribute('stroke', 'none');\n\trect.setAttribute('pointer-events', 'all');\n\t\n\treturn rect;\n};\n\n/**\n * Function: setTransparentBackgroundImage\n * \n * Sets a transparent background CSS style to catch all events.\n * \n * Paints the line shape.\n */\nmxShape.prototype.setTransparentBackgroundImage = function(node)\n{\n\tnode.style.backgroundImage = 'url(\\'' + mxClient.imageBasePath + '/transparent.gif\\')';\n};\n\n/**\n * Function: releaseSvgGradients\n * \n * Paints the line shape.\n */\nmxShape.prototype.releaseSvgGradients = function(grads)\n{\n\tif (grads != null)\n\t{\n\t\tfor (var key in grads)\n\t\t{\n\t\t\tvar gradient = grads[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) - 1;\n\t\t\t\t\n\t\t\t\tif (gradient.mxRefCount == 0 && gradient.parentNode != null)\n\t\t\t\t{\n\t\t\t\t\tgradient.parentNode.removeChild(gradient);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n *\n * Destroys the shape by removing it from the DOM and releasing the DOM\n * node associated with the shape using <mxEvent.release>.\n */\nmxShape.prototype.destroy = function()\n{\n\tif (this.node != null)\n\t{\n\t\tmxEvent.release(this.node);\n\t\t\n\t\tif (this.node.parentNode != null)\n\t\t{\n\t\t\tthis.node.parentNode.removeChild(this.node);\n\t\t}\n\t\t\n\t\tthis.node = null;\n\t}\n\t\n\t// Decrements refCount and removes unused\n\tthis.releaseSvgGradients(this.oldGradients);\n\tthis.oldGradients = null;\n};\n\n__mxOutput.mxShape = typeof mxShape !== 'undefined' ? mxShape : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n * \n * Code to add stencils.\n * \n * (code)\n * var req = mxUtils.load('test/stencils.xml');\n * var root = req.getDocumentElement();\n * var shape = root.firstChild;\n * \n * while (shape != null)\n * {\n * \t if (shape.nodeType == mxConstants.NODETYPE_ELEMENT)\n *   {\n *     mxStencilRegistry.addStencil(shape.getAttribute('name'), new mxStencil(shape));\n *   }\n *   \n *   shape = shape.nextSibling;\n * }\n * (end)\n */\nvar mxStencilRegistry =\n{\n\t/**\n\t * Class: mxStencilRegistry\n\t * \n\t * A singleton class that provides a registry for stencils and the methods\n\t * for painting those stencils onto a canvas or into a DOM.\n\t */\n\tstencils: {},\n\t\n\t/**\n\t * Function: addStencil\n\t * \n\t * Adds the given <mxStencil>.\n\t */\n\taddStencil: function(name, stencil)\n\t{\n\t\tmxStencilRegistry.stencils[name] = stencil;\n\t},\n\t\n\t/**\n\t * Function: getStencil\n\t * \n\t * Returns the <mxStencil> for the given name.\n\t */\n\tgetStencil: function(name)\n\t{\n\t\treturn mxStencilRegistry.stencils[name];\n\t}\n\n};\n\n__mxOutput.mxStencilRegistry = typeof mxStencilRegistry !== 'undefined' ? mxStencilRegistry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxMarker =\n{\n\t/**\n\t * Class: mxMarker\n\t * \n\t * A static class that implements all markers for VML and SVG using a\n\t * registry. NOTE: The signatures in this class will change.\n\t * \n\t * Variable: markers\n\t * \n\t * Maps from markers names to functions to paint the markers.\n\t */\n\tmarkers: [],\n\t\n\t/**\n\t * Function: addMarker\n\t * \n\t * Adds a factory method that updates a given endpoint and returns a\n\t * function to paint the marker onto the given canvas.\n\t */\n\taddMarker: function(type, funct)\n\t{\n\t\tmxMarker.markers[type] = funct;\n\t},\n\t\n\t/**\n\t * Function: createMarker\n\t * \n\t * Returns a function to paint the given marker.\n\t */\n\tcreateMarker: function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\tvar funct = mxMarker.markers[type];\n\t\t\n\t\treturn (funct != null) ? funct(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled) : null;\n\t}\n\n};\n\n/**\n * Adds the classic and block marker factory method.\n */\n(function()\n{\n\tfunction createArrow(widthFactor)\n\t{\n\t\twidthFactor = (widthFactor != null) ? widthFactor : 2;\n\t\t\n\t\treturn function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t\t{\n\t\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t\t// 26.565 degrees, 1/sin(26.565) = 2.236 / 2 = 1.118 ( / 2 allows for\n\t\t\t// only half the strokewidth is processed ).\n\t\t\tvar endOffsetX = unitX * sw * 1.118;\n\t\t\tvar endOffsetY = unitY * sw * 1.118;\n\t\t\t\n\t\t\tunitX = unitX * (size + sw);\n\t\t\tunitY = unitY * (size + sw);\n\t\n\t\t\tvar pt = pe.clone();\n\t\t\tpt.x -= endOffsetX;\n\t\t\tpt.y -= endOffsetY;\n\t\t\t\n\t\t\tvar f = (type != mxConstants.ARROW_CLASSIC && type != mxConstants.ARROW_CLASSIC_THIN) ? 1 : 3 / 4;\n\t\t\tpe.x += -unitX * f - endOffsetX;\n\t\t\tpe.y += -unitY * f - endOffsetY;\n\t\t\t\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tcanvas.begin();\n\t\t\t\tcanvas.moveTo(pt.x, pt.y);\n\t\t\t\tcanvas.lineTo(pt.x - unitX - unitY / widthFactor, pt.y - unitY + unitX / widthFactor);\n\t\t\t\n\t\t\t\tif (type == mxConstants.ARROW_CLASSIC || type == mxConstants.ARROW_CLASSIC_THIN)\n\t\t\t\t{\n\t\t\t\t\tcanvas.lineTo(pt.x - unitX * 3 / 4, pt.y - unitY * 3 / 4);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tcanvas.lineTo(pt.x + unitY / widthFactor - unitX, pt.y - unitY - unitX / widthFactor);\n\t\t\t\tcanvas.close();\n\t\n\t\t\t\tif (filled)\n\t\t\t\t{\n\t\t\t\t\tcanvas.fillAndStroke();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcanvas.stroke();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\t\n\tmxMarker.addMarker('classic', createArrow(2));\n\tmxMarker.addMarker('classicThin', createArrow(3));\n\tmxMarker.addMarker('block', createArrow(2));\n\tmxMarker.addMarker('blockThin', createArrow(3));\n\t\n\tfunction createOpenArrow(widthFactor)\n\t{\n\t\twidthFactor = (widthFactor != null) ? widthFactor : 2;\n\t\t\n\t\treturn function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t\t{\n\t\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t\t// 26.565 degrees, 1/sin(26.565) = 2.236 / 2 = 1.118 ( / 2 allows for\n\t\t\t// only half the strokewidth is processed ).\n\t\t\tvar endOffsetX = unitX * sw * 1.118;\n\t\t\tvar endOffsetY = unitY * sw * 1.118;\n\t\t\t\n\t\t\tunitX = unitX * (size + sw);\n\t\t\tunitY = unitY * (size + sw);\n\t\t\t\n\t\t\tvar pt = pe.clone();\n\t\t\tpt.x -= endOffsetX;\n\t\t\tpt.y -= endOffsetY;\n\t\t\t\n\t\t\tpe.x += -endOffsetX * 2;\n\t\t\tpe.y += -endOffsetY * 2;\n\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tcanvas.begin();\n\t\t\t\tcanvas.moveTo(pt.x - unitX - unitY / widthFactor, pt.y - unitY + unitX / widthFactor);\n\t\t\t\tcanvas.lineTo(pt.x, pt.y);\n\t\t\t\tcanvas.lineTo(pt.x + unitY / widthFactor - unitX, pt.y - unitY - unitX / widthFactor);\n\t\t\t\tcanvas.stroke();\n\t\t\t};\n\t\t}\n\t};\n\t\n\tmxMarker.addMarker('open', createOpenArrow(2));\n\tmxMarker.addMarker('openThin', createOpenArrow(3));\n\t\n\tmxMarker.addMarker('oval', function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\tvar a = size / 2;\n\t\t\n\t\tvar pt = pe.clone();\n\t\tpe.x -= unitX * a;\n\t\tpe.y -= unitY * a;\n\n\t\treturn function()\n\t\t{\n\t\t\tcanvas.ellipse(pt.x - a, pt.y - a, size, size);\n\t\t\t\t\t\t\n\t\t\tif (filled)\n\t\t\t{\n\t\t\t\tcanvas.fillAndStroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.stroke();\n\t\t\t}\n\t\t};\n\t});\n\n\tfunction diamond(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t// 45 degrees, 1/sin(45) = 1.4142 / 2 = 0.7071 ( / 2 allows for\n\t\t// only half the strokewidth is processed ). Or 0.9862 for thin diamond.\n\t\t// Note these values and the tk variable below are dependent, update\n\t\t// both together (saves trig hard coding it).\n\t\tvar swFactor = (type == mxConstants.ARROW_DIAMOND) ?  0.7071 : 0.9862;\n\t\tvar endOffsetX = unitX * sw * swFactor;\n\t\tvar endOffsetY = unitY * sw * swFactor;\n\t\t\n\t\tunitX = unitX * (size + sw);\n\t\tunitY = unitY * (size + sw);\n\t\t\n\t\tvar pt = pe.clone();\n\t\tpt.x -= endOffsetX;\n\t\tpt.y -= endOffsetY;\n\t\t\n\t\tpe.x += -unitX - endOffsetX;\n\t\tpe.y += -unitY - endOffsetY;\n\t\t\n\t\t// thickness factor for diamond\n\t\tvar tk = ((type == mxConstants.ARROW_DIAMOND) ?  2 : 3.4);\n\t\t\n\t\treturn function()\n\t\t{\n\t\t\tcanvas.begin();\n\t\t\tcanvas.moveTo(pt.x, pt.y);\n\t\t\tcanvas.lineTo(pt.x - unitX / 2 - unitY / tk, pt.y + unitX / tk - unitY / 2);\n\t\t\tcanvas.lineTo(pt.x - unitX, pt.y - unitY);\n\t\t\tcanvas.lineTo(pt.x - unitX / 2 + unitY / tk, pt.y - unitY / 2 - unitX / tk);\n\t\t\tcanvas.close();\n\t\t\t\n\t\t\tif (filled)\n\t\t\t{\n\t\t\t\tcanvas.fillAndStroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.stroke();\n\t\t\t}\n\t\t};\n\t};\n\n\tmxMarker.addMarker('diamond', diamond);\n\tmxMarker.addMarker('diamondThin', diamond);\n})();\n\n__mxOutput.mxMarker = typeof mxMarker !== 'undefined' ? mxMarker : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxActor\n *\n * Extends <mxShape> to implement an actor shape. If a custom shape with one\n * filled area is needed, then this shape's <redrawPath> should be overridden.\n * \n * Example:\n * \n * (code)\n * function SampleShape() { }\n * \n * SampleShape.prototype = new mxActor();\n * SampleShape.prototype.constructor = vsAseShape;\n * \n * mxCellRenderer.registerShape('sample', SampleShape);\n * SampleShape.prototype.redrawPath = function(path, x, y, w, h)\n * {\n *   path.moveTo(0, 0);\n *   path.lineTo(w, h);\n *   // ...\n *   path.close();\n * }\n * (end)\n * \n * This shape is registered under <mxConstants.SHAPE_ACTOR> in\n * <mxCellRenderer>.\n * \n * Constructor: mxActor\n *\n * Constructs a new actor shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxActor(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxActor, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxActor.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.translate(x, y);\n\tc.begin();\n\tthis.redrawPath(c, x, y, w, h);\n\tc.fillAndStroke();\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxActor.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar width = w/3;\n\tc.moveTo(0, h);\n\tc.curveTo(0, 3 * h / 5, 0, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w / 2 - width, 2 * h / 5, w / 2 - width, 0, w / 2, 0);\n\tc.curveTo(w / 2 + width, 0, w / 2 + width, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w, 2 * h / 5, w, 3 * h / 5, w, h);\n\tc.close();\n};\n\n__mxOutput.mxActor = typeof mxActor !== 'undefined' ? mxActor : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCloud\n *\n * Extends <mxActor> to implement a cloud shape.\n * \n * This shape is registered under <mxConstants.SHAPE_CLOUD> in\n * <mxCellRenderer>.\n * \n * Constructor: mxCloud\n *\n * Constructs a new cloud shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxCloud(bounds, fill, stroke, strokewidth)\n{\n\tmxActor.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxCloud, mxActor);\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCloud.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tc.moveTo(0.25 * w, 0.25 * h);\n\tc.curveTo(0.05 * w, 0.25 * h, 0, 0.5 * h, 0.16 * w, 0.55 * h);\n\tc.curveTo(0, 0.66 * h, 0.18 * w, 0.9 * h, 0.31 * w, 0.8 * h);\n\tc.curveTo(0.4 * w, h, 0.7 * w, h, 0.8 * w, 0.8 * h);\n\tc.curveTo(w, 0.8 * h, w, 0.6 * h, 0.875 * w, 0.5 * h);\n\tc.curveTo(w, 0.3 * h, 0.8 * w, 0.1 * h, 0.625 * w, 0.2 * h);\n\tc.curveTo(0.5 * w, 0.05 * h, 0.3 * w, 0.05 * h, 0.25 * w, 0.25 * h);\n\tc.close();\n};\n\n__mxOutput.mxCloud = typeof mxCloud !== 'undefined' ? mxCloud : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRectangleShape\n *\n * Extends <mxShape> to implement a rectangle shape.\n * This shape is registered under <mxConstants.SHAPE_RECTANGLE>\n * in <mxCellRenderer>.\n * \n * Constructor: mxRectangleShape\n *\n * Constructs a new rectangle shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxRectangleShape(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxRectangleShape, mxShape);\n\n/**\n * Function: isHtmlAllowed\n *\n * Returns true for non-rounded, non-rotated shapes with no glass gradient.\n */\nmxRectangleShape.prototype.isHtmlAllowed = function()\n{\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\t\t\n\t}\n\t\n\treturn !this.isRounded && !this.glass && this.rotation == 0 && (events ||\n\t\t(this.fill != null && this.fill != mxConstants.NONE));\n};\n\n/**\n * Function: paintBackground\n * \n * Generic background painting implementation.\n */\nmxRectangleShape.prototype.paintBackground = function(c, x, y, w, h)\n{\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\t\t\n\t}\n\t\n\tif (events || (this.fill != null && this.fill != mxConstants.NONE) ||\n\t\t(this.stroke != null && this.stroke != mxConstants.NONE))\n\t{\n\t\tif (!events && (this.fill == null || this.fill == mxConstants.NONE))\n\t\t{\n\t\t\tc.pointerEvents = false;\n\t\t}\n\t\t\n\t\tif (this.isRounded)\n\t\t{\n\t\t\tvar r = 0;\n\t\t\t\n\t\t\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t\t\t{\n\t\t\t\tr = Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE,\n\t\t\t\t\tmxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\t\t\t\tr = Math.min(w * f, h * f);\n\t\t\t}\n\t\t\t\n\t\t\tc.roundrect(x, y, w, h, r, r);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.rect(x, y, w, h);\n\t\t}\n\t\t\t\n\t\tc.fillAndStroke();\n\t}\n};\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxRectangleShape.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn true;\n};\n\n/**\n * Function: paintForeground\n * \n * Generic background painting implementation.\n */\nmxRectangleShape.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tif (this.glass && !this.outline && this.fill != null && this.fill != mxConstants.NONE)\n\t{\n\t\tthis.paintGlassEffect(c, x, y, w, h, this.getArcSize(w + this.strokewidth, h + this.strokewidth));\n\t}\n};\n\n__mxOutput.mxRectangleShape = typeof mxRectangleShape !== 'undefined' ? mxRectangleShape : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEllipse\n *\n * Extends <mxShape> to implement an ellipse shape.\n * This shape is registered under <mxConstants.SHAPE_ELLIPSE>\n * in <mxCellRenderer>.\n * \n * Constructor: mxEllipse\n *\n * Constructs a new ellipse shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxEllipse(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxEllipse, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Paints the ellipse shape.\n */\nmxEllipse.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.ellipse(x, y, w, h);\n\tc.fillAndStroke();\n};\n\n__mxOutput.mxEllipse = typeof mxEllipse !== 'undefined' ? mxEllipse : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDoubleEllipse\n *\n * Extends <mxShape> to implement a double ellipse shape. This shape is\n * registered under <mxConstants.SHAPE_DOUBLE_ELLIPSE> in <mxCellRenderer>.\n * Use the following override to only fill the inner ellipse in this shape:\n * \n * (code)\n * mxDoubleEllipse.prototype.paintVertexShape = function(c, x, y, w, h)\n * {\n *   c.ellipse(x, y, w, h);\n *   c.stroke();\n *   \n *   var inset = mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth, Math.min(w / 5, h / 5)));\n *   x += inset;\n *   y += inset;\n *   w -= 2 * inset;\n *   h -= 2 * inset;\n *   \n *   if (w > 0 && h > 0)\n *   {\n *     c.ellipse(x, y, w, h);\n *   }\n *   \n *   c.fillAndStroke();\n * };\n * (end)\n * \n * Constructor: mxDoubleEllipse\n *\n * Constructs a new ellipse shape.\n *\n * Parameters:\n *\n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxDoubleEllipse(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxDoubleEllipse, mxShape);\n\n/**\n * Variable: vmlScale\n * \n * Scale for improving the precision of VML rendering. Default is 10.\n */\nmxDoubleEllipse.prototype.vmlScale = 10;\n\n/**\n * Function: paintBackground\n * \n * Paints the background.\n */\nmxDoubleEllipse.prototype.paintBackground = function(c, x, y, w, h)\n{\n\tc.ellipse(x, y, w, h);\n\tc.fillAndStroke();\n};\n\n/**\n * Function: paintForeground\n * \n * Paints the foreground.\n */\nmxDoubleEllipse.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tif (!this.outline)\n\t{\n\t\tvar margin = mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth, Math.min(w / 5, h / 5)));\n\t\tx += margin;\n\t\ty += margin;\n\t\tw -= 2 * margin;\n\t\th -= 2 * margin;\n\t\t\n\t\t// FIXME: Rounding issues in IE8 standards mode (not in 1.x)\n\t\tif (w > 0 && h > 0)\n\t\t{\n\t\t\tc.ellipse(x, y, w, h);\n\t\t}\n\t\t\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the bounds for the label.\n */\nmxDoubleEllipse.prototype.getLabelBounds = function(rect)\n{\n\tvar margin = (mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth,\n\t\t\tMath.min(rect.width / 5 / this.scale, rect.height / 5 / this.scale)))) * this.scale;\n\n\treturn new mxRectangle(rect.x + margin, rect.y + margin, rect.width - 2 * margin, rect.height - 2 * margin);\n};\n\n__mxOutput.mxDoubleEllipse = typeof mxDoubleEllipse !== 'undefined' ? mxDoubleEllipse : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRhombus\n *\n * Extends <mxShape> to implement a rhombus (aka diamond) shape.\n * This shape is registered under <mxConstants.SHAPE_RHOMBUS>\n * in <mxCellRenderer>.\n * \n * Constructor: mxRhombus\n *\n * Constructs a new rhombus shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxRhombus(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxRhombus, mxShape);\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxRhombus.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic painting implementation.\n */\nmxRhombus.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar hw = w / 2;\n\tvar hh = h / 2;\n\t\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tc.begin();\n\tthis.addPoints(c, [new mxPoint(x + hw, y), new mxPoint(x + w, y + hh), new mxPoint(x + hw, y + h),\n\t     new mxPoint(x, y + hh)], this.isRounded, arcSize, true);\n\tc.fillAndStroke();\n};\n\n__mxOutput.mxRhombus = typeof mxRhombus !== 'undefined' ? mxRhombus : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPolyline\n *\n * Extends <mxShape> to implement a polyline (a line with multiple points).\n * This shape is registered under <mxConstants.SHAPE_POLYLINE> in\n * <mxCellRenderer>.\n * \n * Constructor: mxPolyline\n *\n * Constructs a new polyline shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * stroke - String that defines the stroke color. Default is 'black'. This is\n * stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxPolyline(points, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxPolyline, mxShape);\n\n/**\n * Function: getRotation\n * \n * Returns 0.\n */\nmxPolyline.prototype.getRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns 0.\n */\nmxPolyline.prototype.getShapeRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Returns false.\n */\nmxPolyline.prototype.isPaintBoundsInverted = function()\n{\n\treturn false;\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintEdgeShape = function(c, pts)\n{\n\tif (this.style == null || this.style[mxConstants.STYLE_CURVED] != 1)\n\t{\n\t\tthis.paintLine(c, pts, this.isRounded);\n\t}\n\telse\n\t{\n\t\tthis.paintCurvedLine(c, pts);\n\t}\n};\n\n/**\n * Function: paintLine\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintLine = function(c, pts, rounded)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tc.begin();\n\tthis.addPoints(c, pts, rounded, arcSize, false);\n\tc.stroke();\n};\n\n/**\n * Function: paintLine\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintCurvedLine = function(c, pts)\n{\n\tc.begin();\n\t\n\tvar pt = pts[0];\n\tvar n = pts.length;\n\t\n\tc.moveTo(pt.x, pt.y);\n\t\n\tfor (var i = 1; i < n - 2; i++)\n\t{\n\t\tvar p0 = pts[i];\n\t\tvar p1 = pts[i + 1];\n\t\tvar ix = (p0.x + p1.x) / 2;\n\t\tvar iy = (p0.y + p1.y) / 2;\n\t\t\n\t\tc.quadTo(p0.x, p0.y, ix, iy);\n\t}\n\t\n\tvar p0 = pts[n - 2];\n\tvar p1 = pts[n - 1];\n\t\n\tc.quadTo(p0.x, p0.y, p1.x, p1.y);\n\tc.stroke();\n};\n\n__mxOutput.mxPolyline = typeof mxPolyline !== 'undefined' ? mxPolyline : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxArrow\n *\n * Extends <mxShape> to implement an arrow shape. (The shape\n * is used to represent edges, not vertices.)\n * This shape is registered under <mxConstants.SHAPE_ARROW>\n * in <mxCellRenderer>.\n * \n * Constructor: mxArrow\n *\n * Constructs a new arrow shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n * arrowWidth - Optional integer that defines the arrow width. Default is\n * <mxConstants.ARROW_WIDTH>. This is stored in <arrowWidth>.\n * spacing - Optional integer that defines the spacing between the arrow shape\n * and its endpoints. Default is <mxConstants.ARROW_SPACING>. This is stored in\n * <spacing>.\n * endSize - Optional integer that defines the size of the arrowhead. Default\n * is <mxConstants.ARROW_SIZE>. This is stored in <endSize>.\n */\nfunction mxArrow(points, fill, stroke, strokewidth, arrowWidth, spacing, endSize)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.arrowWidth = (arrowWidth != null) ? arrowWidth : mxConstants.ARROW_WIDTH;\n\tthis.spacing = (spacing != null) ? spacing : mxConstants.ARROW_SPACING;\n\tthis.endSize = (endSize != null) ? endSize : mxConstants.ARROW_SIZE;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxArrow, mxShape);\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the edge width and markers.\n */\nmxArrow.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\tvar w = Math.max(this.arrowWidth, this.endSize);\n\tbbox.grow((w / 2 + this.strokewidth) * this.scale);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrow.prototype.paintEdgeShape = function(c, pts)\n{\n\t// Geometry of arrow\n\tvar spacing =  mxConstants.ARROW_SPACING;\n\tvar width = mxConstants.ARROW_WIDTH;\n\tvar arrow = mxConstants.ARROW_SIZE;\n\n\t// Base vector (between end points)\n\tvar p0 = pts[0];\n\tvar pe = pts[pts.length - 1];\n\tvar dx = pe.x - p0.x;\n\tvar dy = pe.y - p0.y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\tvar length = dist - 2 * spacing - arrow;\n\t\n\t// Computes the norm and the inverse norm\n\tvar nx = dx / dist;\n\tvar ny = dy / dist;\n\tvar basex = length * nx;\n\tvar basey = length * ny;\n\tvar floorx = width * ny/3;\n\tvar floory = -width * nx/3;\n\t\n\t// Computes points\n\tvar p0x = p0.x - floorx / 2 + spacing * nx;\n\tvar p0y = p0.y - floory / 2 + spacing * ny;\n\tvar p1x = p0x + floorx;\n\tvar p1y = p0y + floory;\n\tvar p2x = p1x + basex;\n\tvar p2y = p1y + basey;\n\tvar p3x = p2x + floorx;\n\tvar p3y = p2y + floory;\n\t// p4 not necessary\n\tvar p5x = p3x - 3 * floorx;\n\tvar p5y = p3y - 3 * floory;\n\t\n\tc.begin();\n\tc.moveTo(p0x, p0y);\n\tc.lineTo(p1x, p1y);\n\tc.lineTo(p2x, p2y);\n\tc.lineTo(p3x, p3y);\n\tc.lineTo(pe.x - spacing * nx, pe.y - spacing * ny);\n\tc.lineTo(p5x, p5y);\n\tc.lineTo(p5x + floorx, p5y + floory);\n\tc.close();\n\n\tc.fillAndStroke();\n};\n\n__mxOutput.mxArrow = typeof mxArrow !== 'undefined' ? mxArrow : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxArrowConnector\n *\n * Extends <mxShape> to implement an new rounded arrow shape with support for\n * waypoints and double arrows. (The shape is used to represent edges, not\n * vertices.) This shape is registered under <mxConstants.SHAPE_ARROW_CONNECTOR>\n * in <mxCellRenderer>.\n * \n * Constructor: mxArrowConnector\n *\n * Constructs a new arrow shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n * arrowWidth - Optional integer that defines the arrow width. Default is\n * <mxConstants.ARROW_WIDTH>. This is stored in <arrowWidth>.\n * spacing - Optional integer that defines the spacing between the arrow shape\n * and its endpoints. Default is <mxConstants.ARROW_SPACING>. This is stored in\n * <spacing>.\n * endSize - Optional integer that defines the size of the arrowhead. Default\n * is <mxConstants.ARROW_SIZE>. This is stored in <endSize>.\n */\nfunction mxArrowConnector(points, fill, stroke, strokewidth, arrowWidth, spacing, endSize)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.arrowWidth = (arrowWidth != null) ? arrowWidth : mxConstants.ARROW_WIDTH;\n\tthis.arrowSpacing = (spacing != null) ? spacing : mxConstants.ARROW_SPACING;\n\tthis.startSize = mxConstants.ARROW_SIZE / 5;\n\tthis.endSize = mxConstants.ARROW_SIZE / 5;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxArrowConnector, mxShape);\n\n/**\n * Variable: useSvgBoundingBox\n * \n * Allows to use the SVG bounding box in SVG. Default is false for performance\n * reasons.\n */\nmxArrowConnector.prototype.useSvgBoundingBox = true;\n\n/**\n * Variable: resetStyles\n * \n * Overrides mxShape to reset spacing.\n */\nmxArrowConnector.prototype.resetStyles = function()\n{\n\tmxShape.prototype.resetStyles.apply(this, arguments);\n\t\n\tthis.arrowSpacing = mxConstants.ARROW_SPACING;\n};\n\n/**\n * Overrides apply to get smooth transition from default start- and endsize.\n */\nmxArrowConnector.prototype.apply = function(state)\n{\n\tmxShape.prototype.apply.apply(this, arguments);\n\n\tif (this.style != null)\n\t{\n\t\tthis.startSize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.ARROW_SIZE / 5) * 3;\n\t\tthis.endSize = mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, mxConstants.ARROW_SIZE / 5) * 3;\n\t}\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the edge width and markers.\n */\nmxArrowConnector.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\tvar w = this.getEdgeWidth();\n\t\n\tif (this.isMarkerStart())\n\t{\n\t\tw = Math.max(w, this.getStartArrowWidth());\n\t}\n\t\n\tif (this.isMarkerEnd())\n\t{\n\t\tw = Math.max(w, this.getEndArrowWidth());\n\t}\n\t\n\tbbox.grow((w / 2 + this.strokewidth) * this.scale);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrowConnector.prototype.paintEdgeShape = function(c, pts)\n{\n\t// Geometry of arrow\n\tvar strokeWidth = this.strokewidth;\n\t\n\tif (this.outline)\n\t{\n\t\tstrokeWidth = Math.max(1, mxUtils.getNumber(this.style, mxConstants.STYLE_STROKEWIDTH, this.strokewidth));\n\t}\n\t\n\tvar startWidth = this.getStartArrowWidth() + strokeWidth;\n\tvar endWidth = this.getEndArrowWidth() + strokeWidth;\n\tvar edgeWidth = this.outline ? this.getEdgeWidth() + strokeWidth : this.getEdgeWidth();\n\tvar openEnded = this.isOpenEnded();\n\tvar markerStart = this.isMarkerStart();\n\tvar markerEnd = this.isMarkerEnd();\n\tvar spacing = (openEnded) ? 0 : this.arrowSpacing + strokeWidth / 2;\n\tvar startSize = this.startSize + strokeWidth;\n\tvar endSize = this.endSize + strokeWidth;\n\tvar isRounded = this.isArrowRounded();\n\t\n\t// Base vector (between first points)\n\tvar pe = pts[pts.length - 1];\n\n\t// Finds first non-overlapping point\n\tvar i0 = 1;\n\t\n\twhile (i0 < pts.length - 1 && pts[i0].x == pts[0].x && pts[i0].y == pts[0].y)\n\t{\n\t\ti0++;\n\t}\n\t\n\tvar dx = pts[i0].x - pts[0].x;\n\tvar dy = pts[i0].y - pts[0].y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\n\tif (dist == 0)\n\t{\n\t\treturn;\n\t}\n\t\n\t// Computes the norm and the inverse norm\n\tvar nx = dx / dist;\n\tvar nx2, nx1 = nx;\n\tvar ny = dy / dist;\n\tvar ny2, ny1 = ny;\n\tvar orthx = edgeWidth * ny;\n\tvar orthy = -edgeWidth * nx;\n\t\n\t// Stores the inbound function calls in reverse order in fns\n\tvar fns = [];\n\t\n\tif (isRounded)\n\t{\n\t\tc.setLineJoin('round');\n\t}\n\telse if (pts.length > 2)\n\t{\n\t\t// Only mitre if there are waypoints\n\t\tc.setMiterLimit(1.42);\n\t}\n\n\tc.begin();\n\n\tvar startNx = nx;\n\tvar startNy = ny;\n\n\tif (markerStart && !openEnded)\n\t{\n\t\tthis.paintMarker(c, pts[0].x, pts[0].y, nx, ny, startSize, startWidth, edgeWidth, spacing, true);\n\t}\n\telse\n\t{\n\t\tvar outStartX = pts[0].x + orthx / 2 + spacing * nx;\n\t\tvar outStartY = pts[0].y + orthy / 2 + spacing * ny;\n\t\tvar inEndX = pts[0].x - orthx / 2 + spacing * nx;\n\t\tvar inEndY = pts[0].y - orthy / 2 + spacing * ny;\n\t\t\n\t\tif (openEnded)\n\t\t{\n\t\t\tc.moveTo(outStartX, outStartY);\n\t\t\t\n\t\t\tfns.push(function()\n\t\t\t{\n\t\t\t\tc.lineTo(inEndX, inEndY);\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(inEndX, inEndY);\n\t\t\tc.lineTo(outStartX, outStartY);\n\t\t}\n\t}\n\t\n\tvar dx1 = 0;\n\tvar dy1 = 0;\n\tvar dist1 = 0;\n\n\tfor (var i = 0; i < pts.length - 2; i++)\n\t{\n\t\t// Work out in which direction the line is bending\n\t\tvar pos = mxUtils.relativeCcw(pts[i].x, pts[i].y, pts[i+1].x, pts[i+1].y, pts[i+2].x, pts[i+2].y);\n\n\t\tdx1 = pts[i+2].x - pts[i+1].x;\n\t\tdy1 = pts[i+2].y - pts[i+1].y;\n\n\t\tdist1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n\t\t\n\t\tif (dist1 != 0)\n\t\t{\n\t\t\tnx1 = dx1 / dist1;\n\t\t\tny1 = dy1 / dist1;\n\t\t\t\n\t\t\tvar tmp1 = nx * nx1 + ny * ny1;\n\t\t\ttmp = Math.max(Math.sqrt((tmp1 + 1) / 2), 0.04);\n\t\t\t\n\t\t\t// Work out the normal orthogonal to the line through the control point and the edge sides intersection\n\t\t\tnx2 = (nx + nx1);\n\t\t\tny2 = (ny + ny1);\n\t\n\t\t\tvar dist2 = Math.sqrt(nx2 * nx2 + ny2 * ny2);\n\t\t\t\n\t\t\tif (dist2 != 0)\n\t\t\t{\n\t\t\t\tnx2 = nx2 / dist2;\n\t\t\t\tny2 = ny2 / dist2;\n\t\t\t\t\n\t\t\t\t// Higher strokewidths require a larger minimum bend, 0.35 covers all but the most extreme cases\n\t\t\t\tvar strokeWidthFactor = Math.max(tmp, Math.min(this.strokewidth / 200 + 0.04, 0.35));\n\t\t\t\tvar angleFactor = (pos != 0 && isRounded) ? Math.max(0.1, strokeWidthFactor) : Math.max(tmp, 0.06);\n\n\t\t\t\tvar outX = pts[i+1].x + ny2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar outY = pts[i+1].y - nx2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar inX = pts[i+1].x - ny2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar inY = pts[i+1].y + nx2 * edgeWidth / 2 / angleFactor;\n\t\t\t\t\n\t\t\t\tif (pos == 0 || !isRounded)\n\t\t\t\t{\n\t\t\t\t\t// If the two segments are aligned, or if we're not drawing curved sections between segments\n\t\t\t\t\t// just draw straight to the intersection point\n\t\t\t\t\tc.lineTo(outX, outY);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(x, y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\telse if (pos == -1)\n\t\t\t\t{\n\t\t\t\t\tvar c1x = inX + ny * edgeWidth;\n\t\t\t\t\tvar c1y = inY - nx * edgeWidth;\n\t\t\t\t\tvar c2x = inX + ny1 * edgeWidth;\n\t\t\t\t\tvar c2y = inY - nx1 * edgeWidth;\n\t\t\t\t\tc.lineTo(c1x, c1y);\n\t\t\t\t\tc.quadTo(outX, outY, c2x, c2y);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(x, y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tc.lineTo(outX, outY);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c1x = outX - ny * edgeWidth;\n\t\t\t\t\t\tvar c1y = outY + nx * edgeWidth;\n\t\t\t\t\t\tvar c2x = outX - ny1 * edgeWidth;\n\t\t\t\t\t\tvar c2y = outY + nx1 * edgeWidth;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.quadTo(x, y, c1x, c1y);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(c2x, c2y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnx = nx1;\n\t\t\t\tny = ny1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\torthx = edgeWidth * ny1;\n\torthy = - edgeWidth * nx1;\n\n\tif (markerEnd && !openEnded)\n\t{\n\t\tthis.paintMarker(c, pe.x, pe.y, -nx, -ny, endSize, endWidth, edgeWidth, spacing, false);\n\t}\n\telse\n\t{\n\t\tc.lineTo(pe.x - spacing * nx1 + orthx / 2, pe.y - spacing * ny1 + orthy / 2);\n\t\t\n\t\tvar inStartX = pe.x - spacing * nx1 - orthx / 2;\n\t\tvar inStartY = pe.y - spacing * ny1 - orthy / 2;\n\n\t\tif (!openEnded)\n\t\t{\n\t\t\tc.lineTo(inStartX, inStartY);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(inStartX, inStartY);\n\t\t\t\n\t\t\tfns.splice(0, 0, function()\n\t\t\t{\n\t\t\t\tc.moveTo(inStartX, inStartY);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tfor (var i = fns.length - 1; i >= 0; i--)\n\t{\n\t\tfns[i]();\n\t}\n\n\tif (openEnded)\n\t{\n\t\tc.end();\n\t\tc.stroke();\n\t}\n\telse\n\t{\n\t\tc.close();\n\t\tc.fillAndStroke();\n\t}\n\t\n\t// Workaround for shadow on top of base arrow\n\tc.setShadow(false);\n\t\n\t// Need to redraw the markers without the low miter limit\n\tc.setMiterLimit(4);\n\t\n\tif (isRounded)\n\t{\n\t\tc.setLineJoin('flat');\n\t}\n\n\tif (pts.length > 2)\n\t{\n\t\t// Only to repaint markers if no waypoints\n\t\t// Need to redraw the markers without the low miter limit\n\t\tc.setMiterLimit(4);\n\t\tif (markerStart && !openEnded)\n\t\t{\n\t\t\tc.begin();\n\t\t\tthis.paintMarker(c, pts[0].x, pts[0].y, startNx, startNy, startSize, startWidth, edgeWidth, spacing, true);\n\t\t\tc.stroke();\n\t\t\tc.end();\n\t\t}\n\t\t\n\t\tif (markerEnd && !openEnded)\n\t\t{\n\t\t\tc.begin();\n\t\t\tthis.paintMarker(c, pe.x, pe.y, -nx, -ny, endSize, endWidth, edgeWidth, spacing, true);\n\t\t\tc.stroke();\n\t\t\tc.end();\n\t\t}\n\t}\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrowConnector.prototype.paintMarker = function(c, ptX, ptY, nx, ny, size, arrowWidth, edgeWidth, spacing, initialMove)\n{\n\tvar widthArrowRatio = edgeWidth / arrowWidth;\n\tvar orthx = edgeWidth * ny / 2;\n\tvar orthy = -edgeWidth * nx / 2;\n\n\tvar spaceX = (spacing + size) * nx;\n\tvar spaceY = (spacing + size) * ny;\n\n\tif (initialMove)\n\t{\n\t\tc.moveTo(ptX - orthx + spaceX, ptY - orthy + spaceY);\n\t}\n\telse\n\t{\n\t\tc.lineTo(ptX - orthx + spaceX, ptY - orthy + spaceY);\n\t}\n\n\tc.lineTo(ptX - orthx / widthArrowRatio + spaceX, ptY - orthy / widthArrowRatio + spaceY);\n\tc.lineTo(ptX + spacing * nx, ptY + spacing * ny);\n\tc.lineTo(ptX + orthx / widthArrowRatio + spaceX, ptY + orthy / widthArrowRatio + spaceY);\n\tc.lineTo(ptX + orthx + spaceX, ptY + orthy + spaceY);\n}\n\n/**\n * Function: isArrowRounded\n * \n * Returns wether the arrow is rounded\n */\nmxArrowConnector.prototype.isArrowRounded = function()\n{\n\treturn this.isRounded;\n};\n\n/**\n * Function: getStartArrowWidth\n * \n * Returns the width of the start arrow\n */\nmxArrowConnector.prototype.getStartArrowWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH;\n};\n\n/**\n * Function: getEndArrowWidth\n * \n * Returns the width of the end arrow\n */\nmxArrowConnector.prototype.getEndArrowWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH;\n};\n\n/**\n * Function: getEdgeWidth\n * \n * Returns the width of the body of the edge\n */\nmxArrowConnector.prototype.getEdgeWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH / 3;\n};\n\n/**\n * Function: isOpenEnded\n * \n * Returns whether the ends of the shape are drawn\n */\nmxArrowConnector.prototype.isOpenEnded = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isMarkerStart\n * \n * Returns whether the start marker is drawn\n */\nmxArrowConnector.prototype.isMarkerStart = function()\n{\n\treturn (mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, mxConstants.NONE) != mxConstants.NONE);\n};\n\n/**\n * Function: isMarkerEnd\n * \n * Returns whether the end marker is drawn\n */\nmxArrowConnector.prototype.isMarkerEnd = function()\n{\n\treturn (mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, mxConstants.NONE) != mxConstants.NONE);\n};\n__mxOutput.mxArrowConnector = typeof mxArrowConnector !== 'undefined' ? mxArrowConnector : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxText\n *\n * Extends <mxShape> to implement a text shape. To change vertical text from\n * bottom to top to top to bottom, the following code can be used:\n * \n * (code)\n * mxText.prototype.verticalTextRotation = 90;\n * (end)\n * \n * Constructor: mxText\n *\n * Constructs a new text shape.\n * \n * Parameters:\n * \n * value - String that represents the text to be displayed. This is stored in\n * <value>.\n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * align - Specifies the horizontal alignment. Default is ''. This is stored in\n * <align>.\n * valign - Specifies the vertical alignment. Default is ''. This is stored in\n * <valign>.\n * color - String that specifies the text color. Default is 'black'. This is\n * stored in <color>.\n * family - String that specifies the font family. Default is\n * <mxConstants.DEFAULT_FONTFAMILY>. This is stored in <family>.\n * size - Integer that specifies the font size. Default is\n * <mxConstants.DEFAULT_FONTSIZE>. This is stored in <size>.\n * fontStyle - Specifies the font style. Default is 0. This is stored in\n * <fontStyle>.\n * spacing - Integer that specifies the global spacing. Default is 2. This is\n * stored in <spacing>.\n * spacingTop - Integer that specifies the top spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingTop>.\n * spacingRight - Integer that specifies the right spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingRight>.\n * spacingBottom - Integer that specifies the bottom spacing. Default is 0.The\n * sum of the spacing and this is stored in <spacingBottom>.\n * spacingLeft - Integer that specifies the left spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingLeft>.\n * horizontal - Boolean that specifies if the label is horizontal. Default is\n * true. This is stored in <horizontal>.\n * background - String that specifies the background color. Default is null.\n * This is stored in <background>.\n * border - String that specifies the label border color. Default is null.\n * This is stored in <border>.\n * wrap - Specifies if word-wrapping should be enabled. Default is false.\n * This is stored in <wrap>.\n * clipped - Specifies if the label should be clipped. Default is false.\n * This is stored in <clipped>.\n * overflow - Value of the overflow style. Default is 'visible'.\n */\nfunction mxText(value, bounds, align, valign, color,\n\tfamily,\tsize, fontStyle, spacing, spacingTop, spacingRight,\n\tspacingBottom, spacingLeft, horizontal, background, border,\n\twrap, clipped, overflow, labelPadding, textDirection)\n{\n\tmxShape.call(this);\n\tthis.value = value;\n\tthis.bounds = bounds;\n\tthis.color = (color != null) ? color : 'black';\n\tthis.align = (align != null) ? align : mxConstants.ALIGN_CENTER;\n\tthis.valign = (valign != null) ? valign : mxConstants.ALIGN_MIDDLE;\n\tthis.family = (family != null) ? family : mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = (size != null) ? size : mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = (fontStyle != null) ? fontStyle : mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = parseInt(spacing || 2);\n\tthis.spacingTop = this.spacing + parseInt(spacingTop || 0);\n\tthis.spacingRight = this.spacing + parseInt(spacingRight || 0);\n\tthis.spacingBottom = this.spacing + parseInt(spacingBottom || 0);\n\tthis.spacingLeft = this.spacing + parseInt(spacingLeft || 0);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.background = background;\n\tthis.border = border;\n\tthis.wrap = (wrap != null) ? wrap : false;\n\tthis.clipped = (clipped != null) ? clipped : false;\n\tthis.overflow = (overflow != null) ? overflow : 'visible';\n\tthis.labelPadding = (labelPadding != null) ? labelPadding : 0;\n\tthis.textDirection = textDirection;\n\tthis.rotation = 0;\n\tthis.updateMargin();\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxText, mxShape);\n\n/**\n * Variable: baseSpacingTop\n * \n * Specifies the spacing to be added to the top spacing. Default is 0. Use the\n * value 5 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingTop = 0;\n\n/**\n * Variable: baseSpacingBottom\n * \n * Specifies the spacing to be added to the bottom spacing. Default is 0. Use the\n * value 1 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingBottom = 0;\n\n/**\n * Variable: baseSpacingLeft\n * \n * Specifies the spacing to be added to the left spacing. Default is 0.\n */\nmxText.prototype.baseSpacingLeft = 0;\n\n/**\n * Variable: baseSpacingRight\n * \n * Specifies the spacing to be added to the right spacing. Default is 0.\n */\nmxText.prototype.baseSpacingRight = 0;\n\n/**\n * Variable: replaceLinefeeds\n * \n * Specifies if linefeeds in HTML labels should be replaced with BR tags.\n * Default is true.\n */\nmxText.prototype.replaceLinefeeds = true;\n\n/**\n * Variable: verticalTextRotation\n * \n * Rotation for vertical text. Default is -90 (bottom to top).\n */\nmxText.prototype.verticalTextRotation = -90;\n\n/**\n * Variable: ignoreClippedStringSize\n * \n * Specifies if the string size should be measured in <updateBoundingBox> if\n * the label is clipped and the label position is center and middle. If this is\n * true, then the bounding box will be set to <bounds>. Default is true.\n * <ignoreStringSize> has precedence over this switch.\n */\nmxText.prototype.ignoreClippedStringSize = true;\n\n/**\n * Variable: ignoreStringSize\n * \n * Specifies if the actual string size should be measured. If disabled the\n * boundingBox will not ignore the actual size of the string, otherwise\n * <bounds> will be used instead. Default is false.\n */\nmxText.prototype.ignoreStringSize = false;\n\n/**\n * Variable: textWidthPadding\n * \n * Specifies the padding to be added to the text width for the bounding box.\n * This is needed to make sure no clipping is applied to borders. Default is 4\n * for IE 8 standards mode and 3 for all others.\n */\nmxText.prototype.textWidthPadding = (document.documentMode == 8 && !mxClient.IS_EM) ? 4 : 3;\n\n/**\n * Variable: lastValue\n * \n * Contains the last rendered text value. Used for caching.\n */\nmxText.prototype.lastValue = null;\n\n/**\n * Variable: cacheEnabled\n * \n * Specifies if caching for HTML labels should be enabled. Default is true.\n */\nmxText.prototype.cacheEnabled = true;\n\n/**\n * Function: isParseVml\n * \n * Text shapes do not contain VML markup and do not need to be parsed. This\n * method returns false to speed up rendering in IE8.\n */\nmxText.prototype.isParseVml = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation returns\n * true if the browser is not in IE8 standards mode.\n */\nmxText.prototype.isHtmlAllowed = function()\n{\n\treturn document.documentMode != 8 || mxClient.IS_EM;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxText.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxText.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height));\n};\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxText.prototype.paint = function(c, update)\n{\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\n\tvar unscaledWidth = (this.state != null) ? this.state.unscaledWidth : null;\n\n\tif (update)\n\t{\n\t\tif (this.node.firstChild != null && (unscaledWidth == null ||\n\t\t\tthis.lastUnscaledWidth != unscaledWidth))\n\t\t{\n\t\t\tc.invalidateCachedOffsetSize(this.node);\n\t\t}\n\n\t\tc.updateText(x, y, w, h, this.align, this.valign, this.wrap, this.overflow,\n\t\t\t\tthis.clipped, this.getTextRotation(), this.node);\n\t}\n\telse\n\t{\n\t\t// Checks if text contains HTML markup\n\t\tvar realHtml = mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML;\n\t\t\n\t\t// Always renders labels as HTML in VML\n\t\tvar fmt = (realHtml || c instanceof mxVmlCanvas2D) ? 'html' : '';\n\t\tvar val = this.value;\n\t\t\n\t\tif (!realHtml && fmt == 'html')\n\t\t{\n\t\t\tval =  mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\tif (fmt == 'html' && !mxUtils.isNode(this.value))\n\t\t{\n\t\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\t\t\t\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = (!mxUtils.isNode(this.value) && this.replaceLinefeeds && fmt == 'html') ?\n\t\t\tval.replace(/\\n/g, '<br/>') : val;\n\t\t\t\n\t\tvar dir = this.textDirection;\n\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && !realHtml)\n\t\t{\n\t\t\tdir = this.getAutoDirection();\n\t\t}\n\t\t\n\t\tif (dir != mxConstants.TEXT_DIRECTION_LTR && dir != mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tdir = null;\n\t\t}\n\t\n\t\tc.text(x, y, w, h, val, this.align, this.valign, this.wrap, fmt, this.overflow,\n\t\t\tthis.clipped, this.getTextRotation(), dir);\n\t}\n\t\n\t// Needs to invalidate the cached offset widths if the geometry changes\n\tthis.lastUnscaledWidth = unscaledWidth;\n};\n\n/**\n * Function: redraw\n * \n * Renders the text using the given DOM nodes.\n */\nmxText.prototype.redraw = function()\n{\n\tif (this.visible && this.checkBounds() && this.cacheEnabled && this.lastValue == this.value &&\n\t\t(mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML))\n\t{\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\n\t\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t\t\t{\n\t\t\t\tthis.updateHtmlFilter();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.updateHtmlTransform();\n\t\t\t}\n\t\t\t\n\t\t\tthis.updateBoundingBox();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar canvas = this.createCanvas();\n\n\t\t\tif (canvas != null && canvas.updateText != null &&\n\t\t\t\tcanvas.invalidateCachedOffsetSize != null)\n\t\t\t{\n\t\t\t\tthis.paint(canvas, true);\n\t\t\t\tthis.destroyCanvas(canvas);\n\t\t\t\tthis.updateBoundingBox();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Fallback if canvas does not support updateText (VML)\n\t\t\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\n\t\tif (mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tthis.lastValue = this.value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.lastValue = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxText.prototype.resetStyles = function()\n{\n\tmxShape.prototype.resetStyles.apply(this, arguments);\n\t\n\tthis.color = 'black';\n\tthis.align = mxConstants.ALIGN_CENTER;\n\tthis.valign = mxConstants.ALIGN_MIDDLE;\n\tthis.family = mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = 2;\n\tthis.spacingTop = 2;\n\tthis.spacingRight = 2;\n\tthis.spacingBottom = 2;\n\tthis.spacingLeft = 2;\n\tthis.horizontal = true;\n\tdelete this.background;\n\tdelete this.border;\n\tthis.textDirection = mxConstants.DEFAULT_TEXT_DIRECTION;\n\tdelete this.margin;\n};\n\n/**\n * Function: apply\n * \n * Extends mxShape to update the text styles.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxText.prototype.apply = function(state)\n{\n\tvar old = this.spacing;\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.fontStyle = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSTYLE, this.fontStyle);\n\t\tthis.family = mxUtils.getValue(this.style, mxConstants.STYLE_FONTFAMILY, this.family);\n\t\tthis.size = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSIZE, this.size);\n\t\tthis.color = mxUtils.getValue(this.style, mxConstants.STYLE_FONTCOLOR, this.color);\n\t\tthis.align = mxUtils.getValue(this.style, mxConstants.STYLE_ALIGN, this.align);\n\t\tthis.valign = mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_ALIGN, this.valign);\n\t\tthis.spacing = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing));\n\t\tthis.spacingTop = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_TOP, this.spacingTop - old)) + this.spacing;\n\t\tthis.spacingRight = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_RIGHT, this.spacingRight - old)) + this.spacing;\n\t\tthis.spacingBottom = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_BOTTOM, this.spacingBottom - old)) + this.spacing;\n\t\tthis.spacingLeft = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_LEFT, this.spacingLeft - old)) + this.spacing;\n\t\tthis.horizontal = mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, this.horizontal);\n\t\tthis.background = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BACKGROUNDCOLOR, this.background);\n\t\tthis.border = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BORDERCOLOR, this.border);\n\t\tthis.textDirection = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_OPACITY, 100);\n\t\tthis.updateMargin();\n\t}\n\t\n\tthis.flipV = null;\n\tthis.flipH = null;\n};\n\n/**\n * Function: getAutoDirection\n * \n * Used to determine the automatic text direction. Returns\n * <mxConstants.TEXT_DIRECTION_LTR> or <mxConstants.TEXT_DIRECTION_RTL>\n * depending on the contents of <value>. This is not invoked for HTML, wrapped\n * content or if <value> is a DOM node.\n */\nmxText.prototype.getAutoDirection = function()\n{\n\t// Looks for strong (directional) characters\n\tvar tmp = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(this.value);\n\t\n\t// Returns the direction defined by the character\n\treturn (tmp != null && tmp.length > 0 && tmp[0] > 'z') ?\n\t\tmxConstants.TEXT_DIRECTION_RTL : mxConstants.TEXT_DIRECTION_LTR;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using the given node and position.\n */\nmxText.prototype.updateBoundingBox = function()\n{\n\tvar node = this.node;\n\tthis.boundingBox = this.bounds.clone();\n\tvar rot = this.getTextRotation();\n\t\n\tvar h = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER) : null;\n\tvar v = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE) : null;\n\n\tif (!this.ignoreStringSize && node != null && this.overflow != 'fill' && (!this.clipped ||\n\t\t!this.ignoreClippedStringSize || h != mxConstants.ALIGN_CENTER || v != mxConstants.ALIGN_MIDDLE))\n\t{\n\t\tvar ow = null;\n\t\tvar oh = null;\n\t\t\n\t\tif (node.ownerSVGElement != null)\n\t\t{\n\t\t\tif (node.firstChild != null && node.firstChild.firstChild != null &&\n\t\t\t\tnode.firstChild.firstChild.nodeName == 'foreignObject')\n\t\t\t{\n\t\t\t\tnode = node.firstChild.firstChild;\n\t\t\t\tow = parseInt(node.getAttribute('width')) * this.scale;\n\t\t\t\toh = parseInt(node.getAttribute('height')) * this.scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tvar b = node.getBBox();\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for bounding box of empty string\n\t\t\t\t\tif (typeof(this.value) == 'string' && mxUtils.trim(this.value) == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse if (b.width == 0 && b.height == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// Ignores NS_ERROR_FAILURE in FF if container display is none.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\n\t\t\t// Use cached offset size\n\t\t\tif (this.offsetWidth != null && this.offsetHeight != null)\n\t\t\t{\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Cannot get node size while container hidden so a\n\t\t\t\t// shared temporary DIV is used for text measuring\n\t\t\t\tif (td != null)\n\t\t\t\t{\n\t\t\t\t\tthis.updateFont(td);\n\t\t\t\t\tthis.updateSize(td, false);\n\t\t\t\t\tthis.updateInnerHtml(td);\n\n\t\t\t\t\tnode = td;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar sizeDiv = node;\n\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t\t{\n\t\t\t\t\tvar w = Math.round(this.bounds.width / this.scale);\n\t\n\t\t\t\t\tif (this.wrap && w > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\t\t\tnode.style.whiteSpace = 'normal';\n\n\t\t\t\t\t\tif (node.style.wordWrap != 'break-word')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Innermost DIV is used for measuring text\n\t\t\t\t\t\t\tvar divs = sizeDiv.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (divs.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsizeDiv = divs[divs.length - 1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tow = sizeDiv.offsetWidth + 2;\n\t\t\t\t\t\t\tdivs = this.node.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.clipped)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tow = Math.min(w, ow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Second last DIV width must be updated in DOM tree\n\t\t\t\t\t\t\tif (divs.length > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdivs[divs.length - 2].style.width = ow + 'px';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.whiteSpace = 'nowrap';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t}\n\n\t\t\t\tthis.offsetWidth = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\t\tthis.offsetHeight = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t}\n\n\t\tif (ow != null && oh != null)\n\t\t{\t\n\t\t\tthis.boundingBox = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y, ow, oh);\n\t\t}\n\t}\n\n\tif (this.boundingBox != null)\n\t{\n\t\tif (rot != 0)\n\t\t{\n\t\t\t// Accounts for pre-rotated x and y\n\t\t\tvar bbox = mxUtils.getBoundingBox(new mxRectangle(\n\t\t\t\tthis.margin.x * this.boundingBox.width,\n\t\t\t\tthis.margin.y * this.boundingBox.height,\n\t\t\t\tthis.boundingBox.width, this.boundingBox.height),\n\t\t\t\trot, new mxPoint(0, 0));\n\t\t\t\n\t\t\tthis.unrotatedBoundingBox = mxRectangle.fromRectangle(this.boundingBox);\n\t\t\tthis.unrotatedBoundingBox.x += this.margin.x * this.unrotatedBoundingBox.width;\n\t\t\tthis.unrotatedBoundingBox.y += this.margin.y * this.unrotatedBoundingBox.height;\n\t\t\t\n\t\t\tthis.boundingBox.x += bbox.x;\n\t\t\tthis.boundingBox.y += bbox.y;\n\t\t\tthis.boundingBox.width = bbox.width;\n\t\t\tthis.boundingBox.height = bbox.height;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.boundingBox.x += this.margin.x * this.boundingBox.width;\n\t\t\tthis.boundingBox.y += this.margin.y * this.boundingBox.height;\n\t\t\tthis.unrotatedBoundingBox = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns 0 to avoid using rotation in the canvas via updateTransform.\n */\nmxText.prototype.getShapeRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label of the corresponding shape.\n */\nmxText.prototype.getTextRotation = function()\n{\n\treturn (this.state != null && this.state.shape != null) ? this.state.shape.getTextRotation() : 0;\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Inverts the bounds if <mxShape.isBoundsInverted> returns true or if the\n * horizontal style is false.\n */\nmxText.prototype.isPaintBoundsInverted = function()\n{\n\treturn !this.horizontal && this.state != null && this.state.view.graph.model.isVertex(this.state.cell);\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxText.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tmxShape.prototype.configureCanvas.apply(this, arguments);\n\t\n\tc.setFontColor(this.color);\n\tc.setFontBackgroundColor(this.background);\n\tc.setFontBorderColor(this.border);\n\tc.setFontFamily(this.family);\n\tc.setFontSize(this.size);\n\tc.setFontStyle(this.fontStyle);\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Sets the width and height of the container to 1px.\n */\nmxText.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = '1px';\n\tthis.node.style.height = '1px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: redrawHtmlShape\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.redrawHtmlShape = function()\n{\n\tvar style = this.node.style;\n\n\t// Resets CSS styles\n\tstyle.whiteSpace = 'normal';\n\tstyle.overflow = '';\n\tstyle.width = '';\n\tstyle.height = '';\n\t\n\tthis.updateValue();\n\tthis.updateFont(this.node);\n\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\t\n\tthis.offsetWidth = null;\n\tthis.offsetHeight = null;\n\n\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t{\n\t\tthis.updateHtmlFilter();\n\t}\n\telse\n\t{\n\t\tthis.updateHtmlTransform();\n\t}\n};\n\n/**\n * Function: updateHtmlTransform\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateHtmlTransform = function()\n{\n\tvar theta = this.getTextRotation();\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\t\n\tif (theta != 0)\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', (-dx * 100) + '%' + ' ' + (-dy * 100) + '%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%)' +\n\t\t\t'scale(' + this.scale + ') rotate(' + theta + 'deg)');\n\t}\n\telse\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', '0% 0%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'scale(' + this.scale + ')' +\n\t\t\t'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%)');\n\t}\n\n\tstyle.left = Math.round(this.bounds.x - Math.ceil(dx * ((this.overflow != 'fill' &&\n\t\tthis.overflow != 'width') ? 3 : 1))) + 'px';\n\tstyle.top = Math.round(this.bounds.y - dy * ((this.overflow != 'fill') ? 3 : 1)) + 'px';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tstyle.opacity = this.opacity / 100;\n\t}\n\telse\n\t{\n\t\tstyle.opacity = '';\n\t}\n};\n\n/**\n * Function: setInnerHtml\n * \n * Sets the inner HTML of the given element to the <value>.\n */\nmxText.prototype.updateInnerHtml = function(elt)\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\telt.innerHTML = this.value.outerHTML;\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\t// LATER: Can be cached in updateValue\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div>&nbsp;</div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tval = '<div style=\"display:inline-block;_display:inline;\">' + val + '</div>';\n\t\t\n\t\telt.innerHTML = val;\n\t}\n};\n\n/**\n * Function: updateHtmlFilter\n *\n * Rotated text rendering quality is bad for IE9 quirks/IE8 standards\n */\nmxText.prototype.updateHtmlFilter = function()\n{\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\tvar s = this.scale;\n\t\n\t// Resets filter before getting offsetWidth\n\tmxUtils.setOpacity(this.node, this.opacity);\n\t\n\t// Adds 1 to match table height in 1.x\n\tvar ow = 0;\n\tvar oh = 0;\n\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\tvar sizeDiv = this.node;\n\t\n\t// Fallback for hidden text rendering in IE quirks mode\n\tif (td != null)\n\t{\n\t\ttd.style.overflow = '';\n\t\ttd.style.height = '';\n\t\ttd.style.width = '';\n\t\t\n\t\tthis.updateFont(td);\n\t\tthis.updateSize(td, false);\n\t\tthis.updateInnerHtml(td);\n\t\t\n\t\tvar w = Math.round(this.bounds.width / this.scale);\n\n\t\tif (this.wrap && w > 0)\n\t\t{\n\t\t\ttd.style.whiteSpace = 'normal';\n\t\t\ttd.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\tow = w;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\tow = Math.min(ow, this.bounds.width);\n\t\t\t}\n\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttd.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\tsizeDiv = td;\n\t\t\n\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t{\n\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\n\t\t\tif (this.wrap && td.style.wordWrap == 'break-word')\n\t\t\t{\n\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t}\n\t\t}\n\n\t\t// Required to update the height of the text box after wrapping width is known \n\t\tif (!this.clipped && this.wrap && w > 0)\n\t\t{\n\t\t\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\t\n\t\toh = sizeDiv.offsetHeight + 2;\n\t\t\n\t\tif (mxClient.IS_QUIRKS && this.border != null && this.border != mxConstants.NONE)\n\t\t{\n\t\t\toh += 3;\n\t\t}\n\t}\n\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t{\n\t\tsizeDiv = sizeDiv.firstChild;\n\t\toh = sizeDiv.offsetHeight;\n\t}\n\n\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\n\tif (this.clipped)\n\t{\n\t\toh = Math.min(oh, this.bounds.height);\n\t}\n\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\t// Handles special case for live preview with no wrapper DIV and no textDiv\n\tif (this.overflow == 'fill')\n\t{\n\t\toh = h;\n\t\tow = w;\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\toh = sizeDiv.scrollHeight;\n\t\tow = w;\n\t}\n\t\n\t// Stores for later use\n\tthis.offsetWidth = ow;\n\tthis.offsetHeight = oh;\n\t\n\t// Simulates max-height CSS in quirks mode\n\tif (mxClient.IS_QUIRKS && (this.clipped || (this.overflow == 'width' && h > 0)))\n\t{\n\t\th = Math.min(h, oh);\n\t\tstyle.height = Math.round(h) + 'px';\n\t}\n\telse\n\t{\n\t\th = oh;\n\t}\n\n\tif (this.overflow != 'fill' && this.overflow != 'width')\n\t{\n\t\tif (this.clipped)\n\t\t{\n\t\t\tow = Math.min(w, ow);\n\t\t}\n\t\t\n\t\tw = ow;\n\n\t\t// Simulates max-width CSS in quirks mode\n\t\tif ((mxClient.IS_QUIRKS && this.clipped) || this.wrap)\n\t\t{\n\t\t\tstyle.width = Math.round(w) + 'px';\n\t\t}\n\t}\n\n\th *= s;\n\tw *= s;\n\t\n\t// Rotation case is handled via VML canvas\n\tvar rad = this.getTextRotation() * (Math.PI / 180);\n\t\n\t// Precalculate cos and sin for the rotation\n\tvar real_cos = parseFloat(parseFloat(Math.cos(rad)).toFixed(8));\n\tvar real_sin = parseFloat(parseFloat(Math.sin(-rad)).toFixed(8));\n\n\trad %= 2 * Math.PI;\n\t\n\tif (rad < 0)\n\t{\n\t\trad += 2 * Math.PI;\n\t}\n\t\n\trad %= Math.PI;\n\t\n\tif (rad > Math.PI / 2)\n\t{\n\t\trad = Math.PI - rad;\n\t}\n\t\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(-rad);\n\n\tvar tx = w * -(dx + 0.5);\n\tvar ty = h * -(dy + 0.5);\n\n\tvar top_fix = (h - h * cos + w * sin) / 2 + real_sin * tx - real_cos * ty;\n\tvar left_fix = (w - w * cos + h * sin) / 2 - real_cos * tx - real_sin * ty;\n\t\n\tif (rad != 0)\n\t{\n\t\tvar f = 'progid:DXImageTransform.Microsoft.Matrix(M11=' + real_cos + ', M12='+\n\t\t\treal_sin + ', M21=' + (-real_sin) + ', M22=' + real_cos + ', sizingMethod=\\'auto expand\\')';\n\t\t\n\t\tif (style.filter != null && style.filter.length > 0)\n\t\t{\n\t\t\tstyle.filter += ' ' + f;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.filter = f;\n\t\t}\n\t}\n\t\n\t// Workaround for rendering offsets\n\tvar dy = 0;\n\t\n\tif (this.overflow != 'fill' && mxClient.IS_QUIRKS)\n\t{\n\t\tif (this.valign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tdy -= 1;\n\t\t}\n\t\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy += 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdy += 1;\n\t\t}\n\t}\n\n\tstyle.zoom = s;\n\tstyle.left = Math.round(this.bounds.x + left_fix - w / 2) + 'px';\n\tstyle.top = Math.round(this.bounds.y + top_fix - h / 2 + dy) + 'px';\n};\n\n/**\n * Function: updateValue\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateValue = function()\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\tthis.node.innerHTML = '';\n\t\tthis.node.appendChild(this.value);\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tvar bg = (this.background != null && this.background != mxConstants.NONE) ? this.background : null;\n\t\tvar bd = (this.border != null && this.border != mxConstants.NONE) ? this.border : null;\n\n\t\tif (this.overflow == 'fill' || this.overflow == 'width')\n\t\t{\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tthis.node.style.backgroundColor = bg;\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tthis.node.style.border = '1px solid ' + bd;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar css = '';\n\t\t\t\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tcss += 'background-color:' + bg + ';';\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tcss += 'border:1px solid ' + bd + ';';\n\t\t\t}\n\t\t\t\n\t\t\t// Wrapper DIV for background, zoom needed for inline in quirks\n\t\t\t// and to measure wrapped font sizes in all browsers\n\t\t\t// FIXME: Background size in quirks mode for wrapped text\n\t\t\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' :\n\t\t\t\tmxConstants.LINE_HEIGHT;\n\t\t\tval = '<div style=\"zoom:1;' + css + 'display:inline-block;_display:inline;text-decoration:inherit;' +\n\t\t\t\t'padding-bottom:1px;padding-right:1px;line-height:' + lh + '\">' + val + '</div>';\n\t\t}\n\n\t\tthis.node.innerHTML = val;\n\t\t\n\t\t// Sets text direction\n\t\tvar divs = this.node.getElementsByTagName('div');\n\t\t\n\t\tif (divs.length > 0)\n\t\t{\n\t\t\tvar dir = this.textDirection;\n\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t\t{\n\t\t\t\tdir = this.getAutoDirection();\n\t\t\t}\n\t\t\t\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].setAttribute('dir', dir);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].removeAttribute('dir');\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: updateFont\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateFont = function(node)\n{\n\tvar style = node.style;\n\t\n\tstyle.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\tstyle.fontSize = this.size + 'px';\n\tstyle.fontFamily = this.family;\n\tstyle.verticalAlign = 'top';\n\tstyle.color = this.color;\n\t\n\tif ((this.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle.fontWeight = 'bold';\n\t}\n\telse\n\t{\n\t\tstyle.fontWeight = '';\n\t}\n\n\tif ((this.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle.fontStyle = 'italic';\n\t}\n\telse\n\t{\n\t\tstyle.fontStyle = '';\n\t}\n\t\n\tif ((this.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle.textDecoration = 'underline';\n\t}\n\telse\n\t{\n\t\tstyle.textDecoration = '';\n\t}\n\t\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tstyle.textAlign = 'center';\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstyle.textAlign = 'right';\n\t}\n\telse\n\t{\n\t\tstyle.textAlign = 'left';\n\t}\n};\n\n/**\n * Function: updateSize\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateSize = function(node, enableWrap)\n{\n\tvar w = Math.max(0, Math.round(this.bounds.width / this.scale));\n\tvar h = Math.max(0, Math.round(this.bounds.height / this.scale));\n\tvar style = node.style;\n\t\n\t// NOTE: Do not use maxWidth here because wrapping will\n\t// go wrong if the cell is outside of the viewable area\n\tif (this.clipped)\n\t{\n\t\tstyle.overflow = 'hidden';\n\t\t\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tstyle.maxHeight = h + 'px';\n\t\t\tstyle.maxWidth = w + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.width = w + 'px';\n\t\t}\n\t}\n\telse if (this.overflow == 'fill')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.height = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.maxHeight = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\t\n\tif (this.wrap && w > 0)\n\t{\n\t\tstyle.wordWrap = mxConstants.WORD_WRAP;\n\t\tstyle.whiteSpace = 'normal';\n\t\tstyle.width = w + 'px';\n\n\t\tif (enableWrap && this.overflow != 'fill' && this.overflow != 'width')\n\t\t{\n\t\t\tvar sizeDiv = node;\n\t\t\t\n\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t{\n\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t\n\t\t\t\tif (node.style.wordWrap == 'break-word')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar tmp = sizeDiv.offsetWidth;\n\t\t\t\n\t\t\t// Workaround for text measuring in hidden containers\n\t\t\tif (tmp == 0)\n\t\t\t{\n\t\t\t\tvar prev = node.parentNode;\n\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\tdocument.body.appendChild(node);\n\t\t\t\ttmp = sizeDiv.offsetWidth;\n\t\t\t\tnode.style.visibility = '';\n\t\t\t\tprev.appendChild(node);\n\t\t\t}\n\n\t\t\ttmp += 3;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\ttmp = Math.min(tmp, w);\n\t\t\t}\n\t\t\t\n\t\t\tstyle.width = tmp + 'px';\n\t\t}\n\t}\n\telse\n\t{\n\t\tstyle.whiteSpace = 'nowrap';\n\t}\n};\n\n/**\n * Function: getMargin\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateMargin = function()\n{\n\tthis.margin = mxUtils.getAlignmentAsPoint(this.align, this.valign);\n};\n\n/**\n * Function: getSpacing\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.getSpacing = function()\n{\n\tvar dx = 0;\n\tvar dy = 0;\n\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tdx = (this.spacingLeft - this.spacingRight) / 2;\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tdx = -this.spacingRight - this.baseSpacingRight;\n\t}\n\telse\n\t{\n\t\tdx = this.spacingLeft + this.baseSpacingLeft;\n\t}\n\n\tif (this.valign == mxConstants.ALIGN_MIDDLE)\n\t{\n\t\tdy = (this.spacingTop - this.spacingBottom) / 2;\n\t}\n\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tdy = -this.spacingBottom - this.baseSpacingBottom;;\n\t}\n\telse\n\t{\n\t\tdy = this.spacingTop + this.baseSpacingTop;\n\t}\n\t\n\treturn new mxPoint(dx, dy);\n};\n\n__mxOutput.mxText = typeof mxText !== 'undefined' ? mxText : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxTriangle\n * \n * Implementation of the triangle shape.\n * \n * Constructor: mxTriangle\n *\n * Constructs a new triangle shape.\n */\nfunction mxTriangle()\n{\n\tmxActor.call(this);\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxTriangle, mxActor);\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxTriangle.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxTriangle.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tthis.addPoints(c, [new mxPoint(0, 0), new mxPoint(w, 0.5 * h), new mxPoint(0, h)], this.isRounded, arcSize, true);\n};\n\n__mxOutput.mxTriangle = typeof mxTriangle !== 'undefined' ? mxTriangle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHexagon\n * \n * Implementation of the hexagon shape.\n * \n * Constructor: mxHexagon\n *\n * Constructs a new hexagon shape.\n */\nfunction mxHexagon()\n{\n\tmxActor.call(this);\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxHexagon, mxActor);\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxHexagon.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tthis.addPoints(c, [new mxPoint(0.25 * w, 0), new mxPoint(0.75 * w, 0), new mxPoint(w, 0.5 * h), new mxPoint(0.75 * w, h),\n\t                   new mxPoint(0.25 * w, h), new mxPoint(0, 0.5 * h)], this.isRounded, arcSize, true);\n};\n\n__mxOutput.mxHexagon = typeof mxHexagon !== 'undefined' ? mxHexagon : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLine\n *\n * Extends <mxShape> to implement a horizontal line shape.\n * This shape is registered under <mxConstants.SHAPE_LINE> in\n * <mxCellRenderer>.\n * \n * Constructor: mxLine\n *\n * Constructs a new line shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * stroke - String that defines the stroke color. Default is 'black'. This is\n * stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxLine(bounds, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxLine, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxLine.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar mid = y + h / 2;\n\n\tc.begin();\n\tc.moveTo(x, mid);\n\tc.lineTo(x + w, mid);\n\tc.stroke();\n};\n\n__mxOutput.mxLine = typeof mxLine !== 'undefined' ? mxLine : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageShape\n *\n * Extends <mxShape> to implement an image shape. This shape is registered\n * under <mxConstants.SHAPE_IMAGE> in <mxCellRenderer>.\n * \n * Constructor: mxImageShape\n * \n * Constructs a new image shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * image - String that specifies the URL of the image. This is stored in\n * <image>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 0. This is stored in <strokewidth>.\n */\nfunction mxImageShape(bounds, image, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.image = image;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.shadow = false;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxImageShape, mxRectangleShape);\n\n/**\n * Variable: preserveImageAspect\n *\n * Switch to preserve image aspect. Default is true.\n */\nmxImageShape.prototype.preserveImageAspect = true;\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxImageShape.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: apply\n * \n * Overrides <mxShape.apply> to replace the fill and stroke colors with the\n * respective values from <mxConstants.STYLE_IMAGE_BACKGROUND> and\n * <mxConstants.STYLE_IMAGE_BORDER>.\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_IMAGE_BACKGROUND> => fill\n * - <mxConstants.STYLE_IMAGE_BORDER> => stroke\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxImageShape.prototype.apply = function(state)\n{\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tthis.fill = null;\n\tthis.stroke = null;\n\tthis.gradient = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.preserveImageAspect = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_ASPECT, 1) == 1;\n\t\t\n\t\t// Legacy support for imageFlipH/V\n\t\tthis.flipH = this.flipH || mxUtils.getValue(this.style, 'imageFlipH', 0) == 1;\n\t\tthis.flipV = this.flipV || mxUtils.getValue(this.style, 'imageFlipV', 0) == 1;\n\t}\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxImageShape.prototype.isHtmlAllowed = function()\n{\n\treturn !this.preserveImageAspect;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxImageShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\n\treturn node;\n};\n\n/**\n * Function: isRoundable\n * \n * Disables inherited roundable support.\n */\nmxImageShape.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn false;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic background painting implementation.\n */\nmxImageShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, null);\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (fill != null)\n\t\t{\n\t\t\t// Stroke rendering required for shadow\n\t\t\tc.setFillColor(fill);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.fillAndStroke();\n\t\t}\n\n\t\t// FlipH/V are implicit via mxShape.updateTransform\n\t\tc.image(x, y, w, h, this.image, this.preserveImageAspect, false, false);\n\t\t\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (stroke != null)\n\t\t{\n\t\t\tc.setShadow(false);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.stroke();\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxRectangleShape.prototype.paintBackground.apply(this, arguments);\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Overrides <mxShape.redraw> to preserve the aspect ratio of images.\n */\nmxImageShape.prototype.redrawHtmlShape = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = Math.max(0, Math.round(this.bounds.width)) + 'px';\n\tthis.node.style.height = Math.max(0, Math.round(this.bounds.height)) + 'px';\n\tthis.node.innerHTML = '';\n\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, '');\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, '');\n\t\tthis.node.style.backgroundColor = fill;\n\t\tthis.node.style.borderColor = stroke;\n\t\t\n\t\t// VML image supports PNG in IE6\n\t\tvar useVml = mxClient.IS_IE6 || ((document.documentMode == null || document.documentMode <= 8) && this.rotation != 0);\n\t\tvar img = document.createElement((useVml) ? mxClient.VML_PREFIX + ':image' : 'img');\n\t\timg.setAttribute('border', '0');\n\t\timg.style.position = 'absolute';\n\t\timg.src = this.image;\n\n\t\tvar filter = (this.opacity < 100) ? 'alpha(opacity=' + this.opacity + ')' : '';\n\t\tthis.node.style.filter = filter;\n\t\t\n\t\tif (this.flipH && this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2)';\n\t\t}\n\t\telse if (this.flipH)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(mirror=1)';\n\t\t}\n\t\telse if (this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)';\n\t\t}\n\n\t\tif (img.style.filter != filter)\n\t\t{\n\t\t\timg.style.filter = filter;\n\t\t}\n\n\t\tif (img.nodeName == 'image')\n\t\t{\n\t\t\timg.style.rotation = this.rotation;\n\t\t}\n\t\telse if (this.rotation != 0)\n\t\t{\n\t\t\t// LATER: Add flipV/H support\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', 'rotate(' + this.rotation + 'deg)');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', '');\n\t\t}\n\n\t\t// Known problem: IE clips top line of image for certain angles\n\t\timg.style.width = this.node.style.width;\n\t\timg.style.height = this.node.style.height;\n\t\t\n\t\tthis.node.style.backgroundImage = '';\n\t\tthis.node.appendChild(img);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(this.node);\n\t}\n};\n\n__mxOutput.mxImageShape = typeof mxImageShape !== 'undefined' ? mxImageShape : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLabel\n *\n * Extends <mxShape> to implement an image shape with a label.\n * This shape is registered under <mxConstants.SHAPE_LABEL> in\n * <mxCellRenderer>.\n * \n * Constructor: mxLabel\n *\n * Constructs a new label shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxLabel(bounds, fill, stroke, strokewidth)\n{\n\tmxRectangleShape.call(this, bounds, fill, stroke, strokewidth);\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxLabel, mxRectangleShape);\n\n/**\n * Variable: imageSize\n *\n * Default width and height for the image. Default is\n * <mxConstants.DEFAULT_IMAGESIZE>.\n */\nmxLabel.prototype.imageSize = mxConstants.DEFAULT_IMAGESIZE;\n\n/**\n * Variable: spacing\n *\n * Default value for image spacing. Default is 2.\n */\nmxLabel.prototype.spacing = 2;\n\n/**\n * Variable: indicatorSize\n *\n * Default width and height for the indicicator. Default is 10.\n */\nmxLabel.prototype.indicatorSize = 10;\n\n/**\n * Variable: indicatorSpacing\n *\n * Default spacing between image and indicator. Default is 2.\n */\nmxLabel.prototype.indicatorSpacing = 2;\n\n/**\n * Function: init\n *\n * Initializes the shape and the <indicator>.\n */\nmxLabel.prototype.init = function(container)\n{\n\tmxShape.prototype.init.apply(this, arguments);\n\n\tif (this.indicatorShape != null)\n\t{\n\t\tthis.indicator = new this.indicatorShape();\n\t\tthis.indicator.dialect = this.dialect;\n\t\tthis.indicator.init(this.node);\n\t}\n};\n\n/**\n * Function: redraw\n *\n * Reconfigures this shape. This will update the colors of the indicator\n * and reconfigure it if required.\n */\nmxLabel.prototype.redraw = function()\n{\n\tif (this.indicator != null)\n\t{\n\t\tthis.indicator.fill = this.indicatorColor;\n\t\tthis.indicator.stroke = this.indicatorStrokeColor;\n\t\tthis.indicator.gradient = this.indicatorGradientColor;\n\t\tthis.indicator.direction = this.indicatorDirection;\n\t}\n\t\n\tmxShape.prototype.redraw.apply(this, arguments);\n};\n\n/**\n * Function: isHtmlAllowed\n *\n * Returns true for non-rounded, non-rotated shapes with no glass gradient and\n * no indicator shape.\n */\nmxLabel.prototype.isHtmlAllowed = function()\n{\n\treturn mxRectangleShape.prototype.isHtmlAllowed.apply(this, arguments) &&\n\t\tthis.indicatorColor == null && this.indicatorShape == null;\n};\n\n/**\n * Function: paintForeground\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tthis.paintImage(c, x, y, w, h);\n\tthis.paintIndicator(c, x, y, w, h);\n\t\n\tmxRectangleShape.prototype.paintForeground.apply(this, arguments);\n};\n\n/**\n * Function: paintImage\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintImage = function(c, x, y, w, h)\n{\n\tif (this.image != null)\n\t{\n\t\tvar bounds = this.getImageBounds(x, y, w, h);\n\t\tc.image(bounds.x, bounds.y, bounds.width, bounds.height, this.image, false, false, false);\n\t}\n};\n\n/**\n * Function: getImageBounds\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.getImageBounds = function(x, y, w, h)\n{\n\tvar align = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_ALIGN, mxConstants.ALIGN_LEFT);\n\tvar valign = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE);\n\tvar width = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_WIDTH, mxConstants.DEFAULT_IMAGESIZE);\n\tvar height = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_HEIGHT, mxConstants.DEFAULT_IMAGESIZE);\n\tvar spacing = mxUtils.getNumber(this.style, mxConstants.STYLE_SPACING, this.spacing) + 5;\n\n\tif (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tx += (w - width) / 2;\n\t}\n\telse if (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tx += w - width - spacing;\n\t}\n\telse // default is left\n\t{\n\t\tx += spacing;\n\t}\n\n\tif (valign == mxConstants.ALIGN_TOP)\n\t{\n\t\ty += spacing;\n\t}\n\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\ty += h - height - spacing;\n\t}\n\telse // default is middle\n\t{\n\t\ty += (h - height) / 2;\n\t}\n\t\n\treturn new mxRectangle(x, y, width, height);\n};\n\n/**\n * Function: paintIndicator\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintIndicator = function(c, x, y, w, h)\n{\n\tif (this.indicator != null)\n\t{\n\t\tthis.indicator.bounds = this.getIndicatorBounds(x, y, w, h);\n\t\tthis.indicator.paint(c);\n\t}\n\telse if (this.indicatorImage != null)\n\t{\n\t\tvar bounds = this.getIndicatorBounds(x, y, w, h);\n\t\tc.image(bounds.x, bounds.y, bounds.width, bounds.height, this.indicatorImage, false, false, false);\n\t}\n};\n\n/**\n * Function: getIndicatorBounds\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.getIndicatorBounds = function(x, y, w, h)\n{\n\tvar align = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_ALIGN, mxConstants.ALIGN_LEFT);\n\tvar valign = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE);\n\tvar width = mxUtils.getNumber(this.style, mxConstants.STYLE_INDICATOR_WIDTH, this.indicatorSize);\n\tvar height = mxUtils.getNumber(this.style, mxConstants.STYLE_INDICATOR_HEIGHT, this.indicatorSize);\n\tvar spacing = this.spacing + 5;\t\t\n\t\n\tif (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tx += w - width - spacing;\n\t}\n\telse if (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tx += (w - width) / 2;\n\t}\n\telse // default is left\n\t{\n\t\tx += spacing;\n\t}\n\t\n\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\ty += h - height - spacing;\n\t}\n\telse if (valign == mxConstants.ALIGN_TOP)\n\t{\n\t\ty += spacing;\n\t}\n\telse // default is middle\n\t{\n\t\ty += (h - height) / 2;\n\t}\n\t\n\treturn new mxRectangle(x, y, width, height);\n};\n/**\n * Function: redrawHtmlShape\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.redrawHtmlShape = function()\n{\n\tmxRectangleShape.prototype.redrawHtmlShape.apply(this, arguments);\n\t\n\t// Removes all children\n\twhile(this.node.hasChildNodes())\n\t{\n\t\tthis.node.removeChild(this.node.lastChild);\n\t}\n\t\n\tif (this.image != null)\n\t{\n\t\tvar node = document.createElement('img');\n\t\tnode.style.position = 'relative';\n\t\tnode.setAttribute('border', '0');\n\t\t\n\t\tvar bounds = this.getImageBounds(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height);\n\t\tbounds.x -= this.bounds.x;\n\t\tbounds.y -= this.bounds.y;\n\n\t\tnode.style.left = Math.round(bounds.x) + 'px';\n\t\tnode.style.top = Math.round(bounds.y) + 'px';\n\t\tnode.style.width = Math.round(bounds.width) + 'px';\n\t\tnode.style.height = Math.round(bounds.height) + 'px';\n\t\t\n\t\tnode.src = this.image;\n\t\t\n\t\tthis.node.appendChild(node);\n\t}\n};\n\n__mxOutput.mxLabel = typeof mxLabel !== 'undefined' ? mxLabel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCylinder\n *\n * Extends <mxShape> to implement an cylinder shape. If a\n * custom shape with one filled area and an overlay path is\n * needed, then this shape's <redrawPath> should be overridden.\n * This shape is registered under <mxConstants.SHAPE_CYLINDER>\n * in <mxCellRenderer>.\n * \n * Constructor: mxCylinder\n *\n * Constructs a new cylinder shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxCylinder(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxCylinder, mxShape);\n\n/**\n * Variable: maxHeight\n *\n * Defines the maximum height of the top and bottom part\n * of the cylinder shape.\n */\nmxCylinder.prototype.maxHeight = 40;\n\n/**\n * Variable: svgStrokeTolerance\n *\n * Sets stroke tolerance to 0 for SVG.\n */\nmxCylinder.prototype.svgStrokeTolerance = 0;\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxCylinder.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.translate(x, y);\n\tc.begin();\n\tthis.redrawPath(c, x, y, w, h, false);\n\tc.fillAndStroke();\n\t\n\tif (!this.outline || this.style == null || mxUtils.getValue(\n\t\tthis.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0)\n\t{\n\t\tc.setShadow(false);\n\t\tc.begin();\n\t\tthis.redrawPath(c, x, y, w, h, true);\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCylinder.prototype.getCylinderSize = function(x, y, w, h)\n{\n\treturn Math.min(this.maxHeight, Math.round(h / 5));\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCylinder.prototype.redrawPath = function(c, x, y, w, h, isForeground)\n{\n\tvar dy = this.getCylinderSize(x, y, w, h);\n\t\n\tif ((isForeground && this.fill != null) || (!isForeground && this.fill == null))\n\t{\n\t\tc.moveTo(0, dy);\n\t\tc.curveTo(0, 2 * dy, w, 2 * dy, w, dy);\n\t\t\n\t\t// Needs separate shapes for correct hit-detection\n\t\tif (!isForeground)\n\t\t{\n\t\t\tc.stroke();\n\t\t\tc.begin();\n\t\t}\n\t}\n\t\n\tif (!isForeground)\n\t{\n\t\tc.moveTo(0, dy);\n\t\tc.curveTo(0, -dy / 3, w, -dy / 3, w, dy);\n\t\tc.lineTo(w, h - dy);\n\t\tc.curveTo(w, h + dy / 3, 0, h + dy / 3, 0, h - dy);\n\t\tc.close();\n\t}\n};\n\n__mxOutput.mxCylinder = typeof mxCylinder !== 'undefined' ? mxCylinder : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConnector\n * \n * Extends <mxShape> to implement a connector shape. The connector\n * shape allows for arrow heads on either side.\n * \n * This shape is registered under <mxConstants.SHAPE_CONNECTOR> in\n * <mxCellRenderer>.\n * \n * Constructor: mxConnector\n * \n * Constructs a new connector shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * Default is 'black'.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxConnector(points, stroke, strokewidth)\n{\n\tmxPolyline.call(this, points, stroke, strokewidth);\n};\n\n/**\n * Extends mxPolyline.\n */\nmxUtils.extend(mxConnector, mxPolyline);\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using <createBoundingBox> and\n * <augmentBoundingBox> and stores the result in <boundingBox>.\n */\nmxConnector.prototype.updateBoundingBox = function()\n{\n\tthis.useSvgBoundingBox = this.style != null && this.style[mxConstants.STYLE_CURVED] == 1;\n\tmxShape.prototype.updateBoundingBox.apply(this, arguments);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxConnector.prototype.paintEdgeShape = function(c, pts)\n{\n\t// The indirection via functions for markers is needed in\n\t// order to apply the offsets before painting the line and\n\t// paint the markers after painting the line.\n\tvar sourceMarker = this.createMarker(c, pts, true);\n\tvar targetMarker = this.createMarker(c, pts, false);\n\n\tmxPolyline.prototype.paintEdgeShape.apply(this, arguments);\n\t\n\t// Disables shadows, dashed styles and fixes fill color for markers\n\tc.setFillColor(this.stroke);\n\tc.setShadow(false);\n\tc.setDashed(false);\n\t\n\tif (sourceMarker != null)\n\t{\n\t\tsourceMarker();\n\t}\n\t\n\tif (targetMarker != null)\n\t{\n\t\ttargetMarker();\n\t}\n};\n\n/**\n * Function: createMarker\n * \n * Prepares the marker by adding offsets in pts and returning a function to\n * paint the marker.\n */\nmxConnector.prototype.createMarker = function(c, pts, source)\n{\n\tvar result = null;\n\tvar n = pts.length;\n\tvar type = mxUtils.getValue(this.style, (source) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW);\n\tvar p0 = (source) ? pts[1] : pts[n - 2];\n\tvar pe = (source) ? pts[0] : pts[n - 1];\n\t\n\tif (type != null && p0 != null && pe != null)\n\t{\n\t\tvar count = 1;\n\t\t\n\t\t// Uses next non-overlapping point\n\t\twhile (count < n - 1 && Math.round(p0.x - pe.x) == 0 && Math.round(p0.y - pe.y) == 0)\n\t\t{\n\t\t\tp0 = (source) ? pts[1 + count] : pts[n - 2 - count];\n\t\t\tcount++;\n\t\t}\n\t\n\t\t// Computes the norm and the inverse norm\n\t\tvar dx = pe.x - p0.x;\n\t\tvar dy = pe.y - p0.y;\n\t\n\t\tvar dist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n\t\t\n\t\tvar unitX = dx / dist;\n\t\tvar unitY = dy / dist;\n\t\n\t\tvar size = mxUtils.getNumber(this.style, (source) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE);\n\t\t\n\t\t// Allow for stroke width in the end point used and the \n\t\t// orthogonal vectors describing the direction of the marker\n\t\tvar filled = this.style[(source) ? mxConstants.STYLE_STARTFILL : mxConstants.STYLE_ENDFILL] != 0;\n\t\t\n\t\tresult = mxMarker.createMarker(c, this, type, pe, unitX, unitY, size, source, this.strokewidth, filled);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the strokewidth and shadow offsets.\n */\nmxConnector.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\t// Adds marker sizes\n\tvar size = 0;\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, mxConstants.NONE) != mxConstants.NONE)\n\t{\n\t\tsize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_MARKERSIZE) + 1;\n\t}\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, mxConstants.NONE) != mxConstants.NONE)\n\t{\n\t\tsize = Math.max(size, mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE)) + 1;\n\t}\n\t\n\tbbox.grow(size * this.scale);\n};\n\n__mxOutput.mxConnector = typeof mxConnector !== 'undefined' ? mxConnector : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlane\n *\n * Extends <mxShape> to implement a swimlane shape. This shape is registered\n * under <mxConstants.SHAPE_SWIMLANE> in <mxCellRenderer>. Use the\n * <mxConstants.STYLE_STYLE_STARTSIZE> to define the size of the title\n * region, <mxConstants.STYLE_SWIMLANE_FILLCOLOR> for the content area fill,\n * <mxConstants.STYLE_SEPARATORCOLOR> to draw an additional vertical separator\n * and <mxConstants.STYLE_SWIMLANE_LINE> to hide the line between the title\n * region and the content area. The <mxConstants.STYLE_HORIZONTAL> affects\n * the orientation of this shape, not only its label.\n * \n * Constructor: mxSwimlane\n *\n * Constructs a new swimlane shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxSwimlane(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxSwimlane, mxShape);\n\n/**\n * Variable: imageSize\n *\n * Default imagewidth and imageheight if an image but no imagewidth\n * and imageheight are defined in the style. Value is 16.\n */\nmxSwimlane.prototype.imageSize = 16;\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxSwimlane.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn true;\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getTitleSize = function()\n{\n\treturn Math.max(0, mxUtils.getValue(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE));\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getLabelBounds = function(rect)\n{\n\tvar start = this.getTitleSize();\n\tvar bounds = new mxRectangle(rect.x, rect.y, rect.width, rect.height);\n\tvar horizontal = this.isHorizontal();\n\t\n\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\n\t// East is default\n\tvar shapeVertical = (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n\tvar realHorizontal = horizontal == !shapeVertical;\n\t\n\tvar realFlipH = !realHorizontal && flipH != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\tvar realFlipV = realHorizontal && flipV != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\n\t// Shape is horizontal\n\tif (!shapeVertical)\n\t{\n\t\tvar tmp = Math.min(bounds.height, start * this.scale);\n\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.y += bounds.height - tmp;\n\t\t}\n\n\t\tbounds.height = tmp;\n\t}\n\telse\n\t{\n\t\tvar tmp = Math.min(bounds.width, start * this.scale);\n\t\t\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.x += bounds.width - tmp;\t\n\t\t}\n\n\t\tbounds.width = tmp;\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t\treturn new mxRectangle(x, y, w, start);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t\treturn new mxRectangle(x, y, start, h);\n\t}\n};\n\n/**\n * Function: getArcSize\n * \n * Returns the arcsize for the swimlane.\n */\nmxSwimlane.prototype.getArcSize = function(w, h, start)\n{\n\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\n\treturn start * f * 3; \n};\n\n/**\n * Function: paintVertexShape\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.isHorizontal = function()\n{\n\treturn mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) == 1;\n};\n\n/**\n * Function: paintVertexShape\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_FILLCOLOR, mxConstants.NONE);\n\tvar swimlaneLine = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_LINE, 1) == 1;\n\tvar r = 0;\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t}\n\t\n\tc.translate(x, y);\n\t\n\tif (!this.isRounded)\n\t{\n\t\tthis.paintSwimlane(c, x, y, w, h, start, fill, swimlaneLine);\n\t}\n\telse\n\t{\n\t\tr = this.getArcSize(w, h, start);\n\t\tr = Math.min(((this.isHorizontal()) ? h : w) - start, Math.min(start, r));\n\t\tthis.paintRoundedSwimlane(c, x, y, w, h, start, r, fill, swimlaneLine);\n\t}\n\t\n\tvar sep = mxUtils.getValue(this.style, mxConstants.STYLE_SEPARATORCOLOR, mxConstants.NONE);\n\tthis.paintSeparator(c, x, y, w, h, start, sep);\n\n\tif (this.image != null)\n\t{\n\t\tvar bounds = this.getImageBounds(x, y, w, h);\n\t\tc.image(bounds.x - x, bounds.y - y, bounds.width, bounds.height,\n\t\t\t\tthis.image, false, false, false);\n\t}\n\t\n\tif (this.glass)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintGlassEffect(c, 0, 0, w, start, r);\n\t}\n};\n\n/**\n * Function: paintSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintSwimlane = function(c, x, y, w, h, start, fill, swimlaneLine)\n{\n\tc.begin();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(w, 0);\n\t\tc.lineTo(w, start);\n\t\tc.fillAndStroke();\n\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(0, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(start, h);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintRoundedSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintRoundedSwimlane = function(c, x, y, w, h, start, r, fill, swimlaneLine)\n{\n\tc.begin();\n\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(w, start);\n\t\tc.lineTo(w, r);\n\t\tc.quadTo(w, 0, w - Math.min(w / 2, r), 0);\n\t\tc.lineTo(Math.min(w / 2, r), 0);\n\t\tc.quadTo(0, 0, 0, r);\n\t\tc.lineTo(0, start);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h - r);\n\t\t\tc.quadTo(0, h, Math.min(w / 2, r), h);\n\t\t\tc.lineTo(w - Math.min(w / 2, r), h);\n\t\t\tc.quadTo(w, h, w, h - r);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(r, 0);\n\t\tc.quadTo(0, 0, 0, Math.min(h / 2, r));\n\t\tc.lineTo(0, h - Math.min(h / 2, r));\n\t\tc.quadTo(0, h, r, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, h);\n\t\t\tc.lineTo(w - r, h);\n\t\t\tc.quadTo(w, h, w, h - Math.min(h / 2, r));\n\t\t\tc.lineTo(w, Math.min(h / 2, r));\n\t\t\tc.quadTo(w, 0, w - r, 0);\n\t\t\tc.lineTo(start, 0);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintDivider\n *\n * Paints the divider between swimlane title and content area.\n */\nmxSwimlane.prototype.paintDivider = function(c, x, y, w, h, start, shadow)\n{\n\tif (!shadow)\n\t{\n\t\tc.setShadow(false);\n\t}\n\n\tc.begin();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(w, start);\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(start, h);\n\t}\n\n\tc.stroke();\n};\n\n/**\n * Function: paintSeparator\n *\n * Paints the vertical or horizontal separator line between swimlanes.\n */\nmxSwimlane.prototype.paintSeparator = function(c, x, y, w, h, start, color)\n{\n\tif (color != mxConstants.NONE)\n\t{\n\t\tc.setStrokeColor(color);\n\t\tc.setDashed(true);\n\t\tc.begin();\n\t\t\n\t\tif (this.isHorizontal())\n\t\t{\n\t\t\tc.moveTo(w, start);\n\t\t\tc.lineTo(w, h);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t}\n\t\t\n\t\tc.stroke();\n\t\tc.setDashed(false);\n\t}\n};\n\n/**\n * Function: getImageBounds\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.getImageBounds = function(x, y, w, h)\n{\n\tif (this.isHorizontal())\n\t{\n\t\treturn new mxRectangle(x + w - this.imageSize, y, this.imageSize, this.imageSize);\n\t}\n\telse\n\t{\n\t\treturn new mxRectangle(x, y, this.imageSize, this.imageSize);\n\t}\n};\n\n__mxOutput.mxSwimlane = typeof mxSwimlane !== 'undefined' ? mxSwimlane : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxGraphLayout\n * \n * Base class for all layout algorithms in mxGraph. Main public functions are\n * <move> for handling a moved cell within a layouted parent, and <execute> for\n * running the layout on a given parent cell.\n *\n * Known Subclasses:\n *\n * <mxCircleLayout>, <mxCompactTreeLayout>, <mxCompositeLayout>,\n * <mxFastOrganicLayout>, <mxParallelEdgeLayout>, <mxPartitionLayout>,\n * <mxStackLayout>\n * \n * Constructor: mxGraphLayout\n *\n * Constructs a new layout using the given layouts.\n *\n * Arguments:\n * \n * graph - Enclosing \n */\nfunction mxGraphLayout(graph)\n{\n\tthis.graph = graph;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphLayout.prototype.graph = null;\n\n/**\n * Variable: useBoundingBox\n *\n * Boolean indicating if the bounding box of the label should be used if\n * its available. Default is true.\n */\nmxGraphLayout.prototype.useBoundingBox = true;\n\n/**\n * Variable: parent\n *\n * The parent cell of the layout, if any\n */\nmxGraphLayout.prototype.parent = null;\n\n/**\n * Function: moveCell\n * \n * Notified when a cell is being moved in a parent that has automatic\n * layout to update the cell state (eg. index) so that the outcome of the\n * layout will position the vertex as close to the point (x, y) as\n * possible.\n * \n * Empty implementation.\n * \n * Parameters:\n * \n * cell - <mxCell> which has been moved.\n * x - X-coordinate of the new cell location.\n * y - Y-coordinate of the new cell location.\n */\nmxGraphLayout.prototype.moveCell = function(cell, x, y) { };\n\n/**\n * Function: execute\n * \n * Executes the layout algorithm for the children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be layed out.\n */\nmxGraphLayout.prototype.execute = function(parent) { };\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this layout operates on.\n */\nmxGraphLayout.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: getConstraint\n * \n * Returns the constraint for the given key and cell. The optional edge and\n * source arguments are used to return inbound and outgoing routing-\n * constraints for the given edge and vertex. This implementation always\n * returns the value for the given key in the style of the given cell.\n * \n * Parameters:\n * \n * key - Key of the constraint to be returned.\n * cell - <mxCell> whose constraint should be returned.\n * edge - Optional <mxCell> that represents the connection whose constraint\n * should be returned. Default is null.\n * source - Optional boolean that specifies if the connection is incoming\n * or outgoing. Default is null.\n */\nmxGraphLayout.prototype.getConstraint = function(key, cell, edge, source)\n{\n\tvar state = this.graph.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.graph.getCellStyle(cell);\n\t\n\treturn (style != null) ? style[key] : null;\n};\n\n/**\n * Function: traverse\n * \n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Example:\n * \n * (code)\n * mxLog.show();\n * var cell = graph.getSelectionCell();\n * graph.traverse(cell, false, function(vertex, edge)\n * {\n *   mxLog.debug(graph.getLabel(vertex));\n * });\n * (end)\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - Optional boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * func - Visitor function that takes the current vertex and the incoming\n * edge as arguments. The traversal stops if the function returns false.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * visited - Optional <mxDictionary> of cell paths for the visited cells.\n */\nmxGraphLayout.traverse = function(vertex, directed, func, edge, visited)\n{\n\tif (func != null && vertex != null)\n\t{\n\t\tdirected = (directed != null) ? directed : true;\n\t\tvisited = visited || new mxDictionary();\n\t\t\n\t\tif (!visited.get(vertex))\n\t\t{\n\t\t\tvisited.put(vertex, true);\n\t\t\tvar result = func(vertex, edge);\n\t\t\t\n\t\t\tif (result == null || result)\n\t\t\t{\n\t\t\t\tvar edgeCount = this.graph.model.getEdgeCount(vertex);\n\t\t\t\t\n\t\t\t\tif (edgeCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar e = this.graph.model.getEdgeAt(vertex, i);\n\t\t\t\t\t\tvar isSource = this.graph.model.getTerminal(e, true) == vertex;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (!directed || isSource)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar next = this.graph.view.getVisibleTerminal(e, !isSource);\n\t\t\t\t\t\t\tthis.traverse(next, directed, func, e, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isAncestor\n * \n * Returns true if the given parent is an ancestor of the given child.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent.\n * child - <mxCell> that specifies the child.\n * traverseAncestors - boolean whether to \n */\nmxGraphLayout.prototype.isAncestor = function(parent, child, traverseAncestors)\n{\n\tif (!traverseAncestors)\n\t{\n\t\treturn (this.graph.model.getParent(child) == parent);\n\t}\t\n\t\n\tif (child == parent)\n\t{\n\t\treturn false;\n\t}\n\n\twhile (child != null && child != parent)\n\t{\n\t\tchild = this.graph.model.getParent(child);\n\t}\n\t\n\treturn child == parent;\n};\n\n/**\n * Function: isVertexMovable\n * \n * Returns a boolean indicating if the given <mxCell> is movable or\n * bendable by the algorithm. This implementation returns true if the given\n * cell is movable in the graph.\n * \n * Parameters:\n * \n * cell - <mxCell> whose movable state should be returned.\n */\nmxGraphLayout.prototype.isVertexMovable = function(cell)\n{\n\treturn this.graph.isCellMovable(cell);\n};\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored by\n * the algorithm. This implementation returns false for all vertices.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxGraphLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn !this.graph.getModel().isVertex(vertex) ||\n\t\t!this.graph.isCellVisible(vertex);\n};\n\n/**\n * Function: isEdgeIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored by\n * the algorithm. This implementation returns false for all vertices.\n * \n * Parameters:\n * \n * cell - <mxCell> whose ignored state should be returned.\n */\nmxGraphLayout.prototype.isEdgeIgnored = function(edge)\n{\n\tvar model = this.graph.getModel();\n\t\n\treturn !model.isEdge(edge) ||\n\t\t!this.graph.isCellVisible(edge) ||\n\t\tmodel.getTerminal(edge, true) == null ||\n\t\tmodel.getTerminal(edge, false) == null;\n};\n\n/**\n * Function: setEdgeStyleEnabled\n * \n * Disables or enables the edge style of the given edge.\n */\nmxGraphLayout.prototype.setEdgeStyleEnabled = function(edge, value)\n{\n\tthis.graph.setCellStyles(mxConstants.STYLE_NOEDGESTYLE,\n\t\t\t(value) ? '0' : '1', [edge]);\n};\n\n/**\n * Function: setOrthogonalEdge\n * \n * Disables or enables orthogonal end segments of the given edge.\n */\nmxGraphLayout.prototype.setOrthogonalEdge = function(edge, value)\n{\n\tthis.graph.setCellStyles(mxConstants.STYLE_ORTHOGONAL,\n\t\t\t(value) ? '1' : '0', [edge]);\n};\n\n/**\n * Function: getParentOffset\n * \n * Determines the offset of the given parent to the parent\n * of the layout\n */\nmxGraphLayout.prototype.getParentOffset = function(parent)\n{\n\tvar result = new mxPoint();\n\n\tif (parent != null && parent != this.parent)\n\t{\n\t\tvar model = this.graph.getModel();\n\n\t\tif (model.isAncestor(this.parent, parent))\n\t\t{\n\t\t\tvar parentGeo = model.getGeometry(parent);\n\n\t\t\twhile (parent != this.parent)\n\t\t\t{\n\t\t\t\tresult.x = result.x + parentGeo.x;\n\t\t\t\tresult.y = result.y + parentGeo.y;\n\n\t\t\t\tparent = model.getParent(parent);;\n\t\t\t\tparentGeo = model.getGeometry(parent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: setEdgePoints\n * \n * Replaces the array of mxPoints in the geometry of the given edge\n * with the given array of mxPoints.\n */\nmxGraphLayout.prototype.setEdgePoints = function(edge, points)\n{\n\tif (edge != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar geometry = model.getGeometry(edge);\n\n\t\tif (geometry == null)\n\t\t{\n\t\t\tgeometry = new mxGeometry();\n\t\t\tgeometry.setRelative(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeometry = geometry.clone();\n\t\t}\n\n\t\tif (this.parent != null && points != null)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\n\t\t\tvar parentOffset = this.getParentOffset(parent);\n\n\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t{\n\t\t\t\tpoints[i].x = points[i].x - parentOffset.x;\n\t\t\t\tpoints[i].y = points[i].y - parentOffset.y;\n\t\t\t}\n\t\t}\n\n\t\tgeometry.points = points;\n\t\tmodel.setGeometry(edge, geometry);\n\t}\n};\n\n/**\n * Function: setVertexLocation\n * \n * Sets the new position of the given cell taking into account the size of\n * the bounding box if <useBoundingBox> is true. The change is only carried\n * out if the new location is not equal to the existing location, otherwise\n * the geometry is not replaced with an updated instance. The new or old\n * bounds are returned (including overlapping labels).\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry is to be set.\n * x - Integer that defines the x-coordinate of the new location.\n * y - Integer that defines the y-coordinate of the new location.\n */\nmxGraphLayout.prototype.setVertexLocation = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(cell);\n\tvar result = null;\n\t\n\tif (geometry != null)\n\t{\n\t\tresult = new mxRectangle(x, y, geometry.width, geometry.height);\n\t\t\n\t\t// Checks for oversize labels and shifts the result\n\t\t// TODO: Use mxUtils.getStringSize for label bounds\n\t\tif (this.useBoundingBox)\n\t\t{\n\t\t\tvar state = this.graph.getView().getState(cell);\n\t\t\t\n\t\t\tif (state != null && state.text != null && state.text.boundingBox != null)\n\t\t\t{\n\t\t\t\tvar scale = this.graph.getView().scale;\n\t\t\t\tvar box = state.text.boundingBox;\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.x < state.x)\n\t\t\t\t{\n\t\t\t\t\tx += (state.x - box.x) / scale;\n\t\t\t\t\tresult.width = box.width;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.y < state.y)\n\t\t\t\t{\n\t\t\t\t\ty += (state.y - box.y) / scale;\n\t\t\t\t\tresult.height = box.height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.parent != null)\n\t\t{\n\t\t\tvar parent = model.getParent(cell);\n\n\t\t\tif (parent != null && parent != this.parent)\n\t\t\t{\n\t\t\t\tvar parentOffset = this.getParentOffset(parent);\n\n\t\t\t\tx = x - parentOffset.x;\n\t\t\t\ty = y - parentOffset.y;\n\t\t\t}\n\t\t}\n\n\t\tif (geometry.x != x || geometry.y != y)\n\t\t{\n\t\t\tgeometry = geometry.clone();\n\t\t\tgeometry.x = x;\n\t\t\tgeometry.y = y;\n\t\t\t\n\t\t\tmodel.setGeometry(cell, geometry);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getVertexBounds\n * \n * Returns an <mxRectangle> that defines the bounds of the given cell or\n * the bounding box if <useBoundingBox> is true.\n */\nmxGraphLayout.prototype.getVertexBounds = function(cell)\n{\n\tvar geo = this.graph.getModel().getGeometry(cell);\n\n\t// Checks for oversize label bounding box and corrects\n\t// the return value accordingly\n\t// TODO: Use mxUtils.getStringSize for label bounds\n\tif (this.useBoundingBox)\n\t{\n\t\tvar state = this.graph.getView().getState(cell);\n\n\t\tif (state != null && state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tvar scale = this.graph.getView().scale;\n\t\t\tvar tmp = state.text.boundingBox;\n\n\t\t\tvar dx0 = Math.max(state.x - tmp.x, 0) / scale;\n\t\t\tvar dy0 = Math.max(state.y - tmp.y, 0) / scale;\n\t\t\tvar dx1 = Math.max((tmp.x + tmp.width) - (state.x + state.width), 0) / scale;\n  \t\t\tvar dy1 = Math.max((tmp.y + tmp.height) - (state.y + state.height), 0) / scale;\n\n\t\t\tgeo = new mxRectangle(geo.x - dx0, geo.y - dy0, geo.width + dx0 + dx1, geo.height + dy0 + dy1);\n\t\t}\n\t}\n\n\tif (this.parent != null)\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\tgeo = geo.clone();\n\n\t\tif (parent != null && parent != this.parent)\n\t\t{\n\t\t\tvar parentOffset = this.getParentOffset(parent);\n\t\t\tgeo.x = geo.x + parentOffset.x;\n\t\t\tgeo.y = geo.y + parentOffset.y;\n\t\t}\n\t}\n\n\treturn new mxRectangle(geo.x, geo.y, geo.width, geo.height);\n};\n\n/**\n * Function: arrangeGroups\n * \n * Shortcut to <mxGraph.updateGroupBounds> with moveGroup set to true.\n */\nmxGraphLayout.prototype.arrangeGroups = function(cells, border, topBorder, rightBorder, bottomBorder, leftBorder)\n{\n\treturn this.graph.updateGroupBounds(cells, border, true, topBorder, rightBorder, bottomBorder, leftBorder);\n};\n\n/**\n * Class: WeightedCellSorter\n * \n * A utility class used to track cells whilst sorting occurs on the weighted\n * sum of their connected edges. Does not violate (x.compareTo(y)==0) ==\n * (x.equals(y))\n *\n * Constructor: WeightedCellSorter\n * \n * Constructs a new weighted cell sorted for the given cell and weight.\n */\nfunction WeightedCellSorter(cell, weightedValue)\n{\n\tthis.cell = cell;\n\tthis.weightedValue = weightedValue;\n};\n\n/**\n * Variable: weightedValue\n * \n * The weighted value of the cell stored.\n */\nWeightedCellSorter.prototype.weightedValue = 0;\n\n/**\n * Variable: nudge\n * \n * Whether or not to flip equal weight values.\n */\nWeightedCellSorter.prototype.nudge = false;\n\n/**\n * Variable: visited\n * \n * Whether or not this cell has been visited in the current assignment.\n */\nWeightedCellSorter.prototype.visited = false;\n\n/**\n * Variable: rankIndex\n * \n * The index this cell is in the model rank.\n */\nWeightedCellSorter.prototype.rankIndex = null;\n\n/**\n * Variable: cell\n * \n * The cell whose median value is being calculated.\n */\nWeightedCellSorter.prototype.cell = null;\n\n/**\n * Function: compare\n * \n * Compares two WeightedCellSorters.\n */\nWeightedCellSorter.prototype.compare = function(a, b)\n{\n\tif (a != null && b != null)\n\t{\n\t\tif (b.weightedValue > a.weightedValue)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t\telse if (b.weightedValue < a.weightedValue)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b.nudge)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n\n__mxOutput.mxGraphLayout = typeof mxGraphLayout !== 'undefined' ? mxGraphLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStackLayout\n * \n * Extends <mxGraphLayout> to create a horizontal or vertical stack of the\n * child vertices. The children do not need to be connected for this layout\n * to work.\n * \n * Example:\n * \n * (code)\n * var layout = new mxStackLayout(graph, true);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxStackLayout\n * \n * Constructs a new stack layout layout for the specified graph,\n * spacing, orientation and offset.\n */\nfunction mxStackLayout(graph, horizontal, spacing, x0, y0, border)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.spacing = (spacing != null) ? spacing : 0;\n\tthis.x0 = (x0 != null) ? x0 : 0;\n\tthis.y0 = (y0 != null) ? y0 : 0;\n\tthis.border = (border != null) ? border : 0;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxStackLayout.prototype = new mxGraphLayout();\nmxStackLayout.prototype.constructor = mxStackLayout;\n\n/**\n * Variable: horizontal\n *\n * Specifies the orientation of the layout. Default is true.\n */\nmxStackLayout.prototype.horizontal = null;\n\n/**\n * Variable: spacing\n *\n * Specifies the spacing between the cells. Default is 0.\n */\nmxStackLayout.prototype.spacing = null;\n\n/**\n * Variable: x0\n *\n * Specifies the horizontal origin of the layout. Default is 0.\n */\nmxStackLayout.prototype.x0 = null;\n\n/**\n * Variable: y0\n *\n * Specifies the vertical origin of the layout. Default is 0.\n */\nmxStackLayout.prototype.y0 = null;\n\n/**\n * Variable: border\n *\n * Border to be added if fill is true. Default is 0.\n */\nmxStackLayout.prototype.border = 0;\n\n/**\n * Variable: marginTop\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginTop = 0;\n\n/**\n * Variable: marginLeft\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginLeft = 0;\n\n/**\n * Variable: marginRight\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginRight = 0;\n\n/**\n * Variable: marginBottom\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginBottom = 0;\n\n/**\n * Variable: keepFirstLocation\n * \n * Boolean indicating if the location of the first cell should be\n * kept, that is, it will not be moved to x0 or y0.\n */\nmxStackLayout.prototype.keepFirstLocation = false;\n\n/**\n * Variable: fill\n * \n * Boolean indicating if dimension should be changed to fill out the parent\n * cell. Default is false.\n */\nmxStackLayout.prototype.fill = false;\n\t\n/**\n * Variable: resizeParent\n * \n * If the parent should be resized to match the width/height of the\n * stack. Default is false.\n */\nmxStackLayout.prototype.resizeParent = false;\n\n/**\n * Variable: resizeParentMax\n * \n * Use maximum of existing value and new value for resize of parent.\n * Default is false.\n */\nmxStackLayout.prototype.resizeParentMax = false;\n\n/**\n * Variable: resizeLast\n * \n * If the last element should be resized to fill out the parent. Default is\n * false. If <resizeParent> is true then this is ignored.\n */\nmxStackLayout.prototype.resizeLast = false;\n\n/**\n * Variable: wrap\n * \n * Value at which a new column or row should be created. Default is null.\n */\nmxStackLayout.prototype.wrap = null;\n\n/**\n * Variable: borderCollapse\n * \n * If the strokeWidth should be ignored. Default is true.\n */\nmxStackLayout.prototype.borderCollapse = true;\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxStackLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell>.\n */\nmxStackLayout.prototype.moveCell = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(cell);\n\tvar horizontal = this.isHorizontal();\n\t\n\tif (cell != null && parent != null)\n\t{\n\t\tvar i = 0;\n\t\tvar last = 0;\n\t\tvar childCount = model.getChildCount(parent);\n\t\tvar value = (horizontal) ? x : y;\n\t\tvar pstate = this.graph.getView().getState(parent);\n\n\t\tif (pstate != null)\n\t\t{\n\t\t\tvalue -= (horizontal) ? pstate.x : pstate.y;\n\t\t}\n\t\t\n\t\tvalue /= this.graph.view.scale;\n\t\t\n\t\tfor (i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (child != cell)\n\t\t\t{\n\t\t\t\tvar bounds = model.getGeometry(child);\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = (horizontal) ?\n\t\t\t\t\t\tbounds.x + bounds.width / 2 :\n\t\t\t\t\t\tbounds.y + bounds.height / 2;\n\t\t\t\t\t\n\t\t\t\t\tif (last <= value && tmp > value)\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlast = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Changes child order in parent\n\t\tvar idx = parent.getIndex(cell);\n\t\tidx = Math.max(0, i - ((i > idx) ? 1 : 0));\n\n\t\tmodel.add(parent, cell, idx);\n\t}\n};\n\n/**\n * Function: getParentSize\n * \n * Returns the size for the parent container or the size of the graph\n * container if the parent is a layer or the root of the model.\n */\nmxStackLayout.prototype.getParentSize = function(parent)\n{\n\tvar model = this.graph.getModel();\t\t\t\n\tvar pgeo = model.getGeometry(parent);\n\t\n\t// Handles special case where the parent is either a layer with no\n\t// geometry or the current root of the view in which case the size\n\t// of the graph's container will be used.\n\tif (this.graph.container != null && ((pgeo == null &&\n\t\tmodel.isLayer(parent)) || parent == this.graph.getView().currentRoot))\n\t{\n\t\tvar width = this.graph.container.offsetWidth - 1;\n\t\tvar height = this.graph.container.offsetHeight - 1;\n\t\tpgeo = new mxRectangle(0, 0, width, height);\n\t}\n\t\n\treturn pgeo;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.execute = function(parent)\n{\n\tif (parent != null)\n\t{\n\t\tvar pgeo = this.getParentSize(parent);\n\t\tvar horizontal = this.isHorizontal();\n\t\tvar model = this.graph.getModel();\t\n\t\tvar fillValue = null;\n\t\t\n\t\tif (pgeo != null)\n\t\t{\n\t\t\tfillValue = (horizontal) ? pgeo.height - this.marginTop - this.marginBottom :\n\t\t\t\tpgeo.width - this.marginLeft - this.marginRight;\n\t\t}\n\t\t\n\t\tfillValue -= 2 * this.border;\n\t\tvar x0 = this.x0 + this.border + this.marginLeft;\n\t\tvar y0 = this.y0 + this.border + this.marginTop;\n\t\t\n\t\t// Handles swimlane start size\n\t\tif (this.graph.isSwimlane(parent))\n\t\t{\n\t\t\t// Uses computed style to get latest \n\t\t\tvar style = this.graph.getCellStyle(parent);\n\t\t\tvar start = mxUtils.getNumber(style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE);\n\t\t\tvar horz = mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true) == 1;\n\n\t\t\tif (pgeo != null)\n\t\t\t{\n\t\t\t\tif (horz)\n\t\t\t\t{\n\t\t\t\t\tstart = Math.min(start, pgeo.height);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstart = Math.min(start, pgeo.width);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (horizontal == horz)\n\t\t\t{\n\t\t\t\tfillValue -= start;\n\t\t\t}\n\n\t\t\tif (horz)\n\t\t\t{\n\t\t\t\ty0 += start;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx0 += start;\n\t\t\t}\n\t\t}\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar tmp = 0;\n\t\t\tvar last = null;\n\t\t\tvar lastValue = 0;\n\t\t\tvar lastChild = null;\n\t\t\tvar childCount = model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\t\n\t\t\t\tif (!this.isVertexIgnored(child) && this.isVertexMovable(child))\n\t\t\t\t{\n\t\t\t\t\tvar geo = model.getGeometry(child);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.wrap != null && last != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ((horizontal && last.x + last.width +\n\t\t\t\t\t\t\t\tgeo.width + 2 * this.spacing > this.wrap) ||\n\t\t\t\t\t\t\t\t(!horizontal && last.y + last.height +\n\t\t\t\t\t\t\t\tgeo.height + 2 * this.spacing > this.wrap))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ty0 += tmp + this.spacing;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tx0 += tmp + this.spacing;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttmp = 0;\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\ttmp = Math.max(tmp, (horizontal) ? geo.height : geo.width);\n\t\t\t\t\t\tvar sw = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!this.borderCollapse)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar childStyle = this.graph.getCellStyle(child);\n\t\t\t\t\t\t\tsw = mxUtils.getNumber(childStyle, mxConstants.STYLE_STROKEWIDTH, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (last != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x = lastValue + this.spacing + Math.floor(sw / 2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y = lastValue + this.spacing + Math.floor(sw / 2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (!this.keepFirstLocation)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y = y0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.y = y0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.fill && fillValue != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.height = fillValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.width = fillValue;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.setChildGeometry(child, geo);\n\t\t\t\t\t\tlastChild = child;\n\t\t\t\t\t\tlast = geo;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlastValue = last.x + last.width + Math.floor(sw / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlastValue = last.y + last.height + Math.floor(sw / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.resizeParent && pgeo != null && last != null && !this.graph.isCellCollapsed(parent))\n\t\t\t{\n\t\t\t\tthis.updateParentGeometry(parent, pgeo, last);\n\t\t\t}\n\t\t\telse if (this.resizeLast && pgeo != null && last != null && lastChild != null)\n\t\t\t{\n\t\t\t\tif (horizontal)\n\t\t\t\t{\n\t\t\t\t\tlast.width = pgeo.width - last.x - this.spacing - this.marginRight - this.marginLeft;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlast.height = pgeo.height - last.y - this.spacing - this.marginBottom;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.setChildGeometry(lastChild, last);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.setChildGeometry = function(child, geo)\n{\n\tvar geo2 = this.graph.getCellGeometry(child);\n\t\n\tif (geo2 == null || geo.x != geo2.x || geo.y != geo2.y ||\n\t\tgeo.width != geo2.width || geo.height != geo2.height)\n\t{\n\t\tthis.graph.getModel().setGeometry(child, geo);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.updateParentGeometry = function(parent, pgeo, last)\n{\n\tvar horizontal = this.isHorizontal();\n\tvar model = this.graph.getModel();\t\n\n\tvar pgeo2 = pgeo.clone();\n\t\n\tif (horizontal)\n\t{\n\t\tvar tmp = last.x + last.width + this.marginRight + this.border;\n\t\t\n\t\tif (this.resizeParentMax)\n\t\t{\n\t\t\tpgeo2.width = Math.max(pgeo2.width, tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpgeo2.width = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar tmp = last.y + last.height + this.marginBottom + this.border;\n\t\t\n\t\tif (this.resizeParentMax)\n\t\t{\n\t\t\tpgeo2.height = Math.max(pgeo2.height, tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpgeo2.height = tmp;\n\t\t}\n\t}\n\t\n\tif (pgeo.x != pgeo2.x || pgeo.y != pgeo2.y ||\n\t\tpgeo.width != pgeo2.width || pgeo.height != pgeo2.height)\n\t{\n\t\tmodel.setGeometry(parent, pgeo2);\n\t}\n};\n\n__mxOutput.mxStackLayout = typeof mxStackLayout !== 'undefined' ? mxStackLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPartitionLayout\n * \n * Extends <mxGraphLayout> for partitioning the parent cell vertically or\n * horizontally by filling the complete area with the child cells. A horizontal\n * layout partitions the height of the given parent whereas a a non-horizontal\n * layout partitions the width. If the parent is a layer (that is, a child of\n * the root node), then the current graph size is partitioned. The children do\n * not need to be connected for this layout to work.\n * \n * Example:\n * \n * (code)\n * var layout = new mxPartitionLayout(graph, true, 10, 20);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxPartitionLayout\n * \n * Constructs a new stack layout layout for the specified graph,\n * spacing, orientation and offset.\n */\nfunction mxPartitionLayout(graph, horizontal, spacing, border)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.spacing = spacing || 0;\n\tthis.border = border || 0;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxPartitionLayout.prototype = new mxGraphLayout();\nmxPartitionLayout.prototype.constructor = mxPartitionLayout;\n\n/**\n * Variable: horizontal\n * \n * Boolean indicating the direction in which the space is partitioned.\n * Default is true.\n */\nmxPartitionLayout.prototype.horizontal = null;\n\n/**\n * Variable: spacing\n * \n * Integer that specifies the absolute spacing in pixels between the\n * children. Default is 0.\n */\nmxPartitionLayout.prototype.spacing = null;\n\n/**\n * Variable: border\n * \n * Integer that specifies the absolute inset in pixels for the parent that\n * contains the children. Default is 0.\n */\nmxPartitionLayout.prototype.border = null;\n\n/**\n * Variable: resizeVertices\n * \n * Boolean that specifies if vertices should be resized. Default is true.\n */\nmxPartitionLayout.prototype.resizeVertices = true;\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxPartitionLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell>.\n */\nmxPartitionLayout.prototype.moveCell = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(cell);\n\t\n\tif (cell != null &&\n\t\tparent != null)\n\t{\n\t\tvar i = 0;\n\t\tvar last = 0;\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\t// Finds index of the closest swimlane\n\t\t// TODO: Take into account the orientation\n\t\tfor (i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\tvar bounds = this.getVertexBounds(child);\n\t\t\t\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tvar tmp = bounds.x + bounds.width / 2;\n\t\t\t\t\n\t\t\t\tif (last < x && tmp > x)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlast = tmp;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Changes child order in parent\n\t\tvar idx = parent.getIndex(cell);\n\t\tidx = Math.max(0, i - ((i > idx) ? 1 : 0));\n\t\t\n\t\tmodel.add(parent, cell, idx);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>. All children where <isVertexIgnored>\n * returns false and <isVertexMovable> returns true are modified.\n */\nmxPartitionLayout.prototype.execute = function(parent)\n{\n\tvar horizontal = this.isHorizontal();\n\tvar model = this.graph.getModel();\n\tvar pgeo = model.getGeometry(parent);\n\t\n\t// Handles special case where the parent is either a layer with no\n\t// geometry or the current root of the view in which case the size\n\t// of the graph's container will be used.\n\tif (this.graph.container != null &&\n\t\t((pgeo == null &&\n\t\tmodel.isLayer(parent)) ||\n\t\tparent == this.graph.getView().currentRoot))\n\t{\n\t\tvar width = this.graph.container.offsetWidth - 1;\n\t\tvar height = this.graph.container.offsetHeight - 1;\n\t\tpgeo = new mxRectangle(0, 0, width, height);\n\t}\n\n\tif (pgeo != null)\n\t{\n\t\tvar children = [];\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (!this.isVertexIgnored(child) &&\n\t\t\t\tthis.isVertexMovable(child))\n\t\t\t{\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar n = children.length;\n\n\t\tif (n > 0)\n\t\t{\n\t\t\tvar x0 = this.border;\n\t\t\tvar y0 = this.border;\n\t\t\tvar other = (horizontal) ? pgeo.height : pgeo.width;\n\t\t\tother -= 2 * this.border;\n\n\t\t\tvar size = (this.graph.isSwimlane(parent)) ?\n\t\t\t\tthis.graph.getStartSize(parent) :\n\t\t\t\tnew mxRectangle();\n\n\t\t\tother -= (horizontal) ? size.height : size.width;\n\t\t\tx0 = x0 + size.width;\n\t\t\ty0 = y0 + size.height;\n\n\t\t\tvar tmp = this.border + (n - 1) * this.spacing;\n\t\t\tvar value = (horizontal) ?\n\t\t\t\t((pgeo.width - x0 - tmp) / n) :\n\t\t\t\t((pgeo.height - y0 - tmp) / n);\n\t\t\t\n\t\t\t// Avoids negative values, that is values where the sum of the\n\t\t\t// spacing plus the border is larger then the available space\n\t\t\tif (value > 0)\n\t\t\t{\n\t\t\t\tmodel.beginUpdate();\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < n; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\tvar geo = model.getGeometry(child);\n\t\t\t\t\t\n\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t\t\tgeo.y = y0;\n\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (this.resizeVertices)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.width = value;\n\t\t\t\t\t\t\t\t\tgeo.height = other;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tx0 += value + this.spacing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (this.resizeVertices)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.height = value;\n\t\t\t\t\t\t\t\t\tgeo.width = other;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ty0 += value + this.spacing;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmodel.setGeometry(child, geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfinally\n\t\t\t\t{\n\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n__mxOutput.mxPartitionLayout = typeof mxPartitionLayout !== 'undefined' ? mxPartitionLayout : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxCompactTreeLayout\n * \n * Extends <mxGraphLayout> to implement a compact tree (Moen) algorithm. This\n * layout is suitable for graphs that have no cycles (trees). Vertices that are\n * not connected to the tree will be ignored by this layout.\n * \n * Example:\n * \n * (code)\n * var layout = new mxCompactTreeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new compact tree layout for the specified graph\n * and orientation.\n */\nfunction mxCompactTreeLayout(graph, horizontal, invert)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.invert = (invert != null) ? invert : false;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCompactTreeLayout.prototype = new mxGraphLayout();\nmxCompactTreeLayout.prototype.constructor = mxCompactTreeLayout;\n\n/**\n * Variable: horizontal\n *\n * Specifies the orientation of the layout. Default is true.\n */\nmxCompactTreeLayout.prototype.horizontal = null;\t \n\n/**\n * Variable: invert\n *\n * Specifies if edge directions should be inverted. Default is false.\n */\nmxCompactTreeLayout.prototype.invert = null;\t \n\n/**\n * Variable: resizeParent\n * \n * If the parents should be resized to match the width/height of the\n * children. Default is true.\n */\nmxCompactTreeLayout.prototype.resizeParent = true;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxCompactTreeLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: groupPadding\n * \n * Padding added to resized parents. Default is 10.\n */\nmxCompactTreeLayout.prototype.groupPadding = 10;\n\n/**\n * Variable: groupPaddingTop\n * \n * Top padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingTop = 0;\n\n/**\n * Variable: groupPaddingRight\n * \n * Right padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingRight = 0;\n\n/**\n * Variable: groupPaddingBottom\n * \n * Bottom padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingBottom = 0;\n\n/**\n * Variable: groupPaddingLeft\n * \n * Left padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingLeft = 0;\n\n/**\n * Variable: parentsChanged\n *\n * A set of the parents that need updating based on children\n * process as part of the layout.\n */\nmxCompactTreeLayout.prototype.parentsChanged = null;\n\n/**\n * Variable: moveTree\n * \n * Specifies if the tree should be moved to the top, left corner\n * if it is inside a top-level layer. Default is false.\n */\nmxCompactTreeLayout.prototype.moveTree = false;\n\n/**\n * Variable: visited\n * \n * Specifies if the tree should be moved to the top, left corner\n * if it is inside a top-level layer. Default is false.\n */\nmxCompactTreeLayout.prototype.visited = null;\n\n/**\n * Variable: levelDistance\n *\n * Holds the levelDistance. Default is 10.\n */\nmxCompactTreeLayout.prototype.levelDistance = 10;\n\n/**\n * Variable: nodeDistance\n *\n * Holds the nodeDistance. Default is 20.\n */\nmxCompactTreeLayout.prototype.nodeDistance = 20;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxCompactTreeLayout.prototype.resetEdges = true;\n\n/**\n * Variable: prefHozEdgeSep\n * \n * The preferred horizontal distance between edges exiting a vertex.\n */\nmxCompactTreeLayout.prototype.prefHozEdgeSep = 5;\n\n/**\n * Variable: prefVertEdgeOff\n * \n * The preferred vertical offset between edges exiting a vertex.\n */\nmxCompactTreeLayout.prototype.prefVertEdgeOff = 4;\n\n/**\n * Variable: minEdgeJetty\n * \n * The minimum distance for an edge jetty from a vertex.\n */\nmxCompactTreeLayout.prototype.minEdgeJetty = 8;\n\n/**\n * Variable: channelBuffer\n * \n * The size of the vertical buffer in the center of inter-rank channels\n * where edge control points should not be placed.\n */\nmxCompactTreeLayout.prototype.channelBuffer = 4;\n\n/**\n * Variable: edgeRouting\n * \n * Whether or not to apply the internal tree edge routing.\n */\nmxCompactTreeLayout.prototype.edgeRouting = true;\n\n/**\n * Variable: sortEdges\n * \n * Specifies if edges should be sorted according to the order of their\n * opposite terminal cell in the model.\n */\nmxCompactTreeLayout.prototype.sortEdges = false;\n\n/**\n * Variable: alignRanks\n * \n * Whether or not the tops of cells in each rank should be aligned\n * across the rank\n */\nmxCompactTreeLayout.prototype.alignRanks = false;\n\n/**\n * Variable: maxRankHeight\n * \n * An array of the maximum height of cells (relative to the layout direction)\n * per rank\n */\nmxCompactTreeLayout.prototype.maxRankHeight = null;\n\n/**\n * Variable: root\n * \n * The cell to use as the root of the tree\n */\nmxCompactTreeLayout.prototype.root = null;\n\n/**\n * Variable: node\n * \n * The internal node representation of the root cell. Do not set directly\n * , this value is only exposed to assist with post-processing functionality\n */\nmxCompactTreeLayout.prototype.node = null;\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxCompactTreeLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxCompactTreeLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * If the parent has any connected edges, then it is used as the root of\n * the tree. Else, <mxGraph.findTreeRoots> will be used to find a suitable\n * root node within the set of children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be laid out.\n * root - Optional <mxCell> that will be used as the root of the tree.\n * Overrides <root> if specified.\n */\nmxCompactTreeLayout.prototype.execute = function(parent, root)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.getModel();\n\n\tif (root == null)\n\t{\n\t\t// Takes the parent as the root if it has outgoing edges\n\t\tif (this.graph.getEdges(parent, model.getParent(parent),\n\t\t\tthis.invert, !this.invert, false).length > 0)\n\t\t{\n\t\t\tthis.root = parent;\n\t\t}\n\t\t\n\t\t// Tries to find a suitable root in the parent's\n\t\t// children\n\t\telse\n\t\t{\n\t\t\tvar roots = this.graph.findTreeRoots(parent, true, this.invert);\n\t\t\t\n\t\t\tif (roots.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < roots.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (!this.isVertexIgnored(roots[i]) &&\n\t\t\t\t\t\tthis.graph.getEdges(roots[i], null,\n\t\t\t\t\t\t\tthis.invert, !this.invert, false).length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.root = roots[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.root = root;\n\t}\n\t\n\tif (this.root != null)\n\t{\n\t\tif (this.resizeParent)\n\t\t{\n\t\t\tthis.parentsChanged = new Object();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.parentsChanged = null;\n\t\t}\n\n\t\t//  Maintaining parent location\n\t\tthis.parentX = null;\n\t\tthis.parentY = null;\n\t\t\n\t\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tthis.parentX = geo.x;\n\t\t\t\tthis.parentY = geo.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tmodel.beginUpdate();\n\t\t\n\t\ttry\n\t\t{\n\t\t\tthis.visited = new Object();\n\t\t\tthis.node = this.dfs(this.root, parent);\n\t\t\t\n\t\t\tif (this.alignRanks)\n\t\t\t{\n\t\t\t\tthis.maxRankHeight = [];\n\t\t\t\tthis.findRankHeights(this.node, 0);\n\t\t\t\tthis.setCellHeights(this.node, 0);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.node != null)\n\t\t\t{\n\t\t\t\tthis.layout(this.node);\n\t\t\t\tvar x0 = this.graph.gridSize;\n\t\t\t\tvar y0 = x0;\n\t\t\t\t\n\t\t\t\tif (!this.moveTree)\n\t\t\t\t{\n\t\t\t\t\tvar g = this.getVertexBounds(this.root);\n\t\t\t\t\t\n\t\t\t\t\tif (g != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx0 = g.x;\n\t\t\t\t\t\ty0 = g.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bounds = null;\n\t\t\t\t\n\t\t\t\tif (this.isHorizontal())\n\t\t\t\t{\n\t\t\t\t\tbounds = this.horizontalLayout(this.node, x0, y0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbounds = this.verticalLayout(this.node, null, x0, y0);\n\t\t\t\t}\n\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tvar dx = 0;\n\t\t\t\t\tvar dy = 0;\n\n\t\t\t\t\tif (bounds.x < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx = Math.abs(x0 - bounds.x);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bounds.y < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy = Math.abs(y0 - bounds.y);\t\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dx != 0 || dy != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.moveNode(this.node, dx, dy);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.resizeParent)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.adjustParents();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.edgeRouting)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Iterate through all edges setting their positions\n\t\t\t\t\t\tthis.localEdgeProcessing(this.node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Maintaining parent location\n\t\t\t\tif (this.parentX != null && this.parentY != null)\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\tgeo.x = this.parentX;\n\t\t\t\t\t\tgeo.y = this.parentY;\n\t\t\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: moveNode\n * \n * Moves the specified node and all of its children by the given amount.\n */\nmxCompactTreeLayout.prototype.moveNode = function(node, dx, dy)\n{\n\tnode.x += dx;\n\tnode.y += dy;\n\tthis.apply(node);\n\t\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.moveNode(child, dx, dy);\n\t\tchild = child.next;\n\t}\n};\n\n\n/**\n * Function: sortOutgoingEdges\n * \n * Called if <sortEdges> is true to sort the array of outgoing edges in place.\n */\nmxCompactTreeLayout.prototype.sortOutgoingEdges = function(source, edges)\n{\n\tvar lookup = new mxDictionary();\n\t\n\tedges.sort(function(e1, e2)\n\t{\n\t\tvar end1 = e1.getTerminal(e1.getTerminal(false) == source);\n\t\tvar p1 = lookup.get(end1);\n\t\t\n\t\tif (p1 == null)\n\t\t{\n\t\t\tp1 = mxCellPath.create(end1).split(mxCellPath.PATH_SEPARATOR);\n\t\t\tlookup.put(end1, p1);\n\t\t}\n\n\t\tvar end2 = e2.getTerminal(e2.getTerminal(false) == source);\n\t\tvar p2 = lookup.get(end2);\n\t\t\n\t\tif (p2 == null)\n\t\t{\n\t\t\tp2 = mxCellPath.create(end2).split(mxCellPath.PATH_SEPARATOR);\n\t\t\tlookup.put(end2, p2);\n\t\t}\n\n\t\treturn mxCellPath.compare(p1, p2);\n\t});\n};\n\n/**\n * Function: findRankHeights\n * \n * Stores the maximum height (relative to the layout\n * direction) of cells in each rank\n */\nmxCompactTreeLayout.prototype.findRankHeights = function(node, rank)\n{\n\tif (this.maxRankHeight[rank] == null || this.maxRankHeight[rank] < node.height)\n\t{\n\t\tthis.maxRankHeight[rank] = node.height;\n\t}\n\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.findRankHeights(child, rank + 1);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: setCellHeights\n * \n * Set the cells heights (relative to the layout\n * direction) when the tops of each rank are to be aligned\n */\nmxCompactTreeLayout.prototype.setCellHeights = function(node, rank)\n{\n\tif (this.maxRankHeight[rank] != null && this.maxRankHeight[rank] > node.height)\n\t{\n\t\tnode.height = this.maxRankHeight[rank];\n\t}\n\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.setCellHeights(child, rank + 1);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: dfs\n * \n * Does a depth first search starting at the specified cell.\n * Makes sure the specified parent is never left by the\n * algorithm.\n */\nmxCompactTreeLayout.prototype.dfs = function(cell, parent)\n{\n\tvar id = mxCellPath.create(cell);\n\tvar node = null;\n\t\n\tif (cell != null && this.visited[id] == null && !this.isVertexIgnored(cell))\n\t{\n\t\tthis.visited[id] = cell;\n\t\tnode = this.createNode(cell);\n\n\t\tvar model = this.graph.getModel();\n\t\tvar prev = null;\n\t\tvar out = this.graph.getEdges(cell, parent, this.invert, !this.invert, false, true);\n\t\tvar view = this.graph.getView();\n\t\t\n\t\tif (this.sortEdges)\n\t\t{\n\t\t\tthis.sortOutgoingEdges(cell, out);\n\t\t}\n\n\t\tfor (var i = 0; i < out.length; i++)\n\t\t{\n\t\t\tvar edge = out[i];\n\t\t\t\n\t\t\tif (!this.isEdgeIgnored(edge))\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.setEdgePoints(edge, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.edgeRouting)\n\t\t\t\t{\n\t\t\t\t\tthis.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\tthis.setEdgePoints(edge, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Checks if terminal in same swimlane\n\t\t\t\tvar state = view.getState(edge);\n\t\t\t\tvar target = (state != null) ? state.getVisibleTerminal(this.invert) : view.getVisibleTerminal(edge, this.invert);\n\t\t\t\tvar tmp = this.dfs(target, parent);\n\t\t\t\t\n\t\t\t\tif (tmp != null && model.getGeometry(target) != null)\n\t\t\t\t{\n\t\t\t\t\tif (prev == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.child = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprev.next = tmp;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tprev = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: layout\n * \n * Starts the actual compact tree layout algorithm\n * at the given node.\n */\nmxCompactTreeLayout.prototype.layout = function(node)\n{\n\tif (node != null)\n\t{\n\t\tvar child = node.child;\n\t\t\n\t\twhile (child != null)\n\t\t{\n\t\t\tthis.layout(child);\n\t\t\tchild = child.next;\n\t\t}\n\t\t\n\t\tif (node.child != null)\n\t\t{\n\t\t\tthis.attachParent(node, this.join(node));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.layoutLeaf(node);\n\t\t}\n\t}\n};\n\n/**\n * Function: horizontalLayout\n */\nmxCompactTreeLayout.prototype.horizontalLayout = function(node, x0, y0, bounds)\n{\n\tnode.x += x0 + node.offsetX;\n\tnode.y += y0 + node.offsetY;\n\tbounds = this.apply(node, bounds);\n\tvar child = node.child;\n\t\n\tif (child != null)\n\t{\n\t\tbounds = this.horizontalLayout(child, node.x, node.y, bounds);\n\t\tvar siblingOffset = node.y + child.offsetY;\n\t\tvar s = child.next;\n\t\t\n\t\twhile (s != null)\n\t\t{\n\t\t\tbounds = this.horizontalLayout(s, node.x + child.offsetX, siblingOffset, bounds);\n\t\t\tsiblingOffset += s.offsetY;\n\t\t\ts = s.next;\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\t\n/**\n * Function: verticalLayout\n */\nmxCompactTreeLayout.prototype.verticalLayout = function(node, parent, x0, y0, bounds)\n{\n\tnode.x += x0 + node.offsetY;\n\tnode.y += y0 + node.offsetX;\n\tbounds = this.apply(node, bounds);\n\tvar child = node.child;\n\t\n\tif (child != null)\n\t{\n\t\tbounds = this.verticalLayout(child, node, node.x, node.y, bounds);\n\t\tvar siblingOffset = node.x + child.offsetY;\n\t\tvar s = child.next;\n\t\t\n\t\twhile (s != null)\n\t\t{\n\t\t\tbounds = this.verticalLayout(s, node, siblingOffset, node.y + child.offsetX, bounds);\n\t\t\tsiblingOffset += s.offsetY;\n\t\t\ts = s.next;\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: attachParent\n */\nmxCompactTreeLayout.prototype.attachParent = function(node, height)\n{\n\tvar x = this.nodeDistance + this.levelDistance;\n\tvar y2 = (height - node.width) / 2 - this.nodeDistance;\n\tvar y1 = y2 + node.width + 2 * this.nodeDistance - height;\n\t\n\tnode.child.offsetX = x + node.height;\n\tnode.child.offsetY = y1;\n\t\n\tnode.contour.upperHead = this.createLine(node.height, 0,\n\t\tthis.createLine(x, y1, node.contour.upperHead));\n\tnode.contour.lowerHead = this.createLine(node.height, 0,\n\t\tthis.createLine(x, y2, node.contour.lowerHead));\n};\n\n/**\n * Function: layoutLeaf\n */\nmxCompactTreeLayout.prototype.layoutLeaf = function(node)\n{\n\tvar dist = 2 * this.nodeDistance;\n\t\n\tnode.contour.upperTail = this.createLine(\n\t\tnode.height + dist, 0);\n\tnode.contour.upperHead = node.contour.upperTail;\n\tnode.contour.lowerTail = this.createLine(\n\t\t0, -node.width - dist);\n\tnode.contour.lowerHead = this.createLine(\n\t\tnode.height + dist, 0, node.contour.lowerTail);\n};\n\n/**\n * Function: join\n */\nmxCompactTreeLayout.prototype.join = function(node)\n{\n\tvar dist = 2 * this.nodeDistance;\n\t\n\tvar child = node.child;\n\tnode.contour = child.contour;\n\tvar h = child.width + dist;\n\tvar sum = h;\n\tchild = child.next;\n\t\n\twhile (child != null)\n\t{\n\t\tvar d = this.merge(node.contour, child.contour);\n\t\tchild.offsetY = d + h;\n\t\tchild.offsetX = 0;\n\t\th = child.width + dist;\n\t\tsum += d + h;\n\t\tchild = child.next;\n\t}\n\t\n\treturn sum;\n};\n\n/**\n * Function: merge\n */\nmxCompactTreeLayout.prototype.merge = function(p1, p2)\n{\n\tvar x = 0;\n\tvar y = 0;\n\tvar total = 0;\n\t\n\tvar upper = p1.lowerHead;\n\tvar lower = p2.upperHead;\n\t\n\twhile (lower != null && upper != null)\n\t{\n\t\tvar d = this.offset(x, y, lower.dx, lower.dy,\n\t\t\tupper.dx, upper.dy);\n\t\ty += d;\n\t\ttotal += d;\n\t\t\n\t\tif (x + lower.dx <= upper.dx)\n\t\t{\n\t\t\tx += lower.dx;\n\t\t\ty += lower.dy;\n\t\t\tlower = lower.next;\n\t\t}\n\t\telse\n\t\t{\t\t\t\t\n\t\t\tx -= upper.dx;\n\t\t\ty -= upper.dy;\n\t\t\tupper = upper.next;\n\t\t}\n\t}\n\t\n\tif (lower != null)\n\t{\n\t\tvar b = this.bridge(p1.upperTail, 0, 0, lower, x, y);\n\t\tp1.upperTail = (b.next != null) ? p2.upperTail : b;\n\t\tp1.lowerTail = p2.lowerTail;\n\t}\n\telse\n\t{\n\t\tvar b = this.bridge(p2.lowerTail, x, y, upper, 0, 0);\n\t\t\n\t\tif (b.next == null)\n\t\t{\n\t\t\tp1.lowerTail = b;\n\t\t}\n\t}\n\t\n\tp1.lowerHead = p2.lowerHead;\n\t\n\treturn total;\n};\n\n/**\n * Function: offset\n */\nmxCompactTreeLayout.prototype.offset = function(p1, p2, a1, a2, b1, b2)\n{\n\tvar d = 0;\n\t\n\tif (b1 <= p1 || p1 + a1 <= 0)\n\t{\n\t\treturn 0;\n\t}\n\n\tvar t = b1 * a2 - a1 * b2;\n\t\n\tif (t > 0)\n\t{\n\t\tif (p1 < 0)\n\t\t{\n\t\t\tvar s = p1 * a2;\n\t\t\td = s / a1 - p2;\n\t\t}\n\t\telse if (p1 > 0)\n\t\t{\n\t\t\tvar s = p1 * b2;\n\t\t\td = s / b1 - p2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\td = -p2;\n\t\t}\n\t}\n\telse if (b1 < p1 + a1)\n\t{\n\t\tvar s = (b1 - p1) * a2;\n\t\td = b2 - (p2 + s / a1);\n\t}\n\telse if (b1 > p1 + a1)\n\t{\n\t\tvar s = (a1 + p1) * b2;\n\t\td = s / b1 - (p2 + a2);\n\t}\n\telse\n\t{\n\t\td = b2 - (p2 + a2);\n\t}\n\n\tif (d > 0)\n\t{\n\t\treturn d;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n\n/**\n * Function: bridge\n */\nmxCompactTreeLayout.prototype.bridge = function(line1, x1, y1, line2, x2, y2)\n{\n\tvar dx = x2 + line2.dx - x1;\n\tvar dy = 0;\n\tvar s = 0;\n\t\n\tif (line2.dx == 0)\n\t{\n\t\tdy = line2.dy;\n\t}\n\telse\n\t{\n\t\ts = dx * line2.dy;\n\t\tdy = s / line2.dx;\n\t}\n\t\n\tvar r = this.createLine(dx, dy, line2.next);\n\tline1.next = this.createLine(0, y2 + line2.dy - dy - y1, r);\n\t\n\treturn r;\n};\n\n/**\n * Function: createNode\n */\nmxCompactTreeLayout.prototype.createNode = function(cell)\n{\n\tvar node = new Object();\n\tnode.cell = cell;\n\tnode.x = 0;\n\tnode.y = 0;\n\tnode.width = 0;\n\tnode.height = 0;\n\t\n\tvar geo = this.getVertexBounds(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tif (this.isHorizontal())\n\t\t{\n\t\t\tnode.width = geo.height;\n\t\t\tnode.height = geo.width;\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.width = geo.width;\n\t\t\tnode.height = geo.height;\n\t\t}\n\t}\n\t\n\tnode.offsetX = 0;\n\tnode.offsetY = 0;\n\tnode.contour = new Object();\n\t\n\treturn node;\n};\n\n/**\n * Function: apply\n */\nmxCompactTreeLayout.prototype.apply = function(node, bounds)\n{\n\tvar model = this.graph.getModel();\n\tvar cell = node.cell;\n\tvar g = model.getGeometry(cell);\n\n\tif (cell != null && g != null)\n\t{\n\t\tif (this.isVertexMovable(cell))\n\t\t{\n\t\t\tg = this.setVertexLocation(cell, node.x, node.y);\n\t\t\t\n\t\t\tif (this.resizeParent)\n\t\t\t{\n\t\t\t\tvar parent = model.getParent(cell);\n\t\t\t\tvar id = mxCellPath.create(parent);\n\t\t\t\t\n\t\t\t\t// Implements set semantic\n\t\t\t\tif (this.parentsChanged[id] == null)\n\t\t\t\t{\n\t\t\t\t\tthis.parentsChanged[id] = parent;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (bounds == null)\n\t\t{\n\t\t\tbounds = new mxRectangle(g.x, g.y, g.width, g.height);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds = new mxRectangle(Math.min(bounds.x, g.x),\n\t\t\t\tMath.min(bounds.y, g.y),\n\t\t\t\tMath.max(bounds.x + bounds.width, g.x + g.width),\n\t\t\t\tMath.max(bounds.y + bounds.height, g.y + g.height));\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: createLine\n */\nmxCompactTreeLayout.prototype.createLine = function(dx, dy, next)\n{\n\tvar line = new Object();\n\tline.dx = dx;\n\tline.dy = dy;\n\tline.next = next;\n\t\n\treturn line;\n};\n\n/**\n * Function: adjustParents\n * \n * Adjust parent cells whose child geometries have changed. The default \n * implementation adjusts the group to just fit around the children with \n * a padding.\n */\nmxCompactTreeLayout.prototype.adjustParents = function()\n{\n\tvar tmp = [];\n\t\n\tfor (var id in this.parentsChanged)\n\t{\n\t\ttmp.push(this.parentsChanged[id]);\n\t}\n\t\n\tthis.arrangeGroups(mxUtils.sortCells(tmp, true), this.groupPadding, this.groupPaddingTop,\n\t\tthis.groupPaddingRight, this.groupPaddingBottom, this.groupPaddingLeft);\n};\n\n/**\n * Function: localEdgeProcessing\n *\n * Moves the specified node and all of its children by the given amount.\n */\nmxCompactTreeLayout.prototype.localEdgeProcessing = function(node)\n{\n\tthis.processNodeOutgoing(node);\n\tvar child = node.child;\n\n\twhile (child != null)\n\t{\n\t\tthis.localEdgeProcessing(child);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: localEdgeProcessing\n *\n * Separates the x position of edges as they connect to vertices\n */\nmxCompactTreeLayout.prototype.processNodeOutgoing = function(node)\n{\n\tvar child = node.child;\n\tvar parentCell = node.cell;\n\n\tvar childCount = 0;\n\tvar sortedCells = [];\n\n\twhile (child != null)\n\t{\n\t\tchildCount++;\n\n\t\tvar sortingCriterion = child.x;\n\n\t\tif (this.horizontal)\n\t\t{\n\t\t\tsortingCriterion = child.y;\n\t\t}\n\n\t\tsortedCells.push(new WeightedCellSorter(child, sortingCriterion));\n\t\tchild = child.next;\n\t}\n\n\tsortedCells.sort(WeightedCellSorter.prototype.compare);\n\n\tvar availableWidth = node.width;\n\n\tvar requiredWidth = (childCount + 1) * this.prefHozEdgeSep;\n\n\t// Add a buffer on the edges of the vertex if the edge count allows\n\tif (availableWidth > requiredWidth + (2 * this.prefHozEdgeSep))\n\t{\n\t\tavailableWidth -= 2 * this.prefHozEdgeSep;\n\t}\n\n\tvar edgeSpacing = availableWidth / childCount;\n\n\tvar currentXOffset = edgeSpacing / 2.0;\n\n\tif (availableWidth > requiredWidth + (2 * this.prefHozEdgeSep))\n\t{\n\t\tcurrentXOffset += this.prefHozEdgeSep;\n\t}\n\n\tvar currentYOffset = this.minEdgeJetty - this.prefVertEdgeOff;\n\tvar maxYOffset = 0;\n\n\tvar parentBounds = this.getVertexBounds(parentCell);\n\tchild = node.child;\n\n\tfor (var j = 0; j < sortedCells.length; j++)\n\t{\n\t\tvar childCell = sortedCells[j].cell.cell;\n\t\tvar childBounds = this.getVertexBounds(childCell);\n\n\t\tvar edges = this.graph.getEdgesBetween(parentCell,\n\t\t\t\tchildCell, false);\n\t\t\n\t\tvar newPoints = [];\n\t\tvar x = 0;\n\t\tvar y = 0;\n\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tif (this.horizontal)\n\t\t\t{\n\t\t\t\t// Use opposite co-ords, calculation was done for \n\t\t\t\t// \n\t\t\t\tx = parentBounds.x + parentBounds.width;\n\t\t\t\ty = parentBounds.y + currentXOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tx = parentBounds.x + parentBounds.width\n\t\t\t\t\t\t+ currentYOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\ty = childBounds.y + childBounds.height / 2.0;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tthis.setEdgePoints(edges[i], newPoints);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx = parentBounds.x + currentXOffset;\n\t\t\t\ty = parentBounds.y + parentBounds.height;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\ty = parentBounds.y + parentBounds.height\n\t\t\t\t\t\t+ currentYOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tx = childBounds.x + childBounds.width / 2.0;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tthis.setEdgePoints(edges[i], newPoints);\n\t\t\t}\n\t\t}\n\n\t\tif (j < childCount / 2)\n\t\t{\n\t\t\tcurrentYOffset += this.prefVertEdgeOff;\n\t\t}\n\t\telse if (j > childCount / 2)\n\t\t{\n\t\t\tcurrentYOffset -= this.prefVertEdgeOff;\n\t\t}\n\t\t// Ignore the case if equals, this means the second of 2\n\t\t// jettys with the same y (even number of edges)\n\n\t\t//\t\t\t\t\t\t\t\tpos[k * 2] = currentX;\n\t\tcurrentXOffset += edgeSpacing;\n\t\t//\t\t\t\t\t\t\t\tpos[k * 2 + 1] = currentYOffset;\n\n\t\tmaxYOffset = Math.max(maxYOffset, currentYOffset);\n\t}\n};\n__mxOutput.mxCompactTreeLayout = typeof mxCompactTreeLayout !== 'undefined' ? mxCompactTreeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRadialTreeLayout\n * \n * Extends <mxGraphLayout> to implement a radial tree algorithm. This\n * layout is suitable for graphs that have no cycles (trees). Vertices that are\n * not connected to the tree will be ignored by this layout.\n * \n * Example:\n * \n * (code)\n * var layout = new mxRadialTreeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxRadialTreeLayout\n * \n * Constructs a new radial tree layout for the specified graph\n */\nfunction mxRadialTreeLayout(graph)\n{\n\tmxCompactTreeLayout.call(this, graph , false);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxUtils.extend(mxRadialTreeLayout, mxCompactTreeLayout);\n\n/**\n * Variable: angleOffset\n *\n * The initial offset to compute the angle position.\n */\nmxRadialTreeLayout.prototype.angleOffset = 0.5;\n\n/**\n * Variable: rootx\n *\n * The X co-ordinate of the root cell\n */\nmxRadialTreeLayout.prototype.rootx = 0;\n\n/**\n * Variable: rooty\n *\n * The Y co-ordinate of the root cell\n */\nmxRadialTreeLayout.prototype.rooty = 0;\n\n/**\n * Variable: levelDistance\n *\n * Holds the levelDistance. Default is 120.\n */\nmxRadialTreeLayout.prototype.levelDistance = 120;\n\n/**\n * Variable: nodeDistance\n *\n * Holds the nodeDistance. Default is 10.\n */\nmxRadialTreeLayout.prototype.nodeDistance = 10;\n\n/**\n * Variable: autoRadius\n * \n * Specifies if the radios should be computed automatically\n */\nmxRadialTreeLayout.prototype.autoRadius = false;\n\n/**\n * Variable: sortEdges\n * \n * Specifies if edges should be sorted according to the order of their\n * opposite terminal cell in the model.\n */\nmxRadialTreeLayout.prototype.sortEdges = false;\n\n/**\n * Variable: rowMinX\n * \n * Array of leftmost x coordinate of each row\n */\nmxRadialTreeLayout.prototype.rowMinX = [];\n\n/**\n * Variable: rowMaxX\n * \n * Array of rightmost x coordinate of each row\n */\nmxRadialTreeLayout.prototype.rowMaxX = [];\n\n/**\n * Variable: rowMinCenX\n * \n * Array of x coordinate of leftmost vertex of each row\n */\nmxRadialTreeLayout.prototype.rowMinCenX = [];\n\n/**\n * Variable: rowMaxCenX\n * \n * Array of x coordinate of rightmost vertex of each row\n */\nmxRadialTreeLayout.prototype.rowMaxCenX = [];\n\n/**\n * Variable: rowRadi\n * \n * Array of y deltas of each row behind root vertex, also the radius in the tree\n */\nmxRadialTreeLayout.prototype.rowRadi = [];\n\n/**\n * Variable: row\n * \n * Array of vertices on each row\n */\nmxRadialTreeLayout.prototype.row = [];\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxRadialTreeLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * If the parent has any connected edges, then it is used as the root of\n * the tree. Else, <mxGraph.findTreeRoots> will be used to find a suitable\n * root node within the set of children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be laid out.\n * root - Optional <mxCell> that will be used as the root of the tree.\n */\nmxRadialTreeLayout.prototype.execute = function(parent, root)\n{\n\tthis.parent = parent;\n\t\n\tthis.useBoundingBox = false;\n\tthis.edgeRouting = false;\n\t//this.horizontal = false;\n\n\tmxCompactTreeLayout.prototype.execute.apply(this, arguments);\n\t\n\tvar bounds = null;\n\tvar rootBounds = this.getVertexBounds(this.root);\n\tthis.centerX = rootBounds.x + rootBounds.width / 2;\n\tthis.centerY = rootBounds.y + rootBounds.height / 2;\n\n\t// Calculate the bounds of the involved vertices directly from the values set in the compact tree\n\tfor (var vertex in this.visited)\n\t{\n\t\tvar vertexBounds = this.getVertexBounds(this.visited[vertex]);\n\t\tbounds = (bounds != null) ? bounds : vertexBounds.clone();\n\t\tbounds.add(vertexBounds);\n\t}\n\t\n\tthis.calcRowDims([this.node], 0);\n\t\n\tvar maxLeftGrad = 0;\n\tvar maxRightGrad = 0;\n\n\t// Find the steepest left and right gradients\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tvar leftGrad = (this.centerX - this.rowMinX[i] - this.nodeDistance) / this.rowRadi[i];\n\t\tvar rightGrad = (this.rowMaxX[i] - this.centerX - this.nodeDistance) / this.rowRadi[i];\n\t\t\n\t\tmaxLeftGrad = Math.max (maxLeftGrad, leftGrad);\n\t\tmaxRightGrad = Math.max (maxRightGrad, rightGrad);\n\t}\n\t\n\t// Extend out row so they meet the maximum gradient and convert to polar co-ords\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tvar xLeftLimit = this.centerX - this.nodeDistance - maxLeftGrad * this.rowRadi[i];\n\t\tvar xRightLimit = this.centerX + this.nodeDistance + maxRightGrad * this.rowRadi[i];\n\t\tvar fullWidth = xRightLimit - xLeftLimit;\n\t\t\n\t\tfor (var j = 0; j < this.row[i].length; j ++)\n\t\t{\n\t\t\tvar row = this.row[i];\n\t\t\tvar node = row[j];\n\t\t\tvar vertexBounds = this.getVertexBounds(node.cell);\n\t\t\tvar xProportion = (vertexBounds.x + vertexBounds.width / 2 - xLeftLimit) / (fullWidth);\n\t\t\tvar theta =  2 * Math.PI * xProportion;\n\t\t\tnode.theta = theta;\n\t\t}\n\t}\n\n\t// Post-process from outside inwards to try to align parents with children\n\tfor (var i = this.row.length - 2; i >= 0; i--)\n\t{\n\t\tvar row = this.row[i];\n\t\t\n\t\tfor (var j = 0; j < row.length; j++)\n\t\t{\n\t\t\tvar node = row[j];\n\t\t\tvar child = node.child;\n\t\t\tvar counter = 0;\n\t\t\tvar totalTheta = 0;\n\t\t\t\n\t\t\twhile (child != null)\n\t\t\t{\n\t\t\t\ttotalTheta += child.theta;\n\t\t\t\tcounter++;\n\t\t\t\tchild = child.next;\n\t\t\t}\n\t\t\t\n\t\t\tif (counter > 0)\n\t\t\t{\n\t\t\t\tvar averTheta = totalTheta / counter;\n\t\t\t\t\n\t\t\t\tif (averTheta > node.theta && j < row.length - 1)\n\t\t\t\t{\n\t\t\t\t\tvar nextTheta = row[j+1].theta;\n\t\t\t\t\tnode.theta = Math.min (averTheta, nextTheta - Math.PI/10);\n\t\t\t\t}\n\t\t\t\telse if (averTheta < node.theta && j > 0 )\n\t\t\t\t{\n\t\t\t\t\tvar lastTheta = row[j-1].theta;\n\t\t\t\t\tnode.theta = Math.max (averTheta, lastTheta + Math.PI/10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Set locations\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tfor (var j = 0; j < this.row[i].length; j ++)\n\t\t{\n\t\t\tvar row = this.row[i];\n\t\t\tvar node = row[j];\n\t\t\tvar vertexBounds = this.getVertexBounds(node.cell);\n\t\t\tthis.setVertexLocation(node.cell,\n\t\t\t\t\t\t\t\t\tthis.centerX - vertexBounds.width / 2 + this.rowRadi[i] * Math.cos(node.theta),\n\t\t\t\t\t\t\t\t\tthis.centerY - vertexBounds.height / 2 + this.rowRadi[i] * Math.sin(node.theta));\n\t\t}\n\t}\n};\n\n/**\n * Function: calcRowDims\n * \n * Recursive function to calculate the dimensions of each row\n * \n * Parameters:\n * \n * row - Array of internal nodes, the children of which are to be processed.\n * rowNum - Integer indicating which row is being processed.\n */\nmxRadialTreeLayout.prototype.calcRowDims = function(row, rowNum)\n{\n\tif (row == null || row.length == 0)\n\t{\n\t\treturn;\n\t}\n\n\t// Place root's children proportionally around the first level\n\tthis.rowMinX[rowNum] = this.centerX;\n\tthis.rowMaxX[rowNum] = this.centerX;\n\tthis.rowMinCenX[rowNum] = this.centerX;\n\tthis.rowMaxCenX[rowNum] = this.centerX;\n\tthis.row[rowNum] = [];\n\n\tvar rowHasChildren = false;\n\n\tfor (var i = 0; i < row.length; i++)\n\t{\n\t\tvar child = row[i] != null ? row[i].child : null;\n\n\t\twhile (child != null)\n\t\t{\n\t\t\tvar cell = child.cell;\n\t\t\tvar vertexBounds = this.getVertexBounds(cell);\n\t\t\t\n\t\t\tthis.rowMinX[rowNum] = Math.min(vertexBounds.x, this.rowMinX[rowNum]);\n\t\t\tthis.rowMaxX[rowNum] = Math.max(vertexBounds.x + vertexBounds.width, this.rowMaxX[rowNum]);\n\t\t\tthis.rowMinCenX[rowNum] = Math.min(vertexBounds.x + vertexBounds.width / 2, this.rowMinCenX[rowNum]);\n\t\t\tthis.rowMaxCenX[rowNum] = Math.max(vertexBounds.x + vertexBounds.width / 2, this.rowMaxCenX[rowNum]);\n\t\t\tthis.rowRadi[rowNum] = vertexBounds.y - this.getVertexBounds(this.root).y;\n\t\n\t\t\tif (child.child != null)\n\t\t\t{\n\t\t\t\trowHasChildren = true;\n\t\t\t}\n\t\t\t\n\t\t\tthis.row[rowNum].push(child);\n\t\t\tchild = child.next;\n\t\t}\n\t}\n\t\n\tif (rowHasChildren)\n\t{\n\t\tthis.calcRowDims(this.row[rowNum], rowNum + 1);\n\t}\n};\n\n__mxOutput.mxRadialTreeLayout = typeof mxRadialTreeLayout !== 'undefined' ? mxRadialTreeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxFastOrganicLayout\n * \n * Extends <mxGraphLayout> to implement a fast organic layout algorithm.\n * The vertices need to be connected for this layout to work, vertices\n * with no connections are ignored.\n * \n * Example:\n * \n * (code)\n * var layout = new mxFastOrganicLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new fast organic layout for the specified graph.\n */\nfunction mxFastOrganicLayout(graph)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxFastOrganicLayout.prototype = new mxGraphLayout();\nmxFastOrganicLayout.prototype.constructor = mxFastOrganicLayout;\n\n/**\n * Variable: useInputOrigin\n * \n * Specifies if the top left corner of the input cells should be the origin\n * of the layout result. Default is true.\n */\nmxFastOrganicLayout.prototype.useInputOrigin = true;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxFastOrganicLayout.prototype.resetEdges = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxFastOrganicLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: forceConstant\n * \n * The force constant by which the attractive forces are divided and the\n * replusive forces are multiple by the square of. The value equates to the\n * average radius there is of free space around each node. Default is 50.\n */\nmxFastOrganicLayout.prototype.forceConstant = 50;\n\n/**\n * Variable: forceConstantSquared\n * \n * Cache of <forceConstant>^2 for performance.\n */\nmxFastOrganicLayout.prototype.forceConstantSquared = 0;\n\n/**\n * Variable: minDistanceLimit\n * \n * Minimal distance limit. Default is 2. Prevents of\n * dividing by zero.\n */\nmxFastOrganicLayout.prototype.minDistanceLimit = 2;\n\n/**\n * Variable: minDistanceLimit\n * \n * Minimal distance limit. Default is 2. Prevents of\n * dividing by zero.\n */\nmxFastOrganicLayout.prototype.maxDistanceLimit = 500;\n\n/**\n * Variable: minDistanceLimitSquared\n * \n * Cached version of <minDistanceLimit> squared.\n */\nmxFastOrganicLayout.prototype.minDistanceLimitSquared = 4;\n\n/**\n * Variable: initialTemp\n * \n * Start value of temperature. Default is 200.\n */\nmxFastOrganicLayout.prototype.initialTemp = 200;\n\n/**\n * Variable: temperature\n * \n * Temperature to limit displacement at later stages of layout.\n */\nmxFastOrganicLayout.prototype.temperature = 0;\n\n/**\n * Variable: maxIterations\n * \n * Total number of iterations to run the layout though.\n */\nmxFastOrganicLayout.prototype.maxIterations = 0;\n\n/**\n * Variable: iteration\n * \n * Current iteration count.\n */\nmxFastOrganicLayout.prototype.iteration = 0;\n\n/**\n * Variable: vertexArray\n * \n * An array of all vertices to be laid out.\n */\nmxFastOrganicLayout.prototype.vertexArray;\n\n/**\n * Variable: dispX\n * \n * An array of locally stored X co-ordinate displacements for the vertices.\n */\nmxFastOrganicLayout.prototype.dispX;\n\n/**\n * Variable: dispY\n * \n * An array of locally stored Y co-ordinate displacements for the vertices.\n */\nmxFastOrganicLayout.prototype.dispY;\n\n/**\n * Variable: cellLocation\n * \n * An array of locally stored co-ordinate positions for the vertices.\n */\nmxFastOrganicLayout.prototype.cellLocation;\n\n/**\n * Variable: radius\n * \n * The approximate radius of each cell, nodes only.\n */\nmxFastOrganicLayout.prototype.radius;\n\n/**\n * Variable: radiusSquared\n * \n * The approximate radius squared of each cell, nodes only.\n */\nmxFastOrganicLayout.prototype.radiusSquared;\n\n/**\n * Variable: isMoveable\n * \n * Array of booleans representing the movable states of the vertices.\n */\nmxFastOrganicLayout.prototype.isMoveable;\n\n/**\n * Variable: neighbours\n * \n * Local copy of cell neighbours.\n */\nmxFastOrganicLayout.prototype.neighbours;\n\n/**\n * Variable: indices\n * \n * Hashtable from cells to local indices.\n */\nmxFastOrganicLayout.prototype.indices;\n\n/**\n * Variable: allowedToRun\n * \n * Boolean flag that specifies if the layout is allowed to run. If this is\n * set to false, then the layout exits in the following iteration.\n */\nmxFastOrganicLayout.prototype.allowedToRun = true;\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxFastOrganicLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>. This operates on all children of the\n * given parent where <isVertexIgnored> returns false.\n */\nmxFastOrganicLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tthis.vertexArray = [];\n\tvar cells = this.graph.getChildVertices(parent);\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (!this.isVertexIgnored(cells[i]))\n\t\t{\n\t\t\tthis.vertexArray.push(cells[i]);\n\t\t}\n\t}\n\t\n\tvar initialBounds = (this.useInputOrigin) ?\n\t\t\tthis.graph.getBoundingBoxFromGeometry(this.vertexArray) :\n\t\t\t\tnull;\n\tvar n = this.vertexArray.length;\n\n\tthis.indices = [];\n\tthis.dispX = [];\n\tthis.dispY = [];\n\tthis.cellLocation = [];\n\tthis.isMoveable = [];\n\tthis.neighbours = [];\n\tthis.radius = [];\n\tthis.radiusSquared = [];\n\n\tif (this.forceConstant < 0.001)\n\t{\n\t\tthis.forceConstant = 0.001;\n\t}\n\n\tthis.forceConstantSquared = this.forceConstant * this.forceConstant;\n\n\t// Create a map of vertices first. This is required for the array of\n\t// arrays called neighbours which holds, for each vertex, a list of\n\t// ints which represents the neighbours cells to that vertex as\n\t// the indices into vertexArray\n\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t{\n\t\tvar vertex = this.vertexArray[i];\n\t\tthis.cellLocation[i] = [];\n\t\t\n\t\t// Set up the mapping from array indices to cells\n\t\tvar id = mxObjectIdentity.get(vertex);\n\t\tthis.indices[id] = i;\n\t\tvar bounds = this.getVertexBounds(vertex);\n\n\t\t// Set the X,Y value of the internal version of the cell to\n\t\t// the center point of the vertex for better positioning\n\t\tvar width = bounds.width;\n\t\tvar height = bounds.height;\n\t\t\n\t\t// Randomize (0, 0) locations\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\t\n\t\tthis.cellLocation[i][0] = x + width / 2.0;\n\t\tthis.cellLocation[i][1] = y + height / 2.0;\n\t\tthis.radius[i] = Math.min(width, height);\n\t\tthis.radiusSquared[i] = this.radius[i] * this.radius[i];\n\t}\n\n\t// Moves cell location back to top-left from center locations used in\n\t// algorithm, resetting the edge points is part of the transaction\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < n; i++)\n\t\t{\n\t\t\tthis.dispX[i] = 0;\n\t\t\tthis.dispY[i] = 0;\n\t\t\tthis.isMoveable[i] = this.isVertexMovable(this.vertexArray[i]);\n\n\t\t\t// Get lists of neighbours to all vertices, translate the cells\n\t\t\t// obtained in indices into vertexArray and store as an array\n\t\t\t// against the orginial cell index\n\t\t\tvar edges = this.graph.getConnections(this.vertexArray[i], parent);\n\t\t\tvar cells = this.graph.getOpposites(edges, this.vertexArray[i]);\n\t\t\tthis.neighbours[i] = [];\n\n\t\t\tfor (var j = 0; j < cells.length; j++)\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.resetEdge(edges[j]);\n\t\t\t\t}\n\n\t\t\t    if (this.disableEdgeStyle)\n\t\t\t    {\n\t\t\t    \tthis.setEdgeStyleEnabled(edges[j], false);\n\t\t\t    }\n\n\t\t\t\t// Looks the cell up in the indices dictionary\n\t\t\t\tvar id = mxObjectIdentity.get(cells[j]);\n\t\t\t\tvar index = this.indices[id];\n\n\t\t\t\t// Check the connected cell in part of the vertex list to be\n\t\t\t\t// acted on by this layout\n\t\t\t\tif (index != null)\n\t\t\t\t{\n\t\t\t\t\tthis.neighbours[i][j] = index;\n\t\t\t\t}\n\n\t\t\t\t// Else if index of the other cell doesn't correspond to\n\t\t\t\t// any cell listed to be acted upon in this layout. Set\n\t\t\t\t// the index to the value of this vertex (a dummy self-loop)\n\t\t\t\t// so the attraction force of the edge is not calculated\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.neighbours[i][j] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.temperature = this.initialTemp;\n\n\t\t// If max number of iterations has not been set, guess it\n\t\tif (this.maxIterations == 0)\n\t\t{\n\t\t\tthis.maxIterations = 20 * Math.sqrt(n);\n\t\t}\n\t\t\n\t\t// Main iteration loop\n\t\tfor (this.iteration = 0; this.iteration < this.maxIterations; this.iteration++)\n\t\t{\n\t\t\tif (!this.allowedToRun)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// Calculate repulsive forces on all vertices\n\t\t\tthis.calcRepulsion();\n\n\t\t\t// Calculate attractive forces through edges\n\t\t\tthis.calcAttraction();\n\n\t\t\tthis.calcPositions();\n\t\t\tthis.reduceTemperature();\n\t\t}\n\n\t\tvar minx = null;\n\t\tvar miny = null;\n\t\t\n\t\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t\t{\n\t\t\tvar vertex = this.vertexArray[i];\n\t\t\t\n\t\t\tif (this.isVertexMovable(vertex))\n\t\t\t{\n\t\t\t\tvar bounds = this.getVertexBounds(vertex);\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tthis.cellLocation[i][0] -= bounds.width / 2.0;\n\t\t\t\t\tthis.cellLocation[i][1] -= bounds.height / 2.0;\n\t\t\t\t\t\n\t\t\t\t\tvar x = this.graph.snap(Math.round(this.cellLocation[i][0]));\n\t\t\t\t\tvar y = this.graph.snap(Math.round(this.cellLocation[i][1]));\n\t\t\t\t\t\n\t\t\t\t\tthis.setVertexLocation(vertex, x, y);\n\t\t\t\t\t\n\t\t\t\t\tif (minx == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tminx = x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tminx = Math.min(minx, x);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (miny == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tminy = y;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tminy = Math.min(miny, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Modifies the cloned geometries in-place. Not needed\n\t\t// to clone the geometries again as we're in the same\n\t\t// undoable change.\n\t\tvar dx = -(minx || 0) + 1;\n\t\tvar dy = -(miny || 0) + 1;\n\t\t\n\t\tif (initialBounds != null)\n\t\t{\n\t\t\tdx += initialBounds.x;\n\t\t\tdy += initialBounds.y;\n\t\t}\n\t\t\n\t\tthis.graph.moveCells(this.vertexArray, dx, dy);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: calcPositions\n * \n * Takes the displacements calculated for each cell and applies them to the\n * local cache of cell positions. Limits the displacement to the current\n * temperature.\n */\nmxFastOrganicLayout.prototype.calcPositions = function()\n{\n\tfor (var index = 0; index < this.vertexArray.length; index++)\n\t{\n\t\tif (this.isMoveable[index])\n\t\t{\n\t\t\t// Get the distance of displacement for this node for this\n\t\t\t// iteration\n\t\t\tvar deltaLength = Math.sqrt(this.dispX[index] * this.dispX[index] +\n\t\t\t\tthis.dispY[index] * this.dispY[index]);\n\n\t\t\tif (deltaLength < 0.001)\n\t\t\t{\n\t\t\t\tdeltaLength = 0.001;\n\t\t\t}\n\n\t\t\t// Scale down by the current temperature if less than the\n\t\t\t// displacement distance\n\t\t\tvar newXDisp = this.dispX[index] / deltaLength\n\t\t\t\t* Math.min(deltaLength, this.temperature);\n\n\t\t\tvar newYDisp = this.dispY[index] / deltaLength\n\t\t\t\t* Math.min(deltaLength, this.temperature);\n\n\t\t\t// reset displacements\n\t\t\tthis.dispX[index] = 0;\n\t\t\tthis.dispY[index] = 0;\n\n\t\t\t// Update the cached cell locations\n\t\t\tthis.cellLocation[index][0] += newXDisp;\n\t\t\tthis.cellLocation[index][1] += newYDisp;\n\t\t}\n\t}\n};\n\n/**\n * Function: calcAttraction\n * \n * Calculates the attractive forces between all laid out nodes linked by\n * edges\n */\nmxFastOrganicLayout.prototype.calcAttraction = function()\n{\n\t// Check the neighbours of each vertex and calculate the attractive\n\t// force of the edge connecting them\n\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t{\n\t\tfor (var k = 0; k < this.neighbours[i].length; k++)\n\t\t{\n\t\t\t// Get the index of the othe cell in the vertex array\n\t\t\tvar j = this.neighbours[i][k];\n\t\t\t\n\t\t\t// Do not proceed self-loops\n\t\t\tif (i != j &&\n\t\t\t\tthis.isMoveable[i] &&\n\t\t\t\tthis.isMoveable[j])\n\t\t\t{\n\t\t\t\tvar xDelta = this.cellLocation[i][0] - this.cellLocation[j][0];\n\t\t\t\tvar yDelta = this.cellLocation[i][1] - this.cellLocation[j][1];\n\n\t\t\t\t// The distance between the nodes\n\t\t\t\tvar deltaLengthSquared = xDelta * xDelta + yDelta\n\t\t\t\t\t\t* yDelta - this.radiusSquared[i] - this.radiusSquared[j];\n\n\t\t\t\tif (deltaLengthSquared < this.minDistanceLimitSquared)\n\t\t\t\t{\n\t\t\t\t\tdeltaLengthSquared = this.minDistanceLimitSquared;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar deltaLength = Math.sqrt(deltaLengthSquared);\n\t\t\t\tvar force = (deltaLengthSquared) / this.forceConstant;\n\n\t\t\t\tvar displacementX = (xDelta / deltaLength) * force;\n\t\t\t\tvar displacementY = (yDelta / deltaLength) * force;\n\t\t\t\t\n\t\t\t\tthis.dispX[i] -= displacementX;\n\t\t\t\tthis.dispY[i] -= displacementY;\n\t\t\t\t\n\t\t\t\tthis.dispX[j] += displacementX;\n\t\t\t\tthis.dispY[j] += displacementY;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: calcRepulsion\n * \n * Calculates the repulsive forces between all laid out nodes\n */\nmxFastOrganicLayout.prototype.calcRepulsion = function()\n{\n\tvar vertexCount = this.vertexArray.length;\n\n\tfor (var i = 0; i < vertexCount; i++)\n\t{\n\t\tfor (var j = i; j < vertexCount; j++)\n\t\t{\n\t\t\t// Exits if the layout is no longer allowed to run\n\t\t\tif (!this.allowedToRun)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (j != i &&\n\t\t\t\tthis.isMoveable[i] &&\n\t\t\t\tthis.isMoveable[j])\n\t\t\t{\n\t\t\t\tvar xDelta = this.cellLocation[i][0] - this.cellLocation[j][0];\n\t\t\t\tvar yDelta = this.cellLocation[i][1] - this.cellLocation[j][1];\n\n\t\t\t\tif (xDelta == 0)\n\t\t\t\t{\n\t\t\t\t\txDelta = 0.01 + Math.random();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (yDelta == 0)\n\t\t\t\t{\n\t\t\t\t\tyDelta = 0.01 + Math.random();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Distance between nodes\n\t\t\t\tvar deltaLength = Math.sqrt((xDelta * xDelta)\n\t\t\t\t\t\t+ (yDelta * yDelta));\n\t\t\t\tvar deltaLengthWithRadius = deltaLength - this.radius[i]\n\t\t\t\t\t\t- this.radius[j];\n\n\t\t\t\tif (deltaLengthWithRadius > this.maxDistanceLimit)\n\t\t\t\t{\n\t\t\t\t\t// Ignore vertices too far apart\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (deltaLengthWithRadius < this.minDistanceLimit)\n\t\t\t\t{\n\t\t\t\t\tdeltaLengthWithRadius = this.minDistanceLimit;\n\t\t\t\t}\n\n\t\t\t\tvar force = this.forceConstantSquared / deltaLengthWithRadius;\n\n\t\t\t\tvar displacementX = (xDelta / deltaLength) * force;\n\t\t\t\tvar displacementY = (yDelta / deltaLength) * force;\n\t\t\t\t\n\t\t\t\tthis.dispX[i] += displacementX;\n\t\t\t\tthis.dispY[i] += displacementY;\n\n\t\t\t\tthis.dispX[j] -= displacementX;\n\t\t\t\tthis.dispY[j] -= displacementY;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: reduceTemperature\n * \n * Reduces the temperature of the layout from an initial setting in a linear\n * fashion to zero.\n */\nmxFastOrganicLayout.prototype.reduceTemperature = function()\n{\n\tthis.temperature = this.initialTemp * (1.0 - this.iteration / this.maxIterations);\n};\n\n__mxOutput.mxFastOrganicLayout = typeof mxFastOrganicLayout !== 'undefined' ? mxFastOrganicLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCircleLayout\n * \n * Extends <mxGraphLayout> to implement a circluar layout for a given radius.\n * The vertices do not need to be connected for this layout to work and all\n * connections between vertices are not taken into account.\n * \n * Example:\n * \n * (code)\n * var layout = new mxCircleLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCircleLayout\n *\n * Constructs a new circular layout for the specified radius.\n *\n * Arguments:\n * \n * graph - <mxGraph> that contains the cells.\n * radius - Optional radius as an int. Default is 100.\n */\nfunction mxCircleLayout(graph, radius)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.radius = (radius != null) ? radius : 100;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCircleLayout.prototype = new mxGraphLayout();\nmxCircleLayout.prototype.constructor = mxCircleLayout;\n\n/**\n * Variable: radius\n * \n * Integer specifying the size of the radius. Default is 100.\n */\nmxCircleLayout.prototype.radius = null;\n\n/**\n * Variable: moveCircle\n * \n * Boolean specifying if the circle should be moved to the top,\n * left corner specified by <x0> and <y0>. Default is false.\n */\nmxCircleLayout.prototype.moveCircle = false;\n\n/**\n * Variable: x0\n * \n * Integer specifying the left coordinate of the circle.\n * Default is 0.\n */\nmxCircleLayout.prototype.x0 = 0;\n\n/**\n * Variable: y0\n * \n * Integer specifying the top coordinate of the circle.\n * Default is 0.\n */\nmxCircleLayout.prototype.y0 = 0;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxCircleLayout.prototype.resetEdges = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxCircleLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxCircleLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\n\t// Moves the vertices to build a circle. Makes sure the\n\t// radius is large enough for the vertices to not\n\t// overlap\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\t// Gets all vertices inside the parent and finds\n\t\t// the maximum dimension of the largest vertex\n\t\tvar max = 0;\n\t\tvar top = null;\n\t\tvar left = null;\n\t\tvar vertices = [];\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (!this.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\tvertices.push(cell);\n\t\t\t\tvar bounds = this.getVertexBounds(cell);\n\t\t\t\t\n\t\t\t\tif (top == null)\n\t\t\t\t{\n\t\t\t\t\ttop = bounds.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttop = Math.min(top, bounds.y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (left == null)\n\t\t\t\t{\n\t\t\t\t\tleft = bounds.x;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleft = Math.min(left, bounds.x);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmax = Math.max(max, Math.max(bounds.width, bounds.height));\n\t\t\t}\n\t\t\telse if (!this.isEdgeIgnored(cell))\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.resetEdge(cell);\n\t\t\t\t}\n\n\t\t\t    if (this.disableEdgeStyle)\n\t\t\t    {\n\t\t\t    \t\tthis.setEdgeStyleEnabled(cell, false);\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar r = this.getRadius(vertices.length, max);\n\n\t\t// Moves the circle to the specified origin\n\t\tif (this.moveCircle)\n\t\t{\n\t\t\tleft = this.x0;\n\t\t\ttop = this.y0;\n\t\t}\n\t\t\n\t\tthis.circle(vertices, r, left, top);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: getRadius\n * \n * Returns the radius to be used for the given vertex count. Max is the maximum\n * width or height of all vertices in the layout.\n */\nmxCircleLayout.prototype.getRadius = function(count, max)\n{\n\treturn Math.max(count * max / Math.PI, this.radius);\n};\n\n/**\n * Function: circle\n * \n * Executes the circular layout for the specified array\n * of vertices and the given radius. This is called from\n * <execute>.\n */\nmxCircleLayout.prototype.circle = function(vertices, r, left, top)\n{\n\tvar vertexCount = vertices.length;\n\tvar phi = 2 * Math.PI / vertexCount;\n\t\n\tfor (var i = 0; i < vertexCount; i++)\n\t{\n\t\tif (this.isVertexMovable(vertices[i]))\n\t\t{\n\t\t\tthis.setVertexLocation(vertices[i],\n\t\t\t\tMath.round(left + r + r * Math.sin(i * phi)),\n\t\t\t\tMath.round(top + r + r * Math.cos(i * phi)));\n\t\t}\n\t}\n};\n\n__mxOutput.mxCircleLayout = typeof mxCircleLayout !== 'undefined' ? mxCircleLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxParallelEdgeLayout\n * \n * Extends <mxGraphLayout> for arranging parallel edges. This layout works\n * on edges for all pairs of vertices where there is more than one edge\n * connecting the latter.\n * \n * Example:\n * \n * (code)\n * var layout = new mxParallelEdgeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * To run the layout for the parallel edges of a changed edge only, the\n * following code can be used.\n * \n * (code)\n * var layout = new mxParallelEdgeLayout(graph);\n * \n * graph.addListener(mxEvent.CELL_CONNECTED, function(sender, evt)\n * {\n *   var model = graph.getModel();\n *   var edge = evt.getProperty('edge');\n *   var src = model.getTerminal(edge, true);\n *   var trg = model.getTerminal(edge, false);\n *   \n *   layout.isEdgeIgnored = function(edge2)\n *   {\n *     var src2 = model.getTerminal(edge2, true);\n *     var trg2 = model.getTerminal(edge2, false);\n *     \n *     return !(model.isEdge(edge2) && ((src == src2 && trg == trg2) || (src == trg2 && trg == src2)));\n *   };\n *   \n *   layout.execute(graph.getDefaultParent());\n * });\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new fast organic layout for the specified graph.\n */\nfunction mxParallelEdgeLayout(graph)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxParallelEdgeLayout.prototype = new mxGraphLayout();\nmxParallelEdgeLayout.prototype.constructor = mxParallelEdgeLayout;\n\n/**\n * Variable: spacing\n * \n * Defines the spacing between the parallels. Default is 20.\n */\nmxParallelEdgeLayout.prototype.spacing = 20;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxParallelEdgeLayout.prototype.execute = function(parent)\n{\n\tvar lookup = this.findParallels(parent);\n\t\n\tthis.graph.model.beginUpdate();\t\n\ttry\n\t{\n\t\tfor (var i in lookup)\n\t\t{\n\t\t\tvar parallels = lookup[i];\n\n\t\t\tif (parallels.length > 1)\n\t\t\t{\n\t\t\t\tthis.layout(parallels);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.graph.model.endUpdate();\n\t}\n};\n\n/**\n * Function: findParallels\n * \n * Finds the parallel edges in the given parent.\n */\nmxParallelEdgeLayout.prototype.findParallels = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tvar lookup = [];\n\tvar childCount = model.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (!this.isEdgeIgnored(child))\n\t\t{\n\t\t\tvar id = this.getEdgeId(child);\n\t\t\t\n\t\t\tif (id != null)\n\t\t\t{\n\t\t\t\tif (lookup[id] == null)\n\t\t\t\t{\n\t\t\t\t\tlookup[id] = [];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlookup[id].push(child);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn lookup;\n};\n\n/**\n * Function: getEdgeId\n * \n * Returns a unique ID for the given edge. The id is independent of the\n * edge direction and is built using the visible terminal of the given\n * edge.\n */\nmxParallelEdgeLayout.prototype.getEdgeId = function(edge)\n{\n\tvar view = this.graph.getView();\n\t\n\t// Cannot used cached visible terminal because this could be triggered in BEFORE_UNDO\n\tvar src = view.getVisibleTerminal(edge, true);\n\tvar trg = view.getVisibleTerminal(edge, false);\n\n\tif (src != null && trg != null)\n\t{\n\t\tsrc = mxObjectIdentity.get(src);\n\t\ttrg = mxObjectIdentity.get(trg);\n\t\t\n\t\treturn (src > trg) ? trg + '-' + src : src + '-' + trg;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: layout\n * \n * Lays out the parallel edges in the given array.\n */\nmxParallelEdgeLayout.prototype.layout = function(parallels)\n{\n\tvar edge = parallels[0];\n\tvar view = this.graph.getView();\n\tvar model = this.graph.getModel();\n\tvar src = model.getGeometry(view.getVisibleTerminal(edge, true));\n\tvar trg = model.getGeometry(view.getVisibleTerminal(edge, false));\n\t\n\t// Routes multiple loops\n\tif (src == trg)\n\t{\n\t\tvar x0 = src.x + src.width + this.spacing;\n\t\tvar y0 = src.y + src.height / 2;\n\n\t\tfor (var i = 0; i < parallels.length; i++)\n\t\t{\n\t\t\tthis.route(parallels[i], x0, y0);\n\t\t\tx0 += this.spacing;\n\t\t}\n\t}\n\telse if (src != null && trg != null)\n\t{\n\t\t// Routes parallel edges\n\t\tvar scx = src.x + src.width / 2;\n\t\tvar scy = src.y + src.height / 2;\n\t\t\n\t\tvar tcx = trg.x + trg.width / 2;\n\t\tvar tcy = trg.y + trg.height / 2;\n\t\t\n\t\tvar dx = tcx - scx;\n\t\tvar dy = tcy - scy;\n\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\t\n\t\tif (len > 0)\n\t\t{\n\t\t\tvar x0 = scx + dx / 2;\n\t\t\tvar y0 = scy + dy / 2;\n\t\t\t\n\t\t\tvar nx = dy * this.spacing / len;\n\t\t\tvar ny = dx * this.spacing / len;\n\t\t\t\n\t\t\tx0 += nx * (parallels.length - 1) / 2;\n\t\t\ty0 -= ny * (parallels.length - 1) / 2;\n\t\n\t\t\tfor (var i = 0; i < parallels.length; i++)\n\t\t\t{\n\t\t\t\tthis.route(parallels[i], x0, y0);\n\t\t\t\tx0 -= nx;\n\t\t\t\ty0 += ny;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: route\n * \n * Routes the given edge via the given point.\n */\nmxParallelEdgeLayout.prototype.route = function(edge, x, y)\n{\n\tif (this.graph.isCellMovable(edge))\n\t{\n\t\tthis.setEdgePoints(edge, [new mxPoint(x, y)]);\n\t}\n};\n\n__mxOutput.mxParallelEdgeLayout = typeof mxParallelEdgeLayout !== 'undefined' ? mxParallelEdgeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCompositeLayout\n * \n * Allows to compose multiple layouts into a single layout. The master layout\n * is the layout that handles move operations if another layout than the first\n * element in <layouts> should be used. The <master> layout is not executed as\n * the code assumes that it is part of <layouts>.\n * \n * Example:\n * (code)\n * var first = new mxFastOrganicLayout(graph);\n * var second = new mxParallelEdgeLayout(graph);\n * var layout = new mxCompositeLayout(graph, [first, second], first);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompositeLayout\n *\n * Constructs a new layout using the given layouts. The graph instance is\n * required for creating the transaction that contains all layouts.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * layouts - Array of <mxGraphLayouts>.\n * master - Optional layout that handles moves. If no layout is given then\n * the first layout of the above array is used to handle moves.\n */\nfunction mxCompositeLayout(graph, layouts, master)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.layouts = layouts;\n\tthis.master = master;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCompositeLayout.prototype = new mxGraphLayout();\nmxCompositeLayout.prototype.constructor = mxCompositeLayout;\n\t\n/**\n * Variable: layouts\n * \n * Holds the array of <mxGraphLayouts> that this layout contains.\n */\nmxCompositeLayout.prototype.layouts = null;\n\n/**\n * Variable: layouts\n * \n * Reference to the <mxGraphLayouts> that handles moves. If this is null\n * then the first layout in <layouts> is used.\n */\nmxCompositeLayout.prototype.master = null;\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell> by calling move on <master> or the first\n * layout in <layouts>.\n */\nmxCompositeLayout.prototype.moveCell = function(cell, x, y)\n{\n\tif (this.master != null)\n\t{\n\t\tthis.master.move.apply(this.master, arguments);\n\t}\n\telse\n\t{\n\t\tthis.layouts[0].move.apply(this.layouts[0], arguments);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute> by executing all <layouts> in a\n * single transaction.\n */\nmxCompositeLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < this.layouts.length; i++)\n\t\t{\n\t\t\tthis.layouts[i].execute.apply(this.layouts[i], arguments);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n__mxOutput.mxCompositeLayout = typeof mxCompositeLayout !== 'undefined' ? mxCompositeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEdgeLabelLayout\n * \n * Extends <mxGraphLayout> to implement an edge label layout. This layout\n * makes use of cell states, which means the graph must be validated in\n * a graph view (so that the label bounds are available) before this layout\n * can be executed.\n * \n * Example:\n * \n * (code)\n * var layout = new mxEdgeLabelLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxEdgeLabelLayout\n *\n * Constructs a new edge label layout.\n *\n * Arguments:\n * \n * graph - <mxGraph> that contains the cells.\n */\nfunction mxEdgeLabelLayout(graph, radius)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxEdgeLabelLayout.prototype = new mxGraphLayout();\nmxEdgeLabelLayout.prototype.constructor = mxEdgeLabelLayout;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxEdgeLabelLayout.prototype.execute = function(parent)\n{\n\tvar view = this.graph.view;\n\tvar model = this.graph.getModel();\n\t\n\t// Gets all vertices and edges inside the parent\n\tvar edges = [];\n\tvar vertices = [];\n\tvar childCount = model.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar cell = model.getChildAt(parent, i);\n\t\tvar state = view.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tif (!this.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\tvertices.push(state);\n\t\t\t}\n\t\t\telse if (!this.isEdgeIgnored(cell))\n\t\t\t{\n\t\t\t\tedges.push(state);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.placeLabels(vertices, edges);\n};\n\n/**\n * Function: placeLabels\n * \n * Places the labels of the given edges.\n */\nmxEdgeLabelLayout.prototype.placeLabels = function(v, e)\n{\n\tvar model = this.graph.getModel();\n\t\n\t// Moves the vertices to build a circle. Makes sure the\n\t// radius is large enough for the vertices to not\n\t// overlap\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < e.length; i++)\n\t\t{\n\t\t\tvar edge = e[i];\n\t\t\t\n\t\t\tif (edge != null && edge.text != null &&\n\t\t\t\tedge.text.boundingBox != null)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < v.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar vertex = v[j];\n\t\t\t\t\t\n\t\t\t\t\tif (vertex != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.avoid(edge, vertex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: avoid\n * \n * Places the labels of the given edges.\n */\nmxEdgeLabelLayout.prototype.avoid = function(edge, vertex)\n{\n\tvar model = this.graph.getModel();\n\tvar labRect = edge.text.boundingBox;\n\t\n\tif (mxUtils.intersects(labRect, vertex))\n\t{\n\t\tvar dy1 = -labRect.y - labRect.height + vertex.y;\n\t\tvar dy2 = -labRect.y + vertex.y + vertex.height;\n\t\t\n\t\tvar dy = (Math.abs(dy1) < Math.abs(dy2)) ? dy1 : dy2;\n\t\t\n\t\tvar dx1 = -labRect.x - labRect.width + vertex.x;\n\t\tvar dx2 = -labRect.x + vertex.x + vertex.width;\n\t\n\t\tvar dx = (Math.abs(dx1) < Math.abs(dx2)) ? dx1 : dx2;\n\t\t\n\t\tif (Math.abs(dx) < Math.abs(dy))\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t\n\t\tvar g = model.getGeometry(edge.cell);\n\t\t\n\t\tif (g != null)\n\t\t{\n\t\t\tg = g.clone();\n\t\t\t\n\t\t\tif (g.offset != null)\n\t\t\t{\n\t\t\t\tg.offset.x += dx;\n\t\t\t\tg.offset.y += dy;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tg.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\t\n\t\t\tmodel.setGeometry(edge.cell, g);\n\t\t}\n\t}\n};\n\n__mxOutput.mxEdgeLabelLayout = typeof mxEdgeLabelLayout !== 'undefined' ? mxEdgeLabelLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphAbstractHierarchyCell\n * \n * An abstraction of an internal hierarchy node or edge\n * \n * Constructor: mxGraphAbstractHierarchyCell\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxGraphAbstractHierarchyCell()\n{\n\tthis.x = [];\n\tthis.y = [];\n\tthis.temp = [];\n};\n\n/**\n * Variable: maxRank\n * \n * The maximum rank this cell occupies. Default is -1.\n */\nmxGraphAbstractHierarchyCell.prototype.maxRank = -1;\n\n/**\n * Variable: minRank\n * \n * The minimum rank this cell occupies. Default is -1.\n */\nmxGraphAbstractHierarchyCell.prototype.minRank = -1;\n\n/**\n * Variable: x\n * \n * The x position of this cell for each layer it occupies\n */\nmxGraphAbstractHierarchyCell.prototype.x = null;\n\n/**\n * Variable: y\n * \n * The y position of this cell for each layer it occupies\n */\nmxGraphAbstractHierarchyCell.prototype.y = null;\n\n/**\n * Variable: width\n * \n * The width of this cell\n */\nmxGraphAbstractHierarchyCell.prototype.width = 0;\n\n/**\n * Variable: height\n * \n * The height of this cell\n */\nmxGraphAbstractHierarchyCell.prototype.height = 0;\n\n/**\n * Variable: nextLayerConnectedCells\n * \n * A cached version of the cells this cell connects to on the next layer up\n */\nmxGraphAbstractHierarchyCell.prototype.nextLayerConnectedCells = null;\n\n/**\n * Variable: previousLayerConnectedCells\n * \n * A cached version of the cells this cell connects to on the next layer down\n */\nmxGraphAbstractHierarchyCell.prototype.previousLayerConnectedCells = null;\n\n/**\n * Variable: temp\n * \n * Temporary variable for general use. Generally, try to avoid\n * carrying information between stages. Currently, the longest\n * path layering sets temp to the rank position in fixRanks()\n * and the crossing reduction uses this. This meant temp couldn't\n * be used for hashing the nodes in the model dfs and so hashCode\n * was created\n */\nmxGraphAbstractHierarchyCell.prototype.temp = null;\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphAbstractHierarchyCell.prototype.getNextLayerConnectedCells = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphAbstractHierarchyCell.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: isEdge\n * \n * Returns whether or not this cell is an edge\n */\nmxGraphAbstractHierarchyCell.prototype.isEdge = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isVertex\n * \n * Returns whether or not this cell is a node\n */\nmxGraphAbstractHierarchyCell.prototype.isVertex = function()\n{\n\treturn false;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\treturn null;\n};\n\n/**\n * Function: setX\n * \n * Set the value of x for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setX = function(layer, value)\n{\n\tif (this.isVertex())\n\t{\n\t\tthis.x[0] = value;\n\t}\n\telse if (this.isEdge())\n\t{\n\t\tthis.x[layer - this.minRank - 1] = value;\n\t}\n};\n\n/**\n * Function: getX\n * \n * Gets the value of x on the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.getX = function(layer)\n{\n\tif (this.isVertex())\n\t{\n\t\treturn this.x[0];\n\t}\n\telse if (this.isEdge())\n\t{\n\t\treturn this.x[layer - this.minRank - 1];\n\t}\n\n\treturn 0.0;\n};\n\n/**\n * Function: setY\n * \n * Set the value of y for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setY = function(layer, value)\n{\n\tif (this.isVertex())\n\t{\n\t\tthis.y[0] = value;\n\t}\n\telse if (this.isEdge())\n\t{\n\t\tthis.y[layer -this. minRank - 1] = value;\n\t}\n};\n\n__mxOutput.mxGraphAbstractHierarchyCell = typeof mxGraphAbstractHierarchyCell !== 'undefined' ? mxGraphAbstractHierarchyCell : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyNode\n * \n * An abstraction of a hierarchical edge for the hierarchy layout\n * \n * Constructor: mxGraphHierarchyNode\n *\n * Constructs an internal node to represent the specified real graph cell\n *\n * Arguments:\n * \n * cell - the real graph cell this node represents\n */\nfunction mxGraphHierarchyNode(cell)\n{\n\tmxGraphAbstractHierarchyCell.apply(this, arguments);\n\tthis.cell = cell;\n\tthis.id = mxObjectIdentity.get(cell);\n\tthis.connectsAsTarget = [];\n\tthis.connectsAsSource = [];\n};\n\n/**\n * Extends mxGraphAbstractHierarchyCell.\n */\nmxGraphHierarchyNode.prototype = new mxGraphAbstractHierarchyCell();\nmxGraphHierarchyNode.prototype.constructor = mxGraphHierarchyNode;\n\n/**\n * Variable: cell\n * \n * The graph cell this object represents.\n */\nmxGraphHierarchyNode.prototype.cell = null;\n\n/**\n * Variable: id\n * \n * The object identity of the wrapped cell\n */\nmxGraphHierarchyNode.prototype.id = null;\n\n/**\n * Variable: connectsAsTarget\n * \n * Collection of hierarchy edges that have this node as a target\n */\nmxGraphHierarchyNode.prototype.connectsAsTarget = null;\n\n/**\n * Variable: connectsAsSource\n * \n * Collection of hierarchy edges that have this node as a source\n */\nmxGraphHierarchyNode.prototype.connectsAsSource = null;\n\n/**\n * Variable: hashCode\n * \n * Assigns a unique hashcode for each node. Used by the model dfs instead\n * of copying HashSets\n */\nmxGraphHierarchyNode.prototype.hashCode = false;\n\n/**\n * Function: getRankValue\n * \n * Returns the integer value of the layer that this node resides in\n */\nmxGraphHierarchyNode.prototype.getRankValue = function(layer)\n{\n\treturn this.maxRank;\n};\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphHierarchyNode.prototype.getNextLayerConnectedCells = function(layer)\n{\n\tif (this.nextLayerConnectedCells == null)\n\t{\n\t\tthis.nextLayerConnectedCells = [];\n\t\tthis.nextLayerConnectedCells[0] = [];\n\t\t\n\t\tfor (var i = 0; i < this.connectsAsTarget.length; i++)\n\t\t{\n\t\t\tvar edge = this.connectsAsTarget[i];\n\n\t\t\tif (edge.maxRank == -1 || edge.maxRank == layer + 1)\n\t\t\t{\n\t\t\t\t// Either edge is not in any rank or\n\t\t\t\t// no dummy nodes in edge, add node of other side of edge\n\t\t\t\tthis.nextLayerConnectedCells[0].push(edge.source);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Edge spans at least two layers, add edge\n\t\t\t\tthis.nextLayerConnectedCells[0].push(edge);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.nextLayerConnectedCells[0];\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphHierarchyNode.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\tif (this.previousLayerConnectedCells == null)\n\t{\n\t\tthis.previousLayerConnectedCells = [];\n\t\tthis.previousLayerConnectedCells[0] = [];\n\t\t\n\t\tfor (var i = 0; i < this.connectsAsSource.length; i++)\n\t\t{\n\t\t\tvar edge = this.connectsAsSource[i];\n\n\t\t\tif (edge.minRank == -1 || edge.minRank == layer - 1)\n\t\t\t{\n\t\t\t\t// No dummy nodes in edge, add node of other side of edge\n\t\t\t\tthis.previousLayerConnectedCells[0].push(edge.target);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Edge spans at least two layers, add edge\n\t\t\t\tthis.previousLayerConnectedCells[0].push(edge);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.previousLayerConnectedCells[0];\n};\n\n/**\n * Function: isVertex\n * \n * Returns true.\n */\nmxGraphHierarchyNode.prototype.isVertex = function()\n{\n\treturn true;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphHierarchyNode.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn this.temp[0];\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphHierarchyNode.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\tthis.temp[0] = value;\n};\n\n/**\n * Function: isAncestor\n */\nmxGraphHierarchyNode.prototype.isAncestor = function(otherNode)\n{\n\t// Firstly, the hash code of this node needs to be shorter than the\n\t// other node\n\tif (otherNode != null && this.hashCode != null && otherNode.hashCode != null\n\t\t\t&& this.hashCode.length < otherNode.hashCode.length)\n\t{\n\t\tif (this.hashCode == otherNode.hashCode)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tif (this.hashCode == null || this.hashCode == null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// Secondly, this hash code must match the start of the other\n\t\t// node's hash code. Arrays.equals cannot be used here since\n\t\t// the arrays are different length, and we do not want to\n\t\t// perform another array copy.\n\t\tfor (var i = 0; i < this.hashCode.length; i++)\n\t\t{\n\t\t\tif (this.hashCode[i] != otherNode.hashCode[i])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n/**\n * Function: getCoreCell\n * \n * Gets the core vertex associated with this wrapper\n */\nmxGraphHierarchyNode.prototype.getCoreCell = function()\n{\n\treturn this.cell;\n};\n\n__mxOutput.mxGraphHierarchyNode = typeof mxGraphHierarchyNode !== 'undefined' ? mxGraphHierarchyNode : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyEdge\n * \n * An abstraction of a hierarchical edge for the hierarchy layout\n * \n * Constructor: mxGraphHierarchyEdge\n *\n * Constructs a hierarchy edge\n *\n * Arguments:\n * \n * edges - a list of real graph edges this abstraction represents\n */\nfunction mxGraphHierarchyEdge(edges)\n{\n\tmxGraphAbstractHierarchyCell.apply(this, arguments);\n\tthis.edges = edges;\n\tthis.ids = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tthis.ids.push(mxObjectIdentity.get(edges[i]));\n\t}\n};\n\n/**\n * Extends mxGraphAbstractHierarchyCell.\n */\nmxGraphHierarchyEdge.prototype = new mxGraphAbstractHierarchyCell();\nmxGraphHierarchyEdge.prototype.constructor = mxGraphHierarchyEdge;\n\n/**\n * Variable: edges\n * \n * The graph edge(s) this object represents. Parallel edges are all grouped\n * together within one hierarchy edge.\n */\nmxGraphHierarchyEdge.prototype.edges = null;\n\n/**\n * Variable: ids\n * \n * The object identities of the wrapped cells\n */\nmxGraphHierarchyEdge.prototype.ids = null;\n\n/**\n * Variable: source\n * \n * The node this edge is sourced at\n */\nmxGraphHierarchyEdge.prototype.source = null;\n\n/**\n * Variable: target\n * \n * The node this edge targets\n */\nmxGraphHierarchyEdge.prototype.target = null;\n\n/**\n * Variable: isReversed\n * \n * Whether or not the direction of this edge has been reversed\n * internally to create a DAG for the hierarchical layout\n */\nmxGraphHierarchyEdge.prototype.isReversed = false;\n\n/**\n * Function: invert\n * \n * Inverts the direction of this internal edge(s)\n */\nmxGraphHierarchyEdge.prototype.invert = function(layer)\n{\n\tvar temp = this.source;\n\tthis.source = this.target;\n\tthis.target = temp;\n\tthis.isReversed = !this.isReversed;\n};\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphHierarchyEdge.prototype.getNextLayerConnectedCells = function(layer)\n{\n\tif (this.nextLayerConnectedCells == null)\n\t{\n\t\tthis.nextLayerConnectedCells = [];\n\t\t\n\t\tfor (var i = 0; i < this.temp.length; i++)\n\t\t{\n\t\t\tthis.nextLayerConnectedCells[i] = [];\n\t\t\t\n\t\t\tif (i == this.temp.length - 1)\n\t\t\t{\n\t\t\t\tthis.nextLayerConnectedCells[i].push(this.source);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.nextLayerConnectedCells[i].push(this);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this.nextLayerConnectedCells[layer - this.minRank - 1];\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphHierarchyEdge.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\tif (this.previousLayerConnectedCells == null)\n\t{\n\t\tthis.previousLayerConnectedCells = [];\n\n\t\tfor (var i = 0; i < this.temp.length; i++)\n\t\t{\n\t\t\tthis.previousLayerConnectedCells[i] = [];\n\t\t\t\n\t\t\tif (i == 0)\n\t\t\t{\n\t\t\t\tthis.previousLayerConnectedCells[i].push(this.target);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.previousLayerConnectedCells[i].push(this);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.previousLayerConnectedCells[layer - this.minRank - 1];\n};\n\n/**\n * Function: isEdge\n * \n * Returns true.\n */\nmxGraphHierarchyEdge.prototype.isEdge = function()\n{\n\treturn true;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphHierarchyEdge.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn this.temp[layer - this.minRank - 1];\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphHierarchyEdge.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\tthis.temp[layer - this.minRank - 1] = value;\n};\n\n/**\n * Function: getCoreCell\n * \n * Gets the first core edge associated with this wrapper\n */\nmxGraphHierarchyEdge.prototype.getCoreCell = function()\n{\n\tif (this.edges != null && this.edges.length > 0)\n\t{\n\t\treturn this.edges[0];\n\t}\n\t\n\treturn null;\n};\n\n__mxOutput.mxGraphHierarchyEdge = typeof mxGraphHierarchyEdge !== 'undefined' ? mxGraphHierarchyEdge : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyModel\n *\n * Internal model of a hierarchical graph. This model stores nodes and edges\n * equivalent to the real graph nodes and edges, but also stores the rank of the\n * cells, the order within the ranks and the new candidate locations of cells.\n * The internal model also reverses edge direction were appropriate , ignores\n * self-loop and groups parallels together under one edge object.\n *\n * Constructor: mxGraphHierarchyModel\n *\n * Creates an internal ordered graph model using the vertices passed in. If\n * there are any, leftward edge need to be inverted in the internal model\n *\n * Arguments:\n *\n * graph - the facade describing the graph to be operated on\n * vertices - the vertices for this hierarchy\n * ordered - whether or not the vertices are already ordered\n * deterministic - whether or not this layout should be deterministic on each\n * tightenToSource - whether or not to tighten vertices towards the sources\n * scanRanksFromSinks - Whether rank assignment is from the sinks or sources.\n * usage\n */\nfunction mxGraphHierarchyModel(layout, vertices, roots, parent, tightenToSource)\n{\n\tvar graph = layout.getGraph();\n\tthis.tightenToSource = tightenToSource;\n\tthis.roots = roots;\n\tthis.parent = parent;\n\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly\n\tthis.vertexMapper = new mxDictionary();\n\tthis.edgeMapper = new mxDictionary();\n\tthis.maxRank = 0;\n\tvar internalVertices = [];\n\n\tif (vertices == null)\n\t{\n\t\tvertices = this.graph.getChildVertices(parent);\n\t}\n\n\tthis.maxRank = this.SOURCESCANSTARTRANK;\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly. Guess size by number\n\t// of edges is roughly same as number of vertices.\n\tthis.createInternalCells(layout, vertices, internalVertices);\n\n\t// Go through edges set their sink values. Also check the\n\t// ordering if and invert edges if necessary\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tvar edges = internalVertices[i].connectsAsSource;\n\n\t\tfor (var j = 0; j < edges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = edges[j];\n\t\t\tvar realEdges = internalEdge.edges;\n\n\t\t\t// Only need to process the first real edge, since\n\t\t\t// all the edges connect to the same other vertex\n\t\t\tif (realEdges != null && realEdges.length > 0)\n\t\t\t{\n\t\t\t\tvar realEdge = realEdges[0];\n\t\t\t\tvar targetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\trealEdge, false);\n\t\t\t\tvar internalTargetCell = this.vertexMapper.get(targetCell);\n\n\t\t\t\tif (internalVertices[i] == internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\t// If there are parallel edges going between two vertices and not all are in the same direction\n\t\t\t\t\t// you can have navigated across one direction when doing the cycle reversal that isn't the same\n\t\t\t\t\t// direction as the first real edge in the array above. When that happens the if above catches\n\t\t\t\t\t// that and we correct the target cell before continuing.\n\t\t\t\t\t// This branch only detects this single case\n\t\t\t\t\ttargetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\t\trealEdge, true);\n\t\t\t\t\tinternalTargetCell = this.vertexMapper.get(targetCell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (internalTargetCell != null\n\t\t\t\t\t\t&& internalVertices[i] != internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\tinternalEdge.target = internalTargetCell;\n\n\t\t\t\t\tif (internalTargetCell.connectsAsTarget.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.indexOf(internalTargetCell.connectsAsTarget, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Use the temp variable in the internal nodes to mark this\n\t\t// internal vertex as having been visited.\n\t\tinternalVertices[i].temp[0] = 1;\n\t}\n};\n\n/**\n * Variable: maxRank\n *\n * Stores the largest rank number allocated\n */\nmxGraphHierarchyModel.prototype.maxRank = null;\n\n/**\n * Variable: vertexMapper\n *\n * Map from graph vertices to internal model nodes.\n */\nmxGraphHierarchyModel.prototype.vertexMapper = null;\n\n/**\n * Variable: edgeMapper\n *\n * Map from graph edges to internal model edges\n */\nmxGraphHierarchyModel.prototype.edgeMapper = null;\n\n/**\n * Variable: ranks\n *\n * Mapping from rank number to actual rank\n */\nmxGraphHierarchyModel.prototype.ranks = null;\n\n/**\n * Variable: roots\n *\n * Store of roots of this hierarchy model, these are real graph cells, not\n * internal cells\n */\nmxGraphHierarchyModel.prototype.roots = null;\n\n/**\n * Variable: parent\n *\n * The parent cell whose children are being laid out\n */\nmxGraphHierarchyModel.prototype.parent = null;\n\n/**\n * Variable: dfsCount\n *\n * Count of the number of times the ancestor dfs has been used.\n */\nmxGraphHierarchyModel.prototype.dfsCount = 0;\n\n/**\n * Variable: SOURCESCANSTARTRANK\n *\n * High value to start source layering scan rank value from.\n */\nmxGraphHierarchyModel.prototype.SOURCESCANSTARTRANK = 100000000;\n\n/**\n * Variable: tightenToSource\n *\n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxGraphHierarchyModel.prototype.tightenToSource = false;\n\n/**\n * Function: createInternalCells\n *\n * Creates all edges in the internal model\n *\n * Parameters:\n *\n * layout - Reference to the <mxHierarchicalLayout> algorithm.\n * vertices - Array of <mxCells> that represent the vertices whom are to\n * have an internal representation created.\n * internalVertices - The array of <mxGraphHierarchyNodes> to have their\n * information filled in using the real vertices.\n */\nmxGraphHierarchyModel.prototype.createInternalCells = function(layout, vertices, internalVertices)\n{\n\tvar graph = layout.getGraph();\n\n\t// Create internal edges\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tinternalVertices[i] = new mxGraphHierarchyNode(vertices[i]);\n\t\tthis.vertexMapper.put(vertices[i], internalVertices[i]);\n\n\t\t// If the layout is deterministic, order the cells\n\t\t//List outgoingCells = graph.getNeighbours(vertices[i], deterministic);\n\t\tvar conns = layout.getEdges(vertices[i]);\n\t\tinternalVertices[i].connectsAsSource = [];\n\n\t\t// Create internal edges, but don't do any rank assignment yet\n\t\t// First use the information from the greedy cycle remover to\n\t\t// invert the leftward edges internally\n\t\tfor (var j = 0; j < conns.length; j++)\n\t\t{\n\t\t\tvar cell = layout.getVisibleTerminal(conns[j], false);\n\n\t\t\t// Looking for outgoing edges only\n\t\t\tif (cell != vertices[i] && layout.graph.model.isVertex(cell) &&\n\t\t\t\t\t!layout.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\t// We process all edge between this source and its targets\n\t\t\t\t// If there are edges going both ways, we need to collect\n\t\t\t\t// them all into one internal edges to avoid looping problems\n\t\t\t\t// later. We assume this direction (source -> target) is the \n\t\t\t\t// natural direction if at least half the edges are going in\n\t\t\t\t// that direction.\n\n\t\t\t\t// The check below for edges[0] being in the vertex mapper is\n\t\t\t\t// in case we've processed this the other way around\n\t\t\t\t// (target -> source) and the number of edges in each direction\n\t\t\t\t// are the same. All the graph edges will have been assigned to\n\t\t\t\t// an internal edge going the other way, so we don't want to \n\t\t\t\t// process them again\n\t\t\t\tvar undirectedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, false);\n\t\t\t\tvar directedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, true);\n\t\t\t\t\n\t\t\t\tif (undirectedEdges != null &&\n\t\t\t\t\t\tundirectedEdges.length > 0 &&\n\t\t\t\t\t\tthis.edgeMapper.get(undirectedEdges[0]) == null &&\n\t\t\t\t\t\tdirectedEdges.length * 2 >= undirectedEdges.length)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = new mxGraphHierarchyEdge(undirectedEdges);\n\n\t\t\t\t\tfor (var k = 0; k < undirectedEdges.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar edge = undirectedEdges[k];\n\t\t\t\t\t\tthis.edgeMapper.put(edge, internalEdge);\n\n\t\t\t\t\t\t// Resets all point on the edge and disables the edge style\n\t\t\t\t\t\t// without deleting it from the cell style\n\t\t\t\t\t\tgraph.resetEdge(edge);\n\n\t\t\t\t\t    if (layout.disableEdgeStyle)\n\t\t\t\t\t    {\n\t\t\t\t\t    \tlayout.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\t    \tlayout.setOrthogonalEdge(edge,true);\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\n\t\t\t\t\tinternalEdge.source = internalVertices[i];\n\n\t\t\t\t\tif (mxUtils.indexOf(internalVertices[i].connectsAsSource, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalVertices[i].connectsAsSource.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Ensure temp variable is cleared from any previous use\n\t\tinternalVertices[i].temp[0] = 0;\n\t}\n};\n\n/**\n * Function: initialRank\n *\n * Basic determination of minimum layer ranking by working from from sources\n * or sinks and working through each node in the relevant edge direction.\n * Starting at the sinks is basically a longest path layering algorithm.\n*/\nmxGraphHierarchyModel.prototype.initialRank = function()\n{\n\tvar startNodes = [];\n\n\tif (this.roots != null)\n\t{\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar internalNode = this.vertexMapper.get(this.roots[i]);\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tstartNodes.push(internalNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar internalNodes = this.vertexMapper.getValues();\n\t\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] = -1;\n\t}\n\n\tvar startNodesCopy = startNodes.slice();\n\n\twhile (startNodes.length > 0)\n\t{\n\t\tvar internalNode = startNodes[0];\n\t\tvar layerDeterminingEdges;\n\t\tvar edgesToBeMarked;\n\n\t\tlayerDeterminingEdges = internalNode.connectsAsTarget;\n\t\tedgesToBeMarked = internalNode.connectsAsSource;\n\n\t\t// flag to keep track of whether or not all layer determining\n\t\t// edges have been scanned\n\t\tvar allEdgesScanned = true;\n\n\t\t// Work out the layer of this node from the layer determining\n\t\t// edges. The minimum layer number of any node connected by one of\n\t\t// the layer determining edges variable\n\t\tvar minimumLayer = this.SOURCESCANSTARTRANK;\n\n\t\tfor (var i = 0; i < layerDeterminingEdges.length; i++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[i];\n\n\t\t\tif (internalEdge.temp[0] == 5270620)\n\t\t\t{\n\t\t\t\t// This edge has been scanned, get the layer of the\n\t\t\t\t// node on the other end\n\t\t\t\tvar otherNode = internalEdge.source;\n\t\t\t\tminimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tallEdgesScanned = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If all edge have been scanned, assign the layer, mark all\n\t\t// edges in the other direction and remove from the nodes list\n\t\tif (allEdgesScanned)\n\t\t{\n\t\t\tinternalNode.temp[0] = minimumLayer;\n\t\t\tthis.maxRank = Math.min(this.maxRank, minimumLayer);\n\n\t\t\tif (edgesToBeMarked != null)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < edgesToBeMarked.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = edgesToBeMarked[i];\n\n\t\t\t\t\t// Assign unique stamp ( y/m/d/h )\n\t\t\t\t\tinternalEdge.temp[0] = 5270620;\n\n\t\t\t\t\t// Add node on other end of edge to LinkedList of\n\t\t\t\t\t// nodes to be analysed\n\t\t\t\t\tvar otherNode = internalEdge.target;\n\n\t\t\t\t\t// Only add node if it hasn't been assigned a layer\n\t\t\t\t\tif (otherNode.temp[0] == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tstartNodes.push(otherNode);\n\n\t\t\t\t\t\t// Mark this other node as neither being\n\t\t\t\t\t\t// unassigned nor assigned so it isn't\n\t\t\t\t\t\t// added to this list again, but it's\n\t\t\t\t\t\t// layer isn't used in any calculation.\n\t\t\t\t\t\totherNode.temp[0] = -2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartNodes.shift();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Not all the edges have been scanned, get to the back of\n\t\t\t// the class and put the dunces cap on\n\t\t\tvar removedCell = startNodes.shift();\n\t\t\tstartNodes.push(internalNode);\n\n\t\t\tif (removedCell == internalNode && startNodes.length == 1)\n\t\t\t{\n\t\t\t\t// This is an error condition, we can't get out of\n\t\t\t\t// this loop. It could happen for more than one node\n\t\t\t\t// but that's a lot harder to detect. Log the error\n\t\t\t\t// TODO make log comment\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize the ranks down from their large starting value to place\n\t// at least 1 sink on layer 0\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] -= this.maxRank;\n\t}\n\t\n\t// Tighten the rank 0 nodes as far as possible\n\tfor ( var i = 0; i < startNodesCopy.length; i++)\n\t{\n\t\tvar internalNode = startNodesCopy[i];\n\t\tvar currentMaxLayer = 0;\n\t\tvar layerDeterminingEdges = internalNode.connectsAsSource;\n\n\t\tfor ( var j = 0; j < layerDeterminingEdges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[j];\n\t\t\tvar otherNode = internalEdge.target;\n\t\t\tinternalNode.temp[0] = Math.max(currentMaxLayer,\n\t\t\t\t\totherNode.temp[0] + 1);\n\t\t\tcurrentMaxLayer = internalNode.temp[0];\n\t\t}\n\t}\n\t\n\t// Reset the maxRank to that which would be expected for a from-sink\n\t// scan\n\tthis.maxRank = this.SOURCESCANSTARTRANK - this.maxRank;\n};\n\n/**\n * Function: fixRanks\n *\n * Fixes the layer assignments to the values stored in the nodes. Also needs\n * to create dummy nodes for edges that cross layers.\n */\nmxGraphHierarchyModel.prototype.fixRanks = function()\n{\n\tvar rankList = [];\n\tthis.ranks = [];\n\n\tfor (var i = 0; i < this.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tthis.ranks[i] = rankList[i];\n\t}\n\n\t// Perform a DFS to obtain an initial ordering for each rank.\n\t// Without doing this you would end up having to process\n\t// crossings for a standard tree.\n\tvar rootsArray = null;\n\n\tif (this.roots != null)\n\t{\n\t\tvar oldRootsArray = this.roots;\n\t\trootsArray = [];\n\n\t\tfor (var i = 0; i < oldRootsArray.length; i++)\n\t\t{\n\t\t\tvar cell = oldRootsArray[i];\n\t\t\tvar internalNode = this.vertexMapper.get(cell);\n\t\t\trootsArray[i] = internalNode;\n\t\t}\n\t}\n\n\tthis.visit(function(parent, node, edge, layer, seen)\n\t{\n\t\tif (seen == 0 && node.maxRank < 0 && node.minRank < 0)\n\t\t{\n\t\t\trankList[node.temp[0]].push(node);\n\t\t\tnode.maxRank = node.temp[0];\n\t\t\tnode.minRank = node.temp[0];\n\n\t\t\t// Set temp[0] to the nodes position in the rank\n\t\t\tnode.temp[0] = rankList[node.maxRank].length - 1;\n\t\t}\n\n\t\tif (parent != null && edge != null)\n\t\t{\n\t\t\tvar parentToCellRankDifference = parent.maxRank - node.maxRank;\n\n\t\t\tif (parentToCellRankDifference > 1)\n\t\t\t{\n\t\t\t\t// There are ranks in between the parent and current cell\n\t\t\t\tedge.maxRank = parent.maxRank;\n\t\t\t\tedge.minRank = node.maxRank;\n\t\t\t\tedge.temp = [];\n\t\t\t\tedge.x = [];\n\t\t\t\tedge.y = [];\n\n\t\t\t\tfor (var i = edge.minRank + 1; i < edge.maxRank; i++)\n\t\t\t\t{\n\t\t\t\t\t// The connecting edge must be added to the\n\t\t\t\t\t// appropriate ranks\n\t\t\t\t\trankList[i].push(edge);\n\t\t\t\t\tedge.setGeneralPurposeVariable(i, rankList[i]\n\t\t\t\t\t\t\t.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, rootsArray, false, null);\n};\n\n/**\n * Function: visit\n *\n * A depth first search through the internal heirarchy model.\n *\n * Parameters:\n *\n * visitor - The visitor function pattern to be called for each node.\n * trackAncestors - Whether or not the search is to keep track all nodes\n * directly above this one in the search path.\n */\nmxGraphHierarchyModel.prototype.visit = function(visitor, dfsRoots, trackAncestors, seenNodes)\n{\n\t// Run dfs through on all roots\n\tif (dfsRoots != null)\n\t{\n\t\tfor (var i = 0; i < dfsRoots.length; i++)\n\t\t{\n\t\t\tvar internalNode = dfsRoots[i];\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tif (seenNodes == null)\n\t\t\t\t{\n\t\t\t\t\tseenNodes = new Object();\n\t\t\t\t}\n\n\t\t\t\tif (trackAncestors)\n\t\t\t\t{\n\t\t\t\t\t// Set up hash code for root\n\t\t\t\t\tinternalNode.hashCode = [];\n\t\t\t\t\tinternalNode.hashCode[0] = this.dfsCount;\n\t\t\t\t\tinternalNode.hashCode[1] = i;\n\t\t\t\t\tthis.extendedDfs(null, internalNode, null, visitor, seenNodes,\n\t\t\t\t\t\t\tinternalNode.hashCode, i, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.dfs(null, internalNode, null, visitor, seenNodes, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dfsCount++;\n\t}\n};\n\n/**\n * Function: dfs\n *\n * Performs a depth first search on the internal hierarchy model\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs a set of all of the\n * ancestor node of the current node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxGraphHierarchyModel.prototype.dfs = function(parent, root, connectingEdge, visitor, seen, layer)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\t\n\t\t\tfor (var i = 0; i< outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.dfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\tlayer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendedDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of cells ancestors, but it\n * should be only used when necessary because of it can be computationally\n * intensive for deep searches.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs\n * ancestors - the parent hash code\n * childHash - the new hash code for this node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxGraphHierarchyModel.prototype.extendedDfs = function(parent, root, connectingEdge, visitor, seen, ancestors, childHash, layer)\n{\n\t// Explanation of custom hash set. Previously, the ancestors variable\n\t// was passed through the dfs as a HashSet. The ancestors were copied\n\t// into a new HashSet and when the new child was processed it was also\n\t// added to the set. If the current node was in its ancestor list it\n\t// meant there is a cycle in the graph and this information is passed\n\t// to the visitor.visit() in the seen parameter. The HashSet clone was\n\t// very expensive on CPU so a custom hash was developed using primitive\n\t// types. temp[] couldn't be used so hashCode[] was added to each node.\n\t// Each new child adds another int to the array, copying the prefix\n\t// from its parent. Child of the same parent add different ints (the\n\t// limit is therefore 2^32 children per parent...). If a node has a\n\t// child with the hashCode already set then the child code is compared\n\t// to the same portion of the current nodes array. If they match there\n\t// is a loop.\n\t// Note that the basic mechanism would only allow for 1 use of this\n\t// functionality, so the root nodes have two ints. The second int is\n\t// incremented through each node root and the first is incremented\n\t// through each run of the dfs algorithm (therefore the dfs is not\n\t// thread safe). The hash code of each node is set if not already set,\n\t// or if the first int does not match that of the current run.\n\tif (root != null)\n\t{\n\t\tif (parent != null)\n\t\t{\n\t\t\t// Form this nodes hash code if necessary, that is, if the\n\t\t\t// hashCode variable has not been initialized or if the\n\t\t\t// start of the parent hash code does not equal the start of\n\t\t\t// this nodes hash code, indicating the code was set on a\n\t\t\t// previous run of this dfs.\n\t\t\tif (root.hashCode == null ||\n\t\t\t\troot.hashCode[0] != parent.hashCode[0])\n\t\t\t{\n\t\t\t\tvar hashCodeLength = parent.hashCode.length + 1;\n\t\t\t\troot.hashCode = parent.hashCode.slice();\n\t\t\t\troot.hashCode[hashCodeLength - 1] = childHash;\n\t\t\t}\n\t\t}\n\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n__mxOutput.mxGraphHierarchyModel = typeof mxGraphHierarchyModel !== 'undefined' ? mxGraphHierarchyModel : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneModel\n *\n * Internal model of a hierarchical graph. This model stores nodes and edges\n * equivalent to the real graph nodes and edges, but also stores the rank of the\n * cells, the order within the ranks and the new candidate locations of cells.\n * The internal model also reverses edge direction were appropriate , ignores\n * self-loop and groups parallels together under one edge object.\n *\n * Constructor: mxSwimlaneModel\n *\n * Creates an internal ordered graph model using the vertices passed in. If\n * there are any, leftward edge need to be inverted in the internal model\n *\n * Arguments:\n *\n * graph - the facade describing the graph to be operated on\n * vertices - the vertices for this hierarchy\n * ordered - whether or not the vertices are already ordered\n * deterministic - whether or not this layout should be deterministic on each\n * tightenToSource - whether or not to tighten vertices towards the sources\n * scanRanksFromSinks - Whether rank assignment is from the sinks or sources.\n * usage\n */\nfunction mxSwimlaneModel(layout, vertices, roots, parent, tightenToSource)\n{\n\tvar graph = layout.getGraph();\n\tthis.tightenToSource = tightenToSource;\n\tthis.roots = roots;\n\tthis.parent = parent;\n\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly\n\tthis.vertexMapper = new mxDictionary();\n\tthis.edgeMapper = new mxDictionary();\n\tthis.maxRank = 0;\n\tvar internalVertices = [];\n\n\tif (vertices == null)\n\t{\n\t\tvertices = this.graph.getChildVertices(parent);\n\t}\n\n\tthis.maxRank = this.SOURCESCANSTARTRANK;\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly. Guess size by number\n\t// of edges is roughly same as number of vertices.\n\tthis.createInternalCells(layout, vertices, internalVertices);\n\n\t// Go through edges set their sink values. Also check the\n\t// ordering if and invert edges if necessary\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tvar edges = internalVertices[i].connectsAsSource;\n\n\t\tfor (var j = 0; j < edges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = edges[j];\n\t\t\tvar realEdges = internalEdge.edges;\n\n\t\t\t// Only need to process the first real edge, since\n\t\t\t// all the edges connect to the same other vertex\n\t\t\tif (realEdges != null && realEdges.length > 0)\n\t\t\t{\n\t\t\t\tvar realEdge = realEdges[0];\n\t\t\t\tvar targetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\trealEdge, false);\n\t\t\t\tvar internalTargetCell = this.vertexMapper.get(targetCell);\n\n\t\t\t\tif (internalVertices[i] == internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\t// If there are parallel edges going between two vertices and not all are in the same direction\n\t\t\t\t\t// you can have navigated across one direction when doing the cycle reversal that isn't the same\n\t\t\t\t\t// direction as the first real edge in the array above. When that happens the if above catches\n\t\t\t\t\t// that and we correct the target cell before continuing.\n\t\t\t\t\t// This branch only detects this single case\n\t\t\t\t\ttargetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\t\trealEdge, true);\n\t\t\t\t\tinternalTargetCell = this.vertexMapper.get(targetCell);\n\t\t\t\t}\n\n\t\t\t\tif (internalTargetCell != null\n\t\t\t\t\t\t&& internalVertices[i] != internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\tinternalEdge.target = internalTargetCell;\n\n\t\t\t\t\tif (internalTargetCell.connectsAsTarget.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.indexOf(internalTargetCell.connectsAsTarget, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Use the temp variable in the internal nodes to mark this\n\t\t// internal vertex as having been visited.\n\t\tinternalVertices[i].temp[0] = 1;\n\t}\n};\n\n/**\n * Variable: maxRank\n *\n * Stores the largest rank number allocated\n */\nmxSwimlaneModel.prototype.maxRank = null;\n\n/**\n * Variable: vertexMapper\n *\n * Map from graph vertices to internal model nodes.\n */\nmxSwimlaneModel.prototype.vertexMapper = null;\n\n/**\n * Variable: edgeMapper\n *\n * Map from graph edges to internal model edges\n */\nmxSwimlaneModel.prototype.edgeMapper = null;\n\n/**\n * Variable: ranks\n *\n * Mapping from rank number to actual rank\n */\nmxSwimlaneModel.prototype.ranks = null;\n\n/**\n * Variable: roots\n *\n * Store of roots of this hierarchy model, these are real graph cells, not\n * internal cells\n */\nmxSwimlaneModel.prototype.roots = null;\n\n/**\n * Variable: parent\n *\n * The parent cell whose children are being laid out\n */\nmxSwimlaneModel.prototype.parent = null;\n\n/**\n * Variable: dfsCount\n *\n * Count of the number of times the ancestor dfs has been used.\n */\nmxSwimlaneModel.prototype.dfsCount = 0;\n\n/**\n * Variable: SOURCESCANSTARTRANK\n *\n * High value to start source layering scan rank value from.\n */\nmxSwimlaneModel.prototype.SOURCESCANSTARTRANK = 100000000;\n\n/**\n * Variable: tightenToSource\n *\n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxSwimlaneModel.prototype.tightenToSource = false;\n\n/**\n * Variable: ranksPerGroup\n *\n * An array of the number of ranks within each swimlane\n */\nmxSwimlaneModel.prototype.ranksPerGroup = null;\n\n/**\n * Function: createInternalCells\n *\n * Creates all edges in the internal model\n *\n * Parameters:\n *\n * layout - Reference to the <mxHierarchicalLayout> algorithm.\n * vertices - Array of <mxCells> that represent the vertices whom are to\n * have an internal representation created.\n * internalVertices - The array of <mxGraphHierarchyNodes> to have their\n * information filled in using the real vertices.\n */\nmxSwimlaneModel.prototype.createInternalCells = function(layout, vertices, internalVertices)\n{\n\tvar graph = layout.getGraph();\n\tvar swimlanes = layout.swimlanes;\n\n\t// Create internal edges\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tinternalVertices[i] = new mxGraphHierarchyNode(vertices[i]);\n\t\tthis.vertexMapper.put(vertices[i], internalVertices[i]);\n\t\tinternalVertices[i].swimlaneIndex = -1;\n\n\t\tfor (var ii = 0; ii < swimlanes.length; ii++)\n\t\t{\n\t\t\tif (graph.model.getParent(vertices[i]) == swimlanes[ii])\n\t\t\t{\n\t\t\t\tinternalVertices[i].swimlaneIndex = ii;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If the layout is deterministic, order the cells\n\t\t//List outgoingCells = graph.getNeighbours(vertices[i], deterministic);\n\t\tvar conns = layout.getEdges(vertices[i]);\n\t\tinternalVertices[i].connectsAsSource = [];\n\n\t\t// Create internal edges, but don't do any rank assignment yet\n\t\t// First use the information from the greedy cycle remover to\n\t\t// invert the leftward edges internally\n\t\tfor (var j = 0; j < conns.length; j++)\n\t\t{\n\t\t\tvar cell = layout.getVisibleTerminal(conns[j], false);\n\n\t\t\t// Looking for outgoing edges only\n\t\t\tif (cell != vertices[i] && layout.graph.model.isVertex(cell) &&\n\t\t\t\t\t!layout.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\t// We process all edge between this source and its targets\n\t\t\t\t// If there are edges going both ways, we need to collect\n\t\t\t\t// them all into one internal edges to avoid looping problems\n\t\t\t\t// later. We assume this direction (source -> target) is the \n\t\t\t\t// natural direction if at least half the edges are going in\n\t\t\t\t// that direction.\n\n\t\t\t\t// The check below for edges[0] being in the vertex mapper is\n\t\t\t\t// in case we've processed this the other way around\n\t\t\t\t// (target -> source) and the number of edges in each direction\n\t\t\t\t// are the same. All the graph edges will have been assigned to\n\t\t\t\t// an internal edge going the other way, so we don't want to \n\t\t\t\t// process them again\n\t\t\t\tvar undirectedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, false);\n\t\t\t\tvar directedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, true);\n\t\t\t\t\n\t\t\t\tif (undirectedEdges != null &&\n\t\t\t\t\t\tundirectedEdges.length > 0 &&\n\t\t\t\t\t\tthis.edgeMapper.get(undirectedEdges[0]) == null &&\n\t\t\t\t\t\tdirectedEdges.length * 2 >= undirectedEdges.length)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = new mxGraphHierarchyEdge(undirectedEdges);\n\n\t\t\t\t\tfor (var k = 0; k < undirectedEdges.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar edge = undirectedEdges[k];\n\t\t\t\t\t\tthis.edgeMapper.put(edge, internalEdge);\n\n\t\t\t\t\t\t// Resets all point on the edge and disables the edge style\n\t\t\t\t\t\t// without deleting it from the cell style\n\t\t\t\t\t\tgraph.resetEdge(edge);\n\n\t\t\t\t\t    if (layout.disableEdgeStyle)\n\t\t\t\t\t    {\n\t\t\t\t\t    \tlayout.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\t    \tlayout.setOrthogonalEdge(edge,true);\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\n\t\t\t\t\tinternalEdge.source = internalVertices[i];\n\n\t\t\t\t\tif (mxUtils.indexOf(internalVertices[i].connectsAsSource, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalVertices[i].connectsAsSource.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Ensure temp variable is cleared from any previous use\n\t\tinternalVertices[i].temp[0] = 0;\n\t}\n};\n\n/**\n * Function: initialRank\n *\n * Basic determination of minimum layer ranking by working from from sources\n * or sinks and working through each node in the relevant edge direction.\n * Starting at the sinks is basically a longest path layering algorithm.\n*/\nmxSwimlaneModel.prototype.initialRank = function()\n{\n\tthis.ranksPerGroup = [];\n\t\n\tvar startNodes = [];\n\tvar seen = new Object();\n\n\tif (this.roots != null)\n\t{\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar internalNode = this.vertexMapper.get(this.roots[i]);\n\t\t\tthis.maxChainDfs(null, internalNode, null, seen, 0);\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tstartNodes.push(internalNode);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Calculate the lower and upper rank bounds of each swimlane\n\tvar lowerRank = [];\n\tvar upperRank = [];\n\t\n\tfor (var i = this.ranksPerGroup.length - 1; i >= 0; i--)\n\t{\n\t\tif (i == this.ranksPerGroup.length - 1)\n\t\t{\n\t\t\tlowerRank[i] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlowerRank[i] = upperRank[i+1] + 1;\n\t\t}\n\t\t\n\t\tupperRank[i] = lowerRank[i] + this.ranksPerGroup[i];\n\t}\n\t\n\tthis.maxRank = upperRank[0];\n\n\tvar internalNodes = this.vertexMapper.getValues();\n\t\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] = -1;\n\t}\n\n\tvar startNodesCopy = startNodes.slice();\n\t\n\twhile (startNodes.length > 0)\n\t{\n\t\tvar internalNode = startNodes[0];\n\t\tvar layerDeterminingEdges;\n\t\tvar edgesToBeMarked;\n\n\t\tlayerDeterminingEdges = internalNode.connectsAsTarget;\n\t\tedgesToBeMarked = internalNode.connectsAsSource;\n\n\t\t// flag to keep track of whether or not all layer determining\n\t\t// edges have been scanned\n\t\tvar allEdgesScanned = true;\n\n\t\t// Work out the layer of this node from the layer determining\n\t\t// edges. The minimum layer number of any node connected by one of\n\t\t// the layer determining edges variable\n\t\tvar minimumLayer = upperRank[0];\n\n\t\tfor (var i = 0; i < layerDeterminingEdges.length; i++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[i];\n\n\t\t\tif (internalEdge.temp[0] == 5270620)\n\t\t\t{\n\t\t\t\t// This edge has been scanned, get the layer of the\n\t\t\t\t// node on the other end\n\t\t\t\tvar otherNode = internalEdge.source;\n\t\t\t\tminimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tallEdgesScanned = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If all edge have been scanned, assign the layer, mark all\n\t\t// edges in the other direction and remove from the nodes list\n\t\tif (allEdgesScanned)\n\t\t{\n\t\t\tif (minimumLayer > upperRank[internalNode.swimlaneIndex])\n\t\t\t{\n\t\t\t\tminimumLayer = upperRank[internalNode.swimlaneIndex];\n\t\t\t}\n\n\t\t\tinternalNode.temp[0] = minimumLayer;\n\n\t\t\tif (edgesToBeMarked != null)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < edgesToBeMarked.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = edgesToBeMarked[i];\n\n\t\t\t\t\t// Assign unique stamp ( y/m/d/h )\n\t\t\t\t\tinternalEdge.temp[0] = 5270620;\n\n\t\t\t\t\t// Add node on other end of edge to LinkedList of\n\t\t\t\t\t// nodes to be analysed\n\t\t\t\t\tvar otherNode = internalEdge.target;\n\n\t\t\t\t\t// Only add node if it hasn't been assigned a layer\n\t\t\t\t\tif (otherNode.temp[0] == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tstartNodes.push(otherNode);\n\n\t\t\t\t\t\t// Mark this other node as neither being\n\t\t\t\t\t\t// unassigned nor assigned so it isn't\n\t\t\t\t\t\t// added to this list again, but it's\n\t\t\t\t\t\t// layer isn't used in any calculation.\n\t\t\t\t\t\totherNode.temp[0] = -2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartNodes.shift();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Not all the edges have been scanned, get to the back of\n\t\t\t// the class and put the dunces cap on\n\t\t\tvar removedCell = startNodes.shift();\n\t\t\tstartNodes.push(internalNode);\n\n\t\t\tif (removedCell == internalNode && startNodes.length == 1)\n\t\t\t{\n\t\t\t\t// This is an error condition, we can't get out of\n\t\t\t\t// this loop. It could happen for more than one node\n\t\t\t\t// but that's a lot harder to detect. Log the error\n\t\t\t\t// TODO make log comment\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize the ranks down from their large starting value to place\n\t// at least 1 sink on layer 0\n//\tfor (var key in this.vertexMapper)\n//\t{\n//\t\tvar internalNode = this.vertexMapper[key];\n//\t\t// Mark the node as not having had a layer assigned\n//\t\tinternalNode.temp[0] -= this.maxRank;\n//\t}\n\t\n\t// Tighten the rank 0 nodes as far as possible\n//\tfor ( var i = 0; i < startNodesCopy.length; i++)\n//\t{\n//\t\tvar internalNode = startNodesCopy[i];\n//\t\tvar currentMaxLayer = 0;\n//\t\tvar layerDeterminingEdges = internalNode.connectsAsSource;\n//\n//\t\tfor ( var j = 0; j < layerDeterminingEdges.length; j++)\n//\t\t{\n//\t\t\tvar internalEdge = layerDeterminingEdges[j];\n//\t\t\tvar otherNode = internalEdge.target;\n//\t\t\tinternalNode.temp[0] = Math.max(currentMaxLayer,\n//\t\t\t\t\totherNode.temp[0] + 1);\n//\t\t\tcurrentMaxLayer = internalNode.temp[0];\n//\t\t}\n//\t}\n};\n\n/**\n * Function: maxChainDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of chains within groups.\n * Any cycles should be removed prior to running, but previously seen cells\n * are ignored.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * seen - a set of all nodes seen by this dfs\n * chainCount - the number of edges in the chain of vertices going through\n * the current swimlane\n */\nmxSwimlaneModel.prototype.maxChainDfs = function(parent, root, connectingEdge, seen, chainCount)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = mxCellPath.create(root.cell);\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvar slIndex = root.swimlaneIndex;\n\t\t\t\n\t\t\tif (this.ranksPerGroup[slIndex] == null || this.ranksPerGroup[slIndex] < chainCount)\n\t\t\t{\n\t\t\t\tthis.ranksPerGroup[slIndex] = chainCount;\n\t\t\t}\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Only navigate in source->target direction within the same\n\t\t\t\t// swimlane, or from a lower index swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex < targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.maxChainDfs(root, targetNode, internalEdge, mxUtils.clone(seen, null , true), 0);\n\t\t\t\t}\n\t\t\t\telse if (root.swimlaneIndex == targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.maxChainDfs(root, targetNode, internalEdge, mxUtils.clone(seen, null , true), chainCount + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: fixRanks\n *\n * Fixes the layer assignments to the values stored in the nodes. Also needs\n * to create dummy nodes for edges that cross layers.\n */\nmxSwimlaneModel.prototype.fixRanks = function()\n{\n\tvar rankList = [];\n\tthis.ranks = [];\n\n\tfor (var i = 0; i < this.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tthis.ranks[i] = rankList[i];\n\t}\n\n\t// Perform a DFS to obtain an initial ordering for each rank.\n\t// Without doing this you would end up having to process\n\t// crossings for a standard tree.\n\tvar rootsArray = null;\n\n\tif (this.roots != null)\n\t{\n\t\tvar oldRootsArray = this.roots;\n\t\trootsArray = [];\n\n\t\tfor (var i = 0; i < oldRootsArray.length; i++)\n\t\t{\n\t\t\tvar cell = oldRootsArray[i];\n\t\t\tvar internalNode = this.vertexMapper.get(cell);\n\t\t\trootsArray[i] = internalNode;\n\t\t}\n\t}\n\n\tthis.visit(function(parent, node, edge, layer, seen)\n\t{\n\t\tif (seen == 0 && node.maxRank < 0 && node.minRank < 0)\n\t\t{\n\t\t\trankList[node.temp[0]].push(node);\n\t\t\tnode.maxRank = node.temp[0];\n\t\t\tnode.minRank = node.temp[0];\n\n\t\t\t// Set temp[0] to the nodes position in the rank\n\t\t\tnode.temp[0] = rankList[node.maxRank].length - 1;\n\t\t}\n\n\t\tif (parent != null && edge != null)\n\t\t{\n\t\t\tvar parentToCellRankDifference = parent.maxRank - node.maxRank;\n\n\t\t\tif (parentToCellRankDifference > 1)\n\t\t\t{\n\t\t\t\t// There are ranks in between the parent and current cell\n\t\t\t\tedge.maxRank = parent.maxRank;\n\t\t\t\tedge.minRank = node.maxRank;\n\t\t\t\tedge.temp = [];\n\t\t\t\tedge.x = [];\n\t\t\t\tedge.y = [];\n\n\t\t\t\tfor (var i = edge.minRank + 1; i < edge.maxRank; i++)\n\t\t\t\t{\n\t\t\t\t\t// The connecting edge must be added to the\n\t\t\t\t\t// appropriate ranks\n\t\t\t\t\trankList[i].push(edge);\n\t\t\t\t\tedge.setGeneralPurposeVariable(i, rankList[i]\n\t\t\t\t\t\t\t.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, rootsArray, false, null);\n};\n\n/**\n * Function: visit\n *\n * A depth first search through the internal heirarchy model.\n *\n * Parameters:\n *\n * visitor - The visitor function pattern to be called for each node.\n * trackAncestors - Whether or not the search is to keep track all nodes\n * directly above this one in the search path.\n */\nmxSwimlaneModel.prototype.visit = function(visitor, dfsRoots, trackAncestors, seenNodes)\n{\n\t// Run dfs through on all roots\n\tif (dfsRoots != null)\n\t{\n\t\tfor (var i = 0; i < dfsRoots.length; i++)\n\t\t{\n\t\t\tvar internalNode = dfsRoots[i];\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tif (seenNodes == null)\n\t\t\t\t{\n\t\t\t\t\tseenNodes = new Object();\n\t\t\t\t}\n\n\t\t\t\tif (trackAncestors)\n\t\t\t\t{\n\t\t\t\t\t// Set up hash code for root\n\t\t\t\t\tinternalNode.hashCode = [];\n\t\t\t\t\tinternalNode.hashCode[0] = this.dfsCount;\n\t\t\t\t\tinternalNode.hashCode[1] = i;\n\t\t\t\t\tthis.extendedDfs(null, internalNode, null, visitor, seenNodes,\n\t\t\t\t\t\t\tinternalNode.hashCode, i, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.dfs(null, internalNode, null, visitor, seenNodes, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dfsCount++;\n\t}\n};\n\n/**\n * Function: dfs\n *\n * Performs a depth first search on the internal hierarchy model\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs a set of all of the\n * ancestor node of the current node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxSwimlaneModel.prototype.dfs = function(parent, root, connectingEdge, visitor, seen, layer)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\t\n\t\t\tfor (var i = 0; i< outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.dfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\tlayer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendedDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of cells ancestors, but it\n * should be only used when necessary because of it can be computationally\n * intensive for deep searches.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs\n * ancestors - the parent hash code\n * childHash - the new hash code for this node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxSwimlaneModel.prototype.extendedDfs = function(parent, root, connectingEdge, visitor, seen, ancestors, childHash, layer)\n{\n\t// Explanation of custom hash set. Previously, the ancestors variable\n\t// was passed through the dfs as a HashSet. The ancestors were copied\n\t// into a new HashSet and when the new child was processed it was also\n\t// added to the set. If the current node was in its ancestor list it\n\t// meant there is a cycle in the graph and this information is passed\n\t// to the visitor.visit() in the seen parameter. The HashSet clone was\n\t// very expensive on CPU so a custom hash was developed using primitive\n\t// types. temp[] couldn't be used so hashCode[] was added to each node.\n\t// Each new child adds another int to the array, copying the prefix\n\t// from its parent. Child of the same parent add different ints (the\n\t// limit is therefore 2^32 children per parent...). If a node has a\n\t// child with the hashCode already set then the child code is compared\n\t// to the same portion of the current nodes array. If they match there\n\t// is a loop.\n\t// Note that the basic mechanism would only allow for 1 use of this\n\t// functionality, so the root nodes have two ints. The second int is\n\t// incremented through each node root and the first is incremented\n\t// through each run of the dfs algorithm (therefore the dfs is not\n\t// thread safe). The hash code of each node is set if not already set,\n\t// or if the first int does not match that of the current run.\n\tif (root != null)\n\t{\n\t\tif (parent != null)\n\t\t{\n\t\t\t// Form this nodes hash code if necessary, that is, if the\n\t\t\t// hashCode variable has not been initialized or if the\n\t\t\t// start of the parent hash code does not equal the start of\n\t\t\t// this nodes hash code, indicating the code was set on a\n\t\t\t// previous run of this dfs.\n\t\t\tif (root.hashCode == null ||\n\t\t\t\troot.hashCode[0] != parent.hashCode[0])\n\t\t\t{\n\t\t\t\tvar hashCodeLength = parent.hashCode.length + 1;\n\t\t\t\troot.hashCode = parent.hashCode.slice();\n\t\t\t\troot.hashCode[hashCodeLength - 1] = childHash;\n\t\t\t}\n\t\t}\n\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\tvar incomingEdges = root.connectsAsTarget.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\t\t\t\t\n\t\t\t\t// Only navigate in source->target direction within the same\n\t\t\t\t// swimlane, or from a lower index swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex <= targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < incomingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = incomingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.source;\n\n\t\t\t\t// Only navigate in target->source direction from a lower index \n\t\t\t\t// swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex < targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n__mxOutput.mxSwimlaneModel = typeof mxSwimlaneModel !== 'undefined' ? mxSwimlaneModel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHierarchicalLayoutStage\n * \n * The specific layout interface for hierarchical layouts. It adds a\n * <code>run</code> method with a parameter for the hierarchical layout model\n * that is shared between the layout stages.\n * \n * Constructor: mxHierarchicalLayoutStage\n *\n * Constructs a new hierarchical layout stage.\n */\nfunction mxHierarchicalLayoutStage() { };\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxHierarchicalLayoutStage.prototype.execute = function(parent) { };\n\n__mxOutput.mxHierarchicalLayoutStage = typeof mxHierarchicalLayoutStage !== 'undefined' ? mxHierarchicalLayoutStage : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMedianHybridCrossingReduction\n * \n * Sets the horizontal locations of node and edge dummy nodes on each layer.\n * Uses median down and up weighings as well heuristic to straighten edges as\n * far as possible.\n * \n * Constructor: mxMedianHybridCrossingReduction\n *\n * Creates a coordinate assignment.\n * \n * Arguments:\n * \n * intraCellSpacing - the minimum buffer between cells on the same rank\n * interRankCellSpacing - the minimum distance between cells on adjacent ranks\n * orientation - the position of the root node(s) relative to the graph\n * initialX - the leftmost coordinate node placement starts at\n */\nfunction mxMedianHybridCrossingReduction(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxMedianHybridCrossingReduction.\n */\nmxMedianHybridCrossingReduction.prototype = new mxHierarchicalLayoutStage();\nmxMedianHybridCrossingReduction.prototype.constructor = mxMedianHybridCrossingReduction;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxMedianHybridCrossingReduction.prototype.layout = null;\n\n/**\n * Variable: maxIterations\n * \n * The maximum number of iterations to perform whilst reducing edge\n * crossings. Default is 24.\n */\nmxMedianHybridCrossingReduction.prototype.maxIterations = 24;\n\n/**\n * Variable: nestedBestRanks\n * \n * Stores each rank as a collection of cells in the best order found for\n * each layer so far\n */\nmxMedianHybridCrossingReduction.prototype.nestedBestRanks = null;\n\n/**\n * Variable: currentBestCrossings\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.currentBestCrossings = 0;\n\n/**\n * Variable: iterationsWithoutImprovement\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.iterationsWithoutImprovement = 0;\n\n/**\n * Variable: maxNoImprovementIterations\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.maxNoImprovementIterations = 2;\n\n/**\n * Function: execute\n * \n * Performs a vertex ordering within ranks as described by Gansner et al\n * 1993\n */\nmxMedianHybridCrossingReduction.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\n\t// Stores initial ordering as being the best one found so far\n\tthis.nestedBestRanks = [];\n\t\n\tfor (var i = 0; i < model.ranks.length; i++)\n\t{\n\t\tthis.nestedBestRanks[i] = model.ranks[i].slice();\n\t}\n\n\tvar iterationsWithoutImprovement = 0;\n\tvar currentBestCrossings = this.calculateCrossings(model);\n\n\tfor (var i = 0; i < this.maxIterations &&\n\t\titerationsWithoutImprovement < this.maxNoImprovementIterations; i++)\n\t{\n\t\tthis.weightedMedian(i, model);\n\t\tthis.transpose(i, model);\n\t\tvar candidateCrossings = this.calculateCrossings(model);\n\n\t\tif (candidateCrossings < currentBestCrossings)\n\t\t{\n\t\t\tcurrentBestCrossings = candidateCrossings;\n\t\t\titerationsWithoutImprovement = 0;\n\n\t\t\t// Store the current rankings as the best ones\n\t\t\tfor (var j = 0; j < this.nestedBestRanks.length; j++)\n\t\t\t{\n\t\t\t\tvar rank = model.ranks[j];\n\n\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\tthis.nestedBestRanks[j][cell.getGeneralPurposeVariable(j)] = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Increase count of iterations where we haven't improved the\n\t\t\t// layout\n\t\t\titerationsWithoutImprovement++;\n\n\t\t\t// Restore the best values to the cells\n\t\t\tfor (var j = 0; j < this.nestedBestRanks.length; j++)\n\t\t\t{\n\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\tcell.setGeneralPurposeVariable(j, k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (currentBestCrossings == 0)\n\t\t{\n\t\t\t// Do nothing further\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Store the best rankings but in the model\n\tvar ranks = [];\n\tvar rankList = [];\n\n\tfor (var i = 0; i < model.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tranks[i] = rankList[i];\n\t}\n\n\tfor (var i = 0; i < this.nestedBestRanks.length; i++)\n\t{\n\t\tfor (var j = 0; j < this.nestedBestRanks[i].length; j++)\n\t\t{\n\t\t\trankList[i].push(this.nestedBestRanks[i][j]);\n\t\t}\n\t}\n\n\tmodel.ranks = ranks;\n};\n\n\n/**\n * Function: calculateCrossings\n * \n * Calculates the total number of edge crossing in the current graph.\n * Returns the current number of edge crossings in the hierarchy graph\n * model in the current candidate layout\n * \n * Parameters:\n * \n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.calculateCrossings = function(model)\n{\n\tvar numRanks = model.ranks.length;\n\tvar totalCrossings = 0;\n\n\tfor (var i = 1; i < numRanks; i++)\n\t{\n\t\ttotalCrossings += this.calculateRankCrossing(i, model);\n\t}\n\t\n\treturn totalCrossings;\n};\n\n/**\n * Function: calculateRankCrossing\n * \n * Calculates the number of edges crossings between the specified rank and\n * the rank below it. Returns the number of edges crossings with the rank\n * beneath\n * \n * Parameters:\n * \n * i -  the topmost rank of the pair ( higher rank value )\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.calculateRankCrossing = function(i, model)\n{\n\tvar totalCrossings = 0;\n\tvar rank = model.ranks[i];\n\tvar previousRank = model.ranks[i - 1];\n\n\tvar tmpIndices = [];\n\n\t// Iterate over the top rank and fill in the connection information\n\tfor (var j = 0; j < rank.length; j++)\n\t{\n\t\tvar node = rank[j];\n\t\tvar rankPosition = node.getGeneralPurposeVariable(i);\n\t\tvar connectedCells = node.getPreviousLayerConnectedCells(i);\n\t\tvar nodeIndices = [];\n\n\t\tfor (var k = 0; k < connectedCells.length; k++)\n\t\t{\n\t\t\tvar connectedNode = connectedCells[k];\n\t\t\tvar otherCellRankPosition = connectedNode.getGeneralPurposeVariable(i - 1);\n\t\t\tnodeIndices.push(otherCellRankPosition);\n\t\t}\n\t\t\n\t\tnodeIndices.sort(function(x, y) { return x - y; });\n\t\ttmpIndices[rankPosition] = nodeIndices;\n\t}\n\t\n\tvar indices = [];\n\n\tfor (var j = 0; j < tmpIndices.length; j++)\n\t{\n\t\tindices = indices.concat(tmpIndices[j]);\n\t}\n\n\tvar firstIndex = 1;\n\t\n\twhile (firstIndex < previousRank.length)\n\t{\n\t\tfirstIndex <<= 1;\n\t}\n\n\tvar treeSize = 2 * firstIndex - 1;\n\tfirstIndex -= 1;\n\n\tvar tree = [];\n\t\n\tfor (var j = 0; j < treeSize; ++j)\n\t{\n\t\ttree[j] = 0;\n\t}\n\n\tfor (var j = 0; j < indices.length; j++)\n\t{\n\t\tvar index = indices[j];\n\t    var treeIndex = index + firstIndex;\n\t    ++tree[treeIndex];\n\t    \n\t    while (treeIndex > 0)\n\t    {\n\t    \tif (treeIndex % 2)\n\t    \t{\n\t    \t\ttotalCrossings += tree[treeIndex + 1];\n\t    \t}\n\t      \n\t    \ttreeIndex = (treeIndex - 1) >> 1;\n\t    \t++tree[treeIndex];\n\t    }\n\t}\n\n\treturn totalCrossings;\n};\n\n/**\n * Function: transpose\n * \n * Takes each possible adjacent cell pair on each rank and checks if\n * swapping them around reduces the number of crossing\n * \n * Parameters:\n * \n * mainLoopIteration - the iteration number of the main loop\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.transpose = function(mainLoopIteration, model)\n{\n\tvar improved = true;\n\n\t// Track the number of iterations in case of looping\n\tvar count = 0;\n\tvar maxCount = 10;\n\twhile (improved && count++ < maxCount)\n\t{\n\t\t// On certain iterations allow allow swapping of cell pairs with\n\t\t// equal edge crossings switched or not switched. This help to\n\t\t// nudge a stuck layout into a lower crossing total.\n\t\tvar nudge = mainLoopIteration % 2 == 1 && count % 2 == 1;\n\t\timproved = false;\n\t\t\n\t\tfor (var i = 0; i < model.ranks.length; i++)\n\t\t{\n\t\t\tvar rank = model.ranks[i];\n\t\t\tvar orderedCells = [];\n\t\t\t\n\t\t\tfor (var j = 0; j < rank.length; j++)\n\t\t\t{\n\t\t\t\tvar cell = rank[j];\n\t\t\t\tvar tempRank = cell.getGeneralPurposeVariable(i);\n\t\t\t\t\n\t\t\t\t// FIXME: Workaround to avoid negative tempRanks\n\t\t\t\tif (tempRank < 0)\n\t\t\t\t{\n\t\t\t\t\ttempRank = j;\n\t\t\t\t}\n\t\t\t\torderedCells[tempRank] = cell;\n\t\t\t}\n\t\t\t\n\t\t\tvar leftCellAboveConnections = null;\n\t\t\tvar leftCellBelowConnections = null;\n\t\t\tvar rightCellAboveConnections = null;\n\t\t\tvar rightCellBelowConnections = null;\n\t\t\t\n\t\t\tvar leftAbovePositions = null;\n\t\t\tvar leftBelowPositions = null;\n\t\t\tvar rightAbovePositions = null;\n\t\t\tvar rightBelowPositions = null;\n\t\t\t\n\t\t\tvar leftCell = null;\n\t\t\tvar rightCell = null;\n\n\t\t\tfor (var j = 0; j < (rank.length - 1); j++)\n\t\t\t{\n\t\t\t\t// For each intra-rank adjacent pair of cells\n\t\t\t\t// see if swapping them around would reduce the\n\t\t\t\t// number of edges crossing they cause in total\n\t\t\t\t// On every cell pair except the first on each rank, we\n\t\t\t\t// can save processing using the previous values for the\n\t\t\t\t// right cell on the new left cell\n\t\t\t\tif (j == 0)\n\t\t\t\t{\n\t\t\t\t\tleftCell = orderedCells[j];\n\t\t\t\t\tleftCellAboveConnections = leftCell\n\t\t\t\t\t\t\t.getNextLayerConnectedCells(i);\n\t\t\t\t\tleftCellBelowConnections = leftCell\n\t\t\t\t\t\t\t.getPreviousLayerConnectedCells(i);\n\t\t\t\t\tleftAbovePositions = [];\n\t\t\t\t\tleftBelowPositions = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < leftCellAboveConnections.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tleftAbovePositions[k] = leftCellAboveConnections[k].getGeneralPurposeVariable(i + 1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < leftCellBelowConnections.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tleftBelowPositions[k] = leftCellBelowConnections[k].getGeneralPurposeVariable(i - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleftCellAboveConnections = rightCellAboveConnections;\n\t\t\t\t\tleftCellBelowConnections = rightCellBelowConnections;\n\t\t\t\t\tleftAbovePositions = rightAbovePositions;\n\t\t\t\t\tleftBelowPositions = rightBelowPositions;\n\t\t\t\t\tleftCell = rightCell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trightCell = orderedCells[j + 1];\n\t\t\t\trightCellAboveConnections = rightCell\n\t\t\t\t\t\t.getNextLayerConnectedCells(i);\n\t\t\t\trightCellBelowConnections = rightCell\n\t\t\t\t\t\t.getPreviousLayerConnectedCells(i);\n\n\t\t\t\trightAbovePositions = [];\n\t\t\t\trightBelowPositions = [];\n\n\t\t\t\tfor (var k = 0; k < rightCellAboveConnections.length; k++)\n\t\t\t\t{\n\t\t\t\t\trightAbovePositions[k] = rightCellAboveConnections[k].getGeneralPurposeVariable(i + 1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < rightCellBelowConnections.length; k++)\n\t\t\t\t{\n\t\t\t\t\trightBelowPositions[k] = rightCellBelowConnections[k].getGeneralPurposeVariable(i - 1);\n\t\t\t\t}\n\n\t\t\t\tvar totalCurrentCrossings = 0;\n\t\t\t\tvar totalSwitchedCrossings = 0;\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < leftAbovePositions.length; k++)\n\t\t\t\t{\n\t\t\t\t\tfor (var ik = 0; ik < rightAbovePositions.length; ik++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (leftAbovePositions[k] > rightAbovePositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalCurrentCrossings++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (leftAbovePositions[k] < rightAbovePositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalSwitchedCrossings++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < leftBelowPositions.length; k++)\n\t\t\t\t{\n\t\t\t\t\tfor (var ik = 0; ik < rightBelowPositions.length; ik++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (leftBelowPositions[k] > rightBelowPositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalCurrentCrossings++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (leftBelowPositions[k] < rightBelowPositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalSwitchedCrossings++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((totalSwitchedCrossings < totalCurrentCrossings) ||\n\t\t\t\t\t(totalSwitchedCrossings == totalCurrentCrossings &&\n\t\t\t\t\tnudge))\n\t\t\t\t{\n\t\t\t\t\tvar temp = leftCell.getGeneralPurposeVariable(i);\n\t\t\t\t\tleftCell.setGeneralPurposeVariable(i, rightCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(i));\n\t\t\t\t\trightCell.setGeneralPurposeVariable(i, temp);\n\n\t\t\t\t\t// With this pair exchanged we have to switch all of\n\t\t\t\t\t// values for the left cell to the right cell so the\n\t\t\t\t\t// next iteration for this rank uses it as the left\n\t\t\t\t\t// cell again\n\t\t\t\t\trightCellAboveConnections = leftCellAboveConnections;\n\t\t\t\t\trightCellBelowConnections = leftCellBelowConnections;\n\t\t\t\t\trightAbovePositions = leftAbovePositions;\n\t\t\t\t\trightBelowPositions = leftBelowPositions;\n\t\t\t\t\trightCell = leftCell;\n\t\t\t\t\t\n\t\t\t\t\tif (!nudge)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Don't count nudges as improvement or we'll end\n\t\t\t\t\t\t// up stuck in two combinations and not finishing\n\t\t\t\t\t\t// as early as we should\n\t\t\t\t\t\timproved = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: weightedMedian\n * \n * Sweeps up or down the layout attempting to minimise the median placement\n * of connected cells on adjacent ranks\n * \n * Parameters:\n * \n * iteration - the iteration number of the main loop\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.weightedMedian = function(iteration, model)\n{\n\t// Reverse sweep direction each time through this method\n\tvar downwardSweep = (iteration % 2 == 0);\n\tif (downwardSweep)\n\t{\n\t\tfor (var j = model.maxRank - 1; j >= 0; j--)\n\t\t{\n\t\t\tthis.medianRank(j, downwardSweep);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var j = 1; j < model.maxRank; j++)\n\t\t{\n\t\t\tthis.medianRank(j, downwardSweep);\n\t\t}\n\t}\n};\n\n/**\n * Function: medianRank\n * \n * Attempts to minimise the median placement of connected cells on this rank\n * and one of the adjacent ranks\n * \n * Parameters:\n * \n * rankValue - the layer number of this rank\n * downwardSweep - whether or not this is a downward sweep through the graph\n */\nmxMedianHybridCrossingReduction.prototype.medianRank = function(rankValue, downwardSweep)\n{\n\tvar numCellsForRank = this.nestedBestRanks[rankValue].length;\n\tvar medianValues = [];\n\tvar reservedPositions = [];\n\n\tfor (var i = 0; i < numCellsForRank; i++)\n\t{\n\t\tvar cell = this.nestedBestRanks[rankValue][i];\n\t\tvar sorterEntry = new MedianCellSorter();\n\t\tsorterEntry.cell = cell;\n\n\t\t// Flip whether or not equal medians are flipped on up and down\n\t\t// sweeps\n\t\t// TODO re-implement some kind of nudge\n\t\t// medianValues[i].nudge = !downwardSweep;\n\t\tvar nextLevelConnectedCells;\n\t\t\n\t\tif (downwardSweep)\n\t\t{\n\t\t\tnextLevelConnectedCells = cell\n\t\t\t\t\t.getNextLayerConnectedCells(rankValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLevelConnectedCells = cell\n\t\t\t\t\t.getPreviousLayerConnectedCells(rankValue);\n\t\t}\n\t\t\n\t\tvar nextRankValue;\n\t\t\n\t\tif (downwardSweep)\n\t\t{\n\t\t\tnextRankValue = rankValue + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextRankValue = rankValue - 1;\n\t\t}\n\n\t\tif (nextLevelConnectedCells != null\n\t\t\t\t&& nextLevelConnectedCells.length != 0)\n\t\t{\n\t\t\tsorterEntry.medianValue = this.medianValue(\n\t\t\t\t\tnextLevelConnectedCells, nextRankValue);\n\t\t\tmedianValues.push(sorterEntry);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Nodes with no adjacent vertices are flagged in the reserved array\n\t\t\t// to indicate they should be left in their current position.\n\t\t\treservedPositions[cell.getGeneralPurposeVariable(rankValue)] = true;\n\t\t}\n\t}\n\t\n\tmedianValues.sort(MedianCellSorter.prototype.compare);\n\t\n\t// Set the new position of each node within the rank using\n\t// its temp variable\n\tfor (var i = 0; i < numCellsForRank; i++)\n\t{\n\t\tif (reservedPositions[i] == null)\n\t\t{\n\t\t\tvar cell = medianValues.shift().cell;\n\t\t\tcell.setGeneralPurposeVariable(rankValue, i);\n\t\t}\n\t}\n};\n\n/**\n * Function: medianValue\n * \n * Calculates the median rank order positioning for the specified cell using\n * the connected cells on the specified rank. Returns the median rank\n * ordering value of the connected cells\n * \n * Parameters:\n * \n * connectedCells - the cells on the specified rank connected to the\n * specified cell\n * rankValue - the rank that the connected cell lie upon\n */\nmxMedianHybridCrossingReduction.prototype.medianValue = function(connectedCells, rankValue)\n{\n\tvar medianValues = [];\n\tvar arrayCount = 0;\n\t\n\tfor (var i = 0; i < connectedCells.length; i++)\n\t{\n\t\tvar cell = connectedCells[i];\n\t\tmedianValues[arrayCount++] = cell.getGeneralPurposeVariable(rankValue);\n\t}\n\n\t// Sort() sorts lexicographically by default (i.e. 11 before 9) so force\n\t// numerical order sort\n\tmedianValues.sort(function(a,b){return a - b;});\n\t\n\tif (arrayCount % 2 == 1)\n\t{\n\t\t// For odd numbers of adjacent vertices return the median\n\t\treturn medianValues[Math.floor(arrayCount / 2)];\n\t}\n\telse if (arrayCount == 2)\n\t{\n\t\treturn ((medianValues[0] + medianValues[1]) / 2.0);\n\t}\n\telse\n\t{\n\t\tvar medianPoint = arrayCount / 2;\n\t\tvar leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n\t\tvar rightMedian = medianValues[arrayCount - 1]\n\t\t\t\t- medianValues[medianPoint];\n\n\t\treturn (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint]\n\t\t\t\t* leftMedian)\n\t\t\t\t/ (leftMedian + rightMedian);\n\t}\n};\n\n/**\n * Class: MedianCellSorter\n * \n * A utility class used to track cells whilst sorting occurs on the median\n * values. Does not violate (x.compareTo(y)==0) == (x.equals(y))\n *\n * Constructor: MedianCellSorter\n * \n * Constructs a new median cell sorter.\n */\nfunction MedianCellSorter()\n{\n\t// empty\n};\n\n/**\n * Variable: medianValue\n * \n * The weighted value of the cell stored.\n */\nMedianCellSorter.prototype.medianValue = 0;\n\n/**\n * Variable: cell\n * \n * The cell whose median value is being calculated\n */\nMedianCellSorter.prototype.cell = false;\n\n/**\n * Function: compare\n * \n * Compares two MedianCellSorters.\n */\nMedianCellSorter.prototype.compare = function(a, b)\n{\n\tif (a != null && b != null)\n\t{\n\t\tif (b.medianValue > a.medianValue)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t\telse if (b.medianValue < a.medianValue)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n\n__mxOutput.mxMedianHybridCrossingReduction = typeof mxMedianHybridCrossingReduction !== 'undefined' ? mxMedianHybridCrossingReduction : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMinimumCycleRemover\n * \n * An implementation of the first stage of the Sugiyama layout. Straightforward\n * longest path calculation of layer assignment\n * \n * Constructor: mxMinimumCycleRemover\n *\n * Creates a cycle remover for the given internal model.\n */\nfunction mxMinimumCycleRemover(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxMinimumCycleRemover.prototype = new mxHierarchicalLayoutStage();\nmxMinimumCycleRemover.prototype.constructor = mxMinimumCycleRemover;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxMinimumCycleRemover.prototype.layout = null;\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxMinimumCycleRemover.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\tvar seenNodes = new Object();\n\tvar unseenNodesArray = model.vertexMapper.getValues();\n\tvar unseenNodes = new Object();\n\t\n\tfor (var i = 0; i < unseenNodesArray.length; i++)\n\t{\n\t\tunseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n\t}\n\t\n\t// Perform a dfs through the internal model. If a cycle is found,\n\t// reverse it.\n\tvar rootsArray = null;\n\t\n\tif (model.roots != null)\n\t{\n\t\tvar modelRoots = model.roots;\n\t\trootsArray = [];\n\t\t\n\t\tfor (var i = 0; i < modelRoots.length; i++)\n\t\t{\n\t\t\trootsArray[i] = model.vertexMapper.get(modelRoots[i]);\n\t\t}\n\t}\n\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\tif (node.isAncestor(parent))\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t}\n\t\t\n\t\tseenNodes[node.id] = node;\n\t\tdelete unseenNodes[node.id];\n\t}, rootsArray, true, null);\n\n\t// If there are any nodes that should be nodes that the dfs can miss\n\t// these need to be processed with the dfs and the roots assigned\n\t// correctly to form a correct internal model\n\tvar seenNodesCopy = mxUtils.clone(seenNodes, null, true);\n\n\t// Pick a random cell and dfs from it\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\tif (node.isAncestor(parent))\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t}\n\t\t\n\t\tseenNodes[node.id] = node;\n\t\tdelete unseenNodes[node.id];\n\t}, unseenNodes, true, seenNodesCopy);\n};\n\n__mxOutput.mxMinimumCycleRemover = typeof mxMinimumCycleRemover !== 'undefined' ? mxMinimumCycleRemover : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxCoordinateAssignment\n * \n * Sets the horizontal locations of node and edge dummy nodes on each layer.\n * Uses median down and up weighings as well as heuristics to straighten edges as\n * far as possible.\n * \n * Constructor: mxCoordinateAssignment\n *\n * Creates a coordinate assignment.\n * \n * Arguments:\n * \n * intraCellSpacing - the minimum buffer between cells on the same rank\n * interRankCellSpacing - the minimum distance between cells on adjacent ranks\n * orientation - the position of the root node(s) relative to the graph\n * initialX - the leftmost coordinate node placement starts at\n */\nfunction mxCoordinateAssignment(layout, intraCellSpacing, interRankCellSpacing,\n\torientation, initialX, parallelEdgeSpacing)\n{\n\tthis.layout = layout;\n\tthis.intraCellSpacing = intraCellSpacing;\n\tthis.interRankCellSpacing = interRankCellSpacing;\n\tthis.orientation = orientation;\n\tthis.initialX = initialX;\n\tthis.parallelEdgeSpacing = parallelEdgeSpacing;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxCoordinateAssignment.prototype = new mxHierarchicalLayoutStage();\nmxCoordinateAssignment.prototype.constructor = mxCoordinateAssignment;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxCoordinateAssignment.prototype.layout = null;\n\n/**\n * Variable: intraCellSpacing\n * \n * The minimum buffer between cells on the same rank. Default is 30.\n */\nmxCoordinateAssignment.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The minimum distance between cells on adjacent ranks. Default is 10.\n */\nmxCoordinateAssignment.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges.\n * Default is 10.\n */\nmxCoordinateAssignment.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: maxIterations\n * \n * The number of heuristic iterations to run. Default is 8.\n */\nmxCoordinateAssignment.prototype.maxIterations = 8;\n\n/**\n * Variable: prefHozEdgeSep\n * \n * The preferred horizontal distance between edges exiting a vertex\n */\nmxCoordinateAssignment.prototype.prefHozEdgeSep = 5;\n\n/**\n * Variable: prefVertEdgeOff\n * \n * The preferred vertical offset between edges exiting a vertex\n */\nmxCoordinateAssignment.prototype.prefVertEdgeOff = 2;\n\n/**\n * Variable: minEdgeJetty\n * \n * The minimum distance for an edge jetty from a vertex\n */\nmxCoordinateAssignment.prototype.minEdgeJetty = 12;\n\n/**\n * Variable: channelBuffer\n * \n * The size of the vertical buffer in the center of inter-rank channels\n * where edge control points should not be placed\n */\nmxCoordinateAssignment.prototype.channelBuffer = 4;\n\n/**\n * Variable: jettyPositions\n * \n * Map of internal edges and (x,y) pair of positions of the start and end jetty\n * for that edge where it connects to the source and target vertices.\n * Note this should technically be a WeakHashMap, but since JS does not\n * have an equivalent, housekeeping must be performed before using.\n * i.e. check all edges are still in the model and clear the values.\n * Note that the y co-ord is the offset of the jetty, not the\n * absolute point\n */\nmxCoordinateAssignment.prototype.jettyPositions = null;\n\n/**\n * Variable: orientation\n * \n * The position of the root ( start ) node(s) relative to the rest of the\n * laid out graph. Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxCoordinateAssignment.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: initialX\n * \n * The minimum x position node placement starts at\n */\nmxCoordinateAssignment.prototype.initialX = null;\n\n/**\n * Variable: limitX\n * \n * The maximum x value this positioning lays up to\n */\nmxCoordinateAssignment.prototype.limitX = null;\n\n/**\n * Variable: currentXDelta\n * \n * The sum of x-displacements for the current iteration\n */\nmxCoordinateAssignment.prototype.currentXDelta = null;\n\n/**\n * Variable: widestRank\n * \n * The rank that has the widest x position\n */\nmxCoordinateAssignment.prototype.widestRank = null;\n\n/**\n * Variable: rankTopY\n * \n * Internal cache of top-most values of Y for each rank\n */\nmxCoordinateAssignment.prototype.rankTopY = null;\n\n/**\n * Variable: rankBottomY\n * \n * Internal cache of bottom-most value of Y for each rank\n */\nmxCoordinateAssignment.prototype.rankBottomY = null;\n\n/**\n * Variable: widestRankValue\n * \n * The X-coordinate of the edge of the widest rank\n */\nmxCoordinateAssignment.prototype.widestRankValue = null;\n\n/**\n * Variable: rankWidths\n * \n * The width of all the ranks\n */\nmxCoordinateAssignment.prototype.rankWidths = null;\n\n/**\n * Variable: rankY\n * \n * The Y-coordinate of all the ranks\n */\nmxCoordinateAssignment.prototype.rankY = null;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxCoordinateAssignment.prototype.fineTuning = true;\n\n/**\n * Variable: nextLayerConnectedCache\n * \n * A store of connections to the layer above for speed\n */\nmxCoordinateAssignment.prototype.nextLayerConnectedCache = null;\n\n/**\n * Variable: previousLayerConnectedCache\n * \n * A store of connections to the layer below for speed\n */\nmxCoordinateAssignment.prototype.previousLayerConnectedCache = null;\n\n/**\n * Variable: groupPadding\n * \n * Padding added to resized parents\n */\nmxCoordinateAssignment.prototype.groupPadding = 10;\n\n/**\n * Utility method to display current positions\n */\nmxCoordinateAssignment.prototype.printStatus = function()\n{\n\tvar model = this.layout.getModel();\n\tmxLog.show();\n\n\tmxLog.writeln('======Coord assignment debug=======');\n\n\tfor (var j = 0; j < model.ranks.length; j++)\n\t{\n\t\tmxLog.write('Rank ', j, ' : ' );\n\t\tvar rank = model.ranks[j];\n\t\t\n\t\tfor (var k = 0; k < rank.length; k++)\n\t\t{\n\t\t\tvar cell = rank[k];\n\t\t\t\n\t\t\tmxLog.write(cell.getGeneralPurposeVariable(j), '  ');\n\t\t}\n\t\tmxLog.writeln();\n\t}\n\t\n\tmxLog.writeln('====================================');\n};\n\n/**\n * Function: execute\n * \n * A basic horizontal coordinate assignment algorithm\n */\nmxCoordinateAssignment.prototype.execute = function(parent)\n{\n\tthis.jettyPositions = Object();\n\tvar model = this.layout.getModel();\n\tthis.currentXDelta = 0.0;\n\n\tthis.initialCoords(this.layout.getGraph(), model);\n\t\n//\tthis.printStatus();\n\t\n\tif (this.fineTuning)\n\t{\n\t\tthis.minNode(model);\n\t}\n\t\n\tvar bestXDelta = 100000000.0;\n\t\n\tif (this.fineTuning)\n\t{\n\t\tfor (var i = 0; i < this.maxIterations; i++)\n\t\t{\n//\t\t\tthis.printStatus();\n\t\t\n\t\t\t// Median Heuristic\n\t\t\tif (i != 0)\n\t\t\t{\n\t\t\t\tthis.medianPos(i, model);\n\t\t\t\tthis.minNode(model);\n\t\t\t}\n\t\t\t\n\t\t\t// if the total offset is less for the current positioning,\n\t\t\t// there are less heavily angled edges and so the current\n\t\t\t// positioning is used\n\t\t\tif (this.currentXDelta < bestXDelta)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < model.ranks.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\t\tcell.setX(j, cell.getGeneralPurposeVariable(j));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbestXDelta = this.currentXDelta;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Restore the best positions\n\t\t\t\tfor (var j = 0; j < model.ranks.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\t\tcell.setGeneralPurposeVariable(j, cell.getX(j));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.minPath(this.layout.getGraph(), model);\n\t\t\t\n\t\t\tthis.currentXDelta = 0;\n\t\t}\n\t}\n\t\n\tthis.setCellLocations(this.layout.getGraph(), model);\n};\n\n/**\n * Function: minNode\n * \n * Performs one median positioning sweep in both directions\n */\nmxCoordinateAssignment.prototype.minNode = function(model)\n{\n\t// Queue all nodes\n\tvar nodeList = [];\n\t\n\t// Need to be able to map from cell to cellWrapper\n\tvar map = new mxDictionary();\n\tvar rank = [];\n\t\n\tfor (var i = 0; i <= model.maxRank; i++)\n\t{\n\t\trank[i] = model.ranks[i];\n\t\t\n\t\tfor (var j = 0; j < rank[i].length; j++)\n\t\t{\n\t\t\t// Use the weight to store the rank and visited to store whether\n\t\t\t// or not the cell is in the list\n\t\t\tvar node = rank[i][j];\n\t\t\tvar nodeWrapper = new WeightedCellSorter(node, i);\n\t\t\tnodeWrapper.rankIndex = j;\n\t\t\tnodeWrapper.visited = true;\n\t\t\tnodeList.push(nodeWrapper);\n\t\t\t\n\t\t\tmap.put(node, nodeWrapper);\n\t\t}\n\t}\n\t\n\t// Set a limit of the maximum number of times we will access the queue\n\t// in case a loop appears\n\tvar maxTries = nodeList.length * 10;\n\tvar count = 0;\n\t\n\t// Don't move cell within this value of their median\n\tvar tolerance = 1;\n\t\n\twhile (nodeList.length > 0 && count <= maxTries)\n\t{\n\t\tvar cellWrapper = nodeList.shift();\n\t\tvar cell = cellWrapper.cell;\n\t\t\n\t\tvar rankValue = cellWrapper.weightedValue;\n\t\tvar rankIndex = parseInt(cellWrapper.rankIndex);\n\t\t\n\t\tvar nextLayerConnectedCells = cell.getNextLayerConnectedCells(rankValue);\n\t\tvar previousLayerConnectedCells = cell.getPreviousLayerConnectedCells(rankValue);\n\t\t\n\t\tvar numNextLayerConnected = nextLayerConnectedCells.length;\n\t\tvar numPreviousLayerConnected = previousLayerConnectedCells.length;\n\n\t\tvar medianNextLevel = this.medianXValue(nextLayerConnectedCells,\n\t\t\t\trankValue + 1);\n\t\tvar medianPreviousLevel = this.medianXValue(previousLayerConnectedCells,\n\t\t\t\trankValue - 1);\n\n\t\tvar numConnectedNeighbours = numNextLayerConnected\n\t\t\t\t+ numPreviousLayerConnected;\n\t\tvar currentPosition = cell.getGeneralPurposeVariable(rankValue);\n\t\tvar cellMedian = currentPosition;\n\t\t\n\t\tif (numConnectedNeighbours > 0)\n\t\t{\n\t\t\tcellMedian = (medianNextLevel * numNextLayerConnected + medianPreviousLevel\n\t\t\t\t\t* numPreviousLayerConnected)\n\t\t\t\t\t/ numConnectedNeighbours;\n\t\t}\n\n\t\t// Flag storing whether or not position has changed\n\t\tvar positionChanged = false;\n\t\t\n\t\tif (cellMedian < currentPosition - tolerance)\n\t\t{\n\t\t\tif (rankIndex == 0)\n\t\t\t{\n\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\tpositionChanged = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar leftCell = rank[rankValue][rankIndex - 1];\n\t\t\t\tvar leftLimit = leftCell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue);\n\t\t\t\tleftLimit = leftLimit + leftCell.width / 2\n\t\t\t\t\t\t+ this.intraCellSpacing + cell.width / 2;\n\n\t\t\t\tif (leftLimit < cellMedian)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t\telse if (leftLimit < cell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t- tolerance)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, leftLimit);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (cellMedian > currentPosition + tolerance)\n\t\t{\n\t\t\tvar rankSize = rank[rankValue].length;\n\t\t\t\n\t\t\tif (rankIndex == rankSize - 1)\n\t\t\t{\n\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\tpositionChanged = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar rightCell = rank[rankValue][rankIndex + 1];\n\t\t\t\tvar rightLimit = rightCell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue);\n\t\t\t\trightLimit = rightLimit - rightCell.width / 2\n\t\t\t\t\t\t- this.intraCellSpacing - cell.width / 2;\n\t\t\t\t\n\t\t\t\tif (rightLimit > cellMedian)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t\telse if (rightLimit > cell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t+ tolerance)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, rightLimit);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (positionChanged)\n\t\t{\n\t\t\t// Add connected nodes to map and list\n\t\t\tfor (var i = 0; i < nextLayerConnectedCells.length; i++)\n\t\t\t{\n\t\t\t\tvar connectedCell = nextLayerConnectedCells[i];\n\t\t\t\tvar connectedCellWrapper = map.get(connectedCell);\n\t\t\t\t\n\t\t\t\tif (connectedCellWrapper != null)\n\t\t\t\t{\n\t\t\t\t\tif (connectedCellWrapper.visited == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tconnectedCellWrapper.visited = true;\n\t\t\t\t\t\tnodeList.push(connectedCellWrapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add connected nodes to map and list\n\t\t\tfor (var i = 0; i < previousLayerConnectedCells.length; i++)\n\t\t\t{\n\t\t\t\tvar connectedCell = previousLayerConnectedCells[i];\n\t\t\t\tvar connectedCellWrapper = map.get(connectedCell);\n\n\t\t\t\tif (connectedCellWrapper != null)\n\t\t\t\t{\n\t\t\t\t\tif (connectedCellWrapper.visited == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tconnectedCellWrapper.visited = true;\n\t\t\t\t\t\tnodeList.push(connectedCellWrapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tcellWrapper.visited = false;\n\t\tcount++;\n\t}\n};\n\n/**\n * Function: medianPos\n * \n * Performs one median positioning sweep in one direction\n * \n * Parameters:\n * \n * i - the iteration of the whole process\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.medianPos = function(i, model)\n{\n\t// Reverse sweep direction each time through this method\n\tvar downwardSweep = (i % 2 == 0);\n\t\n\tif (downwardSweep)\n\t{\n\t\tfor (var j = model.maxRank; j > 0; j--)\n\t\t{\n\t\t\tthis.rankMedianPosition(j - 1, model, j);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var j = 0; j < model.maxRank - 1; j++)\n\t\t{\n\t\t\tthis.rankMedianPosition(j + 1, model, j);\n\t\t}\n\t}\n};\n\n/**\n * Function: rankMedianPosition\n * \n * Performs median minimisation over one rank.\n * \n * Parameters:\n * \n * rankValue - the layer number of this rank\n * model - an internal model of the hierarchical layout\n * nextRankValue - the layer number whose connected cels are to be laid out\n * relative to\n */\nmxCoordinateAssignment.prototype.rankMedianPosition = function(rankValue, model, nextRankValue)\n{\n\tvar rank = model.ranks[rankValue];\n\n\t// Form an array of the order in which the cell are to be processed\n\t// , the order is given by the weighted sum of the in or out edges,\n\t// depending on whether we're traveling up or down the hierarchy.\n\tvar weightedValues = [];\n\tvar cellMap = new Object();\n\n\tfor (var i = 0; i < rank.length; i++)\n\t{\n\t\tvar currentCell = rank[i];\n\t\tweightedValues[i] = new WeightedCellSorter();\n\t\tweightedValues[i].cell = currentCell;\n\t\tweightedValues[i].rankIndex = i;\n\t\tcellMap[currentCell.id] = weightedValues[i];\n\t\tvar nextLayerConnectedCells = null;\n\t\t\n\t\tif (nextRankValue < rankValue)\n\t\t{\n\t\t\tnextLayerConnectedCells = currentCell\n\t\t\t\t\t.getPreviousLayerConnectedCells(rankValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLayerConnectedCells = currentCell\n\t\t\t\t\t.getNextLayerConnectedCells(rankValue);\n\t\t}\n\n\t\t// Calculate the weighing based on this node type and those this\n\t\t// node is connected to on the next layer\n\t\tweightedValues[i].weightedValue = this.calculatedWeightedValue(\n\t\t\t\tcurrentCell, nextLayerConnectedCells);\n\t}\n\n\tweightedValues.sort(WeightedCellSorter.prototype.compare);\n\n\t// Set the new position of each node within the rank using\n\t// its temp variable\n\t\n\tfor (var i = 0; i < weightedValues.length; i++)\n\t{\n\t\tvar numConnectionsNextLevel = 0;\n\t\tvar cell = weightedValues[i].cell;\n\t\tvar nextLayerConnectedCells = null;\n\t\tvar medianNextLevel = 0;\n\n\t\tif (nextRankValue < rankValue)\n\t\t{\n\t\t\tnextLayerConnectedCells = cell.getPreviousLayerConnectedCells(\n\t\t\t\t\trankValue).slice();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLayerConnectedCells = cell.getNextLayerConnectedCells(\n\t\t\t\t\trankValue).slice();\n\t\t}\n\n\t\tif (nextLayerConnectedCells != null)\n\t\t{\n\t\t\tnumConnectionsNextLevel = nextLayerConnectedCells.length;\n\t\t\t\n\t\t\tif (numConnectionsNextLevel > 0)\n\t\t\t{\n\t\t\t\tmedianNextLevel = this.medianXValue(nextLayerConnectedCells,\n\t\t\t\t\t\tnextRankValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// For case of no connections on the next level set the\n\t\t\t\t// median to be the current position and try to be\n\t\t\t\t// positioned there\n\t\t\t\tmedianNextLevel = cell.getGeneralPurposeVariable(rankValue);\n\t\t\t}\n\t\t}\n\n\t\tvar leftBuffer = 0.0;\n\t\tvar leftLimit = -100000000.0;\n\t\t\n\t\tfor (var j = weightedValues[i].rankIndex - 1; j >= 0;)\n\t\t{\n\t\t\tvar weightedValue = cellMap[rank[j].id];\n\t\t\t\n\t\t\tif (weightedValue != null)\n\t\t\t{\n\t\t\t\tvar leftCell = weightedValue.cell;\n\t\t\t\t\n\t\t\t\tif (weightedValue.visited)\n\t\t\t\t{\n\t\t\t\t\t// The left limit is the right hand limit of that\n\t\t\t\t\t// cell plus any allowance for unallocated cells\n\t\t\t\t\t// in-between\n\t\t\t\t\tleftLimit = leftCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t\t+ leftCell.width\n\t\t\t\t\t\t\t/ 2.0\n\t\t\t\t\t\t\t+ this.intraCellSpacing\n\t\t\t\t\t\t\t+ leftBuffer + cell.width / 2.0;\n\t\t\t\t\tj = -1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleftBuffer += leftCell.width + this.intraCellSpacing;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar rightBuffer = 0.0;\n\t\tvar rightLimit = 100000000.0;\n\t\t\n\t\tfor (var j = weightedValues[i].rankIndex + 1; j < weightedValues.length;)\n\t\t{\n\t\t\tvar weightedValue = cellMap[rank[j].id];\n\t\t\t\n\t\t\tif (weightedValue != null)\n\t\t\t{\n\t\t\t\tvar rightCell = weightedValue.cell;\n\t\t\t\t\n\t\t\t\tif (weightedValue.visited)\n\t\t\t\t{\n\t\t\t\t\t// The left limit is the right hand limit of that\n\t\t\t\t\t// cell plus any allowance for unallocated cells\n\t\t\t\t\t// in-between\n\t\t\t\t\trightLimit = rightCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t\t- rightCell.width\n\t\t\t\t\t\t\t/ 2.0\n\t\t\t\t\t\t\t- this.intraCellSpacing\n\t\t\t\t\t\t\t- rightBuffer - cell.width / 2.0;\n\t\t\t\t\tj = weightedValues.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\trightBuffer += rightCell.width + this.intraCellSpacing;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (medianNextLevel >= leftLimit && medianNextLevel <= rightLimit)\n\t\t{\n\t\t\tcell.setGeneralPurposeVariable(rankValue, medianNextLevel);\n\t\t}\n\t\telse if (medianNextLevel < leftLimit)\n\t\t{\n\t\t\t// Couldn't place at median value, place as close to that\n\t\t\t// value as possible\n\t\t\tcell.setGeneralPurposeVariable(rankValue, leftLimit);\n\t\t\tthis.currentXDelta += leftLimit - medianNextLevel;\n\t\t}\n\t\telse if (medianNextLevel > rightLimit)\n\t\t{\n\t\t\t// Couldn't place at median value, place as close to that\n\t\t\t// value as possible\n\t\t\tcell.setGeneralPurposeVariable(rankValue, rightLimit);\n\t\t\tthis.currentXDelta += medianNextLevel - rightLimit;\n\t\t}\n\n\t\tweightedValues[i].visited = true;\n\t}\n};\n\n/**\n * Function: calculatedWeightedValue\n * \n * Calculates the priority the specified cell has based on the type of its\n * cell and the cells it is connected to on the next layer\n * \n * Parameters:\n * \n * currentCell - the cell whose weight is to be calculated\n * collection - the cells the specified cell is connected to\n */\nmxCoordinateAssignment.prototype.calculatedWeightedValue = function(currentCell, collection)\n{\n\tvar totalWeight = 0;\n\t\n\tfor (var i = 0; i < collection.length; i++)\n\t{\n\t\tvar cell = collection[i];\n\n\t\tif (currentCell.isVertex() && cell.isVertex())\n\t\t{\n\t\t\ttotalWeight++;\n\t\t}\n\t\telse if (currentCell.isEdge() && cell.isEdge())\n\t\t{\n\t\t\ttotalWeight += 8;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttotalWeight += 2;\n\t\t}\n\t}\n\n\treturn totalWeight;\n};\n\n/**\n * Function: medianXValue\n * \n * Calculates the median position of the connected cell on the specified\n * rank\n * \n * Parameters:\n * \n * connectedCells - the cells the candidate connects to on this level\n * rankValue - the layer number of this rank\n */\nmxCoordinateAssignment.prototype.medianXValue = function(connectedCells, rankValue)\n{\n\tif (connectedCells.length == 0)\n\t{\n\t\treturn 0;\n\t}\n\n\tvar medianValues = [];\n\n\tfor (var i = 0; i < connectedCells.length; i++)\n\t{\n\t\tmedianValues[i] = connectedCells[i].getGeneralPurposeVariable(rankValue);\n\t}\n\n\tmedianValues.sort(function(a,b){return a - b;});\n\t\n\tif (connectedCells.length % 2 == 1)\n\t{\n\t\t// For odd numbers of adjacent vertices return the median\n\t\treturn medianValues[Math.floor(connectedCells.length / 2)];\n\t}\n\telse\n\t{\n\t\tvar medianPoint = connectedCells.length / 2;\n\t\tvar leftMedian = medianValues[medianPoint - 1];\n\t\tvar rightMedian = medianValues[medianPoint];\n\n\t\treturn ((leftMedian + rightMedian) / 2);\n\t}\n};\n\n/**\n * Function: initialCoords\n * \n * Sets up the layout in an initial positioning. The ranks are all centered\n * as much as possible along the middle vertex in each rank. The other cells\n * are then placed as close as possible on either side.\n * \n * Parameters:\n * \n * facade - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.initialCoords = function(facade, model)\n{\n\tthis.calculateWidestRank(facade, model);\n\n\t// Sweep up and down from the widest rank\n\tfor (var i = this.widestRank; i >= 0; i--)\n\t{\n\t\tif (i < model.maxRank)\n\t\t{\n\t\t\tthis.rankCoordinates(i, facade, model);\n\t\t}\n\t}\n\n\tfor (var i = this.widestRank+1; i <= model.maxRank; i++)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tthis.rankCoordinates(i, facade, model);\n\t\t}\n\t}\n};\n\n/**\n * Function: rankCoordinates\n * \n * Sets up the layout in an initial positioning. All the first cells in each\n * rank are moved to the left and the rest of the rank inserted as close\n * together as their size and buffering permits. This method works on just\n * the specified rank.\n * \n * Parameters:\n * \n * rankValue - the current rank being processed\n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.rankCoordinates = function(rankValue, graph, model)\n{\n\tvar rank = model.ranks[rankValue];\n\tvar maxY = 0.0;\n\tvar localX = this.initialX + (this.widestRankValue - this.rankWidths[rankValue])\n\t\t\t/ 2;\n\n\t// Store whether or not any of the cells' bounds were unavailable so\n\t// to only issue the warning once for all cells\n\tvar boundsWarning = false;\n\t\n\tfor (var i = 0; i < rank.length; i++)\n\t{\n\t\tvar node = rank[i];\n\t\t\n\t\tif (node.isVertex())\n\t\t{\n\t\t\tvar bounds = this.layout.getVertexBounds(node.cell);\n\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnode.width = bounds.width;\n\t\t\t\t\tnode.height = bounds.height;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.width = bounds.height;\n\t\t\t\t\tnode.height = bounds.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tboundsWarning = true;\n\t\t\t}\n\n\t\t\tmaxY = Math.max(maxY, node.height);\n\t\t}\n\t\telse if (node.isEdge())\n\t\t{\n\t\t\t// The width is the number of additional parallel edges\n\t\t\t// time the parallel edge spacing\n\t\t\tvar numEdges = 1;\n\n\t\t\tif (node.edges != null)\n\t\t\t{\n\t\t\t\tnumEdges = node.edges.length;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxLog.warn('edge.edges is null');\n\t\t\t}\n\n\t\t\tnode.width = (numEdges - 1) * this.parallelEdgeSpacing;\n\t\t}\n\n\t\t// Set the initial x-value as being the best result so far\n\t\tlocalX += node.width / 2.0;\n\t\tnode.setX(rankValue, localX);\n\t\tnode.setGeneralPurposeVariable(rankValue, localX);\n\t\tlocalX += node.width / 2.0;\n\t\tlocalX += this.intraCellSpacing;\n\t}\n\n\tif (boundsWarning == true)\n\t{\n\t\tmxLog.warn('At least one cell has no bounds');\n\t}\n};\n\n/**\n * Function: calculateWidestRank\n * \n * Calculates the width rank in the hierarchy. Also set the y value of each\n * rank whilst performing the calculation\n * \n * Parameters:\n * \n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.calculateWidestRank = function(graph, model)\n{\n\t// Starting y co-ordinate\n\tvar y = -this.interRankCellSpacing;\n\t\n\t// Track the widest cell on the last rank since the y\n\t// difference depends on it\n\tvar lastRankMaxCellHeight = 0.0;\n\tthis.rankWidths = [];\n\tthis.rankY = [];\n\n\tfor (var rankValue = model.maxRank; rankValue >= 0; rankValue--)\n\t{\n\t\t// Keep track of the widest cell on this rank\n\t\tvar maxCellHeight = 0.0;\n\t\tvar rank = model.ranks[rankValue];\n\t\tvar localX = this.initialX;\n\n\t\t// Store whether or not any of the cells' bounds were unavailable so\n\t\t// to only issue the warning once for all cells\n\t\tvar boundsWarning = false;\n\t\t\n\t\tfor (var i = 0; i < rank.length; i++)\n\t\t{\n\t\t\tvar node = rank[i];\n\n\t\t\tif (node.isVertex())\n\t\t\t{\n\t\t\t\tvar bounds = this.layout.getVertexBounds(node.cell);\n\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.width = bounds.width;\n\t\t\t\t\t\tnode.height = bounds.height;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.width = bounds.height;\n\t\t\t\t\t\tnode.height = bounds.width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tboundsWarning = true;\n\t\t\t\t}\n\n\t\t\t\tmaxCellHeight = Math.max(maxCellHeight, node.height);\n\t\t\t}\n\t\t\telse if (node.isEdge())\n\t\t\t{\n\t\t\t\t// The width is the number of additional parallel edges\n\t\t\t\t// time the parallel edge spacing\n\t\t\t\tvar numEdges = 1;\n\n\t\t\t\tif (node.edges != null)\n\t\t\t\t{\n\t\t\t\t\tnumEdges = node.edges.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmxLog.warn('edge.edges is null');\n\t\t\t\t}\n\n\t\t\t\tnode.width = (numEdges - 1) * this.parallelEdgeSpacing;\n\t\t\t}\n\n\t\t\t// Set the initial x-value as being the best result so far\n\t\t\tlocalX += node.width / 2.0;\n\t\t\tnode.setX(rankValue, localX);\n\t\t\tnode.setGeneralPurposeVariable(rankValue, localX);\n\t\t\tlocalX += node.width / 2.0;\n\t\t\tlocalX += this.intraCellSpacing;\n\n\t\t\tif (localX > this.widestRankValue)\n\t\t\t{\n\t\t\t\tthis.widestRankValue = localX;\n\t\t\t\tthis.widestRank = rankValue;\n\t\t\t}\n\n\t\t\tthis.rankWidths[rankValue] = localX;\n\t\t}\n\n\t\tif (boundsWarning == true)\n\t\t{\n\t\t\tmxLog.warn('At least one cell has no bounds');\n\t\t}\n\n\t\tthis.rankY[rankValue] = y;\n\t\tvar distanceToNextRank = maxCellHeight / 2.0\n\t\t\t\t+ lastRankMaxCellHeight / 2.0 + this.interRankCellSpacing;\n\t\tlastRankMaxCellHeight = maxCellHeight;\n\n\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.orientation == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\ty += distanceToNextRank;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ty -= distanceToNextRank;\n\t\t}\n\n\t\tfor (var i = 0; i < rank.length; i++)\n\t\t{\n\t\t\tvar cell = rank[i];\n\t\t\tcell.setY(rankValue, y);\n\t\t}\n\t}\n};\n\n/**\n * Function: minPath\n * \n * Straightens out chains of virtual nodes where possibleacade to those stored after this layout\n * processing step has completed.\n * \n * Parameters:\n *\n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.minPath = function(graph, model)\n{\n\t// Work down and up each edge with at least 2 control points\n\t// trying to straighten each one out. If the same number of\n\t// straight segments are formed in both directions, the \n\t// preferred direction used is the one where the final\n\t// control points have the least offset from the connectable \n\t// region of the terminating vertices\n\tvar edges = model.edgeMapper.getValues();\n\t\n\tfor (var j = 0; j < edges.length; j++)\n\t{\n\t\tvar cell = edges[j];\n\t\t\n\t\tif (cell.maxRank - cell.minRank - 1 < 1)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At least two virtual nodes in the edge\n\t\t// Check first whether the edge is already straight\n\t\tvar referenceX = cell\n\t\t\t\t.getGeneralPurposeVariable(cell.minRank + 1);\n\t\tvar edgeStraight = true;\n\t\tvar refSegCount = 0;\n\t\t\n\t\tfor (var i = cell.minRank + 2; i < cell.maxRank; i++)\n\t\t{\n\t\t\tvar x = cell.getGeneralPurposeVariable(i);\n\n\t\t\tif (referenceX != x)\n\t\t\t{\n\t\t\t\tedgeStraight = false;\n\t\t\t\treferenceX = x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\trefSegCount++;\n\t\t\t}\n\t\t}\n\n\t\tif (!edgeStraight)\n\t\t{\n\t\t\tvar upSegCount = 0;\n\t\t\tvar downSegCount = 0;\n\t\t\tvar upXPositions = [];\n\t\t\tvar downXPositions = [];\n\n\t\t\tvar currentX = cell.getGeneralPurposeVariable(cell.minRank + 1);\n\n\t\t\tfor (var i = cell.minRank + 1; i < cell.maxRank - 1; i++)\n\t\t\t{\n\t\t\t\t// Attempt to straight out the control point on the\n\t\t\t\t// next segment up with the current control point.\n\t\t\t\tvar nextX = cell.getX(i + 1);\n\n\t\t\t\tif (currentX == nextX)\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = currentX;\n\t\t\t\t\tupSegCount++;\n\t\t\t\t}\n\t\t\t\telse if (this.repositionValid(model, cell, i + 1, currentX))\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = currentX;\n\t\t\t\t\tupSegCount++;\n\t\t\t\t\t// Leave currentX at same value\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = nextX;\n\t\t\t\t\tcurrentX = nextX;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\n\t\t\tcurrentX = cell.getX(i);\n\n\t\t\tfor (var i = cell.maxRank - 1; i > cell.minRank + 1; i--)\n\t\t\t{\n\t\t\t\t// Attempt to straight out the control point on the\n\t\t\t\t// next segment down with the current control point.\n\t\t\t\tvar nextX = cell.getX(i - 1);\n\n\t\t\t\tif (currentX == nextX)\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = currentX;\n\t\t\t\t\tdownSegCount++;\n\t\t\t\t}\n\t\t\t\telse if (this.repositionValid(model, cell, i - 1, currentX))\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = currentX;\n\t\t\t\t\tdownSegCount++;\n\t\t\t\t\t// Leave currentX at same value\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = cell.getX(i-1);\n\t\t\t\t\tcurrentX = nextX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (downSegCount > refSegCount || upSegCount > refSegCount)\n\t\t\t{\n\t\t\t\tif (downSegCount >= upSegCount)\n\t\t\t\t{\n\t\t\t\t\t// Apply down calculation values\n\t\t\t\t\tfor (var i = cell.maxRank - 2; i > cell.minRank; i--)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell.setX(i, downXPositions[i - cell.minRank - 1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (upSegCount > downSegCount)\n\t\t\t\t{\n\t\t\t\t\t// Apply up calculation values\n\t\t\t\t\tfor (var i = cell.minRank + 2; i < cell.maxRank; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell.setX(i, upXPositions[i - cell.minRank - 2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Neither direction provided a favourable result\n\t\t\t\t\t// But both calculations are better than the\n\t\t\t\t\t// existing solution, so apply the one with minimal\n\t\t\t\t\t// offset to attached vertices at either end.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: repositionValid\n * \n * Determines whether or not a node may be moved to the specified x \n * position on the specified rank\n * \n * Parameters:\n *\n * model - the layout model\n * cell - the cell being analysed\n * rank - the layer of the cell\n * position - the x position being sought\n */\nmxCoordinateAssignment.prototype.repositionValid = function(model, cell, rank, position)\n{\n\tvar rankArray = model.ranks[rank];\n\tvar rankIndex = -1;\n\n\tfor (var i = 0; i < rankArray.length; i++)\n\t{\n\t\tif (cell == rankArray[i])\n\t\t{\n\t\t\trankIndex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (rankIndex < 0)\n\t{\n\t\treturn false;\n\t}\n\n\tvar currentX = cell.getGeneralPurposeVariable(rank);\n\n\tif (position < currentX)\n\t{\n\t\t// Trying to move node to the left.\n\t\tif (rankIndex == 0)\n\t\t{\n\t\t\t// Left-most node, can move anywhere\n\t\t\treturn true;\n\t\t}\n\n\t\tvar leftCell = rankArray[rankIndex - 1];\n\t\tvar leftLimit = leftCell.getGeneralPurposeVariable(rank);\n\t\tleftLimit = leftLimit + leftCell.width / 2\n\t\t\t\t+ this.intraCellSpacing + cell.width / 2;\n\n\t\tif (leftLimit <= position)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (position > currentX)\n\t{\n\t\t// Trying to move node to the right.\n\t\tif (rankIndex == rankArray.length - 1)\n\t\t{\n\t\t\t// Right-most node, can move anywhere\n\t\t\treturn true;\n\t\t}\n\n\t\tvar rightCell = rankArray[rankIndex + 1];\n\t\tvar rightLimit = rightCell.getGeneralPurposeVariable(rank);\n\t\trightLimit = rightLimit - rightCell.width / 2\n\t\t\t\t- this.intraCellSpacing - cell.width / 2;\n\n\t\tif (rightLimit >= position)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/**\n * Function: setCellLocations\n * \n * Sets the cell locations in the facade to those stored after this layout\n * processing step has completed.\n * \n * Parameters:\n *\n * graph - the input graph\n * model - the layout model\n */\nmxCoordinateAssignment.prototype.setCellLocations = function(graph, model)\n{\n\tthis.rankTopY = [];\n\tthis.rankBottomY = [];\n\n\tfor (var i = 0; i < model.ranks.length; i++)\n\t{\n\t\tthis.rankTopY[i] = Number.MAX_VALUE;\n\t\tthis.rankBottomY[i] = -Number.MAX_VALUE;\n\t}\n\t\n\tvar vertices = model.vertexMapper.getValues();\n\n\t// Process vertices all first, since they define the lower and \n\t// limits of each rank. Between these limits lie the channels\n\t// where the edges can be routed across the graph\n\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tthis.setVertexLocation(vertices[i]);\n\t}\n\t\n\t// Post process edge styles. Needs the vertex locations set for initial\n\t// values of the top and bottoms of each rank\n\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.ORTHOGONAL\n\t\t\t|| this.layout.edgeStyle == mxHierarchicalEdgeStyle.POLYLINE\n\t\t\t|| this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t{\n\t\tthis.localEdgeProcessing(model);\n\t}\n\n\tvar edges = model.edgeMapper.getValues();\n\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tthis.setEdgePosition(edges[i]);\n\t}\n};\n\n/**\n * Function: localEdgeProcessing\n * \n * Separates the x position of edges as they connect to vertices\n * \n * Parameters:\n *\n * model - the layout model\n */\nmxCoordinateAssignment.prototype.localEdgeProcessing = function(model)\n{\n\t// Iterate through each vertex, look at the edges connected in\n\t// both directions.\n\tfor (var rankIndex = 0; rankIndex < model.ranks.length; rankIndex++)\n\t{\n\t\tvar rank = model.ranks[rankIndex];\n\n\t\tfor (var cellIndex = 0; cellIndex < rank.length; cellIndex++)\n\t\t{\n\t\t\tvar cell = rank[cellIndex];\n\n\t\t\tif (cell.isVertex())\n\t\t\t{\n\t\t\t\tvar currentCells = cell.getPreviousLayerConnectedCells(rankIndex);\n\n\t\t\t\tvar currentRank = rankIndex - 1;\n\n\t\t\t\t// Two loops, last connected cells, and next\n\t\t\t\tfor (var k = 0; k < 2; k++)\n\t\t\t\t{\n\t\t\t\t\tif (currentRank > -1\n\t\t\t\t\t\t\t&& currentRank < model.ranks.length\n\t\t\t\t\t\t\t&& currentCells != null\n\t\t\t\t\t\t\t&& currentCells.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sortedCells = [];\n\n\t\t\t\t\t\tfor (var j = 0; j < currentCells.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar sorter = new WeightedCellSorter(\n\t\t\t\t\t\t\t\t\tcurrentCells[j], currentCells[j].getX(currentRank));\n\t\t\t\t\t\t\tsortedCells.push(sorter);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsortedCells.sort(WeightedCellSorter.prototype.compare);\n\n\t\t\t\t\t\tvar leftLimit = cell.x[0] - cell.width / 2;\n\t\t\t\t\t\tvar rightLimit = leftLimit + cell.width;\n\n\t\t\t\t\t\t// Connected edge count starts at 1 to allow for buffer\n\t\t\t\t\t\t// with edge of vertex\n\t\t\t\t\t\tvar connectedEdgeCount = 0;\n\t\t\t\t\t\tvar connectedEdgeGroupCount = 0;\n\t\t\t\t\t\tvar connectedEdges = [];\n\t\t\t\t\t\t// Calculate width requirements for all connected edges\n\t\t\t\t\t\tfor (var j = 0; j < sortedCells.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar innerCell = sortedCells[j].cell;\n\t\t\t\t\t\t\tvar connections;\n\n\t\t\t\t\t\t\tif (innerCell.isVertex())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Get the connecting edge\n\t\t\t\t\t\t\t\tif (k == 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnections = cell.connectsAsSource;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnections = cell.connectsAsTarget;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor (var connIndex = 0; connIndex < connections.length; connIndex++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (connections[connIndex].source == innerCell\n\t\t\t\t\t\t\t\t\t\t\t|| connections[connIndex].target == innerCell)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconnectedEdgeCount += connections[connIndex].edges\n\t\t\t\t\t\t\t\t\t\t\t\t.length;\n\t\t\t\t\t\t\t\t\t\tconnectedEdgeGroupCount++;\n\n\t\t\t\t\t\t\t\t\t\tconnectedEdges.push(connections[connIndex]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconnectedEdgeCount += innerCell.edges.length;\n\t\t\t\t\t\t\t\tconnectedEdgeGroupCount++;\n\t\t\t\t\t\t\t\tconnectedEdges.push(innerCell);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar requiredWidth = (connectedEdgeCount + 1)\n\t\t\t\t\t\t\t\t* this.prefHozEdgeSep;\n\n\t\t\t\t\t\t// Add a buffer on the edges of the vertex if the edge count allows\n\t\t\t\t\t\tif (cell.width > requiredWidth\n\t\t\t\t\t\t\t\t+ (2 * this.prefHozEdgeSep))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tleftLimit += this.prefHozEdgeSep;\n\t\t\t\t\t\t\trightLimit -= this.prefHozEdgeSep;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar availableWidth = rightLimit - leftLimit;\n\t\t\t\t\t\tvar edgeSpacing = availableWidth / connectedEdgeCount;\n\n\t\t\t\t\t\tvar currentX = leftLimit + edgeSpacing / 2.0;\n\t\t\t\t\t\tvar currentYOffset = this.minEdgeJetty - this.prefVertEdgeOff;\n\t\t\t\t\t\tvar maxYOffset = 0;\n\n\t\t\t\t\t\tfor (var j = 0; j < connectedEdges.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar numActualEdges = connectedEdges[j].edges\n\t\t\t\t\t\t\t\t\t.length;\n\t\t\t\t\t\t\tvar pos = this.jettyPositions[connectedEdges[j].ids[0]];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (pos == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpos = [];\n\t\t\t\t\t\t\t\tthis.jettyPositions[connectedEdges[j].ids[0]] = pos;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (j < connectedEdgeCount / 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcurrentYOffset += this.prefVertEdgeOff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (j > connectedEdgeCount / 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcurrentYOffset -= this.prefVertEdgeOff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Ignore the case if equals, this means the second of 2\n\t\t\t\t\t\t\t// jettys with the same y (even number of edges)\n\n\t\t\t\t\t\t\tfor (var m = 0; m < numActualEdges; m++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpos[m * 4 + k * 2] = currentX;\n\t\t\t\t\t\t\t\tcurrentX += edgeSpacing;\n\t\t\t\t\t\t\t\tpos[m * 4 + k * 2 + 1] = currentYOffset;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmaxYOffset = Math.max(maxYOffset,\n\t\t\t\t\t\t\t\t\tcurrentYOffset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentCells = cell.getNextLayerConnectedCells(rankIndex);\n\n\t\t\t\t\tcurrentRank = rankIndex + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: setEdgePosition\n * \n * Fixes the control points\n */\nmxCoordinateAssignment.prototype.setEdgePosition = function(cell)\n{\n\t// For parallel edges we need to seperate out the points a\n\t// little\n\tvar offsetX = 0;\n\t// Only set the edge control points once\n\n\tif (cell.temp[0] != 101207)\n\t{\n\t\tvar maxRank = cell.maxRank;\n\t\tvar minRank = cell.minRank;\n\t\t\n\t\tif (maxRank == minRank)\n\t\t{\n\t\t\tmaxRank = cell.source.maxRank;\n\t\t\tminRank = cell.target.minRank;\n\t\t}\n\t\t\n\t\tvar parallelEdgeCount = 0;\n\t\tvar jettys = this.jettyPositions[cell.ids[0]];\n\n\t\tvar source = cell.isReversed ? cell.target.cell : cell.source.cell;\n\t\tvar graph = this.layout.graph;\n\t\tvar layoutReversed = this.orientation == mxConstants.DIRECTION_EAST\n\t\t\t\t|| this.orientation == mxConstants.DIRECTION_SOUTH;\n\n\t\tfor (var i = 0; i < cell.edges.length; i++)\n\t\t{\n\t\t\tvar realEdge = cell.edges[i];\n\t\t\tvar realSource = this.layout.getVisibleTerminal(realEdge, true);\n\n\t\t\t//List oldPoints = graph.getPoints(realEdge);\n\t\t\tvar newPoints = [];\n\n\t\t\t// Single length reversed edges end up with the jettys in the wrong\n\t\t\t// places. Since single length edges only have jettys, not segment\n\t\t\t// control points, we just say the edge isn't reversed in this section\n\t\t\tvar reversed = cell.isReversed;\n\t\t\t\n\t\t\tif (realSource != source)\n\t\t\t{\n\t\t\t\t// The real edges include all core model edges and these can go\n\t\t\t\t// in both directions. If the source of the hierarchical model edge\n\t\t\t\t// isn't the source of the specific real edge in this iteration\n\t\t\t\t// treat if as reversed\n\t\t\t\treversed = !reversed;\n\t\t\t}\n\n\t\t\t// First jetty of edge\n\t\t\tif (jettys != null)\n\t\t\t{\n\t\t\t\tvar arrayOffset = reversed ? 2 : 0;\n\t\t\t\tvar y = reversed ?\n\t\t\t\t\t\t(layoutReversed ? this.rankBottomY[minRank] : this.rankTopY[minRank]) :\n\t\t\t\t\t\t\t(layoutReversed ? this.rankTopY[maxRank] : this.rankBottomY[maxRank]);\n\t\t\t\tvar jetty = jettys[parallelEdgeCount * 4 + 1 + arrayOffset];\n\t\t\t\t\n\t\t\t\tif (reversed != layoutReversed)\n\t\t\t\t{\n\t\t\t\t\tjetty = -jetty;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ty += jetty;\n\t\t\t\tvar x = jettys[parallelEdgeCount * 4 + arrayOffset];\n\t\t\t\t\n\t\t\t\tvar modelSource = graph.model.getTerminal(realEdge, true);\n\n\t\t\t\tif (this.layout.isPort(modelSource) && graph.model.getParent(modelSource) == realSource)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.view.getState(modelSource);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = state.x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = realSource.geometry.x + cell.source.width * modelSource.geometry.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH\n\t\t\t\t\t\t|| this.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\t\t\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(x, y + jetty));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(y, x));\n\t\t\t\t\t\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(y + jetty, x));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Declare variables to define loop through edge points and \n\t\t\t// change direction if edge is reversed\n\n\t\t\tvar loopStart = cell.x.length - 1;\n\t\t\tvar loopLimit = -1;\n\t\t\tvar loopDelta = -1;\n\t\t\tvar currentRank = cell.maxRank - 1;\n\n\t\t\tif (reversed)\n\t\t\t{\n\t\t\t\tloopStart = 0;\n\t\t\t\tloopLimit = cell.x.length;\n\t\t\t\tloopDelta = 1;\n\t\t\t\tcurrentRank = cell.minRank + 1;\n\t\t\t}\n\t\t\t// Reversed edges need the points inserted in\n\t\t\t// reverse order\n\t\t\tfor (var j = loopStart; (cell.maxRank != cell.minRank) && j != loopLimit; j += loopDelta)\n\t\t\t{\n\t\t\t\t// The horizontal position in a vertical layout\n\t\t\t\tvar positionX = cell.x[j] + offsetX;\n\n\t\t\t\t// Work out the vertical positions in a vertical layout\n\t\t\t\t// in the edge buffer channels above and below this rank\n\t\t\t\tvar topChannelY = (this.rankTopY[currentRank] + this.rankBottomY[currentRank + 1]) / 2.0;\n\t\t\t\tvar bottomChannelY = (this.rankTopY[currentRank - 1] + this.rankBottomY[currentRank]) / 2.0;\n\n\t\t\t\tif (reversed)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = topChannelY;\n\t\t\t\t\ttopChannelY = bottomChannelY;\n\t\t\t\t\tbottomChannelY = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(positionX, topChannelY));\n\t\t\t\t\tnewPoints.push(new mxPoint(positionX, bottomChannelY));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(topChannelY, positionX));\n\t\t\t\t\tnewPoints.push(new mxPoint(bottomChannelY, positionX));\n\t\t\t\t}\n\n\t\t\t\tthis.limitX = Math.max(this.limitX, positionX);\n\t\t\t\tcurrentRank += loopDelta;\n\t\t\t}\n\n\t\t\t// Second jetty of edge\n\t\t\tif (jettys != null)\n\t\t\t{\n\t\t\t\tvar arrayOffset = reversed ? 2 : 0;\n\t\t\t\tvar rankY = reversed ?\n\t\t\t\t\t\t(layoutReversed ? this.rankTopY[maxRank] : this.rankBottomY[maxRank]) :\n\t\t\t\t\t\t\t(layoutReversed ? this.rankBottomY[minRank] : this.rankTopY[minRank]);\n\t\t\t\tvar jetty = jettys[parallelEdgeCount * 4 + 3 - arrayOffset];\n\t\t\t\t\n\t\t\t\tif (reversed != layoutReversed)\n\t\t\t\t{\n\t\t\t\t\tjetty = -jetty;\n\t\t\t\t}\n\t\t\t\tvar y = rankY - jetty;\n\t\t\t\tvar x = jettys[parallelEdgeCount * 4 + 2 - arrayOffset];\n\t\t\t\t\n\t\t\t\tvar modelTarget = graph.model.getTerminal(realEdge, false);\n\t\t\t\tvar realTarget = this.layout.getVisibleTerminal(realEdge, false);\n\n\t\t\t\tif (this.layout.isPort(modelTarget) && graph.model.getParent(modelTarget) == realTarget)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.view.getState(modelTarget);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = state.x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = realTarget.geometry.x + cell.target.width * modelTarget.geometry.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(x, y - jetty));\n\t\t\t\t\t}\n\n\t\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(y - jetty, x));\n\t\t\t\t\t}\n\n\t\t\t\t\tnewPoints.push(new mxPoint(y, x));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cell.isReversed)\n\t\t\t{\n\t\t\t\tthis.processReversedEdge(cell, realEdge);\n\t\t\t}\n\n\t\t\tthis.layout.setEdgePoints(realEdge, newPoints);\n\n\t\t\t// Increase offset so next edge is drawn next to\n\t\t\t// this one\n\t\t\tif (offsetX == 0.0)\n\t\t\t{\n\t\t\t\toffsetX = this.parallelEdgeSpacing;\n\t\t\t}\n\t\t\telse if (offsetX > 0)\n\t\t\t{\n\t\t\t\toffsetX = -offsetX;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toffsetX = -offsetX + this.parallelEdgeSpacing;\n\t\t\t}\n\t\t\t\n\t\t\tparallelEdgeCount++;\n\t\t}\n\n\t\tcell.temp[0] = 101207;\n\t}\n};\n\n\n/**\n * Function: setVertexLocation\n * \n * Fixes the position of the specified vertex.\n * \n * Parameters:\n * \n * cell - the vertex to position\n */\nmxCoordinateAssignment.prototype.setVertexLocation = function(cell)\n{\n\tvar realCell = cell.cell;\n\tvar positionX = cell.x[0] - cell.width / 2;\n\tvar positionY = cell.y[0] - cell.height / 2;\n\n\tthis.rankTopY[cell.minRank] = Math.min(this.rankTopY[cell.minRank], positionY);\n\tthis.rankBottomY[cell.minRank] = Math.max(this.rankBottomY[cell.minRank],\n\t\t\tpositionY + cell.height);\n\n\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tthis.layout.setVertexLocation(realCell, positionX, positionY);\n\t}\n\telse\n\t{\n\t\tthis.layout.setVertexLocation(realCell, positionY, positionX);\n\t}\n\n\tthis.limitX = Math.max(this.limitX, positionX + cell.width);\n};\n\n/**\n * Function: processReversedEdge\n * \n * Hook to add additional processing\n * \n * Parameters:\n * \n * edge - the hierarchical model edge\n * realEdge - the real edge in the graph\n */\nmxCoordinateAssignment.prototype.processReversedEdge = function(graph, model)\n{\n\t// hook for subclassers\n};\n\n__mxOutput.mxCoordinateAssignment = typeof mxCoordinateAssignment !== 'undefined' ? mxCoordinateAssignment : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneOrdering\n * \n * An implementation of the first stage of the Sugiyama layout. Straightforward\n * longest path calculation of layer assignment\n * \n * Constructor: mxSwimlaneOrdering\n *\n * Creates a cycle remover for the given internal model.\n */\nfunction mxSwimlaneOrdering(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxSwimlaneOrdering.prototype = new mxHierarchicalLayoutStage();\nmxSwimlaneOrdering.prototype.constructor = mxSwimlaneOrdering;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxSwimlaneOrdering.prototype.layout = null;\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxSwimlaneOrdering.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\tvar seenNodes = new Object();\n\tvar unseenNodes = mxUtils.clone(model.vertexMapper, null, true);\n\t\n\t// Perform a dfs through the internal model. If a cycle is found,\n\t// reverse it.\n\tvar rootsArray = null;\n\t\n\tif (model.roots != null)\n\t{\n\t\tvar modelRoots = model.roots;\n\t\trootsArray = [];\n\t\t\n\t\tfor (var i = 0; i < modelRoots.length; i++)\n\t\t{\n\t\t\tvar nodeId = mxCellPath.create(modelRoots[i]);\n\t\t\trootsArray[i] = model.vertexMapper.get(modelRoots[i]);\n\t\t}\n\t}\n\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\t// Ancestor hashes only line up within a swimlane\n\t\tvar isAncestor = parent != null && parent.swimlaneIndex == node.swimlaneIndex && node.isAncestor(parent);\n\n\t\t// If the source->target swimlane indices go from higher to\n\t\t// lower, the edge is reverse\n\t\tvar reversedOverSwimlane = parent != null && connectingEdge != null &&\n\t\t\t\t\t\tparent.swimlaneIndex < node.swimlaneIndex && connectingEdge.source == node;\n\n\t\tif (isAncestor)\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t}\n\t\telse if (reversedOverSwimlane)\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsTarget);\n\t\t\tnode.connectsAsTarget.push(connectingEdge);\n\t\t\tparent.connectsAsSource.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsSource);\n\t\t}\n\t\t\n\t\tvar cellId = mxCellPath.create(node.cell);\n\t\tseenNodes[cellId] = node;\n\t\tdelete unseenNodes[cellId];\n\t}, rootsArray, true, null);\n};\n\n__mxOutput.mxSwimlaneOrdering = typeof mxSwimlaneOrdering !== 'undefined' ? mxSwimlaneOrdering : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxHierarchicalLayout\n * \n * A hierarchical layout algorithm.\n * \n * Constructor: mxHierarchicalLayout\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * orientation - Optional constant that defines the orientation of this\n * layout.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxHierarchicalLayout(graph, orientation, deterministic)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.orientation = (orientation != null) ? orientation : mxConstants.DIRECTION_NORTH;\n\tthis.deterministic = (deterministic != null) ? deterministic : true;\n};\n\nvar mxHierarchicalEdgeStyle =\n{\n\tORTHOGONAL: 1,\n\tPOLYLINE: 2,\n\tSTRAIGHT: 3,\n\tCURVE: 4\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxHierarchicalLayout.prototype = new mxGraphLayout();\nmxHierarchicalLayout.prototype.constructor = mxHierarchicalLayout;\n\n/**\n * Variable: roots\n * \n * Holds the array of <mxCell> that this layout contains.\n */\nmxHierarchicalLayout.prototype.roots = null;\n\n/**\n * Variable: resizeParent\n * \n * Specifies if the parent should be resized after the layout so that it\n * contains all the child cells. Default is false. See also <parentBorder>.\n */\nmxHierarchicalLayout.prototype.resizeParent = false;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxHierarchicalLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: moveParent\n * \n * Specifies if the parent should be moved if <resizeParent> is enabled.\n * Default is false.\n */\nmxHierarchicalLayout.prototype.moveParent = false;\n\n/**\n * Variable: parentBorder\n * \n * The border to be added around the children if the parent is to be\n * resized using <resizeParent>. Default is 0.\n */\nmxHierarchicalLayout.prototype.parentBorder = 0;\n\n/**\n * Variable: intraCellSpacing\n * \n * The spacing buffer added between cells on the same layer. Default is 30.\n */\nmxHierarchicalLayout.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The spacing buffer added between cell on adjacent layers. Default is 50.\n */\nmxHierarchicalLayout.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: interHierarchySpacing\n * \n * The spacing buffer between unconnected hierarchies. Default is 60.\n */\nmxHierarchicalLayout.prototype.interHierarchySpacing = 60;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges\n */\nmxHierarchicalLayout.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: orientation\n * \n * The position of the root node(s) relative to the laid out graph in.\n * Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxHierarchicalLayout.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxHierarchicalLayout.prototype.fineTuning = true;\n\n/**\n * \n * Variable: tightenToSource\n * \n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxHierarchicalLayout.prototype.tightenToSource = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxHierarchicalLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: traverseAncestors\n * \n * Whether or not to drill into child cells and layout in reverse\n * group order. This also cause the layout to navigate edges whose \n * terminal vertices have different parents but are in the same \n * ancestry chain\n */\nmxHierarchicalLayout.prototype.traverseAncestors = true;\n\n/**\n * Variable: model\n * \n * The internal <mxGraphHierarchyModel> formed of the layout.\n */\nmxHierarchicalLayout.prototype.model = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgeSourceTermCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesTargetTermCache = null;\n\n/**\n * Variable: edgeStyle\n * \n * The style to apply between cell layers to edge segments\n */\nmxHierarchicalLayout.prototype.edgeStyle = mxHierarchicalEdgeStyle.POLYLINE;\n\n/**\n * Function: getModel\n * \n * Returns the internal <mxGraphHierarchyModel> for this layout algorithm.\n */\nmxHierarchicalLayout.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: execute\n * \n * Executes the layout for the children of the specified parent.\n * \n * Parameters:\n * \n * parent - Parent <mxCell> that contains the children to be laid out.\n * roots - Optional starting roots of the layout.\n */\nmxHierarchicalLayout.prototype.execute = function(parent, roots)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.model;\n\tthis.edgesCache = new mxDictionary();\n\tthis.edgeSourceTermCache = new mxDictionary();\n\tthis.edgesTargetTermCache = new mxDictionary();\n\n\tif (roots != null && !(roots instanceof Array))\n\t{\n\t\troots = [roots];\n\t}\n\t\n\t// If the roots are set and the parent is set, only\n\t// use the roots that are some dependent of the that\n\t// parent.\n\t// If just the root are set, use them as-is\n\t// If just the parent is set use it's immediate\n\t// children as the initial set\n\n\tif (roots == null && parent == null)\n\t{\n\t\t// TODO indicate the problem\n\t\treturn;\n\t}\n\t\n\t//  Maintaining parent location\n\tthis.parentX = null;\n\tthis.parentY = null;\n\t\n\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tthis.parentX = geo.x;\n\t\t\tthis.parentY = geo.y;\n\t\t}\n\t}\n\t\n\tif (roots != null)\n\t{\n\t\tvar rootsCopy = [];\n\n\t\tfor (var i = 0; i < roots.length; i++)\n\t\t{\n\t\t\tvar ancestor = parent != null ? model.isAncestor(parent, roots[i]) : true;\n\t\t\t\n\t\t\tif (ancestor && model.isVertex(roots[i]))\n\t\t\t{\n\t\t\t\trootsCopy.push(roots[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis.roots = rootsCopy;\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tthis.run(parent);\n\t\t\n\t\tif (this.resizeParent && !this.graph.isCellCollapsed(parent))\n\t\t{\n\t\t\tthis.graph.updateGroupBounds([parent], this.parentBorder, this.moveParent);\n\t\t}\n\t\t\n\t\t// Maintaining parent location\n\t\tif (this.parentX != null && this.parentY != null)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.x = this.parentX;\n\t\t\t\tgeo.y = this.parentY;\n\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: findRoots\n * \n * Returns all visible children in the given parent which do not have\n * incoming edges. If the result is empty then the children with the\n * maximum difference between incoming and outgoing edges are returned.\n * This takes into account edges that are being promoted to the given\n * root due to invisible children or collapsed cells.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * vertices - array of vertices to limit search to\n */\nmxHierarchicalLayout.prototype.findRoots = function(parent, vertices)\n{\n\tvar roots = [];\n\t\n\tif (parent != null && vertices != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar best = null;\n\t\tvar maxDiff = -100000;\n\t\t\n\t\tfor (var i in vertices)\n\t\t{\n\t\t\tvar cell = vertices[i];\n\n\t\t\tif (model.isVertex(cell) && this.graph.isCellVisible(cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getEdges(cell);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\n\t\t\t\tfor (var k = 0; k < conns.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.getVisibleTerminal(conns[k], true);\n\n\t\t\t\t\tif (src == cell)\n\t\t\t\t\t{\n\t\t\t\t\t\tfanOut++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfanIn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fanIn == 0 && fanOut > 0)\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\n\t\t\t\tvar diff = fanOut - fanIn;\n\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: getEdges\n * \n * Returns the connected edges for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n */\nmxHierarchicalLayout.prototype.getEdges = function(cell)\n{\n\tvar cachedEdges = this.edgesCache.get(cell);\n\t\n\tif (cachedEdges != null)\n\t{\n\t\treturn cachedEdges;\n\t}\n\n\tvar model = this.graph.model;\n\tvar edges = [];\n\tvar isCollapsed = this.graph.isCellCollapsed(cell);\n\tvar childCount = model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\n\t\tif (this.isPort(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t\telse if (isCollapsed || !this.graph.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t}\n\n\tedges = edges.concat(model.getEdges(cell, true, true));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar source = this.getVisibleTerminal(edges[i], true);\n\t\tvar target = this.getVisibleTerminal(edges[i], false);\n\t\t\n\t\tif ((source == target) ||\n\t\t\t\t((source != target) &&\n\t\t\t\t\t\t((target == cell && (this.parent == null || this.isAncestor(this.parent, source, this.traverseAncestors))) ||\n\t\t\t\t\t\t \t(source == cell && (this.parent == null || this.isAncestor(this.parent, target, this.traverseAncestors))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\tthis.edgesCache.put(cell, result);\n\n\treturn result;\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Helper function to return visible terminal for edge allowing for ports\n * \n * Parameters:\n * \n * edge - <mxCell> whose edges should be returned.\n * source - Boolean that specifies whether the source or target terminal is to be returned\n */\nmxHierarchicalLayout.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar terminalCache = this.edgesTargetTermCache;\n\t\n\tif (source)\n\t{\n\t\tterminalCache = this.edgeSourceTermCache;\n\t}\n\n\tvar term = terminalCache.get(edge);\n\n\tif (term != null)\n\t{\n\t\treturn term;\n\t}\n\n\tvar state = this.graph.view.getState(edge);\n\t\n\tvar terminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t\n\tif (terminal == null)\n\t{\n\t\tterminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t}\n\n\tif (terminal != null)\n\t{\n\t\tif (this.isPort(terminal))\n\t\t{\n\t\t\tterminal = this.graph.model.getParent(terminal);\n\t\t}\n\t\t\n\t\tterminalCache.put(edge, terminal);\n\t}\n\n\treturn terminal;\n};\n\n/**\n * Function: run\n * \n * The API method used to exercise the layout upon the graph description\n * and produce a separate description of the vertex position and edge\n * routing changes made. It runs each stage of the layout that has been\n * created.\n */\nmxHierarchicalLayout.prototype.run = function(parent)\n{\n\t// Separate out unconnected hierarchies\n\tvar hierarchyVertices = [];\n\tvar allVertexSet = [];\n\n\tif (this.roots == null && parent != null)\n\t{\n\t\tvar filledVertexSet = Object();\n\t\tthis.filterDescendants(parent, filledVertexSet);\n\n\t\tthis.roots = [];\n\t\tvar filledVertexSetEmpty = true;\n\n\t\t// Poor man's isSetEmpty\n\t\tfor (var key in filledVertexSet)\n\t\t{\n\t\t\tif (filledVertexSet[key] != null)\n\t\t\t{\n\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\twhile (!filledVertexSetEmpty)\n\t\t{\n\t\t\tvar candidateRoots = this.findRoots(parent, filledVertexSet);\n\t\t\t\n\t\t\t// If the candidate root is an unconnected group cell, remove it from\n\t\t\t// the layout. We may need a custom set that holds such groups and forces\n\t\t\t// them to be processed for resizing and/or moving.\n\t\t\t\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tvar vertexSet = Object();\n\t\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\t\tthis.traverse(candidateRoots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\t\thierarchyVertices, filledVertexSet);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tthis.roots.push(candidateRoots[i]);\n\t\t\t}\n\t\t\t\n\t\t\tfilledVertexSetEmpty = true;\n\t\t\t\n\t\t\t// Poor man's isSetEmpty\n\t\t\tfor (var key in filledVertexSet)\n\t\t\t{\n\t\t\t\tif (filledVertexSet[key] != null)\n\t\t\t\t{\n\t\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Find vertex set as directed traversal from roots\n\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar vertexSet = Object();\n\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\tthis.traverse(this.roots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\thierarchyVertices, null);\n\t\t}\n\t}\n\n\t// Iterate through the result removing parents who have children in this layout\n\t\n\t// Perform a layout for each seperate hierarchy\n\t// Track initial coordinate x-positioning\n\tvar initialX = 0;\n\n\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t{\n\t\tvar vertexSet = hierarchyVertices[i];\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var key in vertexSet)\n\t\t{\n\t\t\ttmp.push(vertexSet[key]);\n\t\t}\n\t\t\n\t\tthis.model = new mxGraphHierarchyModel(this, tmp, this.roots,\n\t\t\tparent, this.tightenToSource);\n\n\t\tthis.cycleStage(parent);\n\t\tthis.layeringStage();\n\t\t\n\t\tthis.crossingStage(parent);\n\t\tinitialX = this.placementStage(initialX, parent);\n\t}\n};\n\n/**\n * Function: filterDescendants\n * \n * Creates an array of descendant cells\n */\nmxHierarchicalLayout.prototype.filterDescendants = function(cell, result)\n{\n\tvar model = this.graph.model;\n\n\tif (model.isVertex(cell) && cell != this.parent && this.graph.isCellVisible(cell))\n\t{\n\t\tresult[mxObjectIdentity.get(cell)] = cell;\n\t}\n\n\tif (this.traverseAncestors || cell == this.parent\n\t\t\t&& this.graph.isCellVisible(cell))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\n\t\t\t// Ignore ports in the layout vertex list, they are dealt with\n\t\t\t// in the traversal mechanisms\n\t\t\tif (!this.isPort(child))\n\t\t\t{\n\t\t\t\tthis.filterDescendants(child, result);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, its parent is the connecting vertex in terms of graph traversal\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxHierarchicalLayout.prototype.isPort = function(cell)\n{\n\tif (cell != null && cell.geometry != null)\n\t{\n\t\treturn cell.geometry.relative;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and ports.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxHierarchicalLayout.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar src = this.getVisibleTerminal(edges[i], true);\n\t\tvar trg = this.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * allVertices - Array of cell paths for the visited cells.\n */\nmxHierarchicalLayout.prototype.traverse = function(vertex, directed, edge, allVertices, currentComp,\n\t\t\t\t\t\t\t\t\t\t\thierarchyVertices, filledVertexSet)\n{\n\tif (vertex != null && allVertices != null)\n\t{\n\t\t// Has this vertex been seen before in any traversal\n\t\t// And if the filled vertex set is populated, only \n\t\t// process vertices in that it contains\n\t\tvar vertexID = mxObjectIdentity.get(vertex);\n\t\t\n\t\tif ((allVertices[vertexID] == null)\n\t\t\t\t&& (filledVertexSet == null ? true : filledVertexSet[vertexID] != null))\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\tcurrentComp[vertexID] = vertex;\n\t\t\t}\n\t\t\tif (allVertices[vertexID] == null)\n\t\t\t{\n\t\t\t\tallVertices[vertexID] = vertex;\n\t\t\t}\n\n\t\t\tif (filledVertexSet !== null)\n\t\t\t{\n\t\t\t\tdelete filledVertexSet[vertexID];\n\t\t\t}\n\n\t\t\tvar edges = this.getEdges(vertex);\n\t\t\tvar edgeIsSource = [];\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tedgeIsSource[i] = (this.getVisibleTerminal(edges[i], true) == vertex);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tif (!directed || edgeIsSource[i])\n\t\t\t\t{\n\t\t\t\t\tvar next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n\t\t\t\t\t\n\t\t\t\t\t// Check whether there are more edges incoming from the target vertex than outgoing\n\t\t\t\t\t// The hierarchical model treats bi-directional parallel edges as being sourced\n\t\t\t\t\t// from the more \"sourced\" terminal. If the directions are equal in number, the direction\n\t\t\t\t\t// is that of the natural direction from the roots of the layout.\n\t\t\t\t\t// The checks below are slightly more verbose than need be for performance reasons\n\t\t\t\t\tvar netCount = 1;\n\n\t\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (j == i)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar isSource2 = edgeIsSource[j];\n\t\t\t\t\t\t\tvar otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (otherTerm == next)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (isSource2)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnetCount++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnetCount--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (netCount >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrentComp = this.traverse(next, directed, edges[i], allVertices,\n\t\t\t\t\t\t\tcurrentComp, hierarchyVertices,\n\t\t\t\t\t\t\tfilledVertexSet);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\t// We've seen this vertex before, but not in the current component\n\t\t\t\t// This component and the one it's in need to be merged\n\n\t\t\t\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar comp = hierarchyVertices[i];\n\n\t\t\t\t\tif (comp[vertexID] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key in comp)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentComp[key] = comp[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remove the current component from the hierarchy set\n\t\t\t\t\t\thierarchyVertices.splice(i, 1);\n\t\t\t\t\t\treturn currentComp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn currentComp;\n};\n\n/**\n * Function: cycleStage\n * \n * Executes the cycle stage using mxMinimumCycleRemover.\n */\nmxHierarchicalLayout.prototype.cycleStage = function(parent)\n{\n\tvar cycleStage = new mxMinimumCycleRemover(this);\n\tcycleStage.execute(parent);\n};\n\n/**\n * Function: layeringStage\n * \n * Implements first stage of a Sugiyama layout.\n */\nmxHierarchicalLayout.prototype.layeringStage = function()\n{\n\tthis.model.initialRank();\n\tthis.model.fixRanks();\n};\n\n/**\n * Function: crossingStage\n * \n * Executes the crossing stage using mxMedianHybridCrossingReduction.\n */\nmxHierarchicalLayout.prototype.crossingStage = function(parent)\n{\n\tvar crossingStage = new mxMedianHybridCrossingReduction(this);\n\tcrossingStage.execute(parent);\n};\n\n/**\n * Function: placementStage\n * \n * Executes the placement stage using mxCoordinateAssignment.\n */\nmxHierarchicalLayout.prototype.placementStage = function(initialX, parent)\n{\n\tvar placementStage = new mxCoordinateAssignment(this, this.intraCellSpacing,\n\t\t\tthis.interRankCellSpacing, this.orientation, initialX,\n\t\t\tthis.parallelEdgeSpacing);\n\tplacementStage.fineTuning = this.fineTuning;\n\tplacementStage.execute(parent);\n\t\n\treturn placementStage.limitX + this.interHierarchySpacing;\n};\n\n__mxOutput.mxHierarchicalLayout = typeof mxHierarchicalLayout !== 'undefined' ? mxHierarchicalLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneLayout\n * \n * A hierarchical layout algorithm.\n * \n * Constructor: mxSwimlaneLayout\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * orientation - Optional constant that defines the orientation of this\n * layout.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxSwimlaneLayout(graph, orientation, deterministic)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.orientation = (orientation != null) ? orientation : mxConstants.DIRECTION_NORTH;\n\tthis.deterministic = (deterministic != null) ? deterministic : true;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxSwimlaneLayout.prototype = new mxGraphLayout();\nmxSwimlaneLayout.prototype.constructor = mxSwimlaneLayout;\n\n/**\n * Variable: roots\n * \n * Holds the array of <mxCell> that this layout contains.\n */\nmxSwimlaneLayout.prototype.roots = null;\n\n/**\n * Variable: swimlanes\n * \n * Holds the array of <mxCell> of the ordered swimlanes to lay out\n */\nmxSwimlaneLayout.prototype.swimlanes = null;\n\n/**\n * Variable: dummyVertices\n * \n * Holds an array of <mxCell> of dummy vertices inserted during the layout\n * to pad out empty swimlanes\n */\nmxSwimlaneLayout.prototype.dummyVertices = null;\n\n/**\n * Variable: dummyVertexWidth\n * \n * The cell width of any dummy vertices inserted\n */\nmxSwimlaneLayout.prototype.dummyVertexWidth = 50;\n\n/**\n * Variable: resizeParent\n * \n * Specifies if the parent should be resized after the layout so that it\n * contains all the child cells. Default is false. See also <parentBorder>.\n */\nmxSwimlaneLayout.prototype.resizeParent = false;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxSwimlaneLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: moveParent\n * \n * Specifies if the parent should be moved if <resizeParent> is enabled.\n * Default is false.\n */\nmxSwimlaneLayout.prototype.moveParent = false;\n\n/**\n * Variable: parentBorder\n * \n * The border to be added around the children if the parent is to be\n * resized using <resizeParent>. Default is 0.\n */\nmxSwimlaneLayout.prototype.parentBorder = 30;\n\n/**\n * Variable: intraCellSpacing\n * \n * The spacing buffer added between cells on the same layer. Default is 30.\n */\nmxSwimlaneLayout.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The spacing buffer added between cell on adjacent layers. Default is 50.\n */\nmxSwimlaneLayout.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: interHierarchySpacing\n * \n * The spacing buffer between unconnected hierarchies. Default is 60.\n */\nmxSwimlaneLayout.prototype.interHierarchySpacing = 60;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges\n */\nmxSwimlaneLayout.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: orientation\n * \n * The position of the root node(s) relative to the laid out graph in.\n * Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxSwimlaneLayout.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxSwimlaneLayout.prototype.fineTuning = true;\n\n/**\n * \n * Variable: tightenToSource\n * \n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxSwimlaneLayout.prototype.tightenToSource = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxSwimlaneLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: traverseAncestors\n * \n * Whether or not to drill into child cells and layout in reverse\n * group order. This also cause the layout to navigate edges whose \n * terminal vertices  * have different parents but are in the same \n * ancestry chain\n */\nmxSwimlaneLayout.prototype.traverseAncestors = true;\n\n/**\n * Variable: model\n * \n * The internal <mxSwimlaneModel> formed of the layout.\n */\nmxSwimlaneLayout.prototype.model = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxSwimlaneLayout.prototype.edgesCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgeSourceTermCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesTargetTermCache = null;\n\n/**\n * Variable: edgeStyle\n * \n * The style to apply between cell layers to edge segments\n */\nmxHierarchicalLayout.prototype.edgeStyle = mxHierarchicalEdgeStyle.POLYLINE;\n\n/**\n * Function: getModel\n * \n * Returns the internal <mxSwimlaneModel> for this layout algorithm.\n */\nmxSwimlaneLayout.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: execute\n * \n * Executes the layout for the children of the specified parent.\n * \n * Parameters:\n * \n * parent - Parent <mxCell> that contains the children to be laid out.\n * swimlanes - Ordered array of swimlanes to be laid out\n */\nmxSwimlaneLayout.prototype.execute = function(parent, swimlanes)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.model;\n\tthis.edgesCache = new mxDictionary();\n\tthis.edgeSourceTermCache = new mxDictionary();\n\tthis.edgesTargetTermCache = new mxDictionary();\n\n\t// If the roots are set and the parent is set, only\n\t// use the roots that are some dependent of the that\n\t// parent.\n\t// If just the root are set, use them as-is\n\t// If just the parent is set use it's immediate\n\t// children as the initial set\n\n\tif (swimlanes == null || swimlanes.length < 1)\n\t{\n\t\t// TODO indicate the problem\n\t\treturn;\n\t}\n\n\tif (parent == null)\n\t{\n\t\tparent = model.getParent(swimlanes[0]);\n\t}\n\n\t//  Maintaining parent location\n\tthis.parentX = null;\n\tthis.parentY = null;\n\t\n\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tthis.parentX = geo.x;\n\t\t\tthis.parentY = geo.y;\n\t\t}\n\t}\n\n\tthis.swimlanes = swimlanes;\n\tthis.dummyVertices = [];\n\t// Check the swimlanes all have vertices\n\t// in them\n\tfor (var i = 0; i < swimlanes.length; i++)\n\t{\n\t\tvar children = this.graph.getChildCells(swimlanes[i]);\n\t\t\n\t\tif (children == null || children.length == 0)\n\t\t{\n\t\t\tvar vertex = this.graph.insertVertex(swimlanes[i], null, null, 0, 0, this.dummyVertexWidth, 0);\n\t\t\tthis.dummyVertices.push(vertex);\n\t\t}\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tthis.run(parent);\n\t\t\n\t\tif (this.resizeParent && !this.graph.isCellCollapsed(parent))\n\t\t{\n\t\t\tthis.graph.updateGroupBounds([parent], this.parentBorder, this.moveParent);\n\t\t}\n\t\t\n\t\t// Maintaining parent location\n\t\tif (this.parentX != null && this.parentY != null)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.x = this.parentX;\n\t\t\t\tgeo.y = this.parentY;\n\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t}\n\t\t}\n\n\t\tthis.graph.removeCells(this.dummyVertices);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: updateGroupBounds\n * \n * Updates the bounds of the given array of groups so that it includes\n * all child vertices.\n * \n */\nmxSwimlaneLayout.prototype.updateGroupBounds = function()\n{\n\t// Get all vertices and edge in the layout\n\tvar cells = [];\n\tvar model = this.model;\n\t\n\tfor (var key in model.edgeMapper)\n\t{\n\t\tvar edge = model.edgeMapper[key];\n\t\t\n\t\tfor (var i = 0; i < edge.edges.length; i++)\n\t\t{\n\t\t\tcells.push(edge.edges[i]);\n\t\t}\n\t}\n\t\n\tvar layoutBounds = this.graph.getBoundingBoxFromGeometry(cells, true);\n\tvar childBounds = [];\n\n\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t{\n\t\tvar lane = this.swimlanes[i];\n\t\tvar geo = this.graph.getCellGeometry(lane);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tvar children = this.graph.getChildCells(lane);\n\t\t\t\n\t\t\tvar size = (this.graph.isSwimlane(lane)) ?\n\t\t\t\t\tthis.graph.getStartSize(lane) : new mxRectangle();\n\n\t\t\tvar bounds = this.graph.getBoundingBoxFromGeometry(children);\n\t\t\tchildBounds[i] = bounds;\n\t\t\tvar childrenY = bounds.y + geo.y - size.height - this.parentBorder;\n\t\t\tvar maxChildrenY = bounds.y + geo.y + bounds.height;\n\n\t\t\tif (layoutBounds == null)\n\t\t\t{\n\t\t\t\tlayoutBounds = new mxRectangle(0, childrenY, 0, maxChildrenY - childrenY);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlayoutBounds.y = Math.min(layoutBounds.y, childrenY);\n\t\t\t\tvar maxY = Math.max(layoutBounds.y + layoutBounds.height, maxChildrenY);\n\t\t\t\tlayoutBounds.height = maxY - layoutBounds.y;\n\t\t\t}\n\t\t}\n\t}\n\n\t\n\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t{\n\t\tvar lane = this.swimlanes[i];\n\t\tvar geo = this.graph.getCellGeometry(lane);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tvar children = this.graph.getChildCells(lane);\n\t\t\t\n\t\t\tvar size = (this.graph.isSwimlane(lane)) ?\n\t\t\t\t\tthis.graph.getStartSize(lane) : new mxRectangle();\n\n\t\t\tvar newGeo = geo.clone();\n\t\t\t\n\t\t\tvar leftGroupBorder = (i == 0) ? this.parentBorder : this.interRankCellSpacing/2;\n\t\t\tnewGeo.x += childBounds[i].x - size.width - leftGroupBorder;\n\t\t\tnewGeo.y = newGeo.y + layoutBounds.y - geo.y - this.parentBorder;\n\t\t\t\n\t\t\tnewGeo.width = childBounds[i].width + size.width + this.interRankCellSpacing/2 + leftGroupBorder;\n\t\t\tnewGeo.height = layoutBounds.height + size.height + 2 * this.parentBorder;\n\t\t\t\n\t\t\tthis.graph.model.setGeometry(lane, newGeo);\n\t\t\tthis.graph.moveCells(children, -childBounds[i].x + size.width + leftGroupBorder, \n\t\t\t\t\tgeo.y - layoutBounds.y + this.parentBorder);\n\t\t}\n\t}\n};\n\n/**\n * Function: findRoots\n * \n * Returns all visible children in the given parent which do not have\n * incoming edges. If the result is empty then the children with the\n * maximum difference between incoming and outgoing edges are returned.\n * This takes into account edges that are being promoted to the given\n * root due to invisible children or collapsed cells.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * vertices - array of vertices to limit search to\n */\nmxSwimlaneLayout.prototype.findRoots = function(parent, vertices)\n{\n\tvar roots = [];\n\t\n\tif (parent != null && vertices != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar best = null;\n\t\tvar maxDiff = -100000;\n\t\t\n\t\tfor (var i in vertices)\n\t\t{\n\t\t\tvar cell = vertices[i];\n\n\t\t\tif (cell != null && model.isVertex(cell) && this.graph.isCellVisible(cell) && model.isAncestor(parent, cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getEdges(cell);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\n\t\t\t\tfor (var k = 0; k < conns.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.getVisibleTerminal(conns[k], true);\n\n\t\t\t\t\tif (src == cell)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Only count connection within this swimlane\n\t\t\t\t\t\tvar other = this.getVisibleTerminal(conns[k], false);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (model.isAncestor(parent, other))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfanOut++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (model.isAncestor(parent, src))\n\t\t\t\t\t{\n\t\t\t\t\t\tfanIn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fanIn == 0 && fanOut > 0)\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\n\t\t\t\tvar diff = fanOut - fanIn;\n\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: getEdges\n * \n * Returns the connected edges for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n */\nmxSwimlaneLayout.prototype.getEdges = function(cell)\n{\n\tvar cachedEdges = this.edgesCache.get(cell);\n\t\n\tif (cachedEdges != null)\n\t{\n\t\treturn cachedEdges;\n\t}\n\n\tvar model = this.graph.model;\n\tvar edges = [];\n\tvar isCollapsed = this.graph.isCellCollapsed(cell);\n\tvar childCount = model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\n\t\tif (this.isPort(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t\telse if (isCollapsed || !this.graph.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t}\n\n\tedges = edges.concat(model.getEdges(cell, true, true));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar source = this.getVisibleTerminal(edges[i], true);\n\t\tvar target = this.getVisibleTerminal(edges[i], false);\n\t\t\n\t\tif ((source == target) || ((source != target) && ((target == cell && (this.parent == null || this.graph.isValidAncestor(source, this.parent, this.traverseAncestors))) ||\n\t\t\t(source == cell && (this.parent == null ||\n\t\t\t\t\tthis.graph.isValidAncestor(target, this.parent, this.traverseAncestors))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\tthis.edgesCache.put(cell, result);\n\n\treturn result;\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Helper function to return visible terminal for edge allowing for ports\n * \n * Parameters:\n * \n * edge - <mxCell> whose edges should be returned.\n * source - Boolean that specifies whether the source or target terminal is to be returned\n */\nmxSwimlaneLayout.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar terminalCache = this.edgesTargetTermCache;\n\t\n\tif (source)\n\t{\n\t\tterminalCache = this.edgeSourceTermCache;\n\t}\n\n\tvar term = terminalCache.get(edge);\n\n\tif (term != null)\n\t{\n\t\treturn term;\n\t}\n\n\tvar state = this.graph.view.getState(edge);\n\t\n\tvar terminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t\n\tif (terminal == null)\n\t{\n\t\tterminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t}\n\n\tif (terminal != null)\n\t{\n\t\tif (this.isPort(terminal))\n\t\t{\n\t\t\tterminal = this.graph.model.getParent(terminal);\n\t\t}\n\t\t\n\t\tterminalCache.put(edge, terminal);\n\t}\n\n\treturn terminal;\n};\n\n/**\n * Function: run\n * \n * The API method used to exercise the layout upon the graph description\n * and produce a separate description of the vertex position and edge\n * routing changes made. It runs each stage of the layout that has been\n * created.\n */\nmxSwimlaneLayout.prototype.run = function(parent)\n{\n\t// Separate out unconnected hierarchies\n\tvar hierarchyVertices = [];\n\tvar allVertexSet = [];\n\n\tif (this.swimlanes != null && this.swimlanes.length > 0 && parent != null)\n\t{\n\t\tvar filledVertexSet = Object();\n\t\t\n\t\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t\t{\n\t\t\tthis.filterDescendants(this.swimlanes[i], filledVertexSet);\n\t\t}\n\n\t\tthis.roots = [];\n\t\tvar filledVertexSetEmpty = true;\n\n\t\t// Poor man's isSetEmpty\n\t\tfor (var key in filledVertexSet)\n\t\t{\n\t\t\tif (filledVertexSet[key] != null)\n\t\t\t{\n\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Only test for candidates in each swimlane in order\n\t\tvar laneCounter = 0;\n\n\t\twhile (!filledVertexSetEmpty && laneCounter < this.swimlanes.length)\n\t\t{\n\t\t\tvar candidateRoots = this.findRoots(this.swimlanes[laneCounter], filledVertexSet);\n\t\t\t\n\t\t\tif (candidateRoots.length == 0)\n\t\t\t{\n\t\t\t\tlaneCounter++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t// If the candidate root is an unconnected group cell, remove it from\n\t\t\t// the layout. We may need a custom set that holds such groups and forces\n\t\t\t// them to be processed for resizing and/or moving.\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tvar vertexSet = Object();\n\t\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\t\tthis.traverse(candidateRoots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\t\thierarchyVertices, filledVertexSet, laneCounter);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tthis.roots.push(candidateRoots[i]);\n\t\t\t}\n\t\t\t\n\t\t\tfilledVertexSetEmpty = true;\n\t\t\t\n\t\t\t// Poor man's isSetEmpty\n\t\t\tfor (var key in filledVertexSet)\n\t\t\t{\n\t\t\t\tif (filledVertexSet[key] != null)\n\t\t\t\t{\n\t\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Find vertex set as directed traversal from roots\n\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar vertexSet = Object();\n\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\tthis.traverse(this.roots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\thierarchyVertices, null);\n\t\t}\n\t}\n\n\tvar tmp = [];\n\t\n\tfor (var key in allVertexSet)\n\t{\n\t\ttmp.push(allVertexSet[key]);\n\t}\n\t\n\tthis.model = new mxSwimlaneModel(this, tmp, this.roots,\n\t\tparent, this.tightenToSource);\n\n\tthis.cycleStage(parent);\n\tthis.layeringStage();\n\t\n\tthis.crossingStage(parent);\n\tinitialX = this.placementStage(0, parent);\n};\n\n/**\n * Function: filterDescendants\n * \n * Creates an array of descendant cells\n */\nmxSwimlaneLayout.prototype.filterDescendants = function(cell, result)\n{\n\tvar model = this.graph.model;\n\n\tif (model.isVertex(cell) && cell != this.parent && model.getParent(cell) != this.parent && this.graph.isCellVisible(cell))\n\t{\n\t\tresult[mxObjectIdentity.get(cell)] = cell;\n\t}\n\n\tif (this.traverseAncestors || cell == this.parent\n\t\t\t&& this.graph.isCellVisible(cell))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\n\t\t\t// Ignore ports in the layout vertex list, they are dealt with\n\t\t\t// in the traversal mechanisms\n\t\t\tif (!this.isPort(child))\n\t\t\t{\n\t\t\t\tthis.filterDescendants(child, result);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, its parent is the connecting vertex in terms of graph traversal\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxSwimlaneLayout.prototype.isPort = function(cell)\n{\n\tif (cell.geometry.relative)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and ports.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxSwimlaneLayout.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar src = this.getVisibleTerminal(edges[i], true);\n\t\tvar trg = this.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * allVertices - Array of cell paths for the visited cells.\n * swimlaneIndex - the laid out order index of the swimlane vertex is contained in\n */\nmxSwimlaneLayout.prototype.traverse = function(vertex, directed, edge, allVertices, currentComp,\n\t\t\t\t\t\t\t\t\t\t\thierarchyVertices, filledVertexSet, swimlaneIndex)\n{\n\tif (vertex != null && allVertices != null)\n\t{\n\t\t// Has this vertex been seen before in any traversal\n\t\t// And if the filled vertex set is populated, only \n\t\t// process vertices in that it contains\n\t\tvar vertexID = mxObjectIdentity.get(vertex);\n\t\t\n\t\tif ((allVertices[vertexID] == null)\n\t\t\t\t&& (filledVertexSet == null ? true : filledVertexSet[vertexID] != null))\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\tcurrentComp[vertexID] = vertex;\n\t\t\t}\n\t\t\tif (allVertices[vertexID] == null)\n\t\t\t{\n\t\t\t\tallVertices[vertexID] = vertex;\n\t\t\t}\n\n\t\t\tif (filledVertexSet !== null)\n\t\t\t{\n\t\t\t\tdelete filledVertexSet[vertexID];\n\t\t\t}\n\n\t\t\tvar edges = this.getEdges(vertex);\n\t\t\tvar model = this.graph.model;\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tvar otherVertex = this.getVisibleTerminal(edges[i], true);\n\t\t\t\tvar isSource = otherVertex == vertex;\n\t\t\t\t\n\t\t\t\tif (isSource)\n\t\t\t\t{\n\t\t\t\t\totherVertex = this.getVisibleTerminal(edges[i], false);\n\t\t\t\t}\n\n\t\t\t\tvar otherIndex = 0;\n\t\t\t\t// Get the swimlane index of the other terminal\n\t\t\t\tfor (otherIndex = 0; otherIndex < this.swimlanes.length; otherIndex++)\n\t\t\t\t{\n\t\t\t\t\tif (model.isAncestor(this.swimlanes[otherIndex], otherVertex))\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (otherIndex >= this.swimlanes.length)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Traverse if the other vertex is within the same swimlane as\n\t\t\t\t// as the current vertex, or if the swimlane index of the other\n\t\t\t\t// vertex is greater than that of this vertex\n\t\t\t\tif ((otherIndex > swimlaneIndex) ||\n\t\t\t\t\t\t((!directed || isSource) && otherIndex == swimlaneIndex))\n\t\t\t\t{\n\t\t\t\t\tcurrentComp = this.traverse(otherVertex, directed, edges[i], allVertices,\n\t\t\t\t\t\t\tcurrentComp, hierarchyVertices,\n\t\t\t\t\t\t\tfilledVertexSet, otherIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\t// We've seen this vertex before, but not in the current component\n\t\t\t\t// This component and the one it's in need to be merged\n\t\t\t\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar comp = hierarchyVertices[i];\n\n\t\t\t\t\tif (comp[vertexID] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key in comp)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentComp[key] = comp[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remove the current component from the hierarchy set\n\t\t\t\t\t\thierarchyVertices.splice(i, 1);\n\t\t\t\t\t\treturn currentComp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn currentComp;\n};\n\n/**\n * Function: cycleStage\n * \n * Executes the cycle stage using mxMinimumCycleRemover.\n */\nmxSwimlaneLayout.prototype.cycleStage = function(parent)\n{\n\tvar cycleStage = new mxSwimlaneOrdering(this);\n\tcycleStage.execute(parent);\n};\n\n/**\n * Function: layeringStage\n * \n * Implements first stage of a Sugiyama layout.\n */\nmxSwimlaneLayout.prototype.layeringStage = function()\n{\n\tthis.model.initialRank();\n\tthis.model.fixRanks();\n};\n\n/**\n * Function: crossingStage\n * \n * Executes the crossing stage using mxMedianHybridCrossingReduction.\n */\nmxSwimlaneLayout.prototype.crossingStage = function(parent)\n{\n\tvar crossingStage = new mxMedianHybridCrossingReduction(this);\n\tcrossingStage.execute(parent);\n};\n\n/**\n * Function: placementStage\n * \n * Executes the placement stage using mxCoordinateAssignment.\n */\nmxSwimlaneLayout.prototype.placementStage = function(initialX, parent)\n{\n\tvar placementStage = new mxCoordinateAssignment(this, this.intraCellSpacing,\n\t\t\tthis.interRankCellSpacing, this.orientation, initialX,\n\t\t\tthis.parallelEdgeSpacing);\n\tplacementStage.fineTuning = this.fineTuning;\n\tplacementStage.execute(parent);\n\t\n\treturn placementStage.limitX + this.interHierarchySpacing;\n};\n\n__mxOutput.mxSwimlaneLayout = typeof mxSwimlaneLayout !== 'undefined' ? mxSwimlaneLayout : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxGraphModel\n * \n * Extends <mxEventSource> to implement a graph model. The graph model acts as\n * a wrapper around the cells which are in charge of storing the actual graph\n * datastructure. The model acts as a transactional wrapper with event\n * notification for all changes, whereas the cells contain the atomic\n * operations for updating the actual datastructure.\n * \n * Layers:\n * \n * The cell hierarchy in the model must have a top-level root cell which\n * contains the layers (typically one default layer), which in turn contain the\n * top-level cells of the layers. This means each cell is contained in a layer.\n * If no layers are required, then all new cells should be added to the default\n * layer.\n * \n * Layers are useful for hiding and showing groups of cells, or for placing\n * groups of cells on top of other cells in the display. To identify a layer,\n * the <isLayer> function is used. It returns true if the parent of the given\n * cell is the root of the model.\n * \n * Events:\n * \n * See events section for more details. There is a new set of events for\n * tracking transactional changes as they happen. The events are called\n * startEdit for the initial beginUpdate, executed for each executed change\n * and endEdit for the terminal endUpdate. The executed event contains a\n * property called change which represents the change after execution.\n * \n * Encoding the model:\n * \n * To encode a graph model, use the following code:\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(graph.getModel());\n * (end)\n * \n * This will create an XML node that contains all the model information.\n * \n * Encoding and decoding changes:\n * \n * For the encoding of changes, a graph model listener is required that encodes\n * each change from the given array of changes.\n * \n * (code)\n * model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n *   var nodes = [];\n *   var codec = new mxCodec();\n * \n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     nodes.push(codec.encode(changes[i]));\n *   }\n *   // do something with the nodes\n * });\n * (end)\n * \n * For the decoding and execution of changes, the codec needs a lookup function\n * that allows it to resolve cell IDs as follows:\n * \n * (code)\n * var codec = new mxCodec();\n * codec.lookup = function(id)\n * {\n *   return model.getCell(id);\n * }\n * (end)\n * \n * For each encoded change (represented by a node), the following code can be\n * used to carry out the decoding and create a change object.\n * \n * (code)\n * var changes = [];\n * var change = codec.decode(node);\n * change.model = model;\n * change.execute();\n * changes.push(change);\n * (end)\n * \n * The changes can then be dispatched using the model as follows.\n * \n * (code)\n * var edit = new mxUndoableEdit(model, false);\n * edit.changes = changes;\n * \n * edit.notify = function()\n * {\n *   edit.source.fireEvent(new mxEventObject(mxEvent.CHANGE,\n *   \t'edit', edit, 'changes', edit.changes));\n *   edit.source.fireEvent(new mxEventObject(mxEvent.NOTIFY,\n *   \t'edit', edit, 'changes', edit.changes));\n * }\n * \n * model.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n * model.fireEvent(new mxEventObject(mxEvent.CHANGE,\n * \t\t'edit', edit, 'changes', changes));\n * (end)\n *\n * Event: mxEvent.CHANGE\n *\n * Fires when an undoable edit is dispatched. The <code>edit</code> property\n * contains the <mxUndoableEdit>. The <code>changes</code> property contains\n * the array of atomic changes inside the undoable edit. The changes property\n * is <strong>deprecated</strong>, please use edit.changes instead.\n *\n * Example:\n * \n * For finding newly inserted cells, the following code can be used:\n * \n * (code)\n * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n * \n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     var change = changes[i];\n *     \n *     if (change instanceof mxChildChange &&\n *       change.change.previous == null)\n *     {\n *       graph.startEditingAtCell(change.child);\n *       break;\n *     }\n *   }\n * });\n * (end)\n * \n * \n * Event: mxEvent.NOTIFY\n *\n * Same as <mxEvent.CHANGE>, this event can be used for classes that need to\n * implement a sync mechanism between this model and, say, a remote model. In\n * such a setup, only local changes should trigger a notify event and all\n * changes should trigger a change event.\n * \n * Event: mxEvent.EXECUTE\n * \n * Fires between begin- and endUpdate and after an atomic change was executed\n * in the model. The <code>change</code> property contains the atomic change\n * that was executed.\n * \n * Event: mxEvent.EXECUTED\n * \n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The <code>change</code> property contains the change that was executed.\n *\n * Event: mxEvent.BEGIN_UPDATE\n *\n * Fires after the <updateLevel> was incremented in <beginUpdate>. This event\n * contains no properties.\n * \n * Event: mxEvent.START_EDIT\n *\n * Fires after the <updateLevel> was changed from 0 to 1. This event\n * contains no properties.\n * \n * Event: mxEvent.END_UPDATE\n * \n * Fires after the <updateLevel> was decreased in <endUpdate> but before any\n * notification or change dispatching. The <code>edit</code> property contains\n * the <currentEdit>.\n * \n * Event: mxEvent.END_EDIT\n *\n * Fires after the <updateLevel> was changed from 1 to 0. This event\n * contains no properties.\n * \n * Event: mxEvent.BEFORE_UNDO\n * \n * Fires before the change is dispatched after the update level has reached 0\n * in <endUpdate>. The <code>edit</code> property contains the <curreneEdit>.\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the change was dispatched in <endUpdate>. The <code>edit</code>\n * property contains the <currentEdit>.\n * \n * Constructor: mxGraphModel\n * \n * Constructs a new graph model. If no root is specified then a new root\n * <mxCell> with a default layer is created.\n * \n * Parameters:\n * \n * root - <mxCell> that represents the root cell.\n */\nfunction mxGraphModel(root)\n{\n\tthis.currentEdit = this.createUndoableEdit();\n\t\n\tif (root != null)\n\t{\n\t\tthis.setRoot(root);\n\t}\n\telse\n\t{\n\t\tthis.clear();\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphModel.prototype = new mxEventSource();\nmxGraphModel.prototype.constructor = mxGraphModel;\n\n/**\n * Variable: root\n * \n * Holds the root cell, which in turn contains the cells that represent the\n * layers of the diagram as child cells. That is, the actual elements of the\n * diagram are supposed to live in the third generation of cells and below.\n */\nmxGraphModel.prototype.root = null;\n\n/**\n * Variable: cells\n * \n * Maps from Ids to cells.\n */\nmxGraphModel.prototype.cells = null;\n\n/**\n * Variable: maintainEdgeParent\n * \n * Specifies if edges should automatically be moved into the nearest common\n * ancestor of their terminals. Default is true.\n */\nmxGraphModel.prototype.maintainEdgeParent = true;\n\n/**\n * Variable: ignoreRelativeEdgeParent\n * \n * Specifies if relative edge parents should be ignored for finding the nearest\n * common ancestors of an edge's terminals. Default is true.\n */\nmxGraphModel.prototype.ignoreRelativeEdgeParent = true;\n\n/**\n * Variable: createIds\n * \n * Specifies if the model should automatically create Ids for new cells.\n * Default is true.\n */\nmxGraphModel.prototype.createIds = true;\n\n/**\n * Variable: prefix\n * \n * Defines the prefix of new Ids. Default is an empty string.\n */\nmxGraphModel.prototype.prefix = '';\n\n/**\n * Variable: postfix\n * \n * Defines the postfix of new Ids. Default is an empty string.\n */\nmxGraphModel.prototype.postfix = '';\n\n/**\n * Variable: nextId\n * \n * Specifies the next Id to be created. Initial value is 0.\n */\nmxGraphModel.prototype.nextId = 0;\n\n/**\n * Variable: currentEdit\n * \n * Holds the changes for the current transaction. If the transaction is\n * closed then a new object is created for this variable using\n * <createUndoableEdit>.\n */\nmxGraphModel.prototype.currentEdit = null;\n\n/**\n * Variable: updateLevel\n * \n * Counter for the depth of nested transactions. Each call to <beginUpdate>\n * will increment this number and each call to <endUpdate> will decrement\n * it. When the counter reaches 0, the transaction is closed and the\n * respective events are fired. Initial value is 0.\n */\nmxGraphModel.prototype.updateLevel = 0;\n\n/**\n * Variable: endingUpdate\n * \n * True if the program flow is currently inside endUpdate.\n */\nmxGraphModel.prototype.endingUpdate = false;\n\n/**\n * Function: clear\n *\n * Sets a new root using <createRoot>.\n */\nmxGraphModel.prototype.clear = function()\n{\n\tthis.setRoot(this.createRoot());\n};\n\n/**\n * Function: isCreateIds\n *\n * Returns <createIds>.\n */\nmxGraphModel.prototype.isCreateIds = function()\n{\n\treturn this.createIds;\n};\n\n/**\n * Function: setCreateIds\n *\n * Sets <createIds>.\n */\nmxGraphModel.prototype.setCreateIds = function(value)\n{\n\tthis.createIds = value;\n};\n\n/**\n * Function: createRoot\n *\n * Creates a new root cell with a default layer (child 0).\n */\nmxGraphModel.prototype.createRoot = function()\n{\n\tvar cell = new mxCell();\n\tcell.insert(new mxCell());\n\t\n\treturn cell;\n};\n\n/**\n * Function: getCell\n *\n * Returns the <mxCell> for the specified Id or null if no cell can be\n * found for the given Id.\n *\n * Parameters:\n * \n * id - A string representing the Id of the cell.\n */\nmxGraphModel.prototype.getCell = function(id)\n{\n\treturn (this.cells != null) ? this.cells[id] : null;\n};\n\n/**\n * Function: filterCells\n * \n * Returns the cells from the given array where the given filter function\n * returns true.\n */\nmxGraphModel.prototype.filterCells = function(cells, filter)\n{\n\tvar result = null;\n\t\n\tif (cells != null)\n\t{\n\t\tresult = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (filter(cells[i]))\n\t\t\t{\n\t\t\t\tresult.push(cells[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getDescendants\n * \n * Returns all descendants of the given cell and the cell itself in an array.\n * \n * Parameters:\n * \n * parent - <mxCell> whose descendants should be returned.\n */\nmxGraphModel.prototype.getDescendants = function(parent)\n{\n\treturn this.filterDescendants(null, parent);\n};\n\n/**\n * Function: filterDescendants\n * \n * Visits all cells recursively and applies the specified filter function\n * to each cell. If the function returns true then the cell is added\n * to the resulting array. The parent and result paramters are optional.\n * If parent is not specified then the recursion starts at <root>.\n * \n * Example:\n * The following example extracts all vertices from a given model:\n * (code)\n * var filter = function(cell)\n * {\n * \treturn model.isVertex(cell);\n * }\n * var vertices = model.filterDescendants(filter);\n * (end)\n * \n * Parameters:\n * \n * filter - JavaScript function that takes an <mxCell> as an argument\n * and returns a boolean.\n * parent - Optional <mxCell> that is used as the root of the recursion.\n */\nmxGraphModel.prototype.filterDescendants = function(filter, parent)\n{\n\t// Creates a new array for storing the result\n\tvar result = [];\n\n\t// Recursion starts at the root of the model\n\tparent = parent || this.getRoot();\n\t\n\t// Checks if the filter returns true for the cell\n\t// and adds it to the result array\n\tif (filter == null || filter(parent))\n\t{\n\t\tresult.push(parent);\n\t}\n\t\n\t// Visits the children of the cell\n\tvar childCount = this.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(parent, i);\n\t\tresult = result.concat(this.filterDescendants(filter, child));\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getRoot\n * \n * Returns the root of the model or the topmost parent of the given cell.\n *\n * Parameters:\n * \n * cell - Optional <mxCell> that specifies the child.\n */\nmxGraphModel.prototype.getRoot = function(cell)\n{\n\tvar root = cell || this.root;\n\t\n\tif (cell != null)\n\t{\n\t\twhile (cell != null)\n\t\t{\n\t\t\troot = cell;\n\t\t\tcell = this.getParent(cell);\n\t\t}\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: setRoot\n * \n * Sets the <root> of the model using <mxRootChange> and adds the change to\n * the current transaction. This resets all datastructures in the model and\n * is the preferred way of clearing an existing model. Returns the new\n * root.\n * \n * Example:\n * \n * (code)\n * var root = new mxCell();\n * root.insert(new mxCell());\n * model.setRoot(root);\n * (end)\n *\n * Parameters:\n * \n * root - <mxCell> that specifies the new root.\n */\nmxGraphModel.prototype.setRoot = function(root)\n{\n\tthis.execute(new mxRootChange(this, root));\n\t\n\treturn root;\n};\n\n/**\n * Function: rootChanged\n * \n * Inner callback to change the root of the model and update the internal\n * datastructures, such as <cells> and <nextId>. Returns the previous root.\n *\n * Parameters:\n * \n * root - <mxCell> that specifies the new root.\n */\nmxGraphModel.prototype.rootChanged = function(root)\n{\n\tvar oldRoot = this.root;\n\tthis.root = root;\n\t\n\t// Resets counters and datastructures\n\tthis.nextId = 0;\n\tthis.cells = null;\n\tthis.cellAdded(root);\n\t\n\treturn oldRoot;\n};\n\n/**\n * Function: isRoot\n * \n * Returns true if the given cell is the root of the model and a non-null\n * value.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible root.\n */\nmxGraphModel.prototype.isRoot = function(cell)\n{\n\treturn cell != null && this.root == cell;\n};\n\n/**\n * Function: isLayer\n * \n * Returns true if <isRoot> returns true for the parent of the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible layer.\n */\nmxGraphModel.prototype.isLayer = function(cell)\n{\n\treturn this.isRoot(this.getParent(cell));\n};\n\n/**\n * Function: isAncestor\n * \n * Returns true if the given parent is an ancestor of the given child. Note \n * returns true if child == parent.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent.\n * child - <mxCell> that specifies the child.\n */\nmxGraphModel.prototype.isAncestor = function(parent, child)\n{\n\twhile (child != null && child != parent)\n\t{\n\t\tchild = this.getParent(child);\n\t}\n\t\n\treturn child == parent;\n};\n\n/**\n * Function: contains\n * \n * Returns true if the model contains the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell.\n */\nmxGraphModel.prototype.contains = function(cell)\n{\n\treturn this.isAncestor(this.root, cell);\n};\n\n/**\n * Function: getParent\n * \n * Returns the parent of the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> whose parent should be returned.\n */\nmxGraphModel.prototype.getParent = function(cell)\n{\n\treturn (cell != null) ? cell.getParent() : null;\n};\n\n/**\n * Function: add\n * \n * Adds the specified child to the parent at the given index using\n * <mxChildChange> and adds the change to the current transaction. If no\n * index is specified then the child is appended to the parent's array of\n * children. Returns the inserted child.\n * \n * Parameters:\n * \n * parent - <mxCell> that specifies the parent to contain the child.\n * child - <mxCell> that specifies the child to be inserted.\n * index - Optional integer that specifies the index of the child.\n */\nmxGraphModel.prototype.add = function(parent, child, index)\n{\n\tif (child != parent && parent != null && child != null)\n\t{\t\n\t\t// Appends the child if no index was specified\n\t\tif (index == null)\n\t\t{\n\t\t\tindex = this.getChildCount(parent);\n\t\t}\n\t\t\n\t\tvar parentChanged = parent != this.getParent(child);\n\t\tthis.execute(new mxChildChange(this, parent, child, index));\n\n\t\t// Maintains the edges parents by moving the edges\n\t\t// into the nearest common ancestor of its terminals\n\t\tif (this.maintainEdgeParent && parentChanged)\n\t\t{\n\t\t\tthis.updateEdgeParents(child);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: cellAdded\n * \n * Inner callback to update <cells> when a cell has been added. This\n * implementation resolves collisions by creating new Ids. To change the\n * ID of a cell after it was inserted into the model, use the following\n * code:\n * \n * (code\n * delete model.cells[cell.getId()];\n * cell.setId(newId);\n * model.cells[cell.getId()] = cell;\n * (end)\n *\n * If the change of the ID should be part of the command history, then the\n * cell should be removed from the model and a clone with the new ID should\n * be reinserted into the model instead.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell that has been added.\n */\nmxGraphModel.prototype.cellAdded = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\t// Creates an Id for the cell if not Id exists\n\t\tif (cell.getId() == null && this.createIds)\n\t\t{\n\t\t\tcell.setId(this.createId(cell));\n\t\t}\n\t\t\n\t\tif (cell.getId() != null)\n\t\t{\n\t\t\tvar collision = this.getCell(cell.getId());\n\t\t\t\n\t\t\tif (collision != cell)\n\t\t\t{\t\n\t\t\t\t// Creates new Id for the cell\n\t\t\t\t// as long as there is a collision\n\t\t\t\twhile (collision != null)\n\t\t\t\t{\n\t\t\t\t\tcell.setId(this.createId(cell));\n\t\t\t\t\tcollision = this.getCell(cell.getId());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Lazily creates the cells dictionary\n\t\t\t\tif (this.cells == null)\n\t\t\t\t{\n\t\t\t\t\tthis.cells = new Object();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.cells[cell.getId()] = cell;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Makes sure IDs of deleted cells are not reused\n\t\tif (mxUtils.isNumeric(cell.getId()))\n\t\t{\n\t\t\tthis.nextId = Math.max(this.nextId, cell.getId());\n\t\t}\n\t\t\n\t\t// Recursively processes child cells\n\t\tvar childCount = this.getChildCount(cell);\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tthis.cellAdded(this.getChildAt(cell, i));\n\t\t}\n\t}\n};\n\n/**\n * Function: createId\n * \n * Hook method to create an Id for the specified cell. This implementation\n * concatenates <prefix>, id and <postfix> to create the Id and increments\n * <nextId>. The cell is ignored by this implementation, but can be used in\n * overridden methods to prefix the Ids with eg. the cell type.\n *\n * Parameters:\n *\n * cell - <mxCell> to create the Id for.\n */\nmxGraphModel.prototype.createId = function(cell)\n{\n\tvar id = this.nextId;\n\tthis.nextId++;\n\t\n\treturn this.prefix + id + this.postfix;\n};\n\n/**\n * Function: updateEdgeParents\n * \n * Updates the parent for all edges that are connected to cell or one of\n * its descendants using <updateEdgeParent>.\n */\nmxGraphModel.prototype.updateEdgeParents = function(cell, root)\n{\n\t// Gets the topmost node of the hierarchy\n\troot = root || this.getRoot(cell);\n\t\n\t// Updates edges on children first\n\tvar childCount = this.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(cell, i);\n\t\tthis.updateEdgeParents(child, root);\n\t}\n\t\n\t// Updates the parents of all connected edges\n\tvar edgeCount = this.getEdgeCount(cell);\n\tvar edges = [];\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tedges.push(this.getEdgeAt(cell, i));\n\t}\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar edge = edges[i];\n\t\t\n\t\t// Updates edge parent if edge and child have\n\t\t// a common root node (does not need to be the\n\t\t// model root node)\n\t\tif (this.isAncestor(root, edge))\n\t\t{\n\t\t\tthis.updateEdgeParent(edge, root);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateEdgeParent\n *\n * Inner callback to update the parent of the specified <mxCell> to the\n * nearest-common-ancestor of its two terminals.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * root - <mxCell> that represents the current root of the model.\n */\nmxGraphModel.prototype.updateEdgeParent = function(edge, root)\n{\n\tvar source = this.getTerminal(edge, true);\n\tvar target = this.getTerminal(edge, false);\n\tvar cell = null;\n\t\n\t// Uses the first non-relative descendants of the source terminal\n\twhile (source != null && !this.isEdge(source) &&\n\t\tsource.geometry != null && source.geometry.relative)\n\t{\n\t\tsource = this.getParent(source);\n\t}\n\t\n\t// Uses the first non-relative descendants of the target terminal\n\twhile (target != null && this.ignoreRelativeEdgeParent &&\n\t\t!this.isEdge(target) && target.geometry != null && \n\t\ttarget.geometry.relative)\n\t{\n\t\ttarget = this.getParent(target);\n\t}\n\t\n\tif (this.isAncestor(root, source) && this.isAncestor(root, target))\n\t{\n\t\tif (source == target)\n\t\t{\n\t\t\tcell = this.getParent(source);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcell = this.getNearestCommonAncestor(source, target);\n\t\t}\n\n\t\tif (cell != null && (this.getParent(cell) != this.root ||\n\t\t\tthis.isAncestor(cell, edge)) && this.getParent(edge) != cell)\n\t\t{\n\t\t\tvar geo = this.getGeometry(edge);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar origin1 = this.getOrigin(this.getParent(edge));\n\t\t\t\tvar origin2 = this.getOrigin(cell);\n\t\t\t\t\n\t\t\t\tvar dx = origin2.x - origin1.x;\n\t\t\t\tvar dy = origin2.y - origin1.y;\n\t\t\t\t\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.translate(-dx, -dy);\n\t\t\t\tthis.setGeometry(edge, geo);\n\t\t\t}\n\n\t\t\tthis.add(cell, edge, this.getChildCount(cell));\n\t\t}\n\t}\n};\n\n/**\n * Function: getOrigin\n * \n * Returns the absolute, accumulated origin for the children inside the\n * given parent as an <mxPoint>.\n */\nmxGraphModel.prototype.getOrigin = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tresult = this.getOrigin(this.getParent(cell));\n\t\t\n\t\tif (!this.isEdge(cell))\n\t\t{\n\t\t\tvar geo = this.getGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tresult.x += geo.x;\n\t\t\t\tresult.y += geo.y;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = new mxPoint();\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getNearestCommonAncestor\n * \n * Returns the nearest common ancestor for the specified cells.\n *\n * Parameters:\n * \n * cell1 - <mxCell> that specifies the first cell in the tree.\n * cell2 - <mxCell> that specifies the second cell in the tree.\n */\nmxGraphModel.prototype.getNearestCommonAncestor = function(cell1, cell2)\n{\n\tif (cell1 != null && cell2 != null)\n\t{\t\t\n\t\t// Creates the cell path for the second cell\n\t\tvar path = mxCellPath.create(cell2);\n\n\t\tif (path != null && path.length > 0)\n\t\t{\n\t\t\t// Bubbles through the ancestors of the first\n\t\t\t// cell to find the nearest common ancestor.\n\t\t\tvar cell = cell1;\n\t\t\tvar current = mxCellPath.create(cell);\n\t\t\t\n\t\t\t// Inverts arguments\n\t\t\tif (path.length < current.length)\n\t\t\t{\n\t\t\t\tcell = cell2;\n\t\t\t\tvar tmp = current;\n\t\t\t\tcurrent = path;\n\t\t\t\tpath = tmp;\n\t\t\t}\n\t\t\t\n\t\t\twhile (cell != null)\n\t\t\t{\n\t\t\t\tvar parent = this.getParent(cell);\n\t\t\t\t\n\t\t\t\t// Checks if the cell path is equal to the beginning of the given cell path\n\t\t\t\tif (path.indexOf(current + mxCellPath.PATH_SEPARATOR) == 0 && parent != null)\n\t\t\t\t{\n\t\t\t\t\treturn cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrent = mxCellPath.getParentPath(current);\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: remove\n * \n * Removes the specified cell from the model using <mxChildChange> and adds\n * the change to the current transaction. This operation will remove the\n * cell and all of its children from the model. Returns the removed cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that should be removed.\n */\nmxGraphModel.prototype.remove = function(cell)\n{\n\tif (cell == this.root)\n\t{\n\t\tthis.setRoot(null);\n\t}\n\telse if (this.getParent(cell) != null)\n\t{\n\t\tthis.execute(new mxChildChange(this, null, cell));\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellRemoved\n * \n * Inner callback to update <cells> when a cell has been removed.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell that has been removed.\n */\nmxGraphModel.prototype.cellRemoved = function(cell)\n{\n\tif (cell != null && this.cells != null)\n\t{\n\t\t// Recursively processes child cells\n\t\tvar childCount = this.getChildCount(cell);\n\t\t\n\t\tfor (var i = childCount - 1; i >= 0; i--)\n\t\t{\n\t\t\tthis.cellRemoved(this.getChildAt(cell, i));\n\t\t}\n\t\t\n\t\t// Removes the dictionary entry for the cell\n\t\tif (this.cells != null && cell.getId() != null)\n\t\t{\n\t\t\tdelete this.cells[cell.getId()];\n\t\t}\n\t}\n};\n\n/**\n * Function: parentForCellChanged\n * \n * Inner callback to update the parent of a cell using <mxCell.insert>\n * on the parent and return the previous parent.\n *\n * Parameters:\n * \n * cell - <mxCell> to update the parent for.\n * parent - <mxCell> that specifies the new parent of the cell.\n * index - Optional integer that defines the index of the child\n * in the parent's child array.\n */\nmxGraphModel.prototype.parentForCellChanged = function(cell, parent, index)\n{\n\tvar previous = this.getParent(cell);\n\t\n\tif (parent != null)\n\t{\n\t\tif (parent != previous || previous.getIndex(cell) != index)\n\t\t{\n\t\t\tparent.insert(cell, index);\n\t\t}\n\t}\n\telse if (previous != null)\n\t{\n\t\tvar oldIndex = previous.getIndex(cell);\n\t\tprevious.remove(oldIndex);\n\t}\n\t\n\t// Checks if the previous parent was already in the\n\t// model and avoids calling cellAdded if it was.\n\tif (!this.contains(previous) && parent != null)\n\t{\n\t\tthis.cellAdded(cell);\n\t}\n\telse if (parent == null)\n\t{\n\t\tthis.cellRemoved(cell);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: getChildCount\n *\n * Returns the number of children in the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> whose number of children should be returned.\n */\nmxGraphModel.prototype.getChildCount = function(cell)\n{\n\treturn (cell != null) ? cell.getChildCount() : 0;\n};\n\n/**\n * Function: getChildAt\n *\n * Returns the child of the given <mxCell> at the given index.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the parent.\n * index - Integer that specifies the index of the child to be returned.\n */\nmxGraphModel.prototype.getChildAt = function(cell, index)\n{\n\treturn (cell != null) ? cell.getChildAt(index) : null;\n};\n\n/**\n * Function: getChildren\n * \n * Returns all children of the given <mxCell> as an array of <mxCells>. The\n * return value should be only be read.\n *\n * Parameters:\n * \n * cell - <mxCell> the represents the parent.\n */\nmxGraphModel.prototype.getChildren = function(cell)\n{\n\treturn (cell != null) ? cell.children : null;\n};\n\t\n/**\n * Function: getChildVertices\n * \n * Returns the child vertices of the given parent.\n *\n * Parameters:\n * \n * cell - <mxCell> whose child vertices should be returned.\n */\nmxGraphModel.prototype.getChildVertices = function(parent)\n{\n\treturn this.getChildCells(parent, true, false);\n};\n\t\t\n/**\n * Function: getChildEdges\n * \n * Returns the child edges of the given parent.\n *\n * Parameters:\n * \n * cell - <mxCell> whose child edges should be returned.\n */\nmxGraphModel.prototype.getChildEdges = function(parent)\n{\n\treturn this.getChildCells(parent, false, true);\n};\n\n/**\n * Function: getChildCells\n * \n * Returns the children of the given cell that are vertices and/or edges\n * depending on the arguments.\n *\n * Parameters:\n * \n * cell - <mxCell> the represents the parent.\n * vertices - Boolean indicating if child vertices should be returned.\n * Default is false.\n * edges - Boolean indicating if child edges should be returned.\n * Default is false.\n */\nmxGraphModel.prototype.getChildCells = function(parent, vertices, edges)\n{\n\tvertices = (vertices != null) ? vertices : false;\n\tedges = (edges != null) ? edges : false;\n\t\n\tvar childCount = this.getChildCount(parent);\n\tvar result = [];\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(parent, i);\n\n\t\tif ((!edges && !vertices) || (edges && this.isEdge(child)) ||\n\t\t\t(vertices && this.isVertex(child)))\n\t\t{\n\t\t\tresult.push(child);\n\t\t}\n\t}\n\n\treturn result;\n};\n\t\t\n/**\n * Function: getTerminal\n * \n * Returns the source or target <mxCell> of the given edge depending on the\n * value of the boolean parameter.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * isSource - Boolean indicating which end of the edge should be returned.\n */\nmxGraphModel.prototype.getTerminal = function(edge, isSource)\n{\n\treturn (edge != null) ? edge.getTerminal(isSource) : null;\n};\n\n/**\n * Function: setTerminal\n * \n * Sets the source or target terminal of the given <mxCell> using\n * <mxTerminalChange> and adds the change to the current transaction.\n * This implementation updates the parent of the edge using <updateEdgeParent>\n * if required.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * terminal - <mxCell> that specifies the new terminal.\n * isSource - Boolean indicating if the terminal is the new source or\n * target terminal of the edge.\n */\nmxGraphModel.prototype.setTerminal = function(edge, terminal, isSource)\n{\n\tvar terminalChanged = terminal != this.getTerminal(edge, isSource);\n\tthis.execute(new mxTerminalChange(this, edge, terminal, isSource));\n\t\n\tif (this.maintainEdgeParent && terminalChanged)\n\t{\n\t\tthis.updateEdgeParent(edge, this.getRoot());\n\t}\n\t\n\treturn terminal;\n};\n\t\n/**\n * Function: setTerminals\n * \n * Sets the source and target <mxCell> of the given <mxCell> in a single\n * transaction using <setTerminal> for each end of the edge.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * source - <mxCell> that specifies the new source terminal.\n * target - <mxCell> that specifies the new target terminal.\n */\nmxGraphModel.prototype.setTerminals = function(edge, source, target)\n{\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tthis.setTerminal(edge, source, true);\n\t\tthis.setTerminal(edge, target, false);\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: terminalForCellChanged\n * \n * Inner helper function to update the terminal of the edge using\n * <mxCell.insertEdge> and return the previous terminal.\n * \n * Parameters:\n * \n * edge - <mxCell> that specifies the edge to be updated.\n * terminal - <mxCell> that specifies the new terminal.\n * isSource - Boolean indicating if the terminal is the new source or\n * target terminal of the edge.\n */\nmxGraphModel.prototype.terminalForCellChanged = function(edge, terminal, isSource)\n{\n\tvar previous = this.getTerminal(edge, isSource);\n\t\n\tif (terminal != null)\n\t{\n\t\tterminal.insertEdge(edge, isSource);\n\t}\n\telse if (previous != null)\n\t{\n\t\tprevious.removeEdge(edge, isSource);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: getEdgeCount\n * \n * Returns the number of distinct edges connected to the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the vertex.\n */\nmxGraphModel.prototype.getEdgeCount = function(cell)\n{\n\treturn (cell != null) ? cell.getEdgeCount() : 0;\n};\n\n/**\n * Function: getEdgeAt\n * \n * Returns the edge of cell at the given index.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the vertex.\n * index - Integer that specifies the index of the edge\n * to return.\n */\nmxGraphModel.prototype.getEdgeAt = function(cell, index)\n{\n\treturn (cell != null) ? cell.getEdgeAt(index) : null;\n};\n\t\n/**\n * Function: getDirectedEdgeCount\n * \n * Returns the number of incoming or outgoing edges, ignoring the given\n * edge.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edge count should be returned.\n * outgoing - Boolean that specifies if the number of outgoing or\n * incoming edges should be returned.\n * ignoredEdge - <mxCell> that represents an edge to be ignored.\n */\nmxGraphModel.prototype.getDirectedEdgeCount = function(cell, outgoing, ignoredEdge)\n{\n\tvar count = 0;\n\tvar edgeCount = this.getEdgeCount(cell);\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(cell, i);\n\n\t\tif (edge != ignoredEdge && this.getTerminal(edge, outgoing) == cell)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\n\treturn count;\n};\n\n/**\n * Function: getConnections\n * \n * Returns all edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n * \n */\nmxGraphModel.prototype.getConnections = function(cell)\n{\n\treturn this.getEdges(cell, true, true, false);\n};\n\n/**\n * Function: getIncomingEdges\n * \n * Returns the incoming edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose incoming edges should be returned.\n * \n */\nmxGraphModel.prototype.getIncomingEdges = function(cell)\n{\n\treturn this.getEdges(cell, true, false, false);\n};\n\n/**\n * Function: getOutgoingEdges\n * \n * Returns the outgoing edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose outgoing edges should be returned.\n * \n */\nmxGraphModel.prototype.getOutgoingEdges = function(cell)\n{\n\treturn this.getEdges(cell, false, true, false);\n};\n\n/**\n * Function: getEdges\n * \n * Returns all distinct edges connected to this cell as a new array of\n * <mxCells>. If at least one of incoming or outgoing is true, then loops\n * are ignored, otherwise if both are false, then all edges connected to\n * the given cell are returned including loops.\n * \n * Parameters:\n * \n * cell - <mxCell> that specifies the cell.\n * incoming - Optional boolean that specifies if incoming edges should be\n * returned. Default is true.\n * outgoing - Optional boolean that specifies if outgoing edges should be\n * returned. Default is true.\n * includeLoops - Optional boolean that specifies if loops should be returned.\n * Default is true. \n */\nmxGraphModel.prototype.getEdges = function(cell, incoming, outgoing, includeLoops)\n{\n\tincoming = (incoming != null) ? incoming : true;\n\toutgoing = (outgoing != null) ? outgoing : true;\n\tincludeLoops = (includeLoops != null) ? includeLoops : true;\n\t\n\tvar edgeCount = this.getEdgeCount(cell);\n\tvar result = [];\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(cell, i);\n\t\tvar source = this.getTerminal(edge, true);\n\t\tvar target = this.getTerminal(edge, false);\n\n\t\tif ((includeLoops && source == target) || ((source != target) && ((incoming && target == cell) ||\n\t\t\t(outgoing && source == cell))))\n\t\t{\n\t\t\tresult.push(edge);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns all edges between the given source and target pair. If directed\n * is true, then only edges from the source to the target are returned,\n * otherwise, all edges between the two cells are returned.\n * \n * Parameters:\n * \n * source - <mxCell> that defines the source terminal of the edge to be\n * returned.\n * target - <mxCell> that defines the target terminal of the edge to be\n * returned.\n * directed - Optional boolean that specifies if the direction of the\n * edge should be taken into account. Default is false.\n */\nmxGraphModel.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\t\n\tvar tmp1 = this.getEdgeCount(source);\n\tvar tmp2 = this.getEdgeCount(target);\n\t\n\t// Assumes the source has less connected edges\n\tvar terminal = source;\n\tvar edgeCount = tmp1;\n\t\n\t// Uses the smaller array of connected edges\n\t// for searching the edge\n\tif (tmp2 < tmp1)\n\t{\n\t\tedgeCount = tmp2;\n\t\tterminal = target;\n\t}\n\t\n\tvar result = [];\n\t\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(terminal, i);\n\t\tvar src = this.getTerminal(edge, true);\n\t\tvar trg = this.getTerminal(edge, false);\n\t\tvar directedMatch = (src == source) && (trg == target);\n\t\tvar oppositeMatch = (trg == source) && (src == target);\n\n\t\tif (directedMatch || (!directed && oppositeMatch))\n\t\t{\n\t\t\tresult.push(edge);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getOpposites\n * \n * Returns all opposite vertices wrt terminal for the given edges, only\n * returning sources and/or targets as specified. The result is returned\n * as an array of <mxCells>.\n * \n * Parameters:\n * \n * edges - Array of <mxCells> that contain the edges to be examined.\n * terminal - <mxCell> that specifies the known end of the edges.\n * sources - Boolean that specifies if source terminals should be contained\n * in the result. Default is true.\n * targets - Boolean that specifies if target terminals should be contained\n * in the result. Default is true.\n */\nmxGraphModel.prototype.getOpposites = function(edges, terminal, sources, targets)\n{\n\tsources = (sources != null) ? sources : true;\n\ttargets = (targets != null) ? targets : true;\n\t\n\tvar terminals = [];\n\t\n\tif (edges != null)\n\t{\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar source = this.getTerminal(edges[i], true);\n\t\t\tvar target = this.getTerminal(edges[i], false);\n\t\t\t\n\t\t\t// Checks if the terminal is the source of\n\t\t\t// the edge and if the target should be\n\t\t\t// stored in the result\n\t\t\tif (source == terminal && target != null && target != terminal && targets)\n\t\t\t{\n\t\t\t\tterminals.push(target);\n\t\t\t}\n\t\t\t\n\t\t\t// Checks if the terminal is the taget of\n\t\t\t// the edge and if the source should be\n\t\t\t// stored in the result\n\t\t\telse if (target == terminal && source != null && source != terminal && sources)\n\t\t\t{\n\t\t\t\tterminals.push(source);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn terminals;\n};\n\n/**\n * Function: getTopmostCells\n * \n * Returns the topmost cells of the hierarchy in an array that contains no\n * descendants for each <mxCell> that it contains. Duplicates should be\n * removed in the cells array to improve performance.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose topmost ancestors should be returned.\n */\nmxGraphModel.prototype.getTopmostCells = function(cells)\n{\n\tvar dict = new mxDictionary();\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tdict.put(cells[i], true);\n\t}\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tvar cell = cells[i];\n\t\tvar topmost = true;\n\t\tvar parent = this.getParent(cell);\n\t\t\n\t\twhile (parent != null)\n\t\t{\n\t\t\tif (dict.get(parent))\n\t\t\t{\n\t\t\t\ttopmost = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tparent = this.getParent(parent);\n\t\t}\n\t\t\n\t\tif (topmost)\n\t\t{\n\t\t\ttmp.push(cell);\n\t\t}\n\t}\n\t\n\treturn tmp;\n};\n\n/**\n * Function: isVertex\n * \n * Returns true if the given cell is a vertex.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible vertex.\n */\nmxGraphModel.prototype.isVertex = function(cell)\n{\n\treturn (cell != null) ? cell.isVertex() : false;\n};\n\n/**\n * Function: isEdge\n * \n * Returns true if the given cell is an edge.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible edge.\n */\nmxGraphModel.prototype.isEdge = function(cell)\n{\n\treturn (cell != null) ? cell.isEdge() : false;\n};\n\n/**\n * Function: isConnectable\n * \n * Returns true if the given <mxCell> is connectable. If <edgesConnectable>\n * is false, then this function returns false for all edges else it returns\n * the return value of <mxCell.isConnectable>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose connectable state should be returned.\n */\nmxGraphModel.prototype.isConnectable = function(cell)\n{\n\treturn (cell != null) ? cell.isConnectable() : false;\n};\n\n/**\n * Function: getValue\n * \n * Returns the user object of the given <mxCell> using <mxCell.getValue>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose user object should be returned.\n */\nmxGraphModel.prototype.getValue = function(cell)\n{\n\treturn (cell != null) ? cell.getValue() : null;\n};\n\n/**\n * Function: setValue\n * \n * Sets the user object of then given <mxCell> using <mxValueChange>\n * and adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose user object should be changed.\n * value - Object that defines the new user object.\n */\nmxGraphModel.prototype.setValue = function(cell, value)\n{\n\tthis.execute(new mxValueChange(this, cell, value));\n\t\n\treturn value;\n};\n\n/**\n * Function: valueForCellChanged\n * \n * Inner callback to update the user object of the given <mxCell>\n * using <mxCell.valueChanged> and return the previous value,\n * that is, the return value of <mxCell.valueChanged>.\n * \n * To change a specific attribute in an XML node, the following code can be\n * used.\n * \n * (code)\n * graph.getModel().valueForCellChanged = function(cell, value)\n * {\n *   var previous = cell.value.getAttribute('label');\n *   cell.value.setAttribute('label', value);\n *   \n *   return previous;\n * };\n * (end) \n */\nmxGraphModel.prototype.valueForCellChanged = function(cell, value)\n{\n\treturn cell.valueChanged(value);\n};\n\n/**\n * Function: getGeometry\n * \n * Returns the <mxGeometry> of the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose geometry should be returned.\n */\nmxGraphModel.prototype.getGeometry = function(cell)\n{\n\treturn (cell != null) ? cell.getGeometry() : null;\n};\n\n/**\n * Function: setGeometry\n * \n * Sets the <mxGeometry> of the given <mxCell>. The actual update\n * of the cell is carried out in <geometryForCellChanged>. The\n * <mxGeometryChange> action is used to encapsulate the change.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be changed.\n * geometry - <mxGeometry> that defines the new geometry.\n */\nmxGraphModel.prototype.setGeometry = function(cell, geometry)\n{\n\tif (geometry != this.getGeometry(cell))\n\t{\n\t\tthis.execute(new mxGeometryChange(this, cell, geometry));\n\t}\n\t\n\treturn geometry;\n};\n\n/**\n * Function: geometryForCellChanged\n * \n * Inner callback to update the <mxGeometry> of the given <mxCell> using\n * <mxCell.setGeometry> and return the previous <mxGeometry>.\n */\nmxGraphModel.prototype.geometryForCellChanged = function(cell, geometry)\n{\n\tvar previous = this.getGeometry(cell);\n\tcell.setGeometry(geometry);\n\t\n\treturn previous;\n};\n\n/**\n * Function: getStyle\n * \n * Returns the style of the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose style should be returned.\n */\nmxGraphModel.prototype.getStyle = function(cell)\n{\n\treturn (cell != null) ? cell.getStyle() : null;\n};\n\n/**\n * Function: setStyle\n * \n * Sets the style of the given <mxCell> using <mxStyleChange> and\n * adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose style should be changed.\n * style - String of the form [stylename;|key=value;] to specify\n * the new cell style.\n */\nmxGraphModel.prototype.setStyle = function(cell, style)\n{\n\tif (style != this.getStyle(cell))\n\t{\n\t\tthis.execute(new mxStyleChange(this, cell, style));\n\t}\n\t\n\treturn style;\n};\n\n/**\n * Function: styleForCellChanged\n * \n * Inner callback to update the style of the given <mxCell>\n * using <mxCell.setStyle> and return the previous style.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * style - String of the form [stylename;|key=value;] to specify\n * the new cell style.\n */\nmxGraphModel.prototype.styleForCellChanged = function(cell, style)\n{\n\tvar previous = this.getStyle(cell);\n\tcell.setStyle(style);\n\t\n\treturn previous;\n};\n\n/**\n * Function: isCollapsed\n * \n * Returns true if the given <mxCell> is collapsed.\n *\n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be returned.\n */\nmxGraphModel.prototype.isCollapsed = function(cell)\n{\n\treturn (cell != null) ? cell.isCollapsed() : false;\n};\n\n/**\n * Function: setCollapsed\n * \n * Sets the collapsed state of the given <mxCell> using <mxCollapseChange>\n * and adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be changed.\n * collapsed - Boolean that specifies the new collpased state.\n */\nmxGraphModel.prototype.setCollapsed = function(cell, collapsed)\n{\n\tif (collapsed != this.isCollapsed(cell))\n\t{\n\t\tthis.execute(new mxCollapseChange(this, cell, collapsed));\n\t}\n\t\n\treturn collapsed;\n};\n\t\n/**\n * Function: collapsedStateForCellChanged\n *\n * Inner callback to update the collapsed state of the\n * given <mxCell> using <mxCell.setCollapsed> and return\n * the previous collapsed state.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * collapsed - Boolean that specifies the new collpased state.\n */\nmxGraphModel.prototype.collapsedStateForCellChanged = function(cell, collapsed)\n{\n\tvar previous = this.isCollapsed(cell);\n\tcell.setCollapsed(collapsed);\n\t\n\treturn previous;\n};\n\n/**\n * Function: isVisible\n * \n * Returns true if the given <mxCell> is visible.\n * \n * Parameters:\n * \n * cell - <mxCell> whose visible state should be returned.\n */\nmxGraphModel.prototype.isVisible = function(cell)\n{\n\treturn (cell != null) ? cell.isVisible() : false;\n};\n\n/**\n * Function: setVisible\n * \n * Sets the visible state of the given <mxCell> using <mxVisibleChange> and\n * adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose visible state should be changed.\n * visible - Boolean that specifies the new visible state.\n */\nmxGraphModel.prototype.setVisible = function(cell, visible)\n{\n\tif (visible != this.isVisible(cell))\n\t{\n\t\tthis.execute(new mxVisibleChange(this, cell, visible));\n\t}\n\t\n\treturn visible;\n};\n\t\n/**\n * Function: visibleStateForCellChanged\n *\n * Inner callback to update the visible state of the\n * given <mxCell> using <mxCell.setCollapsed> and return\n * the previous visible state.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * visible - Boolean that specifies the new visible state.\n */\nmxGraphModel.prototype.visibleStateForCellChanged = function(cell, visible)\n{\n\tvar previous = this.isVisible(cell);\n\tcell.setVisible(visible);\n\t\n\treturn previous;\n};\n\n/**\n * Function: execute\n * \n * Executes the given edit and fires events if required. The edit object\n * requires an execute function which is invoked. The edit is added to the\n * <currentEdit> between <beginUpdate> and <endUpdate> calls, so that\n * events will be fired if this execute is an individual transaction, that\n * is, if no previous <beginUpdate> calls have been made without calling\n * <endUpdate>. This implementation fires an <execute> event before\n * executing the given change.\n * \n * Parameters:\n * \n * change - Object that described the change.\n */\nmxGraphModel.prototype.execute = function(change)\n{\n\tchange.execute();\n\tthis.beginUpdate();\n\tthis.currentEdit.add(change);\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTE, 'change', change));\n\t// New global executed event\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\tthis.endUpdate();\n};\n\n/**\n * Function: beginUpdate\n * \n * Increments the <updateLevel> by one. The event notification\n * is queued until <updateLevel> reaches 0 by use of\n * <endUpdate>.\n *\n * All changes on <mxGraphModel> are transactional,\n * that is, they are executed in a single undoable change\n * on the model (without transaction isolation).\n * Therefore, if you want to combine any\n * number of changes into a single undoable change,\n * you should group any two or more API calls that\n * modify the graph model between <beginUpdate>\n * and <endUpdate> calls as shown here:\n * \n * (code)\n * var model = graph.getModel();\n * var parent = graph.getDefaultParent();\n * var index = model.getChildCount(parent);\n * model.beginUpdate();\n * try\n * {\n *   model.add(parent, v1, index);\n *   model.add(parent, v2, index+1);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * (end)\n * \n * Of course there is a shortcut for appending a\n * sequence of cells into the default parent:\n * \n * (code)\n * graph.addCells([v1, v2]).\n * (end)\n */\nmxGraphModel.prototype.beginUpdate = function()\n{\n\tthis.updateLevel++;\n\tthis.fireEvent(new mxEventObject(mxEvent.BEGIN_UPDATE));\n\t\n\tif (this.updateLevel == 1)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t}\n};\n\n/**\n * Function: endUpdate\n * \n * Decrements the <updateLevel> by one and fires an <undo>\n * event if the <updateLevel> reaches 0. This function\n * indirectly fires a <change> event by invoking the notify\n * function on the <currentEdit> und then creates a new\n * <currentEdit> using <createUndoableEdit>.\n *\n * The <undo> event is fired only once per edit, whereas\n * the <change> event is fired whenever the notify\n * function is invoked, that is, on undo and redo of\n * the edit.\n */\nmxGraphModel.prototype.endUpdate = function()\n{\n\tthis.updateLevel--;\n\t\n\tif (this.updateLevel == 0)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tif (!this.endingUpdate)\n\t{\n\t\tthis.endingUpdate = this.updateLevel == 0;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.END_UPDATE, 'edit', this.currentEdit));\n\n\t\ttry\n\t\t{\t\t\n\t\t\tif (this.endingUpdate && !this.currentEdit.isEmpty())\n\t\t\t{\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.BEFORE_UNDO, 'edit', this.currentEdit));\n\t\t\t\tvar tmp = this.currentEdit;\n\t\t\t\tthis.currentEdit = this.createUndoableEdit();\n\t\t\t\ttmp.notify();\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', tmp));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.endingUpdate = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: createUndoableEdit\n * \n * Creates a new <mxUndoableEdit> that implements the\n * notify function to fire a <change> and <notify> event\n * through the <mxUndoableEdit>'s source.\n * \n * Parameters:\n * \n * significant - Optional boolean that specifies if the edit to be created is\n * significant. Default is true.\n */\nmxGraphModel.prototype.createUndoableEdit = function(significant)\n{\n\tvar edit = new mxUndoableEdit(this, (significant != null) ? significant : true);\n\t\n\tedit.notify = function()\n\t{\n\t\t// LATER: Remove changes property (deprecated)\n\t\tedit.source.fireEvent(new mxEventObject(mxEvent.CHANGE,\n\t\t\t'edit', edit, 'changes', edit.changes));\n\t\tedit.source.fireEvent(new mxEventObject(mxEvent.NOTIFY,\n\t\t\t'edit', edit, 'changes', edit.changes));\n\t};\n\t\n\treturn edit;\n};\n\n/**\n * Function: mergeChildren\n * \n * Merges the children of the given cell into the given target cell inside\n * this model. All cells are cloned unless there is a corresponding cell in\n * the model with the same id, in which case the source cell is ignored and\n * all edges are connected to the corresponding cell in this model. Edges\n * are considered to have no identity and are always cloned unless the\n * cloneAllEdges flag is set to false, in which case edges with the same\n * id in the target model are reconnected to reflect the terminals of the\n * source edges.\n */\nmxGraphModel.prototype.mergeChildren = function(from, to, cloneAllEdges)\n{\n\tcloneAllEdges = (cloneAllEdges != null) ? cloneAllEdges : true;\n\t\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tvar mapping = new Object();\n\t\tthis.mergeChildrenImpl(from, to, cloneAllEdges, mapping);\n\t\t\n\t\t// Post-processes all edges in the mapping and\n\t\t// reconnects the terminals to the corresponding\n\t\t// cells in the target model\n\t\tfor (var key in mapping)\n\t\t{\n\t\t\tvar cell = mapping[key];\n\t\t\tvar terminal = this.getTerminal(cell, true);\n\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tterminal = mapping[mxCellPath.create(terminal)];\n\t\t\t\tthis.setTerminal(cell, terminal, true);\n\t\t\t}\n\t\t\t\n\t\t\tterminal = this.getTerminal(cell, false);\n\t\t\t\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tterminal = mapping[mxCellPath.create(terminal)];\n\t\t\t\tthis.setTerminal(cell, terminal, false);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: mergeChildren\n * \n * Clones the children of the source cell into the given target cell in\n * this model and adds an entry to the mapping that maps from the source\n * cell to the target cell with the same id or the clone of the source cell\n * that was inserted into this model.\n */\nmxGraphModel.prototype.mergeChildrenImpl = function(from, to, cloneAllEdges, mapping)\n{\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tvar childCount = from.getChildCount();\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar cell = from.getChildAt(i);\n\t\t\t\n\t\t\tif (typeof(cell.getId) == 'function')\n\t\t\t{\n\t\t\t\tvar id = cell.getId();\n\t\t\t\tvar target = (id != null && (!this.isEdge(cell) || !cloneAllEdges)) ?\n\t\t\t\t\t\tthis.getCell(id) : null;\n\t\t\t\t\n\t\t\t\t// Clones and adds the child if no cell exists for the id\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\tvar clone = cell.clone();\n\t\t\t\t\tclone.setId(id);\n\t\t\t\t\t\n\t\t\t\t\t// Sets the terminals from the original cell to the clone\n\t\t\t\t\t// because the lookup uses strings not cells in JS\n\t\t\t\t\tclone.setTerminal(cell.getTerminal(true), true);\n\t\t\t\t\tclone.setTerminal(cell.getTerminal(false), false);\n\t\t\t\t\t\n\t\t\t\t\t// Do *NOT* use model.add as this will move the edge away\n\t\t\t\t\t// from the parent in updateEdgeParent if maintainEdgeParent\n\t\t\t\t\t// is enabled in the target model\n\t\t\t\t\ttarget = to.insert(clone);\n\t\t\t\t\tthis.cellAdded(target);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Stores the mapping for later reconnecting edges\n\t\t\t\tmapping[mxCellPath.create(cell)] = target;\n\t\t\t\t\n\t\t\t\t// Recurses\n\t\t\t\tthis.mergeChildrenImpl(cell, target, cloneAllEdges, mapping);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: getParents\n * \n * Returns an array that represents the set (no duplicates) of all parents\n * for the given array of cells.\n * \n * Parameters:\n * \n * cells - Array of cells whose parents should be returned.\n */\nmxGraphModel.prototype.getParents = function(cells)\n{\n\tvar parents = [];\n\t\n\tif (cells != null)\n\t{\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar parent = this.getParent(cells[i]);\n\t\t\t\n\t\t\tif (parent != null && !dict.get(parent))\n\t\t\t{\n\t\t\t\tdict.put(parent, true);\n\t\t\t\tparents.push(parent);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn parents;\n};\n\n//\n// Cell Cloning\n//\n\n/**\n * Function: cloneCell\n * \n * Returns a deep clone of the given <mxCell> (including\n * the children) which is created using <cloneCells>.\n *\n * Parameters:\n * \n * cell - <mxCell> to be cloned.\n */\nmxGraphModel.prototype.cloneCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\treturn this.cloneCells([cell], true)[0];\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: cloneCells\n * \n * Returns an array of clones for the given array of <mxCells>.\n * Depending on the value of includeChildren, a deep clone is created for\n * each cell. Connections are restored based if the corresponding\n * cell is contained in the passed in array.\n *\n * Parameters:\n * \n * cells - Array of <mxCell> to be cloned.\n * includeChildren - Boolean indicating if the cells should be cloned\n * with all descendants.\n * mapping - Optional mapping for existing clones.\n */\nmxGraphModel.prototype.cloneCells = function(cells, includeChildren, mapping)\n{\n\tmapping = (mapping != null) ? mapping : new Object();\n\tvar clones = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (cells[i] != null)\n\t\t{\n\t\t\tclones.push(this.cloneCellImpl(cells[i], mapping, includeChildren));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tclones.push(null);\n\t\t}\n\t}\n\t\n\tfor (var i = 0; i < clones.length; i++)\n\t{\n\t\tif (clones[i] != null)\n\t\t{\n\t\t\tthis.restoreClone(clones[i], cells[i], mapping);\n\t\t}\n\t}\n\t\n\treturn clones;\n};\n\t\t\t\n/**\n * Function: cloneCellImpl\n * \n * Inner helper method for cloning cells recursively.\n */\nmxGraphModel.prototype.cloneCellImpl = function(cell, mapping, includeChildren)\n{\n\tvar ident = mxObjectIdentity.get(cell);\n\tvar clone = mapping[ident];\n\t\n\tif (clone == null)\n\t{\n\t\tclone = this.cellCloned(cell);\n\t\tmapping[ident] = clone;\n\n\t\tif (includeChildren)\n\t\t{\n\t\t\tvar childCount = this.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar cloneChild = this.cloneCellImpl(\n\t\t\t\t\tthis.getChildAt(cell, i), mapping, true);\n\t\t\t\tclone.insert(cloneChild);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn clone;\n};\n\n/**\n * Function: cellCloned\n * \n * Hook for cloning the cell. This returns cell.clone() or\n * any possible exceptions.\n */\nmxGraphModel.prototype.cellCloned = function(cell)\n{\n\treturn cell.clone();\n};\n\n/**\n * Function: restoreClone\n * \n * Inner helper method for restoring the connections in\n * a network of cloned cells.\n */\nmxGraphModel.prototype.restoreClone = function(clone, cell, mapping)\n{\n\tvar source = this.getTerminal(cell, true);\n\t\n\tif (source != null)\n\t{\n\t\tvar tmp = mapping[mxObjectIdentity.get(source)];\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\ttmp.insertEdge(clone, true);\n\t\t}\n\t}\n\t\n\tvar target = this.getTerminal(cell, false);\n\t\n\tif (target != null)\n\t{\n\t\tvar tmp = mapping[mxObjectIdentity.get(target)];\n\t\t\n\t\tif (tmp != null)\n\t\t{\t\n\t\t\ttmp.insertEdge(clone, false);\n\t\t}\n\t}\n\t\n\tvar childCount = this.getChildCount(clone);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.restoreClone(this.getChildAt(clone, i),\n\t\t\tthis.getChildAt(cell, i), mapping);\n\t}\n};\n\n//\n// Atomic changes\n//\n\n/**\n * Class: mxRootChange\n * \n * Action to change the root in a model.\n *\n * Constructor: mxRootChange\n * \n * Constructs a change of the root in the\n * specified model.\n */\nfunction mxRootChange(model, root)\n{\n\tthis.model = model;\n\tthis.root = root;\n\tthis.previous = root;\n};\n\n/**\n * Function: execute\n * \n * Carries out a change of the root using\n * <mxGraphModel.rootChanged>.\n */\nmxRootChange.prototype.execute = function()\n{\n\tthis.root = this.previous;\n\tthis.previous = this.model.rootChanged(this.previous);\n};\n\n/**\n * Class: mxChildChange\n * \n * Action to add or remove a child in a model.\n *\n * Constructor: mxChildChange\n * \n * Constructs a change of a child in the\n * specified model.\n */\nfunction mxChildChange(model, parent, child, index)\n{\n\tthis.model = model;\n\tthis.parent = parent;\n\tthis.previous = parent;\n\tthis.child = child;\n\tthis.index = index;\n\tthis.previousIndex = index;\n};\n\n/**\n * Function: execute\n * \n * Changes the parent of <child> using\n * <mxGraphModel.parentForCellChanged> and\n * removes or restores the cell's\n * connections.\n */\nmxChildChange.prototype.execute = function()\n{\n\tif (this.child != null)\n\t{\n\t\tvar tmp = this.model.getParent(this.child);\n\t\tvar tmp2 = (tmp != null) ? tmp.getIndex(this.child) : 0;\n\t\t\n\t\tif (this.previous == null)\n\t\t{\n\t\t\tthis.connect(this.child, false);\n\t\t}\n\t\t\n\t\ttmp = this.model.parentForCellChanged(\n\t\t\tthis.child, this.previous, this.previousIndex);\n\t\t\t\n\t\tif (this.previous != null)\n\t\t{\n\t\t\tthis.connect(this.child, true);\n\t\t}\n\t\t\n\t\tthis.parent = this.previous;\n\t\tthis.previous = tmp;\n\t\tthis.index = this.previousIndex;\n\t\tthis.previousIndex = tmp2;\n\t}\n};\n\n/**\n * Function: disconnect\n * \n * Disconnects the given cell recursively from its\n * terminals and stores the previous terminal in the\n * cell's terminals.\n */\nmxChildChange.prototype.connect = function(cell, isConnect)\n{\n\tisConnect = (isConnect != null) ? isConnect : true;\n\t\n\tvar source = cell.getTerminal(true);\n\tvar target = cell.getTerminal(false);\n\t\n\tif (source != null)\n\t{\n\t\tif (isConnect)\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, source, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, null, true);\n\t\t}\n\t}\n\t\n\tif (target != null)\n\t{\n\t\tif (isConnect)\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, target, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, null, false);\n\t\t}\n\t}\n\t\n\tcell.setTerminal(source, true);\n\tcell.setTerminal(target, false);\n\t\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i=0; i<childCount; i++)\n\t{\n\t\tthis.connect(this.model.getChildAt(cell, i), isConnect);\n\t}\n};\n\n/**\n * Class: mxTerminalChange\n * \n * Action to change a terminal in a model.\n *\n * Constructor: mxTerminalChange\n * \n * Constructs a change of a terminal in the \n * specified model.\n */\nfunction mxTerminalChange(model, cell, terminal, source)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.terminal = terminal;\n\tthis.previous = terminal;\n\tthis.source = source;\n};\n\n/**\n * Function: execute\n * \n * Changes the terminal of <cell> to <previous> using\n * <mxGraphModel.terminalForCellChanged>.\n */\nmxTerminalChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.terminal = this.previous;\n\t\tthis.previous = this.model.terminalForCellChanged(\n\t\t\tthis.cell, this.previous, this.source);\n\t}\n};\n\n/**\n * Class: mxValueChange\n * \n * Action to change a user object in a model.\n *\n * Constructor: mxValueChange\n * \n * Constructs a change of a user object in the \n * specified model.\n */\nfunction mxValueChange(model, cell, value)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.value = value;\n\tthis.previous = value;\n};\n\n/**\n * Function: execute\n * \n * Changes the value of <cell> to <previous> using\n * <mxGraphModel.valueForCellChanged>.\n */\nmxValueChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.value = this.previous;\n\t\tthis.previous = this.model.valueForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxStyleChange\n * \n * Action to change a cell's style in a model.\n *\n * Constructor: mxStyleChange\n * \n * Constructs a change of a style in the\n * specified model.\n */\nfunction mxStyleChange(model, cell, style)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.style = style;\n\tthis.previous = style;\n};\n\n/**\n * Function: execute\n * \n * Changes the style of <cell> to <previous> using\n * <mxGraphModel.styleForCellChanged>.\n */\nmxStyleChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.style = this.previous;\n\t\tthis.previous = this.model.styleForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxGeometryChange\n * \n * Action to change a cell's geometry in a model.\n *\n * Constructor: mxGeometryChange\n * \n * Constructs a change of a geometry in the\n * specified model.\n */\nfunction mxGeometryChange(model, cell, geometry)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.geometry = geometry;\n\tthis.previous = geometry;\n};\n\n/**\n * Function: execute\n * \n * Changes the geometry of <cell> ro <previous> using\n * <mxGraphModel.geometryForCellChanged>.\n */\nmxGeometryChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.geometry = this.previous;\n\t\tthis.previous = this.model.geometryForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxCollapseChange\n * \n * Action to change a cell's collapsed state in a model.\n *\n * Constructor: mxCollapseChange\n * \n * Constructs a change of a collapsed state in the\n * specified model.\n */\nfunction mxCollapseChange(model, cell, collapsed)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.collapsed = collapsed;\n\tthis.previous = collapsed;\n};\n\n/**\n * Function: execute\n * \n * Changes the collapsed state of <cell> to <previous> using\n * <mxGraphModel.collapsedStateForCellChanged>.\n */\nmxCollapseChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.collapsed = this.previous;\n\t\tthis.previous = this.model.collapsedStateForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxVisibleChange\n * \n * Action to change a cell's visible state in a model.\n *\n * Constructor: mxVisibleChange\n * \n * Constructs a change of a visible state in the\n * specified model.\n */\nfunction mxVisibleChange(model, cell, visible)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.visible = visible;\n\tthis.previous = visible;\n};\n\n/**\n * Function: execute\n * \n * Changes the visible state of <cell> to <previous> using\n * <mxGraphModel.visibleStateForCellChanged>.\n */\nmxVisibleChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.visible = this.previous;\n\t\tthis.previous = this.model.visibleStateForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxCellAttributeChange\n * \n * Action to change the attribute of a cell's user object.\n * There is no method on the graph model that uses this\n * action. To use the action, you can use the code shown\n * in the example below.\n * \n * Example:\n * \n * To change the attributeName in the cell's user object\n * to attributeValue, use the following code:\n * \n * (code)\n * model.beginUpdate();\n * try\n * {\n *   var edit = new mxCellAttributeChange(\n *     cell, attributeName, attributeValue);\n *   model.execute(edit);\n * }\n * finally\n * {\n *   model.endUpdate();\n * } \n * (end)\n *\n * Constructor: mxCellAttributeChange\n * \n * Constructs a change of a attribute of the DOM node\n * stored as the value of the given <mxCell>.\n */\nfunction mxCellAttributeChange(cell, attribute, value)\n{\n\tthis.cell = cell;\n\tthis.attribute = attribute;\n\tthis.value = value;\n\tthis.previous = value;\n};\n\n/**\n * Function: execute\n * \n * Changes the attribute of the cell's user object by\n * using <mxCell.setAttribute>.\n */\nmxCellAttributeChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tvar tmp = this.cell.getAttribute(this.attribute);\n\t\t\n\t\tif (this.previous == null)\n\t\t{\n\t\t\tthis.cell.value.removeAttribute(this.attribute);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.cell.setAttribute(this.attribute, this.previous);\n\t\t}\n\t\t\n\t\tthis.previous = tmp;\n\t}\n};\n\n__mxOutput.mxGraphModel = typeof mxGraphModel !== 'undefined' ? mxGraphModel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCell\n *\n * Cells are the elements of the graph model. They represent the state\n * of the groups, vertices and edges in a graph.\n * \n * Custom attributes:\n * \n * For custom attributes we recommend using an XML node as the value of a cell.\n * The following code can be used to create a cell with an XML node as the\n * value:\n * \n * (code)\n * var doc = mxUtils.createXmlDocument();\n * var node = doc.createElement('MyNode')\n * node.setAttribute('label', 'MyLabel');\n * node.setAttribute('attribute1', 'value1');\n * graph.insertVertex(graph.getDefaultParent(), null, node, 40, 40, 80, 30);\n * (end)\n * \n * For the label to work, <mxGraph.convertValueToString> and\n * <mxGraph.cellLabelChanged> should be overridden as follows:\n * \n * (code)\n * graph.convertValueToString = function(cell)\n * {\n *   if (mxUtils.isNode(cell.value))\n *   {\n *     return cell.getAttribute('label', '')\n *   }\n * };\n * \n * var cellLabelChanged = graph.cellLabelChanged;\n * graph.cellLabelChanged = function(cell, newValue, autoSize)\n * {\n *   if (mxUtils.isNode(cell.value))\n *   {\n *     // Clones the value for correct undo/redo\n *     var elt = cell.value.cloneNode(true);\n *     elt.setAttribute('label', newValue);\n *     newValue = elt;\n *   }\n *   \n *   cellLabelChanged.apply(this, arguments);\n * };\n * (end)\n * \n * Callback: onInit\n *\n * Called from within the constructor.\n * \n * Constructor: mxCell\n *\n * Constructs a new cell to be used in a graph model.\n * This method invokes <onInit> upon completion.\n * \n * Parameters:\n * \n * value - Optional object that represents the cell value.\n * geometry - Optional <mxGeometry> that specifies the geometry.\n * style - Optional formatted string that defines the style.\n */\nfunction mxCell(value, geometry, style)\n{\n\tthis.value = value;\n\tthis.setGeometry(geometry);\n\tthis.setStyle(style);\n\t\n\tif (this.onInit != null)\n\t{\n\t\tthis.onInit();\n\t}\n};\n\n/**\n * Variable: id\n *\n * Holds the Id. Default is null.\n */\nmxCell.prototype.id = null;\n\n/**\n * Variable: value\n *\n * Holds the user object. Default is null.\n */\nmxCell.prototype.value = null;\n\n/**\n * Variable: geometry\n *\n * Holds the <mxGeometry>. Default is null.\n */\nmxCell.prototype.geometry = null;\n\n/**\n * Variable: style\n *\n * Holds the style as a string of the form [(stylename|key=value);]. Default is\n * null.\n */\nmxCell.prototype.style = null;\n\n/**\n * Variable: vertex\n *\n * Specifies whether the cell is a vertex. Default is false.\n */\nmxCell.prototype.vertex = false;\n\n/**\n * Variable: edge\n *\n * Specifies whether the cell is an edge. Default is false.\n */\nmxCell.prototype.edge = false;\n\n/**\n * Variable: connectable\n *\n * Specifies whether the cell is connectable. Default is true.\n */\nmxCell.prototype.connectable = true;\n\n/**\n * Variable: visible\n *\n * Specifies whether the cell is visible. Default is true.\n */\nmxCell.prototype.visible = true;\n\n/**\n * Variable: collapsed\n *\n * Specifies whether the cell is collapsed. Default is false.\n */\nmxCell.prototype.collapsed = false;\n\n/**\n * Variable: parent\n *\n * Reference to the parent cell.\n */\nmxCell.prototype.parent = null;\n\n/**\n * Variable: source\n *\n * Reference to the source terminal.\n */\nmxCell.prototype.source = null;\n\n/**\n * Variable: target\n *\n * Reference to the target terminal.\n */\nmxCell.prototype.target = null;\n\n/**\n * Variable: children\n *\n * Holds the child cells.\n */\nmxCell.prototype.children = null;\n\n/**\n * Variable: edges\n *\n * Holds the edges.\n */\nmxCell.prototype.edges = null;\n\n/**\n * Variable: mxTransient\n *\n * List of members that should not be cloned inside <clone>. This field is\n * passed to <mxUtils.clone> and is not made persistent in <mxCellCodec>.\n * This is not a convention for all classes, it is only used in this class\n * to mark transient fields since transient modifiers are not supported by\n * the language.\n */\nmxCell.prototype.mxTransient = ['id', 'value', 'parent', 'source',\n                                'target', 'children', 'edges'];\n\n/**\n * Function: getId\n *\n * Returns the Id of the cell as a string.\n */\nmxCell.prototype.getId = function()\n{\n\treturn this.id;\n};\n\t\t\n/**\n * Function: setId\n *\n * Sets the Id of the cell to the given string.\n */\nmxCell.prototype.setId = function(id)\n{\n\tthis.id = id;\n};\n\n/**\n * Function: getValue\n *\n * Returns the user object of the cell. The user\n * object is stored in <value>.\n */\nmxCell.prototype.getValue = function()\n{\n\treturn this.value;\n};\n\t\t\n/**\n * Function: setValue\n *\n * Sets the user object of the cell. The user object\n * is stored in <value>.\n */\nmxCell.prototype.setValue = function(value)\n{\n\tthis.value = value;\n};\n\n/**\n * Function: valueChanged\n *\n * Changes the user object after an in-place edit\n * and returns the previous value. This implementation\n * replaces the user object with the given value and\n * returns the old user object.\n */\nmxCell.prototype.valueChanged = function(newValue)\n{\n\tvar previous = this.getValue();\n\tthis.setValue(newValue);\n\t\n\treturn previous;\n};\n\n/**\n * Function: getGeometry\n *\n * Returns the <mxGeometry> that describes the <geometry>.\n */\nmxCell.prototype.getGeometry = function()\n{\n\treturn this.geometry;\n};\n\n/**\n * Function: setGeometry\n *\n * Sets the <mxGeometry> to be used as the <geometry>.\n */\nmxCell.prototype.setGeometry = function(geometry)\n{\n\tthis.geometry = geometry;\n};\n\n/**\n * Function: getStyle\n *\n * Returns a string that describes the <style>.\n */\nmxCell.prototype.getStyle = function()\n{\n\treturn this.style;\n};\n\n/**\n * Function: setStyle\n *\n * Sets the string to be used as the <style>.\n */\nmxCell.prototype.setStyle = function(style)\n{\n\tthis.style = style;\n};\n\n/**\n * Function: isVertex\n *\n * Returns true if the cell is a vertex.\n */\nmxCell.prototype.isVertex = function()\n{\n\treturn this.vertex != 0;\n};\n\n/**\n * Function: setVertex\n *\n * Specifies if the cell is a vertex. This should only be assigned at\n * construction of the cell and not be changed during its lifecycle.\n * \n * Parameters:\n * \n * vertex - Boolean that specifies if the cell is a vertex.\n */\nmxCell.prototype.setVertex = function(vertex)\n{\n\tthis.vertex = vertex;\n};\n\n/**\n * Function: isEdge\n *\n * Returns true if the cell is an edge.\n */\nmxCell.prototype.isEdge = function()\n{\n\treturn this.edge != 0;\n};\n\t\n/**\n * Function: setEdge\n * \n * Specifies if the cell is an edge. This should only be assigned at\n * construction of the cell and not be changed during its lifecycle.\n * \n * Parameters:\n * \n * edge - Boolean that specifies if the cell is an edge.\n */\nmxCell.prototype.setEdge = function(edge)\n{\n\tthis.edge = edge;\n};\n\n/**\n * Function: isConnectable\n *\n * Returns true if the cell is connectable.\n */\nmxCell.prototype.isConnectable = function()\n{\n\treturn this.connectable != 0;\n};\n\n/**\n * Function: setConnectable\n *\n * Sets the connectable state.\n * \n * Parameters:\n * \n * connectable - Boolean that specifies the new connectable state.\n */\nmxCell.prototype.setConnectable = function(connectable)\n{\n\tthis.connectable = connectable;\n};\n\n/**\n * Function: isVisible\n *\n * Returns true if the cell is visibile.\n */\nmxCell.prototype.isVisible = function()\n{\n\treturn this.visible != 0;\n};\n\n/**\n * Function: setVisible\n *\n * Specifies if the cell is visible.\n * \n * Parameters:\n * \n * visible - Boolean that specifies the new visible state.\n */\nmxCell.prototype.setVisible = function(visible)\n{\n\tthis.visible = visible;\n};\n\n/**\n * Function: isCollapsed\n *\n * Returns true if the cell is collapsed.\n */\nmxCell.prototype.isCollapsed = function()\n{\n\treturn this.collapsed != 0;\n};\n\n/**\n * Function: setCollapsed\n *\n * Sets the collapsed state.\n * \n * Parameters:\n * \n * collapsed - Boolean that specifies the new collapsed state.\n */\nmxCell.prototype.setCollapsed = function(collapsed)\n{\n\tthis.collapsed = collapsed;\n};\n\n/**\n * Function: getParent\n *\n * Returns the cell's parent.\n */\nmxCell.prototype.getParent = function()\n{\n\treturn this.parent;\n};\n\n/**\n * Function: setParent\n *\n * Sets the parent cell.\n * \n * Parameters:\n * \n * parent - <mxCell> that represents the new parent.\n */\nmxCell.prototype.setParent = function(parent)\n{\n\tthis.parent = parent;\n};\n\n/**\n * Function: getTerminal\n *\n * Returns the source or target terminal.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source terminal should be\n * returned.\n */\nmxCell.prototype.getTerminal = function(source)\n{\n\treturn (source) ? this.source : this.target;\n};\n\n/**\n * Function: setTerminal\n *\n * Sets the source or target terminal and returns the new terminal.\n * \n * Parameters:\n * \n * terminal - <mxCell> that represents the new source or target terminal.\n * isSource - Boolean that specifies if the source or target terminal\n * should be set.\n */\nmxCell.prototype.setTerminal = function(terminal, isSource)\n{\n\tif (isSource)\n\t{\n\t\tthis.source = terminal;\n\t}\n\telse\n\t{\n\t\tthis.target = terminal;\n\t}\n\t\n\treturn terminal;\n};\n\n/**\n * Function: getChildCount\n *\n * Returns the number of child cells.\n */\nmxCell.prototype.getChildCount = function()\n{\n\treturn (this.children == null) ? 0 : this.children.length;\n};\n\n/**\n * Function: getIndex\n *\n * Returns the index of the specified child in the child array.\n * \n * Parameters:\n * \n * child - Child whose index should be returned.\n */\nmxCell.prototype.getIndex = function(child)\n{\n\treturn mxUtils.indexOf(this.children, child);\n};\n\n/**\n * Function: getChildAt\n *\n * Returns the child at the specified index.\n * \n * Parameters:\n * \n * index - Integer that specifies the child to be returned.\n */\nmxCell.prototype.getChildAt = function(index)\n{\n\treturn (this.children == null) ? null : this.children[index];\n};\n\n/**\n * Function: insert\n *\n * Inserts the specified child into the child array at the specified index\n * and updates the parent reference of the child. If not childIndex is\n * specified then the child is appended to the child array. Returns the\n * inserted child.\n * \n * Parameters:\n * \n * child - <mxCell> to be inserted or appended to the child array.\n * index - Optional integer that specifies the index at which the child\n * should be inserted into the child array.\n */\nmxCell.prototype.insert = function(child, index)\n{\n\tif (child != null)\n\t{\n\t\tif (index == null)\n\t\t{\n\t\t\tindex = this.getChildCount();\n\t\t\t\n\t\t\tif (child.getParent() == this)\n\t\t\t{\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\tchild.removeFromParent();\n\t\tchild.setParent(this);\n\t\t\n\t\tif (this.children == null)\n\t\t{\n\t\t\tthis.children = [];\n\t\t\tthis.children.push(child);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.children.splice(index, 0, child);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: remove\n *\n * Removes the child at the specified index from the child array and\n * returns the child that was removed. Will remove the parent reference of\n * the child.\n * \n * Parameters:\n * \n * index - Integer that specifies the index of the child to be\n * removed.\n */\nmxCell.prototype.remove = function(index)\n{\n\tvar child = null;\n\t\n\tif (this.children != null && index >= 0)\n\t{\n\t\tchild = this.getChildAt(index);\n\t\t\n\t\tif (child != null)\n\t\t{\n\t\t\tthis.children.splice(index, 1);\n\t\t\tchild.setParent(null);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: removeFromParent\n *\n * Removes the cell from its parent.\n */\nmxCell.prototype.removeFromParent = function()\n{\n\tif (this.parent != null)\n\t{\n\t\tvar index = this.parent.getIndex(this);\n\t\tthis.parent.remove(index);\n\t}\n};\n\n/**\n * Function: getEdgeCount\n *\n * Returns the number of edges in the edge array.\n */\nmxCell.prototype.getEdgeCount = function()\n{\n\treturn (this.edges == null) ? 0 : this.edges.length;\n};\n\n/**\n * Function: getEdgeIndex\n *\n * Returns the index of the specified edge in <edges>.\n * \n * Parameters:\n * \n * edge - <mxCell> whose index in <edges> should be returned.\n */\nmxCell.prototype.getEdgeIndex = function(edge)\n{\n\treturn mxUtils.indexOf(this.edges, edge);\n};\n\n/**\n * Function: getEdgeAt\n *\n * Returns the edge at the specified index in <edges>.\n * \n * Parameters:\n * \n * index - Integer that specifies the index of the edge to be returned.\n */\nmxCell.prototype.getEdgeAt = function(index)\n{\n\treturn (this.edges == null) ? null : this.edges[index];\n};\n\n/**\n * Function: insertEdge\n *\n * Inserts the specified edge into the edge array and returns the edge.\n * Will update the respective terminal reference of the edge.\n * \n * Parameters:\n * \n * edge - <mxCell> to be inserted into the edge array.\n * isOutgoing - Boolean that specifies if the edge is outgoing.\n */\nmxCell.prototype.insertEdge = function(edge, isOutgoing)\n{\n\tif (edge != null)\n\t{\n\t\tedge.removeFromTerminal(isOutgoing);\n\t\tedge.setTerminal(this, isOutgoing);\n\t\t\n\t\tif (this.edges == null ||\n\t\t\tedge.getTerminal(!isOutgoing) != this ||\n\t\t\tmxUtils.indexOf(this.edges, edge) < 0)\n\t\t{\n\t\t\tif (this.edges == null)\n\t\t\t{\n\t\t\t\tthis.edges = [];\n\t\t\t}\n\t\t\t\n\t\t\tthis.edges.push(edge);\n\t\t}\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: removeEdge\n *\n * Removes the specified edge from the edge array and returns the edge.\n * Will remove the respective terminal reference from the edge.\n * \n * Parameters:\n * \n * edge - <mxCell> to be removed from the edge array.\n * isOutgoing - Boolean that specifies if the edge is outgoing.\n */\nmxCell.prototype.removeEdge = function(edge, isOutgoing)\n{\n\tif (edge != null)\n\t{\n\t\tif (edge.getTerminal(!isOutgoing) != this &&\n\t\t\tthis.edges != null)\n\t\t{\n\t\t\tvar index = this.getEdgeIndex(edge);\n\t\t\t\n\t\t\tif (index >= 0)\n\t\t\t{\n\t\t\t\tthis.edges.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\tedge.setTerminal(null, isOutgoing);\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: removeFromTerminal\n *\n * Removes the edge from its source or target terminal.\n * \n * Parameters:\n * \n * isSource - Boolean that specifies if the edge should be removed from its\n * source or target terminal.\n */\nmxCell.prototype.removeFromTerminal = function(isSource)\n{\n\tvar terminal = this.getTerminal(isSource);\n\t\n\tif (terminal != null)\n\t{\n\t\tterminal.removeEdge(this, isSource);\n\t}\n};\n\n/**\n * Function: hasAttribute\n * \n * Returns true if the user object is an XML node that contains the given\n * attribute.\n * \n * Parameters:\n * \n * name - Name of the attribute.\n */\nmxCell.prototype.hasAttribute = function(name)\n{\n\tvar userObject = this.getValue();\n\t\n\treturn (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT && userObject.hasAttribute) ?\n\t\tuserObject.hasAttribute(name) : userObject.getAttribute(name) != null;\n};\n\n/**\n * Function: getAttribute\n *\n * Returns the specified attribute from the user object if it is an XML\n * node.\n * \n * Parameters:\n * \n * name - Name of the attribute whose value should be returned.\n * defaultValue - Optional default value to use if the attribute has no\n * value.\n */\nmxCell.prototype.getAttribute = function(name, defaultValue)\n{\n\tvar userObject = this.getValue();\n\t\n\tvar val = (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT) ?\n\t\tuserObject.getAttribute(name) : null;\n\t\t\n\treturn val || defaultValue;\n};\n\n/**\n * Function: setAttribute\n *\n * Sets the specified attribute on the user object if it is an XML node.\n * \n * Parameters:\n * \n * name - Name of the attribute whose value should be set.\n * value - New value of the attribute.\n */\nmxCell.prototype.setAttribute = function(name, value)\n{\n\tvar userObject = this.getValue();\n\t\n\tif (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tuserObject.setAttribute(name, value);\n\t}\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of the cell. Uses <cloneValue> to clone\n * the user object. All fields in <mxTransient> are ignored\n * during the cloning.\n */\nmxCell.prototype.clone = function()\n{\n\tvar clone = mxUtils.clone(this, this.mxTransient);\n\tclone.setValue(this.cloneValue());\n\t\n\treturn clone;\n};\n\n/**\n * Function: cloneValue\n *\n * Returns a clone of the cell's user object.\n */\nmxCell.prototype.cloneValue = function()\n{\n\tvar value = this.getValue();\n\t\n\tif (value != null)\n\t{\n\t\tif (typeof(value.clone) == 'function')\n\t\t{\n\t\t\tvalue = value.clone();\n\t\t}\n\t\telse if (!isNaN(value.nodeType))\n\t\t{\n\t\t\tvalue = value.cloneNode(true);\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n__mxOutput.mxCell = typeof mxCell !== 'undefined' ? mxCell : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGeometry\n * \n * Extends <mxRectangle> to represent the geometry of a cell.\n * \n * For vertices, the geometry consists of the x- and y-location, and the width\n * and height. For edges, the geometry consists of the optional terminal- and\n * control points. The terminal points are only required if an edge is\n * unconnected, and are stored in the sourcePoint> and <targetPoint>\n * variables, respectively.\n * \n * Example:\n * \n * If an edge is unconnected, that is, it has no source or target terminal,\n * then a geometry with terminal points for a new edge can be defined as\n * follows.\n * \n * (code)\n * geometry.setTerminalPoint(new mxPoint(x1, y1), true);\n * geometry.points = [new mxPoint(x2, y2)];\n * geometry.setTerminalPoint(new mxPoint(x3, y3), false);\n * (end)\n * \n * Control points are used regardless of the connected state of an edge and may\n * be ignored or interpreted differently depending on the edge's <mxEdgeStyle>.\n * \n * To disable automatic reset of control points after a cell has been moved or\n * resized, the the <mxGraph.resizeEdgesOnMove> and\n * <mxGraph.resetEdgesOnResize> may be used.\n *\n * Edge Labels:\n * \n * Using the x- and y-coordinates of a cell's geometry, it is possible to\n * position the label on edges on a specific location on the actual edge shape\n * as it appears on the screen. The x-coordinate of an edge's geometry is used\n * to describe the distance from the center of the edge from -1 to 1 with 0\n * being the center of the edge and the default value. The y-coordinate of an\n * edge's geometry is used to describe the absolute, orthogonal distance in\n * pixels from that point. In addition, the <mxGeometry.offset> is used as an\n * absolute offset vector from the resulting point.\n * \n * This coordinate system is applied if <relative> is true, otherwise the\n * offset defines the absolute vector from the edge's center point to the\n * label and the values for <x> and <y> are ignored.\n * \n * The width and height parameter for edge geometries can be used to set the\n * label width and height (eg. for word wrapping).\n * \n * Ports:\n * \n * The term \"port\" refers to a relatively positioned, connectable child cell,\n * which is used to specify the connection between the parent and another cell\n * in the graph. Ports are typically modeled as vertices with relative\n * geometries.\n * \n * Offsets:\n * \n * The <offset> field is interpreted in 3 different ways, depending on the cell\n * and the geometry. For edges, the offset defines the absolute offset for the\n * edge label. For relative geometries, the offset defines the absolute offset\n * for the origin (top, left corner) of the vertex, otherwise the offset\n * defines the absolute offset for the label inside the vertex or group.\n * \n * Constructor: mxGeometry\n *\n * Constructs a new object to describe the size and location of a vertex or\n * the control points of an edge.\n */\nfunction mxGeometry(x, y, width, height)\n{\n\tmxRectangle.call(this, x, y, width, height);\n};\n\n/**\n * Extends mxRectangle.\n */\nmxGeometry.prototype = new mxRectangle();\nmxGeometry.prototype.constructor = mxGeometry;\n\n/**\n * Variable: TRANSLATE_CONTROL_POINTS\n * \n * Global switch to translate the points in translate. Default is true.\n */\nmxGeometry.prototype.TRANSLATE_CONTROL_POINTS = true;\n\n/**\n * Variable: alternateBounds\n *\n * Stores alternate values for x, y, width and height in a rectangle. See\n * <swap> to exchange the values. Default is null.\n */\nmxGeometry.prototype.alternateBounds = null;\n\n/**\n * Variable: sourcePoint\n *\n * Defines the source <mxPoint> of the edge. This is used if the\n * corresponding edge does not have a source vertex. Otherwise it is\n * ignored. Default is  null.\n */\nmxGeometry.prototype.sourcePoint = null;\n\n/**\n * Variable: targetPoint\n *\n * Defines the target <mxPoint> of the edge. This is used if the\n * corresponding edge does not have a target vertex. Otherwise it is\n * ignored. Default is null.\n */\nmxGeometry.prototype.targetPoint = null;\n\n/**\n * Variable: points\n *\n * Array of <mxPoints> which specifies the control points along the edge.\n * These points are the intermediate points on the edge, for the endpoints\n * use <targetPoint> and <sourcePoint> or set the terminals of the edge to\n * a non-null value. Default is null.\n */\nmxGeometry.prototype.points = null;\n\n/**\n * Variable: offset\n *\n * For edges, this holds the offset (in pixels) from the position defined\n * by <x> and <y> on the edge. For relative geometries (for vertices), this\n * defines the absolute offset from the point defined by the relative\n * coordinates. For absolute geometries (for vertices), this defines the\n * offset for the label. Default is null.\n */\nmxGeometry.prototype.offset = null;\n\n/**\n * Variable: relative\n *\n * Specifies if the coordinates in the geometry are to be interpreted as\n * relative coordinates. For edges, this is used to define the location of\n * the edge label relative to the edge as rendered on the display. For\n * vertices, this specifies the relative location inside the bounds of the\n * parent cell.\n * \n * If this is false, then the coordinates are relative to the origin of the\n * parent cell or, for edges, the edge label position is relative to the\n * center of the edge as rendered on screen.\n * \n * Default is false.\n */\nmxGeometry.prototype.relative = false;\n\n/**\n * Function: swap\n * \n * Swaps the x, y, width and height with the values stored in\n * <alternateBounds> and puts the previous values into <alternateBounds> as\n * a rectangle. This operation is carried-out in-place, that is, using the\n * existing geometry instance. If this operation is called during a graph\n * model transactional change, then the geometry should be cloned before\n * calling this method and setting the geometry of the cell using\n * <mxGraphModel.setGeometry>.\n */\nmxGeometry.prototype.swap = function()\n{\n\tif (this.alternateBounds != null)\n\t{\n\t\tvar old = new mxRectangle(\n\t\t\tthis.x, this.y, this.width, this.height);\n\n\t\tthis.x = this.alternateBounds.x;\n\t\tthis.y = this.alternateBounds.y;\n\t\tthis.width = this.alternateBounds.width;\n\t\tthis.height = this.alternateBounds.height;\n\n\t\tthis.alternateBounds = old;\n\t}\n};\n\n/**\n * Function: getTerminalPoint\n * \n * Returns the <mxPoint> representing the source or target point of this\n * edge. This is only used if the edge has no source or target vertex.\n * \n * Parameters:\n * \n * isSource - Boolean that specifies if the source or target point\n * should be returned.\n */\nmxGeometry.prototype.getTerminalPoint = function(isSource)\n{\n\treturn (isSource) ? this.sourcePoint : this.targetPoint;\n};\n\n/**\n * Function: setTerminalPoint\n * \n * Sets the <sourcePoint> or <targetPoint> to the given <mxPoint> and\n * returns the new point.\n * \n * Parameters:\n * \n * point - Point to be used as the new source or target point.\n * isSource - Boolean that specifies if the source or target point\n * should be set.\n */\nmxGeometry.prototype.setTerminalPoint = function(point, isSource)\n{\n\tif (isSource)\n\t{\n\t\tthis.sourcePoint = point;\n\t}\n\telse\n\t{\n\t\tthis.targetPoint = point;\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: rotate\n * \n * Rotates the geometry by the given angle around the given center. That is,\n * <x> and <y> of the geometry, the <sourcePoint>, <targetPoint> and all\n * <points> are translated by the given amount. <x> and <y> are only\n * translated if <relative> is false.\n * \n * Parameters:\n * \n * angle - Number that specifies the rotation angle in degrees.\n * cx - <mxPoint> that specifies the center of the rotation.\n */\nmxGeometry.prototype.rotate = function(angle, cx)\n{\n\tvar rad = mxUtils.toRadians(angle);\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(rad);\n\t\n\t// Rotates the geometry\n\tif (!this.relative)\n\t{\n\t\tvar ct = new mxPoint(this.getCenterX(), this.getCenterY());\n\t\tvar pt = mxUtils.getRotatedPoint(ct, cos, sin, cx);\n\t\t\n\t\tthis.x = Math.round(pt.x - this.width / 2);\n\t\tthis.y = Math.round(pt.y - this.height / 2);\n\t}\n\n\t// Rotates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tvar pt = mxUtils.getRotatedPoint(this.sourcePoint, cos, sin, cx);\n\t\tthis.sourcePoint.x = Math.round(pt.x);\n\t\tthis.sourcePoint.y = Math.round(pt.y);\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tvar pt = mxUtils.getRotatedPoint(this.targetPoint, cos, sin, cx);\n\t\tthis.targetPoint.x = Math.round(pt.x);\n\t\tthis.targetPoint.y = Math.round(pt.y);\t\n\t}\n\t\n\t// Translate the control points\n\tif (this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(this.points[i], cos, sin, cx);\n\t\t\t\tthis.points[i].x = Math.round(pt.x);\n\t\t\t\tthis.points[i].y = Math.round(pt.y);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: translate\n * \n * Translates the geometry by the specified amount. That is, <x> and <y> of the\n * geometry, the <sourcePoint>, <targetPoint> and all <points> are translated\n * by the given amount. <x> and <y> are only translated if <relative> is false.\n * If <TRANSLATE_CONTROL_POINTS> is false, then <points> are not modified by\n * this function.\n * \n * Parameters:\n * \n * dx - Number that specifies the x-coordinate of the translation.\n * dy - Number that specifies the y-coordinate of the translation.\n */\nmxGeometry.prototype.translate = function(dx, dy)\n{\n\tdx = parseFloat(dx);\n\tdy = parseFloat(dy);\n\t\n\t// Translates the geometry\n\tif (!this.relative)\n\t{\n\t\tthis.x = parseFloat(this.x) + dx;\n\t\tthis.y = parseFloat(this.y) + dy;\n\t}\n\n\t// Translates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tthis.sourcePoint.x = parseFloat(this.sourcePoint.x) + dx;\n\t\tthis.sourcePoint.y = parseFloat(this.sourcePoint.y) + dy;\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tthis.targetPoint.x = parseFloat(this.targetPoint.x) + dx;\n\t\tthis.targetPoint.y = parseFloat(this.targetPoint.y) + dy;\t\t\n\t}\n\n\t// Translate the control points\n\tif (this.TRANSLATE_CONTROL_POINTS && this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tthis.points[i].x = parseFloat(this.points[i].x) + dx;\n\t\t\t\tthis.points[i].y = parseFloat(this.points[i].y) + dy;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: scale\n * \n * Scales the geometry by the given amount. That is, <x> and <y> of the\n * geometry, the <sourcePoint>, <targetPoint> and all <points> are scaled\n * by the given amount. <x>, <y>, <width> and <height> are only scaled if\n * <relative> is false. If <fixedAspect> is true, then the smaller value\n * is used to scale the width and the height.\n * \n * Parameters:\n * \n * sx - Number that specifies the horizontal scale factor.\n * sy - Number that specifies the vertical scale factor.\n * fixedAspect - Optional boolean to keep the aspect ratio fixed.\n */\nmxGeometry.prototype.scale = function(sx, sy, fixedAspect)\n{\n\tsx = parseFloat(sx);\n\tsy = parseFloat(sy);\n\n\t// Translates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tthis.sourcePoint.x = parseFloat(this.sourcePoint.x) * sx;\n\t\tthis.sourcePoint.y = parseFloat(this.sourcePoint.y) * sy;\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tthis.targetPoint.x = parseFloat(this.targetPoint.x) * sx;\n\t\tthis.targetPoint.y = parseFloat(this.targetPoint.y) * sy;\t\t\n\t}\n\n\t// Translate the control points\n\tif (this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tthis.points[i].x = parseFloat(this.points[i].x) * sx;\n\t\t\t\tthis.points[i].y = parseFloat(this.points[i].y) * sy;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Translates the geometry\n\tif (!this.relative)\n\t{\n\t\tthis.x = parseFloat(this.x) * sx;\n\t\tthis.y = parseFloat(this.y) * sy;\n\n\t\tif (fixedAspect)\n\t\t{\n\t\t\tsy = sx = Math.min(sx, sy);\n\t\t}\n\t\t\n\t\tthis.width = parseFloat(this.width) * sx;\n\t\tthis.height = parseFloat(this.height) * sy;\n\t}\n};\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this geometry.\n */\nmxGeometry.prototype.equals = function(obj)\n{\n\treturn mxRectangle.prototype.equals.apply(this, arguments) &&\n\t\tthis.relative == obj.relative &&\n\t\t((this.sourcePoint == null && obj.sourcePoint == null) || (this.sourcePoint != null && this.sourcePoint.equals(obj.sourcePoint))) &&\n\t\t((this.targetPoint == null && obj.targetPoint == null) || (this.targetPoint != null && this.targetPoint.equals(obj.targetPoint))) &&\n\t\t((this.points == null && obj.points == null) || (this.points != null && mxUtils.equalPoints(this.points, obj.points))) &&\n\t\t((this.alternateBounds == null && obj.alternateBounds == null) || (this.alternateBounds != null && this.alternateBounds.equals(obj.alternateBounds))) &&\n\t\t((this.offset == null && obj.offset == null) || (this.offset != null && this.offset.equals(obj.offset)));\n};\n\n__mxOutput.mxGeometry = typeof mxGeometry !== 'undefined' ? mxGeometry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxCellPath =\n{\n\n\t/**\n\t * Class: mxCellPath\n\t * \n\t * Implements a mechanism for temporary cell Ids.\n\t * \n\t * Variable: PATH_SEPARATOR\n\t * \n\t * Defines the separator between the path components. Default is \".\".\n\t */\n\tPATH_SEPARATOR: '.',\n\t\n\t/**\n\t * Function: create\n\t * \n\t * Creates the cell path for the given cell. The cell path is a\n\t * concatenation of the indices of all ancestors on the (finite) path to\n\t * the root, eg. \"0.0.0.1\".\n\t * \n\t * Parameters:\n\t * \n\t * cell - Cell whose path should be returned.\n\t */\n\tcreate: function(cell)\n\t{\n\t\tvar result = '';\n\t\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tvar parent = cell.getParent();\n\t\t\t\n\t\t\twhile (parent != null)\n\t\t\t{\n\t\t\t\tvar index = parent.getIndex(cell);\n\t\t\t\tresult = index + mxCellPath.PATH_SEPARATOR + result;\n\t\t\t\t\n\t\t\t\tcell = parent;\n\t\t\t\tparent = cell.getParent();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes trailing separator\n\t\tvar n = result.length;\n\t\t\n\t\tif (n > 1)\n\t\t{\n\t\t\tresult = result.substring(0, n - 1);\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: getParentPath\n\t * \n\t * Returns the path for the parent of the cell represented by the given\n\t * path. Returns null if the given path has no parent.\n\t * \n\t * Parameters:\n\t * \n\t * path - Path whose parent path should be returned.\n\t */\n\tgetParentPath: function(path)\n\t{\n\t\tif (path != null)\n\t\t{\n\t\t\tvar index = path.lastIndexOf(mxCellPath.PATH_SEPARATOR);\n\n\t\t\tif (index >= 0)\n\t\t\t{\n\t\t\t\treturn path.substring(0, index);\n\t\t\t}\n\t\t\telse if (path.length > 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: resolve\n\t * \n\t * Returns the cell for the specified cell path using the given root as the\n\t * root of the path.\n\t * \n\t * Parameters:\n\t * \n\t * root - Root cell of the path to be resolved.\n\t * path - String that defines the path.\n\t */\n\tresolve: function(root, path)\n\t{\n\t\tvar parent = root;\n\t\t\n\t\tif (path != null)\n\t\t{\n\t\t\tvar tokens = path.split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\n\t\t\tfor (var i=0; i<tokens.length; i++)\n\t\t\t{\n\t\t\t\tparent = parent.getChildAt(parseInt(tokens[i]));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn parent;\n\t},\n\t\n\t/**\n\t * Function: compare\n\t * \n\t * Compares the given cell paths and returns -1 if p1 is smaller, 0 if\n\t * p1 is equal and 1 if p1 is greater than p2.\n\t */\n\tcompare: function(p1, p2)\n\t{\n\t\tvar min = Math.min(p1.length, p2.length);\n\t\tvar comp = 0;\n\t\t\n\t\tfor (var i = 0; i < min; i++)\n\t\t{\n\t\t\tif (p1[i] != p2[i])\n\t\t\t{\n\t\t\t\tif (p1[i].length == 0 ||\n\t\t\t\t\tp2[i].length == 0)\n\t\t\t\t{\n\t\t\t\t\tcomp = (p1[i] == p2[i]) ? 0 : ((p1[i] > p2[i]) ? 1 : -1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar t1 = parseInt(p1[i]);\n\t\t\t\t\tvar t2 = parseInt(p2[i]);\n\t\t\t\t\t\n\t\t\t\t\tcomp = (t1 == t2) ? 0 : ((t1 > t2) ? 1 : -1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Compares path length if both paths are equal to this point\n\t\tif (comp == 0)\n\t\t{\n\t\t\tvar t1 = p1.length;\n\t\t\tvar t2 = p2.length;\n\t\t\t\n\t\t\tif (t1 != t2)\n\t\t\t{\n\t\t\t\tcomp = (t1 > t2) ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn comp;\n\t}\n\n};\n\n__mxOutput.mxCellPath = typeof mxCellPath !== 'undefined' ? mxCellPath : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxPerimeter =\n{\n\t/**\n\t * Class: mxPerimeter\n\t * \n\t * Provides various perimeter functions to be used in a style\n\t * as the value of <mxConstants.STYLE_PERIMETER>. Perimeters for\n\t * rectangle, circle, rhombus and triangle are available.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * <add as=\"perimeter\">mxPerimeter.RectanglePerimeter</add>\n\t * (end)\n\t * \n\t * Or programmatically:\n\t * \n\t * (code)\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n\t * (end)\n\t * \n\t * When adding new perimeter functions, it is recommended to use the \n\t * mxPerimeter-namespace as follows:\n\t * \n\t * (code)\n\t * mxPerimeter.CustomPerimeter = function (bounds, vertex, next, orthogonal)\n\t * {\n\t *   var x = 0; // Calculate x-coordinate\n\t *   var y = 0; // Calculate y-coordainte\n\t *   \n\t *   return new mxPoint(x, y);\n\t * }\n\t * (end)\n\t * \n\t * The new perimeter should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('customPerimeter', mxPerimeter.CustomPerimeter);\n\t * (end)\n\t * \n\t * The custom perimeter above can now be used in a specific vertex as follows:\n\t * \n\t * (code)\n\t * model.setStyle(vertex, 'perimeter=customPerimeter');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxPerimeter.CustomPerimeter for the value in\n\t * the cell style above.\n\t * \n\t * Or it can be used for all vertices in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultVertexStyle();\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.CustomPerimeter;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * The parameters are explained in <RectanglePerimeter>.\n\t * \n\t * Function: RectanglePerimeter\n\t * \n\t * Describes a rectangular perimeter for the given bounds.\n\t *\n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the absolute bounds of the\n\t * vertex.\n\t * vertex - <mxCellState> that represents the vertex.\n\t * next - <mxPoint> that represents the nearest neighbour point on the\n\t * given edge.\n\t * orthogonal - Boolean that specifies if the orthogonal projection onto\n\t * the perimeter should be returned. If this is false then the intersection\n\t * of the perimeter and the line between the next and the center point is\n\t * returned.\n\t */\n\tRectanglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\t\tvar alpha = Math.atan2(dy, dx);\n\t\tvar p = new mxPoint(0, 0);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI/2;\n\t\tvar beta = pi2 - alpha;\n\t\tvar t = Math.atan2(bounds.height, bounds.width);\n\t\t\n\t\tif (alpha < -pi + t || alpha > pi - t)\n\t\t{\n\t\t\t// Left edge\n\t\t\tp.x = bounds.x;\n\t\t\tp.y = cy - bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse if (alpha < -t)\n\t\t{\n\t\t\t// Top Edge\n\t\t\tp.y = bounds.y;\n\t\t\tp.x = cx - bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\telse if (alpha < t)\n\t\t{\n\t\t\t// Right Edge\n\t\t\tp.x = bounds.x + bounds.width;\n\t\t\tp.y = cy + bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Bottom Edge\n\t\t\tp.y = bounds.y + bounds.height;\n\t\t\tp.x = cx + bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (next.x >= bounds.x &&\n\t\t\t\tnext.x <= bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = next.x;\n\t\t\t}\n\t\t\telse if (next.y >= bounds.y &&\n\t\t\t\t\t   next.y <= bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = next.y;\n\t\t\t}\n\t\t\tif (next.x < bounds.x)\n\t\t\t{\n\t\t\t\tp.x = bounds.x;\n\t\t\t}\n\t\t\telse if (next.x > bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = bounds.x + bounds.width;\n\t\t\t}\n\t\t\tif (next.y < bounds.y)\n\t\t\t{\n\t\t\t\tp.y = bounds.y;\n\t\t\t}\n\t\t\telse if (next.y > bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = bounds.y + bounds.height;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: EllipsePerimeter\n\t * \n\t * Describes an elliptic perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tEllipsePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar a = bounds.width / 2;\n\t\tvar b = bounds.height / 2;\n\t\tvar cx = x + a;\n\t\tvar cy = y + b;\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\t\n\t\t// Calculates straight line equation through\n\t\t// point and ellipse center y = d * x + h\n\t\tvar dx = parseInt(px - cx);\n\t\tvar dy = parseInt(py - cy);\n\t\t\n\t\tif (dx == 0 && dy != 0)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy + b * dy / Math.abs(dy));\n\t\t}\n\t\telse if (dx == 0 && dy == 0)\n\t\t{\n\t\t\treturn new mxPoint(px, py);\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (py >= y && py <= y + bounds.height)\n\t\t\t{\n\t\t\t\tvar ty = py - cy;\n\t\t\t\tvar tx = Math.sqrt(a*a*(1-(ty*ty)/(b*b))) || 0;\n\t\t\t\t\n\t\t\t\tif (px <= x)\n\t\t\t\t{\n\t\t\t\t\ttx = -tx;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(cx+tx, py);\n\t\t\t}\n\t\t\t\n\t\t\tif (px >= x && px <= x + bounds.width)\n\t\t\t{\n\t\t\t\tvar tx = px - cx;\n\t\t\t\tvar ty = Math.sqrt(b*b*(1-(tx*tx)/(a*a))) || 0;\n\t\t\t\t\n\t\t\t\tif (py <= y)\n\t\t\t\t{\n\t\t\t\t\tty = -ty;\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(px, cy+ty);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Calculates intersection\n\t\tvar d = dy / dx;\n\t\tvar h = cy - d * cx;\n\t\tvar e = a * a * d * d + b * b;\n\t\tvar f = -2 * cx * e;\n\t\tvar g = a * a * d * d * cx * cx +\n\t\t\t\tb * b * cx * cx -\n\t\t\t\ta * a * b * b;\n\t\tvar det = Math.sqrt(f * f - 4 * e * g);\n\t\t\n\t\t// Two solutions (perimeter points)\n\t\tvar xout1 = (-f + det) / (2 * e);\n\t\tvar xout2 = (-f - det) / (2 * e);\n\t\tvar yout1 = d * xout1 + h;\n\t\tvar yout2 = d * xout2 + h;\n\t\tvar dist1 = Math.sqrt(Math.pow((xout1 - px), 2)\n\t\t\t\t\t+ Math.pow((yout1 - py), 2));\n\t\tvar dist2 = Math.sqrt(Math.pow((xout2 - px), 2)\n\t\t\t\t\t+ Math.pow((yout2 - py), 2));\n\t\t\t\t\t\n\t\t// Correct solution\n\t\tvar xout = 0;\n\t\tvar yout = 0;\n\t\t\n\t\tif (dist1 < dist2)\n\t\t{\n\t\t\txout = xout1;\n\t\t\tyout = yout1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\txout = xout2;\n\t\t\tyout = yout2;\n\t\t}\n\t\t\n\t\treturn new mxPoint(xout, yout);\n\t},\n\n\t/**\n\t * Function: RhombusPerimeter\n\t * \n\t * Describes a rhombus (aka diamond) perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tRhombusPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\n\t\t// Special case for intersecting the diamond's corners\n\t\tif (cx == px)\n\t\t{\n\t\t\tif (cy > py)\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y); // top\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y + h); // bottom\n\t\t\t}\n\t\t}\n\t\telse if (cy == py)\n\t\t{\n\t\t\tif (cx > px)\n\t\t\t{\n\t\t\t\treturn new mxPoint(x, cy); // left\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(x + w, cy); // right\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar tx = cx;\n\t\tvar ty = cy;\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// In which quadrant will the intersection be?\n\t\t// set the slope and offset of the border line accordingly\n\t\tif (px < cx)\n\t\t{\n\t\t\tif (py < cy)\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x, cy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x, cy);\n\t\t\t}\n\t\t}\n\t\telse if (py < cy)\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x + w, cy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x + w, cy);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: TrianglePerimeter\n\t * \n\t * Describes a triangle perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tTrianglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar direction = (vertex != null) ?\n\t\t\tvertex.style[mxConstants.STYLE_DIRECTION] : null;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_SOUTH;\n\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\t\t\n\t\tvar start = new mxPoint(x, y);\n\t\tvar corner = new mxPoint(x + w, cy);\n\t\tvar end = new mxPoint(x, y + h);\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tstart = end;\n\t\t\tcorner = new mxPoint(cx, y);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tcorner = new mxPoint(cx, y + h);\n\t\t\tend = new mxPoint(x + w, y);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tstart = new mxPoint(x + w, y);\n\t\t\tcorner = new mxPoint(x, cy);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\n\t\tvar alpha = (vertical) ? Math.atan2(dx, dy) : Math.atan2(dy, dx);\n\t\tvar t = (vertical) ? Math.atan2(w, h) : Math.atan2(h, w);\n\t\t\n\t\tvar base = false;\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tbase = alpha > -t && alpha < t;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbase = alpha < -Math.PI + t || alpha > Math.PI - t;\t\n\t\t}\n\n\t\tvar result = null;\t\t\t\n\n\t\tif (base)\n\t\t{\n\t\t\tif (orthogonal && ((vertical && next.x >= start.x && next.x <= end.x) ||\n\t\t\t\t(!vertical && next.y >= start.y && next.y <= end.y)))\n\t\t\t{\n\t\t\t\tif (vertical)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(next.x, start.y);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(start.x, next.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 + h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty + h);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 - h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w, y + h / 2 +\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x, y + h / 2 -\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (orthogonal)\n\t\t\t{\n\t\t\t\tvar pt = new mxPoint(cx, cy);\n\t\t\n\t\t\t\tif (next.y >= y && next.y <= y + h)\n\t\t\t\t{\n\t\t\t\t\tpt.x = (vertical) ? cx : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_WEST) ?\n\t\t\t\t\t\t\tx + w : x);\n\t\t\t\t\tpt.y = next.y;\n\t\t\t\t}\n\t\t\t\telse if (next.x >= x && next.x <= x + w)\n\t\t\t\t{\n\t\t\t\t\tpt.x = next.x;\n\t\t\t\t\tpt.y = (!vertical) ? cy : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_NORTH) ?\n\t\t\t\t\t\t\ty + h : y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Compute angle\n\t\t\t\tdx = next.x - pt.x;\n\t\t\t\tdy = next.y - pt.y;\n\t\t\t\t\n\t\t\t\tcx = pt.x;\n\t\t\t\tcy = pt.y;\n\t\t\t}\n\n\t\t\tif ((vertical && next.x <= x + w / 2) ||\n\t\t\t\t(!vertical && next.y <= y + h / 2))\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tstart.x, start.y, corner.x, corner.y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tcorner.x, corner.y, end.x, end.y);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\tresult = new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: HexagonPerimeter\n\t * \n\t * Describes a hexagon perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tHexagonPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\tvar dx = px - cx;\n\t\tvar dy = py - cy;\n\t\tvar alpha = -Math.atan2(dy, dx);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI / 2;\n\n\t\tvar result = new mxPoint(cx, cy);\n\n\t\tvar direction = (vertex != null) ? mxUtils.getValue(\n\t\t\t\tvertex.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_EAST) : mxConstants.DIRECTION_EAST;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH\n\t\t\t\t|| direction == mxConstants.DIRECTION_SOUTH;\n\t\tvar a = new mxPoint();\n\t\tvar b = new mxPoint();\n\n\t\t//Only consider corrects quadrants for the orthogonal case.\n\t\tif ((px < x) && (py < y) || (px < x) && (py > y + h)\n\t\t\t\t|| (px > x + w) && (py < y) || (px > x + w) && (py > y + h))\n\t\t{\n\t\t\torthogonal = false;\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (px == cx)\n\t\t\t\t{\n\t\t\t\t\tif (py <= y)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py >= y + h)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px < x)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (py == y)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t}\n\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (py == cy)\n\t\t\t\t{\n\t\t\t\t\tif (px <= x)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px >= x + w)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py < y)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (px == x)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, cy);\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, cy);\n\t\t\t\t}\n\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar tx = cx;\n\t\t\tvar ty = cy;\n\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t\t\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tty = y + h;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tty = y;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t\t\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\ttx = x + w;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttx = x;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(tx, ty, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 4, w / 2);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == pi2)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi2))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\n\t\t\t\tif ((alpha < beta) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha > pi2) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (((alpha > (pi - beta)) && (alpha <= pi))\n\t\t\t\t\t\t|| ((alpha < (-pi + beta)) && (alpha >= -pi)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > -pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -pi2) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 2, w / 4);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha == pi) || (alpha == -pi))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == 0)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y + h);\n\t\t\t\t}\n\n\t\t\t\tif ((alpha > 0) && (alpha < beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > (pi - beta)) && (alpha < pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < 0) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < (-pi + beta)) && (alpha > -pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(cx, cy, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n__mxOutput.mxPerimeter = typeof mxPerimeter !== 'undefined' ? mxPerimeter : undefined;\n\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxPrintPreview\n * \n * Implements printing of a diagram across multiple pages. The following opens\n * a print preview for an existing graph:\n * \n * (code)\n * var preview = new mxPrintPreview(graph);\n * preview.open();\n * (end)\n * \n * Use <mxUtils.getScaleForPageCount> as follows in order to print the graph\n * across a given number of pages:\n * \n * (code)\n * var pageCount = mxUtils.prompt('Enter page count', '1');\n * \n * if (pageCount != null)\n * {\n *   var scale = mxUtils.getScaleForPageCount(pageCount, graph);\n *   var preview = new mxPrintPreview(graph, scale);\n *   preview.open();\n * }\n * (end)\n * \n * Additional pages:\n * \n * To add additional pages before and after the output, <getCoverPages> and\n * <getAppendices> can be used, respectively.\n * \n * (code)\n * var preview = new mxPrintPreview(graph, 1);\n * \n * preview.getCoverPages = function(w, h)\n * {\n *   return [this.renderPage(w, h, 0, 0, mxUtils.bind(this, function(div)\n *   {\n *     div.innerHTML = '<div style=\"position:relative;margin:4px;\">Cover Page</p>'\n *   }))];\n * };\n * \n * preview.getAppendices = function(w, h)\n * {\n *   return [this.renderPage(w, h, 0, 0, mxUtils.bind(this, function(div)\n *   {\n *     div.innerHTML = '<div style=\"position:relative;margin:4px;\">Appendix</p>'\n *   }))];\n * };\n * \n * preview.open();\n * (end)\n * \n * CSS:\n * \n * The CSS from the original page is not carried over to the print preview.\n * To add CSS to the page, use the css argument in the <open> function or\n * override <writeHead> to add the respective link tags as follows:\n * \n * (code)\n * var writeHead = preview.writeHead;\n * preview.writeHead = function(doc, css)\n * {\n *   writeHead.apply(this, arguments);\n *   doc.writeln('<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">');\n * };\n * (end)\n * \n * Padding:\n * \n * To add a padding to the page in the preview (but not the print output), use\n * the following code:\n * \n * (code)\n * preview.writeHead = function(doc)\n * {\n *   writeHead.apply(this, arguments);\n *   \n *   doc.writeln('<style type=\"text/css\">');\n *   doc.writeln('@media screen {');\n *   doc.writeln('  body > div { padding-top:30px;padding-left:40px;box-sizing:content-box; }');\n *   doc.writeln('}');\n *   doc.writeln('</style>');\n * };\n * (end)\n * \n * Headers:\n * \n * Apart from setting the title argument in the mxPrintPreview constructor you\n * can override <renderPage> as follows to add a header to any page:\n * \n * (code)\n * var oldRenderPage = mxPrintPreview.prototype.renderPage;\n * mxPrintPreview.prototype.renderPage = function(w, h, x, y, content, pageNumber)\n * {\n *   var div = oldRenderPage.apply(this, arguments);\n *   \n *   var header = document.createElement('div');\n *   header.style.position = 'absolute';\n *   header.style.top = '0px';\n *   header.style.width = '100%';\n *   header.style.textAlign = 'right';\n *   mxUtils.write(header, 'Your header here');\n *   div.firstChild.appendChild(header);\n *   \n *   return div;\n * };\n * (end)\n * \n * The pageNumber argument contains the number of the current page, starting at\n * 1. To display a header on the first page only, check pageNumber and add a\n * vertical offset in the constructor call for the height of the header.\n * \n * Page Format:\n * \n * For landscape printing, use <mxConstants.PAGE_FORMAT_A4_LANDSCAPE> as\n * the pageFormat in <mxUtils.getScaleForPageCount> and <mxPrintPreview>.\n * Keep in mind that one can not set the defaults for the print dialog\n * of the operating system from JavaScript so the user must manually choose\n * a page format that matches this setting.\n * \n * You can try passing the following CSS directive to <open> to set the\n * page format in the print dialog to landscape. However, this CSS\n * directive seems to be ignored in most major browsers, including IE.\n * \n * (code)\n * @page {\n *   size: landscape;\n * }\n * (end)\n * \n * Note that the print preview behaves differently in IE when used from the\n * filesystem or via HTTP so printing should always be tested via HTTP.\n * \n * If you are using a DOCTYPE in the source page you can override <getDoctype>\n * and provide the same DOCTYPE for the print preview if required. Here is\n * an example for IE8 standards mode.\n * \n * (code)\n * var preview = new mxPrintPreview(graph);\n * preview.getDoctype = function()\n * {\n *   return '<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=5,IE=8\" ><![endif]-->';\n * };\n * preview.open();\n * (end)\n * \n * Constructor: mxPrintPreview\n *\n * Constructs a new print preview for the given parameters.\n * \n * Parameters:\n * \n * graph - <mxGraph> to be previewed.\n * scale - Optional scale of the output. Default is 1 / <mxGraph.pageScale>.\n * border - Border in pixels along each side of every page. Note that the\n * actual print function in the browser will add another border for\n * printing.\n * pageFormat - <mxRectangle> that specifies the page format (in pixels).\n * This should match the page format of the printer. Default uses the\n * <mxGraph.pageFormat> of the given graph.\n * x0 - Optional left offset of the output. Default is 0.\n * y0 - Optional top offset of the output. Default is 0.\n * borderColor - Optional color of the page border. Default is no border.\n * Note that a border is sometimes useful to highlight the printed page\n * border in the print preview of the browser.\n * title - Optional string that is used for the window title. Default\n * is 'Printer-friendly version'.\n * pageSelector - Optional boolean that specifies if the page selector\n * should appear in the window with the print preview. Default is true.\n */\nfunction mxPrintPreview(graph, scale, pageFormat, border, x0, y0, borderColor, title, pageSelector)\n{\n\tthis.graph = graph;\n\tthis.scale = (scale != null) ? scale : 1 / graph.pageScale;\n\tthis.border = (border != null) ? border : 0;\n\tthis.pageFormat = mxRectangle.fromRectangle((pageFormat != null) ? pageFormat : graph.pageFormat);\n\tthis.title = (title != null) ? title : 'Printer-friendly version';\n\tthis.x0 = (x0 != null) ? x0 : 0;\n\tthis.y0 = (y0 != null) ? y0 : 0;\n\tthis.borderColor = borderColor;\n\tthis.pageSelector = (pageSelector != null) ? pageSelector : true;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the <mxGraph> that should be previewed.\n */\nmxPrintPreview.prototype.graph = null;\n\n/**\n * Variable: pageFormat\n *\n * Holds the <mxRectangle> that defines the page format.\n */\nmxPrintPreview.prototype.pageFormat = null;\n\n/**\n * Variable: scale\n * \n * Holds the scale of the print preview.\n */\nmxPrintPreview.prototype.scale = null;\n\n/**\n * Variable: border\n * \n * The border inset around each side of every page in the preview. This is set\n * to 0 if autoOrigin is false.\n */\nmxPrintPreview.prototype.border = 0;\n\n/**\n * Variable: marginTop\n * \n * The margin at the top of the page (number). Default is 0.\n */\nmxPrintPreview.prototype.marginTop = 0;\n\n/**\n * Variable: marginBottom\n * \n * The margin at the bottom of the page (number). Default is 0.\n */\nmxPrintPreview.prototype.marginBottom = 0;\n\n/**\n * Variable: x0\n * \n * Holds the horizontal offset of the output.\n */\nmxPrintPreview.prototype.x0 = 0;\n\n/**\n * Variable: y0\n *\n * Holds the vertical offset of the output.\n */\nmxPrintPreview.prototype.y0 = 0;\n\n/**\n * Variable: autoOrigin\n * \n * Specifies if the origin should be automatically computed based on the top,\n * left corner of the actual diagram contents. The required offset will be added\n * to <x0> and <y0> in <open>. Default is true.\n */\nmxPrintPreview.prototype.autoOrigin = true;\n\n/**\n * Variable: printOverlays\n * \n * Specifies if overlays should be printed. Default is false.\n */\nmxPrintPreview.prototype.printOverlays = false;\n\n/**\n * Variable: printControls\n * \n * Specifies if controls (such as folding icons) should be printed. Default is\n * false.\n */\nmxPrintPreview.prototype.printControls = false;\n\n/**\n * Variable: printBackgroundImage\n * \n * Specifies if the background image should be printed. Default is false.\n */\nmxPrintPreview.prototype.printBackgroundImage = false;\n\n/**\n * Variable: backgroundColor\n * \n * Holds the color value for the page background color. Default is #ffffff.\n */\nmxPrintPreview.prototype.backgroundColor = '#ffffff';\n\n/**\n * Variable: borderColor\n * \n * Holds the color value for the page border.\n */\nmxPrintPreview.prototype.borderColor = null;\n\n/**\n * Variable: title\n * \n * Holds the title of the preview window.\n */\nmxPrintPreview.prototype.title = null;\n\n/**\n * Variable: pageSelector\n * \n * Boolean that specifies if the page selector should be\n * displayed. Default is true.\n */\nmxPrintPreview.prototype.pageSelector = null;\n\n/**\n * Variable: wnd\n * \n * Reference to the preview window.\n */\nmxPrintPreview.prototype.wnd = null;\n\n/**\n * Variable: targetWindow\n * \n * Assign any window here to redirect the rendering in <open>.\n */\nmxPrintPreview.prototype.targetWindow = null;\n\n/**\n * Variable: pageCount\n * \n * Holds the actual number of pages in the preview.\n */\nmxPrintPreview.prototype.pageCount = 0;\n\n/**\n * Variable: clipping\n * \n * Specifies is clipping should be used to avoid creating too many cell states\n * in large diagrams. The bounding box of the cells in the original diagram is\n * used if this is enabled. Default is true.\n */\nmxPrintPreview.prototype.clipping = true;\n\n/**\n * Function: getWindow\n * \n * Returns <wnd>.\n */\nmxPrintPreview.prototype.getWindow = function()\n{\n\treturn this.wnd;\n};\n\n/**\n * Function: getDocType\n * \n * Returns the string that should go before the HTML tag in the print preview\n * page. This implementation returns an X-UA meta tag for IE5 in quirks mode,\n * IE8 in IE8 standards mode and edge in IE9 standards mode.\n */\nmxPrintPreview.prototype.getDoctype = function()\n{\n\tvar dt = '';\n\t\n\tif (document.documentMode == 5)\n\t{\n\t\tdt = '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=5\">';\n\t}\n\telse if (document.documentMode == 8)\n\t{\n\t\tdt = '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\">';\n\t}\n\telse if (document.documentMode > 8)\n\t{\n\t\t// Comment needed to make standards doctype apply in IE\n\t\tdt = '<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><![endif]-->';\n\t}\n\t\n\treturn dt;\n};\n\n/**\n * Function: appendGraph\n * \n * Adds the given graph to the existing print preview.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n * targetWindow - Optional window that should be used for rendering. If\n * this is specified then no HEAD tag, CSS and BODY tag will be written.\n */\nmxPrintPreview.prototype.appendGraph = function(graph, scale, x0, y0, forcePageBreaks, keepOpen)\n{\n\tthis.graph = graph;\n\tthis.scale = (scale != null) ? scale : 1 / graph.pageScale;\n\tthis.x0 = x0;\n\tthis.y0 = y0;\n\tthis.open(null, null, forcePageBreaks, keepOpen);\n};\n\n/**\n * Function: open\n * \n * Shows the print preview window. The window is created here if it does\n * not exist.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n * targetWindow - Optional window that should be used for rendering. If\n * this is specified then no HEAD tag, CSS and BODY tag will be written.\n */\nmxPrintPreview.prototype.open = function(css, targetWindow, forcePageBreaks, keepOpen)\n{\n\t// Closing the window while the page is being rendered may cause an\n\t// exception in IE. This and any other exceptions are simply ignored.\n\tvar previousInitializeOverlay = this.graph.cellRenderer.initializeOverlay;\n\tvar div = null;\n\t\n\ttry\n\t{\n\t\t// Temporarily overrides the method to redirect rendering of overlays\n\t\t// to the draw pane so that they are visible in the printout\n\t\tif (this.printOverlays)\n\t\t{\n\t\t\tthis.graph.cellRenderer.initializeOverlay = function(state, overlay)\n\t\t\t{\n\t\t\t\toverlay.init(state.view.getDrawPane());\n\t\t\t};\n\t\t}\n\t\t\n\t\tif (this.printControls)\n\t\t{\n\t\t\tthis.graph.cellRenderer.initControl = function(state, control, handleEvents, clickHandler)\n\t\t\t{\n\t\t\t\tcontrol.dialect = state.view.graph.dialect;\n\t\t\t\tcontrol.init(state.view.getDrawPane());\n\t\t\t};\n\t\t}\n\t\t\n\t\tthis.wnd = (targetWindow != null) ? targetWindow : this.wnd;\n\t\tvar isNewWindow = false;\n\t\t\n\t\tif (this.wnd == null)\n\t\t{\n\t\t\tisNewWindow = true;\n\t\t\tthis.wnd = window.open();\n\t\t}\n\t\t\n\t\tvar doc = this.wnd.document;\n\t\t\n\t\tif (isNewWindow)\n\t\t{\n\t\t\tvar dt = this.getDoctype();\n\t\t\t\n\t\t\tif (dt != null && dt.length > 0)\n\t\t\t{\n\t\t\t\tdoc.writeln(dt);\n\t\t\t}\n\t\t\t\n\t\t\tif (mxClient.IS_VML)\n\t\t\t{\n\t\t\t\tdoc.writeln('<html xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (document.compatMode === 'CSS1Compat')\n\t\t\t\t{\n\t\t\t\t\tdoc.writeln('<!DOCTYPE html>');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdoc.writeln('<html>');\n\t\t\t}\n\t\t\t\n\t\t\tdoc.writeln('<head>');\n\t\t\tthis.writeHead(doc, css);\n\t\t\tdoc.writeln('</head>');\n\t\t\tdoc.writeln('<body class=\"mxPage\">');\n\t\t}\n\n\t\t// Computes the horizontal and vertical page count\n\t\tvar bounds = this.graph.getGraphBounds().clone();\n\t\tvar currentScale = this.graph.getView().getScale();\n\t\tvar sc = currentScale / this.scale;\n\t\tvar tr = this.graph.getView().getTranslate();\n\t\t\n\t\t// Uses the absolute origin with no offset for all printing\n\t\tif (!this.autoOrigin)\n\t\t{\n\t\t\tthis.x0 -= tr.x * this.scale;\n\t\t\tthis.y0 -= tr.y * this.scale;\n\t\t\tbounds.width += bounds.x;\n\t\t\tbounds.height += bounds.y;\n\t\t\tbounds.x = 0;\n\t\t\tbounds.y = 0;\n\t\t\tthis.border = 0;\n\t\t}\n\t\t\n\t\t// Store the available page area\n\t\tvar availableWidth = this.pageFormat.width - (this.border * 2);\n\t\tvar availableHeight = this.pageFormat.height - (this.border * 2);\n\t\n\t\t// Adds margins to page format\n\t\tthis.pageFormat.height += this.marginTop + this.marginBottom;\n\n\t\t// Compute the unscaled, untranslated bounds to find\n\t\t// the number of vertical and horizontal pages\n\t\tbounds.width /= sc;\n\t\tbounds.height /= sc;\n\n\t\tvar hpages = Math.max(1, Math.ceil((bounds.width + this.x0) / availableWidth));\n\t\tvar vpages = Math.max(1, Math.ceil((bounds.height + this.y0) / availableHeight));\n\t\tthis.pageCount = hpages * vpages;\n\t\t\n\t\tvar writePageSelector = mxUtils.bind(this, function()\n\t\t{\n\t\t\tif (this.pageSelector && (vpages > 1 || hpages > 1))\n\t\t\t{\n\t\t\t\tvar table = this.createPageSelector(vpages, hpages);\n\t\t\t\tdoc.body.appendChild(table);\n\t\t\t\t\n\t\t\t\t// Implements position: fixed in IE quirks mode\n\t\t\t\tif (mxClient.IS_IE && doc.documentMode == null || doc.documentMode == 5 || doc.documentMode == 8 || doc.documentMode == 7)\n\t\t\t\t{\n\t\t\t\t\ttable.style.position = 'absolute';\n\t\t\t\t\t\n\t\t\t\t\tvar update = function()\n\t\t\t\t\t{\n\t\t\t\t\t\ttable.style.top = ((doc.body.scrollTop || doc.documentElement.scrollTop) + 10) + 'px';\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.addListener(this.wnd, 'scroll', function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.addListener(this.wnd, 'resize', function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tvar addPage = mxUtils.bind(this, function(div, addBreak)\n\t\t{\n\t\t\t// Border of the DIV (aka page) inside the document\n\t\t\tif (this.borderColor != null)\n\t\t\t{\n\t\t\t\tdiv.style.borderColor = this.borderColor;\n\t\t\t\tdiv.style.borderStyle = 'solid';\n\t\t\t\tdiv.style.borderWidth = '1px';\n\t\t\t}\n\t\t\t\n\t\t\t// Needs to be assigned directly because IE doesn't support\n\t\t\t// child selectors, eg. body > div { background: white; }\n\t\t\tdiv.style.background = this.backgroundColor;\n\t\t\t\n\t\t\tif (forcePageBreaks || addBreak)\n\t\t\t{\n\t\t\t\tdiv.style.pageBreakAfter = 'always';\n\t\t\t}\n\n\t\t\t// NOTE: We are dealing with cross-window DOM here, which\n\t\t\t// is a problem in IE, so we copy the HTML markup instead.\n\t\t\t// The underlying problem is that the graph display markup\n\t\t\t// creation (in mxShape, mxGraphView) is hardwired to using\n\t\t\t// document.createElement and hence we must use this document\n\t\t\t// to create the complete page and then copy it over to the\n\t\t\t// new window.document. This can be fixed later by using the\n\t\t\t// ownerDocument of the container in mxShape and mxGraphView.\n\t\t\tif (isNewWindow && (mxClient.IS_IE || document.documentMode >= 11 || mxClient.IS_EDGE))\n\t\t\t{\n\t\t\t\t// For some obscure reason, removing the DIV from the\n\t\t\t\t// parent before fetching its outerHTML has missing\n\t\t\t\t// fillcolor properties and fill children, so the div\n\t\t\t\t// must be removed afterwards to keep the fillcolors.\n\t\t\t\tdoc.writeln(div.outerHTML);\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t}\n\t\t\telse if (mxClient.IS_IE || document.documentMode >= 11 || mxClient.IS_EDGE)\n\t\t\t{\n\t\t\t\tvar clone = doc.createElement('div');\n\t\t\t\tclone.innerHTML = div.outerHTML;\n\t\t\t\tclone = clone.getElementsByTagName('div')[0];\n\t\t\t\tdoc.body.appendChild(clone);\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t}\n\n\t\t\tif (forcePageBreaks || addBreak)\n\t\t\t{\n\t\t\t\tthis.addPageBreak(doc);\n\t\t\t}\n\t\t});\n\t\t\n\t\tvar cov = this.getCoverPages(this.pageFormat.width, this.pageFormat.height);\n\t\t\n\t\tif (cov != null)\n\t\t{\n\t\t\tfor (var i = 0; i < cov.length; i++)\n\t\t\t{\n\t\t\t\taddPage(cov[i], true);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar apx = this.getAppendices(this.pageFormat.width, this.pageFormat.height);\n\t\t\n\t\t// Appends each page to the page output for printing, making\n\t\t// sure there will be a page break after each page (ie. div)\n\t\tfor (var i = 0; i < vpages; i++)\n\t\t{\n\t\t\tvar dy = i * availableHeight / this.scale - this.y0 / this.scale +\n\t\t\t\t\t(bounds.y - tr.y * currentScale) / currentScale;\n\t\t\t\n\t\t\tfor (var j = 0; j < hpages; j++)\n\t\t\t{\n\t\t\t\tif (this.wnd == null)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dx = j * availableWidth / this.scale - this.x0 / this.scale +\n\t\t\t\t\t\t(bounds.x - tr.x * currentScale) / currentScale;\n\t\t\t\tvar pageNum = i * hpages + j + 1;\n\t\t\t\tvar clip = new mxRectangle(dx, dy, availableWidth, availableHeight);\n\t\t\t\tdiv = this.renderPage(this.pageFormat.width, this.pageFormat.height, 0, 0, mxUtils.bind(this, function(div)\n\t\t\t\t{\n\t\t\t\t\tthis.addGraphFragment(-dx, -dy, this.scale, pageNum, div, clip);\n\t\t\t\t\t\n\t\t\t\t\tif (this.printBackgroundImage)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.insertBackgroundImage(div, -dx, -dy);\n\t\t\t\t\t}\n\t\t\t\t}), pageNum);\n\n\t\t\t\t// Gives the page a unique ID for later accessing the page\n\t\t\t\tdiv.setAttribute('id', 'mxPage-'+pageNum);\n\n\t\t\t\taddPage(div, apx != null || i < vpages - 1 || j < hpages - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (apx != null)\n\t\t{\n\t\t\tfor (var i = 0; i < apx.length; i++)\n\t\t\t{\n\t\t\t\taddPage(apx[i], i < apx.length - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (isNewWindow && !keepOpen)\n\t\t{\n\t\t\tthis.closeDocument();\n\t\t\twritePageSelector();\n\t\t}\n\t\t\n\t\tthis.wnd.focus();\n\t}\n\tcatch (e)\n\t{\n\t\t// Removes the DIV from the document in case of an error\n\t\tif (div != null && div.parentNode != null)\n\t\t{\n\t\t\tdiv.parentNode.removeChild(div);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.graph.cellRenderer.initializeOverlay = previousInitializeOverlay;\n\t}\n\n\treturn this.wnd;\n};\n\n/**\n * Function: addPageBreak\n * \n * Adds a page break to the given document.\n */\nmxPrintPreview.prototype.addPageBreak = function(doc)\n{\n\tvar hr = doc.createElement('hr');\n\thr.className = 'mxPageBreak';\n\tdoc.body.appendChild(hr);\n};\n\n/**\n * Function: closeDocument\n * \n * Writes the closing tags for body and page after calling <writePostfix>.\n */\nmxPrintPreview.prototype.closeDocument = function()\n{\n\ttry\n\t{\n\t\tif (this.wnd != null && this.wnd.document != null)\n\t\t{\n\t\t\tvar doc = this.wnd.document;\n\t\t\t\n\t\t\tthis.writePostfix(doc);\n\t\t\tdoc.writeln('</body>');\n\t\t\tdoc.writeln('</html>');\n\t\t\tdoc.close();\n\t\t\t\n\t\t\t// Removes all event handlers in the print output\n\t\t\tmxEvent.release(doc.body);\n\t\t}\n\t}\n\tcatch (e)\n\t{\n\t\t// ignore any errors resulting from wnd no longer being available\n\t}\n};\n\n/**\n * Function: writeHead\n * \n * Writes the HEAD section into the given document, without the opening\n * and closing HEAD tags.\n */\nmxPrintPreview.prototype.writeHead = function(doc, css)\n{\n\tif (this.title != null)\n\t{\n\t\tdoc.writeln('<title>' + this.title + '</title>');\n\t}\n\t\n\t// Adds required namespaces\n\tif (mxClient.IS_VML)\n\t{\n\t\tdoc.writeln('<style type=\"text/css\">v\\\\:*{behavior:url(#default#VML)}o\\\\:*{behavior:url(#default#VML)}</style>');\n\t}\n\n\t// Adds all required stylesheets\n\tmxClient.link('stylesheet', mxClient.basePath + '/css/common.css', doc);\n\n\t// Removes horizontal rules and page selector from print output\n\tdoc.writeln('<style type=\"text/css\">');\n\tdoc.writeln('@media print {');\n\tdoc.writeln('  * { -webkit-print-color-adjust: exact; }');\n\tdoc.writeln('  table.mxPageSelector { display: none; }');\n\tdoc.writeln('  hr.mxPageBreak { display: none; }');\n\tdoc.writeln('}');\n\tdoc.writeln('@media screen {');\n\t\n\t// NOTE: position: fixed is not supported in IE, so the page selector\n\t// position (absolute) needs to be updated in IE (see below)\n\tdoc.writeln('  table.mxPageSelector { position: fixed; right: 10px; top: 10px;' +\n\t\t\t'font-family: Arial; font-size:10pt; border: solid 1px darkgray;' +\n\t\t\t'background: white; border-collapse:collapse; }');\n\tdoc.writeln('  table.mxPageSelector td { border: solid 1px gray; padding:4px; }');\n\tdoc.writeln('  body.mxPage { background: gray; }');\n\tdoc.writeln('}');\n\t\n\tif (css != null)\n\t{\n\t\tdoc.writeln(css);\n\t}\n\t\n\tdoc.writeln('</style>');\n};\n\n/**\n * Function: writePostfix\n * \n * Called before closing the body of the page. This implementation is empty.\n */\nmxPrintPreview.prototype.writePostfix = function(doc)\n{\n\t// empty\n};\n\n/**\n * Function: createPageSelector\n * \n * Creates the page selector table.\n */\nmxPrintPreview.prototype.createPageSelector = function(vpages, hpages)\n{\n\tvar doc = this.wnd.document;\n\tvar table = doc.createElement('table');\n\ttable.className = 'mxPageSelector';\n\ttable.setAttribute('border', '0');\n\n\tvar tbody = doc.createElement('tbody');\n\t\n\tfor (var i = 0; i < vpages; i++)\n\t{\n\t\tvar row = doc.createElement('tr');\n\t\t\n\t\tfor (var j = 0; j < hpages; j++)\n\t\t{\n\t\t\tvar pageNum = i * hpages + j + 1;\n\t\t\tvar cell = doc.createElement('td');\n\t\t\tvar a = doc.createElement('a');\n\t\t\ta.setAttribute('href', '#mxPage-' + pageNum);\n\n\t\t\t// Workaround for FF where the anchor is appended to the URL of the original document\n\t\t\tif (mxClient.IS_NS && !mxClient.IS_SF && !mxClient.IS_GC)\n\t\t\t{\n\t\t\t\tvar js = 'var page = document.getElementById(\\'mxPage-' + pageNum + '\\');page.scrollIntoView(true);event.preventDefault();';\n\t\t\t\ta.setAttribute('onclick', js);\n\t\t\t}\n\t\t\t\n\t\t\tmxUtils.write(a, pageNum, doc);\n\t\t\tcell.appendChild(a);\n\t\t\trow.appendChild(cell);\n\t\t}\n\t\t\n\t\ttbody.appendChild(row);\n\t}\n\t\n\ttable.appendChild(tbody);\n\t\n\treturn table;\n};\n\n/**\n * Function: renderPage\n * \n * Creates a DIV that prints a single page of the given\n * graph using the given scale and returns the DIV that\n * represents the page.\n * \n * Parameters:\n * \n * w - Width of the page in pixels.\n * h - Height of the page in pixels.\n * dx - Optional horizontal page offset in pixels (used internally).\n * dy - Optional vertical page offset in pixels (used internally).\n * content - Callback that adds the HTML content to the inner div of a page.\n * Takes the inner div as the argument.\n * pageNumber - Integer representing the page number.\n */\nmxPrintPreview.prototype.renderPage = function(w, h, dx, dy, content, pageNumber)\n{\n\tvar doc = this.wnd.document;\n\tvar div = document.createElement('div');\n\tvar arg = null;\n\n\ttry\n\t{\n\t\t// Workaround for ignored clipping in IE 9 standards\n\t\t// when printing with page breaks and HTML labels.\n\t\tif (dx != 0 || dy != 0)\n\t\t{\n\t\t\tdiv.style.position = 'relative';\n\t\t\tdiv.style.width = w + 'px';\n\t\t\tdiv.style.height = h + 'px';\n\t\t\tdiv.style.pageBreakInside = 'avoid';\n\t\t\t\n\t\t\tvar innerDiv = document.createElement('div');\n\t\t\tinnerDiv.style.position = 'relative';\n\t\t\tinnerDiv.style.top = this.border + 'px';\n\t\t\tinnerDiv.style.left = this.border + 'px';\n\t\t\tinnerDiv.style.width = (w - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.height = (h - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.overflow = 'hidden';\n\t\t\t\n\t\t\tvar viewport = document.createElement('div');\n\t\t\tviewport.style.position = 'relative';\n\t\t\tviewport.style.marginLeft = dx + 'px';\n\t\t\tviewport.style.marginTop = dy + 'px';\n\n\t\t\t// FIXME: IE8 standards output problems\n\t\t\tif (doc.documentMode == 8)\n\t\t\t{\n\t\t\t\tinnerDiv.style.position = 'absolute';\n\t\t\t\tviewport.style.position = 'absolute';\n\t\t\t}\n\t\t\n\t\t\tif (doc.documentMode == 10)\n\t\t\t{\n\t\t\t\tviewport.style.width = '100%';\n\t\t\t\tviewport.style.height = '100%';\n\t\t\t}\n\t\t\t\n\t\t\tinnerDiv.appendChild(viewport);\n\t\t\tdiv.appendChild(innerDiv);\n\t\t\tdocument.body.appendChild(div);\n\t\t\targ = viewport;\n\t\t}\n\t\t// FIXME: IE10/11 too many pages\n\t\telse\n\t\t{\n\t\t\tdiv.style.width = w + 'px';\n\t\t\tdiv.style.height = h + 'px';\n\t\t\tdiv.style.overflow = 'hidden';\n\t\t\tdiv.style.pageBreakInside = 'avoid';\n\t\t\t\n\t\t\t// IE8 uses above branch currently\n\t\t\tif (doc.documentMode == 8)\n\t\t\t{\n\t\t\t\tdiv.style.position = 'relative';\n\t\t\t}\n\t\t\t\n\t\t\tvar innerDiv = document.createElement('div');\n\t\t\tinnerDiv.style.width = (w - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.height = (h - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.overflow = 'hidden';\n\n\t\t\tif (mxClient.IS_IE && (doc.documentMode == null || doc.documentMode == 5 || doc.documentMode == 8 || doc.documentMode == 7))\n\t\t\t{\n\t\t\t\tinnerDiv.style.marginTop = this.border + 'px';\n\t\t\t\tinnerDiv.style.marginLeft = this.border + 'px';\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinnerDiv.style.top = this.border + 'px';\n\t\t\t\tinnerDiv.style.left = this.border + 'px';\n\t\t\t}\n\t\n\t\t\tif (this.graph.dialect == mxConstants.DIALECT_VML)\n\t\t\t{\n\t\t\t\tinnerDiv.style.position = 'absolute';\n\t\t\t}\n\n\t\t\tdiv.appendChild(innerDiv);\n\t\t\tdocument.body.appendChild(div);\n\t\t\targ = innerDiv;\n\t\t}\n\t}\n\tcatch (e)\n\t{\n\t\tdiv.parentNode.removeChild(div);\n\t\tdiv = null;\n\t\t\n\t\tthrow e;\n\t}\n\n\tcontent(arg);\n\t \n\treturn div;\n};\n\n/**\n * Function: getRoot\n * \n * Returns the root cell for painting the graph.\n */\nmxPrintPreview.prototype.getRoot = function()\n{\n\tvar root = this.graph.view.currentRoot;\n\t\n\tif (root == null)\n\t{\n\t\troot = this.graph.getModel().getRoot();\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: addGraphFragment\n * \n * Adds a graph fragment to the given div.\n * \n * Parameters:\n * \n * dx - Horizontal translation for the diagram.\n * dy - Vertical translation for the diagram.\n * scale - Scale for the diagram.\n * pageNumber - Number of the page to be rendered.\n * div - Div that contains the output.\n * clip - Contains the clipping rectangle as an <mxRectangle>.\n */\nmxPrintPreview.prototype.addGraphFragment = function(dx, dy, scale, pageNumber, div, clip)\n{\n\tvar view = this.graph.getView();\n\tvar previousContainer = this.graph.container;\n\tthis.graph.container = div;\n\t\n\tvar canvas = view.getCanvas();\n\tvar backgroundPane = view.getBackgroundPane();\n\tvar drawPane = view.getDrawPane();\n\tvar overlayPane = view.getOverlayPane();\n\n\tif (this.graph.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tview.createSvg();\n\t\t\n\t\t// Uses CSS transform for scaling\n\t\tif (!mxClient.NO_FO)\n\t\t{\n\t\t\tvar g = view.getDrawPane().parentNode;\n\t\t\tvar prev = g.getAttribute('transform');\n\t\t\tg.setAttribute('transformOrigin', '0 0');\n\t\t\tg.setAttribute('transform', 'scale(' + scale + ',' + scale + ')' +\n\t\t\t\t'translate(' + dx + ',' + dy + ')');\n\t\t\t\n\t\t\tscale = 1;\n\t\t\tdx = 0;\n\t\t\tdy = 0;\n\t\t}\n\t}\n\telse if (this.graph.dialect == mxConstants.DIALECT_VML)\n\t{\n\t\tview.createVml();\n\t}\n\telse\n\t{\n\t\tview.createHtml();\n\t}\n\t\n\t// Disables events on the view\n\tvar eventsEnabled = view.isEventsEnabled();\n\tview.setEventsEnabled(false);\n\t\n\t// Disables the graph to avoid cursors\n\tvar graphEnabled = this.graph.isEnabled();\n\tthis.graph.setEnabled(false);\n\n\t// Resets the translation\n\tvar translate = view.getTranslate();\n\tview.translate = new mxPoint(dx, dy);\n\t\n\t// Redraws only states that intersect the clip\n\tvar redraw = this.graph.cellRenderer.redraw;\n\tvar states = view.states;\n\tvar s = view.scale;\n\n\t// Gets the transformed clip for intersection check below\n\tif (this.clipping)\n\t{\n\t\tvar tempClip = new mxRectangle((clip.x + translate.x) * s, (clip.y + translate.y) * s,\n\t\t\t\tclip.width * s / scale, clip.height * s / scale);\n\t\t\n\t\t// Checks clipping rectangle for speedup\n\t\t// Must create terminal states for edge clipping even if terminal outside of clip\n\t\tthis.graph.cellRenderer.redraw = function(state, force, rendering)\n\t\t{\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\t// Gets original state from graph to find bounding box\n\t\t\t\tvar orig = states.get(state.cell);\n\t\t\t\t\n\t\t\t\tif (orig != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = view.getBoundingBox(orig, false);\n\t\t\t\t\t\n\t\t\t\t\t// Stops rendering if outside clip for speedup\n\t\t\t\t\tif (bbox != null && !mxUtils.intersects(tempClip, bbox))\n\t\t\t\t\t{\n\t\t\t\t\t\t//return;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tredraw.apply(this, arguments);\n\t\t};\n\t}\n\t\n\tvar temp = null;\n\t\n\ttry\n\t{\n\t\t// Creates the temporary cell states in the view and\n\t\t// draws them onto the temporary DOM nodes in the view\n\t\tvar cells = [this.getRoot()];\n\t\ttemp = new mxTemporaryCellStates(view, scale, cells, null, mxUtils.bind(this, function(state)\n\t\t{\n\t\t\treturn this.getLinkForCellState(state);\n\t\t}));\n\t}\n\tfinally\n\t{\n\t\t// Removes overlay pane with selection handles\n\t\t// controls and icons from the print output\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tview.overlayPane.innerHTML = '';\n\t\t\tview.canvas.style.overflow = 'hidden';\n\t\t\tview.canvas.style.position = 'relative';\n\t\t\tview.canvas.style.top = this.marginTop + 'px';\n\t\t\tview.canvas.style.width = clip.width + 'px';\n\t\t\tview.canvas.style.height = clip.height + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Removes everything but the SVG node\n\t\t\tvar tmp = div.firstChild;\n\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\tvar next = tmp.nextSibling;\n\t\t\t\tvar name = tmp.nodeName.toLowerCase();\n\n\t\t\t\t// Note: Width and height are required in FF 11\n\t\t\t\tif (name == 'svg')\n\t\t\t\t{\n\t\t\t\t\ttmp.style.overflow = 'hidden';\n\t\t\t\t\ttmp.style.position = 'relative';\n\t\t\t\t\ttmp.style.top = this.marginTop + 'px';\n\t\t\t\t\ttmp.setAttribute('width', clip.width);\n\t\t\t\t\ttmp.setAttribute('height', clip.height);\n\t\t\t\t\ttmp.style.width = '';\n\t\t\t\t\ttmp.style.height = '';\n\t\t\t\t}\n\t\t\t\t// Tries to fetch all text labels and only text labels\n\t\t\t\telse if (tmp.style.cursor != 'default' && name != 'div')\n\t\t\t\t{\n\t\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp = next;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Puts background image behind SVG output\n\t\tif (this.printBackgroundImage)\n\t\t{\n\t\t\tvar svgs = div.getElementsByTagName('svg');\n\t\t\t\n\t\t\tif (svgs.length > 0)\n\t\t\t{\n\t\t\t\tsvgs[0].style.position = 'absolute';\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Completely removes the overlay pane to remove more handles\n\t\tview.overlayPane.parentNode.removeChild(view.overlayPane);\n\n\t\t// Restores the state of the view\n\t\tthis.graph.setEnabled(graphEnabled);\n\t\tthis.graph.container = previousContainer;\n\t\tthis.graph.cellRenderer.redraw = redraw;\n\t\tview.canvas = canvas;\n\t\tview.backgroundPane = backgroundPane;\n\t\tview.drawPane = drawPane;\n\t\tview.overlayPane = overlayPane;\n\t\tview.translate = translate;\n\t\ttemp.destroy();\n\t\tview.setEventsEnabled(eventsEnabled);\n\t}\n};\n\n/**\n * Function: getLinkForCellState\n * \n * Returns the link for the given cell state. This returns null.\n */\nmxPrintPreview.prototype.getLinkForCellState = function(state)\n{\n\treturn this.graph.getLinkForCell(state.cell);\n};\n\n/**\n * Function: insertBackgroundImage\n * \n * Inserts the background image into the given div.\n */\nmxPrintPreview.prototype.insertBackgroundImage = function(div, dx, dy)\n{\n\tvar bg = this.graph.backgroundImage;\n\t\n\tif (bg != null)\n\t{\n\t\tvar img = document.createElement('img');\n\t\timg.style.position = 'absolute';\n\t\timg.style.marginLeft = Math.round(dx * this.scale) + 'px';\n\t\timg.style.marginTop = Math.round(dy * this.scale) + 'px';\n\t\timg.setAttribute('width', Math.round(this.scale * bg.width));\n\t\timg.setAttribute('height', Math.round(this.scale * bg.height));\n\t\timg.src = bg.src;\n\t\t\n\t\tdiv.insertBefore(img, div.firstChild);\n\t}\n};\n\n/**\n * Function: getCoverPages\n * \n * Returns the pages to be added before the print output. This returns null.\n */\nmxPrintPreview.prototype.getCoverPages = function()\n{\n\treturn null;\n};\n\n/**\n * Function: getAppendices\n * \n * Returns the pages to be added after the print output. This returns null.\n */\nmxPrintPreview.prototype.getAppendices = function()\n{\n\treturn null;\n};\n\n/**\n * Function: print\n * \n * Opens the print preview and shows the print dialog.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n */\nmxPrintPreview.prototype.print = function(css)\n{\n\tvar wnd = this.open(css);\n\t\n\tif (wnd != null)\n\t{\n\t\twnd.print();\n\t}\n};\n\n/**\n * Function: close\n * \n * Closes the print preview window.\n */\nmxPrintPreview.prototype.close = function()\n{\n\tif (this.wnd != null)\n\t{\n\t\tthis.wnd.close();\n\t\tthis.wnd = null;\n\t}\n};\n\n__mxOutput.mxPrintPreview = typeof mxPrintPreview !== 'undefined' ? mxPrintPreview : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStylesheet\n * \n * Defines the appearance of the cells in a graph. See <putCellStyle> for an\n * example of creating a new cell style. It is recommended to use objects, not\n * arrays for holding cell styles. Existing styles can be cloned using\n * <mxUtils.clone> and turned into a string for debugging using\n * <mxUtils.toString>.\n *\n * Default Styles:\n * \n * The stylesheet contains two built-in styles, which are used if no style is\n * defined for a cell:\n *\n *   defaultVertex - Default style for vertices\n *   defaultEdge - Default style for edges\n * \n * Example:\n * \n * (code)\n * var vertexStyle = stylesheet.getDefaultVertexStyle();\n * vertexStyle[mxConstants.ROUNDED] = true;\n * var edgeStyle = stylesheet.getDefaultEdgeStyle();\n * edgeStyle[mxConstants.STYLE_EDGE] = mxEdgeStyle.EntityRelation;\n * (end)\n * \n * Modifies the built-in default styles.\n * \n * To avoid the default style for a cell, add a leading semicolon\n * to the style definition, eg.\n * \n * (code)\n * ;shadow=1\n * (end)\n * \n * Removing keys:\n * \n * For removing a key in a cell style of the form [stylename;|key=value;] the\n * special value none can be used, eg. highlight;fillColor=none\n * \n * See also the helper methods in mxUtils to modify strings of this format,\n * namely <mxUtils.setStyle>, <mxUtils.indexOfStylename>,\n * <mxUtils.addStylename>, <mxUtils.removeStylename>,\n * <mxUtils.removeAllStylenames> and <mxUtils.setStyleFlag>.\n * \n * Constructor: mxStylesheet\n * \n * Constructs a new stylesheet and assigns default styles.\n */\nfunction mxStylesheet()\n{\n\tthis.styles = new Object();\n\t\n\tthis.putDefaultVertexStyle(this.createDefaultVertexStyle());\n\tthis.putDefaultEdgeStyle(this.createDefaultEdgeStyle());\n};\n\n/**\n * Function: styles\n * \n * Maps from names to cell styles. Each cell style is a map of key,\n * value pairs.\n */\nmxStylesheet.prototype.styles;\n\n/**\n * Function: createDefaultVertexStyle\n * \n * Creates and returns the default vertex style.\n */\nmxStylesheet.prototype.createDefaultVertexStyle = function()\n{\n\tvar style = new Object();\n\t\n\tstyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;\n\tstyle[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n\tstyle[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\n\tstyle[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\n\tstyle[mxConstants.STYLE_FILLCOLOR] = '#C3D9FF';\n\tstyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\n\tstyle[mxConstants.STYLE_FONTCOLOR] = '#774400';\n\t\n\treturn style;\n};\n\n/**\n * Function: createDefaultEdgeStyle\n * \n * Creates and returns the default edge style.\n */\nmxStylesheet.prototype.createDefaultEdgeStyle = function()\n{\n\tvar style = new Object();\n\t\n\tstyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_CONNECTOR;\n\tstyle[mxConstants.STYLE_ENDARROW] = mxConstants.ARROW_CLASSIC;\n\tstyle[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\n\tstyle[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\n\tstyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\n\tstyle[mxConstants.STYLE_FONTCOLOR] = '#446299';\n\t\n\treturn style;\n};\n\n/**\n * Function: putDefaultVertexStyle\n * \n * Sets the default style for vertices using defaultVertex as the\n * stylename.\n * \n * Parameters:\n * style - Key, value pairs that define the style.\n */\nmxStylesheet.prototype.putDefaultVertexStyle = function(style)\n{\n\tthis.putCellStyle('defaultVertex', style);\n};\n\n/**\n * Function: putDefaultEdgeStyle\n * \n * Sets the default style for edges using defaultEdge as the stylename.\n */\nmxStylesheet.prototype.putDefaultEdgeStyle = function(style)\n{\n\tthis.putCellStyle('defaultEdge', style);\n};\n\n/**\n * Function: getDefaultVertexStyle\n * \n * Returns the default style for vertices.\n */\nmxStylesheet.prototype.getDefaultVertexStyle = function()\n{\n\treturn this.styles['defaultVertex'];\n};\n\n/**\n * Function: getDefaultEdgeStyle\n * \n * Sets the default style for edges.\n */\nmxStylesheet.prototype.getDefaultEdgeStyle = function()\n{\n\treturn this.styles['defaultEdge'];\n};\n\n/**\n * Function: putCellStyle\n * \n * Stores the given map of key, value pairs under the given name in\n * <styles>.\n *\n * Example:\n * \n * The following example adds a new style called 'rounded' into an\n * existing stylesheet:\n * \n * (code)\n * var style = new Object();\n * style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;\n * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n * style[mxConstants.STYLE_ROUNDED] = true;\n * graph.getStylesheet().putCellStyle('rounded', style);\n * (end)\n * \n * In the above example, the new style is an object. The possible keys of\n * the object are all the constants in <mxConstants> that start with STYLE\n * and the values are either JavaScript objects, such as\n * <mxPerimeter.RightAngleRectanglePerimeter> (which is in fact a function)\n * or expressions, such as true. Note that not all keys will be\n * interpreted by all shapes (eg. the line shape ignores the fill color).\n * The final call to this method associates the style with a name in the\n * stylesheet. The style is used in a cell with the following code:\n * \n * (code)\n * model.setStyle(cell, 'rounded');\n * (end)\n * \n * Parameters:\n * \n * name - Name for the style to be stored.\n * style - Key, value pairs that define the style.\n */\nmxStylesheet.prototype.putCellStyle = function(name, style)\n{\n\tthis.styles[name] = style;\n};\n\n/**\n * Function: getCellStyle\n * \n * Returns the cell style for the specified stylename or the given\n * defaultStyle if no style can be found for the given stylename.\n * \n * Parameters:\n * \n * name - String of the form [(stylename|key=value);] that represents the\n * style.\n * defaultStyle - Default style to be returned if no style can be found.\n */\nmxStylesheet.prototype.getCellStyle = function(name, defaultStyle)\n{\n\tvar style = defaultStyle;\n\t\n\tif (name != null && name.length > 0)\n\t{\n\t\tvar pairs = name.split(';');\n\n\t\tif (style != null &&\n\t\t\tname.charAt(0) != ';')\n\t\t{\n\t\t\tstyle = mxUtils.clone(style);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle = new Object();\n\t\t}\n\n\t\t// Parses each key, value pair into the existing style\n\t \tfor (var i = 0; i < pairs.length; i++)\n\t \t{\n\t \t\tvar tmp = pairs[i];\n\t \t\tvar pos = tmp.indexOf('=');\n\t \t\t\n\t \t\tif (pos >= 0)\n\t \t\t{\n\t\t \t\tvar key = tmp.substring(0, pos);\n\t\t \t\tvar value = tmp.substring(pos + 1);\n\n\t\t \t\tif (value == mxConstants.NONE)\n\t\t \t\t{\n\t\t \t\t\tdelete style[key];\n\t\t \t\t}\n\t\t \t\telse if (mxUtils.isNumeric(value))\n\t\t \t\t{\n\t\t \t\t\tstyle[key] = parseFloat(value);\n\t\t \t\t}\n\t\t \t\telse\n\t\t \t\t{\n\t\t\t \t\tstyle[key] = value;\n\t\t \t\t}\n\t\t\t}\n\t \t\telse\n\t \t\t{\n\t \t\t\t// Merges the entries from a named style\n\t\t\t\tvar tmpStyle = this.styles[tmp];\n\t\t\t\t\n\t\t\t\tif (tmpStyle != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var key in tmpStyle)\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle[key] = tmpStyle[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t \t\t}\n\t\t}\n\t}\n\t\n\treturn style;\n};\n\n__mxOutput.mxStylesheet = typeof mxStylesheet !== 'undefined' ? mxStylesheet : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellState\n * \n * Represents the current state of a cell in a given <mxGraphView>.\n * \n * For edges, the edge label position is stored in <absoluteOffset>.\n * \n * The size for oversize labels can be retrieved using the boundingBox property\n * of the <text> field as shown below.\n * \n * (code)\n * var bbox = (state.text != null) ? state.text.boundingBox : null;\n * (end)\n * \n * Constructor: mxCellState\n * \n * Constructs a new object that represents the current state of the given\n * cell in the specified view.\n * \n * Parameters:\n * \n * view - <mxGraphView> that contains the state.\n * cell - <mxCell> that this state represents.\n * style - Array of key, value pairs that constitute the style.\n */\nfunction mxCellState(view, cell, style)\n{\n\tthis.view = view;\n\tthis.cell = cell;\n\tthis.style = style;\n\t\n\tthis.origin = new mxPoint();\n\tthis.absoluteOffset = new mxPoint();\n};\n\n/**\n * Extends mxRectangle.\n */\nmxCellState.prototype = new mxRectangle();\nmxCellState.prototype.constructor = mxCellState;\n\n/**\n * Variable: view\n * \n * Reference to the enclosing <mxGraphView>.\n */\nmxCellState.prototype.view = null;\n\n/**\n * Variable: cell\n *\n * Reference to the <mxCell> that is represented by this state.\n */\nmxCellState.prototype.cell = null;\n\n/**\n * Variable: style\n * \n * Contains an array of key, value pairs that represent the style of the\n * cell.\n */\nmxCellState.prototype.style = null;\n\n/**\n * Variable: invalid\n * \n * Specifies if the state is invalid. Default is true.\n */\nmxCellState.prototype.invalid = true;\n\n/**\n * Variable: origin\n *\n * <mxPoint> that holds the origin for all child cells. Default is a new\n * empty <mxPoint>.\n */\nmxCellState.prototype.origin = null;\n\n/**\n * Variable: absolutePoints\n * \n * Holds an array of <mxPoints> that represent the absolute points of an\n * edge.\n */\nmxCellState.prototype.absolutePoints = null;\n\n/**\n * Variable: absoluteOffset\n *\n * <mxPoint> that holds the absolute offset. For edges, this is the\n * absolute coordinates of the label position. For vertices, this is the\n * offset of the label relative to the top, left corner of the vertex. \n */\nmxCellState.prototype.absoluteOffset = null;\n\n/**\n * Variable: visibleSourceState\n * \n * Caches the visible source terminal state.\n */\nmxCellState.prototype.visibleSourceState = null;\n\n/**\n * Variable: visibleTargetState\n * \n * Caches the visible target terminal state.\n */\nmxCellState.prototype.visibleTargetState = null;\n\n/**\n * Variable: terminalDistance\n * \n * Caches the distance between the end points for an edge.\n */\nmxCellState.prototype.terminalDistance = 0;\n\n/**\n * Variable: length\n *\n * Caches the length of an edge.\n */\nmxCellState.prototype.length = 0;\n\n/**\n * Variable: segments\n * \n * Array of numbers that represent the cached length of each segment of the\n * edge.\n */\nmxCellState.prototype.segments = null;\n\n/**\n * Variable: shape\n * \n * Holds the <mxShape> that represents the cell graphically.\n */\nmxCellState.prototype.shape = null;\n\n/**\n * Variable: text\n * \n * Holds the <mxText> that represents the label of the cell. Thi smay be\n * null if the cell has no label.\n */\nmxCellState.prototype.text = null;\n\n/**\n * Variable: unscaledWidth\n * \n * Holds the unscaled width of the state.\n */\nmxCellState.prototype.unscaledWidth = null;\n\n/**\n * Function: getPerimeterBounds\n * \n * Returns the <mxRectangle> that should be used as the perimeter of the\n * cell.\n * \n * Parameters:\n * \n * border - Optional border to be added around the perimeter bounds.\n * bounds - Optional <mxRectangle> to be used as the initial bounds.\n */\nmxCellState.prototype.getPerimeterBounds = function(border, bounds)\n{\n\tborder = border || 0;\n\tbounds = (bounds != null) ? bounds : new mxRectangle(this.x, this.y, this.width, this.height);\n\t\n\tif (this.shape != null && this.shape.stencil != null && this.shape.stencil.aspect == 'fixed')\n\t{\n\t\tvar aspect = this.shape.stencil.computeAspect(this.style, bounds.x, bounds.y, bounds.width, bounds.height);\n\t\t\n\t\tbounds.x = aspect.x;\n\t\tbounds.y = aspect.y;\n\t\tbounds.width = this.shape.stencil.w0 * aspect.width;\n\t\tbounds.height = this.shape.stencil.h0 * aspect.height;\n\t}\n\t\n\tif (border != 0)\n\t{\n\t\tbounds.grow(border);\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: setAbsoluteTerminalPoint\n * \n * Sets the first or last point in <absolutePoints> depending on isSource.\n * \n * Parameters:\n * \n * point - <mxPoint> that represents the terminal point.\n * isSource - Boolean that specifies if the first or last point should\n * be assigned.\n */\nmxCellState.prototype.setAbsoluteTerminalPoint = function(point, isSource)\n{\n\tif (isSource)\n\t{\n\t\tif (this.absolutePoints == null)\n\t\t{\n\t\t\tthis.absolutePoints = [];\n\t\t}\n\t\t\n\t\tif (this.absolutePoints.length == 0)\n\t\t{\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.absolutePoints[0] = point;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (this.absolutePoints == null)\n\t\t{\n\t\t\tthis.absolutePoints = [];\n\t\t\tthis.absolutePoints.push(null);\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse if (this.absolutePoints.length == 1)\n\t\t{\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.absolutePoints[this.absolutePoints.length - 1] = point;\n\t\t}\n\t}\n};\n\n/**\n * Function: setCursor\n * \n * Sets the given cursor on the shape and text shape.\n */\nmxCellState.prototype.setCursor = function(cursor)\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.setCursor(cursor);\n\t}\n\t\n\tif (this.text != null)\n\t{\n\t\tthis.text.setCursor(cursor);\n\t}\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Returns the visible source or target terminal cell.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source or target cell should be\n * returned.\n */\nmxCellState.prototype.getVisibleTerminal = function(source)\n{\n\tvar tmp = this.getVisibleTerminalState(source);\n\t\n\treturn (tmp != null) ? tmp.cell : null;\n};\n\n/**\n * Function: getVisibleTerminalState\n * \n * Returns the visible source or target terminal state.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source or target state should be\n * returned.\n */\nmxCellState.prototype.getVisibleTerminalState = function(source)\n{\n\treturn (source) ? this.visibleSourceState : this.visibleTargetState;\n};\n\n/**\n * Function: setVisibleTerminalState\n * \n * Sets the visible source or target terminal state.\n * \n * Parameters:\n * \n * terminalState - <mxCellState> that represents the terminal.\n * source - Boolean that specifies if the source or target state should be set.\n */\nmxCellState.prototype.setVisibleTerminalState = function(terminalState, source)\n{\n\tif (source)\n\t{\n\t\tthis.visibleSourceState = terminalState;\n\t}\n\telse\n\t{\n\t\tthis.visibleTargetState = terminalState;\n\t}\n};\n\n/**\n * Function: getCellBounds\n * \n * Returns the unscaled, untranslated bounds.\n */\nmxCellState.prototype.getCellBounds = function()\n{\n\treturn this.cellBounds;\n};\n\n/**\n * Function: getPaintBounds\n * \n * Returns the unscaled, untranslated paint bounds. This is the same as\n * <getCellBounds> but with a 90 degree rotation if the shape's\n * isPaintBoundsInverted returns true.\n */\nmxCellState.prototype.getPaintBounds = function()\n{\n\treturn this.paintBounds;\n};\n\n/**\n * Function: updateCachedBounds\n * \n * Updates the cellBounds and paintBounds.\n */\nmxCellState.prototype.updateCachedBounds = function()\n{\n\tvar tr = this.view.translate;\n\tvar s = this.view.scale;\n\tthis.cellBounds = new mxRectangle(this.x / s - tr.x, this.y / s - tr.y, this.width / s, this.height / s);\n\tthis.paintBounds = mxRectangle.fromRectangle(this.cellBounds);\n\t\n\tif (this.shape != null && this.shape.isPaintBoundsInverted())\n\t{\n\t\tthis.paintBounds.rotate90();\n\t}\n};\n\n/**\n * Destructor: setState\n * \n * Copies all fields from the given state to this state.\n */\nmxCellState.prototype.setState = function(state)\n{\n\tthis.view = state.view;\n\tthis.cell = state.cell;\n\tthis.style = state.style;\n\tthis.absolutePoints = state.absolutePoints;\n\tthis.origin = state.origin;\n\tthis.absoluteOffset = state.absoluteOffset;\n\tthis.boundingBox = state.boundingBox;\n\tthis.terminalDistance = state.terminalDistance;\n\tthis.segments = state.segments;\n\tthis.length = state.length;\n\tthis.x = state.x;\n\tthis.y = state.y;\n\tthis.width = state.width;\n\tthis.height = state.height;\n\tthis.unscaledWidth = state.unscaledWidth;\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of this <mxPoint>.\n */\nmxCellState.prototype.clone = function()\n{\n \tvar clone = new mxCellState(this.view, this.cell, this.style);\n\n\t// Clones the absolute points\n\tif (this.absolutePoints != null)\n\t{\n\t\tclone.absolutePoints = [];\n\t\t\n\t\tfor (var i = 0; i < this.absolutePoints.length; i++)\n\t\t{\n\t\t\tclone.absolutePoints[i] = this.absolutePoints[i].clone();\n\t\t}\n\t}\n\n\tif (this.origin != null)\n\t{\n\t\tclone.origin = this.origin.clone();\n\t}\n\n\tif (this.absoluteOffset != null)\n\t{\n\t\tclone.absoluteOffset = this.absoluteOffset.clone();\n\t}\n\n\tif (this.boundingBox != null)\n\t{\n\t\tclone.boundingBox = this.boundingBox.clone();\n\t}\n\n\tclone.terminalDistance = this.terminalDistance;\n\tclone.segments = this.segments;\n\tclone.length = this.length;\n\tclone.x = this.x;\n\tclone.y = this.y;\n\tclone.width = this.width;\n\tclone.height = this.height;\n\tclone.unscaledWidth = this.unscaledWidth;\n\t\n\treturn clone;\n};\n\n/**\n * Destructor: destroy\n * \n * Destroys the state and all associated resources.\n */\nmxCellState.prototype.destroy = function()\n{\n\tthis.view.graph.cellRenderer.destroy(this);\n};\n\n__mxOutput.mxCellState = typeof mxCellState !== 'undefined' ? mxCellState : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphSelectionModel\n *\n * Implements the selection model for a graph. Here is a listener that handles\n * all removed selection cells.\n * \n * (code)\n * graph.getSelectionModel().addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var cells = evt.getProperty('added');\n *   \n *   for (var i = 0; i < cells.length; i++)\n *   {\n *     // Handle cells[i]...\n *   }\n * });\n * (end)\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the selection was changed in <changeSelection>. The\n * <code>edit</code> property contains the <mxUndoableEdit> which contains the\n * <mxSelectionChange>.\n * \n * Event: mxEvent.CHANGE\n * \n * Fires after the selection changes by executing an <mxSelectionChange>. The\n * <code>added</code> and <code>removed</code> properties contain arrays of\n * cells that have been added to or removed from the selection, respectively.\n * The names are inverted due to historic reasons. This cannot be changed.\n * \n * Constructor: mxGraphSelectionModel\n *\n * Constructs a new graph selection model for the given <mxGraph>.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphSelectionModel(graph)\n{\n\tthis.graph = graph;\n\tthis.cells = [];\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphSelectionModel.prototype = new mxEventSource();\nmxGraphSelectionModel.prototype.constructor = mxGraphSelectionModel;\n\n/**\n * Variable: doneResource\n * \n * Specifies the resource key for the status message after a long operation.\n * If the resource for this key does not exist then the value is used as\n * the status message. Default is 'done'.\n */\nmxGraphSelectionModel.prototype.doneResource = (mxClient.language != 'none') ? 'done' : '';\n\n/**\n * Variable: updatingSelectionResource\n *\n * Specifies the resource key for the status message while the selection is\n * being updated. If the resource for this key does not exist then the\n * value is used as the status message. Default is 'updatingSelection'.\n */\nmxGraphSelectionModel.prototype.updatingSelectionResource = (mxClient.language != 'none') ? 'updatingSelection' : '';\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphSelectionModel.prototype.graph = null;\n\n/**\n * Variable: singleSelection\n *\n * Specifies if only one selected item at a time is allowed.\n * Default is false.\n */\nmxGraphSelectionModel.prototype.singleSelection = false;\n\n/**\n * Function: isSingleSelection\n *\n * Returns <singleSelection> as a boolean.\n */\nmxGraphSelectionModel.prototype.isSingleSelection = function()\n{\n\treturn this.singleSelection;\n};\n\n/**\n * Function: setSingleSelection\n *\n * Sets the <singleSelection> flag.\n * \n * Parameters:\n * \n * singleSelection - Boolean that specifies the new value for\n * <singleSelection>.\n */\nmxGraphSelectionModel.prototype.setSingleSelection = function(singleSelection)\n{\n\tthis.singleSelection = singleSelection;\n};\n\n/**\n * Function: isSelected\n *\n * Returns true if the given <mxCell> is selected.\n */\nmxGraphSelectionModel.prototype.isSelected = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\treturn mxUtils.indexOf(this.cells, cell) >= 0;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: isEmpty\n *\n * Returns true if no cells are currently selected.\n */\nmxGraphSelectionModel.prototype.isEmpty = function()\n{\n\treturn this.cells.length == 0;\n};\n\n/**\n * Function: clear\n *\n * Clears the selection and fires a <change> event if the selection was not\n * empty.\n */\nmxGraphSelectionModel.prototype.clear = function()\n{\n\tthis.changeSelection(null, this.cells);\n};\n\n/**\n * Function: setCell\n *\n * Selects the specified <mxCell> using <setCells>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n */\nmxGraphSelectionModel.prototype.setCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.setCells([cell]);\n\t}\n};\n\n/**\n * Function: setCells\n *\n * Selects the given array of <mxCells> and fires a <change> event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n */\nmxGraphSelectionModel.prototype.setCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tif (this.singleSelection)\n\t\t{\n\t\t\tcells = [this.getFirstSelectableCell(cells)];\n\t\t}\n\t\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\t\n\t\t}\n\n\t\tthis.changeSelection(tmp, this.cells);\n\t}\n};\n\n/**\n * Function: getFirstSelectableCell\n *\n * Returns the first selectable cell in the given array of cells.\n */\nmxGraphSelectionModel.prototype.getFirstSelectableCell = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\treturn cells[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: addCell\n * \n * Adds the given <mxCell> to the selection and fires a <select> event.\n * \n * Parameters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.addCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.addCells([cell]);\n\t}\n};\n\n/**\n * Function: addCells\n * \n * Adds the given array of <mxCells> to the selection and fires a <select>\n * event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to add to the selection.\n */\nmxGraphSelectionModel.prototype.addCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar remove = null;\n\t\t\n\t\tif (this.singleSelection)\n\t\t{\n\t\t\tremove = this.cells;\n\t\t\tcells = [this.getFirstSelectableCell(cells)];\n\t\t}\n\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (!this.isSelected(cells[i]) &&\n\t\t\t\tthis.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\t\n\t\t}\n\n\t\tthis.changeSelection(tmp, remove);\n\t}\n};\n\n/**\n * Function: removeCell\n *\n * Removes the specified <mxCell> from the selection and fires a <select>\n * event for the remaining cells.\n * \n * Parameters:\n * \n * cell - <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.removeCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.removeCells([cell]);\n\t}\n};\n\n/**\n * Function: removeCells\n */\nmxGraphSelectionModel.prototype.removeCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.isSelected(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.changeSelection(null, tmp);\t\n\t}\n};\n\n/**\n * Function: changeSelection\n *\n * Inner callback to add the specified <mxCell> to the selection. No event\n * is fired in this implementation.\n * \n * Paramters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.changeSelection = function(added, removed)\n{\n\tif ((added != null &&\n\t\tadded.length > 0 &&\n\t\tadded[0] != null) ||\n\t\t(removed != null &&\n\t\tremoved.length > 0 &&\n\t\tremoved[0] != null))\n\t{\n\t\tvar change = new mxSelectionChange(this, added, removed);\n\t\tchange.execute();\n\t\tvar edit = new mxUndoableEdit(this, false);\n\t\tedit.add(change);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n\t}\n};\n\n/**\n * Function: cellAdded\n *\n * Inner callback to add the specified <mxCell> to the selection. No event\n * is fired in this implementation.\n * \n * Paramters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.cellAdded = function(cell)\n{\n\tif (cell != null &&\n\t\t!this.isSelected(cell))\n\t{\n\t\tthis.cells.push(cell);\n\t}\n};\n\n/**\n * Function: cellRemoved\n *\n * Inner callback to remove the specified <mxCell> from the selection. No\n * event is fired in this implementation.\n * \n * Parameters:\n * \n * cell - <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.cellRemoved = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tvar index = mxUtils.indexOf(this.cells, cell);\n\t\t\n\t\tif (index >= 0)\n\t\t{\n\t\t\tthis.cells.splice(index, 1);\n\t\t}\n\t}\n};\n\n/**\n * Class: mxSelectionChange\n *\n * Action to change the current root in a view.\n *\n * Constructor: mxCurrentRootChange\n *\n * Constructs a change of the current root in the given view.\n */\nfunction mxSelectionChange(selectionModel, added, removed)\n{\n\tthis.selectionModel = selectionModel;\n\tthis.added = (added != null) ? added.slice() : null;\n\tthis.removed = (removed != null) ? removed.slice() : null;\n};\n\n/**\n * Function: execute\n *\n * Changes the current root of the view.\n */\nmxSelectionChange.prototype.execute = function()\n{\n\tvar t0 = mxLog.enter('mxSelectionChange.execute');\n\twindow.status = mxResources.get(\n\t\tthis.selectionModel.updatingSelectionResource) ||\n\t\tthis.selectionModel.updatingSelectionResource;\n\n\tif (this.removed != null)\n\t{\n\t\tfor (var i = 0; i < this.removed.length; i++)\n\t\t{\n\t\t\tthis.selectionModel.cellRemoved(this.removed[i]);\n\t\t}\n\t}\n\n\tif (this.added != null)\n\t{\n\t\tfor (var i = 0; i < this.added.length; i++)\n\t\t{\n\t\t\tthis.selectionModel.cellAdded(this.added[i]);\n\t\t}\n\t}\n\t\n\tvar tmp = this.added;\n\tthis.added = this.removed;\n\tthis.removed = tmp;\n\n\twindow.status = mxResources.get(this.selectionModel.doneResource) ||\n\t\tthis.selectionModel.doneResource;\n\tmxLog.leave('mxSelectionChange.execute', t0);\n\t\n\tthis.selectionModel.fireEvent(new mxEventObject(mxEvent.CHANGE,\n\t\t\t'added', this.added, 'removed', this.removed));\n};\n\n__mxOutput.mxGraphSelectionModel = typeof mxGraphSelectionModel !== 'undefined' ? mxGraphSelectionModel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellEditor\n *\n * In-place editor for the graph. To control this editor, use\n * <mxGraph.invokesStopCellEditing>, <mxGraph.enterStopsCellEditing> and\n * <mxGraph.escapeEnabled>. If <mxGraph.enterStopsCellEditing> is true then\n * ctrl-enter or shift-enter can be used to create a linefeed. The F2 and\n * escape keys can always be used to stop editing.\n * \n * To customize the location of the textbox in the graph, override\n * <getEditorBounds> as follows:\n * \n * (code)\n * graph.cellEditor.getEditorBounds = function(state)\n * {\n *   var result = mxCellEditor.prototype.getEditorBounds.apply(this, arguments);\n *   \n *   if (this.graph.getModel().isEdge(state.cell))\n *   {\n *     result.x = state.getCenterX() - result.width / 2;\n *     result.y = state.getCenterY() - result.height / 2;\n *   }\n *   \n *   return result;\n * };\n * (end)\n * \n * Note that this hook is only called if <autoSize> is false. If <autoSize> is true,\n * then <mxShape.getLabelBounds> is used to compute the current bounds of the textbox.\n * \n * The textarea uses the mxCellEditor CSS class. You can modify this class in\n * your custom CSS. Note: You should modify the CSS after loading the client\n * in the page.\n *\n * Example:\n * \n * To only allow numeric input in the in-place editor, use the following code.\n *\n * (code)\n * var text = graph.cellEditor.textarea;\n * \n * mxEvent.addListener(text, 'keydown', function (evt)\n * {\n *   if (!(evt.keyCode >= 48 && evt.keyCode <= 57) &&\n *       !(evt.keyCode >= 96 && evt.keyCode <= 105))\n *   {\n *     mxEvent.consume(evt);\n *   }\n * }); \n * (end)\n * \n * Placeholder:\n * \n * To implement a placeholder for cells without a label, use the\n * <emptyLabelText> variable.\n * \n * Resize in Chrome:\n * \n * Resize of the textarea is disabled by default. If you want to enable\n * this feature extend <init> and set this.textarea.style.resize = ''.\n * \n * To start editing on a key press event, the container of the graph\n * should have focus or a focusable parent should be used to add the\n * key press handler as follows.\n * \n * (code)\n * mxEvent.addListener(graph.container, 'keypress', mxUtils.bind(this, function(evt)\n * {\n *   if (!graph.isEditing() && !graph.isSelectionEmpty() && evt.which !== 0 &&\n *       !mxEvent.isAltDown(evt) && !mxEvent.isControlDown(evt) && !mxEvent.isMetaDown(evt))\n *   {\n *     graph.startEditing();\n *     \n *     if (mxClient.IS_FF)\n *     {\n *       graph.cellEditor.textarea.value = String.fromCharCode(evt.which);\n *     }\n *   }\n * }));\n * (end)\n * \n * To allow focus for a DIV, and hence to receive key press events, some browsers\n * require it to have a valid tabindex attribute. In this case the following\n * code may be used to keep the container focused.\n * \n * (code)\n * var graphFireMouseEvent = graph.fireMouseEvent;\n * graph.fireMouseEvent = function(evtName, me, sender)\n * {\n *   if (evtName == mxEvent.MOUSE_DOWN)\n *   {\n *     this.container.focus();\n *   }\n *   \n *   graphFireMouseEvent.apply(this, arguments);\n * };\n * (end)\n *\n * Constructor: mxCellEditor\n *\n * Constructs a new in-place editor for the specified graph.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxCellEditor(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Stops editing after zoom changes\n\tthis.zoomHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (this.graph.isEditing())\n\t\t{\n\t\t\tthis.resize();\n\t\t}\n\t});\n\t\n\tthis.graph.view.addListener(mxEvent.SCALE, this.zoomHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.zoomHandler);\n\t\n\t// Adds handling of deleted cells while editing\n\tthis.changeHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.editingCell != null && this.graph.getView().getState(this.editingCell) == null)\n\t\t{\n\t\t\tthis.stopEditing(true);\n\t\t}\n\t});\n\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellEditor.prototype.graph = null;\n\n/**\n * Variable: textarea\n *\n * Holds the DIV that is used for text editing. Note that this may be null before the first\n * edit. Instantiated in <init>.\n */\nmxCellEditor.prototype.textarea = null;\n\n/**\n * Variable: editingCell\n * \n * Reference to the <mxCell> that is currently being edited.\n */\nmxCellEditor.prototype.editingCell = null;\n\n/**\n * Variable: trigger\n * \n * Reference to the event that was used to start editing.\n */\nmxCellEditor.prototype.trigger = null;\n\n/**\n * Variable: modified\n * \n * Specifies if the label has been modified.\n */\nmxCellEditor.prototype.modified = false;\n\n/**\n * Variable: autoSize\n * \n * Specifies if the textarea should be resized while the text is being edited.\n * Default is true.\n */\nmxCellEditor.prototype.autoSize = true;\n\n/**\n * Variable: selectText\n * \n * Specifies if the text should be selected when editing starts. Default is\n * true.\n */\nmxCellEditor.prototype.selectText = true;\n\n/**\n * Variable: emptyLabelText\n * \n * Text to be displayed for empty labels. Default is '' or '<br>' in Firefox as\n * a workaround for the missing cursor bug for empty content editable. This can\n * be set to eg. \"[Type Here]\" to easier visualize editing of empty labels. The\n * value is only displayed before the first keystroke and is never used as the\n * actual editing value.\n */\nmxCellEditor.prototype.emptyLabelText = (mxClient.IS_FF) ? '<br>' : '';\n\n/**\n * Variable: escapeCancelsEditing\n * \n * If true, pressing the escape key will stop editing and not accept the new\n * value. Change this to false to accept the new value on escape, and cancel\n * editing on Shift+Escape instead. Default is true.\n */\nmxCellEditor.prototype.escapeCancelsEditing = true;\n\n/**\n * Variable: textNode\n * \n * Reference to the label DOM node that has been hidden.\n */\nmxCellEditor.prototype.textNode = '';\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the textarea. Default is 5.\n */\nmxCellEditor.prototype.zIndex = 5;\n\n/**\n * Variable: minResize\n * \n * Defines the minimum width and height to be used in <resize>. Default is 0x20px.\n */\nmxCellEditor.prototype.minResize = new mxRectangle(0, 20);\n\n/**\n * Variable: wordWrapPadding\n * \n * Correction factor for word wrapping width. Default is 2 in quirks, 0 in IE\n * 11 and 1 in all other browsers and modes.\n */\nmxCellEditor.prototype.wordWrapPadding = (mxClient.IS_QUIRKS) ? 2 : (!mxClient.IS_IE11) ? 1 : 0;\n\n/**\n * Variable: blurEnabled\n *\n * If <focusLost> should be called if <textarea> loses the focus. Default is false.\n */\nmxCellEditor.prototype.blurEnabled = false;\n\n/**\n * Variable: initialValue\n * \n * Holds the initial editing value to check if the current value was modified.\n */\nmxCellEditor.prototype.initialValue = null;\n\n/**\n * Function: init\n *\n * Creates the <textarea> and installs the event listeners. The key handler\n * updates the <modified> state.\n */\nmxCellEditor.prototype.init = function ()\n{\n\tthis.textarea = document.createElement('div');\n\tthis.textarea.className = 'mxCellEditor mxPlainTextEditor';\n\tthis.textarea.contentEditable = true;\n\t\n\t// Workaround for selection outside of DIV if height is 0\n\tif (mxClient.IS_GC)\n\t{\n\t\tthis.textarea.style.minHeight = '1em';\n\t}\n\n\tthis.textarea.style.position = ((this.isLegacyEditor())) ? 'absolute' : 'relative';\n\tthis.installListeners(this.textarea);\n};\n\n/**\n * Function: applyValue\n * \n * Called in <stopEditing> if cancel is false to invoke <mxGraph.labelChanged>.\n */\nmxCellEditor.prototype.applyValue = function(state, value)\n{\n\tthis.graph.labelChanged(state.cell, value, this.trigger);\n};\n\n/**\n * Function: getInitialValue\n * \n * Gets the initial editing value for the given cell.\n */\nmxCellEditor.prototype.getInitialValue = function(state, trigger)\n{\n\tvar result = mxUtils.htmlEntities(this.graph.getEditingValue(state.cell, trigger), false);\n\t\n    // Workaround for trailing line breaks being ignored in the editor\n\tif (!mxClient.IS_QUIRKS && document.documentMode != 8 && document.documentMode != 9 &&\n\t\tdocument.documentMode != 10)\n\t{\n\t\tresult = mxUtils.replaceTrailingNewlines(result, '<div><br></div>');\n\t}\n    \n    return result.replace(/\\n/g, '<br>');\n};\n\n/**\n * Function: getCurrentValue\n * \n * Returns the current editing value.\n */\nmxCellEditor.prototype.getCurrentValue = function(state)\n{\n\treturn mxUtils.extractTextWithWhitespace(this.textarea.childNodes);\n};\n\n/**\n * Function: isCancelEditingKeyEvent\n * \n * Returns true if <escapeCancelsEditing> is true and shift, control and meta\n * are not pressed.\n */\nmxCellEditor.prototype.isCancelEditingKeyEvent = function(evt)\n{\n\treturn this.escapeCancelsEditing || mxEvent.isShiftDown(evt) || mxEvent.isControlDown(evt) || mxEvent.isMetaDown(evt);\n};\n\n/**\n * Function: installListeners\n * \n * Installs listeners for focus, change and standard key event handling.\n */\nmxCellEditor.prototype.installListeners = function(elt)\n{\n\t// Applies value if focus is lost\n\tmxEvent.addListener(elt, 'blur', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.blurEnabled)\n\t\t{\n\t\t\tthis.focusLost(evt);\n\t\t}\n\t}));\n\n\t// Updates modified state and handles placeholder text\n\tmxEvent.addListener(elt, 'keydown', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (!mxEvent.isConsumed(evt))\n\t\t{\n\t\t\tif (this.isStopEditingEvent(evt))\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(false);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t\telse if (evt.keyCode == 27 /* Escape */)\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(this.isCancelEditingKeyEvent(evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t}\n\t}));\n\n\t// Keypress only fires if printable key was pressed and handles removing the empty placeholder\n\tvar keypressHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Clears the initial empty label on the first keystroke\n\t\t\t// and workaround for FF which fires keypress for delete and backspace\n\t\t\tif (this.clearOnChange && elt.innerHTML == this.getEmptyLabelText() &&\n\t\t\t\t(!mxClient.IS_FF || (evt.keyCode != 8 /* Backspace */ && evt.keyCode != 46 /* Delete */)))\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t\telt.innerHTML = '';\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, 'keypress', keypressHandler);\n\tmxEvent.addListener(elt, 'paste', keypressHandler);\n\t\n\t// Handler for updating the empty label text value after a change\n\tvar keyupHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Uses an optional text value for sempty labels which is cleared\n\t\t\t// when the first keystroke appears. This makes it easier to see\n\t\t\t// that a label is being edited even if the label is empty.\n\t\t\t// In Safari and FF, an empty text is represented by <BR> which isn't enough to force a valid size\n\t\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t\t{\n\t\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\t\tthis.clearOnChange = this.textarea.innerHTML.length > 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keyup', keyupHandler);\n\tmxEvent.addListener(elt, 'cut', keyupHandler);\n\tmxEvent.addListener(elt, 'paste', keyupHandler);\n\n\t// Adds automatic resizing of the textbox while typing using input, keyup and/or DOM change events\n\tvar evtName = (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keydown';\n\t\n\tvar resizeHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null && this.autoSize && !mxEvent.isConsumed(evt))\n\t\t{\n\t\t\t// Asynchronous is needed for keydown and shows better results for input events overall\n\t\t\t// (ie non-blocking and cases where the offsetWidth/-Height was wrong at this time)\n\t\t\tif (this.resizeThread != null)\n\t\t\t{\n\t\t\t\twindow.clearTimeout(this.resizeThread);\n\t\t\t}\n\t\t\t\n\t\t\tthis.resizeThread = window.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resizeThread = null;\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t});\n\t\n\tmxEvent.addListener(elt, evtName, resizeHandler);\n\n\tif (document.documentMode >= 9)\n\t{\n\t\tmxEvent.addListener(elt, 'DOMNodeRemoved', resizeHandler);\n\t\tmxEvent.addListener(elt, 'DOMNodeInserted', resizeHandler);\n\t}\n\telse\n\t{\n\t\tmxEvent.addListener(elt, 'cut', resizeHandler);\n\t\tmxEvent.addListener(elt, 'paste', resizeHandler);\n\t}\n};\n\n/**\n * Function: isStopEditingEvent\n * \n * Returns true if the given keydown event should stop cell editing. This\n * returns true if F2 is pressed of if <mxGraph.enterStopsCellEditing> is true\n * and enter is pressed without control or shift.\n */\nmxCellEditor.prototype.isStopEditingEvent = function(evt)\n{\n\treturn evt.keyCode == 113 /* F2 */ || (this.graph.isEnterStopsCellEditing() &&\n\t\tevt.keyCode == 13 /* Enter */ && !mxEvent.isControlDown(evt) &&\n\t\t!mxEvent.isShiftDown(evt));\n};\n\n/**\n * Function: isEventSource\n * \n * Returns true if this editor is the source for the given native event.\n */\nmxCellEditor.prototype.isEventSource = function(evt)\n{\n\treturn mxEvent.getSource(evt) == this.textarea;\n};\n\n/**\n * Function: resize\n * \n * Returns <modified>.\n */\nmxCellEditor.prototype.resize = function()\n{\n\tvar state = this.graph.getView().getState(this.editingCell);\n\t\n\tif (state == null)\n\t{\n\t\tthis.stopEditing(true);\n\t}\n\telse if (this.textarea != null)\n\t{\n\t\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n \t\tvar scale = this.graph.getView().scale;\n \t\tvar m = null;\n\t\t\n\t\tif (!this.autoSize || (state.style[mxConstants.STYLE_OVERFLOW] == 'fill'))\n\t\t{\n\t\t\t// Specifies the bounds of the editor box\n\t\t\tthis.bounds = this.getEditorBounds(state);\n\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + 'px';\n\t\t\tthis.textarea.style.height = Math.round(this.bounds.height / scale) + 'px';\n\t\t\t\n\t\t\t// FIXME: Offset when scaled\n\t\t\tif (document.documentMode == 8 || mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.round(this.bounds.x) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.round(this.bounds.y) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x + 1)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y + 1)) + 'px';\n\t\t\t}\n\t\t\t\n\t\t\t// Installs native word wrapping and avoids word wrap for empty label placeholder\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + this.wordWrapPadding + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t \t{\n\t \t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\tm = (state.text != null) ? state.text.margin : null;\n\t\t\t\n\t\t\tif (m == null)\n\t\t\t{\n\t\t\t\tm = mxUtils.getAlignmentAsPoint(mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_CENTER),\n\t\t\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE));\n\t\t\t}\n\t\t\t\n\t \t\tif (isEdge)\n\t\t\t{\n\t\t\t\tthis.bounds = new mxRectangle(state.absoluteOffset.x, state.absoluteOffset.y, 0, 0);\n\t\t\t\t\n\t\t\t\tif (lw != null)\n\t\t\t \t{\n\t\t\t\t\tvar tmp = (parseFloat(lw) + 2) * scale;\n\t\t\t\t\tthis.bounds.width = tmp;\n\t\t\t\t\tthis.bounds.x += m.x * tmp;\n\t\t\t \t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar bds = mxRectangle.fromRectangle(state);\n\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\tbds = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(bds) : bds;\n\t\t\t \t\n\t\t\t \tif (lw != null)\n\t\t\t \t{\n\t\t\t \t\tbds.width = parseFloat(lw) * scale;\n\t\t\t \t}\n\t\t\t \t\n\t\t\t \tif (!state.view.graph.cellRenderer.legacySpacing || state.style[mxConstants.STYLE_OVERFLOW] != 'width')\n\t\t\t \t{\n\t\t\t\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 2) * scale;\n\t\t\t\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\t\t\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\t\t\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\t\t\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\t\t\t\t\n\t\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\t\tbds = new mxRectangle(bds.x + spacingLeft, bds.y + spacingTop,\n\t\t\t\t\t\tbds.width - ((hpos == mxConstants.ALIGN_CENTER && lw == null) ? (spacingLeft + spacingRight) : 0),\n\t\t\t\t\t\tbds.height - ((vpos == mxConstants.ALIGN_MIDDLE) ? (spacingTop + spacingBottom) : 0));\n\t\t\t \t}\n\n\t\t\t\tthis.bounds = new mxRectangle(bds.x + state.absoluteOffset.x, bds.y + state.absoluteOffset.y, bds.width, bds.height);\n\t\t\t}\n\n\t\t\t// Needed for word wrap inside text blocks with oversize lines to match the final result where\n\t \t\t// the width of the longest line is used as the reference for text alignment in the cell\n\t \t\t// TODO: Fix word wrapping preview for edge labels in helloworld.html\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t \t\t// Forces automatic reflow if text is removed from an oversize label and normal word wrap\n\t\t\t\tvar tmp = Math.round(this.bounds.width / ((document.documentMode == 8) ? scale : scale)) + this.wordWrapPadding;\n\n\t\t\t\tif (this.textarea.style.position != 'relative')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = tmp + 'px';\n\t\t\t\t\t\n\t\t\t\t\tif (this.textarea.scrollWidth > tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.textarea.style.width = this.textarea.scrollWidth + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.maxWidth = tmp + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// KNOWN: Trailing cursor in IE9 quirks mode is not visible\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\tthis.textarea.style.width = '';\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\t// Workaround for wrong measuring in IE8 standards\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\tthis.textarea.style.zoom = '1';\n\t\t\t\tthis.textarea.style.height = 'auto';\n\t\t\t}\n\t\t\t\n\t\t\tvar ow = this.textarea.scrollWidth;\n\t\t\tvar oh = this.textarea.scrollHeight;\n\t\t\t\n\t\t\t// TODO: Update CSS width and height if smaller than minResize or remove minResize\n\t\t\t//if (this.minResize != null)\n\t\t\t//{\n\t\t\t//\tow = Math.max(ow, this.minResize.width);\n\t\t\t//\toh = Math.max(oh, this.minResize.height);\n\t\t\t//}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\t// LATER: Scaled wrapping and position is wrong in IE8\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil((this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2) / scale)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil((this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1) / scale)) + 'px';\n\t\t\t\t// Workaround for wrong event handling width and height\n\t\t\t\tthis.textarea.style.width = Math.round(ow * scale) + 'px';\n\t\t\t\tthis.textarea.style.height = Math.round(oh * scale) + 'px';\n\t\t\t}\n\t\t\telse if (mxClient.IS_QUIRKS)\n\t\t\t{\t\t\t\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil(this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil(this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1)) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x - m.x * (this.bounds.width - 2)) + 1) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y - m.y * (this.bounds.height - 4) + ((m.y == -1) ? 3 : 0)) + 1) + 'px';\n\t\t\t}\n\t \t}\n\n\t\tif (mxClient.IS_VML)\n\t\t{\n\t\t\tthis.textarea.style.zoom = scale;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transformOrigin', '0px 0px');\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transform',\n\t\t\t\t'scale(' + scale + ',' + scale + ')' + ((m == null) ? '' :\n\t\t\t\t' translate(' + (m.x * 100) + '%,' + (m.y * 100) + '%)'));\n\t\t}\n\t}\n};\n\n/**\n * Function: focusLost\n *\n * Called if the textarea has lost focus.\n */\nmxCellEditor.prototype.focusLost = function()\n{\n\tthis.stopEditing(!this.graph.isInvokesStopCellEditing());\n};\n\n/**\n * Function: getBackgroundColor\n * \n * Returns the background color for the in-place editor. This implementation\n * always returns null.\n */\nmxCellEditor.prototype.getBackgroundColor = function(state)\n{\n\treturn null;\n};\n\n/**\n * Function: isLegacyEditor\n * \n * Returns true if max-width is not supported or if the SVG root element in\n * in the graph does not have CSS position absolute. In these cases the text\n * editor must use CSS position absolute to avoid an offset but it will have\n * a less accurate line wrapping width during the text editing preview. This\n * implementation returns true for IE8- and quirks mode or if the CSS position\n * of the SVG element is not absolute.\n */\nmxCellEditor.prototype.isLegacyEditor = function()\n{\n\tif (mxClient.IS_VML)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\tvar absoluteRoot = false;\n\t\t\n\t\tif (mxClient.IS_SVG)\n\t\t{\n\t\t\tvar root = this.graph.view.getDrawPane().ownerSVGElement;\n\t\t\t\n\t\t\tif (root != null)\n\t\t\t{\n\t\t\t\tabsoluteRoot = mxUtils.getCurrentStyle(root).position == 'absolute';\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn !absoluteRoot;\n\t}\n};\n\n/**\n * Function: startEditing\n *\n * Starts the editor for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> to start editing.\n * trigger - Optional mouse event that triggered the editor.\n */\nmxCellEditor.prototype.startEditing = function(cell, trigger)\n{\n\tthis.stopEditing(true);\n\t\n\t// Creates new textarea instance\n\tif (this.textarea == null)\n\t{\n\t\tthis.init();\n\t}\n\t\n\tif (this.graph.tooltipHandler != null)\n\t{\n\t\tthis.graph.tooltipHandler.hideTooltip();\n\t}\n\t\n\tvar state = this.graph.getView().getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\t// Configures the style of the in-place editor\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar size = mxUtils.getValue(state.style, mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE);\n\t\tvar family = mxUtils.getValue(state.style, mxConstants.STYLE_FONTFAMILY, mxConstants.DEFAULT_FONTFAMILY);\n\t\tvar color = mxUtils.getValue(state.style, mxConstants.STYLE_FONTCOLOR, 'black');\n\t\tvar align = mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_LEFT);\n\t\tvar bold = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_BOLD) == mxConstants.FONT_BOLD;\n\t\tvar italic = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC;\n\t\tvar uline = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE;\n\t\t\n\t\tthis.textarea.style.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? Math.round(size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\t\tthis.textarea.style.backgroundColor = this.getBackgroundColor(state);\n\t\tthis.textarea.style.textDecoration = (uline) ? 'underline' : '';\n\t\tthis.textarea.style.fontWeight = (bold) ? 'bold' : 'normal';\n\t\tthis.textarea.style.fontStyle = (italic) ? 'italic' : '';\n\t\tthis.textarea.style.fontSize = Math.round(size) + 'px';\n\t\tthis.textarea.style.zIndex = this.zIndex;\n\t\tthis.textarea.style.fontFamily = family;\n\t\tthis.textarea.style.textAlign = align;\n\t\tthis.textarea.style.outline = 'none';\n\t\tthis.textarea.style.color = color;\n\t\t\n\t\tvar dir = this.textDirection = mxUtils.getValue(state.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO)\n\t\t{\n\t\t\tif (state != null && state.text != null && state.text.dialect != mxConstants.DIALECT_STRICTHTML &&\n\t\t\t\t!mxUtils.isNode(state.text.value))\n\t\t\t{\n\t\t\t\tdir = state.text.getAutoDirection();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tthis.textarea.setAttribute('dir', dir);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.textarea.removeAttribute('dir');\n\t\t}\n\n\t\t// Sets the initial editing value\n\t\tthis.textarea.innerHTML = this.getInitialValue(state, trigger) || '';\n\t\tthis.initialValue = this.textarea.innerHTML;\n\n\t\t// Uses an optional text value for empty labels which is cleared\n\t\t// when the first keystroke appears. This makes it easier to see\n\t\t// that a label is being edited even if the label is empty.\n\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t{\n\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\tthis.clearOnChange = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.clearOnChange = this.textarea.innerHTML == this.getEmptyLabelText();\n\t\t}\n\n\t\tthis.graph.container.appendChild(this.textarea);\n\t\t\n\t\t// Update this after firing all potential events that could update the cleanOnChange flag\n\t\tthis.editingCell = cell;\n\t\tthis.trigger = trigger;\n\t\tthis.textNode = null;\n\n\t\tif (state.text != null && this.isHideLabel(state))\n\t\t{\n\t\t\tthis.textNode = state.text.node;\n\t\t\tthis.textNode.style.visibility = 'hidden';\n\t\t}\n\n\t\t// Workaround for initial offsetHeight not ready for heading in markup\n\t\tif (this.autoSize && (this.graph.model.isEdge(state.cell) || state.style[mxConstants.STYLE_OVERFLOW] != 'fill'))\n\t\t{\n\t\t\twindow.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t\t\n\t\tthis.resize();\n\t\t\n\t\t// Workaround for NS_ERROR_FAILURE in FF\n\t\ttry\n\t\t{\n\t\t\t// Prefers blinking cursor over no selected text if empty\n\t\t\tthis.textarea.focus();\n\t\t\t\n\t\t\tif (this.isSelectText() && this.textarea.innerHTML.length > 0 &&\n\t\t\t\t(this.textarea.innerHTML != this.getEmptyLabelText() || !this.clearOnChange))\n\t\t\t{\n\t\t\t\tdocument.execCommand('selectAll', false, null);\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\t}\n};\n\n/**\n * Function: isSelectText\n * \n * Returns <selectText>.\n */\nmxCellEditor.prototype.isSelectText = function()\n{\n\treturn this.selectText;\n};\n\n/**\n * Function: isSelectText\n * \n * Returns <selectText>.\n */\nmxCellEditor.prototype.clearSelection = function()\n{\n\tvar selection = null;\n\t\n\tif (window.getSelection)\n\t{\n\t\tselection = window.getSelection();\n\t}\n\telse if (document.selection)\n\t{\n\t\tselection = document.selection;\n\t}\n\t\n\tif (selection != null)\n\t{\n\t\tif (selection.empty)\n\t\t{\n\t\t\tselection.empty();\n\t\t}\n\t\telse if (selection.removeAllRanges)\n\t\t{\n\t\t\tselection.removeAllRanges();\n\t\t}\n\t}\n};\n\n/**\n * Function: stopEditing\n *\n * Stops the editor and applies the value if cancel is false.\n */\nmxCellEditor.prototype.stopEditing = function(cancel)\n{\n\tcancel = cancel || false;\n\t\n\tif (this.editingCell != null)\n\t{\n\t\tif (this.textNode != null)\n\t\t{\n\t\t\tthis.textNode.style.visibility = 'visible';\n\t\t\tthis.textNode = null;\n\t\t}\n\n\t\tvar state = (!cancel) ? this.graph.view.getState(this.editingCell) : null;\n\n\t\tvar initial = this.initialValue;\n\t\tthis.initialValue = null;\n\t\tthis.editingCell = null;\n\t\tthis.trigger = null;\n\t\tthis.bounds = null;\n\t\tthis.textarea.blur();\n\t\tthis.clearSelection();\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tif (this.clearOnChange && this.textarea.innerHTML == this.getEmptyLabelText())\n\t\t{\n\t\t\tthis.textarea.innerHTML = '';\n\t\t\tthis.clearOnChange = false;\n\t\t}\n\t\t\n\t\tif (state != null && this.textarea.innerHTML != initial)\n\t\t{\n\t\t\tthis.prepareTextarea();\n\t\t\tvar value = this.getCurrentValue(state);\n\t\t\t\n\t\t\tif (value != null)\n\t\t\t{\n\t\t\t\tthis.applyValue(state, value);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Forces new instance on next edit for undo history reset\n\t\tmxEvent.release(this.textarea);\n\t\tthis.textarea = null;\n\t}\n};\n\n/**\n * Function: prepareTextarea\n * \n * Prepares the textarea for getting its value in <stopEditing>.\n * This implementation removes the extra trailing linefeed in Firefox.\n */\nmxCellEditor.prototype.prepareTextarea = function()\n{\n\tif (mxClient.IS_FF && this.textarea.lastChild != null &&\n\t\tthis.textarea.lastChild.nodeName == 'BR')\n\t{\n\t\tthis.textarea.removeChild(this.textarea.lastChild);\n\t}\n};\n\n/**\n * Function: isHideLabel\n * \n * Returns true if the label should be hidden while the cell is being\n * edited.\n */\nmxCellEditor.prototype.isHideLabel = function(state)\n{\n\treturn true;\n};\n\n/**\n * Function: getMinimumSize\n * \n * Returns the minimum width and height for editing the given state.\n */\nmxCellEditor.prototype.getMinimumSize = function(state)\n{\n\tvar scale = this.graph.getView().scale;\n\t\n\treturn new mxRectangle(0, 0, (state.text == null) ? 30 : state.text.size * scale + 20,\n\t\t\t(this.textarea.style.textAlign == 'left') ? 120 : 40);\n};\n\n/**\n * Function: getEditorBounds\n * \n * Returns the <mxRectangle> that defines the bounds of the editor.\n */\nmxCellEditor.prototype.getEditorBounds = function(state)\n{\n\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n\tvar scale = this.graph.getView().scale;\n\tvar minSize = this.getMinimumSize(state);\n\tvar minWidth = minSize.width;\n \tvar minHeight = minSize.height;\n \tvar result = null;\n \t\n \tif (!isEdge && state.view.graph.cellRenderer.legacySpacing && state.style[mxConstants.STYLE_OVERFLOW] == 'fill')\n \t{\n \t\tresult = state.shape.getLabelBounds(mxRectangle.fromRectangle(state));\n \t}\n \telse\n \t{\n\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 0) * scale;\n\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\n\t \tresult = new mxRectangle(state.x, state.y,\n\t \t\t Math.max(minWidth, state.width - spacingLeft - spacingRight),\n\t \t\t Math.max(minHeight, state.height - spacingTop - spacingBottom));\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\t\n\t\tresult = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(result) : result;\n\t\n\t\tif (isEdge)\n\t\t{\n\t\t\tresult.x = state.absoluteOffset.x;\n\t\t\tresult.y = state.absoluteOffset.y;\n\t\n\t\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t\t{\n\t\t\t\t// Workaround for label containing just spaces in which case\n\t\t\t\t// the bounding box location contains negative numbers \n\t\t\t\tif (state.text.boundingBox.x > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.x = state.text.boundingBox.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.y > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.y = state.text.boundingBox.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tresult.x = Math.min(result.x, state.text.boundingBox.x);\n\t\t\tresult.y = Math.min(result.y, state.text.boundingBox.y);\n\t\t}\n\t\n\t\tresult.x += spacingLeft;\n\t\tresult.y += spacingTop;\n\t\n\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tif (!isEdge)\n\t\t\t{\n\t\t\t\tresult.width = Math.max(result.width, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(result.height, state.text.boundingBox.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.width = Math.max(minWidth, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(minHeight, state.text.boundingBox.height);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Applies the horizontal and vertical label positions\n\t\tif (this.graph.getModel().isVertex(state.cell))\n\t\t{\n\t\t\tvar horizontal = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\n\t\t\tif (horizontal == mxConstants.ALIGN_LEFT)\n\t\t\t{\n\t\t\t\tresult.x -= state.width;\n\t\t\t}\n\t\t\telse if (horizontal == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tresult.x += state.width;\n\t\t\t}\n\t\n\t\t\tvar vertical = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\n\t\t\tif (vertical == mxConstants.ALIGN_TOP)\n\t\t\t{\n\t\t\t\tresult.y -= state.height;\n\t\t\t}\n\t\t\telse if (vertical == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tresult.y += state.height;\n\t\t\t}\n\t\t}\n \t}\n \t\n \treturn new mxRectangle(Math.round(result.x), Math.round(result.y), Math.round(result.width), Math.round(result.height));\n};\n\n/**\n * Function: getEmptyLabelText\n *\n * Returns the initial label value to be used of the label of the given\n * cell is empty. This label is displayed and cleared on the first keystroke.\n * This implementation returns <emptyLabelText>.\n * \n * Parameters:\n * \n * cell - <mxCell> for which a text for an empty editing box should be\n * returned.\n */\nmxCellEditor.prototype.getEmptyLabelText = function (cell)\n{\n\treturn this.emptyLabelText;\n};\n\n/**\n * Function: getEditingCell\n *\n * Returns the cell that is currently being edited or null if no cell is\n * being edited.\n */\nmxCellEditor.prototype.getEditingCell = function ()\n{\n\treturn this.editingCell;\n};\n\n/**\n * Function: destroy\n *\n * Destroys the editor and removes all associated resources.\n */\nmxCellEditor.prototype.destroy = function ()\n{\n\tif (this.textarea != null)\n\t{\n\t\tmxEvent.release(this.textarea);\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tthis.textarea = null;\n\n\t}\n\t\t\t\n\tif (this.changeHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t\tthis.changeHandler = null;\n\t}\n\n\tif (this.zoomHandler)\n\t{\n\t\tthis.graph.view.removeListener(this.zoomHandler);\n\t\tthis.zoomHandler = null;\n\t}\n};\n\n__mxOutput.mxCellEditor = typeof mxCellEditor !== 'undefined' ? mxCellEditor : undefined;\n\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxCellRenderer\n * \n * Renders cells into a document object model. The <defaultShapes> is a global\n * map of shapename, constructor pairs that is used in all instances. You can\n * get a list of all available shape names using the following code.\n * \n * In general the cell renderer is in charge of creating, redrawing and\n * destroying the shape and label associated with a cell state, as well as\n * some other graphical objects, namely controls and overlays. The shape\n * hieararchy in the display (ie. the hierarchy in which the DOM nodes\n * appear in the document) does not reflect the cell hierarchy. The shapes\n * are a (flat) sequence of shapes and labels inside the draw pane of the\n * graph view, with some exceptions, namely the HTML labels being placed\n * directly inside the graph container for certain browsers.\n * \n * (code)\n * mxLog.show();\n * for (var i in mxCellRenderer.defaultShapes)\n * {\n *   mxLog.debug(i);\n * }\n * (end)\n *\n * Constructor: mxCellRenderer\n * \n * Constructs a new cell renderer with the following built-in shapes:\n * arrow, rectangle, ellipse, rhombus, image, line, label, cylinder,\n * swimlane, connector, actor and cloud.\n */\nfunction mxCellRenderer() { };\n\n/**\n * Variable: defaultShapes\n * \n * Static array that contains the globally registered shapes which are\n * known to all instances of this class. For adding new shapes you should\n * use the static <mxCellRenderer.registerShape> function.\n */\nmxCellRenderer.defaultShapes = new Object();\n\n/**\n * Variable: defaultEdgeShape\n * \n * Defines the default shape for edges. Default is <mxConnector>.\n */\nmxCellRenderer.prototype.defaultEdgeShape = mxConnector;\n\n/**\n * Variable: defaultVertexShape\n * \n * Defines the default shape for vertices. Default is <mxRectangleShape>.\n */\nmxCellRenderer.prototype.defaultVertexShape = mxRectangleShape;\n\n/**\n * Variable: defaultTextShape\n * \n * Defines the default shape for labels. Default is <mxText>.\n */\nmxCellRenderer.prototype.defaultTextShape = mxText;\n\n/**\n * Variable: legacyControlPosition\n * \n * Specifies if the folding icon should ignore the horizontal\n * orientation of a swimlane. Default is true.\n */\nmxCellRenderer.prototype.legacyControlPosition = true;\n\n/**\n * Variable: legacySpacing\n * \n * Specifies if spacing and label position should be ignored if overflow is\n * fill or width. Default is true for backwards compatiblity.\n */\nmxCellRenderer.prototype.legacySpacing = true;\n\n/**\n * Variable: antiAlias\n * \n * Anti-aliasing option for new shapes. Default is true.\n */\nmxCellRenderer.prototype.antiAlias = true;\n\n/**\n * Variable: minSvgStrokeWidth\n * \n * Minimum stroke width for SVG output.\n */\nmxCellRenderer.prototype.minSvgStrokeWidth = 1;\n\n/**\n * Variable: forceControlClickHandler\n * \n * Specifies if the enabled state of the graph should be ignored in the control\n * click handler (to allow folding in disabled graphs). Default is false.\n */\nmxCellRenderer.prototype.forceControlClickHandler = false;\n\n/**\n * Function: registerShape\n * \n * Registers the given constructor under the specified key in this instance\n * of the renderer.\n * \n * Example:\n * \n * (code)\n * mxCellRenderer.registerShape(mxConstants.SHAPE_RECTANGLE, mxRectangleShape);\n * (end)\n * \n * Parameters:\n * \n * key - String representing the shape name.\n * shape - Constructor of the <mxShape> subclass.\n */\nmxCellRenderer.registerShape = function(key, shape)\n{\n\tmxCellRenderer.defaultShapes[key] = shape;\n};\n\n// Adds default shapes into the default shapes array\nmxCellRenderer.registerShape(mxConstants.SHAPE_RECTANGLE, mxRectangleShape);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ELLIPSE, mxEllipse);\nmxCellRenderer.registerShape(mxConstants.SHAPE_RHOMBUS, mxRhombus);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CYLINDER, mxCylinder);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CONNECTOR, mxConnector);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ACTOR, mxActor);\nmxCellRenderer.registerShape(mxConstants.SHAPE_TRIANGLE, mxTriangle);\nmxCellRenderer.registerShape(mxConstants.SHAPE_HEXAGON, mxHexagon);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CLOUD, mxCloud);\nmxCellRenderer.registerShape(mxConstants.SHAPE_LINE, mxLine);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ARROW, mxArrow);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ARROW_CONNECTOR, mxArrowConnector);\nmxCellRenderer.registerShape(mxConstants.SHAPE_DOUBLE_ELLIPSE, mxDoubleEllipse);\nmxCellRenderer.registerShape(mxConstants.SHAPE_SWIMLANE, mxSwimlane);\nmxCellRenderer.registerShape(mxConstants.SHAPE_IMAGE, mxImageShape);\nmxCellRenderer.registerShape(mxConstants.SHAPE_LABEL, mxLabel);\n\n/**\n * Function: initializeShape\n * \n * Initializes the shape in the given state by calling its init method with\n * the correct container after configuring it using <configureShape>.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be initialized.\n */\nmxCellRenderer.prototype.initializeShape = function(state)\n{\n\tstate.shape.dialect = state.view.graph.dialect;\n\tthis.configureShape(state);\n\tstate.shape.init(state.view.getDrawPane());\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be created.\n */\nmxCellRenderer.prototype.createShape = function(state)\n{\n\tvar shape = null;\n\t\n\tif (state.style != null)\n\t{\n\t\t// Checks if there is a stencil for the name and creates\n\t\t// a shape instance for the stencil if one exists\n\t\tvar stencil = mxStencilRegistry.getStencil(state.style[mxConstants.STYLE_SHAPE]);\n\t\t\n\t\tif (stencil != null)\n\t\t{\n\t\t\tshape = new mxShape(stencil);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar ctor = this.getShapeConstructor(state);\n\t\t\tshape = new ctor();\n\t\t}\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: createIndicatorShape\n * \n * Creates the indicator shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the indicator shape should be created.\n */\nmxCellRenderer.prototype.createIndicatorShape = function(state)\n{\n\tstate.shape.indicatorShape = this.getShape(state.view.graph.getIndicatorShape(state));\n};\n\n/**\n * Function: getShape\n * \n * Returns the shape for the given name from <defaultShapes>.\n */\nmxCellRenderer.prototype.getShape = function(name)\n{\n\treturn (name != null) ? mxCellRenderer.defaultShapes[name] : null;\n};\n\n/**\n * Function: getShapeConstructor\n * \n * Returns the constructor to be used for creating the shape.\n */\nmxCellRenderer.prototype.getShapeConstructor = function(state)\n{\n\tvar ctor = this.getShape(state.style[mxConstants.STYLE_SHAPE]);\n\t\n\tif (ctor == null)\n\t{\n\t\tctor = (state.view.graph.getModel().isEdge(state.cell)) ?\n\t\t\tthis.defaultEdgeShape : this.defaultVertexShape;\n\t}\n\t\n\treturn ctor;\n};\n\n/**\n * Function: configureShape\n * \n * Configures the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be configured.\n */\nmxCellRenderer.prototype.configureShape = function(state)\n{\n\tstate.shape.apply(state);\n\tstate.shape.image = state.view.graph.getImage(state);\n\tstate.shape.indicatorColor = state.view.graph.getIndicatorColor(state);\n\tstate.shape.indicatorStrokeColor = state.style[mxConstants.STYLE_INDICATOR_STROKECOLOR];\n\tstate.shape.indicatorGradientColor = state.view.graph.getIndicatorGradientColor(state);\n\tstate.shape.indicatorDirection = state.style[mxConstants.STYLE_INDICATOR_DIRECTION];\n\tstate.shape.indicatorImage = state.view.graph.getIndicatorImage(state);\n\n\tthis.postConfigureShape(state);\n};\n\n/**\n * Function: postConfigureShape\n * \n * Replaces any reserved words used for attributes, eg. inherit,\n * indicated or swimlane for colors in the shape for the given state.\n * This implementation resolves these keywords on the fill, stroke\n * and gradient color keys.\n */\nmxCellRenderer.prototype.postConfigureShape = function(state)\n{\n\tif (state.shape != null)\n\t{\n\t\tthis.resolveColor(state, 'indicatorColor', mxConstants.STYLE_FILLCOLOR);\n\t\tthis.resolveColor(state, 'indicatorGradientColor', mxConstants.STYLE_GRADIENTCOLOR);\n\t\tthis.resolveColor(state, 'fill', mxConstants.STYLE_FILLCOLOR);\n\t\tthis.resolveColor(state, 'stroke', mxConstants.STYLE_STROKECOLOR);\n\t\tthis.resolveColor(state, 'gradient', mxConstants.STYLE_GRADIENTCOLOR);\n\t}\n};\n\n/**\n * Function: checkPlaceholderStyles\n * \n * Resolves special keywords 'inherit', 'indicated' and 'swimlane' and sets\n * the respective color on the shape.\n */\nmxCellRenderer.prototype.checkPlaceholderStyles = function(state)\n{\n\t// LATER: Check if the color has actually changed\n\tif (state.style != null)\n\t{\n\t\tvar values = ['inherit', 'swimlane', 'indicated'];\n\t\tvar styles = [mxConstants.STYLE_FILLCOLOR, mxConstants.STYLE_STROKECOLOR, mxConstants.STYLE_GRADIENTCOLOR];\n\t\t\n\t\tfor (var i = 0; i < styles.length; i++)\n\t\t{\n\t\t\tif (mxUtils.indexOf(values, state.style[styles[i]]) >= 0)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: resolveColor\n * \n * Resolves special keywords 'inherit', 'indicated' and 'swimlane' and sets\n * the respective color on the shape.\n */\nmxCellRenderer.prototype.resolveColor = function(state, field, key)\n{\n\tvar value = state.shape[field];\n\tvar graph = state.view.graph;\n\tvar referenced = null;\n\t\n\tif (value == 'inherit')\n\t{\n\t\treferenced = graph.model.getParent(state.cell);\n\t}\n\telse if (value == 'swimlane')\n\t{\n\t\tstate.shape[field] = (key == mxConstants.STYLE_STROKECOLOR) ? '#000000' : '#ffffff';\n\t\t\n\t\tif (graph.model.getTerminal(state.cell, false) != null)\n\t\t{\n\t\t\treferenced = graph.model.getTerminal(state.cell, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treferenced = state.cell;\n\t\t}\n\t\t\n\t\treferenced = graph.getSwimlane(referenced);\n\t\tkey = graph.swimlaneIndicatorColorAttribute;\n\t}\n\telse if (value == 'indicated')\n\t{\n\t\tstate.shape[field] = state.shape.indicatorColor;\n\t}\n\t\n\tif (referenced != null)\n\t{\n\t\tvar rstate = graph.getView().getState(referenced);\n\t\tstate.shape[field] = null;\n\n\t\tif (rstate != null)\n\t\t{\n\t\t\tif (rstate.shape != null && field != 'indicatorColor')\n\t\t\t{\n\t\t\t\tstate.shape[field] = rstate.shape[field];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape[field] = rstate.style[key];\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getLabelValue\n * \n * Returns the value to be used for the label.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the label should be created.\n */\nmxCellRenderer.prototype.getLabelValue = function(state)\n{\n\treturn state.view.graph.getLabel(state.cell);\n};\n\n/**\n * Function: createLabel\n * \n * Creates the label for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the label should be created.\n */\nmxCellRenderer.prototype.createLabel = function(state, value)\n{\n\tvar graph = state.view.graph;\n\tvar isEdge = graph.getModel().isEdge(state.cell);\n\t\n\tif (state.style[mxConstants.STYLE_FONTSIZE] > 0 || state.style[mxConstants.STYLE_FONTSIZE] == null)\n\t{\n\t\t// Avoids using DOM node for empty labels\n\t\tvar isForceHtml = (graph.isHtmlLabel(state.cell) || (value != null && mxUtils.isNode(value)));\n\n\t\tstate.text = new this.defaultTextShape(value, new mxRectangle(),\n\t\t\t\t(state.style[mxConstants.STYLE_ALIGN] || mxConstants.ALIGN_CENTER),\n\t\t\t\tgraph.getVerticalAlign(state),\n\t\t\t\tstate.style[mxConstants.STYLE_FONTCOLOR],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTFAMILY],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTSIZE],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTSTYLE],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_TOP],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_RIGHT],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_BOTTOM],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_LEFT],\n\t\t\t\tstate.style[mxConstants.STYLE_HORIZONTAL],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_BORDERCOLOR],\n\t\t\t\tgraph.isWrapping(state.cell) && graph.isHtmlLabel(state.cell),\n\t\t\t\tgraph.isLabelClipped(state.cell),\n\t\t\t\tstate.style[mxConstants.STYLE_OVERFLOW],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_PADDING],\n\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION));\n\t\tstate.text.opacity = mxUtils.getValue(state.style, mxConstants.STYLE_TEXT_OPACITY, 100);\n\t\tstate.text.dialect = (isForceHtml) ? mxConstants.DIALECT_STRICTHTML : state.view.graph.dialect;\n\t\tstate.text.style = state.style;\n\t\tstate.text.state = state;\n\t\tthis.initializeLabel(state, state.text);\n\t\t\n\t\t// Workaround for touch devices routing all events for a mouse gesture\n\t\t// (down, move, up) via the initial DOM node. IE additionally redirects\n\t\t// the event via the initial DOM node but the event source is the node\n\t\t// under the mouse, so we need to check if this is the case and force\n\t\t// getCellAt for the subsequent mouseMoves and the final mouseUp.\n\t\tvar forceGetCell = false;\n\t\t\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\tvar result = state;\n\n\t\t\tif (mxClient.IS_TOUCH || forceGetCell)\n\t\t\t{\n\t\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\t\n\t\t\t\t// Dispatches the drop event to the graph which\n\t\t\t\t// consumes and executes the source function\n\t\t\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\t\tresult = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\treturn result;\n\t\t};\n\t\t\n\t\t// TODO: Add handling for special touch device gestures\n\t\tmxEvent.addGestureListeners(state.text.node,\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t\t\tforceGetCell = graph.dialect != mxConstants.DIALECT_SVG &&\n\t\t\t\t\t\tmxEvent.getSource(evt).nodeName == 'IMG';\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t\t\tforceGetCell = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// Uses double click timeout in mxGraph for quirks mode\n\t\tif (graph.nativeDblClickEnabled)\n\t\t{\n\t\t\tmxEvent.addListener(state.text.node, 'dblclick',\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t\t{\n\t\t\t\t\t\tgraph.dblClick(evt, state.cell);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Function: initializeLabel\n * \n * Initiailzes the label with a suitable container.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be initialized.\n */\nmxCellRenderer.prototype.initializeLabel = function(state, shape)\n{\n\tif (mxClient.IS_SVG && mxClient.NO_FO && shape.dialect != mxConstants.DIALECT_SVG)\n\t{\n\t\tshape.init(state.view.graph.container);\n\t}\n\telse\n\t{\n\t\tshape.init(state.view.getDrawPane());\n\t}\n};\n\n/**\n * Function: createCellOverlays\n * \n * Creates the actual shape for showing the overlay for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the overlay should be created.\n */\nmxCellRenderer.prototype.createCellOverlays = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar overlays = graph.getCellOverlays(state.cell);\n\tvar dict = null;\n\t\n\tif (overlays != null)\n\t{\n\t\tdict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < overlays.length; i++)\n\t\t{\n\t\t\tvar shape = (state.overlays != null) ? state.overlays.remove(overlays[i]) : null;\n\t\t\t\n\t\t\tif (shape == null)\n\t\t\t{\n\t\t\t\tvar tmp = new mxImageShape(new mxRectangle(), overlays[i].image.src);\n\t\t\t\ttmp.dialect = state.view.graph.dialect;\n\t\t\t\ttmp.preserveImageAspect = false;\n\t\t\t\ttmp.overlay = overlays[i];\n\t\t\t\tthis.initializeOverlay(state, tmp);\n\t\t\t\tthis.installCellOverlayListeners(state, overlays[i], tmp);\n\t\n\t\t\t\tif (overlays[i].cursor != null)\n\t\t\t\t{\n\t\t\t\t\ttmp.node.style.cursor = overlays[i].cursor;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdict.put(overlays[i], tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdict.put(overlays[i], shape);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Removes unused\n\tif (state.overlays != null)\n\t{\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tshape.destroy();\n\t\t});\n\t}\n\t\n\tstate.overlays = dict;\n};\n\n/**\n * Function: initializeOverlay\n * \n * Initializes the given overlay.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the overlay should be created.\n * overlay - <mxImageShape> that represents the overlay.\n */\nmxCellRenderer.prototype.initializeOverlay = function(state, overlay)\n{\n\toverlay.init(state.view.getOverlayPane());\n};\n\n/**\n * Function: installOverlayListeners\n * \n * Installs the listeners for the given <mxCellState>, <mxCellOverlay> and\n * <mxShape> that represents the overlay.\n */\nmxCellRenderer.prototype.installCellOverlayListeners = function(state, overlay, shape)\n{\n\tvar graph  = state.view.graph;\n\t\n\tmxEvent.addListener(shape.node, 'click', function (evt)\n\t{\n\t\tif (graph.isEditing())\n\t\t{\n\t\t\tgraph.stopEditing(!graph.isInvokesStopCellEditing());\n\t\t}\n\t\t\n\t\toverlay.fireEvent(new mxEventObject(mxEvent.CLICK,\n\t\t\t\t'event', evt, 'cell', state.cell));\n\t});\n\t\n\tmxEvent.addGestureListeners(shape.node,\n\t\tfunction (evt)\n\t\t{\n\t\t\tmxEvent.consume(evt);\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE,\n\t\t\t\tnew mxMouseEvent(evt, state));\n\t\t});\n\t\n\tif (mxClient.IS_TOUCH)\n\t{\n\t\tmxEvent.addListener(shape.node, 'touchend', function (evt)\n\t\t{\n\t\t\toverlay.fireEvent(new mxEventObject(mxEvent.CLICK,\n\t\t\t\t\t'event', evt, 'cell', state.cell));\n\t\t});\n\t}\n};\n\n/**\n * Function: createControl\n * \n * Creates the control for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the control should be created.\n */\nmxCellRenderer.prototype.createControl = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar image = graph.getFoldingImage(state);\n\t\n\tif (graph.foldingEnabled && image != null)\n\t{\n\t\tif (state.control == null)\n\t\t{\n\t\t\tvar b = new mxRectangle(0, 0, image.width, image.height);\n\t\t\tstate.control = new mxImageShape(b, image.src);\n\t\t\tstate.control.preserveImageAspect = false;\n\t\t\tstate.control.dialect = graph.dialect;\n\n\t\t\tthis.initControl(state, state.control, true, this.createControlClickHandler(state));\n\t\t}\n\t}\n\telse if (state.control != null)\n\t{\n\t\tstate.control.destroy();\n\t\tstate.control = null;\n\t}\n};\n\n/**\n * Function: createControlClickHandler\n * \n * Hook for creating the click handler for the folding icon.\n * \n * Parameters:\n * \n * state - <mxCellState> whose control click handler should be returned.\n */\nmxCellRenderer.prototype.createControlClickHandler = function(state)\n{\n\tvar graph = state.view.graph;\n\t\n\treturn mxUtils.bind(this, function (evt)\n\t{\n\t\tif (this.forceControlClickHandler || graph.isEnabled())\n\t\t{\n\t\t\tvar collapse = !graph.isCellCollapsed(state.cell);\n\t\t\tgraph.foldCells(collapse, false, [state.cell], null, evt);\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t});\n};\n\n/**\n * Function: initControl\n * \n * Initializes the given control and returns the corresponding DOM node.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the control should be initialized.\n * control - <mxShape> to be initialized.\n * handleEvents - Boolean indicating if mousedown and mousemove should fire events via the graph.\n * clickHandler - Optional function to implement clicks on the control.\n */\nmxCellRenderer.prototype.initControl = function(state, control, handleEvents, clickHandler)\n{\n\tvar graph = state.view.graph;\n\t\n\t// In the special case where the label is in HTML and the display is SVG the image\n\t// should go into the graph container directly in order to be clickable. Otherwise\n\t// it is obscured by the HTML label that overlaps the cell.\n\tvar isForceHtml = graph.isHtmlLabel(state.cell) && mxClient.NO_FO &&\n\t\tgraph.dialect == mxConstants.DIALECT_SVG;\n\n\tif (isForceHtml)\n\t{\n\t\tcontrol.dialect = mxConstants.DIALECT_PREFERHTML;\n\t\tcontrol.init(graph.container);\n\t\tcontrol.node.style.zIndex = 1;\n\t}\n\telse\n\t{\n\t\tcontrol.init(state.view.getOverlayPane());\n\t}\n\n\tvar node = control.innerNode || control.node;\n\t\n\t// Workaround for missing click event on iOS is to check tolerance below\n\tif (clickHandler != null && !mxClient.IS_IOS)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\tnode.style.cursor = 'pointer';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(node, 'click', clickHandler);\n\t}\n\t\n\tif (handleEvents)\n\t{\n\t\tvar first = null;\n\n\t\tmxEvent.addGestureListeners(node,\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tfirst = new mxPoint(mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t},\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, state));\n\t\t\t},\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, state));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\n\t\t// Uses capture phase for event interception to stop bubble phase\n\t\tif (clickHandler != null && mxClient.IS_IOS)\n\t\t{\n\t\t\tnode.addEventListener('touchend', function(evt)\n\t\t\t{\n\t\t\t\tif (first != null)\n\t\t\t\t{\n\t\t\t\t\tvar tol = graph.tolerance;\n\t\t\t\t\t\n\t\t\t\t\tif (Math.abs(first.x - mxEvent.getClientX(evt)) < tol &&\n\t\t\t\t\t\tMath.abs(first.y - mxEvent.getClientY(evt)) < tol)\n\t\t\t\t\t{\n\t\t\t\t\t\tclickHandler.call(clickHandler, evt);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, true);\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: isShapeEvent\n * \n * Returns true if the event is for the shape of the given state. This\n * implementation always returns true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose shape fired the event.\n * evt - Mouse event which was fired.\n */\nmxCellRenderer.prototype.isShapeEvent = function(state, evt)\n{\n\treturn true;\n};\n\n/**\n * Function: isLabelEvent\n * \n * Returns true if the event is for the label of the given state. This\n * implementation always returns true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label fired the event.\n * evt - Mouse event which was fired.\n */\nmxCellRenderer.prototype.isLabelEvent = function(state, evt)\n{\n\treturn true;\n};\n\n/**\n * Function: installListeners\n * \n * Installs the event listeners for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the event listeners should be isntalled.\n */\nmxCellRenderer.prototype.installListeners = function(state)\n{\n\tvar graph = state.view.graph;\n\n\t// Workaround for touch devices routing all events for a mouse\n\t// gesture (down, move, up) via the initial DOM node. Same for\n\t// HTML images in all IE versions (VML images are working).\n\tvar getState = function(evt)\n\t{\n\t\tvar result = state;\n\t\t\n\t\tif ((graph.dialect != mxConstants.DIALECT_SVG && mxEvent.getSource(evt).nodeName == 'IMG') || mxClient.IS_TOUCH)\n\t\t{\n\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\n\t\t\t// Dispatches the drop event to the graph which\n\t\t\t// consumes and executes the source function\n\t\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\tresult = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\n\tmxEvent.addGestureListeners(state.shape.node,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t})\n\t);\n\t\n\t// Uses double click timeout in mxGraph for quirks mode\n\tif (graph.nativeDblClickEnabled)\n\t{\n\t\tmxEvent.addListener(state.shape.node, 'dblclick',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.dblClick(evt, state.cell);\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n};\n\n/**\n * Function: redrawLabel\n * \n * Redraws the label for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be redrawn.\n */\nmxCellRenderer.prototype.redrawLabel = function(state, forced)\n{\n\tvar graph = state.view.graph;\n\tvar value = this.getLabelValue(state);\n\tvar wrapping = graph.isWrapping(state.cell);\n\tvar clipping = graph.isLabelClipped(state.cell);\n\tvar isForceHtml = (state.view.graph.isHtmlLabel(state.cell) || (value != null && mxUtils.isNode(value)));\n\tvar dialect = (isForceHtml) ? mxConstants.DIALECT_STRICTHTML : state.view.graph.dialect;\n\tvar overflow = state.style[mxConstants.STYLE_OVERFLOW] || 'visible';\n\n\tif (state.text != null && (state.text.wrap != wrapping || state.text.clipped != clipping ||\n\t\tstate.text.overflow != overflow || state.text.dialect != dialect))\n\t{\n\t\tstate.text.destroy();\n\t\tstate.text = null;\n\t}\n\t\n\tif (state.text == null && value != null && (mxUtils.isNode(value) || value.length > 0))\n\t{\n\t\tthis.createLabel(state, value);\n\t}\n\telse if (state.text != null && (value == null || value.length == 0))\n\t{\n\t\tstate.text.destroy();\n\t\tstate.text = null;\n\t}\n\n\tif (state.text != null)\n\t{\n\t\t// Forced is true if the style has changed, so to get the updated\n\t\t// result in getLabelBounds we apply the new style to the shape\n\t\tif (forced)\n\t\t{\n\t\t\t// Checks if a full repaint is needed\n\t\t\tif (state.text.lastValue != null && this.isTextShapeInvalid(state, state.text))\n\t\t\t{\n\t\t\t\t// Forces a full repaint\n\t\t\t\tstate.text.lastValue = null;\n\t\t\t}\n\t\t\t\n\t\t\tstate.text.resetStyles();\n\t\t\tstate.text.apply(state);\n\t\t\t\n\t\t\t// Special case where value is obtained via hook in graph\n\t\t\tstate.text.valign = graph.getVerticalAlign(state);\n\t\t}\n\t\t\n\t\tvar bounds = this.getLabelBounds(state);\n\t\tvar nextScale = this.getTextScale(state);\n\t\t\n\t\tif (forced || state.text.value != value || state.text.isWrapping != wrapping ||\n\t\t\tstate.text.overflow != overflow || state.text.isClipping != clipping ||\n\t\t\tstate.text.scale != nextScale || state.text.dialect != dialect ||\n\t\t\t!state.text.bounds.equals(bounds))\n\t\t{\n\t\t\t// Forces an update of the text bounding box\n\t\t\tif (state.text.bounds.width != 0 && state.unscaledWidth != null &&\n\t\t\t\tMath.round((state.text.bounds.width /\n\t\t\t\tstate.text.scale * nextScale) - bounds.width) != 0)\n\t\t\t{\n\t\t\t\tstate.unscaledWidth = null;\n\t\t\t}\n\t\t\t\n\t\t\tstate.text.dialect = dialect;\n\t\t\tstate.text.value = value;\n\t\t\tstate.text.bounds = bounds;\n\t\t\tstate.text.scale = nextScale;\n\t\t\tstate.text.wrap = wrapping;\n\t\t\tstate.text.clipped = clipping;\n\t\t\tstate.text.overflow = overflow;\n\t\t\t\n\t\t\t// Preserves visible state\n\t\t\tvar vis = state.text.node.style.visibility;\n\t\t\tthis.redrawLabelShape(state.text);\n\t\t\tstate.text.node.style.visibility = vis;\n\t\t}\n\t}\n};\n\n/**\n * Function: isTextShapeInvalid\n * \n * Returns true if the style for the text shape has changed.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be checked.\n * shape - <mxText> shape to be checked.\n */\nmxCellRenderer.prototype.isTextShapeInvalid = function(state, shape)\n{\n\tfunction check(property, stylename, defaultValue)\n\t{\n\t\t// Workaround for spacing added to directional spacing\n\t\tif (stylename == 'spacingTop' || stylename == 'spacingRight' ||\n\t\t\tstylename == 'spacingBottom' || stylename == 'spacingLeft')\n\t\t{\n\t\t\tresult = parseFloat(shape[property]) - parseFloat(shape.spacing) !=\n\t\t\t\t(state.style[stylename] || defaultValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = shape[property] != (state.style[stylename] || defaultValue);\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\n\treturn check('fontStyle', mxConstants.STYLE_FONTSTYLE, mxConstants.DEFAULT_FONTSTYLE) ||\n\t\tcheck('family', mxConstants.STYLE_FONTFAMILY, mxConstants.DEFAULT_FONTFAMILY) ||\n\t\tcheck('size', mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE) ||\n\t\tcheck('color', mxConstants.STYLE_FONTCOLOR, 'black') ||\n\t\tcheck('align', mxConstants.STYLE_ALIGN, '') ||\n\t\tcheck('valign', mxConstants.STYLE_VERTICAL_ALIGN, '') ||\n\t\tcheck('spacing', mxConstants.STYLE_SPACING, 2) ||\n\t\tcheck('spacingTop', mxConstants.STYLE_SPACING_TOP, 0) ||\n\t\tcheck('spacingRight', mxConstants.STYLE_SPACING_RIGHT, 0) ||\n\t\tcheck('spacingBottom', mxConstants.STYLE_SPACING_BOTTOM, 0) ||\n\t\tcheck('spacingLeft', mxConstants.STYLE_SPACING_LEFT, 0) ||\n\t\tcheck('horizontal', mxConstants.STYLE_HORIZONTAL, true) ||\n\t\tcheck('background', mxConstants.STYLE_LABEL_BACKGROUNDCOLOR) ||\n\t\tcheck('border', mxConstants.STYLE_LABEL_BORDERCOLOR) ||\n\t\tcheck('opacity', mxConstants.STYLE_TEXT_OPACITY, 100) ||\n\t\tcheck('textDirection', mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n};\n\n/**\n * Function: redrawLabelShape\n * \n * Called to invoked redraw on the given text shape.\n * \n * Parameters:\n * \n * shape - <mxText> shape to be redrawn.\n */\nmxCellRenderer.prototype.redrawLabelShape = function(shape)\n{\n\tshape.redraw();\n};\n\n/**\n * Function: getTextScale\n * \n * Returns the scaling used for the label of the given state\n * \n * Parameters:\n * \n * state - <mxCellState> whose label scale should be returned.\n */\nmxCellRenderer.prototype.getTextScale = function(state)\n{\n\treturn state.view.scale;\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the bounds to be used to draw the label of the given state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label bounds should be returned.\n */\nmxCellRenderer.prototype.getLabelBounds = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar scale = state.view.scale;\n\tvar isEdge = graph.getModel().isEdge(state.cell);\n\tvar bounds = new mxRectangle(state.absoluteOffset.x, state.absoluteOffset.y);\n\n\tif (isEdge)\n\t{\n\t\tvar spacing = state.text.getSpacing();\n\t\tbounds.x += spacing.x * scale;\n\t\tbounds.y += spacing.y * scale;\n\t\t\n\t\tvar geo = graph.getCellGeometry(state.cell);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tbounds.width = Math.max(0, geo.width * scale);\n\t\t\tbounds.height = Math.max(0, geo.height * scale);\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Inverts label position\n\t\tif (state.text.isPaintBoundsInverted())\n\t\t{\n\t\t\tvar tmp = bounds.x;\n\t\t\tbounds.x = bounds.y;\n\t\t\tbounds.y = tmp;\n\t\t}\n\t\t\n\t\tbounds.x += state.x;\n\t\tbounds.y += state.y;\n\t\t\n\t\t// Minimum of 1 fixes alignment bug in HTML labels\n\t\tbounds.width = Math.max(1, state.width);\n\t\tbounds.height = Math.max(1, state.height);\n\n\t\tvar sc = mxUtils.getValue(state.style, mxConstants.STYLE_STROKECOLOR, mxConstants.NONE);\n\t\t\n\t\tif (sc != mxConstants.NONE && sc != '')\n\t\t{\n\t\t\tvar s = parseFloat(mxUtils.getValue(state.style, mxConstants.STYLE_STROKEWIDTH, 1)) * scale;\n\t\t\tvar dx = 1 + Math.floor((s - 1) / 2);\n\t\t\tvar dh = Math.floor(s + 1);\n\t\t\t\n\t\t\tbounds.x += dx;\n\t\t\tbounds.y += dx;\n\t\t\tbounds.width -= dh;\n\t\t\tbounds.height -= dh;\n\t\t}\n\t}\n\n\tif (state.text.isPaintBoundsInverted())\n\t{\n\t\t// Rotates around center of state\n\t\tvar t = (state.width - state.height) / 2;\n\t\tbounds.x += t;\n\t\tbounds.y -= t;\n\t\tvar tmp = bounds.width;\n\t\tbounds.width = bounds.height;\n\t\tbounds.height = tmp;\n\t}\n\t\n\t// Shape can modify its label bounds\n\tif (state.shape != null)\n\t{\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\t\n\t\tif (hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tbounds = state.shape.getLabelBounds(bounds);\n\t\t}\n\t}\n\t\n\t// Label width style overrides actual label width\n\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\n\tif (lw != null)\n\t{\n\t\tbounds.width = parseFloat(lw) * scale;\n\t}\n\t\n\tif (!isEdge)\n\t{\n\t\tthis.rotateLabelBounds(state, bounds);\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: rotateLabelBounds\n * \n * Adds the shape rotation to the given label bounds and\n * applies the alignment and offsets.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label bounds should be rotated.\n * bounds - <mxRectangle> the rectangle to be rotated.\n */\nmxCellRenderer.prototype.rotateLabelBounds = function(state, bounds)\n{\n\tbounds.y -= state.text.margin.y * bounds.height;\n\tbounds.x -= state.text.margin.x * bounds.width;\n\t\n\tif (!this.legacySpacing || (state.style[mxConstants.STYLE_OVERFLOW] != 'fill' && state.style[mxConstants.STYLE_OVERFLOW] != 'width'))\n\t{\n\t\tvar s = state.view.scale;\n\t\tvar spacing = state.text.getSpacing();\n\t\tbounds.x += spacing.x * s;\n\t\tbounds.y += spacing.y * s;\n\t\t\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tbounds.width = Math.max(0, bounds.width - ((hpos == mxConstants.ALIGN_CENTER && lw == null) ? (state.text.spacingLeft * s + state.text.spacingRight * s) : 0));\n\t\tbounds.height = Math.max(0, bounds.height - ((vpos == mxConstants.ALIGN_MIDDLE) ? (state.text.spacingTop * s + state.text.spacingBottom * s) : 0));\n\t}\n\n\tvar theta = state.text.getTextRotation();\n\n\t// Only needed if rotated around another center\n\tif (theta != 0 && state != null && state.view.graph.model.isVertex(state.cell))\n\t{\n\t\tvar cx = state.getCenterX();\n\t\tvar cy = state.getCenterY();\n\t\t\n\t\tif (bounds.x != cx || bounds.y != cy)\n\t\t{\n\t\t\tvar rad = theta * (Math.PI / 180);\n\t\t\tpt = mxUtils.getRotatedPoint(new mxPoint(bounds.x, bounds.y),\n\t\t\t\t\tMath.cos(rad), Math.sin(rad), new mxPoint(cx, cy));\n\t\t\t\n\t\t\tbounds.x = pt.x;\n\t\t\tbounds.y = pt.y;\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawCellOverlays\n * \n * Redraws the overlays for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose overlays should be redrawn.\n */\nmxCellRenderer.prototype.redrawCellOverlays = function(state, forced)\n{\n\tthis.createCellOverlays(state);\n\n\tif (state.overlays != null)\n\t{\n\t\tvar rot = mxUtils.mod(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0), 90);\n        var rad = mxUtils.toRadians(rot);\n        var cos = Math.cos(rad);\n        var sin = Math.sin(rad);\n\t\t\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tvar bounds = shape.overlay.getBounds(state);\n\t\t\n\t\t\tif (!state.view.graph.getModel().isEdge(state.cell))\n\t\t\t{\n\t\t\t\tif (state.shape != null && rot != 0)\n\t\t\t\t{\n\t\t\t\t\tvar cx = bounds.getCenterX();\n\t\t\t\t\tvar cy = bounds.getCenterY();\n\n\t\t\t\t\tvar point = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin,\n\t\t\t        \t\tnew mxPoint(state.getCenterX(), state.getCenterY()));\n\n\t\t\t        cx = point.x;\n\t\t\t        cy = point.y;\n\t\t\t        bounds.x = Math.round(cx - bounds.width / 2);\n\t\t\t        bounds.y = Math.round(cy - bounds.height / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (forced || shape.bounds == null || shape.scale != state.view.scale ||\n\t\t\t\t!shape.bounds.equals(bounds))\n\t\t\t{\n\t\t\t\tshape.bounds = bounds;\n\t\t\t\tshape.scale = state.view.scale;\n\t\t\t\tshape.redraw();\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Function: redrawControl\n * \n * Redraws the control for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose control should be redrawn.\n */\nmxCellRenderer.prototype.redrawControl = function(state, forced)\n{\n\tvar image = state.view.graph.getFoldingImage(state);\n\t\n\tif (state.control != null && image != null)\n\t{\n\t\tvar bounds = this.getControlBounds(state, image.width, image.height);\n\t\tvar r = (this.legacyControlPosition) ?\n\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0) :\n\t\t\t\tstate.shape.getTextRotation();\n\t\tvar s = state.view.scale;\n\t\t\n\t\tif (forced || state.control.scale != s || !state.control.bounds.equals(bounds) ||\n\t\t\tstate.control.rotation != r)\n\t\t{\n\t\t\tstate.control.rotation = r;\n\t\t\tstate.control.bounds = bounds;\n\t\t\tstate.control.scale = s;\n\t\t\t\n\t\t\tstate.control.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getControlBounds\n * \n * Returns the bounds to be used to draw the control (folding icon) of the\n * given state.\n */\nmxCellRenderer.prototype.getControlBounds = function(state, w, h)\n{\n\tif (state.control != null)\n\t{\n\t\tvar s = state.view.scale;\n\t\tvar cx = state.getCenterX();\n\t\tvar cy = state.getCenterY();\n\t\n\t\tif (!state.view.graph.getModel().isEdge(state.cell))\n\t\t{\n\t\t\tcx = state.x + w * s;\n\t\t\tcy = state.y + h * s;\n\t\t\t\n\t\t\tif (state.shape != null)\n\t\t\t{\n\t\t\t\t// TODO: Factor out common code\n\t\t\t\tvar rot = state.shape.getShapeRotation();\n\t\t\t\t\n\t\t\t\tif (this.legacyControlPosition)\n\t\t\t\t{\n\t\t\t\t\trot = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (state.shape.isPaintBoundsInverted())\n\t\t\t\t\t{\n\t\t\t\t\t\tvar t = (state.width - state.height) / 2;\n\t\t\t\t\t\tcx += t;\n\t\t\t\t\t\tcy -= t;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (rot != 0)\n\t\t\t\t{\n\t\t\t        var rad = mxUtils.toRadians(rot);\n\t\t\t        var cos = Math.cos(rad);\n\t\t\t        var sin = Math.sin(rad);\n\t\t\t        \n\t\t\t        var point = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin,\n\t\t\t        \t\tnew mxPoint(state.getCenterX(), state.getCenterY()));\n\t\t\t        cx = point.x;\n\t\t\t        cy = point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (state.view.graph.getModel().isEdge(state.cell)) ? \n\t\t\tnew mxRectangle(Math.round(cx - w / 2 * s), Math.round(cy - h / 2 * s), Math.round(w * s), Math.round(h * s))\n\t\t\t: new mxRectangle(Math.round(cx - w / 2 * s), Math.round(cy - h / 2 * s), Math.round(w * s), Math.round(h * s));\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: insertStateAfter\n * \n * Inserts the given array of <mxShapes> after the given nodes in the DOM.\n * \n * Parameters:\n * \n * shapes - Array of <mxShapes> to be inserted.\n * node - Node in <drawPane> after which the shapes should be inserted.\n * htmlNode - Node in the graph container after which the shapes should be inserted that\n * will not go into the <drawPane> (eg. HTML labels without foreignObjects).\n */\nmxCellRenderer.prototype.insertStateAfter = function(state, node, htmlNode)\n{\n\tvar shapes = this.getShapesForState(state);\n\t\n\tfor (var i = 0; i < shapes.length; i++)\n\t{\n\t\tif (shapes[i] != null && shapes[i].node != null)\n\t\t{\n\t\t\tvar html = shapes[i].node.parentNode != state.view.getDrawPane() &&\n\t\t\t\tshapes[i].node.parentNode != state.view.getOverlayPane();\n\t\t\tvar temp = (html) ? htmlNode : node;\n\t\t\t\n\t\t\tif (temp != null && temp.nextSibling != shapes[i].node)\n\t\t\t{\n\t\t\t\tif (temp.nextSibling == null)\n\t\t\t\t{\n\t\t\t\t\ttemp.parentNode.appendChild(shapes[i].node);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttemp.parentNode.insertBefore(shapes[i].node, temp.nextSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (temp == null)\n\t\t\t{\n\t\t\t\t// Special case: First HTML node should be first sibling after canvas\n\t\t\t\tif (shapes[i].node.parentNode == state.view.graph.container)\n\t\t\t\t{\n\t\t\t\t\tvar canvas = state.view.canvas;\n\t\t\t\t\t\n\t\t\t\t\twhile (canvas != null && canvas.parentNode != state.view.graph.container)\n\t\t\t\t\t{\n\t\t\t\t\t\tcanvas = canvas.parentNode;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (canvas != null && canvas.nextSibling != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (canvas.nextSibling != shapes[i].node)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshapes[i].node.parentNode.insertBefore(shapes[i].node, canvas.nextSibling);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tshapes[i].node.parentNode.appendChild(shapes[i].node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (shapes[i].node.parentNode.firstChild != null && shapes[i].node.parentNode.firstChild != shapes[i].node)\n\t\t\t\t{\n\t\t\t\t\t// Inserts the node as the first child of the parent to implement the order\n\t\t\t\t\tshapes[i].node.parentNode.insertBefore(shapes[i].node, shapes[i].node.parentNode.firstChild);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (html)\n\t\t\t{\n\t\t\t\thtmlNode = shapes[i].node;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode = shapes[i].node;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [node, htmlNode];\n};\n\n/**\n * Function: getShapesForState\n * \n * Returns the <mxShapes> for the given cell state in the order in which they should\n * appear in the DOM.\n * \n * Parameters:\n * \n * state - <mxCellState> whose shapes should be returned.\n */\nmxCellRenderer.prototype.getShapesForState = function(state)\n{\n\treturn [state.shape, state.text, state.control];\n};\n\n/**\n * Function: redraw\n * \n * Updates the bounds or points and scale of the shapes for the given cell\n * state. This is called in mxGraphView.validatePoints as the last step of\n * updating all cells.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shapes should be updated.\n * force - Optional boolean that specifies if the cell should be reconfiured\n * and redrawn without any additional checks.\n * rendering - Optional boolean that specifies if the cell should actually\n * be drawn into the DOM. If this is false then redraw and/or reconfigure\n * will not be called on the shape.\n */\nmxCellRenderer.prototype.redraw = function(state, force, rendering)\n{\n\tvar shapeChanged = this.redrawShape(state, force, rendering);\n\t\n\tif (state.shape != null && (rendering == null || rendering))\n\t{\n\t\tthis.redrawLabel(state, shapeChanged);\n\t\tthis.redrawCellOverlays(state, shapeChanged);\n\t\tthis.redrawControl(state, shapeChanged);\n\t}\n};\n\n/**\n * Function: redrawShape\n * \n * Redraws the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be redrawn.\n */\nmxCellRenderer.prototype.redrawShape = function(state, force, rendering)\n{\n\tvar model = state.view.graph.model;\n\tvar shapeChanged = false;\n\n\t// Forces creation of new shape if shape style has changed\n\tif (state.shape != null && state.shape.style != null && state.style != null &&\n\t\tstate.shape.style[mxConstants.STYLE_SHAPE] != state.style[mxConstants.STYLE_SHAPE])\n\t{\n\t\tstate.shape.destroy();\n\t\tstate.shape = null;\n\t}\n\t\n\tif (state.shape == null && state.view.graph.container != null &&\n\t\tstate.cell != state.view.currentRoot &&\n\t\t(model.isVertex(state.cell) || model.isEdge(state.cell)))\n\t{\n\t\tstate.shape = this.createShape(state);\n\t\t\n\t\tif (state.shape != null)\n\t\t{\n\t\t\tstate.shape.minSvgStrokeWidth = this.minSvgStrokeWidth;\n\t\t\tstate.shape.antiAlias = this.antiAlias;\n\t\n\t\t\tthis.createIndicatorShape(state);\n\t\t\tthis.initializeShape(state);\n\t\t\tthis.createCellOverlays(state);\n\t\t\tthis.installListeners(state);\n\t\t\t\n\t\t\t// Forces a refresh of the handler if one exists\n\t\t\tstate.view.graph.selectionCellsHandler.updateHandler(state);\n\t\t}\n\t}\n\telse if (!force && state.shape != null && (!mxUtils.equalEntries(state.shape.style,\n\t\tstate.style) || this.checkPlaceholderStyles(state)))\n\t{\n\t\tstate.shape.resetStyles();\n\t\tthis.configureShape(state);\n\t\t// LATER: Ignore update for realtime to fix reset of current gesture\n\t\tstate.view.graph.selectionCellsHandler.updateHandler(state);\n\t\tforce = true;\n\t}\n\n\tif (state.shape != null)\n\t{\n\t\t// Handles changes of the collapse icon\n\t\tthis.createControl(state);\n\t\t\n\t\t// Redraws the cell if required, ignores changes to bounds if points are\n\t\t// defined as the bounds are updated for the given points inside the shape\n\t\tif (force || this.isShapeInvalid(state, state.shape))\n\t\t{\n\t\t\tif (state.absolutePoints != null)\n\t\t\t{\n\t\t\t\tstate.shape.points = state.absolutePoints.slice();\n\t\t\t\tstate.shape.bounds = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape.points = null;\n\t\t\t\tstate.shape.bounds = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\t}\n\n\t\t\tstate.shape.scale = state.view.scale;\n\t\t\t\n\t\t\tif (rendering == null || rendering)\n\t\t\t{\n\t\t\t\tthis.doRedrawShape(state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape.updateBoundingBox();\n\t\t\t}\n\t\t\t\n\t\t\tshapeChanged = true;\n\t\t}\n\t}\n\n\treturn shapeChanged;\n};\n\n/**\n * Function: doRedrawShape\n * \n * Invokes redraw on the shape of the given state.\n */\nmxCellRenderer.prototype.doRedrawShape = function(state)\n{\n\tstate.shape.redraw();\n};\n\n/**\n * Function: isShapeInvalid\n * \n * Returns true if the given shape must be repainted.\n */\nmxCellRenderer.prototype.isShapeInvalid = function(state, shape)\n{\n\treturn shape.bounds == null || shape.scale != state.view.scale ||\n\t\t(state.absolutePoints == null && !shape.bounds.equals(state)) ||\n\t\t(state.absolutePoints != null && !mxUtils.equalPoints(shape.points, state.absolutePoints))\n};\n\n/**\n * Function: destroy\n * \n * Destroys the shapes associated with the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shapes should be destroyed.\n */\nmxCellRenderer.prototype.destroy = function(state)\n{\n\tif (state.shape != null)\n\t{\n\t\tif (state.text != null)\n\t\t{\t\t\n\t\t\tstate.text.destroy();\n\t\t\tstate.text = null;\n\t\t}\n\t\t\n\t\tif (state.overlays != null)\n\t\t{\n\t\t\tstate.overlays.visit(function(id, shape)\n\t\t\t{\n\t\t\t\tshape.destroy();\n\t\t\t});\n\t\t\t\n\t\t\tstate.overlays = null;\n\t\t}\n\n\t\tif (state.control != null)\n\t\t{\n\t\t\tstate.control.destroy();\n\t\t\tstate.control = null;\n\t\t}\n\t\t\n\t\tstate.shape.destroy();\n\t\tstate.shape = null;\n\t}\n};\n\n__mxOutput.mxCellRenderer = typeof mxCellRenderer !== 'undefined' ? mxCellRenderer : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEdgeStyle =\n{\n\t/**\n\t * Class: mxEdgeStyle\n\t * \n\t * Provides various edge styles to be used as the values for\n\t * <mxConstants.STYLE_EDGE> in a cell style.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * var style = stylesheet.getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.ElbowConnector;\n\t * (end)\n\t * \n\t * Sets the default edge style to <ElbowConnector>.\n\t * \n\t * Custom edge style:\n\t * \n\t * To write a custom edge style, a function must be added to the mxEdgeStyle\n\t * object as follows:\n\t * \n\t * (code)\n\t * mxEdgeStyle.MyStyle = function(state, source, target, points, result)\n\t * {\n\t *   if (source != null && target != null)\n\t *   {\n\t *     var pt = new mxPoint(target.getCenterX(), source.getCenterY());\n\t * \n\t *     if (mxUtils.contains(source, pt.x, pt.y))\n\t *     {\n\t *       pt.y = source.y + source.height;\n\t *     }\n\t * \n\t *     result.push(pt);\n\t *   }\n\t * };\n\t * (end)\n\t * \n\t * In the above example, a right angle is created using a point on the\n\t * horizontal center of the target vertex and the vertical center of the source\n\t * vertex. The code checks if that point intersects the source vertex and makes\n\t * the edge straight if it does. The point is then added into the result array,\n\t * which acts as the return value of the function.\n\t *\n\t * The new edge style should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('myEdgeStyle', mxEdgeStyle.MyStyle);\n\t * (end)\n\t * \n\t * The custom edge style above can now be used in a specific edge as follows:\n\t * \n\t * (code)\n\t * model.setStyle(edge, 'edgeStyle=myEdgeStyle');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxEdgeStyle.MyStyle for the value in the\n\t * cell style above.\n\t * \n\t * Or it can be used for all edges in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.MyStyle;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * Function: EntityRelation\n\t * \n\t * Implements an entity relation style for edges (as used in database\n\t * schema diagrams). At the time the function is called, the result\n\t * array contains a placeholder (null) for the first absolute point,\n\t * that is, the point where the edge and source terminal are connected.\n\t * The implementation of the style then adds all intermediate waypoints\n\t * except for the last point, that is, the connection point between the\n\t * edge and the target terminal. The first ant the last point in the\n\t * result array are then replaced with mxPoints that take into account\n\t * the terminal's perimeter and next point on the edge.\n\t *\n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * source - <mxCellState> that represents the source terminal.\n\t * target - <mxCellState> that represents the target terminal.\n\t * points - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t */\n\t EntityRelation: function (state, source, target, points, result)\n\t {\n\t\tvar view = state.view;\n\t \tvar graph = view.graph;\n\t \tvar segment = mxUtils.getValue(state.style,\n\t \t\t\tmxConstants.STYLE_SEGMENT,\n\t \t\t\tmxConstants.ENTITY_SEGMENT) * view.scale;\n\t \t\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t \tvar isSourceLeft = false;\n\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\telse if (source != null)\n\t\t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(source, state, true, mxConstants.DIRECTION_MASK_NONE);\n\t\t\t\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisSourceLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t \tvar sourceGeometry = graph.getCellGeometry(source.cell);\n\t\t\n\t\t\t \tif (sourceGeometry.relative)\n\t\t\t \t{\n\t\t\t \t\tisSourceLeft = sourceGeometry.x <= 0.5;\n\t\t\t \t}\n\t\t\t \telse if (target != null)\n\t\t\t \t{\n\t\t\t \t\tisSourceLeft = target.x + target.width < source.x;\n\t\t\t \t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn;\n\t\t}\n\t \t\n\t \tvar isTargetLeft = true;\n\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\telse if (target != null)\n\t \t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(target, state, false, mxConstants.DIRECTION_MASK_NONE);\n\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisTargetLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t \tvar targetGeometry = graph.getCellGeometry(target.cell);\n\t\n\t\t\t \tif (targetGeometry.relative)\n\t\t\t \t{\n\t\t\t \t\tisTargetLeft = targetGeometry.x <= 0.5;\n\t\t\t \t}\n\t\t\t \telse if (source != null)\n\t\t\t \t{\n\t\t\t \t\tisTargetLeft = source.x + source.width < target.x;\n\t\t\t \t}\n\t\t\t}\n\t \t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar x0 = (isSourceLeft) ? source.x : source.x + source.width;\n\t\t\tvar y0 = view.getRoutingCenterY(source);\n\t\t\t\n\t\t\tvar xe = (isTargetLeft) ? target.x : target.x + target.width;\n\t\t\tvar ye = view.getRoutingCenterY(target);\n\t\n\t\t\tvar seg = segment;\n\t\n\t\t\tvar dx = (isSourceLeft) ? -seg : seg;\n\t\t\tvar dep = new mxPoint(x0 + dx, y0);\n\t\t\t\t\t\n\t\t\tdx = (isTargetLeft) ? -seg : seg;\n\t\t\tvar arr = new mxPoint(xe + dx, ye);\n\t\n\t\t\t// Adds intermediate points if both go out on same side\n\t\t\tif (isSourceLeft == isTargetLeft)\n\t\t\t{\n\t\t\t\tvar x = (isSourceLeft) ?\n\t\t\t\t\tMath.min(x0, xe)-segment :\n\t\t\t\t\tMath.max(x0, xe)+segment;\n\t\n\t\t\t\tresult.push(new mxPoint(x, y0));\n\t\t\t\tresult.push(new mxPoint(x, ye));\n\t\t\t}\n\t\t\telse if ((dep.x < arr.x) == isSourceLeft)\n\t\t\t{\n\t\t\t\tvar midY = y0 + (ye - y0) / 2;\n\t\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(new mxPoint(dep.x, midY));\n\t\t\t\tresult.push(new mxPoint(arr.x, midY));\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t}\n\t },\n\n\t /**\n\t * Function: Loop\n\t * \n\t * Implements a self-reference, aka. loop.\n\t */\n\tLoop: function (state, source, target, points, result)\n\t{\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tif (points != null && points.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar pt = points[i];\n\t\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\tresult.push(new mxPoint(pt.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tvar view = state.view;\n\t\t\tvar graph = view.graph;\n\t\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tif (mxUtils.contains(source, pt.x, pt.y))\n\t\t\t\t{\n\t\t\t\t\tpt = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = 0;\n\t\t\tvar dx = 0;\n\t\t\tvar y = 0;\n\t\t\tvar dy = 0;\n\t\t\t\n\t\t \tvar seg = mxUtils.getValue(state.style, mxConstants.STYLE_SEGMENT,\n\t\t \t\tgraph.gridSize) * view.scale;\n\t\t\tvar dir = mxUtils.getValue(state.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_WEST);\n\t\t\t\n\t\t\tif (dir == mxConstants.DIRECTION_NORTH ||\n\t\t\t\tdir == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = seg;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ty = view.getRoutingCenterY(source);\n\t\t\t\tdy = seg;\n\t\t\t}\n\t\t\t\n\t\t\tif (pt == null ||\n\t\t\t\tpt.x < source.x ||\n\t\t\t\tpt.x > source.x + source.width)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tx = pt.x;\n\t\t\t\t\tdy = Math.max(Math.abs(y - pt.y), dy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (dir == mxConstants.DIRECTION_NORTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y - 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y + source.height + 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_EAST)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x - 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x + source.width + 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pt != null)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = Math.max(Math.abs(x - pt.x), dy);\n\t\t\t\ty = pt.y;\n\t\t\t\tdy = 0;\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(x - dx, y - dy));\n\t\t\tresult.push(new mxPoint(x + dx, y + dy));\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: ElbowConnector\n\t * \n\t * Uses either <SideToSide> or <TopToBottom> depending on the horizontal\n\t * flag in the cell style. <SideToSide> is used if horizontal is true or\n\t * unspecified. See <EntityRelation> for a description of the\n\t * parameters.\n\t */\n\tElbowConnector: function (state, source, target, points, result)\n\t{\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\tvar vertical = false;\n\t\tvar horizontal = false;\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar left = Math.min(source.x, target.x);\n\t\t\t\tvar right = Math.max(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\n\t\t\t\tvar top = Math.min(source.y, target.y);\n\t\t\t\tvar bottom = Math.max(source.y + source.height,\n\t\t\t\t\ttarget.y + target.height);\n\n\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tvertical = pt.y < top || pt.y > bottom;\n\t\t\t\thorizontal = pt.x < left || pt.x > right;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar left = Math.max(source.x, target.x);\n\t\t\t\tvar right = Math.min(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\t\t\t\t\n\t\t\t\tvertical = left == right;\n\t\t\t\t\n\t\t\t\tif (!vertical)\n\t\t\t\t{\n\t\t\t\t\tvar top = Math.max(source.y, target.y);\n\t\t\t\t\tvar bottom = Math.min(source.y + source.height,\n\t\t\t\t\t\ttarget.y + target.height);\n\t\t\t\t\t\t\n\t\t\t\t\thorizontal = top == bottom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!horizontal && (vertical ||\n\t\t\tstate.style[mxConstants.STYLE_ELBOW] == mxConstants.ELBOW_VERTICAL))\n\t\t{\n\t\t\tmxEdgeStyle.TopToBottom(state, source, target, points, result);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxEdgeStyle.SideToSide(state, source, target, points, result);\n\t\t}\n\t},\n\n\t/**\n\t * Function: SideToSide\n\t * \n\t * Implements a vertical elbow edge. See <EntityRelation> for a description\n\t * of the parameters.\n\t */\n\tSideToSide: function (state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\n\t\t\tvar x = (pt != null) ? pt.x : Math.round(r + (l - r) / 2);\n\t\n\t\t\tvar y1 = view.getRoutingCenterY(source);\n\t\t\tvar y2 = view.getRoutingCenterY(target);\n\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tif (pt.y >= source.y && pt.y <= source.y + source.height)\n\t\t\t\t{\n\t\t\t\t\ty1 = pt.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (pt.y >= target.y && pt.y <= target.y + target.height)\n\t\t\t\t{\n\t\t\t\t\ty2 = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y1) &&\n\t\t\t\t!mxUtils.contains(source, x, y1))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x,  y1));\n\t\t\t}\n\t\n\t\t\tif (!mxUtils.contains(target, x, y2) &&\n\t\t\t\t!mxUtils.contains(source, x, y2))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y2));\n\t\t\t}\n\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, x, pt.y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, x, pt.y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(x, pt.y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\t\n\t\t\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(x, t + (b - t) / 2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: TopToBottom\n\t * \n\t * Implements a horizontal elbow edge. See <EntityRelation> for a\n\t * description of the parameters.\n\t */\n\tTopToBottom: function(state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\n\t\t\tvar x = view.getRoutingCenterX(source);\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= source.x &&\n\t\t\t\tpt.x <= source.x + source.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\t\n\t\t\tvar y = (pt != null) ? pt.y : Math.round(b + (t - b) / 2);\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= target.x &&\n\t\t\t\tpt.x <= target.x + target.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(target);\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null && result.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, pt.x, y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, pt.x, y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(pt.x, y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(l + (r - l) / 2, y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: SegmentConnector\n\t * \n\t * Implements an orthogonal edge style. Use <mxEdgeSegmentHandler>\n\t * as an interactive handler for this style.\n\t */\n\tSegmentConnector: function(state, source, target, hints, result)\n\t{\n\t\t// Creates array of all way- and terminalpoints\n\t\tvar pts = state.absolutePoints;\n\t\tvar tol = Math.max(1, state.view.scale);\n\t\t\n\t\t// Whether the first segment outgoing from the source end is horizontal\n\t\tvar lastPushed = (result.length > 0) ? result[0] : null;\n\t\tvar horizontal = true;\n\t\tvar hint = null;\n\t\t\n\t\t// Adds waypoints only if outside of tolerance\n\t\tfunction pushPoint(pt)\n\t\t{\n\t\t\tif (lastPushed == null || Math.abs(lastPushed.x - pt.x) >= tol || Math.abs(lastPushed.y - pt.y) >= tol)\n\t\t\t{\n\t\t\t\tresult.push(pt);\n\t\t\t\tlastPushed = pt;\n\t\t\t}\n\t\t\t\n\t\t\treturn lastPushed;\n\t\t};\n\n\t\t// Adds the first point\n\t\tvar pt = pts[0];\n\t\t\n\t\tif (pt == null && source != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(source), state.view.getRoutingCenterY(source));\n\t\t}\n\t\telse if (pt != null)\n\t\t{\n\t\t\tpt = pt.clone();\n\t\t}\n\t\t\n\t\tpt.x = Math.round(pt.x);\n\t\tpt.y = Math.round(pt.y);\n\t\t\n\t\tvar lastInx = pts.length - 1;\n\n\t\t// Adds the waypoints\n\t\tif (hints != null && hints.length > 0)\n\t\t{\n\t\t\t// Converts all hints and removes nulls\n\t\t\tvar newHints = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < hints.length; i++)\n\t\t\t{\n\t\t\t\tvar tmp = state.view.transformControlPoint(state, hints[i]);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\ttmp.x = Math.round(tmp.x);\n\t\t\t\t\ttmp.y = Math.round(tmp.y);\n\t\t\t\t\tnewHints.push(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (newHints.length == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\thints = newHints;\n\t\t\t\n\t\t\t// Aligns source and target hint to fixed points\n\t\t\tif (pt != null && hints[0] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[0].x - pt.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].x = pt.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[0].y - pt.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].y = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pe = pts[lastInx];\n\t\t\t\n\t\t\tif (pe != null && hints[hints.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[hints.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[hints.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\thint = hints[0];\n\n\t\t\tvar currentTerm = source;\n\t\t\tvar currentPt = pts[0];\n\t\t\tvar hozChan = false;\n\t\t\tvar vertChan = false;\n\t\t\tvar currentHint = hint;\n\t\t\t\n\t\t\tif (currentPt != null)\n\t\t\t{\n\t\t\t\tcurrentPt.x = Math.round(currentPt.x);\n\t\t\t\tcurrentPt.y = Math.round(currentPt.y);\n\t\t\t\tcurrentTerm = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Check for alignment with fixed points and with channels\n\t\t\t// at source and target segments only\n\t\t\tfor (var i = 0; i < 2; i++)\n\t\t\t{\n\t\t\t\tvar fixedVertAlign = currentPt != null && currentPt.x == currentHint.x;\n\t\t\t\tvar fixedHozAlign = currentPt != null && currentPt.y == currentHint.y;\n\t\t\t\t\n\t\t\t\tvar inHozChan = currentTerm != null && (currentHint.y >= currentTerm.y &&\n\t\t\t\t\t\tcurrentHint.y <= currentTerm.y + currentTerm.height);\n\t\t\t\tvar inVertChan = currentTerm != null && (currentHint.x >= currentTerm.x &&\n\t\t\t\t\t\tcurrentHint.x <= currentTerm.x + currentTerm.width);\n\n\t\t\t\thozChan = fixedHozAlign || (currentPt == null && inHozChan);\n\t\t\t\tvertChan = fixedVertAlign || (currentPt == null && inVertChan);\n\t\t\t\t\n\t\t\t\t// If the current hint falls in both the hor and vert channels in the case\n\t\t\t\t// of a floating port, or if the hint is exactly co-incident with a \n\t\t\t\t// fixed point, ignore the source and try to work out the orientation\n\t\t\t\t// from the target end\n\t\t\t\tif (i==0 && ((hozChan && vertChan) || (fixedVertAlign && fixedHozAlign)))\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (currentPt != null && (!fixedHozAlign && !fixedVertAlign) && (inHozChan || inVertChan)) \n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = inHozChan ? false : true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tif (vertChan || hozChan)\n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = hozChan;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (i == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Work back from target end\n\t\t\t\t\t\t\thorizontal = hints.length % 2 == 0 ? hozChan : vertChan;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentTerm = target;\n\t\t\t\tcurrentPt = pts[lastInx];\n\t\t\t\t\n\t\t\t\tif (currentPt != null)\n\t\t\t\t{\n\t\t\t\t\tcurrentPt.x = Math.round(currentPt.x);\n\t\t\t\t\tcurrentPt.y = Math.round(currentPt.y);\n\t\t\t\t\tcurrentTerm = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentHint = hints[hints.length - 1];\n\t\t\t\t\n\t\t\t\tif (fixedVertAlign && fixedHozAlign)\n\t\t\t\t{\n\t\t\t\t\thints = hints.slice(1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (horizontal && ((pts[0] != null && pts[0].y != hint.y) ||\n\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t(hint.y < source.y || hint.y > source.y + source.height))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t}\n\t\t\telse if (!horizontal && ((pts[0] != null && pts[0].x != hint.x) ||\n\t\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t\t(hint.x < source.x || hint.x > source.x + source.width))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\tif (horizontal)\n\t\t\t{\n\t\t\t\tpt.y = hint.y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpt.x = hint.x;\n\t\t\t}\n\t\t\n\t\t\tfor (var i = 0; i < hints.length; i++)\n\t\t\t{\n\t\t\t\thorizontal = !horizontal;\n\t\t\t\thint = hints[i];\n\t\t\t\t\n//\t\t\t\tmxLog.show();\n//\t\t\t\tmxLog.debug('hint', i, hint.x, hint.y);\n\t\t\t\t\n\t\t\t\tif (horizontal)\n\t\t\t\t{\n\t\t\t\t\tpt.y = hint.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpt.x = hint.x;\n\t\t\t\t}\n\t\t\n\t\t\t\tpushPoint(pt.clone());\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\thint = pt;\n\t\t\t// FIXME: First click in connect preview toggles orientation\n\t\t\thorizontal = true;\n\t\t}\n\n\t\t// Adds the last point\n\t\tpt = pts[lastInx];\n\n\t\tif (pt == null && target != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(target), state.view.getRoutingCenterY(target));\n\t\t}\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt.x = Math.round(pt.x);\n\t\t\tpt.y = Math.round(pt.y);\n\t\t\t\n\t\t\tif (hint != null)\n\t\t\t{\n\t\t\t\tif (horizontal && ((pts[lastInx] != null && pts[lastInx].y != hint.y) ||\n\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t(hint.y < target.y || hint.y > target.y + target.height))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t\t}\n\t\t\t\telse if (!horizontal && ((pts[lastInx] != null && pts[lastInx].x != hint.x) ||\n\t\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t\t(hint.x < target.x || hint.x > target.x + target.width))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the source terminal for floating ports\n\t\tif (pts[0] == null && source != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[1] != null &&\n\t\t\t\tmxUtils.contains(source, result[1].x, result[1].y))\n\t\t\t{\n\t\t\t\tresult.splice(1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the target terminal\n\t\tif (pts[lastInx] == null && target != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[result.length - 1] != null &&\n\t\t\t\tmxUtils.contains(target, result[result.length - 1].x, result[result.length - 1].y))\n\t\t\t{\n\t\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes last point if inside tolerance with end point\n\t\tif (pe != null && result[result.length - 1] != null &&\n\t\t\tMath.abs(pe.x - result[result.length - 1].x) < tol &&\n\t\t\tMath.abs(pe.y - result[result.length - 1].y) < tol)\n\t\t{\n\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t\n\t\t\t// Lines up second last point in result with end point\n\t\t\tif (result[result.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(result[result.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(result[result.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\torthBuffer: 10,\n\t\n\torthPointsFallback: true,\n\n\tdirVectors: [ [ -1, 0 ],\n\t\t\t[ 0, -1 ], [ 1, 0 ], [ 0, 1 ], [ -1, 0 ], [ 0, -1 ], [ 1, 0 ] ],\n\n\twayPoints1: [ [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0], [ 0, 0],  [ 0, 0],\n\t              [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0] ],\n\n\troutePatterns: [\n\t\t[ [ 513, 2308, 2081, 2562 ], [ 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 513, 1090, 514, 2564, 2184, 2562 ],\n\t\t\t[ 513, 2308, 2561, 1090, 514, 2568, 2308 ] ],\n\t[ [ 514, 1057, 513, 2308, 2081, 2562 ], [ 514, 2184, 2114, 2561 ],\n\t\t\t[ 514, 2184, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 514, 1057, 513, 2568, 2308, 2561 ] ],\n\t[ [ 1090, 514, 1057, 513, 2308, 2081, 2562 ], [ 2114, 2561 ],\n\t\t\t[ 1090, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 1090, 514, 1057, 513, 2308, 2561, 2568 ] ],\n\t[ [ 2081, 2562 ], [ 1057, 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 1057, 513, 1090, 514, 2184, 2562, 2564 ],\n\t\t\t[ 1057, 2561, 1090, 514, 2568, 2308 ] ] ],\n\t\n\tinlineRoutePatterns: [\n\t\t\t[ null, [ 2114, 2568 ], null, null ],\n\t\t\t[ null, [ 514, 2081, 2114, 2568 ] , null, null ],\n\t\t\t[ null, [ 2114, 2561 ], null, null ],\n\t\t\t[ [ 2081, 2562 ], [ 1057, 2114, 2568 ],\n\t\t\t\t\t[ 2184, 2562 ],\n\t\t\t\t\tnull ] ],\n\tvertexSeperations: [],\n\n\tlimits: [\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ],\n\n\tLEFT_MASK: 32,\n\n\tTOP_MASK: 64,\n\n\tRIGHT_MASK: 128,\n\n\tBOTTOM_MASK: 256,\n\n\tLEFT: 1,\n\n\tTOP: 2,\n\n\tRIGHT: 4,\n\n\tBOTTOM: 8,\n\n\t// TODO remove magic numbers\n\tSIDE_MASK: 480,\n\t//mxEdgeStyle.LEFT_MASK | mxEdgeStyle.TOP_MASK | mxEdgeStyle.RIGHT_MASK\n\t//| mxEdgeStyle.BOTTOM_MASK,\n\n\tCENTER_MASK: 512,\n\n\tSOURCE_MASK: 1024,\n\n\tTARGET_MASK: 2048,\n\n\tVERTEX_MASK: 3072,\n\t// mxEdgeStyle.SOURCE_MASK | mxEdgeStyle.TARGET_MASK,\n\t\n\tgetJettySize: function(state, source, target, points, isSource)\n\t{\n\t\tvar value = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_SOURCE_JETTY_SIZE :\n\t\t\tmxConstants.STYLE_TARGET_JETTY_SIZE, mxUtils.getValue(state.style,\n\t\t\t\t\tmxConstants.STYLE_JETTY_SIZE, mxEdgeStyle.orthBuffer));\n\t\t\n\t\tif (value == 'auto')\n\t\t{\n\t\t\t// Computes the automatic jetty size\n\t\t\tvar type = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW, mxConstants.NONE);\n\t\t\t\n\t\t\tif (type != mxConstants.NONE)\n\t\t\t{\n\t\t\t\tvar size = mxUtils.getNumber(state.style, (isSource) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE);\n\t\t\t\tvalue = Math.max(2, Math.ceil((size + mxEdgeStyle.orthBuffer) / mxEdgeStyle.orthBuffer)) * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvalue = 2 * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: OrthConnector\n\t * \n\t * Implements a local orthogonal router between the given\n\t * cells.\n\t * \n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * source - <mxCellState> that represents the source terminal.\n\t * target - <mxCellState> that represents the target terminal.\n\t * points - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t * \n\t */\n\tOrthConnector: function(state, source, target, points, result)\n\t{\n\t\tvar graph = state.view.graph;\n\t\tvar sourceEdge = source == null ? false : graph.getModel().isEdge(source.cell);\n\t\tvar targetEdge = target == null ? false : graph.getModel().isEdge(target.cell);\n\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t\tvar sourceX = source != null ? source.x : p0.x;\n\t\tvar sourceY = source != null ? source.y : p0.y;\n\t\tvar sourceWidth = source != null ? source.width : 0;\n\t\tvar sourceHeight = source != null ? source.height : 0;\n\t\t\n\t\tvar targetX = target != null ? target.x : pe.x;\n\t\tvar targetY = target != null ? target.y : pe.y;\n\t\tvar targetWidth = target != null ? target.width : 0;\n\t\tvar targetHeight = target != null ? target.height : 0;\n\n\t\tvar scaledSourceBuffer = state.view.scale * mxEdgeStyle.getJettySize(state, source, target, points, true);\n\t\tvar scaledTargetBuffer = state.view.scale * mxEdgeStyle.getJettySize(state, source, target, points, false);\n\t\t\n\t\t// Workaround for loop routing within buffer zone\n\t\tif (source != null && target == source)\n\t\t{\n\t\t\tscaledTargetBuffer = Math.max(scaledSourceBuffer, scaledTargetBuffer);\n\t\t\tscaledSourceBuffer = scaledTargetBuffer;\n\t\t}\n\t\t\n\t\tvar totalBuffer = scaledTargetBuffer + scaledSourceBuffer;\n\t\tvar tooShort = false;\n\t\t\n\t\t// Checks minimum distance for fixed points and falls back to segment connector\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tvar dx = pe.x - p0.x;\n\t\t\tvar dy = pe.y - p0.y;\n\t\t\t\n\t\t\ttooShort = dx * dx + dy * dy < totalBuffer * totalBuffer;\n\t\t}\n\n\t\tif (tooShort || (mxEdgeStyle.orthPointsFallback && (points != null &&\n\t\t\tpoints.length > 0)) || sourceEdge || targetEdge)\n\t\t{\n\t\t\tmxEdgeStyle.SegmentConnector(state, source, target, points, result);\n\t\t\t\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine the side(s) of the source and target vertices\n\t\t// that the edge may connect to\n\t\t// portConstraint [source, target]\n\t\tvar portConstraint = [mxConstants.DIRECTION_MASK_ALL, mxConstants.DIRECTION_MASK_ALL];\n\t\tvar rotation = 0;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tportConstraint[0] = mxUtils.getPortConstraints(source, state, true, \n\t\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(source.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(sourceX, sourceY, sourceWidth, sourceHeight), rotation);\n\t\t\t\tsourceX = newRect.x; \n\t\t\t\tsourceY = newRect.y;\n\t\t\t\tsourceWidth = newRect.width;\n\t\t\t\tsourceHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\tif (target != null)\n\t\t{\n\t\t\tportConstraint[1] = mxUtils.getPortConstraints(target, state, false,\n\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(target.style, mxConstants.STYLE_ROTATION, 0);\n\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(targetX, targetY, targetWidth, targetHeight), rotation);\n\t\t\t\ttargetX = newRect.x;\n\t\t\t\ttargetY = newRect.y;\n\t\t\t\ttargetWidth = newRect.width;\n\t\t\t\ttargetHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\t// Avoids floating point number errors\n\t\tsourceX = Math.round(sourceX * 10) / 10;\n\t\tsourceY = Math.round(sourceY * 10) / 10;\n\t\tsourceWidth = Math.round(sourceWidth * 10) / 10;\n\t\tsourceHeight = Math.round(sourceHeight * 10) / 10;\n\t\t\n\t\ttargetX = Math.round(targetX * 10) / 10;\n\t\ttargetY = Math.round(targetY * 10) / 10;\n\t\ttargetWidth = Math.round(targetWidth * 10) / 10;\n\t\ttargetHeight = Math.round(targetHeight * 10) / 10;\n\t\t\n\t\tvar dir = [0, 0];\n\n\t\t// Work out which faces of the vertices present against each other\n\t\t// in a way that would allow a 3-segment connection if port constraints\n\t\t// permitted.\n\t\t// geo -> [source, target] [x, y, width, height]\n\t\tvar geo = [ [sourceX, sourceY, sourceWidth, sourceHeight] ,\n\t\t            [targetX, targetY, targetWidth, targetHeight] ];\n\t\tvar buffer = [scaledSourceBuffer, scaledTargetBuffer];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tmxEdgeStyle.limits[i][1] = geo[i][0] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][2] = geo[i][1] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][4] = geo[i][0] + geo[i][2] + buffer[i];\n\t\t\tmxEdgeStyle.limits[i][8] = geo[i][1] + geo[i][3] + buffer[i];\n\t\t}\n\t\t\n\t\t// Work out which quad the target is in\n\t\tvar sourceCenX = geo[0][0] + geo[0][2] / 2.0;\n\t\tvar sourceCenY = geo[0][1] + geo[0][3] / 2.0;\n\t\tvar targetCenX = geo[1][0] + geo[1][2] / 2.0;\n\t\tvar targetCenY = geo[1][1] + geo[1][3] / 2.0;\n\t\t\n\t\tvar dx = sourceCenX - targetCenX;\n\t\tvar dy = sourceCenY - targetCenY;\n\n\t\tvar quad = 0;\n\n\t\tif (dx < 0)\n\t\t{\n\t\t\tif (dy < 0)\n\t\t\t{\n\t\t\t\tquad = 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (dy <= 0)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\t// Special case on x = 0 and negative y\n\t\t\t\tif (dx == 0)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for connection constraints\n\t\tvar currentTerm = null;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tcurrentTerm = p0;\n\t\t}\n\n\t\tvar constraint = [ [0.5, 0.5] , [0.5, 0.5] ];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (currentTerm != null)\n\t\t\t{\n\t\t\t\tconstraint[i][0] = (currentTerm.x - geo[i][0]) / geo[i][2];\n\t\t\t\t\n\t\t\t\tif (Math.abs(currentTerm.x - geo[i][0]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.x - geo[i][0] - geo[i][2]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t}\n\n\t\t\t\tconstraint[i][1] = (currentTerm.y - geo[i][1]) / geo[i][3];\n\n\t\t\t\tif (Math.abs(currentTerm.y - geo[i][1]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.y - geo[i][1] - geo[i][3]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentTerm = null;\n\t\t\t\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tcurrentTerm = pe;\n\t\t\t}\n\t\t}\n\n\t\tvar sourceTopDist = geo[0][1] - (geo[1][1] + geo[1][3]);\n\t\tvar sourceLeftDist = geo[0][0] - (geo[1][0] + geo[1][2]);\n\t\tvar sourceBottomDist = geo[1][1] - (geo[0][1] + geo[0][3]);\n\t\tvar sourceRightDist = geo[1][0] - (geo[0][0] + geo[0][2]);\n\n\t\tmxEdgeStyle.vertexSeperations[1] = Math.max(sourceLeftDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[2] = Math.max(sourceTopDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[4] = Math.max(sourceBottomDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[3] = Math.max(sourceRightDist - totalBuffer, 0);\n\t\t\t\t\n\t\t//==============================================================\n\t\t// Start of source and target direction determination\n\n\t\t// Work through the preferred orientations by relative positioning\n\t\t// of the vertices and list them in preferred and available order\n\t\t\n\t\tvar dirPref = [];\n\t\tvar horPref = [];\n\t\tvar vertPref = [];\n\n\t\thorPref[0] = (sourceLeftDist >= sourceRightDist) ? mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t: mxConstants.DIRECTION_MASK_EAST;\n\t\tvertPref[0] = (sourceTopDist >= sourceBottomDist) ? mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t: mxConstants.DIRECTION_MASK_SOUTH;\n\n\t\thorPref[1] = mxUtils.reversePortConstraints(horPref[0]);\n\t\tvertPref[1] = mxUtils.reversePortConstraints(vertPref[0]);\n\t\t\n\t\tvar preferredHorizDist = sourceLeftDist >= sourceRightDist ? sourceLeftDist\n\t\t\t\t: sourceRightDist;\n\t\tvar preferredVertDist = sourceTopDist >= sourceBottomDist ? sourceTopDist\n\t\t\t\t: sourceBottomDist;\n\n\t\tvar prefOrdering = [ [0, 0] , [0, 0] ];\n\t\tvar preferredOrderSet = false;\n\n\t\t// If the preferred port isn't available, switch it\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((horPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\thorPref[i] = mxUtils.reversePortConstraints(horPref[i]);\n\t\t\t}\n\n\t\t\tif ((vertPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tvertPref[i] = mxUtils\n\t\t\t\t\t\t.reversePortConstraints(vertPref[i]);\n\t\t\t}\n\n\t\t\tprefOrdering[i][0] = vertPref[i];\n\t\t\tprefOrdering[i][1] = horPref[i];\n\t\t}\n\n\t\tif (preferredVertDist > 0\n\t\t\t\t&& preferredHorizDist > 0)\n\t\t{\n\t\t\t// Possibility of two segment edge connection\n\t\t\tif (((horPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((vertPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t\telse if (((vertPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((horPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (preferredVertDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\tpreferredOrderSet = true;\n\n\t\t}\n\t\t\n\t\tif (preferredHorizDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\tpreferredOrderSet = true;\n\t\t}\n\n\t\t// The source and target prefs are now an ordered list of\n\t\t// the preferred port selections\n\t\t// It the list can contain gaps, compact it\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((prefOrdering[i][0] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tprefOrdering[i][0] = prefOrdering[i][1];\n\t\t\t}\n\n\t\t\tdirPref[i] = prefOrdering[i][0] & portConstraint[i];\n\t\t\tdirPref[i] |= (prefOrdering[i][1] & portConstraint[i]) << 8;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][i] & portConstraint[i]) << 16;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][1 - i] & portConstraint[i]) << 24;\n\n\t\t\tif ((dirPref[i] & 0xF) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = dirPref[i] << 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF00) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xF) | dirPref[i] >> 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF0000) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xFFFF)\n\t\t\t\t\t\t| ((dirPref[i] & 0xF000000) >> 8);\n\t\t\t}\n\n\t\t\tdir[i] = dirPref[i] & 0xF;\n\n\t\t\tif (portConstraint[i] == mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_EAST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_SOUTH)\n\t\t\t{\n\t\t\t\tdir[i] = portConstraint[i];\n\t\t\t}\n\t\t}\n\n\t\t//==============================================================\n\t\t// End of source and target direction determination\n\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\t\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar routePattern = mxEdgeStyle.routePatterns[sourceIndex - 1][targetIndex - 1];\n\n\t\tmxEdgeStyle.wayPoints1[0][0] = geo[0][0];\n\t\tmxEdgeStyle.wayPoints1[0][1] = geo[0][1];\n\n\t\tswitch (dir[0])\n\t\t{\n\t\t\tcase mxConstants.DIRECTION_MASK_WEST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] -= scaledSourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_SOUTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += geo[0][3] + scaledSourceBuffer;\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_EAST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += geo[0][2] + scaledSourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_NORTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] -= scaledSourceBuffer;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar currentIndex = 0;\n\n\t\t// Orientation, 0 horizontal, 1 vertical\n\t\tvar lastOrientation = (dir[0] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t: 1;\n\t\tvar initialOrientation = lastOrientation;\n\t\tvar currentOrientation = 0;\n\n\t\tfor (var i = 0; i < routePattern.length; i++)\n\t\t{\n\t\t\tvar nextDirection = routePattern[i] & 0xF;\n\n\t\t\t// Rotate the index of this direction by the quad\n\t\t\t// to get the real direction\n\t\t\tvar directionIndex = nextDirection == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t\t: nextDirection;\n\n\t\t\tdirectionIndex += quad;\n\n\t\t\tif (directionIndex > 4)\n\t\t\t{\n\t\t\t\tdirectionIndex -= 4;\n\t\t\t}\n\n\t\t\tvar direction = mxEdgeStyle.dirVectors[directionIndex - 1];\n\n\t\t\tcurrentOrientation = (directionIndex % 2 > 0) ? 0 : 1;\n\t\t\t// Only update the current index if the point moved\n\t\t\t// in the direction of the current segment move,\n\t\t\t// otherwise the same point is moved until there is \n\t\t\t// a segment direction change\n\t\t\tif (currentOrientation != lastOrientation)\n\t\t\t{\n\t\t\t\tcurrentIndex++;\n\t\t\t\t// Copy the previous way point into the new one\n\t\t\t\t// We can't base the new position on index - 1\n\t\t\t\t// because sometime elbows turn out not to exist,\n\t\t\t\t// then we'd have to rewind.\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] = mxEdgeStyle.wayPoints1[currentIndex - 1][0];\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] = mxEdgeStyle.wayPoints1[currentIndex - 1][1];\n\t\t\t}\n\n\t\t\tvar tar = (routePattern[i] & mxEdgeStyle.TARGET_MASK) > 0;\n\t\t\tvar sou = (routePattern[i] & mxEdgeStyle.SOURCE_MASK) > 0;\n\t\t\tvar side = (routePattern[i] & mxEdgeStyle.SIDE_MASK) >> 5;\n\t\t\tside = side << quad;\n\n\t\t\tif (side > 0xF)\n\t\t\t{\n\t\t\t\tside = side >> 4;\n\t\t\t}\n\n\t\t\tvar center = (routePattern[i] & mxEdgeStyle.CENTER_MASK) > 0;\n\n\t\t\tif ((sou || tar) && side < 9)\n\t\t\t{\n\t\t\t\tvar limit = 0;\n\t\t\t\tvar souTar = sou ? 0 : 1;\n\n\t\t\t\tif (center && currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][0] + constraint[souTar][0] * geo[souTar][2];\n\t\t\t\t}\n\t\t\t\telse if (center)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][1] + constraint[souTar][1] * geo[souTar][3];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlimit = mxEdgeStyle.limits[souTar][side];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tvar lastX = mxEdgeStyle.wayPoints1[currentIndex][0];\n\t\t\t\t\tvar deltaX = (limit - lastX) * direction[0];\n\n\t\t\t\t\tif (deltaX > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t\t\t* deltaX;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar lastY = mxEdgeStyle.wayPoints1[currentIndex][1];\n\t\t\t\t\tvar deltaY = (limit - lastY) * direction[1];\n\n\t\t\t\t\tif (deltaY > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t\t\t* deltaY;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (center)\n\t\t\t{\n\t\t\t\t// Which center we're travelling to depend on the current direction\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t}\n\n\t\t\tif (currentIndex > 0\n\t\t\t\t\t&& mxEdgeStyle.wayPoints1[currentIndex][currentOrientation] == mxEdgeStyle.wayPoints1[currentIndex - 1][currentOrientation])\n\t\t\t{\n\t\t\t\tcurrentIndex--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlastOrientation = currentOrientation;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= currentIndex; i++)\n\t\t{\n\t\t\tif (i == currentIndex)\n\t\t\t{\n\t\t\t\t// Last point can cause last segment to be in\n\t\t\t\t// same direction as jetty/approach. If so,\n\t\t\t\t// check the number of points is consistent\n\t\t\t\t// with the relative orientation of source and target\n\t\t\t\t// jx. Same orientation requires an even\n\t\t\t\t// number of turns (points), different requires\n\t\t\t\t// odd.\n\t\t\t\tvar targetOrientation = (dir[1] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t\t\t: 1;\n\t\t\t\tvar sameOrient = targetOrientation == initialOrientation ? 0 : 1;\n\n\t\t\t\t// (currentIndex + 1) % 2 is 0 for even number of points,\n\t\t\t\t// 1 for odd\n\t\t\t\tif (sameOrient != (currentIndex + 1) % 2)\n\t\t\t\t{\n\t\t\t\t\t// The last point isn't required\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(Math.round(mxEdgeStyle.wayPoints1[i][0]), Math.round(mxEdgeStyle.wayPoints1[i][1])));\n\t\t}\n\t\t\n\t\t// Removes duplicates\n\t\tvar index = 1;\n\t\t\n\t\twhile (index < result.length)\n\t\t{\n\t\t\tif (result[index - 1] == null || result[index] == null ||\n\t\t\t\tresult[index - 1].x != result[index].x ||\n\t\t\t\tresult[index - 1].y != result[index].y)\n\t\t\t{\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.splice(index, 1);\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetRoutePattern: function(dir, quad, dx, dy)\n\t{\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar result = routePatterns[sourceIndex - 1][targetIndex - 1];\n\n\t\tif (dx == 0 || dy == 0)\n\t\t{\n\t\t\tif (inlineRoutePatterns[sourceIndex - 1][targetIndex - 1] != null)\n\t\t\t{\n\t\t\t\tresult = inlineRoutePatterns[sourceIndex - 1][targetIndex - 1];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\n__mxOutput.mxEdgeStyle = typeof mxEdgeStyle !== 'undefined' ? mxEdgeStyle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxStyleRegistry =\n{\n\t/**\n\t * Class: mxStyleRegistry\n\t *\n\t * Singleton class that acts as a global converter from string to object values\n\t * in a style. This is currently only used to perimeters and edge styles.\n\t * \n\t * Variable: values\n\t *\n\t * Maps from strings to objects.\n\t */\n\tvalues: [],\n\n\t/**\n\t * Function: putValue\n\t *\n\t * Puts the given object into the registry under the given name.\n\t */\n\tputValue: function(name, obj)\n\t{\n\t\tmxStyleRegistry.values[name] = obj;\n\t},\n\n\t/**\n\t * Function: getValue\n\t *\n\t * Returns the value associated with the given name.\n\t */\n\tgetValue: function(name)\n\t{\n\t\treturn mxStyleRegistry.values[name];\n\t},\n\t\n\t/**\n\t * Function: getName\n\t * \n\t * Returns the name for the given value.\n\t */\n\tgetName: function(value)\n\t{\n\t\tfor (var key in mxStyleRegistry.values)\n\t\t{\n\t\t\tif (mxStyleRegistry.values[key] == value)\n\t\t\t{\n\t\t\t\treturn key;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\n};\n\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ELBOW, mxEdgeStyle.ElbowConnector);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ENTITY_RELATION, mxEdgeStyle.EntityRelation);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_LOOP, mxEdgeStyle.Loop);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_SIDETOSIDE, mxEdgeStyle.SideToSide);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_TOPTOBOTTOM, mxEdgeStyle.TopToBottom);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ORTHOGONAL, mxEdgeStyle.OrthConnector);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_SEGMENT, mxEdgeStyle.SegmentConnector);\n\nmxStyleRegistry.putValue(mxConstants.PERIMETER_ELLIPSE, mxPerimeter.EllipsePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_RECTANGLE, mxPerimeter.RectanglePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_RHOMBUS, mxPerimeter.RhombusPerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_TRIANGLE, mxPerimeter.TrianglePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_HEXAGON, mxPerimeter.HexagonPerimeter);\n\n__mxOutput.mxStyleRegistry = typeof mxStyleRegistry !== 'undefined' ? mxStyleRegistry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphView\n *\n * Extends <mxEventSource> to implement a view for a graph. This class is in\n * charge of computing the absolute coordinates for the relative child\n * geometries, the points for perimeters and edge styles and keeping them\n * cached in <mxCellStates> for faster retrieval. The states are updated\n * whenever the model or the view state (translate, scale) changes. The scale\n * and translate are honoured in the bounds.\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the root was changed in <setCurrentRoot>. The <code>edit</code>\n * property contains the <mxUndoableEdit> which contains the\n * <mxCurrentRootChange>.\n * \n * Event: mxEvent.SCALE_AND_TRANSLATE\n * \n * Fires after the scale and translate have been changed in <scaleAndTranslate>.\n * The <code>scale</code>, <code>previousScale</code>, <code>translate</code>\n * and <code>previousTranslate</code> properties contain the new and previous\n * scale and translate, respectively.\n * \n * Event: mxEvent.SCALE\n * \n * Fires after the scale was changed in <setScale>. The <code>scale</code> and\n * <code>previousScale</code> properties contain the new and previous scale.\n * \n * Event: mxEvent.TRANSLATE\n * \n * Fires after the translate was changed in <setTranslate>. The\n * <code>translate</code> and <code>previousTranslate</code> properties contain\n * the new and previous value for translate.\n * \n * Event: mxEvent.DOWN and mxEvent.UP\n * \n * Fire if the current root is changed by executing an <mxCurrentRootChange>.\n * The event name depends on the location of the root in the cell hierarchy\n * with respect to the current root. The <code>root</code> and\n * <code>previous</code> properties contain the new and previous root,\n * respectively.\n * \n * Constructor: mxGraphView\n *\n * Constructs a new view for the given <mxGraph>.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphView(graph)\n{\n\tthis.graph = graph;\n\tthis.translate = new mxPoint();\n\tthis.graphBounds = new mxRectangle();\n\tthis.states = new mxDictionary();\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphView.prototype = new mxEventSource();\nmxGraphView.prototype.constructor = mxGraphView;\n\n/**\n *\n */\nmxGraphView.prototype.EMPTY_POINT = new mxPoint();\n\n/**\n * Variable: doneResource\n * \n * Specifies the resource key for the status message after a long operation.\n * If the resource for this key does not exist then the value is used as\n * the status message. Default is 'done'.\n */\nmxGraphView.prototype.doneResource = (mxClient.language != 'none') ? 'done' : '';\n\n/**\n * Function: updatingDocumentResource\n *\n * Specifies the resource key for the status message while the document is\n * being updated. If the resource for this key does not exist then the\n * value is used as the status message. Default is 'updatingDocument'.\n */\nmxGraphView.prototype.updatingDocumentResource = (mxClient.language != 'none') ? 'updatingDocument' : '';\n\n/**\n * Variable: allowEval\n * \n * Specifies if string values in cell styles should be evaluated using\n * <mxUtils.eval>. This will only be used if the string values can't be mapped\n * to objects using <mxStyleRegistry>. Default is false. NOTE: Enabling this\n * switch carries a possible security risk.\n */\nmxGraphView.prototype.allowEval = false;\n\n/**\n * Variable: captureDocumentGesture\n * \n * Specifies if a gesture should be captured when it goes outside of the\n * graph container. Default is true.\n */\nmxGraphView.prototype.captureDocumentGesture = true;\n\n/**\n * Variable: optimizeVmlReflows\n * \n * Specifies if the <canvas> should be hidden while rendering in IE8 standards\n * mode and quirks mode. This will significantly improve rendering performance.\n * Default is true.\n */\nmxGraphView.prototype.optimizeVmlReflows = true;\n\n/**\n * Variable: rendering\n * \n * Specifies if shapes should be created, updated and destroyed using the\n * methods of <mxCellRenderer> in <graph>. Default is true.\n */\nmxGraphView.prototype.rendering = true;\n\n/**\n * Variable: graph\n *\n * Reference to the enclosing <mxGraph>.\n */\nmxGraphView.prototype.graph = null;\n\n/**\n * Variable: currentRoot\n *\n * <mxCell> that acts as the root of the displayed cell hierarchy.\n */\nmxGraphView.prototype.currentRoot = null;\n\n/**\n * Variable: graphBounds\n *\n * <mxRectangle> that caches the scales, translated bounds of the current view.\n */\nmxGraphView.prototype.graphBounds = null;\n\n/**\n * Variable: scale\n * \n * Specifies the scale. Default is 1 (100%).\n */\nmxGraphView.prototype.scale = 1;\n\t\n/**\n * Variable: translate\n *\n * <mxPoint> that specifies the current translation. Default is a new\n * empty <mxPoint>.\n */\nmxGraphView.prototype.translate = null;\n\n/**\n * Variable: states\n * \n * <mxDictionary> that maps from cell IDs to <mxCellStates>.\n */\nmxGraphView.prototype.states = null;\n\n/**\n * Variable: updateStyle\n * \n * Specifies if the style should be updated in each validation step. If this\n * is false then the style is only updated if the state is created or if the\n * style of the cell was changed. Default is false.\n */\nmxGraphView.prototype.updateStyle = false;\n\n/**\n * Variable: lastNode\n * \n * During validation, this contains the last DOM node that was processed.\n */\nmxGraphView.prototype.lastNode = null;\n\n/**\n * Variable: lastHtmlNode\n * \n * During validation, this contains the last HTML DOM node that was processed.\n */\nmxGraphView.prototype.lastHtmlNode = null;\n\n/**\n * Variable: lastForegroundNode\n * \n * During validation, this contains the last edge's DOM node that was processed.\n */\nmxGraphView.prototype.lastForegroundNode = null;\n\n/**\n * Variable: lastForegroundHtmlNode\n * \n * During validation, this contains the last edge HTML DOM node that was processed.\n */\nmxGraphView.prototype.lastForegroundHtmlNode = null;\n\n/**\n * Function: getGraphBounds\n *\n * Returns <graphBounds>.\n */\nmxGraphView.prototype.getGraphBounds = function()\n{\n\treturn this.graphBounds;\n};\n\n/**\n * Function: setGraphBounds\n *\n * Sets <graphBounds>.\n */\nmxGraphView.prototype.setGraphBounds = function(value)\n{\n\tthis.graphBounds = value;\n};\n\n/**\n * Function: getBounds\n * \n * Returns the union of all <mxCellStates> for the given array of <mxCells>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounds should be returned.\n */\nmxGraphView.prototype.getBounds = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (model.isVertex(cells[i]) || model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar state = this.getState(cells[i]);\n\t\t\t\n\t\t\t\tif (state != null)\n\t\t\t\t{\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(state);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: setCurrentRoot\n *\n * Sets and returns the current root and fires an <undo> event before\n * calling <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * root - <mxCell> that specifies the root of the displayed cell hierarchy.\n */\nmxGraphView.prototype.setCurrentRoot = function(root)\n{\n\tif (this.currentRoot != root)\n\t{\n\t\tvar change = new mxCurrentRootChange(this, root);\n\t\tchange.execute();\n\t\tvar edit = new mxUndoableEdit(this, false);\n\t\tedit.add(change);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n\t\tthis.graph.sizeDidChange();\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: scaleAndTranslate\n *\n * Sets the scale and translation and fires a <scale> and <translate> event\n * before calling <revalidate> followed by <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * scale - Decimal value that specifies the new scale (1 is 100%).\n * dx - X-coordinate of the translation.\n * dy - Y-coordinate of the translation.\n */\nmxGraphView.prototype.scaleAndTranslate = function(scale, dx, dy)\n{\n\tvar previousScale = this.scale;\n\tvar previousTranslate = new mxPoint(this.translate.x, this.translate.y);\n\t\n\tif (this.scale != scale || this.translate.x != dx || this.translate.y != dy)\n\t{\n\t\tthis.scale = scale;\n\t\t\n\t\tthis.translate.x = dx;\n\t\tthis.translate.y = dy;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SCALE_AND_TRANSLATE,\n\t\t'scale', scale, 'previousScale', previousScale,\n\t\t'translate', this.translate, 'previousTranslate', previousTranslate));\n};\n\n/**\n * Function: getScale\n * \n * Returns the <scale>.\n */\nmxGraphView.prototype.getScale = function()\n{\n\treturn this.scale;\n};\n\n/**\n * Function: setScale\n *\n * Sets the scale and fires a <scale> event before calling <revalidate> followed\n * by <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * value - Decimal value that specifies the new scale (1 is 100%).\n */\nmxGraphView.prototype.setScale = function(value)\n{\n\tvar previousScale = this.scale;\n\t\n\tif (this.scale != value)\n\t{\n\t\tthis.scale = value;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SCALE,\n\t\t'scale', value, 'previousScale', previousScale));\n};\n\n/**\n * Function: getTranslate\n * \n * Returns the <translate>.\n */\nmxGraphView.prototype.getTranslate = function()\n{\n\treturn this.translate;\n};\n\n/**\n * Function: setTranslate\n *\n * Sets the translation and fires a <translate> event before calling\n * <revalidate> followed by <mxGraph.sizeDidChange>. The translation is the\n * negative of the origin.\n *\n * Parameters:\n *\n * dx - X-coordinate of the translation.\n * dy - Y-coordinate of the translation.\n */\nmxGraphView.prototype.setTranslate = function(dx, dy)\n{\n\tvar previousTranslate = new mxPoint(this.translate.x, this.translate.y);\n\t\n\tif (this.translate.x != dx || this.translate.y != dy)\n\t{\n\t\tthis.translate.x = dx;\n\t\tthis.translate.y = dy;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.TRANSLATE,\n\t\t'translate', this.translate, 'previousTranslate', previousTranslate));\n};\n\n/**\n * Function: viewStateChanged\n * \n * Invoked after <scale> and/or <translate> has changed.\n */\nmxGraphView.prototype.viewStateChanged = function()\n{\n\tthis.revalidate();\n\tthis.graph.sizeDidChange();\n};\n\n/**\n * Function: refresh\n *\n * Clears the view if <currentRoot> is not null and revalidates.\n */\nmxGraphView.prototype.refresh = function()\n{\n\tif (this.currentRoot != null)\n\t{\n\t\tthis.clear();\n\t}\n\t\n\tthis.revalidate();\n};\n\n/**\n * Function: revalidate\n *\n * Revalidates the complete view with all cell states.\n */\nmxGraphView.prototype.revalidate = function()\n{\n\tthis.invalidate();\n\tthis.validate();\n};\n\n/**\n * Function: clear\n *\n * Removes the state of the given cell and all descendants if the given\n * cell is not the current root.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> for which the state should be removed. Default\n * is the root of the model.\n * force - Boolean indicating if the current root should be ignored for\n * recursion.\n */\nmxGraphView.prototype.clear = function(cell, force, recurse)\n{\n\tvar model = this.graph.getModel();\n\tcell = cell || model.getRoot();\n\tforce = (force != null) ? force : false;\n\trecurse = (recurse != null) ? recurse : true;\n\t\n\tthis.removeState(cell);\n\t\n\tif (recurse && (force || cell != this.currentRoot))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.clear(model.getChildAt(cell, i), force);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.invalidate(cell);\n\t}\n};\n\n/**\n * Function: invalidate\n * \n * Invalidates the state of the given cell, all its descendants and\n * connected edges.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be invalidated. Default is the root of the\n * model.\n */\nmxGraphView.prototype.invalidate = function(cell, recurse, includeEdges)\n{\n\tvar model = this.graph.getModel();\n\tcell = cell || model.getRoot();\n\trecurse = (recurse != null) ? recurse : true;\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tvar state = this.getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\tstate.invalid = true;\n\t}\n\t\n\t// Avoids infinite loops for invalid graphs\n\tif (!cell.invalidating)\n\t{\n\t\tcell.invalidating = true;\n\t\t\n\t\t// Recursively invalidates all descendants\n\t\tif (recurse)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\tthis.invalidate(child, recurse, includeEdges);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Propagates invalidation to all connected edges\n\t\tif (includeEdges)\n\t\t{\n\t\t\tvar edgeCount = model.getEdgeCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t{\n\t\t\t\tthis.invalidate(model.getEdgeAt(cell, i), recurse, includeEdges);\n\t\t\t}\n\t\t}\n\t\t\n\t\tdelete cell.invalidating;\n\t}\n};\n\n/**\n * Function: validate\n * \n * Calls <validateCell> and <validateCellState> and updates the <graphBounds>\n * using <getBoundingBox>. Finally the background is validated using\n * <validateBackground>.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be used as the root of the validation.\n * Default is <currentRoot> or the root of the model.\n */\nmxGraphView.prototype.validate = function(cell)\n{\n\tvar t0 = mxLog.enter('mxGraphView.validate');\n\twindow.status = mxResources.get(this.updatingDocumentResource) ||\n\t\tthis.updatingDocumentResource;\n\t\n\tthis.resetValidationState();\n\t\n\t// Improves IE rendering speed by minimizing reflows\n\tvar prevDisplay = null;\n\t\n\tif (this.optimizeVmlReflows && this.canvas != null && this.textDiv == null &&\n\t\t((document.documentMode == 8 && !mxClient.IS_EM) || mxClient.IS_QUIRKS))\n\t{\n\t\t// Placeholder keeps scrollbar positions when canvas is hidden\n\t\tthis.placeholder = document.createElement('div');\n\t\tthis.placeholder.style.position = 'absolute';\n\t\tthis.placeholder.style.width = this.canvas.clientWidth + 'px';\n\t\tthis.placeholder.style.height = this.canvas.clientHeight + 'px';\n\t\tthis.canvas.parentNode.appendChild(this.placeholder);\n\n\t\tprevDisplay = this.drawPane.style.display;\n\t\tthis.canvas.style.display = 'none';\n\t\t\n\t\t// Creates temporary DIV used for text measuring in mxText.updateBoundingBox\n\t\tthis.textDiv = document.createElement('div');\n\t\tthis.textDiv.style.position = 'absolute';\n\t\tthis.textDiv.style.whiteSpace = 'nowrap';\n\t\tthis.textDiv.style.visibility = 'hidden';\n\t\tthis.textDiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\tthis.textDiv.style.zoom = '1';\n\t\t\n\t\tdocument.body.appendChild(this.textDiv);\n\t}\n\t\n\tvar graphBounds = this.getBoundingBox(this.validateCellState(\n\t\tthis.validateCell(cell || ((this.currentRoot != null) ?\n\t\t\tthis.currentRoot : this.graph.getModel().getRoot()))));\n\tthis.setGraphBounds((graphBounds != null) ? graphBounds : this.getEmptyBounds());\n\tthis.validateBackground();\n\t\n\tif (prevDisplay != null)\n\t{\n\t\tthis.canvas.style.display = prevDisplay;\n\t\tthis.textDiv.parentNode.removeChild(this.textDiv);\n\t\t\n\t\tif (this.placeholder != null)\n\t\t{\n\t\t\tthis.placeholder.parentNode.removeChild(this.placeholder);\n\t\t}\n\t\t\t\t\n\t\t// Textdiv cannot be reused\n\t\tthis.textDiv = null;\n\t}\n\t\n\tthis.resetValidationState();\n\t\n\twindow.status = mxResources.get(this.doneResource) ||\n\t\tthis.doneResource;\n\tmxLog.leave('mxGraphView.validate', t0);\n};\n\n/**\n * Function: getEmptyBounds\n * \n * Returns the bounds for an empty graph. This returns a rectangle at\n * <translate> with the size of 0 x 0.\n */\nmxGraphView.prototype.getEmptyBounds = function()\n{\n\treturn new mxRectangle(this.translate.x * this.scale, this.translate.y * this.scale);\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the bounding box of the shape and the label for the given\n * <mxCellState> and its children if recurse is true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose bounding box should be returned.\n * recurse - Optional boolean indicating if the children should be included.\n * Default is true.\n */\nmxGraphView.prototype.getBoundingBox = function(state, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\tvar bbox = null;\n\t\n\tif (state != null)\n\t{\n\t\tif (state.shape != null && state.shape.boundingBox != null)\n\t\t{\n\t\t\tbbox = state.shape.boundingBox.clone();\n\t\t}\n\t\t\n\t\t// Adds label bounding box to graph bounds\n\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tif (bbox != null)\n\t\t\t{\n\t\t\t\tbbox.add(state.text.boundingBox);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbbox = state.text.boundingBox.clone();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (recurse)\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\tvar childCount = model.getChildCount(state.cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar bounds = this.getBoundingBox(this.getState(model.getChildAt(state.cell, i)));\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tif (bbox == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox = bounds;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox.add(bounds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn bbox;\n};\n\n/**\n * Function: createBackgroundPageShape\n *\n * Creates and returns the shape used as the background page.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that represents the bounds of the shape.\n */\nmxGraphView.prototype.createBackgroundPageShape = function(bounds)\n{\n\treturn new mxRectangleShape(bounds, 'white', 'black');\n};\n\n/**\n * Function: validateBackground\n *\n * Calls <validateBackgroundImage> and <validateBackgroundPage>.\n */\nmxGraphView.prototype.validateBackground = function()\n{\n\tthis.validateBackgroundImage();\n\tthis.validateBackgroundPage();\n};\n\n/**\n * Function: validateBackgroundImage\n * \n * Validates the background image.\n */\nmxGraphView.prototype.validateBackgroundImage = function()\n{\n\tvar bg = this.graph.getBackgroundImage();\n\t\n\tif (bg != null)\n\t{\n\t\tif (this.backgroundImage == null || this.backgroundImage.image != bg.src)\n\t\t{\n\t\t\tif (this.backgroundImage != null)\n\t\t\t{\n\t\t\t\tthis.backgroundImage.destroy();\n\t\t\t}\n\t\t\t\n\t\t\tvar bounds = new mxRectangle(0, 0, 1, 1);\n\t\t\t\n\t\t\tthis.backgroundImage = new mxImageShape(bounds, bg.src);\n\t\t\tthis.backgroundImage.dialect = this.graph.dialect;\n\t\t\tthis.backgroundImage.init(this.backgroundPane);\n\t\t\tthis.backgroundImage.redraw();\n\n\t\t\t// Workaround for ignored event on background in IE8 standards mode\n\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tmxEvent.addGestureListeners(this.backgroundImage.node,\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t\t\t}),\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t\t\t}),\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.redrawBackgroundImage(this.backgroundImage, bg);\n\t}\n\telse if (this.backgroundImage != null)\n\t{\n\t\tthis.backgroundImage.destroy();\n\t\tthis.backgroundImage = null;\n\t}\n};\n\n/**\n * Function: validateBackgroundPage\n * \n * Validates the background page.\n */\nmxGraphView.prototype.validateBackgroundPage = function()\n{\n\tif (this.graph.pageVisible)\n\t{\n\t\tvar bounds = this.getBackgroundPageBounds();\n\t\t\n\t\tif (this.backgroundPageShape == null)\n\t\t{\n\t\t\tthis.backgroundPageShape = this.createBackgroundPageShape(bounds);\n\t\t\tthis.backgroundPageShape.scale = this.scale;\n\t\t\tthis.backgroundPageShape.isShadow = true;\n\t\t\tthis.backgroundPageShape.dialect = this.graph.dialect;\n\t\t\tthis.backgroundPageShape.init(this.backgroundPane);\n\t\t\tthis.backgroundPageShape.redraw();\n\t\t\t\n\t\t\t// Adds listener for double click handling on background\n\t\t\tif (this.graph.nativeDblClickEnabled)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(this.backgroundPageShape.node, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.dblClick(evt);\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\t// Adds basic listeners for graph event dispatching outside of the\n\t\t\t// container and finishing the handling of a single gesture\n\t\t\tmxEvent.addGestureListeners(this.backgroundPageShape.node,\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\t// Hides the tooltip if mouse is outside container\n\t\t\t\t\tif (this.graph.tooltipHandler != null && this.graph.tooltipHandler.isHideOnHover())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.tooltipHandler.hide();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.graph.isMouseDown && !mxEvent.isConsumed(evt))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.backgroundPageShape.scale = this.scale;\n\t\t\tthis.backgroundPageShape.bounds = bounds;\n\t\t\tthis.backgroundPageShape.redraw();\n\t\t}\n\t}\n\telse if (this.backgroundPageShape != null)\n\t{\n\t\tthis.backgroundPageShape.destroy();\n\t\tthis.backgroundPageShape = null;\n\t}\n};\n\n/**\n * Function: getBackgroundPageBounds\n * \n * Returns the bounds for the background page.\n */\nmxGraphView.prototype.getBackgroundPageBounds = function()\n{\n\tvar fmt = this.graph.pageFormat;\n\tvar ps = this.scale * this.graph.pageScale;\n\tvar bounds = new mxRectangle(this.scale * this.translate.x, this.scale * this.translate.y,\n\t\t\tfmt.width * ps, fmt.height * ps);\n\t\n\treturn bounds;\n};\n\n/**\n * Function: redrawBackgroundImage\n *\n * Updates the bounds and redraws the background image.\n * \n * Example:\n * \n * If the background image should not be scaled, this can be replaced with\n * the following.\n * \n * (code)\n * mxGraphView.prototype.redrawBackground = function(backgroundImage, bg)\n * {\n *   backgroundImage.bounds.x = this.translate.x;\n *   backgroundImage.bounds.y = this.translate.y;\n *   backgroundImage.bounds.width = bg.width;\n *   backgroundImage.bounds.height = bg.height;\n *\n *   backgroundImage.redraw();\n * };\n * (end)\n * \n * Parameters:\n * \n * backgroundImage - <mxImageShape> that represents the background image.\n * bg - <mxImage> that specifies the image and its dimensions.\n */\nmxGraphView.prototype.redrawBackgroundImage = function(backgroundImage, bg)\n{\n\tbackgroundImage.scale = this.scale;\n\tbackgroundImage.bounds.x = this.scale * this.translate.x;\n\tbackgroundImage.bounds.y = this.scale * this.translate.y;\n\tbackgroundImage.bounds.width = this.scale * bg.width;\n\tbackgroundImage.bounds.height = this.scale * bg.height;\n\n\tbackgroundImage.redraw();\n};\n\n/**\n * Function: validateCell\n * \n * Recursively creates the cell state for the given cell if visible is true and\n * the given cell is visible. If the cell is not visible but the state exists\n * then it is removed using <removeState>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose <mxCellState> should be created.\n * visible - Optional boolean indicating if the cell should be visible. Default\n * is true.\n */\nmxGraphView.prototype.validateCell = function(cell, visible)\n{\n\tvisible = (visible != null) ? visible : true;\n\t\n\tif (cell != null)\n\t{\n\t\tvisible = visible && this.graph.isCellVisible(cell);\n\t\tvar state = this.getState(cell, visible);\n\t\t\n\t\tif (state != null && !visible)\n\t\t{\n\t\t\tthis.removeState(cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tthis.validateCell(model.getChildAt(cell, i), visible &&\n\t\t\t\t\t(!this.isCellCollapsed(cell) || cell == this.currentRoot));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: validateCellState\n * \n * Validates and repaints the <mxCellState> for the given <mxCell>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose <mxCellState> should be validated.\n * recurse - Optional boolean indicating if the children of the cell should be\n * validated. Default is true.\n */\nmxGraphView.prototype.validateCellState = function(cell, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\t\n\t\t\tif (state.invalid)\n\t\t\t{\n\t\t\t\tstate.invalid = false;\n\t\t\t\t\n\t\t\t\tif (state.style == null)\n\t\t\t\t{\n\t\t\t\t\tstate.style = this.graph.getCellStyle(state.cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (cell != this.currentRoot)\n\t\t\t\t{\n\t\t\t\t\tthis.validateCellState(model.getParent(cell), false);\n\t\t\t\t}\n\n\t\t\t\tstate.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, true), false), true);\n\t\t\t\tstate.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, false), false), false);\n\t\t\t\t\n\t\t\t\tthis.updateCellState(state);\n\t\t\t\t\n\t\t\t\t// Repaint happens immediately after the cell is validated\n\t\t\t\tif (cell != this.currentRoot && !state.invalid)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.cellRenderer.redraw(state, false, this.isRendering());\n\n\t\t\t\t\t// Handles changes to invertex paintbounds after update of rendering shape\n\t\t\t\t\tstate.updateCachedBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (recurse && !state.invalid)\n\t\t\t{\n\t\t\t\t// Updates order in DOM if recursively traversing\n\t\t\t\tif (state.shape != null)\n\t\t\t\t{\n\t\t\t\t\tthis.stateValidated(state);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.validateCellState(model.getChildAt(cell, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: updateCellState\n * \n * Updates the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to be updated.\n */\nmxGraphView.prototype.updateCellState = function(state)\n{\n\tstate.absoluteOffset.x = 0;\n\tstate.absoluteOffset.y = 0;\n\tstate.origin.x = 0;\n\tstate.origin.y = 0;\n\tstate.length = 0;\n\t\n\tif (state.cell != this.currentRoot)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\tvar pState = this.getState(model.getParent(state.cell)); \n\t\t\n\t\tif (pState != null && pState.cell != this.currentRoot)\n\t\t{\n\t\t\tstate.origin.x += pState.origin.x;\n\t\t\tstate.origin.y += pState.origin.y;\n\t\t}\n\t\t\n\t\tvar offset = this.graph.getChildOffsetForCell(state.cell);\n\t\t\n\t\tif (offset != null)\n\t\t{\n\t\t\tstate.origin.x += offset.x;\n\t\t\tstate.origin.y += offset.y;\n\t\t}\n\t\t\n\t\tvar geo = this.graph.getCellGeometry(state.cell);\t\t\t\t\n\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tif (!model.isEdge(state.cell))\n\t\t\t{\n\t\t\t\toffset = geo.offset || this.EMPTY_POINT;\n\t\n\t\t\t\tif (geo.relative && pState != null)\n\t\t\t\t{\n\t\t\t\t\tif (model.isEdge(pState.cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar origin = this.getPoint(pState, geo);\n\n\t\t\t\t\t\tif (origin != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.origin.x += (origin.x / this.scale) - pState.origin.x - this.translate.x;\n\t\t\t\t\t\t\tstate.origin.y += (origin.y / this.scale) - pState.origin.y - this.translate.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.origin.x += geo.x * pState.width / this.scale + offset.x;\n\t\t\t\t\t\tstate.origin.y += geo.y * pState.height / this.scale + offset.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstate.absoluteOffset.x = this.scale * offset.x;\n\t\t\t\t\tstate.absoluteOffset.y = this.scale * offset.y;\n\t\t\t\t\tstate.origin.x += geo.x;\n\t\t\t\t\tstate.origin.y += geo.y;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tstate.x = this.scale * (this.translate.x + state.origin.x);\n\t\t\tstate.y = this.scale * (this.translate.y + state.origin.y);\n\t\t\tstate.width = this.scale * geo.width;\n\t\t\tstate.unscaledWidth = geo.width;\n\t\t\tstate.height = this.scale * geo.height;\n\t\t\t\n\t\t\tif (model.isVertex(state.cell))\n\t\t\t{\n\t\t\t\tthis.updateVertexState(state, geo);\n\t\t\t}\n\t\t\t\n\t\t\tif (model.isEdge(state.cell))\n\t\t\t{\n\t\t\t\tthis.updateEdgeState(state, geo);\n\t\t\t}\n\t\t}\n\t}\n\n\tstate.updateCachedBounds();\n};\n\n/**\n * Function: isCellCollapsed\n * \n * Returns true if the children of the given cell should not be visible in the\n * view. This implementation uses <mxGraph.isCellVisible> but it can be\n * overidden to use a separate condition.\n */\nmxGraphView.prototype.isCellCollapsed = function(cell)\n{\n\treturn this.graph.isCellCollapsed(cell);\n};\n\n/**\n * Function: updateVertexState\n * \n * Validates the given cell state.\n */\nmxGraphView.prototype.updateVertexState = function(state, geo)\n{\n\tvar model = this.graph.getModel();\n\tvar pState = this.getState(model.getParent(state.cell));\n\t\n\tif (geo.relative && pState != null && !model.isEdge(pState.cell))\n\t{\n\t\tvar alpha = mxUtils.toRadians(pState.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(alpha);\n\t\t\tvar sin = Math.sin(alpha);\n\n\t\t\tvar ct = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\tvar cx = new mxPoint(pState.getCenterX(), pState.getCenterY());\n\t\t\tvar pt = mxUtils.getRotatedPoint(ct, cos, sin, cx);\n\t\t\tstate.x = pt.x - state.width / 2;\n\t\t\tstate.y = pt.y - state.height / 2;\n\t\t}\n\t}\n\t\n\tthis.updateVertexLabelOffset(state);\n};\n\n/**\n * Function: updateEdgeState\n * \n * Validates the given cell state.\n */\nmxGraphView.prototype.updateEdgeState = function(state, geo)\n{\n\tvar source = state.getVisibleTerminalState(true);\n\tvar target = state.getVisibleTerminalState(false);\n\t\n\t// This will remove edges with no terminals and no terminal points\n\t// as such edges are invalid and produce NPEs in the edge styles.\n\t// Also removes connected edges that have no visible terminals.\n\tif ((this.graph.model.getTerminal(state.cell, true) != null && source == null) ||\n\t\t(source == null && geo.getTerminalPoint(true) == null) ||\n\t\t(this.graph.model.getTerminal(state.cell, false) != null && target == null) ||\n\t\t(target == null && geo.getTerminalPoint(false) == null))\n\t{\n\t\tthis.clear(state.cell, true);\n\t}\n\telse\n\t{\n\t\tthis.updateFixedTerminalPoints(state, source, target);\n\t\tthis.updatePoints(state, geo.points, source, target);\n\t\tthis.updateFloatingTerminalPoints(state, source, target);\n\t\t\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tif (state.cell != this.currentRoot && (pts == null || pts.length < 2 ||\n\t\t\tpts[0] == null || pts[pts.length - 1] == null))\n\t\t{\n\t\t\t// This will remove edges with invalid points from the list of states in the view.\n\t\t\t// Happens if the one of the terminals and the corresponding terminal point is null.\n\t\t\tthis.clear(state.cell, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.updateEdgeBounds(state);\n\t\t\tthis.updateEdgeLabelOffset(state);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateVertexLabelOffset\n * \n * Updates the absoluteOffset of the given vertex cell state. This takes\n * into account the label position styles.\n * \n * Parameters:\n * \n * state - <mxCellState> whose absolute offset should be updated.\n */\nmxGraphView.prototype.updateVertexLabelOffset = function(state)\n{\n\tvar h = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\n\tif (h == mxConstants.ALIGN_LEFT)\n\t{\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tif (lw != null)\n\t\t{\n\t\t\tlw *= this.scale;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlw = state.width;\n\t\t}\n\t\t\n\t\tstate.absoluteOffset.x -= lw;\n\t}\n\telse if (h == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstate.absoluteOffset.x += state.width;\n\t}\n\telse if (h == mxConstants.ALIGN_CENTER)\n\t{\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tif (lw != null)\n\t\t{\n\t\t\t// Aligns text block with given width inside the vertex width\n\t\t\tvar align = mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_CENTER);\n\t\t\tvar dx = 0;\n\t\t\t\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tdx = 0.5;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tdx = 1;\n\t\t\t}\n\t\t\t\n\t\t\tif (dx != 0)\n\t\t\t{\n\t\t\t\tstate.absoluteOffset.x -= (lw * this.scale - state.width) * dx;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar v = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\n\tif (v == mxConstants.ALIGN_TOP)\n\t{\n\t\tstate.absoluteOffset.y -= state.height;\n\t}\n\telse if (v == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tstate.absoluteOffset.y += state.height;\n\t}\n};\n\n/**\n * Function: resetValidationState\n *\n * Resets the current validation state.\n */\nmxGraphView.prototype.resetValidationState = function()\n{\n\tthis.lastNode = null;\n\tthis.lastHtmlNode = null;\n\tthis.lastForegroundNode = null;\n\tthis.lastForegroundHtmlNode = null;\n};\n\n/**\n * Function: stateValidated\n * \n * Invoked when a state has been processed in <validatePoints>. This is used\n * to update the order of the DOM nodes of the shape.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the cell state.\n */\nmxGraphView.prototype.stateValidated = function(state)\n{\n\tvar fg = (this.graph.getModel().isEdge(state.cell) && this.graph.keepEdgesInForeground) ||\n\t\t(this.graph.getModel().isVertex(state.cell) && this.graph.keepEdgesInBackground);\n\tvar htmlNode = (fg) ? this.lastForegroundHtmlNode || this.lastHtmlNode : this.lastHtmlNode;\n\tvar node = (fg) ? this.lastForegroundNode || this.lastNode : this.lastNode;\n\tvar result = this.graph.cellRenderer.insertStateAfter(state, node, htmlNode);\n\n\tif (fg)\n\t{\n\t\tthis.lastForegroundHtmlNode = result[1];\n\t\tthis.lastForegroundNode = result[0];\n\t}\n\telse\n\t{\n\t\tthis.lastHtmlNode = result[1];\n\t\tthis.lastNode = result[0];\n\t}\n};\n\n/**\n * Function: updateFixedTerminalPoints\n *\n * Sets the initial absolute terminal points in the given state before the edge\n * style is computed.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose initial terminal points should be updated.\n * source - <mxCellState> which represents the source terminal.\n * target - <mxCellState> which represents the target terminal.\n */\nmxGraphView.prototype.updateFixedTerminalPoints = function(edge, source, target)\n{\n\tthis.updateFixedTerminalPoint(edge, source, true,\n\t\tthis.graph.getConnectionConstraint(edge, source, true));\n\tthis.updateFixedTerminalPoint(edge, target, false,\n\t\tthis.graph.getConnectionConstraint(edge, target, false));\n};\n\n/**\n * Function: updateFixedTerminalPoint\n *\n * Sets the fixed source or target terminal point on the given edge.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be updated.\n * terminal - <mxCellState> which represents the actual terminal.\n * source - Boolean that specifies if the terminal is the source.\n * constraint - <mxConnectionConstraint> that specifies the connection.\n */\nmxGraphView.prototype.updateFixedTerminalPoint = function(edge, terminal, source, constraint)\n{\n\tedge.setAbsoluteTerminalPoint(this.getFixedTerminalPoint(edge, terminal, source, constraint), source);\n};\n\n/**\n * Function: getFixedTerminalPoint\n *\n * Returns the fixed source or target terminal point for the given edge.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be returned.\n * terminal - <mxCellState> which represents the actual terminal.\n * source - Boolean that specifies if the terminal is the source.\n * constraint - <mxConnectionConstraint> that specifies the connection.\n */\nmxGraphView.prototype.getFixedTerminalPoint = function(edge, terminal, source, constraint)\n{\n\tvar pt = null;\n\t\n\tif (constraint != null)\n\t{\n\t\tpt = this.graph.getConnectionPoint(terminal, constraint);\n\t}\n\t\n\tif (pt == null && terminal == null)\n\t{\n\t\tvar s = this.scale;\n\t\tvar tr = this.translate;\n\t\tvar orig = edge.origin;\n\t\tvar geo = this.graph.getCellGeometry(edge.cell);\n\t\tpt = geo.getTerminalPoint(source);\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = new mxPoint(s * (tr.x + pt.x + orig.x),\n\t\t\t\t\t\t\t s * (tr.y + pt.y + orig.y));\n\t\t}\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: updateBoundsFromStencil\n * \n * Updates the bounds of the given cell state to reflect the bounds of the stencil\n * if it has a fixed aspect and returns the previous bounds as an <mxRectangle> if\n * the bounds have been modified or null otherwise.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose bounds should be updated.\n */\nmxGraphView.prototype.updateBoundsFromStencil = function(state)\n{\n\tvar previous = null;\n\t\n\tif (state != null && state.shape != null && state.shape.stencil != null && state.shape.stencil.aspect == 'fixed')\n\t{\n\t\tprevious = mxRectangle.fromRectangle(state);\n\t\tvar asp = state.shape.stencil.computeAspect(state.style, state.x, state.y, state.width, state.height);\n\t\tstate.setRect(asp.x, asp.y, state.shape.stencil.w0 * asp.width, state.shape.stencil.h0 * asp.height);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: updatePoints\n *\n * Updates the absolute points in the given state using the specified array\n * of <mxPoints> as the relative points.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose absolute points should be updated.\n * points - Array of <mxPoints> that constitute the relative points.\n * source - <mxCellState> that represents the source terminal.\n * target - <mxCellState> that represents the target terminal.\n */\nmxGraphView.prototype.updatePoints = function(edge, points, source, target)\n{\n\tif (edge != null)\n\t{\n\t\tvar pts = [];\n\t\tpts.push(edge.absolutePoints[0]);\n\t\tvar edgeStyle = this.getEdgeStyle(edge, points, source, target);\n\t\t\n\t\tif (edgeStyle != null)\n\t\t{\n\t\t\tvar src = this.getTerminalPort(edge, source, true);\n\t\t\tvar trg = this.getTerminalPort(edge, target, false);\n\t\t\t\n\t\t\t// Uses the stencil bounds for routing and restores after routing\n\t\t\tvar srcBounds = this.updateBoundsFromStencil(src);\n\t\t\tvar trgBounds = this.updateBoundsFromStencil(trg);\n\n\t\t\tedgeStyle(edge, src, trg, points, pts);\n\t\t\t\n\t\t\t// Restores previous bounds\n\t\t\tif (srcBounds != null)\n\t\t\t{\n\t\t\t\tsrc.setRect(srcBounds.x, srcBounds.y, srcBounds.width, srcBounds.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (trgBounds != null)\n\t\t\t{\n\t\t\t\ttrg.setRect(trgBounds.x, trgBounds.y, trgBounds.width, trgBounds.height);\n\t\t\t}\n\t\t}\n\t\telse if (points != null)\n\t\t{\n\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t{\n\t\t\t\tif (points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tvar pt = mxUtils.clone(points[i]);\n\t\t\t\t\tpts.push(this.transformControlPoint(edge, pt));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar tmp = edge.absolutePoints;\n\t\tpts.push(tmp[tmp.length-1]);\n\n\t\tedge.absolutePoints = pts;\n\t}\n};\n\n/**\n * Function: transformControlPoint\n *\n * Transforms the given control point to an absolute point.\n */\nmxGraphView.prototype.transformControlPoint = function(state, pt)\n{\n\tif (state != null && pt != null)\n\t{\n\t\tvar orig = state.origin;\n\t\t\n\t    return new mxPoint(this.scale * (pt.x + this.translate.x + orig.x),\n\t    \tthis.scale * (pt.y + this.translate.y + orig.y));\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: isLoopStyleEnabled\n * \n * Returns true if the given edge should be routed with <mxGraph.defaultLoopStyle>\n * or the <mxConstants.STYLE_LOOP> defined for the given edge. This implementation\n * returns true if the given edge is a loop and does not \n */\nmxGraphView.prototype.isLoopStyleEnabled = function(edge, points, source, target)\n{\n\tvar sc = this.graph.getConnectionConstraint(edge, source, true);\n\tvar tc = this.graph.getConnectionConstraint(edge, target, false);\n\t\n\tif ((points == null || points.length < 2) &&\n\t\t(!mxUtils.getValue(edge.style, mxConstants.STYLE_ORTHOGONAL_LOOP, false) ||\n\t\t((sc == null || sc.point == null) && (tc == null || tc.point == null))))\n\t{\n\t\treturn source != null && source == target;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getEdgeStyle\n * \n * Returns the edge style function to be used to render the given edge state.\n */\nmxGraphView.prototype.getEdgeStyle = function(edge, points, source, target)\n{\n\tvar edgeStyle = this.isLoopStyleEnabled(edge, points, source, target) ?\n\t\tmxUtils.getValue(edge.style, mxConstants.STYLE_LOOP, this.graph.defaultLoopStyle) :\n\t\t(!mxUtils.getValue(edge.style, mxConstants.STYLE_NOEDGESTYLE, false) ?\n\t\tedge.style[mxConstants.STYLE_EDGE] : null);\n\n\t// Converts string values to objects\n\tif (typeof(edgeStyle) == \"string\")\n\t{\n\t\tvar tmp = mxStyleRegistry.getValue(edgeStyle);\n\t\t\n\t\tif (tmp == null && this.isAllowEval())\n\t\t{\n \t\t\ttmp = mxUtils.eval(edgeStyle);\n\t\t}\n\t\t\n\t\tedgeStyle = tmp;\n\t}\n\t\n\tif (typeof(edgeStyle) == \"function\")\n\t{\n\t\treturn edgeStyle;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: updateFloatingTerminalPoints\n *\n * Updates the terminal points in the given state after the edge style was\n * computed for the edge.\n * \n * Parameters:\n * \n * state - <mxCellState> whose terminal points should be updated.\n * source - <mxCellState> that represents the source terminal.\n * target - <mxCellState> that represents the target terminal.\n */\nmxGraphView.prototype.updateFloatingTerminalPoints = function(state, source, target)\n{\n\tvar pts = state.absolutePoints;\n\tvar p0 = pts[0];\n\tvar pe = pts[pts.length - 1];\n\n\tif (pe == null && target != null)\n\t{\n\t\tthis.updateFloatingTerminalPoint(state, target, source, false);\n\t}\n\t\n\tif (p0 == null && source != null)\n\t{\n\t\tthis.updateFloatingTerminalPoint(state, source, target, true);\n\t}\n};\n\n/**\n * Function: updateFloatingTerminalPoint\n *\n * Updates the absolute terminal point in the given state for the given\n * start and end state, where start is the source if source is true.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be updated.\n * start - <mxCellState> for the terminal on \"this\" side of the edge.\n * end - <mxCellState> for the terminal on the other side of the edge.\n * source - Boolean indicating if start is the source terminal state.\n */\nmxGraphView.prototype.updateFloatingTerminalPoint = function(edge, start, end, source)\n{\n\tedge.setAbsoluteTerminalPoint(this.getFloatingTerminalPoint(edge, start, end, source), source);\n};\n\n/**\n * Function: getFloatingTerminalPoint\n * \n * Returns the floating terminal point for the given edge, start and end\n * state, where start is the source if source is true.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be returned.\n * start - <mxCellState> for the terminal on \"this\" side of the edge.\n * end - <mxCellState> for the terminal on the other side of the edge.\n * source - Boolean indicating if start is the source terminal state.\n */\nmxGraphView.prototype.getFloatingTerminalPoint = function(edge, start, end, source)\n{\n\tstart = this.getTerminalPort(edge, start, source);\n\tvar next = this.getNextPoint(edge, end, source);\n\t\n\tvar orth = this.graph.isOrthogonal(edge);\n\tvar alpha = mxUtils.toRadians(Number(start.style[mxConstants.STYLE_ROTATION] || '0'));\n\tvar center = new mxPoint(start.getCenterX(), start.getCenterY());\n\t\n\tif (alpha != 0)\n\t{\n\t\tvar cos = Math.cos(-alpha);\n\t\tvar sin = Math.sin(-alpha);\n\t\tnext = mxUtils.getRotatedPoint(next, cos, sin, center);\n\t}\n\t\n\tvar border = parseFloat(edge.style[mxConstants.STYLE_PERIMETER_SPACING] || 0);\n\tborder += parseFloat(edge.style[(source) ?\n\t\tmxConstants.STYLE_SOURCE_PERIMETER_SPACING :\n\t\tmxConstants.STYLE_TARGET_PERIMETER_SPACING] || 0);\n\tvar pt = this.getPerimeterPoint(start, next, alpha == 0 && orth, border);\n\n\tif (alpha != 0)\n\t{\n\t\tvar cos = Math.cos(alpha);\n\t\tvar sin = Math.sin(alpha);\n\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, center);\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: getTerminalPort\n * \n * Returns an <mxCellState> that represents the source or target terminal or\n * port for the given edge.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the edge.\n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean indicating if the given terminal is the source terminal.\n */\nmxGraphView.prototype.getTerminalPort = function(state, terminal, source)\n{\n\tvar key = (source) ? mxConstants.STYLE_SOURCE_PORT :\n\t\tmxConstants.STYLE_TARGET_PORT;\n\tvar id = mxUtils.getValue(state.style, key);\n\t\n\tif (id != null)\n\t{\n\t\tvar tmp = this.getState(this.graph.getModel().getCell(id));\n\t\t\n\t\t// Only uses ports where a cell state exists\n\t\tif (tmp != null)\n\t\t{\n\t\t\tterminal = tmp;\n\t\t}\n\t}\n\t\n\treturn terminal;\n};\n\n/**\n * Function: getPerimeterPoint\n *\n * Returns an <mxPoint> that defines the location of the intersection point between\n * the perimeter and the line between the center of the shape and the given point.\n * \n * Parameters:\n * \n * terminal - <mxCellState> for the source or target terminal.\n * next - <mxPoint> that lies outside of the given terminal.\n * orthogonal - Boolean that specifies if the orthogonal projection onto\n * the perimeter should be returned. If this is false then the intersection\n * of the perimeter and the line between the next and the center point is\n * returned.\n * border - Optional border between the perimeter and the shape.\n */\nmxGraphView.prototype.getPerimeterPoint = function(terminal, next, orthogonal, border)\n{\n\tvar point = null;\n\t\n\tif (terminal != null)\n\t{\n\t\tvar perimeter = this.getPerimeterFunction(terminal);\n\t\t\n\t\tif (perimeter != null && next != null)\n\t\t{\n\t\t\tvar bounds = this.getPerimeterBounds(terminal, border);\n\n\t\t\tif (bounds.width > 0 || bounds.height > 0)\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(next.x, next.y);\n\t\t\t\tvar flipH = false;\n\t\t\t\tvar flipV = false;\t\n\t\t\t\t\n\t\t\t\tif (this.graph.model.isVertex(terminal.cell))\n\t\t\t\t{\n\t\t\t\t\tflipH = mxUtils.getValue(terminal.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tflipV = mxUtils.getValue(terminal.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\n\t\t\t\t\t// Legacy support for stencilFlipH/V\n\t\t\t\t\tif (terminal.shape != null && terminal.shape.stencil != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflipH = (mxUtils.getValue(terminal.style, 'stencilFlipH', 0) == 1) || flipH;\n\t\t\t\t\t\tflipV = (mxUtils.getValue(terminal.style, 'stencilFlipV', 0) == 1) || flipV;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (flipH)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpoint = perimeter(bounds, terminal, point, orthogonal);\n\n\t\t\t\tif (point != null)\n\t\t\t\t{\n\t\t\t\t\tif (flipH)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (point == null)\n\t\t{\n\t\t\tpoint = this.getPoint(terminal);\n\t\t}\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getRoutingCenterX\n * \n * Returns the x-coordinate of the center point for automatic routing.\n */\nmxGraphView.prototype.getRoutingCenterX = function (state)\n{\n\tvar f = (state.style != null) ? parseFloat(state.style\n\t\t[mxConstants.STYLE_ROUTING_CENTER_X]) || 0 : 0;\n\n\treturn state.getCenterX() + f * state.width;\n};\n\n/**\n * Function: getRoutingCenterY\n * \n * Returns the y-coordinate of the center point for automatic routing.\n */\nmxGraphView.prototype.getRoutingCenterY = function (state)\n{\n\tvar f = (state.style != null) ? parseFloat(state.style\n\t\t[mxConstants.STYLE_ROUTING_CENTER_Y]) || 0 : 0;\n\n\treturn state.getCenterY() + f * state.height;\n};\n\n/**\n * Function: getPerimeterBounds\n *\n * Returns the perimeter bounds for the given terminal, edge pair as an\n * <mxRectangle>.\n * \n * If you have a model where each terminal has a relative child that should\n * act as the graphical endpoint for a connection from/to the terminal, then\n * this method can be replaced as follows:\n * \n * (code)\n * var oldGetPerimeterBounds = mxGraphView.prototype.getPerimeterBounds;\n * mxGraphView.prototype.getPerimeterBounds = function(terminal, edge, isSource)\n * {\n *   var model = this.graph.getModel();\n *   var childCount = model.getChildCount(terminal.cell);\n * \n *   if (childCount > 0)\n *   {\n *     var child = model.getChildAt(terminal.cell, 0);\n *     var geo = model.getGeometry(child);\n *\n *     if (geo != null &&\n *         geo.relative)\n *     {\n *       var state = this.getState(child);\n *       \n *       if (state != null)\n *       {\n *         terminal = state;\n *       }\n *     }\n *   }\n *   \n *   return oldGetPerimeterBounds.apply(this, arguments);\n * };\n * (end)\n * \n * Parameters:\n * \n * terminal - <mxCellState> that represents the terminal.\n * border - Number that adds a border between the shape and the perimeter.\n */\nmxGraphView.prototype.getPerimeterBounds = function(terminal, border)\n{\n\tborder = (border != null) ? border : 0;\n\n\tif (terminal != null)\n\t{\n\t\tborder += parseFloat(terminal.style[mxConstants.STYLE_PERIMETER_SPACING] || 0);\n\t}\n\n\treturn terminal.getPerimeterBounds(border * this.scale);\n};\n\n/**\n * Function: getPerimeterFunction\n *\n * Returns the perimeter function for the given state.\n */\nmxGraphView.prototype.getPerimeterFunction = function(state)\n{\n\tvar perimeter = state.style[mxConstants.STYLE_PERIMETER];\n\n\t// Converts string values to objects\n\tif (typeof(perimeter) == \"string\")\n\t{\n\t\tvar tmp = mxStyleRegistry.getValue(perimeter);\n\t\t\n\t\tif (tmp == null && this.isAllowEval())\n\t\t{\n \t\t\ttmp = mxUtils.eval(perimeter);\n\t\t}\n\n\t\tperimeter = tmp;\n\t}\n\t\n\tif (typeof(perimeter) == \"function\")\n\t{\n\t\treturn perimeter;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getNextPoint\n *\n * Returns the nearest point in the list of absolute points or the center\n * of the opposite terminal.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n * opposite - <mxCellState> that represents the opposite terminal.\n * source - Boolean indicating if the next point for the source or target\n * should be returned.\n */\nmxGraphView.prototype.getNextPoint = function(edge, opposite, source)\n{\n\tvar pts = edge.absolutePoints;\n\tvar point = null;\n\t\n\tif (pts != null && pts.length >= 2)\n\t{\n\t\tvar count = pts.length;\n\t\tpoint = pts[(source) ? Math.min(1, count - 1) : Math.max(0, count - 2)];\n\t}\n\t\n\tif (point == null && opposite != null)\n\t{\n\t\tpoint = new mxPoint(opposite.getCenterX(), opposite.getCenterY());\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getVisibleTerminal\n *\n * Returns the nearest ancestor terminal that is visible. The edge appears\n * to be connected to this terminal on the display. The result of this method\n * is cached in <mxCellState.getVisibleTerminalState>.\n * \n * Parameters:\n * \n * edge - <mxCell> whose visible terminal should be returned.\n * source - Boolean that specifies if the source or target terminal\n * should be returned.\n */\nmxGraphView.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar model = this.graph.getModel();\n\tvar result = model.getTerminal(edge, source);\n\tvar best = result;\n\t\n\twhile (result != null && result != this.currentRoot)\n\t{\n\t\tif (!this.graph.isCellVisible(best) || this.isCellCollapsed(result))\n\t\t{\n\t\t\tbest = result;\n\t\t}\n\t\t\n\t\tresult = model.getParent(result);\n\t}\n\n\t// Checks if the result is not a layer\n\tif (model.getParent(best) == model.getRoot())\n\t{\n\t\tbest = null;\n\t}\n\t\n\treturn best;\n};\n\n/**\n * Function: updateEdgeBounds\n *\n * Updates the given state using the bounding box of t\n * he absolute points.\n * Also updates <mxCellState.terminalDistance>, <mxCellState.length> and\n * <mxCellState.segments>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose bounds should be updated.\n */\nmxGraphView.prototype.updateEdgeBounds = function(state)\n{\n\tvar points = state.absolutePoints;\n\tvar p0 = points[0];\n\tvar pe = points[points.length - 1];\n\t\n\tif (p0.x != pe.x || p0.y != pe.y)\n\t{\n\t\tvar dx = pe.x - p0.x;\n\t\tvar dy = pe.y - p0.y;\n\t\tstate.terminalDistance = Math.sqrt(dx * dx + dy * dy);\n\t}\n\telse\n\t{\n\t\tstate.terminalDistance = 0;\n\t}\n\t\n\tvar length = 0;\n\tvar segments = [];\n\tvar pt = p0;\n\t\n\tif (pt != null)\n\t{\n\t\tvar minX = pt.x;\n\t\tvar minY = pt.y;\n\t\tvar maxX = minX;\n\t\tvar maxY = minY;\n\t\t\n\t\tfor (var i = 1; i < points.length; i++)\n\t\t{\n\t\t\tvar tmp = points[i];\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tvar dx = pt.x - tmp.x;\n\t\t\t\tvar dy = pt.y - tmp.y;\n\t\t\t\t\n\t\t\t\tvar segment = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tsegments.push(segment);\n\t\t\t\tlength += segment;\n\t\t\t\t\n\t\t\t\tpt = tmp;\n\t\t\t\t\n\t\t\t\tminX = Math.min(pt.x, minX);\n\t\t\t\tminY = Math.min(pt.y, minY);\n\t\t\t\tmaxX = Math.max(pt.x, maxX);\n\t\t\t\tmaxY = Math.max(pt.y, maxY);\n\t\t\t}\n\t\t}\n\t\t\n\t\tstate.length = length;\n\t\tstate.segments = segments;\n\t\t\n\t\tvar markerSize = 1; // TODO: include marker size\n\t\t\n\t\tstate.x = minX;\n\t\tstate.y = minY;\n\t\tstate.width = Math.max(markerSize, maxX - minX);\n\t\tstate.height = Math.max(markerSize, maxY - minY);\n\t}\n};\n\n/**\n * Function: getPoint\n *\n * Returns the absolute point on the edge for the given relative\n * <mxGeometry> as an <mxPoint>. The edge is represented by the given\n * <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the parent edge.\n * geometry - <mxGeometry> that represents the relative location.\n */\nmxGraphView.prototype.getPoint = function(state, geometry)\n{\n\tvar x = state.getCenterX();\n\tvar y = state.getCenterY();\n\t\n\tif (state.segments != null && (geometry == null || geometry.relative))\n\t{\n\t\tvar gx = (geometry != null) ? geometry.x / 2 : 0;\n\t\tvar pointCount = state.absolutePoints.length;\n\t\tvar dist = Math.round((gx + 0.5) * state.length);\n\t\tvar segment = state.segments[0];\n\t\tvar length = 0;\t\t\t\t\n\t\tvar index = 1;\n\n\t\twhile (dist >= Math.round(length + segment) && index < pointCount - 1)\n\t\t{\n\t\t\tlength += segment;\n\t\t\tsegment = state.segments[index++];\n\t\t}\n\n\t\tvar factor = (segment == 0) ? 0 : (dist - length) / segment;\n\t\tvar p0 = state.absolutePoints[index-1];\n\t\tvar pe = state.absolutePoints[index];\n\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tvar gy = 0;\n\t\t\tvar offsetX = 0;\n\t\t\tvar offsetY = 0;\n\n\t\t\tif (geometry != null)\n\t\t\t{\n\t\t\t\tgy = geometry.y;\n\t\t\t\tvar offset = geometry.offset;\n\t\t\t\t\n\t\t\t\tif (offset != null)\n\t\t\t\t{\n\t\t\t\t\toffsetX = offset.x;\n\t\t\t\t\toffsetY = offset.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dx = pe.x - p0.x;\n\t\t\tvar dy = pe.y - p0.y;\n\t\t\tvar nx = (segment == 0) ? 0 : dy / segment;\n\t\t\tvar ny = (segment == 0) ? 0 : dx / segment;\n\t\t\t\n\t\t\tx = p0.x + dx * factor + (nx * gy + offsetX) * this.scale;\n\t\t\ty = p0.y + dy * factor - (ny * gy - offsetY) * this.scale;\n\t\t}\n\t}\n\telse if (geometry != null)\n\t{\n\t\tvar offset = geometry.offset;\n\t\t\n\t\tif (offset != null)\n\t\t{\n\t\t\tx += offset.x;\n\t\t\ty += offset.y;\n\t\t}\n\t}\n\t\n\treturn new mxPoint(x, y);\t\t\n};\n\n/**\n * Function: getRelativePoint\n *\n * Gets the relative point that describes the given, absolute label\n * position for the given edge state.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the parent edge.\n * x - Specifies the x-coordinate of the absolute label location.\n * y - Specifies the y-coordinate of the absolute label location.\n */\nmxGraphView.prototype.getRelativePoint = function(edgeState, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(edgeState.cell);\n\t\n\tif (geometry != null)\n\t{\n\t\tvar pointCount = edgeState.absolutePoints.length;\n\t\t\n\t\tif (geometry.relative && pointCount > 1)\n\t\t{\n\t\t\tvar totalLength = edgeState.length;\n\t\t\tvar segments = edgeState.segments;\n\n\t\t\t// Works which line segment the point of the label is closest to\n\t\t\tvar p0 = edgeState.absolutePoints[0];\n\t\t\tvar pe = edgeState.absolutePoints[1];\n\t\t\tvar minDist = mxUtils.ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\tvar index = 0;\n\t\t\tvar tmp = 0;\n\t\t\tvar length = 0;\n\t\t\t\n\t\t\tfor (var i = 2; i < pointCount; i++)\n\t\t\t{\n\t\t\t\ttmp += segments[i - 2];\n\t\t\t\tpe = edgeState.absolutePoints[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\t\tif (dist <= minDist)\n\t\t\t\t{\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tindex = i - 1;\n\t\t\t\t\tlength = tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tp0 = pe;\n\t\t\t}\n\t\t\t\n\t\t\tvar seg = segments[index];\n\t\t\tp0 = edgeState.absolutePoints[index];\n\t\t\tpe = edgeState.absolutePoints[index + 1];\n\t\t\t\n\t\t\tvar x2 = p0.x;\n\t\t\tvar y2 = p0.y;\n\t\t\t\n\t\t\tvar x1 = pe.x;\n\t\t\tvar y1 = pe.y;\n\t\t\t\n\t\t\tvar px = x;\n\t\t\tvar py = y;\n\t\t\t\n\t\t\tvar xSegment = x2 - x1;\n\t\t\tvar ySegment = y2 - y1;\n\t\t\t\n\t\t\tpx -= x1;\n\t\t\tpy -= y1;\n\t\t\tvar projlenSq = 0;\n\t\t\t\n\t\t\tpx = xSegment - px;\n\t\t\tpy = ySegment - py;\n\t\t\tvar dotprod = px * xSegment + py * ySegment;\n\n\t\t\tif (dotprod <= 0.0)\n\t\t\t{\n\t\t\t\tprojlenSq = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprojlenSq = dotprod * dotprod\n\t\t\t\t\t\t/ (xSegment * xSegment + ySegment * ySegment);\n\t\t\t}\n\n\t\t\tvar projlen = Math.sqrt(projlenSq);\n\n\t\t\tif (projlen > seg)\n\t\t\t{\n\t\t\t\tprojlen = seg;\n\t\t\t}\n\n\t\t\tvar yDistance = Math.sqrt(mxUtils.ptSegDistSq(p0.x, p0.y, pe\n\t\t\t\t\t.x, pe.y, x, y));\n\t\t\tvar direction = mxUtils.relativeCcw(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\tif (direction == -1)\n\t\t\t{\n\t\t\t\tyDistance = -yDistance;\n\t\t\t}\n\n\t\t\t// Constructs the relative point for the label\n\t\t\treturn new mxPoint(((totalLength / 2 - length - projlen) / totalLength) * -2,\n\t\t\t\t\t\tyDistance / this.scale);\n\t\t}\n\t}\n\t\n\treturn new mxPoint();\n};\n\n/**\n * Function: updateEdgeLabelOffset\n *\n * Updates <mxCellState.absoluteOffset> for the given state. The absolute\n * offset is normally used for the position of the edge label. Is is\n * calculated from the geometry as an absolute offset from the center\n * between the two endpoints if the geometry is absolute, or as the\n * relative distance between the center along the line and the absolute\n * orthogonal distance if the geometry is relative.\n * \n * Parameters:\n * \n * state - <mxCellState> whose absolute offset should be updated.\n */\nmxGraphView.prototype.updateEdgeLabelOffset = function(state)\n{\n\tvar points = state.absolutePoints;\n\t\n\tstate.absoluteOffset.x = state.getCenterX();\n\tstate.absoluteOffset.y = state.getCenterY();\n\n\tif (points != null && points.length > 0 && state.segments != null)\n\t{\n\t\tvar geometry = this.graph.getCellGeometry(state.cell);\n\t\t\n\t\tif (geometry.relative)\n\t\t{\n\t\t\tvar offset = this.getPoint(state, geometry);\n\t\t\t\n\t\t\tif (offset != null)\n\t\t\t{\n\t\t\t\tstate.absoluteOffset = offset;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar p0 = points[0];\n\t\t\tvar pe = points[points.length - 1];\n\t\t\t\n\t\t\tif (p0 != null && pe != null)\n\t\t\t{\n\t\t\t\tvar dx = pe.x - p0.x;\n\t\t\t\tvar dy = pe.y - p0.y;\n\t\t\t\tvar x0 = 0;\n\t\t\t\tvar y0 = 0;\n\n\t\t\t\tvar off = geometry.offset;\n\t\t\t\t\n\t\t\t\tif (off != null)\n\t\t\t\t{\n\t\t\t\t\tx0 = off.x;\n\t\t\t\t\ty0 = off.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar x = p0.x + dx / 2 + x0 * this.scale;\n\t\t\t\tvar y = p0.y + dy / 2 + y0 * this.scale;\n\t\t\t\t\n\t\t\t\tstate.absoluteOffset.x = x;\n\t\t\t\tstate.absoluteOffset.y = y;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getState\n *\n * Returns the <mxCellState> for the given cell. If create is true, then\n * the state is created if it does not yet exist.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the <mxCellState> should be returned.\n * create - Optional boolean indicating if a new state should be created\n * if it does not yet exist. Default is false.\n */\nmxGraphView.prototype.getState = function(cell, create)\n{\n\tcreate = create || false;\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.states.get(cell);\n\t\t\n\t\tif (create && (state == null || this.updateStyle) && this.graph.isCellVisible(cell))\n\t\t{\n\t\t\tif (state == null)\n\t\t\t{\n\t\t\t\tstate = this.createState(cell);\n\t\t\t\tthis.states.put(cell, state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.style = this.graph.getCellStyle(cell);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn state;\n};\n\n/**\n * Function: isRendering\n *\n * Returns <rendering>.\n */\nmxGraphView.prototype.isRendering = function()\n{\n\treturn this.rendering;\n};\n\n/**\n * Function: setRendering\n *\n * Sets <rendering>.\n */\nmxGraphView.prototype.setRendering = function(value)\n{\n\tthis.rendering = value;\n};\n\n/**\n * Function: isAllowEval\n *\n * Returns <allowEval>.\n */\nmxGraphView.prototype.isAllowEval = function()\n{\n\treturn this.allowEval;\n};\n\n/**\n * Function: setAllowEval\n *\n * Sets <allowEval>.\n */\nmxGraphView.prototype.setAllowEval = function(value)\n{\n\tthis.allowEval = value;\n};\n\n/**\n * Function: getStates\n *\n * Returns <states>.\n */\nmxGraphView.prototype.getStates = function()\n{\n\treturn this.states;\n};\n\n/**\n * Function: setStates\n *\n * Sets <states>.\n */\nmxGraphView.prototype.setStates = function(value)\n{\n\tthis.states = value;\n};\n\n/**\n * Function: getCellStates\n *\n * Returns the <mxCellStates> for the given array of <mxCells>. The array\n * contains all states that are not null, that is, the returned array may\n * have less elements than the given array. If no argument is given, then\n * this returns <states>.\n */\nmxGraphView.prototype.getCellStates = function(cells)\n{\n\tif (cells == null)\n\t{\n\t\treturn this.states;\n\t}\n\telse\n\t{\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar state = this.getState(cells[i]);\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\tresult.push(state);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: removeState\n *\n * Removes and returns the <mxCellState> for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the <mxCellState> should be removed.\n */\nmxGraphView.prototype.removeState = function(cell)\n{\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.states.remove(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.graph.cellRenderer.destroy(state);\n\t\t\tstate.invalid = true;\n\t\t\tstate.destroy();\n\t\t}\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: createState\n *\n * Creates and returns an <mxCellState> for the given cell and initializes\n * it using <mxCellRenderer.initialize>.\n * \n * Parameters:\n * \n * cell - <mxCell> for which a new <mxCellState> should be created.\n */\nmxGraphView.prototype.createState = function(cell)\n{\n\treturn new mxCellState(this, cell, this.graph.getCellStyle(cell));\n};\n\n/**\n * Function: getCanvas\n *\n * Returns the DOM node that contains the background-, draw- and\n * overlay- and decoratorpanes.\n */\nmxGraphView.prototype.getCanvas = function()\n{\n\treturn this.canvas;\n};\n\n/**\n * Function: getBackgroundPane\n *\n * Returns the DOM node that represents the background layer.\n */\nmxGraphView.prototype.getBackgroundPane = function()\n{\n\treturn this.backgroundPane;\n};\n\n/**\n * Function: getDrawPane\n *\n * Returns the DOM node that represents the main drawing layer.\n */\nmxGraphView.prototype.getDrawPane = function()\n{\n\treturn this.drawPane;\n};\n\n/**\n * Function: getOverlayPane\n *\n * Returns the DOM node that represents the layer above the drawing layer.\n */\nmxGraphView.prototype.getOverlayPane = function()\n{\n\treturn this.overlayPane;\n};\n\n/**\n * Function: getDecoratorPane\n *\n * Returns the DOM node that represents the topmost drawing layer.\n */\nmxGraphView.prototype.getDecoratorPane = function()\n{\n\treturn this.decoratorPane;\n};\n\n/**\n * Function: isContainerEvent\n * \n * Returns true if the event origin is one of the drawing panes or\n * containers of the view.\n */\nmxGraphView.prototype.isContainerEvent = function(evt)\n{\n\tvar source = mxEvent.getSource(evt);\n\n\treturn (source == this.graph.container ||\n\t\tsource.parentNode == this.backgroundPane ||\n\t\t(source.parentNode != null &&\n\t\tsource.parentNode.parentNode == this.backgroundPane) ||\n\t\tsource == this.canvas.parentNode ||\n\t\tsource == this.canvas ||\n\t\tsource == this.backgroundPane ||\n\t\tsource == this.drawPane ||\n\t\tsource == this.overlayPane ||\n\t\tsource == this.decoratorPane);\n};\n\n/**\n * Function: isScrollEvent\n * \n * Returns true if the event origin is one of the scrollbars of the\n * container in IE. Such events are ignored.\n */\n mxGraphView.prototype.isScrollEvent = function(evt)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar pt = new mxPoint(evt.clientX - offset.x, evt.clientY - offset.y);\n\n\tvar outWidth = this.graph.container.offsetWidth;\n\tvar inWidth = this.graph.container.clientWidth;\n\n\tif (outWidth > inWidth && pt.x > inWidth + 2 && pt.x <= outWidth)\n\t{\n\t\treturn true;\n\t}\n\n\tvar outHeight = this.graph.container.offsetHeight;\n\tvar inHeight = this.graph.container.clientHeight;\n\t\n\tif (outHeight > inHeight && pt.y > inHeight + 2 && pt.y <= outHeight)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: init\n *\n * Initializes the graph event dispatch loop for the specified container\n * and invokes <create> to create the required DOM nodes for the display.\n */\nmxGraphView.prototype.init = function()\n{\n\tthis.installListeners();\n\t\n\t// Creates the DOM nodes for the respective display dialect\n\tvar graph = this.graph;\n\t\n\tif (graph.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tthis.createSvg();\n\t}\n\telse if (graph.dialect == mxConstants.DIALECT_VML)\n\t{\n\t\tthis.createVml();\n\t}\n\telse\n\t{\n\t\tthis.createHtml();\n\t}\n};\n\n/**\n * Function: installListeners\n *\n * Installs the required listeners in the container.\n */\nmxGraphView.prototype.installListeners = function()\n{\n\tvar graph = this.graph;\n\tvar container = graph.container;\n\t\n\tif (container != null)\n\t{\n\t\t// Support for touch device gestures (eg. pinch to zoom)\n\t\t// Double-tap handling is implemented in mxGraph.fireMouseEvent\n\t\tif (mxClient.IS_TOUCH)\n\t\t{\n\t\t\tmxEvent.addListener(container, 'gesturestart', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\t\t\t\n\t\t\tmxEvent.addListener(container, 'gesturechange', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\n\t\t\tmxEvent.addListener(container, 'gestureend', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\t\t}\n\t\t\n\t\t// Adds basic listeners for graph event dispatching\n\t\tmxEvent.addGestureListeners(container, mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\t// Condition to avoid scrollbar events starting a rubberband selection\n\t\t\tif (this.isContainerEvent(evt) && ((!mxClient.IS_IE && !mxClient.IS_IE11 && !mxClient.IS_GC &&\n\t\t\t\t!mxClient.IS_OP && !mxClient.IS_SF) || !this.isScrollEvent(evt)))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}));\n\t\t\n\t\t// Adds listener for double click handling on background, this does always\n\t\t// use native event handler, we assume that the DOM of the background\n\t\t// does not change during the double click\n\t\tmxEvent.addListener(container, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.dblClick(evt);\n\t\t\t}\n\t\t}));\n\n\t\t// Workaround for touch events which started on some DOM node\n\t\t// on top of the container, in which case the cells under the\n\t\t// mouse for the move and up events are not detected.\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\tvar state = null;\n\t\t\t\n\t\t\t// Workaround for touch events which started on some DOM node\n\t\t\t// on top of the container, in which case the cells under the\n\t\t\t// mouse for the move and up events are not detected.\n\t\t\tif (mxClient.IS_TOUCH)\n\t\t\t{\n\t\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\t\n\t\t\t\t// Dispatches the drop event to the graph which\n\t\t\t\t// consumes and executes the source function\n\t\t\t\tvar pt = mxUtils.convertPoint(container, x, y);\n\t\t\t\tstate = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\treturn state;\n\t\t};\n\t\t\n\t\t// Adds basic listeners for graph event dispatching outside of the\n\t\t// container and finishing the handling of a single gesture\n\t\t// Implemented via graph event dispatch loop to avoid duplicate events\n\t\t// in Firefox and Chrome\n\t\tgraph.addMouseListener(\n\t\t{\n\t\t\tmouseDown: function(sender, me)\n\t\t\t{\n\t\t\t\tgraph.popupMenuHandler.hideMenu();\n\t\t\t},\n\t\t\tmouseMove: function() { },\n\t\t\tmouseUp: function() { }\n\t\t});\n\t\t\n\t\tthis.moveHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\t// Hides the tooltip if mouse is outside container\n\t\t\tif (graph.tooltipHandler != null && graph.tooltipHandler.isHideOnHover())\n\t\t\t{\n\t\t\t\tgraph.tooltipHandler.hide();\n\t\t\t}\n\n\t\t\tif (this.captureDocumentGesture && graph.isMouseDown && graph.container != null &&\n\t\t\t\t!this.isContainerEvent(evt) && graph.container.style.display != 'none' &&\n\t\t\t\tgraph.container.style.visibility != 'hidden' && !mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.endHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.captureDocumentGesture && graph.isMouseDown && graph.container != null &&\n\t\t\t\t!this.isContainerEvent(evt) && graph.container.style.display != 'none' &&\n\t\t\t\tgraph.container.style.visibility != 'hidden')\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t}\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(document, null, this.moveHandler, this.endHandler);\n\t}\n};\n\n/**\n * Function: create\n *\n * Creates the DOM nodes for the HTML display.\n */\nmxGraphView.prototype.createHtml = function()\n{\n\tvar container = this.graph.container;\n\t\n\tif (container != null)\n\t{\n\t\tthis.canvas = this.createHtmlPane('100%', '100%');\n\t\tthis.canvas.style.overflow = 'hidden';\n\t\n\t\t// Uses minimal size for inner DIVs on Canvas. This is required\n\t\t// for correct event processing in IE. If we have an overlapping\n\t\t// DIV then the events on the cells are only fired for labels.\n\t\tthis.backgroundPane = this.createHtmlPane('1px', '1px');\n\t\tthis.drawPane = this.createHtmlPane('1px', '1px');\n\t\tthis.overlayPane = this.createHtmlPane('1px', '1px');\n\t\tthis.decoratorPane = this.createHtmlPane('1px', '1px');\n\t\t\n\t\tthis.canvas.appendChild(this.backgroundPane);\n\t\tthis.canvas.appendChild(this.drawPane);\n\t\tthis.canvas.appendChild(this.overlayPane);\n\t\tthis.canvas.appendChild(this.decoratorPane);\n\n\t\tcontainer.appendChild(this.canvas);\n\t\tthis.updateContainerStyle(container);\n\t\t\n\t\t// Implements minWidth/minHeight in quirks mode\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tvar onResize = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tvar bounds = this.getGraphBounds();\n\t\t\t\tvar width = bounds.x + bounds.width + this.graph.border;\n\t\t\t\tvar height = bounds.y + bounds.height + this.graph.border;\n\t\t\t\t\n\t\t\t\tthis.updateHtmlCanvasSize(width, height);\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addListener(window, 'resize', onResize);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateHtmlCanvasSize\n * \n * Updates the size of the HTML canvas.\n */\nmxGraphView.prototype.updateHtmlCanvasSize = function(width, height)\n{\n\tif (this.graph.container != null)\n\t{\n\t\tvar ow = this.graph.container.offsetWidth;\n\t\tvar oh = this.graph.container.offsetHeight;\n\n\t\tif (ow < width)\n\t\t{\n\t\t\tthis.canvas.style.width = width + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.canvas.style.width = '100%';\n\t\t}\n\n\t\tif (oh < height)\n\t\t{\n\t\t\tthis.canvas.style.height = height + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.canvas.style.height = '100%';\n\t\t}\n\t}\n};\n\n/**\n * Function: createHtmlPane\n * \n * Creates and returns a drawing pane in HTML (DIV).\n */\nmxGraphView.prototype.createHtmlPane = function(width, height)\n{\n\tvar pane = document.createElement('DIV');\n\t\n\tif (width != null && height != null)\n\t{\n\t\tpane.style.position = 'absolute';\n\t\tpane.style.left = '0px';\n\t\tpane.style.top = '0px';\n\n\t\tpane.style.width = width;\n\t\tpane.style.height = height;\n\t}\n\telse\n\t{\n\t\tpane.style.position = 'relative';\n\t}\n\t\n\treturn pane;\n};\n\n/**\n * Function: create\n *\n * Creates the DOM nodes for the VML display.\n */\nmxGraphView.prototype.createVml = function()\n{\n\tvar container = this.graph.container;\n\n\tif (container != null)\n\t{\n\t\tvar width = container.offsetWidth;\n\t\tvar height = container.offsetHeight;\n\t\tthis.canvas = this.createVmlPane(width, height);\n\t\tthis.canvas.style.overflow = 'hidden';\n\t\t\n\t\tthis.backgroundPane = this.createVmlPane(width, height);\n\t\tthis.drawPane = this.createVmlPane(width, height);\n\t\tthis.overlayPane = this.createVmlPane(width, height);\n\t\tthis.decoratorPane = this.createVmlPane(width, height);\n\t\t\n\t\tthis.canvas.appendChild(this.backgroundPane);\n\t\tthis.canvas.appendChild(this.drawPane);\n\t\tthis.canvas.appendChild(this.overlayPane);\n\t\tthis.canvas.appendChild(this.decoratorPane);\n\t\t\n\t\tcontainer.appendChild(this.canvas);\n\t}\n};\n\n/**\n * Function: createVmlPane\n * \n * Creates a drawing pane in VML (group).\n */\nmxGraphView.prototype.createVmlPane = function(width, height)\n{\n\tvar pane = document.createElement(mxClient.VML_PREFIX + ':group');\n\t\n\t// At this point the width and height are potentially\n\t// uninitialized. That's OK.\n\tpane.style.position = 'absolute';\n\tpane.style.left = '0px';\n\tpane.style.top = '0px';\n\n\tpane.style.width = width + 'px';\n\tpane.style.height = height + 'px';\n\n\tpane.setAttribute('coordsize', width + ',' + height);\n\tpane.setAttribute('coordorigin', '0,0');\n\t\n\treturn pane;\n};\n\n/**\n * Function: create\n *\n * Creates and returns the DOM nodes for the SVG display.\n */\nmxGraphView.prototype.createSvg = function()\n{\n\tvar container = this.graph.container;\n\tthis.canvas = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\n\t// For background image\n\tthis.backgroundPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.backgroundPane);\n\n\t// Adds two layers (background is early feature)\n\tthis.drawPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.drawPane);\n\n\tthis.overlayPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.overlayPane);\n\t\n\tthis.decoratorPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.decoratorPane);\n\t\n\tvar root = document.createElementNS(mxConstants.NS_SVG, 'svg');\n\troot.style.left = '0px';\n\troot.style.top = '0px';\n\troot.style.width = '100%';\n\troot.style.height = '100%';\n\t\n\t// NOTE: In standards mode, the SVG must have block layout\n\t// in order for the container DIV to not show scrollbars.\n\troot.style.display = 'block';\n\troot.appendChild(this.canvas);\n\t\n\t// Workaround for scrollbars in IE11 and below\n\tif (mxClient.IS_IE || mxClient.IS_IE11)\n\t{\n\t\troot.style.overflow = 'hidden';\n\t}\n\n\tif (container != null)\n\t{\n\t\tcontainer.appendChild(root);\n\t\tthis.updateContainerStyle(container);\n\t}\n};\n\n/**\n * Function: updateContainerStyle\n * \n * Updates the style of the container after installing the SVG DOM elements.\n */\nmxGraphView.prototype.updateContainerStyle = function(container)\n{\n\t// Workaround for offset of container\n\tvar style = mxUtils.getCurrentStyle(container);\n\t\n\tif (style != null && style.position == 'static')\n\t{\n\t\tcontainer.style.position = 'relative';\n\t}\n\t\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tcontainer.style.touchAction = 'none';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the view and all its resources.\n */\nmxGraphView.prototype.destroy = function()\n{\n\tvar root = (this.canvas != null) ? this.canvas.ownerSVGElement : null;\n\t\n\tif (root == null)\n\t{\n\t\troot = this.canvas;\n\t}\n\t\n\tif (root != null && root.parentNode != null)\n\t{\n\t\tthis.clear(this.currentRoot, true);\n\t\tmxEvent.removeGestureListeners(document, null, this.moveHandler, this.endHandler);\n\t\tmxEvent.release(this.graph.container);\n\t\troot.parentNode.removeChild(root);\n\t\t\n\t\tthis.moveHandler = null;\n\t\tthis.endHandler = null;\n\t\tthis.canvas = null;\n\t\tthis.backgroundPane = null;\n\t\tthis.drawPane = null;\n\t\tthis.overlayPane = null;\n\t\tthis.decoratorPane = null;\n\t}\n};\n\n/**\n * Class: mxCurrentRootChange\n *\n * Action to change the current root in a view.\n *\n * Constructor: mxCurrentRootChange\n *\n * Constructs a change of the current root in the given view.\n */\nfunction mxCurrentRootChange(view, root)\n{\n\tthis.view = view;\n\tthis.root = root;\n\tthis.previous = root;\n\tthis.isUp = root == null;\n\t\n\tif (!this.isUp)\n\t{\n\t\tvar tmp = this.view.currentRoot;\n\t\tvar model = this.view.graph.getModel();\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp == root)\n\t\t\t{\n\t\t\t\tthis.isUp = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\ttmp = model.getParent(tmp);\n\t\t}\n\t}\n};\n\n/**\n * Function: execute\n *\n * Changes the current root of the view.\n */\nmxCurrentRootChange.prototype.execute = function()\n{\n\tvar tmp = this.view.currentRoot;\n\tthis.view.currentRoot = this.previous;\n\tthis.previous = tmp;\n\n\tvar translate = this.view.graph.getTranslateForRoot(this.view.currentRoot);\n\t\n\tif (translate != null)\n\t{\n\t\tthis.view.translate = new mxPoint(-translate.x, -translate.y);\n\t}\n\n\tif (this.isUp)\n\t{\n\t\tthis.view.clear(this.view.currentRoot, true);\n\t\tthis.view.validate();\n\t}\n\telse\n\t{\n\t\tthis.view.refresh();\n\t}\n\t\n\tvar name = (this.isUp) ? mxEvent.UP : mxEvent.DOWN;\n\tthis.view.fireEvent(new mxEventObject(name,\n\t\t'root', this.view.currentRoot, 'previous', this.previous));\n\tthis.isUp = !this.isUp;\n};\n\n__mxOutput.mxGraphView = typeof mxGraphView !== 'undefined' ? mxGraphView : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraph\n *\n * Extends <mxEventSource> to implement a graph component for\n * the browser. This is the main class of the package. To activate\n * panning and connections use <setPanning> and <setConnectable>.\n * For rubberband selection you must create a new instance of\n * <mxRubberband>. The following listeners are added to\n * <mouseListeners> by default:\n * \n * - <tooltipHandler>: <mxTooltipHandler> that displays tooltips\n * - <panningHandler>: <mxPanningHandler> for panning and popup menus\n * - <connectionHandler>: <mxConnectionHandler> for creating connections\n * - <graphHandler>: <mxGraphHandler> for moving and cloning cells\n * \n * These listeners will be called in the above order if they are enabled.\n *\n * Background Images:\n * \n * To display a background image, set the image, image width and\n * image height using <setBackgroundImage>. If one of the\n * above values has changed then the <view>'s <mxGraphView.validate>\n * should be invoked.\n * \n * Cell Images:\n * \n * To use images in cells, a shape must be specified in the default\n * vertex style (or any named style). Possible shapes are\n * <mxConstants.SHAPE_IMAGE> and <mxConstants.SHAPE_LABEL>.\n * The code to change the shape used in the default vertex style,\n * the following code is used:\n * \n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE;\n * (end)\n * \n * For the default vertex style, the image to be displayed can be\n * specified in a cell's style using the <mxConstants.STYLE_IMAGE>\n * key and the image URL as a value, for example:\n * \n * (code)\n * image=http://www.example.com/image.gif\n * (end)\n * \n * For a named style, the the stylename must be the first element\n * of the cell style:\n * \n * (code)\n * stylename;image=http://www.example.com/image.gif\n * (end)\n * \n * A cell style can have any number of key=value pairs added, divided\n * by a semicolon as follows:\n * \n * (code)\n * [stylename;|key=value;]\n * (end)\n *\n * Labels:\n * \n * The cell labels are defined by <getLabel> which uses <convertValueToString>\n * if <labelsVisible> is true. If a label must be rendered as HTML markup, then\n * <isHtmlLabel> should return true for the respective cell. If all labels\n * contain HTML markup, <htmlLabels> can be set to true. NOTE: Enabling HTML\n * labels carries a possible security risk (see the section on security in\n * the manual).\n * \n * If wrapping is needed for a label, then <isHtmlLabel> and <isWrapping> must\n * return true for the cell whose label should be wrapped. See <isWrapping> for\n * an example.\n * \n * If clipping is needed to keep the rendering of a HTML label inside the\n * bounds of its vertex, then <isClipping> should return true for the\n * respective cell.\n * \n * By default, edge labels are movable and vertex labels are fixed. This can be\n * changed by setting <edgeLabelsMovable> and <vertexLabelsMovable>, or by\n * overriding <isLabelMovable>.\n *\n * In-place Editing:\n * \n * In-place editing is started with a doubleclick or by typing F2.\n * Programmatically, <edit> is used to check if the cell is editable\n * (<isCellEditable>) and call <startEditingAtCell>, which invokes\n * <mxCellEditor.startEditing>. The editor uses the value returned\n * by <getEditingValue> as the editing value.\n * \n * After in-place editing, <labelChanged> is called, which invokes\n * <mxGraphModel.setValue>, which in turn calls\n * <mxGraphModel.valueForCellChanged> via <mxValueChange>.\n * \n * The event that triggers in-place editing is passed through to the\n * <cellEditor>, which may take special actions depending on the type of the\n * event or mouse location, and is also passed to <getEditingValue>. The event\n * is then passed back to the event processing functions which can perform\n * specific actions based on the trigger event.\n * \n * Tooltips:\n * \n * Tooltips are implemented by <getTooltip>, which calls <getTooltipForCell>\n * if a cell is under the mousepointer. The default implementation checks if\n * the cell has a getTooltip function and calls it if it exists. Hence, in order\n * to provide custom tooltips, the cell must provide a getTooltip function, or \n * one of the two above functions must be overridden.\n * \n * Typically, for custom cell tooltips, the latter function is overridden as\n * follows:\n * \n * (code)\n * graph.getTooltipForCell = function(cell)\n * {\n *   var label = this.convertValueToString(cell);\n *   return 'Tooltip for '+label;\n * }\n * (end)\n * \n * When using a config file, the function is overridden in the mxGraph section\n * using the following entry:\n * \n * (code)\n * <add as=\"getTooltipForCell\"><![CDATA[\n *   function(cell)\n *   {\n *     var label = this.convertValueToString(cell);\n *     return 'Tooltip for '+label;\n *   }\n * ]]></add>\n * (end)\n * \n * \"this\" refers to the graph in the implementation, so for example to check if \n * a cell is an edge, you use this.getModel().isEdge(cell)\n *\n * For replacing the default implementation of <getTooltipForCell> (rather than \n * replacing the function on a specific instance), the following code should be \n * used after loading the JavaScript files, but before creating a new mxGraph \n * instance using <mxGraph>:\n * \n * (code)\n * mxGraph.prototype.getTooltipForCell = function(cell)\n * {\n *   var label = this.convertValueToString(cell);\n *   return 'Tooltip for '+label;\n * }\n * (end)\n * \n * Shapes & Styles:\n * \n * The implementation of new shapes is demonstrated in the examples. We'll assume\n * that we have implemented a custom shape with the name BoxShape which we want\n * to use for drawing vertices. To use this shape, it must first be registered in\n * the cell renderer as follows:\n * \n * (code)\n * mxCellRenderer.registerShape('box', BoxShape);\n * (end)\n * \n * The code registers the BoxShape constructor under the name box in the cell\n * renderer of the graph. The shape can now be referenced using the shape-key in\n * a style definition. (The cell renderer contains a set of additional shapes,\n * namely one for each constant with a SHAPE-prefix in <mxConstants>.)\n *\n * Styles are a collection of key, value pairs and a stylesheet is a collection\n * of named styles. The names are referenced by the cellstyle, which is stored\n * in <mxCell.style> with the following format: [stylename;|key=value;]. The\n * string is resolved to a collection of key, value pairs, where the keys are\n * overridden with the values in the string.\n *\n * When introducing a new shape, the name under which the shape is registered\n * must be used in the stylesheet. There are three ways of doing this:\n * \n *   - By changing the default style, so that all vertices will use the new\n * \t\tshape\n *   - By defining a new style, so that only vertices with the respective\n * \t\tcellstyle will use the new shape\n *   - By using shape=box in the cellstyle's optional list of key, value pairs\n * \t\tto be overridden\n *\n * In the first case, the code to fetch and modify the default style for\n * vertices is as follows:\n * \n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = 'box';\n * (end)\n * \n * The code takes the default vertex style, which is used for all vertices that\n * do not have a specific cellstyle, and modifies the value for the shape-key\n * in-place to use the new BoxShape for drawing vertices. This is done by\n * assigning the box value in the second line, which refers to the name of the\n * BoxShape in the cell renderer.\n * \n * In the second case, a collection of key, value pairs is created and then\n * added to the stylesheet under a new name. In order to distinguish the\n * shapename and the stylename we'll use boxstyle for the stylename:\n * \n * (code)\n * var style = new Object();\n * style[mxConstants.STYLE_SHAPE] = 'box';\n * style[mxConstants.STYLE_STROKECOLOR] = '#000000';\n * style[mxConstants.STYLE_FONTCOLOR] = '#000000';\n * graph.getStylesheet().putCellStyle('boxstyle', style);\n * (end)\n * \n * The code adds a new style with the name boxstyle to the stylesheet. To use\n * this style with a cell, it must be referenced from the cellstyle as follows:\n * \n * (code)\n * var vertex = graph.insertVertex(parent, null, 'Hello, World!', 20, 20, 80, 20,\n * \t\t\t\t'boxstyle');\n * (end)\n * \n * To summarize, each new shape must be registered in the <mxCellRenderer> with\n * a unique name. That name is then used as the value of the shape-key in a\n * default or custom style. If there are multiple custom shapes, then there\n * should be a separate style for each shape.\n * \n * Inheriting Styles:\n * \n * For fill-, stroke-, gradient- and indicatorColors special keywords can be\n * used. The inherit keyword for one of these colors will inherit the color\n * for the same key from the parent cell. The swimlane keyword does the same,\n * but inherits from the nearest swimlane in the ancestor hierarchy. Finally,\n * the indicated keyword will use the color of the indicator as the color for\n * the given key.\n * \n * Scrollbars:\n * \n * The <containers> overflow CSS property defines if scrollbars are used to\n * display the graph. For values of 'auto' or 'scroll', the scrollbars will\n * be shown. Note that the <resizeContainer> flag is normally not used\n * together with scrollbars, as it will resize the container to match the\n * size of the graph after each change.\n * \n * Multiplicities and Validation:\n * \n * To control the possible connections in mxGraph, <getEdgeValidationError> is\n * used. The default implementation of the function uses <multiplicities>,\n * which is an array of <mxMultiplicity>. Using this class allows to establish\n * simple multiplicities, which are enforced by the graph.\n * \n * The <mxMultiplicity> uses <mxCell.is> to determine for which terminals it\n * applies. The default implementation of <mxCell.is> works with DOM nodes (XML\n * nodes) and checks if the given type parameter matches the nodeName of the\n * node (case insensitive). Optionally, an attributename and value can be\n * specified which are also checked.\n * \n * <getEdgeValidationError> is called whenever the connectivity of an edge\n * changes. It returns an empty string or an error message if the edge is\n * invalid or null if the edge is valid. If the returned string is not empty\n * then it is displayed as an error message.\n * \n * <mxMultiplicity> allows to specify the multiplicity between a terminal and\n * its possible neighbors. For example, if any rectangle may only be connected\n * to, say, a maximum of two circles you can add the following rule to\n * <multiplicities>:\n * \n * (code)\n * graph.multiplicities.push(new mxMultiplicity(\n *   true, 'rectangle', null, null, 0, 2, ['circle'],\n *   'Only 2 targets allowed',\n *   'Only shape targets allowed'));\n * (end)\n * \n * This will display the first error message whenever a rectangle is connected\n * to more than two circles and the second error message if a rectangle is\n * connected to anything but a circle.\n * \n * For certain multiplicities, such as a minimum of 1 connection, which cannot\n * be enforced at cell creation time (unless the cell is created together with\n * the connection), mxGraph offers <validate> which checks all multiplicities\n * for all cells and displays the respective error messages in an overlay icon\n * on the cells.\n * \n * If a cell is collapsed and contains validation errors, a respective warning\n * icon is attached to the collapsed cell.\n * \n * Auto-Layout:\n * \n * For automatic layout, the <getLayout> hook is provided in <mxLayoutManager>.\n * It can be overridden to return a layout algorithm for the children of a\n * given cell.\n * \n * Unconnected edges:\n * \n * The default values for all switches are designed to meet the requirements of\n * general diagram drawing applications. A very typical set of settings to\n * avoid edges that are not connected is the following:\n * \n * (code)\n * graph.setAllowDanglingEdges(false);\n * graph.setDisconnectOnMove(false);\n * (end)\n * \n * Setting the <cloneInvalidEdges> switch to true is optional. This switch\n * controls if edges are inserted after a copy, paste or clone-drag if they are\n * invalid. For example, edges are invalid if copied or control-dragged without \n * having selected the corresponding terminals and allowDanglingEdges is\n * false, in which case the edges will not be cloned if the switch is false.\n * \n * Output:\n * \n * To produce an XML representation for a diagram, the following code can be\n * used.\n * \n * (code)\n * var enc = new mxCodec(mxUtils.createXmlDocument());\n * var node = enc.encode(graph.getModel());\n * (end)\n * \n * This will produce an XML node than can be handled using the DOM API or\n * turned into a string representation using the following code:\n * \n * (code)\n * var xml = mxUtils.getXml(node);\n * (end)\n * \n * To obtain a formatted string, mxUtils.getPrettyXml can be used instead.\n * \n * This string can now be stored in a local persistent storage (for example\n * using Google Gears) or it can be passed to a backend using mxUtils.post as\n * follows. The url variable is the URL of the Java servlet, PHP page or HTTP\n * handler, depending on the server.\n * \n * (code)\n * var xmlString = encodeURIComponent(mxUtils.getXml(node));\n * mxUtils.post(url, 'xml='+xmlString, function(req)\n * {\n *   // Process server response using req of type mxXmlRequest\n * });\n * (end)\n * \n * Input:\n * \n * To load an XML representation of a diagram into an existing graph object\n * mxUtils.load can be used as follows. The url variable is the URL of the Java\n * servlet, PHP page or HTTP handler that produces the XML string.\n * \n * (code)\n * var xmlDoc = mxUtils.load(url).getXml();\n * var node = xmlDoc.documentElement;\n * var dec = new mxCodec(node.ownerDocument);\n * dec.decode(node, graph.getModel());\n * (end)\n * \n * For creating a page that loads the client and a diagram using a single\n * request please refer to the deployment examples in the backends.\n * \n * Functional dependencies:\n * \n * (see images/callgraph.png)\n * \n * Resources:\n *\n * resources/graph - Language resources for mxGraph\n *\n * Group: Events\n * \n * Event: mxEvent.ROOT\n * \n * Fires if the root in the model has changed. This event has no properties.\n * \n * Event: mxEvent.ALIGN_CELLS\n * \n * Fires between begin- and endUpdate in <alignCells>. The <code>cells</code>\n * and <code>align</code> properties contain the respective arguments that were\n * passed to <alignCells>.\n *\n * Event: mxEvent.FLIP_EDGE\n *\n * Fires between begin- and endUpdate in <flipEdge>. The <code>edge</code>\n * property contains the edge passed to <flipEdge>.\n * \n * Event: mxEvent.ORDER_CELLS\n * \n * Fires between begin- and endUpdate in <orderCells>. The <code>cells</code>\n * and <code>back</code> properties contain the respective arguments that were\n * passed to <orderCells>.\n *\n * Event: mxEvent.CELLS_ORDERED\n *\n * Fires between begin- and endUpdate in <cellsOrdered>. The <code>cells</code>\n * and <code>back</code> arguments contain the respective arguments that were\n * passed to <cellsOrdered>.\n * \n * Event: mxEvent.GROUP_CELLS\n * \n * Fires between begin- and endUpdate in <groupCells>. The <code>group</code>,\n * <code>cells</code> and <code>border</code> arguments contain the respective\n * arguments that were passed to <groupCells>.\n * \n * Event: mxEvent.UNGROUP_CELLS\n * \n * Fires between begin- and endUpdate in <ungroupCells>. The <code>cells</code>\n * property contains the array of cells that was passed to <ungroupCells>.\n * \n * Event: mxEvent.REMOVE_CELLS_FROM_PARENT\n * \n * Fires between begin- and endUpdate in <removeCellsFromParent>. The\n * <code>cells</code> property contains the array of cells that was passed to\n * <removeCellsFromParent>.\n * \n * Event: mxEvent.ADD_CELLS\n * \n * Fires between begin- and endUpdate in <addCells>. The <code>cells</code>,\n * <code>parent</code>, <code>index</code>, <code>source</code> and\n * <code>target</code> properties contain the respective arguments that were\n * passed to <addCells>.\n * \n * Event: mxEvent.CELLS_ADDED\n * \n * Fires between begin- and endUpdate in <cellsAdded>. The <code>cells</code>,\n * <code>parent</code>, <code>index</code>, <code>source</code>,\n * <code>target</code> and <code>absolute</code> properties contain the\n * respective arguments that were passed to <cellsAdded>.\n * \n * Event: mxEvent.REMOVE_CELLS\n * \n * Fires between begin- and endUpdate in <removeCells>. The <code>cells</code>\n * and <code>includeEdges</code> arguments contain the respective arguments\n * that were passed to <removeCells>.\n * \n * Event: mxEvent.CELLS_REMOVED\n * \n * Fires between begin- and endUpdate in <cellsRemoved>. The <code>cells</code>\n * argument contains the array of cells that was removed.\n * \n * Event: mxEvent.SPLIT_EDGE\n * \n * Fires between begin- and endUpdate in <splitEdge>. The <code>edge</code>\n * property contains the edge to be splitted, the <code>cells</code>,\n * <code>newEdge</code>, <code>dx</code> and <code>dy</code> properties contain\n * the respective arguments that were passed to <splitEdge>.\n * \n * Event: mxEvent.TOGGLE_CELLS\n * \n * Fires between begin- and endUpdate in <toggleCells>. The <code>show</code>,\n * <code>cells</code> and <code>includeEdges</code> properties contain the\n * respective arguments that were passed to <toggleCells>.\n * \n * Event: mxEvent.FOLD_CELLS\n * \n * Fires between begin- and endUpdate in <foldCells>. The\n * <code>collapse</code>, <code>cells</code> and <code>recurse</code>\n * properties contain the respective arguments that were passed to <foldCells>.\n * \n * Event: mxEvent.CELLS_FOLDED\n * \n * Fires between begin- and endUpdate in cellsFolded. The\n * <code>collapse</code>, <code>cells</code> and <code>recurse</code>\n * properties contain the respective arguments that were passed to\n * <cellsFolded>.\n * \n * Event: mxEvent.UPDATE_CELL_SIZE\n * \n * Fires between begin- and endUpdate in <updateCellSize>. The\n * <code>cell</code> and <code>ignoreChildren</code> properties contain the\n * respective arguments that were passed to <updateCellSize>.\n * \n * Event: mxEvent.RESIZE_CELLS\n * \n * Fires between begin- and endUpdate in <resizeCells>. The <code>cells</code>\n * and <code>bounds</code> properties contain the respective arguments that\n * were passed to <resizeCells>.\n * \n * Event: mxEvent.CELLS_RESIZED\n * \n * Fires between begin- and endUpdate in <cellsResized>. The <code>cells</code>\n * and <code>bounds</code> properties contain the respective arguments that\n * were passed to <cellsResized>.\n * \n * Event: mxEvent.MOVE_CELLS\n * \n * Fires between begin- and endUpdate in <moveCells>. The <code>cells</code>,\n * <code>dx</code>, <code>dy</code>, <code>clone</code>, <code>target</code>\n * and <code>event</code> properties contain the respective arguments that\n * were passed to <moveCells>.\n * \n * Event: mxEvent.CELLS_MOVED\n * \n * Fires between begin- and endUpdate in <cellsMoved>. The <code>cells</code>,\n * <code>dx</code>, <code>dy</code> and <code>disconnect</code> properties\n * contain the respective arguments that were passed to <cellsMoved>.\n * \n * Event: mxEvent.CONNECT_CELL\n * \n * Fires between begin- and endUpdate in <connectCell>. The <code>edge</code>,\n * <code>terminal</code> and <code>source</code> properties contain the\n * respective arguments that were passed to <connectCell>.\n * \n * Event: mxEvent.CELL_CONNECTED\n * \n * Fires between begin- and endUpdate in <cellConnected>. The\n * <code>edge</code>, <code>terminal</code> and <code>source</code> properties\n * contain the respective arguments that were passed to <cellConnected>.\n * \n * Event: mxEvent.REFRESH\n * \n * Fires after <refresh> was executed. This event has no properties.\n *\n * Event: mxEvent.CLICK\n * \n * Fires in <click> after a click event. The <code>event</code> property\n * contains the original mouse event and <code>cell</code> property contains\n * the cell under the mouse or null if the background was clicked.\n * \n * Event: mxEvent.DOUBLE_CLICK\n *\n * Fires in <dblClick> after a double click. The <code>event</code> property\n * contains the original mouse event and the <code>cell</code> property\n * contains the cell under the mouse or null if the background was clicked.\n * \n * Event: mxEvent.GESTURE\n *\n * Fires in <fireGestureEvent> after a touch gesture. The <code>event</code>\n * property contains the original gesture end event and the <code>cell</code>\n * property contains the optional cell associated with the gesture.\n *\n * Event: mxEvent.TAP_AND_HOLD\n *\n * Fires in <tapAndHold> if a tap and hold event was detected. The <code>event</code>\n * property contains the initial touch event and the <code>cell</code> property\n * contains the cell under the mouse or null if the background was clicked.\n *\n * Event: mxEvent.FIRE_MOUSE_EVENT\n *\n * Fires in <fireMouseEvent> before the mouse listeners are invoked. The\n * <code>eventName</code> property contains the event name and the\n * <code>event</code> property contains the <mxMouseEvent>.\n *\n * Event: mxEvent.SIZE\n *\n * Fires after <sizeDidChange> was executed. The <code>bounds</code> property\n * contains the new graph bounds.\n *\n * Event: mxEvent.START_EDITING\n *\n * Fires before the in-place editor starts in <startEditingAtCell>. The\n * <code>cell</code> property contains the cell that is being edited and the\n * <code>event</code> property contains the optional event argument that was\n * passed to <startEditingAtCell>.\n * \n * Event: mxEvent.EDITING_STARTED\n *\n * Fires after the in-place editor starts in <startEditingAtCell>. The\n * <code>cell</code> property contains the cell that is being edited and the\n * <code>event</code> property contains the optional event argument that was\n * passed to <startEditingAtCell>.\n * \n * Event: mxEvent.EDITING_STOPPED\n *\n * Fires after the in-place editor stops in <stopEditing>.\n *\n * Event: mxEvent.LABEL_CHANGED\n *\n * Fires between begin- and endUpdate in <cellLabelChanged>. The\n * <code>cell</code> property contains the cell, the <code>value</code>\n * property contains the new value for the cell, the <code>old</code> property\n * contains the old value and the optional <code>event</code> property contains\n * the mouse event that started the edit.\n * \n * Event: mxEvent.ADD_OVERLAY\n *\n * Fires after an overlay is added in <addCellOverlay>. The <code>cell</code>\n * property contains the cell and the <code>overlay</code> property contains\n * the <mxCellOverlay> that was added.\n *\n * Event: mxEvent.REMOVE_OVERLAY\n *\n * Fires after an overlay is removed in <removeCellOverlay> and\n * <removeCellOverlays>. The <code>cell</code> property contains the cell and\n * the <code>overlay</code> property contains the <mxCellOverlay> that was\n * removed.\n * \n * Constructor: mxGraph\n * \n * Constructs a new mxGraph in the specified container. Model is an optional\n * mxGraphModel. If no model is provided, a new mxGraphModel instance is \n * used as the model. The container must have a valid owner document prior \n * to calling this function in Internet Explorer. RenderHint is a string to\n * affect the display performance and rendering in IE, but not in SVG-based \n * browsers. The parameter is mapped to <dialect>, which may \n * be one of <mxConstants.DIALECT_SVG> for SVG-based browsers, \n * <mxConstants.DIALECT_STRICTHTML> for fastest display mode,\n * <mxConstants.DIALECT_PREFERHTML> for faster display mode,\n * <mxConstants.DIALECT_MIXEDHTML> for fast and <mxConstants.DIALECT_VML> \n * for exact display mode (slowest). The dialects are defined in mxConstants.\n * The default values are DIALECT_SVG for SVG-based browsers and\n * DIALECT_MIXED for IE.\n *\n * The possible values for the renderingHint parameter are explained below:\n * \n * fast - The parameter is based on the fact that the display performance is \n * highly improved in IE if the VML is not contained within a VML group \n * element. The lack of a group element only slightly affects the display while \n * panning, but improves the performance by almost a factor of 2, while keeping \n * the display sufficiently accurate. This also allows to render certain shapes as HTML \n * if the display accuracy is not affected, which is implemented by \n * <mxShape.isMixedModeHtml>. This is the default setting and is mapped to\n * DIALECT_MIXEDHTML.\n * faster - Same as fast, but more expensive shapes are avoided. This is \n * controlled by <mxShape.preferModeHtml>. The default implementation will \n * avoid gradients and rounded rectangles, but more significant shapes, such \n * as rhombus, ellipse, actor and cylinder will be rendered accurately. This \n * setting is mapped to DIALECT_PREFERHTML.\n * fastest - Almost anything will be rendered in Html. This allows for \n * rectangles, labels and images. This setting is mapped to\n * DIALECT_STRICTHTML.\n * exact - If accurate panning is required and if the diagram is small (up\n * to 100 cells), then this value should be used. In this mode, a group is \n * created that contains the VML. This allows for accurate panning and is \n * mapped to DIALECT_VML.\n *\n * Example:\n * \n * To create a graph inside a DOM node with an id of graph:\n * (code)\n * var container = document.getElementById('graph');\n * var graph = new mxGraph(container);\n * (end)\n * \n * Parameters:\n * \n * container - Optional DOM node that acts as a container for the graph.\n * If this is null then the container can be initialized later using\n * <init>.\n * model - Optional <mxGraphModel> that constitutes the graph data.\n * renderHint - Optional string that specifies the display accuracy and\n * performance. Default is mxConstants.DIALECT_MIXEDHTML (for IE).\n * stylesheet - Optional <mxStylesheet> to be used in the graph.\n */\nfunction mxGraph(container, model, renderHint, stylesheet)\n{\n\t// Initializes the variable in case the prototype has been\n\t// modified to hold some listeners (which is possible because\n\t// the createHandlers call is executed regardless of the\n\t// arguments passed into the ctor).\n\tthis.mouseListeners = null;\n\t\n\t// Converts the renderHint into a dialect\n\tthis.renderHint = renderHint;\n\n\tif (mxClient.IS_SVG)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_SVG;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_EXACT && mxClient.IS_VML)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_VML;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_FASTEST)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_STRICTHTML;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_FASTER)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_PREFERHTML;\n\t}\n\telse // default for VML\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_MIXEDHTML;\n\t}\n\t\n\t// Initializes the main members that do not require a container\n\tthis.model = (model != null) ? model : new mxGraphModel();\n\tthis.multiplicities = [];\n\tthis.imageBundles = [];\n\tthis.cellRenderer = this.createCellRenderer();\n\tthis.setSelectionModel(this.createSelectionModel());\n\tthis.setStylesheet((stylesheet != null) ? stylesheet : this.createStylesheet());\n\tthis.view = this.createGraphView();\n\t\n\t// Adds a graph model listener to update the view\n\tthis.graphModelChangeListener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tthis.graphModelChanged(evt.getProperty('edit').changes);\n\t});\n\t\n\tthis.model.addListener(mxEvent.CHANGE, this.graphModelChangeListener);\n\n\t// Installs basic event handlers with disabled default settings.\n\tthis.createHandlers();\n\t\n\t// Initializes the display if a container was specified\n\tif (container != null)\n\t{\n\t\tthis.init(container);\n\t}\n\t\n\tthis.view.revalidate();\n};\n\n/**\n * Installs the required language resources at class\n * loading time.\n */\nif (mxLoadResources)\n{\n\tmxResources.add(mxClient.basePath + '/resources/graph');\n}\nelse\n{\n\tmxClient.defaultBundles.push(mxClient.basePath + '/resources/graph');\n}\n\n/**\n * Extends mxEventSource.\n */\nmxGraph.prototype = new mxEventSource();\nmxGraph.prototype.constructor = mxGraph;\n\n/**\n * Variable: EMPTY_ARRAY\n *\n * Immutable empty array instance.\n */\nmxGraph.prototype.EMPTY_ARRAY = [];\n\n/**\n * Group: Variables\n */\n\n/**\n * Variable: mouseListeners\n * \n * Holds the mouse event listeners. See <fireMouseEvent>.\n */\nmxGraph.prototype.mouseListeners = null;\n\n/**\n * Variable: isMouseDown\n * \n * Holds the state of the mouse button.\n */\nmxGraph.prototype.isMouseDown = false;\n\n/**\n * Variable: model\n * \n * Holds the <mxGraphModel> that contains the cells to be displayed.\n */\nmxGraph.prototype.model = null;\n\n/**\n * Variable: view\n * \n * Holds the <mxGraphView> that caches the <mxCellStates> for the cells.\n */\nmxGraph.prototype.view = null;\n\n/**\n * Variable: stylesheet\n * \n * Holds the <mxStylesheet> that defines the appearance of the cells.\n * \n * \n * Example:\n * \n * Use the following code to read a stylesheet into an existing graph.\n * \n * (code)\n * var req = mxUtils.load('stylesheet.xml');\n * var root = req.getDocumentElement();\n * var dec = new mxCodec(root.ownerDocument);\n * dec.decode(root, graph.stylesheet);\n * (end)\n */\nmxGraph.prototype.stylesheet = null;\n\t\n/**\n * Variable: selectionModel\n * \n * Holds the <mxGraphSelectionModel> that models the current selection.\n */\nmxGraph.prototype.selectionModel = null;\n\n/**\n * Variable: cellEditor\n * \n * Holds the <mxCellEditor> that is used as the in-place editing.\n */\nmxGraph.prototype.cellEditor = null;\n\n/**\n * Variable: cellRenderer\n * \n * Holds the <mxCellRenderer> for rendering the cells in the graph.\n */\nmxGraph.prototype.cellRenderer = null;\n\n/**\n * Variable: multiplicities\n * \n * An array of <mxMultiplicities> describing the allowed\n * connections in a graph.\n */\nmxGraph.prototype.multiplicities = null;\n\n/**\n * Variable: renderHint\n * \n * RenderHint as it was passed to the constructor.\n */\nmxGraph.prototype.renderHint = null;\n\n/**\n * Variable: dialect\n * \n * Dialect to be used for drawing the graph. Possible values are all\n * constants in <mxConstants> with a DIALECT-prefix.\n */\nmxGraph.prototype.dialect = null;\n\n/**\n * Variable: gridSize\n * \n * Specifies the grid size. Default is 10.\n */\nmxGraph.prototype.gridSize = 10;\n\t\n/**\n * Variable: gridEnabled\n * \n * Specifies if the grid is enabled. This is used in <snap>. Default is\n * true.\n */\nmxGraph.prototype.gridEnabled = true;\n\n/**\n * Variable: portsEnabled\n * \n * Specifies if ports are enabled. This is used in <cellConnected> to update\n * the respective style. Default is true.\n */\nmxGraph.prototype.portsEnabled = true;\n\n/**\n * Variable: nativeDoubleClickEnabled\n * \n * Specifies if native double click events should be detected. Default is true.\n */\nmxGraph.prototype.nativeDblClickEnabled = true;\n\n/**\n * Variable: doubleTapEnabled\n * \n * Specifies if double taps on touch-based devices should be handled as a\n * double click. Default is true.\n */\nmxGraph.prototype.doubleTapEnabled = true;\n\n/**\n * Variable: doubleTapTimeout\n * \n * Specifies the timeout for double taps and non-native double clicks. Default\n * is 500 ms.\n */\nmxGraph.prototype.doubleTapTimeout = 500;\n\n/**\n * Variable: doubleTapTolerance\n * \n * Specifies the tolerance for double taps and double clicks in quirks mode.\n * Default is 25 pixels.\n */\nmxGraph.prototype.doubleTapTolerance = 25;\n\n/**\n * Variable: lastTouchX\n * \n * Holds the x-coordinate of the last touch event for double tap detection.\n */\nmxGraph.prototype.lastTouchY = 0;\n\n/**\n * Variable: lastTouchX\n * \n * Holds the y-coordinate of the last touch event for double tap detection.\n */\nmxGraph.prototype.lastTouchY = 0;\n\n/**\n * Variable: lastTouchTime\n * \n * Holds the time of the last touch event for double click detection.\n */\nmxGraph.prototype.lastTouchTime = 0;\n\n/**\n * Variable: tapAndHoldEnabled\n * \n * Specifies if tap and hold should be used for starting connections on touch-based\n * devices. Default is true.\n */\nmxGraph.prototype.tapAndHoldEnabled = true;\n\n/**\n * Variable: tapAndHoldDelay\n * \n * Specifies the time for a tap and hold. Default is 500 ms.\n */\nmxGraph.prototype.tapAndHoldDelay = 500;\n\n/**\n * Variable: tapAndHoldInProgress\n * \n * True if the timer for tap and hold events is running.\n */\nmxGraph.prototype.tapAndHoldInProgress = false;\n\n/**\n * Variable: tapAndHoldValid\n * \n * True as long as the timer is running and the touch events\n * stay within the given <tapAndHoldTolerance>.\n */\nmxGraph.prototype.tapAndHoldValid = false;\n\n/**\n * Variable: initialTouchX\n * \n * Holds the x-coordinate of the intial touch event for tap and hold.\n */\nmxGraph.prototype.initialTouchX = 0;\n\n/**\n * Variable: initialTouchY\n * \n * Holds the y-coordinate of the intial touch event for tap and hold.\n */\nmxGraph.prototype.initialTouchY = 0;\n\n/**\n * Variable: tolerance\n * \n * Tolerance for a move to be handled as a single click.\n * Default is 4 pixels.\n */\nmxGraph.prototype.tolerance = 4;\n\n/**\n * Variable: defaultOverlap\n * \n * Value returned by <getOverlap> if <isAllowOverlapParent> returns\n * true for the given cell. <getOverlap> is used in <constrainChild> if\n * <isConstrainChild> returns true. The value specifies the\n * portion of the child which is allowed to overlap the parent.\n */\nmxGraph.prototype.defaultOverlap = 0.5;\n\n/**\n * Variable: defaultParent\n * \n * Specifies the default parent to be used to insert new cells.\n * This is used in <getDefaultParent>. Default is null.\n */\nmxGraph.prototype.defaultParent = null;\n\n/**\n * Variable: alternateEdgeStyle\n * \n * Specifies the alternate edge style to be used if the main control point\n * on an edge is being doubleclicked. Default is null.\n */\nmxGraph.prototype.alternateEdgeStyle = null;\n\n/**\n * Variable: backgroundImage\n *\n * Specifies the <mxImage> to be returned by <getBackgroundImage>. Default\n * is null.\n * \n * Example:\n *\n * (code)\n * var img = new mxImage('http://www.example.com/maps/examplemap.jpg', 1024, 768);\n * graph.setBackgroundImage(img);\n * graph.view.validate();\n * (end)\n */\nmxGraph.prototype.backgroundImage = null;\n\n/**\n * Variable: pageVisible\n *\n * Specifies if the background page should be visible. Default is false.\n * Not yet implemented.\n */\nmxGraph.prototype.pageVisible = false;\n\n/**\n * Variable: pageBreaksVisible\n * \n * Specifies if a dashed line should be drawn between multiple pages. Default\n * is false. If you change this value while a graph is being displayed then you\n * should call <sizeDidChange> to force an update of the display.\n */\nmxGraph.prototype.pageBreaksVisible = false;\n\n/**\n * Variable: pageBreakColor\n * \n * Specifies the color for page breaks. Default is 'gray'.\n */\nmxGraph.prototype.pageBreakColor = 'gray';\n\n/**\n * Variable: pageBreakDashed\n * \n * Specifies the page breaks should be dashed. Default is true.\n */\nmxGraph.prototype.pageBreakDashed = true;\n\n/**\n * Variable: minPageBreakDist\n * \n * Specifies the minimum distance for page breaks to be visible. Default is\n * 20 (in pixels).\n */\nmxGraph.prototype.minPageBreakDist = 20;\n\n/**\n * Variable: preferPageSize\n * \n * Specifies if the graph size should be rounded to the next page number in\n * <sizeDidChange>. This is only used if the graph container has scrollbars.\n * Default is false.\n */\nmxGraph.prototype.preferPageSize = false;\n\n/**\n * Variable: pageFormat\n *\n * Specifies the page format for the background page. Default is\n * <mxConstants.PAGE_FORMAT_A4_PORTRAIT>. This is used as the default in\n * <mxPrintPreview> and for painting the background page if <pageVisible> is\n * true and the pagebreaks if <pageBreaksVisible> is true.\n */\nmxGraph.prototype.pageFormat = mxConstants.PAGE_FORMAT_A4_PORTRAIT;\n\n/**\n * Variable: pageScale\n *\n * Specifies the scale of the background page. Default is 1.5.\n * Not yet implemented.\n */\nmxGraph.prototype.pageScale = 1.5;\n\n/**\n * Variable: enabled\n * \n * Specifies the return value for <isEnabled>. Default is true.\n */\nmxGraph.prototype.enabled = true;\n\n/**\n * Variable: escapeEnabled\n * \n * Specifies if <mxKeyHandler> should invoke <escape> when the escape key\n * is pressed. Default is true.\n */\nmxGraph.prototype.escapeEnabled = true;\n\n/**\n * Variable: invokesStopCellEditing\n * \n * If true, when editing is to be stopped by way of selection changing,\n * data in diagram changing or other means stopCellEditing is invoked, and\n * changes are saved. This is implemented in a focus handler in\n * <mxCellEditor>. Default is true.\n */\nmxGraph.prototype.invokesStopCellEditing = true;\n\n/**\n * Variable: enterStopsCellEditing\n * \n * If true, pressing the enter key without pressing control or shift will stop\n * editing and accept the new value. This is used in <mxCellEditor> to stop\n * cell editing. Note: You can always use F2 and escape to stop editing.\n * Default is false.\n */\nmxGraph.prototype.enterStopsCellEditing = false;\n\n/**\n * Variable: useScrollbarsForPanning\n * \n * Specifies if scrollbars should be used for panning in <panGraph> if\n * any scrollbars are available. If scrollbars are enabled in CSS, but no\n * scrollbars appear because the graph is smaller than the container size,\n * then no panning occurs if this is true. Default is true.\n */\nmxGraph.prototype.useScrollbarsForPanning = true;\n\n/**\n * Variable: exportEnabled\n * \n * Specifies the return value for <canExportCell>. Default is true.\n */\nmxGraph.prototype.exportEnabled = true;\n\n/**\n * Variable: importEnabled\n * \n * Specifies the return value for <canImportCell>. Default is true.\n */\nmxGraph.prototype.importEnabled = true;\n\n/**\n * Variable: cellsLocked\n * \n * Specifies the return value for <isCellLocked>. Default is false.\n */\nmxGraph.prototype.cellsLocked = false;\n\n/**\n * Variable: cellsCloneable\n * \n * Specifies the return value for <isCellCloneable>. Default is true.\n */\nmxGraph.prototype.cellsCloneable = true;\n\n/**\n * Variable: foldingEnabled\n * \n * Specifies if folding (collapse and expand via an image icon in the graph\n * should be enabled). Default is true.\n */\nmxGraph.prototype.foldingEnabled = true;\n\n/**\n * Variable: cellsEditable\n * \n * Specifies the return value for <isCellEditable>. Default is true.\n */\nmxGraph.prototype.cellsEditable = true;\n\t\t\n/**\n * Variable: cellsDeletable\n * \n * Specifies the return value for <isCellDeletable>. Default is true.\n */\nmxGraph.prototype.cellsDeletable = true;\n\n/**\n * Variable: cellsMovable\n * \n * Specifies the return value for <isCellMovable>. Default is true.\n */\nmxGraph.prototype.cellsMovable = true;\n\t\n/**\n * Variable: edgeLabelsMovable\n * \n * Specifies the return value for edges in <isLabelMovable>. Default is true.\n */\nmxGraph.prototype.edgeLabelsMovable = true;\n\t\n/**\n * Variable: vertexLabelsMovable\n * \n * Specifies the return value for vertices in <isLabelMovable>. Default is false.\n */\nmxGraph.prototype.vertexLabelsMovable = false;\n\n/**\n * Variable: dropEnabled\n * \n * Specifies the return value for <isDropEnabled>. Default is false.\n */\nmxGraph.prototype.dropEnabled = false;\n\n/**\n * Variable: splitEnabled\n * \n * Specifies if dropping onto edges should be enabled. This is ignored if\n * <dropEnabled> is false. If enabled, it will call <splitEdge> to carry\n * out the drop operation. Default is true.\n */\nmxGraph.prototype.splitEnabled = true;\n\n/**\n * Variable: cellsResizable\n * \n * Specifies the return value for <isCellResizable>. Default is true.\n */\nmxGraph.prototype.cellsResizable = true;\n\n/**\n * Variable: cellsBendable\n * \n * Specifies the return value for <isCellsBendable>. Default is true.\n */\nmxGraph.prototype.cellsBendable = true;\n\n/**\n * Variable: cellsSelectable\n * \n * Specifies the return value for <isCellSelectable>. Default is true.\n */\nmxGraph.prototype.cellsSelectable = true;\n\n/**\n * Variable: cellsDisconnectable\n * \n * Specifies the return value for <isCellDisconntable>. Default is true.\n */\nmxGraph.prototype.cellsDisconnectable = true;\n\n/**\n * Variable: autoSizeCells\n * \n * Specifies if the graph should automatically update the cell size after an\n * edit. This is used in <isAutoSizeCell>. Default is false.\n */\nmxGraph.prototype.autoSizeCells = false;\n\n/**\n * Variable: autoSizeCellsOnAdd\n * \n * Specifies if autoSize style should be applied when cells are added. Default is false.\n */\nmxGraph.prototype.autoSizeCellsOnAdd = false;\n\n/**\n * Variable: autoScroll\n * \n * Specifies if the graph should automatically scroll if the mouse goes near\n * the container edge while dragging. This is only taken into account if the\n * container has scrollbars. Default is true.\n * \n * If you need this to work without scrollbars then set <ignoreScrollbars> to\n * true. Please consult the <ignoreScrollbars> for details. In general, with\n * no scrollbars, the use of <allowAutoPanning> is recommended.\n */\nmxGraph.prototype.autoScroll = true;\n\n/**\n * Variable: ignoreScrollbars\n * \n * Specifies if the graph should automatically scroll regardless of the\n * scrollbars. This will scroll the container using positive values for\n * scroll positions (ie usually only rightwards and downwards). To avoid\n * possible conflicts with panning, set <translateToScrollPosition> to true.\n */\nmxGraph.prototype.ignoreScrollbars = false;\n\n/**\n * Variable: translateToScrollPosition\n * \n * Specifies if the graph should automatically convert the current scroll\n * position to a translate in the graph view when a mouseUp event is received.\n * This can be used to avoid conflicts when using <autoScroll> and\n * <ignoreScrollbars> with no scrollbars in the container.\n */\nmxGraph.prototype.translateToScrollPosition = false;\n\n/**\n * Variable: timerAutoScroll\n * \n * Specifies if autoscrolling should be carried out via mxPanningManager even\n * if the container has scrollbars. This disables <scrollPointToVisible> and\n * uses <mxPanningManager> instead. If this is true then <autoExtend> is\n * disabled. It should only be used with a scroll buffer or when scollbars\n * are visible and scrollable in all directions. Default is false.\n */\nmxGraph.prototype.timerAutoScroll = false;\n\n/**\n * Variable: allowAutoPanning\n * \n * Specifies if panning via <panGraph> should be allowed to implement autoscroll\n * if no scrollbars are available in <scrollPointToVisible>. To enable panning\n * inside the container, near the edge, set <mxPanningManager.border> to a\n * positive value. Default is false.\n */\nmxGraph.prototype.allowAutoPanning = false;\n\n/**\n * Variable: autoExtend\n * \n * Specifies if the size of the graph should be automatically extended if the\n * mouse goes near the container edge while dragging. This is only taken into\n * account if the container has scrollbars. Default is true. See <autoScroll>.\n */\nmxGraph.prototype.autoExtend = true;\n\n/**\n * Variable: maximumGraphBounds\n * \n * <mxRectangle> that specifies the area in which all cells in the diagram\n * should be placed. Uses in <getMaximumGraphBounds>. Use a width or height of\n * 0 if you only want to give a upper, left corner.\n */\nmxGraph.prototype.maximumGraphBounds = null;\n\n/**\n * Variable: minimumGraphSize\n * \n * <mxRectangle> that specifies the minimum size of the graph. This is ignored\n * if the graph container has no scrollbars. Default is null.\n */\nmxGraph.prototype.minimumGraphSize = null;\n\n/**\n * Variable: minimumContainerSize\n * \n * <mxRectangle> that specifies the minimum size of the <container> if\n * <resizeContainer> is true.\n */\nmxGraph.prototype.minimumContainerSize = null;\n\t\t\n/**\n * Variable: maximumContainerSize\n * \n * <mxRectangle> that specifies the maximum size of the container if\n * <resizeContainer> is true.\n */\nmxGraph.prototype.maximumContainerSize = null;\n\n/**\n * Variable: resizeContainer\n * \n * Specifies if the container should be resized to the graph size when\n * the graph size has changed. Default is false.\n */\nmxGraph.prototype.resizeContainer = false;\n\n/**\n * Variable: border\n * \n * Border to be added to the bottom and right side when the container is\n * being resized after the graph has been changed. Default is 0.\n */\nmxGraph.prototype.border = 0;\n\t\t\n/**\n * Variable: keepEdgesInForeground\n * \n * Specifies if edges should appear in the foreground regardless of their order\n * in the model. If <keepEdgesInForeground> and <keepEdgesInBackground> are\n * both true then the normal order is applied. Default is false.\n */\nmxGraph.prototype.keepEdgesInForeground = false;\n\n/**\n * Variable: keepEdgesInBackground\n * \n * Specifies if edges should appear in the background regardless of their order\n * in the model. If <keepEdgesInForeground> and <keepEdgesInBackground> are\n * both true then the normal order is applied. Default is false.\n */\nmxGraph.prototype.keepEdgesInBackground = false;\n\n/**\n * Variable: allowNegativeCoordinates\n * \n * Specifies if negative coordinates for vertices are allowed. Default is true.\n */\nmxGraph.prototype.allowNegativeCoordinates = true;\n\n/**\n * Variable: constrainChildren\n * \n * Specifies if a child should be constrained inside the parent bounds after a\n * move or resize of the child. Default is true.\n */\nmxGraph.prototype.constrainChildren = true;\n\n/**\n * Variable: constrainRelativeChildren\n * \n * Specifies if child cells with relative geometries should be constrained\n * inside the parent bounds, if <constrainChildren> is true, and/or the\n * <maximumGraphBounds>. Default is false.\n */\nmxGraph.prototype.constrainRelativeChildren = false;\n\n/**\n * Variable: extendParents\n * \n * Specifies if a parent should contain the child bounds after a resize of\n * the child. Default is true. This has precedence over <constrainChildren>.\n */\nmxGraph.prototype.extendParents = true;\n\n/**\n * Variable: extendParentsOnAdd\n * \n * Specifies if parents should be extended according to the <extendParents>\n * switch if cells are added. Default is true.\n */\nmxGraph.prototype.extendParentsOnAdd = true;\n\n/**\n * Variable: extendParentsOnAdd\n * \n * Specifies if parents should be extended according to the <extendParents>\n * switch if cells are added. Default is false for backwards compatiblity.\n */\nmxGraph.prototype.extendParentsOnMove = false;\n\n/**\n * Variable: recursiveResize\n * \n * Specifies the return value for <isRecursiveResize>. Default is\n * false for backwards compatiblity.\n */\nmxGraph.prototype.recursiveResize = false;\n\n/**\n * Variable: collapseToPreferredSize\n * \n * Specifies if the cell size should be changed to the preferred size when\n * a cell is first collapsed. Default is true.\n */\nmxGraph.prototype.collapseToPreferredSize = true;\n\n/**\n * Variable: zoomFactor\n * \n * Specifies the factor used for <zoomIn> and <zoomOut>. Default is 1.2\n * (120%).\n */\nmxGraph.prototype.zoomFactor = 1.2;\n\n/**\n * Variable: keepSelectionVisibleOnZoom\n * \n * Specifies if the viewport should automatically contain the selection cells\n * after a zoom operation. Default is false.\n */\nmxGraph.prototype.keepSelectionVisibleOnZoom = false;\n\n/**\n * Variable: centerZoom\n * \n * Specifies if the zoom operations should go into the center of the actual\n * diagram rather than going from top, left. Default is true.\n */\nmxGraph.prototype.centerZoom = true;\n\n/**\n * Variable: resetViewOnRootChange\n * \n * Specifies if the scale and translate should be reset if the root changes in\n * the model. Default is true.\n */\nmxGraph.prototype.resetViewOnRootChange = true;\n\n/**\n * Variable: resetEdgesOnResize\n * \n * Specifies if edge control points should be reset after the resize of a\n * connected cell. Default is false.\n */\nmxGraph.prototype.resetEdgesOnResize = false;\n\n/**\n * Variable: resetEdgesOnMove\n * \n * Specifies if edge control points should be reset after the move of a\n * connected cell. Default is false.\n */\nmxGraph.prototype.resetEdgesOnMove = false;\n\n/**\n * Variable: resetEdgesOnConnect\n * \n * Specifies if edge control points should be reset after the the edge has been\n * reconnected. Default is true.\n */\nmxGraph.prototype.resetEdgesOnConnect = true;\n\n/**\n * Variable: allowLoops\n * \n * Specifies if loops (aka self-references) are allowed. Default is false.\n */\nmxGraph.prototype.allowLoops = false;\n\t\n/**\n * Variable: defaultLoopStyle\n * \n * <mxEdgeStyle> to be used for loops. This is a fallback for loops if the\n * <mxConstants.STYLE_LOOP> is undefined. Default is <mxEdgeStyle.Loop>.\n */\nmxGraph.prototype.defaultLoopStyle = mxEdgeStyle.Loop;\n\n/**\n * Variable: multigraph\n * \n * Specifies if multiple edges in the same direction between the same pair of\n * vertices are allowed. Default is true.\n */\nmxGraph.prototype.multigraph = true;\n\n/**\n * Variable: connectableEdges\n * \n * Specifies if edges are connectable. Default is false. This overrides the\n * connectable field in edges.\n */\nmxGraph.prototype.connectableEdges = false;\n\n/**\n * Variable: allowDanglingEdges\n * \n * Specifies if edges with disconnected terminals are allowed in the graph.\n * Default is true.\n */\nmxGraph.prototype.allowDanglingEdges = true;\n\n/**\n * Variable: cloneInvalidEdges\n * \n * Specifies if edges that are cloned should be validated and only inserted\n * if they are valid. Default is true.\n */\nmxGraph.prototype.cloneInvalidEdges = false;\n\n/**\n * Variable: disconnectOnMove\n * \n * Specifies if edges should be disconnected from their terminals when they\n * are moved. Default is true.\n */\nmxGraph.prototype.disconnectOnMove = true;\n\n/**\n * Variable: labelsVisible\n * \n * Specifies if labels should be visible. This is used in <getLabel>. Default\n * is true.\n */\nmxGraph.prototype.labelsVisible = true;\n\t\n/**\n * Variable: htmlLabels\n * \n * Specifies the return value for <isHtmlLabel>. Default is false.\n */\nmxGraph.prototype.htmlLabels = false;\n\n/**\n * Variable: swimlaneSelectionEnabled\n * \n * Specifies if swimlanes should be selectable via the content if the\n * mouse is released. Default is true.\n */\nmxGraph.prototype.swimlaneSelectionEnabled = true;\n\n/**\n * Variable: swimlaneNesting\n * \n * Specifies if nesting of swimlanes is allowed. Default is true.\n */\nmxGraph.prototype.swimlaneNesting = true;\n\t\n/**\n * Variable: swimlaneIndicatorColorAttribute\n * \n * The attribute used to find the color for the indicator if the indicator\n * color is set to 'swimlane'. Default is <mxConstants.STYLE_FILLCOLOR>.\n */\nmxGraph.prototype.swimlaneIndicatorColorAttribute = mxConstants.STYLE_FILLCOLOR;\n\n/**\n * Variable: imageBundles\n * \n * Holds the list of image bundles.\n */\nmxGraph.prototype.imageBundles = null;\n\n/**\n * Variable: minFitScale\n * \n * Specifies the minimum scale to be applied in <fit>. Default is 0.1. Set this\n * to null to allow any value.\n */\nmxGraph.prototype.minFitScale = 0.1;\n\n/**\n * Variable: maxFitScale\n * \n * Specifies the maximum scale to be applied in <fit>. Default is 8. Set this\n * to null to allow any value.\n */\nmxGraph.prototype.maxFitScale = 8;\n\n/**\n * Variable: panDx\n * \n * Current horizontal panning value. Default is 0.\n */\nmxGraph.prototype.panDx = 0;\n\n/**\n * Variable: panDy\n * \n * Current vertical panning value. Default is 0.\n */\nmxGraph.prototype.panDy = 0;\n\n/**\n * Variable: collapsedImage\n * \n * Specifies the <mxImage> to indicate a collapsed state.\n * Default value is mxClient.imageBasePath + '/collapsed.gif'\n */\nmxGraph.prototype.collapsedImage = new mxImage(mxClient.imageBasePath + '/collapsed.gif', 9, 9);\n\n/**\n * Variable: expandedImage\n * \n * Specifies the <mxImage> to indicate a expanded state.\n * Default value is mxClient.imageBasePath + '/expanded.gif'\n */\nmxGraph.prototype.expandedImage = new mxImage(mxClient.imageBasePath + '/expanded.gif', 9, 9);\n\n/**\n * Variable: warningImage\n * \n * Specifies the <mxImage> for the image to be used to display a warning\n * overlay. See <setCellWarning>. Default value is mxClient.imageBasePath +\n * '/warning'.  The extension for the image depends on the platform. It is\n * '.png' on the Mac and '.gif' on all other platforms.\n */\nmxGraph.prototype.warningImage = new mxImage(mxClient.imageBasePath + '/warning'+\n\t((mxClient.IS_MAC) ? '.png' : '.gif'), 16, 16);\n\n/**\n * Variable: alreadyConnectedResource\n * \n * Specifies the resource key for the error message to be displayed in\n * non-multigraphs when two vertices are already connected. If the resource\n * for this key does not exist then the value is used as the error message.\n * Default is 'alreadyConnected'.\n */\nmxGraph.prototype.alreadyConnectedResource = (mxClient.language != 'none') ? 'alreadyConnected' : '';\n\n/**\n * Variable: containsValidationErrorsResource\n * \n * Specifies the resource key for the warning message to be displayed when\n * a collapsed cell contains validation errors. If the resource for this\n * key does not exist then the value is used as the warning message.\n * Default is 'containsValidationErrors'.\n */\nmxGraph.prototype.containsValidationErrorsResource = (mxClient.language != 'none') ? 'containsValidationErrors' : '';\n\n/**\n * Variable: collapseExpandResource\n * \n * Specifies the resource key for the tooltip on the collapse/expand icon.\n * If the resource for this key does not exist then the value is used as\n * the tooltip. Default is 'collapse-expand'.\n */\nmxGraph.prototype.collapseExpandResource = (mxClient.language != 'none') ? 'collapse-expand' : '';\n\n/**\n * Function: init\n * \n * Initializes the <container> and creates the respective datastructures.\n * \n * Parameters:\n * \n * container - DOM node that will contain the graph display.\n */\nmxGraph.prototype.init = function(container)\n{\n\tthis.container = container;\n\t\n\t// Initializes the in-place editor\n\tthis.cellEditor = this.createCellEditor();\t\n\n\t// Initializes the container using the view\n\tthis.view.init();\n\t\n\t// Updates the size of the container for the current graph\n\tthis.sizeDidChange();\n\t\n\t// Hides tooltips and resets tooltip timer if mouse leaves container\n\tmxEvent.addListener(container, 'mouseleave', mxUtils.bind(this, function()\n\t{\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.hide();\n\t\t}\n\t}));\n\n\t// Automatic deallocation of memory\n\tif (mxClient.IS_IE)\n\t{\n\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.destroy();\n\t\t}));\n\t\t\n\t\t// Disable shift-click for text\n\t\tmxEvent.addListener(container, 'selectstart',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\treturn this.isEditing() || (!this.isMouseDown && !mxEvent.isShiftDown(evt));\n\t\t\t})\n\t\t);\n\t}\n\t\n\t// Workaround for missing last shape and connect preview in IE8 standards\n\t// mode if no initial graph displayed or no label for shape defined\n\tif (document.documentMode == 8)\n\t{\n\t\tcontainer.insertAdjacentHTML('beforeend', '<' + mxClient.VML_PREFIX + ':group' +\n\t\t\t' style=\"DISPLAY: none;\"></' + mxClient.VML_PREFIX + ':group>');\n\t}\n};\n\n/**\n * Function: createHandlers\n * \n * Creates the tooltip-, panning-, connection- and graph-handler (in this\n * order). This is called in the constructor before <init> is called.\n */\nmxGraph.prototype.createHandlers = function()\n{\n\tthis.tooltipHandler = this.createTooltipHandler();\n\tthis.tooltipHandler.setEnabled(false);\n\tthis.selectionCellsHandler = this.createSelectionCellsHandler();\n\tthis.connectionHandler = this.createConnectionHandler();\n\tthis.connectionHandler.setEnabled(false);\n\tthis.graphHandler = this.createGraphHandler();\n\tthis.panningHandler = this.createPanningHandler();\n\tthis.panningHandler.panningEnabled = false;\n\tthis.popupMenuHandler = this.createPopupMenuHandler();\n};\n\n/**\n * Function: createTooltipHandler\n * \n * Creates and returns a new <mxTooltipHandler> to be used in this graph.\n */\nmxGraph.prototype.createTooltipHandler = function()\n{\n\treturn new mxTooltipHandler(this);\n};\n\n/**\n * Function: createSelectionCellsHandler\n * \n * Creates and returns a new <mxTooltipHandler> to be used in this graph.\n */\nmxGraph.prototype.createSelectionCellsHandler = function()\n{\n\treturn new mxSelectionCellsHandler(this);\n};\n\n/**\n * Function: createConnectionHandler\n * \n * Creates and returns a new <mxConnectionHandler> to be used in this graph.\n */\nmxGraph.prototype.createConnectionHandler = function()\n{\n\treturn new mxConnectionHandler(this);\n};\n\n/**\n * Function: createGraphHandler\n * \n * Creates and returns a new <mxGraphHandler> to be used in this graph.\n */\nmxGraph.prototype.createGraphHandler = function()\n{\n\treturn new mxGraphHandler(this);\n};\n\n/**\n * Function: createPanningHandler\n * \n * Creates and returns a new <mxPanningHandler> to be used in this graph.\n */\nmxGraph.prototype.createPanningHandler = function()\n{\n\treturn new mxPanningHandler(this);\n};\n\n/**\n * Function: createPopupMenuHandler\n * \n * Creates and returns a new <mxPopupMenuHandler> to be used in this graph.\n */\nmxGraph.prototype.createPopupMenuHandler = function()\n{\n\treturn new mxPopupMenuHandler(this);\n};\n\n/**\n * Function: createSelectionModel\n * \n * Creates a new <mxGraphSelectionModel> to be used in this graph.\n */\nmxGraph.prototype.createSelectionModel = function()\n{\n\treturn new mxGraphSelectionModel(this);\n};\n\n/**\n * Function: createStylesheet\n * \n * Creates a new <mxGraphSelectionModel> to be used in this graph.\n */\nmxGraph.prototype.createStylesheet = function()\n{\n\treturn new mxStylesheet();\n};\n\n/**\n * Function: createGraphView\n * \n * Creates a new <mxGraphView> to be used in this graph.\n */\nmxGraph.prototype.createGraphView = function()\n{\n\treturn new mxGraphView(this);\n};\n \n/**\n * Function: createCellRenderer\n * \n * Creates a new <mxCellRenderer> to be used in this graph.\n */\nmxGraph.prototype.createCellRenderer = function()\n{\n\treturn new mxCellRenderer();\n};\n\n/**\n * Function: createCellEditor\n * \n * Creates a new <mxCellEditor> to be used in this graph.\n */\nmxGraph.prototype.createCellEditor = function()\n{\n\treturn new mxCellEditor(this);\n};\n\n/**\n * Function: getModel\n * \n * Returns the <mxGraphModel> that contains the cells.\n */\nmxGraph.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: getView\n * \n * Returns the <mxGraphView> that contains the <mxCellStates>.\n */\nmxGraph.prototype.getView = function()\n{\n\treturn this.view;\n};\n\n/**\n * Function: getStylesheet\n * \n * Returns the <mxStylesheet> that defines the style.\n */\nmxGraph.prototype.getStylesheet = function()\n{\n\treturn this.stylesheet;\n};\n\n/**\n * Function: setStylesheet\n * \n * Sets the <mxStylesheet> that defines the style.\n */\nmxGraph.prototype.setStylesheet = function(stylesheet)\n{\n\tthis.stylesheet = stylesheet;\n};\n\n/**\n * Function: getSelectionModel\n * \n * Returns the <mxGraphSelectionModel> that contains the selection.\n */\nmxGraph.prototype.getSelectionModel = function()\n{\n\treturn this.selectionModel;\n};\n\n/**\n * Function: setSelectionModel\n * \n * Sets the <mxSelectionModel> that contains the selection.\n */\nmxGraph.prototype.setSelectionModel = function(selectionModel)\n{\n\tthis.selectionModel = selectionModel;\n};\n\n/**\n * Function: getSelectionCellsForChanges\n * \n * Returns the cells to be selected for the given array of changes.\n */\nmxGraph.prototype.getSelectionCellsForChanges = function(changes)\n{\n\tvar dict = new mxDictionary();\n\tvar cells = [];\n\t\n\tvar addCell = mxUtils.bind(this, function(cell)\n\t{\n\t\tif (!dict.get(cell) && this.model.contains(cell))\n\t\t{\n\t\t\tif (this.model.isEdge(cell) || this.model.isVertex(cell))\n\t\t\t{\n\t\t\t\tdict.put(cell, true);\n\t\t\t\tcells.push(cell);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t{\n\t\t\t\t\taddCell(this.model.getChildAt(cell, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\tif (change.constructor != mxRootChange)\n\t\t{\n\t\t\tvar cell = null;\n\n\t\t\tif (change instanceof mxChildChange)\n\t\t\t{\n\t\t\t\tcell = change.child;\n\t\t\t}\n\t\t\telse if (change.cell != null && change.cell instanceof mxCell)\n\t\t\t{\n\t\t\t\tcell = change.cell;\n\t\t\t}\n\t\t\t\n\t\t\tif (cell != null)\n\t\t\t{\n\t\t\t\taddCell(cell);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: graphModelChanged\n * \n * Called when the graph model changes. Invokes <processChange> on each\n * item of the given array to update the view accordingly.\n * \n * Parameters:\n * \n * changes - Array that contains the individual changes.\n */\nmxGraph.prototype.graphModelChanged = function(changes)\n{\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tthis.processChange(changes[i]);\n\t}\n\t\n\tthis.removeSelectionCells(this.getRemovedCellsForChanges(changes));\n\tthis.view.validate();\n\tthis.sizeDidChange();\n};\n\n/**\n * Function: getRemovedCellsForChanges\n * \n * Returns the cells that have been removed from the model.\n */\nmxGraph.prototype.getRemovedCellsForChanges = function(changes)\n{\n\tvar result = [];\n\t\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\t// Resets the view settings, removes all cells and clears\n\t\t// the selection if the root changes.\n\t\tif (change instanceof mxRootChange)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse if (change instanceof mxChildChange)\n\t\t{\n\t\t\tif (this.model.contains(change.previous) && !this.model.contains(change.parent))\n\t\t\t{\n\t\t\t\tresult = result.concat(this.model.getDescendants(change.child));\n\t\t\t}\n\t\t}\n\t\telse if (change instanceof mxVisibleChange)\n\t\t{\n\t\t\tresult = result.concat(this.model.getDescendants(change.cell));\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: processChange\n * \n * Processes the given change and invalidates the respective cached data\n * in <view>. This fires a <root> event if the root has changed in the\n * model.\n * \n * Parameters:\n * \n * change - Object that represents the change on the model.\n */\nmxGraph.prototype.processChange = function(change)\n{\n\t// Resets the view settings, removes all cells and clears\n\t// the selection if the root changes.\n\tif (change instanceof mxRootChange)\n\t{\n\t\tthis.clearSelection();\n\t\tthis.setDefaultParent(null);\n\t\tthis.removeStateForCell(change.previous);\n\t\t\n\t\tif (this.resetViewOnRootChange)\n\t\t{\n\t\t\tthis.view.scale = 1;\n\t\t\tthis.view.translate.x = 0;\n\t\t\tthis.view.translate.y = 0;\n\t\t}\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t}\n\t\n\t// Adds or removes a child to the view by online invaliding\n\t// the minimal required portions of the cache, namely, the\n\t// old and new parent and the child.\n\telse if (change instanceof mxChildChange)\n\t{\n\t\tvar newParent = this.model.getParent(change.child);\n\t\tthis.view.invalidate(change.child, true, true);\n\t\t\n\t\tif (!this.model.contains(newParent) || this.isCellCollapsed(newParent))\n\t\t{\n\t\t\tthis.view.invalidate(change.child, true, true);\n\t\t\tthis.removeStateForCell(change.child);\n\t\t\t\n\t\t\t// Handles special case of current root of view being removed\n\t\t\tif (this.view.currentRoot == change.child)\n\t\t\t{\n\t\t\t\tthis.home();\n\t\t\t}\n\t\t}\n \n\t\tif (newParent != change.previous)\n\t\t{\n\t\t\t// Refreshes the collapse/expand icons on the parents\n\t\t\tif (newParent != null)\n\t\t\t{\n\t\t\t\tthis.view.invalidate(newParent, false, false);\n\t\t\t}\n\t\t\t\n\t\t\tif (change.previous != null)\n\t\t\t{\n\t\t\t\tthis.view.invalidate(change.previous, false, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handles two special cases where the shape does not need to be\n\t// recreated from scratch, it only needs to be invalidated.\n\telse if (change instanceof mxTerminalChange || change instanceof mxGeometryChange)\n\t{\n\t\t// Checks if the geometry has changed to avoid unnessecary revalidation\n\t\tif (change instanceof mxTerminalChange || ((change.previous == null && change.geometry != null) ||\n\t\t\t(change.previous != null && !change.previous.equals(change.geometry))))\n\t\t{\n\t\t\tthis.view.invalidate(change.cell);\n\t\t}\n\t}\n\n\t// Handles two special cases where only the shape, but no\n\t// descendants need to be recreated\n\telse if (change instanceof mxValueChange)\n\t{\n\t\tthis.view.invalidate(change.cell, false, false);\n\t}\n\t\n\t// Requires a new mxShape in JavaScript\n\telse if (change instanceof mxStyleChange)\n\t{\n\t\tthis.view.invalidate(change.cell, true, true);\n\t\tvar state = this.view.getState(change.cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tstate.style = null;\n\t\t}\n\t}\n\t\n\t// Removes the state from the cache by default\n\telse if (change.cell != null && change.cell instanceof mxCell)\n\t{\n\t\tthis.removeStateForCell(change.cell);\n\t}\n};\n\n/**\n * Function: removeStateForCell\n * \n * Removes all cached information for the given cell and its descendants.\n * This is called when a cell was removed from the model.\n * \n * Paramters:\n * \n * cell - <mxCell> that was removed from the model.\n */\nmxGraph.prototype.removeStateForCell = function(cell)\n{\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.removeStateForCell(this.model.getChildAt(cell, i));\n\t}\n\n\tthis.view.invalidate(cell, false, true);\n\tthis.view.removeState(cell);\n};\n\n/**\n * Group: Overlays\n */\n\n/**\n * Function: addCellOverlay\n * \n * Adds an <mxCellOverlay> for the specified cell. This method fires an\n * <addoverlay> event and returns the new <mxCellOverlay>.\n * \n * Parameters:\n * \n * cell - <mxCell> to add the overlay for.\n * overlay - <mxCellOverlay> to be added for the cell.\n */\nmxGraph.prototype.addCellOverlay = function(cell, overlay)\n{\n\tif (cell.overlays == null)\n\t{\n\t\tcell.overlays = [];\n\t}\n\t\n\tcell.overlays.push(overlay);\n\n\tvar state = this.view.getState(cell);\n\n\t// Immediately updates the cell display if the state exists\n\tif (state != null)\n\t{\n\t\tthis.cellRenderer.redraw(state);\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.ADD_OVERLAY,\n\t\t\t'cell', cell, 'overlay', overlay));\n\t\n\treturn overlay;\n};\n\n/**\n * Function: getCellOverlays\n * \n * Returns the array of <mxCellOverlays> for the given cell or null, if\n * no overlays are defined.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlays should be returned.\n */\nmxGraph.prototype.getCellOverlays = function(cell)\n{\n\treturn cell.overlays;\n};\n\n/**\n * Function: removeCellOverlay\n * \n * Removes and returns the given <mxCellOverlay> from the given cell. This\n * method fires a <removeoverlay> event. If no overlay is given, then all\n * overlays are removed using <removeOverlays>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlay should be removed.\n * overlay - Optional <mxCellOverlay> to be removed.\n */\nmxGraph.prototype.removeCellOverlay = function(cell, overlay)\n{\n\tif (overlay == null)\n\t{\n\t\tthis.removeCellOverlays(cell);\n\t}\n\telse\n\t{\n\t\tvar index = mxUtils.indexOf(cell.overlays, overlay);\n\t\t\n\t\tif (index >= 0)\n\t\t{\n\t\t\tcell.overlays.splice(index, 1);\n\t\t\t\n\t\t\tif (cell.overlays.length == 0)\n\t\t\t{\n\t\t\t\tcell.overlays = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Immediately updates the cell display if the state exists\n\t\t\tvar state = this.view.getState(cell);\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\tthis.cellRenderer.redraw(state);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_OVERLAY,\n\t\t\t\t\t'cell', cell, 'overlay', overlay));\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\toverlay = null;\n\t\t}\n\t}\n\t\n\treturn overlay;\n};\n\n/**\n * Function: removeCellOverlays\n * \n * Removes all <mxCellOverlays> from the given cell. This method\n * fires a <removeoverlay> event for each <mxCellOverlay> and returns\n * the array of <mxCellOverlays> that was removed from the cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlays should be removed\n */\nmxGraph.prototype.removeCellOverlays = function(cell)\n{\n\tvar overlays = cell.overlays;\n\t\n\tif (overlays != null)\n\t{\n\t\tcell.overlays = null;\n\t\t\n\t\t// Immediately updates the cell display if the state exists\n\t\tvar state = this.view.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.cellRenderer.redraw(state);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < overlays.length; i++)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_OVERLAY,\n\t\t\t\t\t'cell', cell, 'overlay', overlays[i]));\n\t\t}\n\t}\n\t\n\treturn overlays;\n};\n\n/**\n * Function: clearCellOverlays\n * \n * Removes all <mxCellOverlays> in the graph for the given cell and all its\n * descendants. If no cell is specified then all overlays are removed from\n * the graph. This implementation uses <removeCellOverlays> to remove the\n * overlays from the individual cells.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> that represents the root of the subtree to\n * remove the overlays from. Default is the root in the model.\n */\nmxGraph.prototype.clearCellOverlays = function(cell)\n{\n\tcell = (cell != null) ? cell : this.model.getRoot();\n\tthis.removeCellOverlays(cell);\n\t\n\t// Recursively removes all overlays from the children\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.model.getChildAt(cell, i);\n\t\tthis.clearCellOverlays(child); // recurse\n\t}\n};\n\n/**\n * Function: setCellWarning\n * \n * Creates an overlay for the given cell using the warning and image or\n * <warningImage> and returns the new <mxCellOverlay>. The warning is\n * displayed as a tooltip in a red font and may contain HTML markup. If\n * the warning is null or a zero length string, then all overlays are\n * removed from the cell.\n * \n * Example:\n * \n * (code)\n * graph.setCellWarning(cell, '<b>Warning:</b>: Hello, World!');\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose warning should be set.\n * warning - String that represents the warning to be displayed.\n * img - Optional <mxImage> to be used for the overlay. Default is\n * <warningImage>.\n * isSelect - Optional boolean indicating if a click on the overlay\n * should select the corresponding cell. Default is false.\n */\nmxGraph.prototype.setCellWarning = function(cell, warning, img, isSelect)\n{\n\tif (warning != null && warning.length > 0)\n\t{\n\t\timg = (img != null) ? img : this.warningImage;\n\t\t\n\t\t// Creates the overlay with the image and warning\n\t\tvar overlay = new mxCellOverlay(img,\n\t\t\t'<font color=red>'+warning+'</font>');\n\t\t\n\t\t// Adds a handler for single mouseclicks to select the cell\n\t\tif (isSelect)\n\t\t{\n\t\t\toverlay.addListener(mxEvent.CLICK,\n\t\t\t\tmxUtils.bind(this, function(sender, evt)\n\t\t\t\t{\n\t\t\t\t\tif (this.isEnabled())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setSelectionCell(cell);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\t\n\t\t// Sets and returns the overlay in the graph\n\t\treturn this.addCellOverlay(cell, overlay);\n\t}\n\telse\n\t{\n\t\tthis.removeCellOverlays(cell);\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Group: In-place editing\n */\n\n/**\n * Function: startEditing\n * \n * Calls <startEditingAtCell> using the given cell or the first selection\n * cell.\n * \n * Parameters:\n * \n * evt - Optional mouse event that triggered the editing.\n */\nmxGraph.prototype.startEditing = function(evt)\n{\n\tthis.startEditingAtCell(null, evt);\n};\n\n/**\n * Function: startEditingAtCell\n * \n * Fires a <startEditing> event and invokes <mxCellEditor.startEditing>\n * on <editor>. After editing was started, a <editingStarted> event is\n * fired.\n * \n * Parameters:\n * \n * cell - <mxCell> to start the in-place editor for.\n * evt - Optional mouse event that triggered the editing.\n */\nmxGraph.prototype.startEditingAtCell = function(cell, evt)\n{\n\tif (evt == null || !mxEvent.isMultiTouchEvent(evt))\n\t{\n\t\tif (cell == null)\n\t\t{\n\t\t\tcell = this.getSelectionCell();\n\t\t\t\n\t\t\tif (cell != null && !this.isCellEditable(cell))\n\t\t\t{\n\t\t\t\tcell = null;\n\t\t\t}\n\t\t}\n\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.START_EDITING,\n\t\t\t\t\t'cell', cell, 'event', evt));\n\t\t\tthis.cellEditor.startEditing(cell, evt);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.EDITING_STARTED,\n\t\t\t\t\t'cell', cell, 'event', evt));\n\t\t}\n\t}\n};\n\n/**\n * Function: getEditingValue\n * \n * Returns the initial value for in-place editing. This implementation\n * returns <convertValueToString> for the given cell. If this function is\n * overridden, then <mxGraphModel.valueForCellChanged> should take care\n * of correctly storing the actual new value inside the user object.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the initial editing value should be returned.\n * evt - Optional mouse event that triggered the editor.\n */\nmxGraph.prototype.getEditingValue = function(cell, evt)\n{\n\treturn this.convertValueToString(cell);\n};\n\n/**\n * Function: stopEditing\n * \n * Stops the current editing  and fires a <editingStopped> event.\n * \n * Parameters:\n * \n * cancel - Boolean that specifies if the current editing value\n * should be stored.\n */\nmxGraph.prototype.stopEditing = function(cancel)\n{\n\tthis.cellEditor.stopEditing(cancel);\n\tthis.fireEvent(new mxEventObject(mxEvent.EDITING_STOPPED, 'cancel', cancel));\n};\n\n/**\n * Function: labelChanged\n * \n * Sets the label of the specified cell to the given value using\n * <cellLabelChanged> and fires <mxEvent.LABEL_CHANGED> while the\n * transaction is in progress. Returns the cell whose label was changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be changed.\n * value - New label to be assigned.\n * evt - Optional event that triggered the change.\n */\nmxGraph.prototype.labelChanged = function(cell, value, evt)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar old = cell.value;\n\t\tthis.cellLabelChanged(cell, value, this.isAutoSizeCell(cell));\n\t\tthis.fireEvent(new mxEventObject(mxEvent.LABEL_CHANGED,\n\t\t\t'cell', cell, 'value', value, 'old', old, 'event', evt));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellLabelChanged\n * \n * Sets the new label for a cell. If autoSize is true then\n * <cellSizeUpdated> will be called.\n * \n * In the following example, the function is extended to map changes to\n * attributes in an XML node, as shown in <convertValueToString>.\n * Alternatively, the handling of this can be implemented as shown in\n * <mxGraphModel.valueForCellChanged> without the need to clone the\n * user object.\n * \n * (code)\n * var graphCellLabelChanged = graph.cellLabelChanged;\n * graph.cellLabelChanged = function(cell, newValue, autoSize)\n * {\n * \t// Cloned for correct undo/redo\n * \tvar elt = cell.value.cloneNode(true);\n *  elt.setAttribute('label', newValue);\n *  \n *  newValue = elt;\n *  graphCellLabelChanged.apply(this, arguments);\n * };\n * (end) \n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be changed.\n * value - New label to be assigned.\n * autoSize - Boolean that specifies if <cellSizeUpdated> should be called.\n */\nmxGraph.prototype.cellLabelChanged = function(cell, value, autoSize)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.model.setValue(cell, value);\n\t\t\n\t\tif (autoSize)\n\t\t{\n\t\t\tthis.cellSizeUpdated(cell, false);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n};\n\n/**\n * Group: Event processing\n */\n\n/**\n * Function: escape\n * \n * Processes an escape keystroke.\n * \n * Parameters:\n * \n * evt - Mouseevent that represents the keystroke.\n */\nmxGraph.prototype.escape = function(evt)\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.ESCAPE, 'event', evt));\n};\n\n/**\n * Function: click\n * \n * Processes a singleclick on an optional cell and fires a <click> event.\n * The click event is fired initially. If the graph is enabled and the\n * event has not been consumed, then the cell is selected using\n * <selectCellForEvent> or the selection is cleared using\n * <clearSelection>. The events consumed state is set to true if the\n * corresponding <mxMouseEvent> has been consumed.\n *\n * To handle a click event, use the following code.\n * \n * (code)\n * graph.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var e = evt.getProperty('event'); // mouse event\n *   var cell = evt.getProperty('cell'); // cell may be null\n *   \n *   if (cell != null)\n *   {\n *     // Do something useful with cell and consume the event\n *     evt.consume();\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the single click.\n */\nmxGraph.prototype.click = function(me)\n{\n\tvar evt = me.getEvent();\n\tvar cell = me.getCell();\n\tvar mxe = new mxEventObject(mxEvent.CLICK, 'event', evt, 'cell', cell);\n\t\n\tif (me.isConsumed())\n\t{\n\t\tmxe.consume();\n\t}\n\t\n\tthis.fireEvent(mxe);\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed())\n\t{\n\t\tif (cell != null)\n\t\t{\n\t\t\tif (this.isTransparentClickEvent(evt))\n\t\t\t{\n\t\t\t\tvar active = false;\n\t\t\t\t\n\t\t\t\tvar tmp = this.getCellAt(me.graphX, me.graphY, null, null, null, mxUtils.bind(this, function(state)\n\t\t\t\t{\n\t\t\t\t\tvar selected = this.isCellSelected(state.cell);\n\t\t\t\t\tactive = active || selected;\n\t\t\t\t\t\n\t\t\t\t\treturn !active || selected;\n\t\t\t\t}));\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tcell = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.selectCellForEvent(cell, evt);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar swimlane = null;\n\t\t\t\n\t\t\tif (this.isSwimlaneSelectionEnabled())\n\t\t\t{\n\t\t\t\t// Gets the swimlane at the location (includes\n\t\t\t\t// content area of swimlanes)\n\t\t\t\tswimlane = this.getSwimlaneAt(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\n\t\t\t// Selects the swimlane and consumes the event\n\t\t\tif (swimlane != null)\n\t\t\t{\n\t\t\t\tthis.selectCellForEvent(swimlane, evt);\n\t\t\t}\n\t\t\t\n\t\t\t// Ignores the event if the control key is pressed\n\t\t\telse if (!this.isToggleEvent(evt))\n\t\t\t{\n\t\t\t\tthis.clearSelection();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: dblClick\n * \n * Processes a doubleclick on an optional cell and fires a <dblclick>\n * event. The event is fired initially. If the graph is enabled and the\n * event has not been consumed, then <edit> is called with the given\n * cell. The event is ignored if no cell was specified.\n *\n * Example for overriding this method.\n *\n * (code)\n * graph.dblClick = function(evt, cell)\n * {\n *   var mxe = new mxEventObject(mxEvent.DOUBLE_CLICK, 'event', evt, 'cell', cell);\n *   this.fireEvent(mxe);\n *   \n *   if (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed())\n *   {\n * \t   mxUtils.alert('Hello, World!');\n *     mxe.consume();\n *   }\n * }\n * (end)\n * \n * Example listener for this event.\n * \n * (code)\n * graph.addListener(mxEvent.DOUBLE_CLICK, function(sender, evt)\n * {\n *   var cell = evt.getProperty('cell');\n *   // do something with the cell and consume the\n *   // event to prevent in-place editing from start\n * });\n * (end) \n * \n * Parameters:\n * \n * evt - Mouseevent that represents the doubleclick.\n * cell - Optional <mxCell> under the mousepointer.\n */\nmxGraph.prototype.dblClick = function(evt, cell)\n{\n\tvar mxe = new mxEventObject(mxEvent.DOUBLE_CLICK, 'event', evt, 'cell', cell);\n\tthis.fireEvent(mxe);\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed() &&\n\t\tcell != null && this.isCellEditable(cell) && !this.isEditing(cell))\n\t{\n\t\tthis.startEditingAtCell(cell, evt);\n\t\tmxEvent.consume(evt);\n\t}\n};\n\n/**\n * Function: tapAndHold\n * \n * Handles the <mxMouseEvent> by highlighting the <mxCellState>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the touch event.\n * state - Optional <mxCellState> that is associated with the event.\n */\nmxGraph.prototype.tapAndHold = function(me)\n{\n\tvar evt = me.getEvent();\n\tvar mxe = new mxEventObject(mxEvent.TAP_AND_HOLD, 'event', evt, 'cell', me.getCell());\n\n\t// LATER: Check if event should be consumed if me is consumed\n\tthis.fireEvent(mxe);\n\n\tif (mxe.isConsumed())\n\t{\n\t\t// Resets the state of the panning handler\n\t\tthis.panningHandler.panningTrigger = false;\n\t}\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed() && this.connectionHandler.isEnabled())\n\t{\n\t\tvar state = this.view.getState(this.connectionHandler.marker.getCell(me));\n\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.connectionHandler.marker.currentColor = this.connectionHandler.marker.validColor;\n\t\t\tthis.connectionHandler.marker.markedState = state;\n\t\t\tthis.connectionHandler.marker.mark();\n\t\t\t\n\t\t\tthis.connectionHandler.first = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\tthis.connectionHandler.edgeState = this.connectionHandler.createEdgeState(me);\n\t\t\tthis.connectionHandler.previous = state;\n\t\t\tthis.connectionHandler.fireEvent(new mxEventObject(mxEvent.START, 'state', this.connectionHandler.previous));\n\t\t}\n\t}\n};\n\n/**\n * Function: scrollPointToVisible\n * \n * Scrolls the graph to the given point, extending the graph container if\n * specified.\n */\nmxGraph.prototype.scrollPointToVisible = function(x, y, extend, border)\n{\n\tif (!this.timerAutoScroll && (this.ignoreScrollbars || mxUtils.hasScrollbars(this.container)))\n\t{\n\t\tvar c = this.container;\n\t\tborder = (border != null) ? border : 20;\n\t\t\n\t\tif (x >= c.scrollLeft && y >= c.scrollTop && x <= c.scrollLeft + c.clientWidth &&\n\t\t\ty <= c.scrollTop + c.clientHeight)\n\t\t{\n\t\t\tvar dx = c.scrollLeft + c.clientWidth - x;\n\t\t\t\n\t\t\tif (dx < border)\n\t\t\t{\n\t\t\t\tvar old = c.scrollLeft;\n\t\t\t\tc.scrollLeft += border - dx;\n\n\t\t\t\t// Automatically extends the canvas size to the bottom, right\n\t\t\t\t// if the event is outside of the canvas and the edge of the\n\t\t\t\t// canvas has been reached. Notes: Needs fix for IE.\n\t\t\t\tif (extend && old == c.scrollLeft)\n\t\t\t\t{\n\t\t\t\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\t\t\tvar width = this.container.scrollWidth + border - dx;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Updates the clipping region. This is an expensive\n\t\t\t\t\t\t// operation that should not be executed too often.\n\t\t\t\t\t\troot.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar width = Math.max(c.clientWidth, c.scrollWidth) + border - dx;\n\t\t\t\t\t\tvar canvas = this.view.getCanvas();\n\t\t\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tc.scrollLeft += border - dx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdx = x - c.scrollLeft;\n\t\t\t\t\n\t\t\t\tif (dx < border)\n\t\t\t\t{\n\t\t\t\t\tc.scrollLeft -= border - dx;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar dy = c.scrollTop + c.clientHeight - y;\n\t\t\t\n\t\t\tif (dy < border)\n\t\t\t{\n\t\t\t\tvar old = c.scrollTop;\n\t\t\t\tc.scrollTop += border - dy;\n\n\t\t\t\tif (old == c.scrollTop && extend)\n\t\t\t\t{\n\t\t\t\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\t\t\tvar height = this.container.scrollHeight + border - dy;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Updates the clipping region. This is an expensive\n\t\t\t\t\t\t// operation that should not be executed too often.\n\t\t\t\t\t\troot.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar height = Math.max(c.clientHeight, c.scrollHeight) + border - dy;\n\t\t\t\t\t\tvar canvas = this.view.getCanvas();\n\t\t\t\t\t\tcanvas.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tc.scrollTop += border - dy;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdy = y - c.scrollTop;\n\t\t\t\t\n\t\t\t\tif (dy < border)\n\t\t\t\t{\n\t\t\t\t\tc.scrollTop -= border - dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.allowAutoPanning && !this.panningHandler.isActive())\n\t{\n\t\tif (this.panningManager == null)\n\t\t{\n\t\t\tthis.panningManager = this.createPanningManager();\n\t\t}\n\n\t\tthis.panningManager.panTo(x + this.panDx, y + this.panDy);\n\t}\n};\n\n\n/**\n * Function: createPanningManager\n * \n * Creates and returns an <mxPanningManager>.\n */\nmxGraph.prototype.createPanningManager = function()\n{\n\treturn new mxPanningManager(this);\n};\n\n/**\n * Function: getBorderSizes\n * \n * Returns the size of the border and padding on all four sides of the\n * container. The left, top, right and bottom borders are stored in the x, y,\n * width and height of the returned <mxRectangle>, respectively.\n */\nmxGraph.prototype.getBorderSizes = function()\n{\n\tvar css = mxUtils.getCurrentStyle(this.container);\n\t\n\treturn new mxRectangle(mxUtils.parseCssNumber(css.paddingLeft) +\n\t\t\t((css.borderLeftStyle != 'none') ? mxUtils.parseCssNumber(css.borderLeftWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingTop) +\n\t\t\t((css.borderTopStyle != 'none') ? mxUtils.parseCssNumber(css.borderTopWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingRight) +\n\t\t\t((css.borderRightStyle != 'none') ? mxUtils.parseCssNumber(css.borderRightWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingBottom) +\n\t\t\t((css.borderBottomStyle != 'none') ? mxUtils.parseCssNumber(css.borderBottomWidth) : 0));\n};\n\n/**\n * Function: getPreferredPageSize\n * \n * Returns the preferred size of the background page if <preferPageSize> is true.\n */\nmxGraph.prototype.getPreferredPageSize = function(bounds, width, height)\n{\n\tvar scale = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar fmt = this.pageFormat;\n\tvar ps = this.pageScale;\n\tvar page = new mxRectangle(0, 0, Math.ceil(fmt.width * ps), Math.ceil(fmt.height * ps));\n\t\n\tvar hCount = (this.pageBreaksVisible) ? Math.ceil(width / page.width) : 1;\n\tvar vCount = (this.pageBreaksVisible) ? Math.ceil(height / page.height) : 1;\n\t\n\treturn new mxRectangle(0, 0, hCount * page.width + 2 + tr.x, vCount * page.height + 2 + tr.y);\n};\n\n/**\n * Function: fit\n *\n * Scales the graph such that the complete diagram fits into <container> and\n * returns the current scale in the view. To fit an initial graph prior to\n * rendering, set <mxGraphView.rendering> to false prior to changing the model\n * and execute the following after changing the model.\n * \n * (code)\n * graph.fit();\n * graph.view.rendering = true;\n * graph.refresh();\n * (end)\n * \n * To fit and center the graph, the following code can be used.\n * \n * (code)\n * var margin = 2;\n * var max = 3;\n * \n * var bounds = graph.getGraphBounds();\n * var cw = graph.container.clientWidth - margin;\n * var ch = graph.container.clientHeight - margin;\n * var w = bounds.width / graph.view.scale;\n * var h = bounds.height / graph.view.scale;\n * var s = Math.min(max, Math.min(cw / w, ch / h));\n * \n * graph.view.scaleAndTranslate(s,\n *   (margin + cw - w * s) / (2 * s) - bounds.x / graph.view.scale,\n *   (margin + ch - h * s) / (2 * s) - bounds.y / graph.view.scale);\n * (end)\n * \n * Parameters:\n * \n * border - Optional number that specifies the border. Default is <border>.\n * keepOrigin - Optional boolean that specifies if the translate should be\n * changed. Default is false.\n * margin - Optional margin in pixels. Default is 0.\n * enabled - Optional boolean that specifies if the scale should be set or\n * just returned. Default is true.\n * ignoreWidth - Optional boolean that specifies if the width should be\n * ignored. Default is false.\n * ignoreHeight - Optional boolean that specifies if the height should be\n * ignored. Default is false.\n * maxHeight - Optional maximum height.\n */\nmxGraph.prototype.fit = function(border, keepOrigin, margin, enabled, ignoreWidth, ignoreHeight, maxHeight)\n{\n\tif (this.container != null)\n\t{\n\t\tborder = (border != null) ? border : this.getBorder();\n\t\tkeepOrigin = (keepOrigin != null) ? keepOrigin : false;\n\t\tmargin = (margin != null) ? margin : 0;\n\t\tenabled = (enabled != null) ? enabled : true;\n\t\tignoreWidth = (ignoreWidth != null) ? ignoreWidth : false;\n\t\tignoreHeight = (ignoreHeight != null) ? ignoreHeight : false;\n\t\t\n\t\t// Adds spacing and border from css\n\t\tvar cssBorder = this.getBorderSizes();\n\t\tvar w1 = this.container.offsetWidth - cssBorder.x - cssBorder.width - 1;\n\t\tvar h1 = (maxHeight != null) ? maxHeight : this.container.offsetHeight - cssBorder.y - cssBorder.height - 1;\n\t\tvar bounds = this.view.getGraphBounds();\n\t\t\n\t\tif (bounds.width > 0 && bounds.height > 0)\n\t\t{\n\t\t\tif (keepOrigin && bounds.x != null && bounds.y != null)\n\t\t\t{\n\t\t\t\tbounds = bounds.clone();\n\t\t\t\tbounds.width += bounds.x;\n\t\t\t\tbounds.height += bounds.y;\n\t\t\t\tbounds.x = 0;\n\t\t\t\tbounds.y = 0;\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Use unscaled bounding boxes to fix rounding errors\n\t\t\tvar s = this.view.scale;\n\t\t\tvar w2 = bounds.width / s;\n\t\t\tvar h2 = bounds.height / s;\n\t\t\t\n\t\t\t// Fits to the size of the background image if required\n\t\t\tif (this.backgroundImage != null)\n\t\t\t{\n\t\t\t\tw2 = Math.max(w2, this.backgroundImage.width - bounds.x / s);\n\t\t\t\th2 = Math.max(h2, this.backgroundImage.height - bounds.y / s);\n\t\t\t}\n\t\t\t\n\t\t\tvar b = ((keepOrigin) ? border : 2 * border) + margin + 1;\n\n\t\t\tw1 -= b;\n\t\t\th1 -= b;\n\t\t\t\n\t\t\tvar s2 = (((ignoreWidth) ? h1 / h2 : (ignoreHeight) ? w1 / w2 :\n\t\t\t\tMath.min(w1 / w2, h1 / h2)));\n\t\t\t\n\t\t\tif (this.minFitScale != null)\n\t\t\t{\n\t\t\t\ts2 = Math.max(s2, this.minFitScale);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.maxFitScale != null)\n\t\t\t{\n\t\t\t\ts2 = Math.min(s2, this.maxFitScale);\n\t\t\t}\n\t\n\t\t\tif (enabled)\n\t\t\t{\n\t\t\t\tif (!keepOrigin)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.hasScrollbars(this.container))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar x0 = (bounds.x != null) ? Math.floor(this.view.translate.x - bounds.x / s + border / s2 + margin / 2) : border;\n\t\t\t\t\t\tvar y0 = (bounds.y != null) ? Math.floor(this.view.translate.y - bounds.y / s + border / s2 + margin / 2) : border;\n\n\t\t\t\t\t\tthis.view.scaleAndTranslate(s2, x0, y0);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.view.setScale(s2);\n\t\t\t\t\t\tvar b2 = this.getGraphBounds();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (b2.x != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.container.scrollLeft = b2.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (b2.y != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.container.scrollTop = b2.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.view.scale != s2)\n\t\t\t\t{\n\t\t\t\t\tthis.view.setScale(s2);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn s2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.view.scale;\n};\n\n/**\n * Function: sizeDidChange\n * \n * Called when the size of the graph has changed. This implementation fires\n * a <size> event after updating the clipping region of the SVG element in\n * SVG-bases browsers.\n */\nmxGraph.prototype.sizeDidChange = function()\n{\n\tvar bounds = this.getGraphBounds();\n\t\n\tif (this.container != null)\n\t{\n\t\tvar border = this.getBorder();\n\t\t\n\t\tvar width = Math.max(0, bounds.x + bounds.width + 2 * border * this.view.scale);\n\t\tvar height = Math.max(0, bounds.y + bounds.height + 2 * border * this.view.scale);\n\t\t\n\t\tif (this.minimumContainerSize != null)\n\t\t{\n\t\t\twidth = Math.max(width, this.minimumContainerSize.width);\n\t\t\theight = Math.max(height, this.minimumContainerSize.height);\n\t\t}\n\n\t\tif (this.resizeContainer)\n\t\t{\n\t\t\tthis.doResizeContainer(width, height);\n\t\t}\n\n\t\tif (this.preferPageSize || (!mxClient.IS_IE && this.pageVisible))\n\t\t{\n\t\t\tvar size = this.getPreferredPageSize(bounds, Math.max(1, width), Math.max(1, height));\n\t\t\t\n\t\t\tif (size != null)\n\t\t\t{\n\t\t\t\twidth = size.width * this.view.scale;\n\t\t\t\theight = size.height * this.view.scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.minimumGraphSize != null)\n\t\t{\n\t\t\twidth = Math.max(width, this.minimumGraphSize.width * this.view.scale);\n\t\t\theight = Math.max(height, this.minimumGraphSize.height * this.view.scale);\n\t\t}\n\n\t\twidth = Math.ceil(width);\n\t\theight = Math.ceil(height);\n\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\n\t\t\troot.style.minWidth = Math.max(1, width) + 'px';\n\t\t\troot.style.minHeight = Math.max(1, height) + 'px';\n\t\t\troot.style.width = '100%';\n\t\t\troot.style.height = '100%';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\t// Quirks mode does not support minWidth/-Height\n\t\t\t\tthis.view.updateHtmlCanvasSize(Math.max(1, width), Math.max(1, height));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.view.canvas.style.minWidth = Math.max(1, width) + 'px';\n\t\t\t\tthis.view.canvas.style.minHeight = Math.max(1, height) + 'px';\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.updatePageBreaks(this.pageBreaksVisible, width, height);\n\t}\n\n\tthis.fireEvent(new mxEventObject(mxEvent.SIZE, 'bounds', bounds));\n};\n\n/**\n * Function: doResizeContainer\n * \n * Resizes the container for the given graph width and height.\n */\nmxGraph.prototype.doResizeContainer = function(width, height)\n{\n\tif (this.maximumContainerSize != null)\n\t{\n\t\twidth = Math.min(this.maximumContainerSize.width, width);\n\t\theight = Math.min(this.maximumContainerSize.height, height);\n\t}\n\n\tthis.container.style.width = Math.ceil(width) + 'px';\n\tthis.container.style.height = Math.ceil(height) + 'px';\n};\n\n/**\n * Function: updatePageBreaks\n * \n * Invokes from <sizeDidChange> to redraw the page breaks.\n * \n * Parameters:\n * \n * visible - Boolean that specifies if page breaks should be shown.\n * width - Specifies the width of the container in pixels.\n * height - Specifies the height of the container in pixels.\n */\nmxGraph.prototype.updatePageBreaks = function(visible, width, height)\n{\n\tvar scale = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar fmt = this.pageFormat;\n\tvar ps = scale * this.pageScale;\n\tvar bounds = new mxRectangle(0, 0, fmt.width * ps, fmt.height * ps);\n\n\tvar gb = mxRectangle.fromRectangle(this.getGraphBounds());\n\tgb.width = Math.max(1, gb.width);\n\tgb.height = Math.max(1, gb.height);\n\t\n\tbounds.x = Math.floor((gb.x - tr.x * scale) / bounds.width) * bounds.width + tr.x * scale;\n\tbounds.y = Math.floor((gb.y - tr.y * scale) / bounds.height) * bounds.height + tr.y * scale;\n\t\n\tgb.width = Math.ceil((gb.width + (gb.x - bounds.x)) / bounds.width) * bounds.width;\n\tgb.height = Math.ceil((gb.height + (gb.y - bounds.y)) / bounds.height) * bounds.height;\n\t\n\t// Does not show page breaks if the scale is too small\n\tvisible = visible && Math.min(bounds.width, bounds.height) > this.minPageBreakDist;\n\n\tvar horizontalCount = (visible) ? Math.ceil(gb.height / bounds.height) + 1 : 0;\n\tvar verticalCount = (visible) ? Math.ceil(gb.width / bounds.width) + 1 : 0;\n\tvar right = (verticalCount - 1) * bounds.width;\n\tvar bottom = (horizontalCount - 1) * bounds.height;\n\t\n\tif (this.horizontalPageBreaks == null && horizontalCount > 0)\n\t{\n\t\tthis.horizontalPageBreaks = [];\n\t}\n\n\tif (this.verticalPageBreaks == null && verticalCount > 0)\n\t{\n\t\tthis.verticalPageBreaks = [];\n\t}\n\t\n\tvar drawPageBreaks = mxUtils.bind(this, function(breaks)\n\t{\n\t\tif (breaks != null)\n\t\t{\n\t\t\tvar count = (breaks == this.horizontalPageBreaks) ? horizontalCount : verticalCount; \n\t\t\t\n\t\t\tfor (var i = 0; i <= count; i++)\n\t\t\t{\n\t\t\t\tvar pts = (breaks == this.horizontalPageBreaks) ?\n\t\t\t\t\t[new mxPoint(Math.round(bounds.x), Math.round(bounds.y + i * bounds.height)),\n\t\t\t         new mxPoint(Math.round(bounds.x + right), Math.round(bounds.y + i * bounds.height))] :\n\t\t\t        [new mxPoint(Math.round(bounds.x + i * bounds.width), Math.round(bounds.y)),\n\t\t\t         new mxPoint(Math.round(bounds.x + i * bounds.width), Math.round(bounds.y + bottom))];\n\n\t\t\t\tif (breaks[i] != null)\n\t\t\t\t{\n\t\t\t\t\tbreaks[i].points = pts;\n\t\t\t\t\tbreaks[i].redraw();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar pageBreak = new mxPolyline(pts, this.pageBreakColor);\n\t\t\t\t\tpageBreak.dialect = this.dialect;\n\t\t\t\t\tpageBreak.pointerEvents = false;\n\t\t\t\t\tpageBreak.isDashed = this.pageBreakDashed;\n\t\t\t\t\tpageBreak.init(this.view.backgroundPane);\n\t\t\t\t\tpageBreak.redraw();\n\t\t\t\t\t\n\t\t\t\t\tbreaks[i] = pageBreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = count; i < breaks.length; i++)\n\t\t\t{\n\t\t\t\tbreaks[i].destroy();\n\t\t\t}\n\t\t\t\n\t\t\tbreaks.splice(count, breaks.length - count);\n\t\t}\n\t});\n\t\n\tdrawPageBreaks(this.horizontalPageBreaks);\n\tdrawPageBreaks(this.verticalPageBreaks);\n};\n\n/**\n * Group: Cell styles\n */\n\n/**\n * Function: getCellStyle\n * \n * Returns an array of key, value pairs representing the cell style for the\n * given cell. If no string is defined in the model that specifies the\n * style, then the default style for the cell is returned or <EMPTY_ARRAY>,\n * if not style can be found. Note: You should try and get the cell state\n * for the given cell and use the cached style in the state before using\n * this method.\n * \n * Parameters:\n * \n * cell - <mxCell> whose style should be returned as an array.\n */\nmxGraph.prototype.getCellStyle = function(cell)\n{\n\tvar stylename = this.model.getStyle(cell);\n\tvar style = null;\n\t\n\t// Gets the default style for the cell\n\tif (this.model.isEdge(cell))\n\t{\n\t\tstyle = this.stylesheet.getDefaultEdgeStyle();\n\t}\n\telse\n\t{\n\t\tstyle = this.stylesheet.getDefaultVertexStyle();\n\t}\n\t\n\t// Resolves the stylename using the above as the default\n\tif (stylename != null)\n\t{\n\t\tstyle = this.postProcessCellStyle(this.stylesheet.getCellStyle(stylename, style));\n\t}\n\t\n\t// Returns a non-null value if no style can be found\n\tif (style == null)\n\t{\n\t\tstyle = mxGraph.prototype.EMPTY_ARRAY;\n\t}\n\t\n\treturn style;\n};\n\n/**\n * Function: postProcessCellStyle\n * \n * Tries to resolve the value for the image style in the image bundles and\n * turns short data URIs as defined in mxImageBundle to data URIs as\n * defined in RFC 2397 of the IETF.\n */\nmxGraph.prototype.postProcessCellStyle = function(style)\n{\n\tif (style != null)\n\t{\n\t\tvar key = style[mxConstants.STYLE_IMAGE];\n\t\tvar image = this.getImageFromBundles(key);\n\n\t\tif (image != null)\n\t\t{\n\t\t\tstyle[mxConstants.STYLE_IMAGE] = image;\n\t\t}\n\t\telse\n\t\t{\n\t\t\timage = key;\n\t\t}\n\t\t\n\t\t// Converts short data uris to normal data uris\n\t\tif (image != null && image.substring(0, 11) == 'data:image/')\n\t\t{\n\t\t\tif (image.substring(0, 20) == 'data:image/svg+xml,<')\n\t\t\t{\n\t\t\t\t// Required for FF and IE11\n\t\t\t\timage = image.substring(0, 19) + encodeURIComponent(image.substring(19));\n\t\t\t}\n\t\t\telse if (image.substring(0, 22) != 'data:image/svg+xml,%3C')\n\t\t\t{\n\t\t\t\tvar comma = image.indexOf(',');\n\t\t\t\t\n\t\t\t\t// Adds base64 encoding prefix if needed\n\t\t\t\tif (comma > 0 && image.substring(comma - 7, comma + 1) != ';base64,')\n\t\t\t\t{\n\t\t\t\t\timage = image.substring(0, comma) + ';base64,'\n\t\t\t\t\t\t+ image.substring(comma + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tstyle[mxConstants.STYLE_IMAGE] = image;\n\t\t}\n\t}\n\n\treturn style;\n};\n\n/**\n * Function: setCellStyle\n * \n * Sets the style of the specified cells. If no cells are given, then the\n * selection cells are changed.\n * \n * Parameters:\n * \n * style - String representing the new style of the cells.\n * cells - Optional array of <mxCells> to set the style for. Default is the\n * selection cells.\n */\nmxGraph.prototype.setCellStyle = function(style, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\t\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.model.setStyle(cells[i], style);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: toggleCellStyle\n * \n * Toggles the boolean value for the given key in the style of the given cell\n * and returns the new value as 0 or 1. If no cell is specified then the\n * selection cell is used.\n * \n * Parameter:\n * \n * key - String representing the key for the boolean value to be toggled.\n * defaultValue - Optional boolean default value if no value is defined.\n * Default is false.\n * cell - Optional <mxCell> whose style should be modified. Default is\n * the selection cell.\n */\nmxGraph.prototype.toggleCellStyle = function(key, defaultValue, cell)\n{\n\tcell = cell || this.getSelectionCell();\n\t\n\treturn this.toggleCellStyles(key, defaultValue, [cell]);\n};\n\n/**\n * Function: toggleCellStyles\n * \n * Toggles the boolean value for the given key in the style of the given cells\n * and returns the new value as 0 or 1. If no cells are specified, then the\n * selection cells are used. For example, this can be used to toggle\n * <mxConstants.STYLE_ROUNDED> or any other style with a boolean value.\n * \n * Parameter:\n * \n * key - String representing the key for the boolean value to be toggled.\n * defaultValue - Optional boolean default value if no value is defined.\n * Default is false.\n * cells - Optional array of <mxCells> whose styles should be modified.\n * Default is the selection cells.\n */\nmxGraph.prototype.toggleCellStyles = function(key, defaultValue, cells)\n{\n\tdefaultValue = (defaultValue != null) ? defaultValue : false;\n\tcells = cells || this.getSelectionCells();\n\tvar value = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar state = this.view.getState(cells[0]);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cells[0]);\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvalue = (mxUtils.getValue(style, key, defaultValue)) ? 0 : 1;\n\t\t\tthis.setCellStyles(key, value, cells);\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: setCellStyles\n * \n * Sets the key to value in the styles of the given cells. This will modify\n * the existing cell styles in-place and override any existing assignment\n * for the given key. If no cells are specified, then the selection cells\n * are changed. If no value is specified, then the respective key is\n * removed from the styles.\n * \n * Parameters:\n * \n * key - String representing the key to be assigned.\n * value - String representing the new value for the key.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.setCellStyles = function(key, value, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\tmxUtils.setCellStyles(this.model, cells, key, value);\n};\n\n/**\n * Function: toggleCellStyleFlags\n * \n * Toggles the given bit for the given key in the styles of the specified\n * cells.\n * \n * Parameters:\n * \n * key - String representing the key to toggle the flag in.\n * flag - Integer that represents the bit to be toggled.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.toggleCellStyleFlags = function(key, flag, cells)\n{\n\tthis.setCellStyleFlags(key, flag, null, cells);\n};\n\n/**\n * Function: setCellStyleFlags\n * \n * Sets or toggles the given bit for the given key in the styles of the\n * specified cells.\n * \n * Parameters:\n * \n * key - String representing the key to toggle the flag in.\n * flag - Integer that represents the bit to be toggled.\n * value - Boolean value to be used or null if the value should be toggled.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.setCellStyleFlags = function(key, flag, value, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tif (value == null)\n\t\t{\n\t\t\tvar state = this.view.getState(cells[0]);\n\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cells[0]);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tvar current = parseInt(style[key] || 0);\n\t\t\t\tvalue = !((current & flag) == flag);\n\t\t\t}\n\t\t}\n\n\t\tmxUtils.setCellStyleFlags(this.model, cells, key, flag, value);\n\t}\n};\n\n/**\n * Group: Cell alignment and orientation\n */\n\n/**\n * Function: alignCells\n * \n * Aligns the given cells vertically or horizontally according to the given\n * alignment using the optional parameter as the coordinate.\n * \n * Parameters:\n * \n * align - Specifies the alignment. Possible values are all constants in\n * mxConstants with an ALIGN prefix.\n * cells - Array of <mxCells> to be aligned.\n * param - Optional coordinate for the alignment.\n */\nmxGraph.prototype.alignCells = function(align, cells, param)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tif (cells != null && cells.length > 1)\n\t{\n\t\t// Finds the required coordinate for the alignment\n\t\tif (param == null)\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\n\t\t\t\tif (state != null && !this.model.isEdge(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tif (param == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x + state.width / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x + state.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y + state.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y + state.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.max(param, state.x + state.width);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.min(param, state.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.max(param, state.y + state.height);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.min(param, state.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Aligns the cells to the coordinate\n\t\tif (param != null)\n\t\t{\n\t\t\tvar s = this.view.scale;\n\n\t\t\tthis.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (geo != null && !this.model.isEdge(cells[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x - state.width / 2) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x - state.width) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y - state.height / 2) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y - state.height) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.resizeCell(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ALIGN_CELLS,\n\t\t\t\t\t\t'align', align, 'cells', cells));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.model.endUpdate();\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: flipEdge\n * \n * Toggles the style of the given edge between null (or empty) and\n * <alternateEdgeStyle>. This method fires <mxEvent.FLIP_EDGE> while the\n * transaction is in progress. Returns the edge that was flipped.\n * \n * Here is an example that overrides this implementation to invert the\n * value of <mxConstants.STYLE_ELBOW> without removing any existing styles.\n * \n * (code)\n * graph.flipEdge = function(edge)\n * {\n *   if (edge != null)\n *   {\n *     var state = this.view.getState(edge);\n *     var style = (state != null) ? state.style : this.getCellStyle(edge);\n *     \n *     if (style != null)\n *     {\n *       var elbow = mxUtils.getValue(style, mxConstants.STYLE_ELBOW,\n *           mxConstants.ELBOW_HORIZONTAL);\n *       var value = (elbow == mxConstants.ELBOW_HORIZONTAL) ?\n *           mxConstants.ELBOW_VERTICAL : mxConstants.ELBOW_HORIZONTAL;\n *       this.setCellStyles(mxConstants.STYLE_ELBOW, value, [edge]);\n *     }\n *   }\n * };\n * (end)\n * \n * Parameters:\n * \n * edge - <mxCell> whose style should be changed.\n */\nmxGraph.prototype.flipEdge = function(edge)\n{\n\tif (edge != null &&\n\t\tthis.alternateEdgeStyle != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar style = this.model.getStyle(edge);\n\n\t\t\tif (style == null || style.length == 0)\n\t\t\t{\n\t\t\t\tthis.model.setStyle(edge, this.alternateEdgeStyle);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.model.setStyle(edge, null);\n\t\t\t}\n\n\t\t\t// Removes all existing control points\n\t\t\tthis.resetEdge(edge);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.FLIP_EDGE, 'edge', edge));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: addImageBundle\n *\n * Adds the specified <mxImageBundle>.\n */\nmxGraph.prototype.addImageBundle = function(bundle)\n{\n\tthis.imageBundles.push(bundle);\n};\n\n/**\n * Function: removeImageBundle\n * \n * Removes the specified <mxImageBundle>.\n */\nmxGraph.prototype.removeImageBundle = function(bundle)\n{\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < this.imageBundles.length; i++)\n\t{\n\t\tif (this.imageBundles[i] != bundle)\n\t\t{\n\t\t\ttmp.push(this.imageBundles[i]);\n\t\t}\n\t}\n\t\n\tthis.imageBundles = tmp;\n};\n\n/**\n * Function: getImageFromBundles\n *\n * Searches all <imageBundles> for the specified key and returns the value\n * for the first match or null if the key is not found.\n */\nmxGraph.prototype.getImageFromBundles = function(key)\n{\n\tif (key != null)\n\t{\n\t\tfor (var i = 0; i < this.imageBundles.length; i++)\n\t\t{\n\t\t\tvar image = this.imageBundles[i].getImage(key);\n\t\t\t\n\t\t\tif (image != null)\n\t\t\t{\n\t\t\t\treturn image;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Group: Order\n */\n\n/**\n * Function: orderCells\n * \n * Moves the given cells to the front or back. The change is carried out\n * using <cellsOrdered>. This method fires <mxEvent.ORDER_CELLS> while the\n * transaction is in progress.\n * \n * Parameters:\n * \n * back - Boolean that specifies if the cells should be moved to back.\n * cells - Array of <mxCells> to move to the background. If null is\n * specified then the selection cells are used.\n */\nmxGraph.prototype.orderCells = function(back, cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = mxUtils.sortCells(this.getSelectionCells(), true);\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsOrdered(cells, back);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ORDER_CELLS,\n\t\t\t\t'back', back, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsOrdered\n * \n * Moves the given cells to the front or back. This method fires\n * <mxEvent.CELLS_ORDERED> while the transaction is in progress.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose order should be changed.\n * back - Boolean that specifies if the cells should be moved to back.\n */\nmxGraph.prototype.cellsOrdered = function(cells, back)\n{\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\n\t\t\t\tif (back)\n\t\t\t\t{\n\t\t\t\t\tthis.model.add(parent, cells[i], i);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.model.add(parent, cells[i],\n\t\t\t\t\t\t\tthis.model.getChildCount(parent) - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_ORDERED,\n\t\t\t\t\t'back', back, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Grouping\n */\n\n/**\n * Function: groupCells\n * \n * Adds the cells into the given group. The change is carried out using\n * <cellsAdded>, <cellsMoved> and <cellsResized>. This method fires\n * <mxEvent.GROUP_CELLS> while the transaction is in progress. Returns the\n * new group. A group is only created if there is at least one entry in the\n * given array of cells.\n * \n * Parameters:\n * \n * group - <mxCell> that represents the target group. If null is specified\n * then a new group is created using <createGroupCell>.\n * border - Optional integer that specifies the border between the child\n * area and the group bounds. Default is 0.\n * cells - Optional array of <mxCells> to be grouped. If null is specified\n * then the selection cells are used.\n */\nmxGraph.prototype.groupCells = function(group, border, cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = mxUtils.sortCells(this.getSelectionCells(), true);\n\t}\n\n\tcells = this.getCellsForGroup(cells);\n\n\tif (group == null)\n\t{\n\t\tgroup = this.createGroupCell(cells);\n\t}\n\n\tvar bounds = this.getBoundsForGroup(group, cells, border);\n\n\tif (cells.length > 0 && bounds != null)\n\t{\n\t\t// Uses parent of group or previous parent of first child\n\t\tvar parent = this.model.getParent(group);\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.model.getParent(cells[0]);\n\t\t}\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Checks if the group has a geometry and\n\t\t\t// creates one if one does not exist\n\t\t\tif (this.getCellGeometry(group) == null)\n\t\t\t{\n\t\t\t\tthis.model.setGeometry(group, new mxGeometry());\n\t\t\t}\n\n\t\t\t// Adds the group into the parent\n\t\t\tvar index = this.model.getChildCount(parent);\n\t\t\tthis.cellsAdded([group], parent, index, null, null, false, false, false);\n\n\t\t\t// Adds the children into the group and moves\n\t\t\tindex = this.model.getChildCount(group);\n\t\t\tthis.cellsAdded(cells, group, index, null, null, false, false, false);\n\t\t\tthis.cellsMoved(cells, -bounds.x, -bounds.y, false, false, false);\n\n\t\t\t// Resizes the group\n\t\t\tthis.cellsResized([group], [bounds], false);\n\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.GROUP_CELLS,\n\t\t\t\t\t'group', group, 'border', border, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn group;\n};\n\n/**\n * Function: getCellsForGroup\n * \n * Returns the cells with the same parent as the first cell\n * in the given array.\n */\nmxGraph.prototype.getCellsForGroup = function(cells)\n{\n\tvar result = [];\n\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar parent = this.model.getParent(cells[0]);\n\t\tresult.push(cells[0]);\n\n\t\t// Filters selection cells with the same parent\n\t\tfor (var i = 1; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.getParent(cells[i]) == parent)\n\t\t\t{\n\t\t\t\tresult.push(cells[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getBoundsForGroup\n * \n * Returns the bounds to be used for the given group and children.\n */\nmxGraph.prototype.getBoundsForGroup = function(group, children, border)\n{\n\tvar result = this.getBoundingBoxFromGeometry(children, true);\n\t\n\tif (result != null)\n\t{\n\t\tif (this.isSwimlane(group))\n\t\t{\n\t\t\tvar size = this.getStartSize(group);\n\t\t\t\n\t\t\tresult.x -= size.width;\n\t\t\tresult.y -= size.height;\n\t\t\tresult.width += size.width;\n\t\t\tresult.height += size.height;\n\t\t}\n\t\t\n\t\t// Adds the border\n\t\tif (border != null)\n\t\t{\n\t\t\tresult.x -= border;\n\t\t\tresult.y -= border;\n\t\t\tresult.width += 2 * border;\n\t\t\tresult.height += 2 * border;\n\t\t}\n\t}\t\t\t\n\t\n\treturn result;\n};\n\n/**\n * Function: createGroupCell\n * \n * Hook for creating the group cell to hold the given array of <mxCells> if\n * no group cell was given to the <group> function.\n * \n * The following code can be used to set the style of new group cells.\n * \n * (code)\n * var graphCreateGroupCell = graph.createGroupCell;\n * graph.createGroupCell = function(cells)\n * {\n *   var group = graphCreateGroupCell.apply(this, arguments);\n *   group.setStyle('group');\n *   \n *   return group;\n * };\n */\nmxGraph.prototype.createGroupCell = function(cells)\n{\n\tvar group = new mxCell('');\n\tgroup.setVertex(true);\n\tgroup.setConnectable(false);\n\t\n\treturn group;\n};\n\n/**\n * Function: ungroupCells\n * \n * Ungroups the given cells by moving the children the children to their\n * parents parent and removing the empty groups. Returns the children that\n * have been removed from the groups.\n * \n * Parameters:\n * \n * cells - Array of cells to be ungrouped. If null is specified then the\n * selection cells are used.\n */\nmxGraph.prototype.ungroupCells = function(cells)\n{\n\tvar result = [];\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\n\t\t// Finds the cells with children\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.getChildCount(cells[i]) > 0)\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\n\t\t}\n\n\t\tcells = tmp;\n\t}\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\t\t\n\t\t\t\tif (children != null && children.length > 0)\n\t\t\t\t{\n\t\t\t\t\tchildren = children.slice();\n\t\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\t\t\tvar index = this.model.getChildCount(parent);\n\n\t\t\t\t\tthis.cellsAdded(children, parent, index, null, null, true);\n\t\t\t\t\tresult = result.concat(children);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.removeCellsAfterUngroup(cells);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.UNGROUP_CELLS, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: removeCellsAfterUngroup\n * \n * Hook to remove the groups after <ungroupCells>.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> that were ungrouped.\n */\nmxGraph.prototype.removeCellsAfterUngroup = function(cells)\n{\n\tthis.cellsRemoved(this.addAllEdges(cells));\n};\n\n/**\n * Function: removeCellsFromParent\n * \n * Removes the specified cells from their parents and adds them to the\n * default parent. Returns the cells that were removed from their parents.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be removed from their parents.\n */\nmxGraph.prototype.removeCellsFromParent = function(cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar parent = this.getDefaultParent();\n\t\tvar index = this.model.getChildCount(parent);\n\n\t\tthis.cellsAdded(cells, parent, index, null, null, true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_CELLS_FROM_PARENT, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: updateGroupBounds\n * \n * Updates the bounds of the given groups to include all children and returns\n * the passed-in cells. Call this with the groups in parent to child order,\n * top-most group first, the cells are processed in reverse order and cells\n * with no children are ignored.\n * \n * Parameters:\n * \n * cells - The groups whose bounds should be updated. If this is null, then\n * the selection cells are used.\n * border - Optional border to be added in the group. Default is 0.\n * moveGroup - Optional boolean that allows the group to be moved. Default\n * is false.\n * topBorder - Optional top border to be added in the group. Default is 0.\n * rightBorder - Optional top border to be added in the group. Default is 0.\n * bottomBorder - Optional top border to be added in the group. Default is 0.\n * leftBorder - Optional top border to be added in the group. Default is 0.\n */\nmxGraph.prototype.updateGroupBounds = function(cells, border, moveGroup, topBorder, rightBorder, bottomBorder, leftBorder)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tborder = (border != null) ? border : 0;\n\tmoveGroup = (moveGroup != null) ? moveGroup : false;\n\ttopBorder = (topBorder != null) ? topBorder : 0;\n\trightBorder = (rightBorder != null) ? rightBorder : 0;\n\tbottomBorder = (bottomBorder != null) ? bottomBorder : 0;\n\tleftBorder = (leftBorder != null) ? leftBorder : 0;\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = cells.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar children = this.getChildCells(cells[i]);\n\t\t\t\t\n\t\t\t\tif (children != null && children.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = this.getBoundingBoxFromGeometry(children, true);\n\t\t\t\t\t\n\t\t\t\t\tif (bounds != null && bounds.width > 0 && bounds.height > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar left = 0;\n\t\t\t\t\t\tvar top = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Adds the size of the title area for swimlanes\n\t\t\t\t\t\tif (this.isSwimlane(cells[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar size = this.getStartSize(cells[i]);\n\t\t\t\t\t\t\tleft = size.width;\n\t\t\t\t\t\t\ttop = size.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (moveGroup)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = Math.round(geo.x + bounds.x - border - left - leftBorder);\n\t\t\t\t\t\t\tgeo.y = Math.round(geo.y + bounds.y - border - top - topBorder);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo.width = Math.round(bounds.width + 2 * border + left + leftBorder + rightBorder);\n\t\t\t\t\t\tgeo.height = Math.round(bounds.height + 2 * border + top + topBorder + bottomBorder);\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\tthis.moveCells(children, border + left - bounds.x + leftBorder,\n\t\t\t\t\t\t\t\tborder + top - bounds.y + topBorder);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the bounding box for the given array of <mxCells>. The bounding box for\n * each cell and its descendants is computed using <mxGraphView.getBoundingBox>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounding box should be returned.\n */\nmxGraph.prototype.getBoundingBox = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.isVertex(cells[i]) || this.model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar bbox = this.view.getBoundingBox(this.view.getState(cells[i]), true);\n\t\t\t\n\t\t\t\tif (bbox != null)\n\t\t\t\t{\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Group: Cell cloning, insertion and removal\n */\n\n/**\n * Function: cloneCell\n * \n * Returns the clone for the given cell. Uses <cloneCells>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be cloned.\n * allowInvalidEdges - Optional boolean that specifies if invalid edges\n * should be cloned. Default is true.\n * mapping - Optional mapping for existing clones.\n * keepPosition - Optional boolean indicating if the position of the cells should\n * be updated to reflect the lost parent cell. Default is false.\n */\nmxGraph.prototype.cloneCell = function(cell, allowInvalidEdges, mapping, keepPosition)\n{\n\treturn this.cloneCells([cell], allowInvalidEdges, mapping, keepPosition)[0];\n};\n\n/**\n * Function: cloneCells\n * \n * Returns the clones for the given cells. The clones are created recursively\n * using <mxGraphModel.cloneCells>. If the terminal of an edge is not in the\n * given array, then the respective end is assigned a terminal point and the\n * terminal is removed.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be cloned.\n * allowInvalidEdges - Optional boolean that specifies if invalid edges\n * should be cloned. Default is true.\n * mapping - Optional mapping for existing clones.\n * keepPosition - Optional boolean indicating if the position of the cells should\n * be updated to reflect the lost parent cell. Default is false.\n */\nmxGraph.prototype.cloneCells = function(cells, allowInvalidEdges, mapping, keepPosition)\n{\n\tallowInvalidEdges = (allowInvalidEdges != null) ? allowInvalidEdges : true;\n\tvar clones = null;\n\t\n\tif (cells != null)\n\t{\n\t\t// Creates a dictionary for fast lookups\n\t\tvar dict = new mxDictionary();\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t\ttmp.push(cells[i]);\n\t\t}\n\t\t\n\t\tif (tmp.length > 0)\n\t\t{\n\t\t\tvar scale = this.view.scale;\n\t\t\tvar trans = this.view.translate;\n\t\t\tclones = this.model.cloneCells(cells, true, mapping);\n\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!allowInvalidEdges && this.model.isEdge(clones[i]) &&\n\t\t\t\t\tthis.getEdgeValidationError(clones[i],\n\t\t\t\t\t\tthis.model.getTerminal(clones[i], true),\n\t\t\t\t\t\tthis.model.getTerminal(clones[i], false)) != null)\n\t\t\t\t{\n\t\t\t\t\tclones[i] = null;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar g = this.model.getGeometry(clones[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (g != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\tvar pstate = this.view.getState(this.model.getParent(cells[i]));\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null && pstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar dx = (keepPosition) ? 0 : pstate.origin.x;\n\t\t\t\t\t\t\tvar dy = (keepPosition) ? 0 : pstate.origin.y;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.model.isEdge(clones[i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Checks if the source is cloned or sets the terminal point\n\t\t\t\t\t\t\t\tvar src = this.model.getTerminal(cells[i], true);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\twhile (src != null && !dict.get(src))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsrc = this.model.getParent(src);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (src == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tg.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[0].x / scale - trans.x,\n\t\t\t\t\t\t\t\t\t\t\tpts[0].y / scale - trans.y), true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Checks if the target is cloned or sets the terminal point\n\t\t\t\t\t\t\t\tvar trg = this.model.getTerminal(cells[i], false);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\twhile (trg != null && !dict.get(trg))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttrg = this.model.getParent(trg);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (trg == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar n = pts.length - 1;\n\t\t\t\t\t\t\t\t\tg.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[n].x / scale - trans.x,\n\t\t\t\t\t\t\t\t\t\t\tpts[n].y / scale - trans.y), false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Translates the control points\n\t\t\t\t\t\t\t\tvar points = g.points;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (points != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfor (var j = 0; j < points.length; j++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpoints[j].x += dx;\n\t\t\t\t\t\t\t\t\t\tpoints[j].y += dy;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tg.translate(dx, dy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tclones = [];\n\t\t}\n\t}\n\t\n\treturn clones;\n};\n\n/**\n * Function: insertVertex\n * \n * Adds a new vertex into the given parent <mxCell> using value as the user\n * object and the given coordinates as the <mxGeometry> of the new vertex.\n * The id and style are used for the respective properties of the new\n * <mxCell>, which is returned.\n *\n * When adding new vertices from a mouse event, one should take into\n * account the offset of the graph container and the scale and translation\n * of the view in order to find the correct unscaled, untranslated\n * coordinates using <mxGraph.getPointForEvent> as follows:\n * \n * (code)\n * var pt = graph.getPointForEvent(evt);\n * var parent = graph.getDefaultParent();\n * graph.insertVertex(parent, null,\n * \t\t\t'Hello, World!', x, y, 220, 30);\n * (end)\n * \n * For adding image cells, the style parameter can be assigned as\n * \n * (code)\n * stylename;image=imageUrl\n * (end)\n * \n * See <mxGraph> for more information on using images.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent of the new vertex.\n * id - Optional string that defines the Id of the new vertex.\n * value - Object to be used as the user object.\n * x - Integer that defines the x coordinate of the vertex.\n * y - Integer that defines the y coordinate of the vertex.\n * width - Integer that defines the width of the vertex.\n * height - Integer that defines the height of the vertex.\n * style - Optional string that defines the cell style.\n * relative - Optional boolean that specifies if the geometry is relative.\n * Default is false.\n */\nmxGraph.prototype.insertVertex = function(parent, id, value,\n\tx, y, width, height, style, relative)\n{\n\tvar vertex = this.createVertex(parent, id, value, x, y, width, height, style, relative);\n\n\treturn this.addCell(vertex, parent);\n};\n\n/**\n * Function: createVertex\n * \n * Hook method that creates the new vertex for <insertVertex>.\n */\nmxGraph.prototype.createVertex = function(parent, id, value,\n\t\tx, y, width, height, style, relative)\n{\n\t// Creates the geometry for the vertex\n\tvar geometry = new mxGeometry(x, y, width, height);\n\tgeometry.relative = (relative != null) ? relative : false;\n\t\n\t// Creates the vertex\n\tvar vertex = new mxCell(value, geometry, style);\n\tvertex.setId(id);\n\tvertex.setVertex(true);\n\tvertex.setConnectable(true);\n\t\n\treturn vertex;\n};\n\t\n/**\n * Function: insertEdge\n * \n * Adds a new edge into the given parent <mxCell> using value as the user\n * object and the given source and target as the terminals of the new edge.\n * The id and style are used for the respective properties of the new\n * <mxCell>, which is returned.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent of the new edge.\n * id - Optional string that defines the Id of the new edge.\n * value - JavaScript object to be used as the user object.\n * source - <mxCell> that defines the source of the edge.\n * target - <mxCell> that defines the target of the edge.\n * style - Optional string that defines the cell style.\n */\nmxGraph.prototype.insertEdge = function(parent, id, value, source, target, style)\n{\n\tvar edge = this.createEdge(parent, id, value, source, target, style);\n\t\n\treturn this.addEdge(edge, parent, source, target);\n};\n\n/**\n * Function: createEdge\n * \n * Hook method that creates the new edge for <insertEdge>. This\n * implementation does not set the source and target of the edge, these\n * are set when the edge is added to the model.\n * \n */\nmxGraph.prototype.createEdge = function(parent, id, value, source, target, style)\n{\n\t// Creates the edge\n\tvar edge = new mxCell(value, new mxGeometry(), style);\n\tedge.setId(id);\n\tedge.setEdge(true);\n\tedge.geometry.relative = true;\n\t\n\treturn edge;\n};\n\n/**\n * Function: addEdge\n * \n * Adds the edge to the parent and connects it to the given source and\n * target terminals. This is a shortcut method. Returns the edge that was\n * added.\n * \n * Parameters:\n * \n * edge - <mxCell> to be inserted into the given parent.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * source - Optional <mxCell> that represents the source terminal.\n * target - Optional <mxCell> that represents the target terminal.\n * index - Optional index to insert the cells at. Default is to append.\n */\nmxGraph.prototype.addEdge = function(edge, parent, source, target, index)\n{\n\treturn this.addCell(edge, parent, index, source, target);\n};\n\n/**\n * Function: addCell\n * \n * Adds the cell to the parent and connects it to the given source and\n * target terminals. This is a shortcut method. Returns the cell that was\n * added.\n * \n * Parameters:\n * \n * cell - <mxCell> to be inserted into the given parent.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * index - Optional index to insert the cells at. Default is to append.\n * source - Optional <mxCell> that represents the source terminal.\n * target - Optional <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.addCell = function(cell, parent, index, source, target)\n{\n\treturn this.addCells([cell], parent, index, source, target)[0];\n};\n\n/**\n * Function: addCells\n * \n * Adds the cells to the parent at the given index, connecting each cell to\n * the optional source and target terminal. The change is carried out using\n * <cellsAdded>. This method fires <mxEvent.ADD_CELLS> while the\n * transaction is in progress. Returns the cells that were added.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be inserted.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * index - Optional index to insert the cells at. Default is to append.\n * source - Optional source <mxCell> for all inserted cells.\n * target - Optional target <mxCell> for all inserted cells.\n */\nmxGraph.prototype.addCells = function(cells, parent, index, source, target)\n{\n\tif (parent == null)\n\t{\n\t\tparent = this.getDefaultParent();\n\t}\n\t\n\tif (index == null)\n\t{\n\t\tindex = this.model.getChildCount(parent);\n\t}\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsAdded(cells, parent, index, source, target, false, true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD_CELLS, 'cells', cells,\n\t\t\t\t'parent', parent, 'index', index, 'source', source, 'target', target));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsAdded\n * \n * Adds the specified cells to the given parent. This method fires\n * <mxEvent.CELLS_ADDED> while the transaction is in progress.\n */\nmxGraph.prototype.cellsAdded = function(cells, parent, index, source, target, absolute, constrain, extend)\n{\n\tif (cells != null && parent != null && index != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar parentState = (absolute) ? this.view.getState(parent) : null;\n\t\t\tvar o1 = (parentState != null) ? parentState.origin : null;\n\t\t\tvar zero = new mxPoint(0, 0);\n\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (cells[i] == null)\n\t\t\t\t{\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar previous = this.model.getParent(cells[i]);\n\t\n\t\t\t\t\t// Keeps the cell at its absolute location\n\t\t\t\t\tif (o1 != null && cells[i] != parent && parent != previous)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar oldState = this.view.getState(previous);\n\t\t\t\t\t\tvar o2 = (oldState != null) ? oldState.origin : zero;\n\t\t\t\t\t\tvar geo = this.model.getGeometry(cells[i]);\n\t\n\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar dx = o2.x - o1.x;\n\t\t\t\t\t\t\tvar dy = o2.y - o1.y;\n\t\n\t\t\t\t\t\t\t// FIXME: Cells should always be inserted first before any other edit\n\t\t\t\t\t\t\t// to avoid forward references in sessions.\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tgeo.translate(dx, dy);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!geo.relative && this.model.isVertex(cells[i]) &&\n\t\t\t\t\t\t\t\t!this.isAllowNegativeCoordinates())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x = Math.max(0, geo.x);\n\t\t\t\t\t\t\t\tgeo.y = Math.max(0, geo.y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Decrements all following indices\n\t\t\t\t\t// if cell is already in parent\n\t\t\t\t\tif (parent == previous && index + i > this.model.getChildCount(parent))\n\t\t\t\t\t{\n\t\t\t\t\t\tindex--;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model.add(parent, cells[i], index + i);\n\t\t\t\t\t\n\t\t\t\t\tif (this.autoSizeCellsOnAdd)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.autoSizeCell(cells[i], true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Extends the parent or constrains the child\n\t\t\t\t\tif ((extend == null || extend) &&\n\t\t\t\t\t\tthis.isExtendParentsOnAdd(cells[i]) && this.isExtendParent(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Additionally constrains the child after extending the parent\n\t\t\t\t\tif (constrain == null || constrain)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Sets the source terminal\n\t\t\t\t\tif (source != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.cellConnected(cells[i], source, true);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Sets the target terminal\n\t\t\t\t\tif (target != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.cellConnected(cells[i], target, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_ADDED, 'cells', cells,\n\t\t\t\t'parent', parent, 'index', index, 'source', source, 'target', target,\n\t\t\t\t'absolute', absolute));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: autoSizeCell\n * \n * Resizes the specified cell to just fit around the its label and/or children\n * \n * Parameters:\n * \n * cell - <mxCells> to be resized.\n * recurse - Optional boolean which specifies if all descendants should be\n * autosized. Default is true.\n */\nmxGraph.prototype.autoSizeCell = function(cell, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\t\n\tif (recurse)\n\t{\n\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.autoSizeCell(this.model.getChildAt(cell, i));\n\t\t}\n\t}\n\n\tif (this.getModel().isVertex(cell) && this.isAutoSizeCell(cell))\n\t{\n\t\tthis.updateCellSize(cell);\n\t}\n};\n\n/**\n * Function: removeCells\n * \n * Removes the given cells from the graph including all connected edges if\n * includeEdges is true. The change is carried out using <cellsRemoved>.\n * This method fires <mxEvent.REMOVE_CELLS> while the transaction is in\n * progress. The removed cells are returned as an array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to remove. If null is specified then the\n * selection cells which are deletable are used.\n * includeEdges - Optional boolean which specifies if all connected edges\n * should be removed as well. Default is true.\n */\nmxGraph.prototype.removeCells = function(cells, includeEdges)\n{\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getDeletableCells(this.getSelectionCells());\n\t}\n\n\t// Adds all edges to the cells\n\tif (includeEdges)\n\t{\n\t\t// FIXME: Remove duplicate cells in result or do not add if\n\t\t// in cells or descendant of cells\n\t\tcells = this.getDeletableCells(this.addAllEdges(cells));\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsRemoved(cells);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_CELLS, \n\t\t\t\t'cells', cells, 'includeEdges', includeEdges));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: cellsRemoved\n * \n * Removes the given cells from the model. This method fires\n * <mxEvent.CELLS_REMOVED> while the transaction is in progress.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to remove.\n */\nmxGraph.prototype.cellsRemoved = function(cells)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar scale = this.view.scale;\n\t\tvar tr = this.view.translate;\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Creates hashtable for faster lookup\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\t// Disconnects edges which are not in cells\n\t\t\t\tvar edges = this.getAllEdges([cells[i]]);\n\t\t\t\t\n\t\t\t\tvar disconnectTerminal = mxUtils.bind(this, function(edge, source)\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.model.getGeometry(edge);\n\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(edge);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Checks which side of the edge is being disconnected\n\t\t\t\t\t\t\tvar tmp = state.getVisibleTerminal(source);\n\t\t\t\t\t\t\tvar connected = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (cells[i] == tmp)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnected = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttmp = this.model.getParent(tmp);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (connected)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar dx = tr.x;\n\t\t\t\t\t\t\t\tvar dy = tr.y;\n\t\t\t\t\t\t\t\tvar parentState = this.view.getState(this.model.getParent(edge));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (parentState != null && this.model.isVertex(parentState.cell))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdx = parentState.x / scale;\n\t\t\t\t\t\t\t\t\tdy = parentState.y / scale;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\t\t\t\t\t\t\t\tvar n = (source) ? 0 : pts.length - 1;\n\t\t\t\t\t\t\t\tgeo.setTerminalPoint(new mxPoint(pts[n].x / scale - dx, pts[n].y / scale - dy), source);\n\t\t\t\t\t\t\t\tthis.model.setTerminal(edges[j], null, source);\n\t\t\t\t\t\t\t\tthis.model.setGeometry(edges[j], geo);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (!dict.get(edges[j]))\n\t\t\t\t\t{\n\t\t\t\t\t\tdisconnectTerminal(edges[j], true);\n\t\t\t\t\t\tdisconnectTerminal(edges[j], false);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.model.remove(cells[i]);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_REMOVED, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: splitEdge\n * \n * Splits the given edge by adding the newEdge between the previous source\n * and the given cell and reconnecting the source of the given edge to the\n * given cell. This method fires <mxEvent.SPLIT_EDGE> while the transaction\n * is in progress. Returns the new edge that was inserted.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be splitted.\n * cells - <mxCells> that represents the cells to insert into the edge.\n * newEdge - <mxCell> that represents the edge to be inserted.\n * dx - Optional integer that specifies the vector to move the cells.\n * dy - Optional integer that specifies the vector to move the cells.\n */\nmxGraph.prototype.splitEdge = function(edge, cells, newEdge, dx, dy)\n{\n\tdx = dx || 0;\n\tdy = dy || 0;\n\n\tvar parent = this.model.getParent(edge);\n\tvar source = this.model.getTerminal(edge, true);\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tif (newEdge == null)\n\t\t{\n\t\t\tnewEdge = this.cloneCell(edge);\n\t\t\t\n\t\t\t// Removes waypoints before/after new cell\n\t\t\tvar state = this.view.getState(edge);\n\t\t\tvar geo = this.getCellGeometry(newEdge);\n\t\t\t\n\t\t\tif (geo != null && geo.points != null && state != null)\n\t\t\t{\n\t\t\t\tvar t = this.view.translate;\n\t\t\t\tvar s = this.view.scale;\n\t\t\t\tvar idx = mxUtils.findNearestSegment(state, (dx + t.x) * s, (dy + t.y) * s);\n\t\t\t\tgeo.points = geo.points.slice(0, idx);\n\t\t\t\t\t\t\t\t\n\t\t\t\tgeo = this.getCellGeometry(edge);\n\t\t\t\t\n\t\t\t\tif (geo != null && geo.points != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\tgeo.points = geo.points.slice(idx);\n\t\t\t\t\tthis.model.setGeometry(edge, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.cellsMoved(cells, dx, dy, false, false);\n\t\tthis.cellsAdded(cells, parent, this.model.getChildCount(parent), null, null,\n\t\t\t\ttrue);\n\t\tthis.cellsAdded([newEdge], parent, this.model.getChildCount(parent),\n\t\t\t\tsource, cells[0], false);\n\t\tthis.cellConnected(edge, cells[0], true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SPLIT_EDGE, 'edge', edge,\n\t\t\t\t'cells', cells, 'newEdge', newEdge, 'dx', dx, 'dy', dy));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn newEdge;\n};\n\n/**\n * Group: Cell visibility\n */\n\n/**\n * Function: toggleCells\n * \n * Sets the visible state of the specified cells and all connected edges\n * if includeEdges is true. The change is carried out using <cellsToggled>.\n * This method fires <mxEvent.TOGGLE_CELLS> while the transaction is in\n * progress. Returns the cells whose visible state was changed.\n * \n * Parameters:\n * \n * show - Boolean that specifies the visible state to be assigned.\n * cells - Array of <mxCells> whose visible state should be changed. If\n * null is specified then the selection cells are used.\n * includeEdges - Optional boolean indicating if the visible state of all\n * connected edges should be changed as well. Default is true.\n */\nmxGraph.prototype.toggleCells = function(show, cells, includeEdges)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\n\t// Adds all connected edges recursively\n\tif (includeEdges)\n\t{\n\t\tcells = this.addAllEdges(cells);\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsToggled(cells, show);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.TOGGLE_CELLS,\n\t\t\t'show', show, 'cells', cells, 'includeEdges', includeEdges));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsToggled\n * \n * Sets the visible state of the specified cells.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose visible state should be changed.\n * show - Boolean that specifies the visible state to be assigned.\n */\nmxGraph.prototype.cellsToggled = function(cells, show)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.model.setVisible(cells[i], show);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Folding\n */\n\n/**\n * Function: foldCells\n * \n * Sets the collapsed state of the specified cells and all descendants\n * if recurse is true. The change is carried out using <cellsFolded>.\n * This method fires <mxEvent.FOLD_CELLS> while the transaction is in\n * progress. Returns the cells whose collapsed state was changed.\n * \n * Parameters:\n * \n * collapsed - Boolean indicating the collapsed state to be assigned.\n * recurse - Optional boolean indicating if the collapsed state of all\n * descendants should be set. Default is false.\n * cells - Array of <mxCells> whose collapsed state should be set. If\n * null is specified then the foldable selection cells are used.\n * checkFoldable - Optional boolean indicating of isCellFoldable should be\n * checked. Default is false.\n * evt - Optional native event that triggered the invocation.\n */\nmxGraph.prototype.foldCells = function(collapse, recurse, cells, checkFoldable, evt)\n{\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getFoldableCells(this.getSelectionCells(), collapse);\n\t}\n\n\tthis.stopEditing(false);\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsFolded(cells, collapse, recurse, checkFoldable);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.FOLD_CELLS,\n\t\t\t'collapse', collapse, 'recurse', recurse, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsFolded\n * \n * Sets the collapsed state of the specified cells. This method fires\n * <mxEvent.CELLS_FOLDED> while the transaction is in progress. Returns the\n * cells whose collapsed state was changed.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose collapsed state should be set.\n * collapsed - Boolean indicating the collapsed state to be assigned.\n * recurse - Boolean indicating if the collapsed state of all descendants\n * should be set.\n * checkFoldable - Optional boolean indicating of isCellFoldable should be\n * checked. Default is false.\n */\nmxGraph.prototype.cellsFolded = function(cells, collapse, recurse, checkFoldable)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif ((!checkFoldable || this.isCellFoldable(cells[i], collapse)) &&\n\t\t\t\t\tcollapse != this.isCellCollapsed(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.model.setCollapsed(cells[i], collapse);\n\t\t\t\t\tthis.swapBounds(cells[i], collapse);\n\n\t\t\t\t\tif (this.isExtendParent(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (recurse)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\t\t\t\tthis.cellsFolded(children, collapse, recurse);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_FOLDED,\n\t\t\t\t'cells', cells, 'collapse', collapse, 'recurse', recurse));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: swapBounds\n * \n * Swaps the alternate and the actual bounds in the geometry of the given\n * cell invoking <updateAlternateBounds> before carrying out the swap.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the bounds should be swapped.\n * willCollapse - Boolean indicating if the cell is going to be collapsed.\n */\nmxGraph.prototype.swapBounds = function(cell, willCollapse)\n{\n\tif (cell != null)\n\t{\n\t\tvar geo = this.model.getGeometry(cell);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\t\n\t\t\tthis.updateAlternateBounds(cell, geo, willCollapse);\n\t\t\tgeo.swap();\n\t\t\t\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateAlternateBounds\n * \n * Updates or sets the alternate bounds in the given geometry for the given\n * cell depending on whether the cell is going to be collapsed. If no\n * alternate bounds are defined in the geometry and\n * <collapseToPreferredSize> is true, then the preferred size is used for\n * the alternate bounds. The top, left corner is always kept at the same\n * location.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the geometry is being udpated.\n * g - <mxGeometry> for which the alternate bounds should be updated.\n * willCollapse - Boolean indicating if the cell is going to be collapsed.\n */\nmxGraph.prototype.updateAlternateBounds = function(cell, geo, willCollapse)\n{\n\tif (cell != null && geo != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\t\tif (geo.alternateBounds == null)\n\t\t{\n\t\t\tvar bounds = geo;\n\t\t\t\n\t\t\tif (this.collapseToPreferredSize)\n\t\t\t{\n\t\t\t\tvar tmp = this.getPreferredSizeForCell(cell);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tbounds = tmp;\n\n\t\t\t\t\tvar startSize = mxUtils.getValue(style, mxConstants.STYLE_STARTSIZE);\n\n\t\t\t\t\tif (startSize > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbounds.height = Math.max(bounds.height, startSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tgeo.alternateBounds = new mxRectangle(0, 0, bounds.width, bounds.height);\n\t\t}\n\t\t\n\t\tif (geo.alternateBounds != null)\n\t\t{\n\t\t\tgeo.alternateBounds.x = geo.x;\n\t\t\tgeo.alternateBounds.y = geo.y;\n\t\t\t\n\t\t\tvar alpha = mxUtils.toRadians(style[mxConstants.STYLE_ROTATION] || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar dx = geo.alternateBounds.getCenterX() - geo.getCenterX();\n\t\t\t\tvar dy = geo.alternateBounds.getCenterY() - geo.getCenterY();\n\t\n\t\t\t\tvar cos = Math.cos(alpha);\n\t\t\t\tvar sin = Math.sin(alpha);\n\t\n\t\t\t\tvar dx2 = cos * dx - sin * dy;\n\t\t\t\tvar dy2 = sin * dx + cos * dy;\n\t\t\t\t\n\t\t\t\tgeo.alternateBounds.x += dx2 - dx;\n\t\t\t\tgeo.alternateBounds.y += dy2 - dy;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: addAllEdges\n * \n * Returns an array with the given cells and all edges that are connected\n * to a cell or one of its descendants.\n */\nmxGraph.prototype.addAllEdges = function(cells)\n{\n\tvar allCells = cells.slice();\n\t\n\treturn mxUtils.removeDuplicates(allCells.concat(this.getAllEdges(cells)));\n};\n\n/**\n * Function: getAllEdges\n * \n * Returns all edges connected to the given cells or its descendants.\n */\nmxGraph.prototype.getAllEdges = function(cells)\n{\n\tvar edges = [];\n\t\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar edgeCount = this.model.getEdgeCount(cells[i]);\n\t\t\t\n\t\t\tfor (var j = 0; j < edgeCount; j++)\n\t\t\t{\n\t\t\t\tedges.push(this.model.getEdgeAt(cells[i], j));\n\t\t\t}\n\n\t\t\t// Recurses\n\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\tedges = edges.concat(this.getAllEdges(children));\n\t\t}\n\t}\n\t\n\treturn edges;\n};\n\n/**\n * Group: Cell sizing\n */\n\n/**\n * Function: updateCellSize\n * \n * Updates the size of the given cell in the model using <cellSizeUpdated>.\n * This method fires <mxEvent.UPDATE_CELL_SIZE> while the transaction is in\n * progress. Returns the cell whose size was updated.\n * \n * Parameters:\n * \n * cell - <mxCell> whose size should be updated.\n */\nmxGraph.prototype.updateCellSize = function(cell, ignoreChildren)\n{\n\tignoreChildren = (ignoreChildren != null) ? ignoreChildren : false;\n\t\n\tthis.model.beginUpdate();\t\t\t\t\n\ttry\n\t{\n\t\tthis.cellSizeUpdated(cell, ignoreChildren);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UPDATE_CELL_SIZE,\n\t\t\t\t'cell', cell, 'ignoreChildren', ignoreChildren));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellSizeUpdated\n * \n * Updates the size of the given cell in the model using\n * <getPreferredSizeForCell> to get the new size.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the size should be changed.\n */\nmxGraph.prototype.cellSizeUpdated = function(cell, ignoreChildren)\n{\n\tif (cell != null)\n\t{\n\t\tthis.model.beginUpdate();\t\t\t\t\n\t\ttry\n\t\t{\n\t\t\tvar size = this.getPreferredSizeForCell(cell);\n\t\t\tvar geo = this.model.getGeometry(cell);\n\t\t\t\n\t\t\tif (size != null && geo != null)\n\t\t\t{\n\t\t\t\tvar collapsed = this.isCellCollapsed(cell);\n\t\t\t\tgeo = geo.clone();\n\n\t\t\t\tif (this.isSwimlane(cell))\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(cell);\n\t\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\t\t\tvar cellStyle = this.model.getStyle(cell);\n\n\t\t\t\t\tif (cellStyle == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = mxUtils.setStyle(cellStyle,\n\t\t\t\t\t\t\t\tmxConstants.STYLE_STARTSIZE, size.height + 8);\n\n\t\t\t\t\t\tif (collapsed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.height = size.height + 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeo.width = size.width;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = mxUtils.setStyle(cellStyle,\n\t\t\t\t\t\t\t\tmxConstants.STYLE_STARTSIZE, size.width + 8);\n\n\t\t\t\t\t\tif (collapsed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.width = size.width + 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeo.height = size.height;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model.setStyle(cell, cellStyle);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tgeo.width = size.width;\n\t\t\t\t\tgeo.height = size.height;\n\t\t\t\t}\n\n\t\t\t\tif (!ignoreChildren && !collapsed)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = this.view.getBounds(this.model.getChildren(cell));\n\n\t\t\t\t\tif (bounds != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tr = this.view.translate;\n\t\t\t\t\t\tvar scale = this.view.scale;\n\n\t\t\t\t\t\tvar width = (bounds.x + bounds.width) / scale - geo.x - tr.x;\n\t\t\t\t\t\tvar height = (bounds.y + bounds.height) / scale - geo.y - tr.y;\n\n\t\t\t\t\t\tgeo.width = Math.max(geo.width, width);\n\t\t\t\t\t\tgeo.height = Math.max(geo.height, height);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.cellsResized([cell], [geo], false);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: getPreferredSizeForCell\n * \n * Returns the preferred width and height of the given <mxCell> as an\n * <mxRectangle>. To implement a minimum width, add a new style eg.\n * minWidth in the vertex and override this method as follows.\n * \n * (code)\n * var graphGetPreferredSizeForCell = graph.getPreferredSizeForCell;\n * graph.getPreferredSizeForCell = function(cell)\n * {\n *   var result = graphGetPreferredSizeForCell.apply(this, arguments);\n *   var style = this.getCellStyle(cell);\n *   \n *   if (style['minWidth'] > 0)\n *   {\n *     result.width = Math.max(style['minWidth'], result.width);\n *   }\n * \n *   return result;\n * };\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> for which the preferred size should be returned.\n */\nmxGraph.prototype.getPreferredSizeForCell = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tvar state = this.view.getState(cell) || this.view.createState(cell);\n\t\tvar style = state.style;\n\n\t\tif (!this.model.isEdge(cell))\n\t\t{\n\t\t\tvar fontSize = style[mxConstants.STYLE_FONTSIZE] || mxConstants.DEFAULT_FONTSIZE;\n\t\t\tvar dx = 0;\n\t\t\tvar dy = 0;\n\t\t\t\n\t\t\t// Adds dimension of image if shape is a label\n\t\t\tif (this.getImage(state) != null || style[mxConstants.STYLE_IMAGE] != null)\n\t\t\t{\n\t\t\t\tif (style[mxConstants.STYLE_SHAPE] == mxConstants.SHAPE_LABEL)\n\t\t\t\t{\n\t\t\t\t\tif (style[mxConstants.STYLE_VERTICAL_ALIGN] == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx += parseFloat(style[mxConstants.STYLE_IMAGE_WIDTH]) || mxLabel.prototype.imageSize;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (style[mxConstants.STYLE_ALIGN] != mxConstants.ALIGN_CENTER)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy += parseFloat(style[mxConstants.STYLE_IMAGE_HEIGHT]) || mxLabel.prototype.imageSize;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Adds spacings\n\t\t\tdx += 2 * (style[mxConstants.STYLE_SPACING] || 0);\n\t\t\tdx += style[mxConstants.STYLE_SPACING_LEFT] || 0;\n\t\t\tdx += style[mxConstants.STYLE_SPACING_RIGHT] || 0;\n\n\t\t\tdy += 2 * (style[mxConstants.STYLE_SPACING] || 0);\n\t\t\tdy += style[mxConstants.STYLE_SPACING_TOP] || 0;\n\t\t\tdy += style[mxConstants.STYLE_SPACING_BOTTOM] || 0;\n\t\t\t\n\t\t\t// Add spacing for collapse/expand icon\n\t\t\t// LATER: Check alignment and use constants\n\t\t\t// for image spacing\n\t\t\tvar image = this.getFoldingImage(state);\n\t\t\t\n\t\t\tif (image != null)\n\t\t\t{\n\t\t\t\tdx += image.width + 8;\n\t\t\t}\n\n\t\t\t// Adds space for label\n\t\t\tvar value = this.cellRenderer.getLabelValue(state);\n\n\t\t\tif (value != null && value.length > 0)\n\t\t\t{\n\t\t\t\tif (!this.isHtmlLabel(state.cell))\n\t\t\t\t{\n\t\t\t\t\tvalue = mxUtils.htmlEntities(value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue = value.replace(/\\n/g, '<br>');\n\t\t\t\t\n\t\t\t\tvar size = mxUtils.getSizeForString(value, fontSize, style[mxConstants.STYLE_FONTFAMILY]);\n\t\t\t\tvar width = size.width + dx;\n\t\t\t\tvar height = size.height + dy;\n\t\t\t\t\n\t\t\t\tif (!mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t{\n\t\t\t\t\tvar tmp = height;\n\t\t\t\t\t\n\t\t\t\t\theight = width;\n\t\t\t\t\twidth = tmp;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif (this.gridEnabled)\n\t\t\t\t{\n\t\t\t\t\twidth = this.snap(width + this.gridSize / 2);\n\t\t\t\t\theight = this.snap(height + this.gridSize / 2);\n\t\t\t\t}\n\n\t\t\t\tresult = new mxRectangle(0, 0, width, height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar gs2 = 4 * this.gridSize;\n\t\t\t\tresult = new mxRectangle(0, 0, gs2, gs2);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: resizeCell\n * \n * Sets the bounds of the given cell using <resizeCells>. Returns the\n * cell which was passed to the function.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be changed.\n * bounds - <mxRectangle> that represents the new bounds.\n */\nmxGraph.prototype.resizeCell = function(cell, bounds, recurse)\n{\n\treturn this.resizeCells([cell], [bounds], recurse)[0];\n};\n\n/**\n * Function: resizeCells\n * \n * Sets the bounds of the given cells and fires a <mxEvent.RESIZE_CELLS>\n * event while the transaction is in progress. Returns the cells which\n * have been passed to the function.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be changed.\n * bounds - Array of <mxRectangles> that represent the new bounds.\n */\nmxGraph.prototype.resizeCells = function(cells, bounds, recurse)\n{\n\trecurse = (recurse != null) ? recurse : this.isRecursiveResize();\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsResized(cells, bounds, recurse);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_CELLS,\n\t\t\t\t'cells', cells, 'bounds', bounds));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsResized\n * \n * Sets the bounds of the given cells and fires a <mxEvent.CELLS_RESIZED>\n * event. If <extendParents> is true, then the parent is extended if a\n * child size is changed so that it overlaps with the parent.\n * \n * The following example shows how to control group resizes to make sure\n * that all child cells stay within the group.\n * \n * (code)\n * graph.addListener(mxEvent.CELLS_RESIZED, function(sender, evt)\n * {\n *   var cells = evt.getProperty('cells');\n *   \n *   if (cells != null)\n *   {\n *     for (var i = 0; i < cells.length; i++)\n *     {\n *       if (graph.getModel().getChildCount(cells[i]) > 0)\n *       {\n *         var geo = graph.getCellGeometry(cells[i]);\n *         \n *         if (geo != null)\n *         {\n *           var children = graph.getChildCells(cells[i], true, true);\n *           var bounds = graph.getBoundingBoxFromGeometry(children, true);\n *           \n *           geo = geo.clone();\n *           geo.width = Math.max(geo.width, bounds.width);\n *           geo.height = Math.max(geo.height, bounds.height);\n *           \n *           graph.getModel().setGeometry(cells[i], geo);\n *         }\n *       }\n *     }\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be changed.\n * bounds - Array of <mxRectangles> that represent the new bounds.\n * recurse - Optional boolean that specifies if the children should be resized.\n */\nmxGraph.prototype.cellsResized = function(cells, bounds, recurse)\n{\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tif (cells != null && bounds != null && cells.length == bounds.length)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.cellResized(cells[i], bounds[i], false, recurse);\n\n\t\t\t\tif (this.isExtendParent(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t}\n\n\t\t\tif (this.resetEdgesOnResize)\n\t\t\t{\n\t\t\t\tthis.resetEdges(cells);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_RESIZED,\n\t\t\t\t\t'cells', cells, 'bounds', bounds));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: cellResized\n * \n * Resizes the parents recursively so that they contain the complete area\n * of the resized child cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be changed.\n * bounds - <mxRectangles> that represent the new bounds.\n * ignoreRelative - Boolean that indicates if relative cells should be ignored.\n * recurse - Optional boolean that specifies if the children should be resized.\n */\nmxGraph.prototype.cellResized = function(cell, bounds, ignoreRelative, recurse)\n{\n\tvar geo = this.model.getGeometry(cell);\n\n\tif (geo != null && (geo.x != bounds.x || geo.y != bounds.y ||\n\t\tgeo.width != bounds.width || geo.height != bounds.height))\n\t{\n\t\tgeo = geo.clone();\n\n\t\tif (!ignoreRelative && geo.relative)\n\t\t{\n\t\t\tvar offset = geo.offset;\n\n\t\t\tif (offset != null)\n\t\t\t{\n\t\t\t\toffset.x += bounds.x - geo.x;\n\t\t\t\toffset.y += bounds.y - geo.y;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeo.x = bounds.x;\n\t\t\tgeo.y = bounds.y;\n\t\t}\n\n\t\tgeo.width = bounds.width;\n\t\tgeo.height = bounds.height;\n\n\t\tif (!geo.relative && this.model.isVertex(cell) && !this.isAllowNegativeCoordinates())\n\t\t{\n\t\t\tgeo.x = Math.max(0, geo.x);\n\t\t\tgeo.y = Math.max(0, geo.y);\n\t\t}\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (recurse)\n\t\t\t{\n\t\t\t\tthis.resizeChildCells(cell, geo);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t\tthis.constrainChildCells(cell);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resizeChildCells\n * \n * Resizes the child cells of the given cell for the given new geometry with\n * respect to the current geometry of the cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n * newGeo - <mxGeometry> that represents the new bounds.\n */\nmxGraph.prototype.resizeChildCells = function(cell, newGeo)\n{\n\tvar geo = this.model.getGeometry(cell);\n\tvar dx = newGeo.width / geo.width;\n\tvar dy = newGeo.height / geo.height;\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.scaleCell(this.model.getChildAt(cell, i), dx, dy, true);\n\t}\n};\n\n/**\n * Function: constrainChildCells\n * \n * Constrains the children of the given cell using <constrainChild>.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.constrainChildCells = function(cell)\n{\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.constrainChild(this.model.getChildAt(cell, i));\n\t}\n};\n\n/**\n * Function: scaleCell\n * \n * Scales the points, position and size of the given cell according to the\n * given vertical and horizontal scaling factors.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be scaled.\n * dx - Horizontal scaling factor.\n * dy - Vertical scaling factor.\n * recurse - Boolean indicating if the child cells should be scaled.\n */\nmxGraph.prototype.scaleCell = function(cell, dx, dy, recurse)\n{\n\tvar geo = this.model.getGeometry(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\n\t\tgeo = geo.clone();\n\t\t\n\t\t// Stores values for restoring based on style\n\t\tvar x = geo.x;\n\t\tvar y = geo.y\n\t\tvar w = geo.width;\n\t\tvar h = geo.height;\n\t\t\n\t\tgeo.scale(dx, dy, style[mxConstants.STYLE_ASPECT] == 'fixed');\n\t\t\n\t\tif (style[mxConstants.STYLE_RESIZE_WIDTH] == '1')\n\t\t{\n\t\t\tgeo.width = w * dx;\n\t\t}\n\t\telse if (style[mxConstants.STYLE_RESIZE_WIDTH] == '0')\n\t\t{\n\t\t\tgeo.width = w;\n\t\t}\n\t\t\n\t\tif (style[mxConstants.STYLE_RESIZE_HEIGHT] == '1')\n\t\t{\n\t\t\tgeo.height = h * dy;\n\t\t}\n\t\telse if (style[mxConstants.STYLE_RESIZE_HEIGHT] == '0')\n\t\t{\n\t\t\tgeo.height = h;\n\t\t}\n\t\t\n\t\tif (!this.isCellMovable(cell))\n\t\t{\n\t\t\tgeo.x = x;\n\t\t\tgeo.y = y;\n\t\t}\n\t\t\n\t\tif (!this.isCellResizable(cell))\n\t\t{\n\t\t\tgeo.width = w;\n\t\t\tgeo.height = h;\n\t\t}\n\n\t\tif (this.model.isVertex(cell))\n\t\t{\n\t\t\tthis.cellResized(cell, geo, true, recurse);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendParent\n * \n * Resizes the parents recursively so that they contain the complete area\n * of the resized child cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.extendParent = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tvar parent = this.model.getParent(cell);\n\t\tvar p = this.getCellGeometry(parent);\n\t\t\n\t\tif (parent != null && p != null && !this.isCellCollapsed(parent))\n\t\t{\n\t\t\tvar geo = this.getCellGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null && !geo.relative &&\n\t\t\t\t(p.width < geo.x + geo.width ||\n\t\t\t\tp.height < geo.y + geo.height))\n\t\t\t{\n\t\t\t\tp = p.clone();\n\t\t\t\t\n\t\t\t\tp.width = Math.max(p.width, geo.x + geo.width);\n\t\t\t\tp.height = Math.max(p.height, geo.y + geo.height);\n\t\t\t\t\n\t\t\t\tthis.cellsResized([parent], [p], false);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Group: Cell moving\n */\n\n/**\n * Function: importCells\n * \n * Clones and inserts the given cells into the graph using the move\n * method and returns the inserted cells. This shortcut is used if\n * cells are inserted via datatransfer.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be imported.\n * dx - Integer that specifies the x-coordinate of the vector. Default is 0.\n * dy - Integer that specifies the y-coordinate of the vector. Default is 0.\n * target - <mxCell> that represents the new parent of the cells.\n * evt - Mouseevent that triggered the invocation.\n * mapping - Optional mapping for existing clones.\n */\nmxGraph.prototype.importCells = function(cells, dx, dy, target, evt, mapping)\n{\t\n\treturn this.moveCells(cells, dx, dy, true, target, evt, mapping);\n};\n\n/**\n * Function: moveCells\n * \n * Moves or clones the specified cells and moves the cells or clones by the\n * given amount, adding them to the optional target cell. The evt is the\n * mouse event as the mouse was released. The change is carried out using\n * <cellsMoved>. This method fires <mxEvent.MOVE_CELLS> while the\n * transaction is in progress. Returns the cells that were moved.\n * \n * Use the following code to move all cells in the graph.\n * \n * (code)\n * graph.moveCells(graph.getChildCells(null, true, true), 10, 10);\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be moved, cloned or added to the target.\n * dx - Integer that specifies the x-coordinate of the vector. Default is 0.\n * dy - Integer that specifies the y-coordinate of the vector. Default is 0.\n * clone - Boolean indicating if the cells should be cloned. Default is false.\n * target - <mxCell> that represents the new parent of the cells.\n * evt - Mouseevent that triggered the invocation.\n * mapping - Optional mapping for existing clones.\n */\nmxGraph.prototype.moveCells = function(cells, dx, dy, clone, target, evt, mapping)\n{\n\tdx = (dx != null) ? dx : 0;\n\tdy = (dy != null) ? dy : 0;\n\tclone = (clone != null) ? clone : false;\n\t\n\tif (cells != null && (dx != 0 || dy != 0 || clone || target != null))\n\t{\n\t\t// Removes descendants with ancestors in cells to avoid multiple moving\n\t\tcells = this.model.getTopmostCells(cells);\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Faster cell lookups to remove relative edge labels with selected\n\t\t\t// terminals to avoid explicit and implicit move at same time\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tvar isSelected = mxUtils.bind(this, function(cell)\n\t\t\t{\n\t\t\t\twhile (cell != null)\n\t\t\t\t{\n\t\t\t\t\tif (dict.get(cell))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcell = this.model.getParent(cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t\n\t\t\t// Removes relative edge labels with selected terminals\n\t\t\tvar checked = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\n\t\t\t\tif ((geo == null || !geo.relative) || !this.model.isEdge(parent) ||\n\t\t\t\t\t(!isSelected(this.model.getTerminal(parent, true)) &&\n\t\t\t\t\t!isSelected(this.model.getTerminal(parent, false))))\n\t\t\t\t{\n\t\t\t\t\tchecked.push(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcells = checked;\n\t\t\t\n\t\t\tif (clone)\n\t\t\t{\n\t\t\t\tcells = this.cloneCells(cells, this.isCloneInvalidEdges(), mapping);\n\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\ttarget = this.getDefaultParent();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// FIXME: Cells should always be inserted first before any other edit\n\t\t\t// to avoid forward references in sessions.\n\t\t\t// Need to disable allowNegativeCoordinates if target not null to\n\t\t\t// allow for temporary negative numbers until cellsAdded is called.\n\t\t\tvar previous = this.isAllowNegativeCoordinates();\n\t\t\t\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tthis.setAllowNegativeCoordinates(true);\n\t\t\t}\n\t\t\t\n\t\t\tthis.cellsMoved(cells, dx, dy, !clone && this.isDisconnectOnMove()\n\t\t\t\t\t&& this.isAllowDanglingEdges(), target == null,\n\t\t\t\t\tthis.isExtendParentsOnMove() && target == null);\n\t\t\t\n\t\t\tthis.setAllowNegativeCoordinates(previous);\n\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tvar index = this.model.getChildCount(target);\n\t\t\t\tthis.cellsAdded(cells, target, index, null, null, true);\n\t\t\t}\n\n\t\t\t// Dispatches a move event\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_CELLS, 'cells', cells,\n\t\t\t\t'dx', dx, 'dy', dy, 'clone', clone, 'target', target, 'event', evt));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsMoved\n * \n * Moves the specified cells by the given vector, disconnecting the cells\n * using disconnectGraph is disconnect is true. This method fires\n * <mxEvent.CELLS_MOVED> while the transaction is in progress.\n */\nmxGraph.prototype.cellsMoved = function(cells, dx, dy, disconnect, constrain, extend)\n{\n\tif (cells != null && (dx != 0 || dy != 0))\n\t{\n\t\textend = (extend != null) ? extend : false;\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (disconnect)\n\t\t\t{\n\t\t\t\tthis.disconnectGraph(cells);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.translateCell(cells[i], dx, dy);\n\t\t\t\t\n\t\t\t\tif (extend && this.isExtendParent(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t}\n\t\t\t\telse if (constrain)\n\t\t\t\t{\n\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.resetEdgesOnMove)\n\t\t\t{\n\t\t\t\tthis.resetEdges(cells);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_MOVED,\n\t\t\t\t'cells', cells, 'dx', dx, 'dy', dy, 'disconnect', disconnect));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: translateCell\n * \n * Translates the geometry of the given cell and stores the new,\n * translated geometry in the model as an atomic change.\n */\nmxGraph.prototype.translateCell = function(cell, dx, dy)\n{\n\tvar geo = this.model.getGeometry(cell);\n\n\tif (geo != null)\n\t{\n\t\tdx = parseFloat(dx);\n\t\tdy = parseFloat(dy);\n\t\tgeo = geo.clone();\n\t\tgeo.translate(dx, dy);\n\n\t\tif (!geo.relative && this.model.isVertex(cell) && !this.isAllowNegativeCoordinates())\n\t\t{\n\t\t\tgeo.x = Math.max(0, parseFloat(geo.x));\n\t\t\tgeo.y = Math.max(0, parseFloat(geo.y));\n\t\t}\n\t\t\n\t\tif (geo.relative && !this.model.isEdge(cell))\n\t\t{\n\t\t\tvar parent = this.model.getParent(cell);\n\t\t\tvar angle = 0;\n\t\t\t\n\t\t\tif (this.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(parent);\n\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(parent);\n\t\t\t\t\n\t\t\t\tangle = mxUtils.getValue(style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t}\n\t\t\t\n\t\t\tif (angle != 0)\n\t\t\t{\n\t\t\t\tvar rad = mxUtils.toRadians(-angle);\n\t\t\t\tvar cos = Math.cos(rad);\n\t\t\t\tvar sin = Math.sin(rad);\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(dx, dy), cos, sin, new mxPoint(0, 0));\n\t\t\t\tdx = pt.x;\n\t\t\t\tdy = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (geo.offset == null)\n\t\t\t{\n\t\t\t\tgeo.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeo.offset.x = parseFloat(geo.offset.x) + dx;\n\t\t\t\tgeo.offset.y = parseFloat(geo.offset.y) + dy;\n\t\t\t}\n\t\t}\n\n\t\tthis.model.setGeometry(cell, geo);\n\t}\n};\n\n/**\n * Function: getCellContainmentArea\n * \n * Returns the <mxRectangle> inside which a cell is to be kept.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the area should be returned.\n */\nmxGraph.prototype.getCellContainmentArea = function(cell)\n{\n\tif (cell != null && !this.model.isEdge(cell))\n\t{\n\t\tvar parent = this.model.getParent(cell);\n\t\t\n\t\tif (parent != null && parent != this.getDefaultParent())\n\t\t{\n\t\t\tvar g = this.model.getGeometry(parent);\n\t\t\t\n\t\t\tif (g != null)\n\t\t\t{\n\t\t\t\tvar x = 0;\n\t\t\t\tvar y = 0;\n\t\t\t\tvar w = g.width;\n\t\t\t\tvar h = g.height;\n\t\t\t\t\n\t\t\t\tif (this.isSwimlane(parent))\n\t\t\t\t{\n\t\t\t\t\tvar size = this.getStartSize(parent);\n\t\t\t\t\t\n\t\t\t\t\tvar state = this.view.getState(parent);\n\t\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(parent);\n\t\t\t\t\tvar dir = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\t\t\t\t\tvar flipH = mxUtils.getValue(style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tvar flipV = mxUtils.getValue(style, mxConstants.STYLE_FLIPV, 0) == 1;\n\t\t\t\t\t\n\t\t\t\t\tif (dir == mxConstants.DIRECTION_SOUTH || dir == mxConstants.DIRECTION_NORTH)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = size.width;\n\t\t\t\t\t\tsize.width = size.height;\n\t\t\t\t\t\tsize.height = tmp;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif ((dir == mxConstants.DIRECTION_EAST && !flipV) || (dir == mxConstants.DIRECTION_NORTH && !flipH) ||\n\t\t\t\t\t\t(dir == mxConstants.DIRECTION_WEST && flipV) || (dir == mxConstants.DIRECTION_SOUTH && flipH))\n\t\t\t\t\t{\n\t\t\t\t\t\tx = size.width;\n\t\t\t\t\t\ty = size.height;\n\t\t\t\t\t}\n\n\t\t\t\t\tw -= size.width;\n\t\t\t\t\th -= size.height;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxRectangle(x, y, w, h);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getMaximumGraphBounds\n * \n * Returns the bounds inside which the diagram should be kept as an\n * <mxRectangle>.\n */\nmxGraph.prototype.getMaximumGraphBounds = function()\n{\n\treturn this.maximumGraphBounds;\n};\n\n/**\n * Function: constrainChild\n * \n * Keeps the given cell inside the bounds returned by\n * <getCellContainmentArea> for its parent, according to the rules defined by\n * <getOverlap> and <isConstrainChild>. This modifies the cell's geometry\n * in-place and does not clone it.\n * \n * Parameters:\n * \n * cells - <mxCell> which should be constrained.\n * sizeFirst - Specifies if the size should be changed first. Default is true.\n */\nmxGraph.prototype.constrainChild = function(cell, sizeFirst)\n{\n\tsizeFirst = (sizeFirst != null) ? sizeFirst : true;\n\t\n\tif (cell != null)\n\t{\n\t\tvar geo = this.getCellGeometry(cell);\n\t\t\n\t\tif (geo != null && (this.isConstrainRelativeChildren() || !geo.relative))\n\t\t{\n\t\t\tvar parent = this.model.getParent(cell);\n\t\t\tvar pgeo = this.getCellGeometry(parent);\n\t\t\tvar max = this.getMaximumGraphBounds();\n\t\t\t\n\t\t\t// Finds parent offset\n\t\t\tif (max != null)\n\t\t\t{\n\t\t\t\tvar off = this.getBoundingBoxFromGeometry([parent], false);\n\t\t\t\t\n\t\t\t\tif (off != null)\n\t\t\t\t{\n\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\t\n\t\t\t\t\tmax.x -= off.x;\n\t\t\t\t\tmax.y -= off.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (this.isConstrainChild(cell))\n\t\t\t{\n\t\t\t\tvar tmp = this.getCellContainmentArea(cell);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tvar overlap = this.getOverlap(cell);\n\t\n\t\t\t\t\tif (overlap > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = mxRectangle.fromRectangle(tmp);\n\t\t\t\t\t\t\n\t\t\t\t\t\ttmp.x -= tmp.width * overlap;\n\t\t\t\t\t\ttmp.y -= tmp.height * overlap;\n\t\t\t\t\t\ttmp.width += 2 * tmp.width * overlap;\n\t\t\t\t\t\ttmp.height += 2 * tmp.height * overlap;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Find the intersection between max and tmp\n\t\t\t\t\tif (max == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tmax = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\t\tmax.intersect(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (max != null)\n\t\t\t{\n\t\t\t\tvar cells = [cell];\n\t\t\t\t\n\t\t\t\tif (!this.isCellCollapsed(cell))\n\t\t\t\t{\n\t\t\t\t\tvar desc = this.model.getDescendants(cell);\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < desc.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.isCellVisible(desc[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcells.push(desc[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bbox = this.getBoundingBoxFromGeometry(cells, false);\n\t\t\t\t\n\t\t\t\tif (bbox != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\t// Cumulative horizontal movement\n\t\t\t\t\tvar dx = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (geo.width > max.width)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx = geo.width - max.width;\n\t\t\t\t\t\tgeo.width -= dx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.x + bbox.width > max.x + max.width)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx -= bbox.x + bbox.width - max.x - max.width - dx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Cumulative vertical movement\n\t\t\t\t\tvar dy = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (geo.height > max.height)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy = geo.height - max.height;\n\t\t\t\t\t\tgeo.height -= dy;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.y + bbox.height > max.y + max.height)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy -= bbox.y + bbox.height - max.y - max.height - dy;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.x < max.x)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx -= bbox.x - max.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.y < max.y)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy -= bbox.y - max.y;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (dx != 0 || dy != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (geo.relative)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Relative geometries are moved via absolute offset\n\t\t\t\t\t\t\tif (geo.offset == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.offset = new mxPoint();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tgeo.offset.x += dx;\n\t\t\t\t\t\t\tgeo.offset.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x += dx;\n\t\t\t\t\t\t\tgeo.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.model.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: resetEdges\n * \n * Resets the control points of the edges that are connected to the given\n * cells if not both ends of the edge are in the given cells array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> for which the connected edges should be\n * reset.\n */\nmxGraph.prototype.resetEdges = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\t// Prepares faster cells lookup\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t}\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar edges = this.model.getEdges(cells[i]);\n\t\t\t\t\n\t\t\t\tif (edges != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(edges[j]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[j], true);\n\t\t\t\t\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[j], false);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if one of the terminals is not in the given array\n\t\t\t\t\t\tif (!dict.get(source) || !dict.get(target))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.resetEdge(edges[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.resetEdges(this.model.getChildren(cells[i]));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resetEdge\n * \n * Resets the control points of the given edge.\n * \n * Parameters:\n * \n * edge - <mxCell> whose points should be reset.\n */\nmxGraph.prototype.resetEdge = function(edge)\n{\n\tvar geo = this.model.getGeometry(edge);\n\t\n\t// Resets the control points\n\tif (geo != null && geo.points != null && geo.points.length > 0)\n\t{\n\t\tgeo = geo.clone();\n\t\tgeo.points = [];\n\t\tthis.model.setGeometry(edge, geo);\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Group: Cell connecting and connection constraints\n */\n\n/**\n * Function: getOutlineConstraint\n * \n * Returns the constraint used to connect to the outline of the given state.\n */\nmxGraph.prototype.getOutlineConstraint = function(point, terminalState, me)\n{\n\tif (terminalState.shape != null)\n\t{\n\t\tvar bounds = this.view.getPerimeterBounds(terminalState);\n\t\tvar direction = terminalState.style[mxConstants.STYLE_DIRECTION];\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tbounds.x += bounds.width / 2 - bounds.height / 2;\n\t\t\tbounds.y += bounds.height / 2 - bounds.width / 2;\n\t\t\tvar tmp = bounds.width;\n\t\t\tbounds.width = bounds.height;\n\t\t\tbounds.height = tmp;\n\t\t}\n\t\n\t\tvar alpha = mxUtils.toRadians(terminalState.shape.getShapeRotation());\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(-alpha);\n\t\t\tvar sin = Math.sin(-alpha);\n\t\n\t\t\tvar ct = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\t\t\tpoint = mxUtils.getRotatedPoint(point, cos, sin, ct);\n\t\t}\n\n\t\tvar sx = 1;\n\t\tvar sy = 1;\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\t// LATER: Add flipping support for image shapes\n\t\tif (this.getModel().isVertex(terminalState.cell))\n\t\t{\n\t\t\tvar flipH = terminalState.style[mxConstants.STYLE_FLIPH];\n\t\t\tvar flipV = terminalState.style[mxConstants.STYLE_FLIPV];\n\t\t\t\n\t\t\t// Legacy support for stencilFlipH/V\n\t\t\tif (terminalState.shape != null && terminalState.shape.stencil != null)\n\t\t\t{\n\t\t\t\tflipH = mxUtils.getValue(terminalState.style, 'stencilFlipH', 0) == 1 || flipH;\n\t\t\t\tflipV = mxUtils.getValue(terminalState.style, 'stencilFlipV', 0) == 1 || flipV;\n\t\t\t}\n\t\t\t\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tvar tmp = flipH;\n\t\t\t\tflipH = flipV;\n\t\t\t\tflipV = tmp;\n\t\t\t}\n\t\t\t\n\t\t\tif (flipH)\n\t\t\t{\n\t\t\t\tsx = -1;\n\t\t\t\tdx = -bounds.width;\n\t\t\t}\n\t\t\t\n\t\t\tif (flipV)\n\t\t\t{\n\t\t\t\tsy = -1;\n\t\t\t\tdy = -bounds.height ;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpoint = new mxPoint((point.x - bounds.x) * sx - dx + bounds.x, (point.y - bounds.y) * sy - dy + bounds.y);\n\t\t\n\t\tvar x = (bounds.width == 0) ? 0 : Math.round((point.x - bounds.x) * 1000 / bounds.width) / 1000;\n\t\tvar y = (bounds.height == 0) ? 0 : Math.round((point.y - bounds.y) * 1000 / bounds.height) / 1000;\n\t\t\n\t\treturn new mxConnectionConstraint(new mxPoint(x, y), false);\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getAllConnectionConstraints\n * \n * Returns an array of all <mxConnectionConstraints> for the given terminal. If\n * the shape of the given terminal is a <mxStencilShape> then the constraints\n * of the corresponding <mxStencil> are returned.\n * \n * Parameters:\n * \n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean that specifies if the terminal is the source or target.\n */\nmxGraph.prototype.getAllConnectionConstraints = function(terminal, source)\n{\n\tif (terminal != null && terminal.shape != null && terminal.shape.stencil != null)\n\t{\n\t\treturn terminal.shape.stencil.constraints;\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: getConnectionConstraint\n * \n * Returns an <mxConnectionConstraint> that describes the given connection\n * point. This result can then be passed to <getConnectionPoint>.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean indicating if the terminal is the source or target.\n */\nmxGraph.prototype.getConnectionConstraint = function(edge, terminal, source)\n{\n\tvar point = null;\n\tvar x = edge.style[(source) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X];\n\n\tif (x != null)\n\t{\n\t\tvar y = edge.style[(source) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y];\n\t\t\n\t\tif (y != null)\n\t\t{\n\t\t\tpoint = new mxPoint(parseFloat(x), parseFloat(y));\n\t\t}\n\t}\n\t\n\tvar perimeter = false;\n\t\n\tif (point != null)\n\t{\n\t\tperimeter = mxUtils.getValue(edge.style, (source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, true);\n\t}\n\t\n\treturn new mxConnectionConstraint(point, perimeter);\n};\n\n/**\n * Function: setConnectionConstraint\n * \n * Sets the <mxConnectionConstraint> that describes the given connection point.\n * If no constraint is given then nothing is changed. To remove an existing\n * constraint from the given edge, use an empty constraint instead.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge.\n * terminal - <mxCell> that represents the terminal.\n * source - Boolean indicating if the terminal is the source or target.\n * constraint - Optional <mxConnectionConstraint> to be used for this\n * connection.\n */\nmxGraph.prototype.setConnectionConstraint = function(edge, terminal, source, constraint)\n{\n\tif (constraint != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\t\n\t\ttry\n\t\t{\n\t\t\tif (constraint == null || constraint.point == null)\n\t\t\t{\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_X :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_X, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_Y :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_Y, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, null, [edge]);\n\t\t\t}\n\t\t\telse if (constraint.point != null)\n\t\t\t{\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_X :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_X, constraint.point.x, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_Y :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_Y, constraint.point.y, [edge]);\n\t\t\t\t\n\t\t\t\t// Only writes 0 since 1 is default\n\t\t\t\tif (!constraint.perimeter)\n\t\t\t\t{\n\t\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, '0', [edge]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, null, [edge]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: getConnectionPoint\n *\n * Returns the nearest point in the list of absolute points or the center\n * of the opposite terminal.\n * \n * Parameters:\n * \n * vertex - <mxCellState> that represents the vertex.\n * constraint - <mxConnectionConstraint> that represents the connection point\n * constraint as returned by <getConnectionConstraint>.\n */\nmxGraph.prototype.getConnectionPoint = function(vertex, constraint)\n{\n\tvar point = null;\n\t\n\tif (vertex != null && constraint.point != null)\n\t{\n\t\tvar bounds = this.view.getPerimeterBounds(vertex);\n        var cx = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\t\tvar direction = vertex.style[mxConstants.STYLE_DIRECTION];\n\t\tvar r1 = 0;\n\t\t\n\t\t// Bounds need to be rotated by 90 degrees for further computation\n\t\tif (direction != null && mxUtils.getValue(vertex.style,\n\t\t\tmxConstants.STYLE_ANCHOR_POINT_DIRECTION, 1) == 1)\n\t\t{\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t\t{\n\t\t\t\tr1 += 270;\n\t\t\t}\n\t\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t\t{\n\t\t\t\tr1 += 180;\n\t\t\t}\n\t\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tr1 += 90;\n\t\t\t}\n\n\t\t\t// Bounds need to be rotated by 90 degrees for further computation\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\t\tdirection == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tbounds.rotate90();\n\t\t\t}\n\t\t}\n\n\t\tpoint = new mxPoint(bounds.x + constraint.point.x * bounds.width,\n\t\t\t\tbounds.y + constraint.point.y * bounds.height);\n\t\t\n\t\t// Rotation for direction before projection on perimeter\n\t\tvar r2 = vertex.style[mxConstants.STYLE_ROTATION] || 0;\n\t\t\n\t\tif (constraint.perimeter)\n\t\t{\n\t\t\tif (r1 != 0)\n\t\t\t{\n\t\t\t\t// Only 90 degrees steps possible here so no trig needed\n\t\t\t\tvar cos = 0;\n\t\t\t\tvar sin = 0;\n\t\t\t\t\n\t\t\t\tif (r1 == 90)\n\t\t\t\t{\n\t\t\t\t\tsin = 1;\n\t\t\t\t}\n\t\t\t\telse if (r1 == 180)\n\t\t\t\t{\n\t\t\t\t\tcos = -1;\n\t\t\t\t}\n\t\t\t\telse if (r1 == 270)\n\t\t\t\t{\n\t\t\t\t\tsin = -1;\n\t\t\t\t}\n\t\t\t\t\n\t\t        point = mxUtils.getRotatedPoint(point, cos, sin, cx);\n\t\t\t}\n\t\n\t\t\tpoint = this.view.getPerimeterPoint(vertex, point, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr2 += r1;\n\t\t\t\n\t\t\tif (this.getModel().isVertex(vertex.cell))\n\t\t\t{\n\t\t\t\tvar flipH = vertex.style[mxConstants.STYLE_FLIPH] == 1;\n\t\t\t\tvar flipV = vertex.style[mxConstants.STYLE_FLIPV] == 1;\n\t\t\t\t\n\t\t\t\t// Legacy support for stencilFlipH/V\n\t\t\t\tif (vertex.shape != null && vertex.shape.stencil != null)\n\t\t\t\t{\n\t\t\t\t\tflipH = (mxUtils.getValue(vertex.style, 'stencilFlipH', 0) == 1) || flipH;\n\t\t\t\t\tflipV = (mxUtils.getValue(vertex.style, 'stencilFlipV', 0) == 1) || flipV;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (flipH)\n\t\t\t\t{\n\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (flipV)\n\t\t\t\t{\n\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Generic rotation after projection on perimeter\n\t\tif (r2 != 0 && point != null)\n\t\t{\n\t        var rad = mxUtils.toRadians(r2);\n\t        var cos = Math.cos(rad);\n\t        var sin = Math.sin(rad);\n\t        \n\t        point = mxUtils.getRotatedPoint(point, cos, sin, cx);\n\t\t}\n\t}\n\t\n\tif (point != null)\n\t{\n\t\tpoint.x = Math.round(point.x);\n\t\tpoint.y = Math.round(point.y);\n\t}\n\n\treturn point;\n};\n\n/**\n * Function: connectCell\n * \n * Connects the specified end of the given edge to the given terminal\n * using <cellConnected> and fires <mxEvent.CONNECT_CELL> while the\n * transaction is in progress. Returns the updated edge.\n * \n * Parameters:\n * \n * edge - <mxCell> whose terminal should be updated.\n * terminal - <mxCell> that represents the new terminal to be used.\n * source - Boolean indicating if the new terminal is the source or target.\n * constraint - Optional <mxConnectionConstraint> to be used for this\n * connection.\n */\nmxGraph.prototype.connectCell = function(edge, terminal, source, constraint)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar previous = this.model.getTerminal(edge, source);\n\t\tthis.cellConnected(edge, terminal, source, constraint);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.CONNECT_CELL,\n\t\t\t'edge', edge, 'terminal', terminal, 'source', source,\n\t\t\t'previous', previous));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: cellConnected\n * \n * Sets the new terminal for the given edge and resets the edge points if\n * <resetEdgesOnConnect> is true. This method fires\n * <mxEvent.CELL_CONNECTED> while the transaction is in progress.\n * \n * Parameters:\n * \n * edge - <mxCell> whose terminal should be updated.\n * terminal - <mxCell> that represents the new terminal to be used.\n * source - Boolean indicating if the new terminal is the source or target.\n * constraint - <mxConnectionConstraint> to be used for this connection.\n */\nmxGraph.prototype.cellConnected = function(edge, terminal, source, constraint)\n{\n\tif (edge != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar previous = this.model.getTerminal(edge, source);\n\n\t\t\t// Updates the constraint\n\t\t\tthis.setConnectionConstraint(edge, terminal, source, constraint);\n\t\t\t\n\t\t\t// Checks if the new terminal is a port, uses the ID of the port in the\n\t\t\t// style and the parent of the port as the actual terminal of the edge.\n\t\t\tif (this.isPortsEnabled())\n\t\t\t{\n\t\t\t\tvar id = null;\n\t\n\t\t\t\tif (this.isPort(terminal))\n\t\t\t\t{\n\t\t\t\t\tid = terminal.getId();\n\t\t\t\t\tterminal = this.getTerminalForPort(terminal, source);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Sets or resets all previous information for connecting to a child port\n\t\t\t\tvar key = (source) ? mxConstants.STYLE_SOURCE_PORT :\n\t\t\t\t\tmxConstants.STYLE_TARGET_PORT;\n\t\t\t\tthis.setCellStyles(key, id, [edge]);\n\t\t\t}\n\t\t\t\n\t\t\tthis.model.setTerminal(edge, terminal, source);\n\t\t\t\n\t\t\tif (this.resetEdgesOnConnect)\n\t\t\t{\n\t\t\t\tthis.resetEdge(edge);\n\t\t\t}\n\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELL_CONNECTED,\n\t\t\t\t'edge', edge, 'terminal', terminal, 'source', source,\n\t\t\t\t'previous', previous));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: disconnectGraph\n * \n * Disconnects the given edges from the terminals which are not in the\n * given array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be disconnected.\n */\nmxGraph.prototype.disconnectGraph = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\t\t\t\t\t\t\t\n\t\t\tvar scale = this.view.scale;\n\t\t\tvar tr = this.view.translate;\n\t\t\t\n\t\t\t// Fast lookup for finding cells in array\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (this.model.isEdge(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.model.getGeometry(cells[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\tvar pstate = this.view.getState(\n\t\t\t\t\t\t\tthis.model.getParent(cells[i]));\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null &&\n\t\t\t\t\t\t\tpstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar dx = -pstate.origin.x;\n\t\t\t\t\t\t\tvar dy = -pstate.origin.y;\n\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\n\t\t\t\t\t\t\tvar src = this.model.getTerminal(cells[i], true);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (src != null && this.isCellDisconnectable(cells[i], src, true))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twhile (src != null && !dict.get(src))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsrc = this.model.getParent(src);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (src == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[0].x / scale - tr.x + dx,\n\t\t\t\t\t\t\t\t\t\t\tpts[0].y / scale - tr.y + dy), true);\n\t\t\t\t\t\t\t\t\tthis.model.setTerminal(cells[i], null, true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar trg = this.model.getTerminal(cells[i], false);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (trg != null && this.isCellDisconnectable(cells[i], trg, false))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twhile (trg != null && !dict.get(trg))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttrg = this.model.getParent(trg);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (trg == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar n = pts.length - 1;\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[n].x / scale - tr.x + dx,\n\t\t\t\t\t\t\t\t\t\t\tpts[n].y / scale - tr.y + dy), false);\n\t\t\t\t\t\t\t\t\tthis.model.setTerminal(cells[i], null, false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Drilldown\n */\n\n/**\n * Function: getCurrentRoot\n * \n * Returns the current root of the displayed cell hierarchy. This is a\n * shortcut to <mxGraphView.currentRoot> in <view>.\n */\nmxGraph.prototype.getCurrentRoot = function()\n{\n\treturn this.view.currentRoot;\n};\n \n/**\n * Function: getTranslateForRoot\n * \n * Returns the translation to be used if the given cell is the root cell as\n * an <mxPoint>. This implementation returns null.\n * \n * Example:\n * \n * To keep the children at their absolute position while stepping into groups,\n * this function can be overridden as follows.\n * \n * (code)\n * var offset = new mxPoint(0, 0);\n * \n * while (cell != null)\n * {\n *   var geo = this.model.getGeometry(cell);\n * \n *   if (geo != null)\n *   {\n *     offset.x -= geo.x;\n *     offset.y -= geo.y;\n *   }\n * \n *   cell = this.model.getParent(cell);\n * }\n * \n * return offset;\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the root.\n */\nmxGraph.prototype.getTranslateForRoot = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, the cell returned by getTerminalForPort should be used as the\n * terminal and the port should be referenced by the ID in either the\n * mxConstants.STYLE_SOURCE_PORT or the or the\n * mxConstants.STYLE_TARGET_PORT. Note that a port should not be movable.\n * This implementation always returns false.\n * \n * A typical implementation is the following:\n * \n * (code)\n * graph.isPort = function(cell)\n * {\n *   var geo = this.getCellGeometry(cell);\n *   \n *   return (geo != null) ? geo.relative : false;\n * };\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxGraph.prototype.isPort = function(cell)\n{\n\treturn false;\n};\n\n/**\n * Function: getTerminalForPort\n * \n * Returns the terminal to be used for a given port. This implementation\n * always returns the parent cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n * source - If the cell is the source or target port.\n */\nmxGraph.prototype.getTerminalForPort = function(cell, source)\n{\n\treturn this.model.getParent(cell);\n};\n\n/**\n * Function: getChildOffsetForCell\n * \n * Returns the offset to be used for the cells inside the given cell. The\n * root and layer cells may be identified using <mxGraphModel.isRoot> and\n * <mxGraphModel.isLayer>. For all other current roots, the\n * <mxGraphView.currentRoot> field points to the respective cell, so that\n * the following holds: cell == this.view.currentRoot. This implementation\n * returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose offset should be returned.\n */\nmxGraph.prototype.getChildOffsetForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: enterGroup\n * \n * Uses the given cell as the root of the displayed cell hierarchy. If no\n * cell is specified then the selection cell is used. The cell is only used\n * if <isValidRoot> returns true.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be used as the new root. Default is the\n * selection cell.\n */\nmxGraph.prototype.enterGroup = function(cell)\n{\n\tcell = cell || this.getSelectionCell();\n\t\n\tif (cell != null && this.isValidRoot(cell))\n\t{\n\t\tthis.view.setCurrentRoot(cell);\n\t\tthis.clearSelection();\n\t}\n};\n\n/**\n * Function: exitGroup\n * \n * Changes the current root to the next valid root in the displayed cell\n * hierarchy.\n */\nmxGraph.prototype.exitGroup = function()\n{\n\tvar root = this.model.getRoot();\n\tvar current = this.getCurrentRoot();\n\t\n\tif (current != null)\n\t{\n\t\tvar next = this.model.getParent(current);\n\t\t\n\t\t// Finds the next valid root in the hierarchy\n\t\twhile (next != root && !this.isValidRoot(next) &&\n\t\t\t\tthis.model.getParent(next) != root)\n\t\t{\n\t\t\tnext = this.model.getParent(next);\n\t\t}\n\t\t\n\t\t// Clears the current root if the new root is\n\t\t// the model's root or one of the layers.\n\t\tif (next == root || this.model.getParent(next) == root)\n\t\t{\n\t\t\tthis.view.setCurrentRoot(null);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.view.setCurrentRoot(next);\n\t\t}\n\t\t\n\t\tvar state = this.view.getState(current);\n\t\t\n\t\t// Selects the previous root in the graph\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.setSelectionCell(current);\n\t\t}\n\t}\n};\n\n/**\n * Function: home\n * \n * Uses the root of the model as the root of the displayed cell hierarchy\n * and selects the previous root.\n */\nmxGraph.prototype.home = function()\n{\n\tvar current = this.getCurrentRoot();\n\t\n\tif (current != null)\n\t{\n\t\tthis.view.setCurrentRoot(null);\n\t\tvar state = this.view.getState(current);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.setSelectionCell(current);\n\t\t}\n\t}\n};\n\n/**\n * Function: isValidRoot\n * \n * Returns true if the given cell is a valid root for the cell display\n * hierarchy. This implementation returns true for all non-null values.\n * \n * Parameters:\n * \n * cell - <mxCell> which should be checked as a possible root.\n */\nmxGraph.prototype.isValidRoot = function(cell)\n{\n\treturn (cell != null);\n};\n\n/**\n * Group: Graph display\n */\n \n/**\n * Function: getGraphBounds\n * \n * Returns the bounds of the visible graph. Shortcut to\n * <mxGraphView.getGraphBounds>. See also: <getBoundingBoxFromGeometry>.\n */\n mxGraph.prototype.getGraphBounds = function()\n {\n \treturn this.view.getGraphBounds();\n };\n\n/**\n * Function: getCellBounds\n * \n * Returns the scaled, translated bounds for the given cell. See\n * <mxGraphView.getBounds> for arrays.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be returned.\n * includeEdge - Optional boolean that specifies if the bounds of\n * the connected edges should be included. Default is false.\n * includeDescendants - Optional boolean that specifies if the bounds\n * of all descendants should be included. Default is false.\n */\nmxGraph.prototype.getCellBounds = function(cell, includeEdges, includeDescendants)\n{\n\tvar cells = [cell];\n\t\n\t// Includes all connected edges\n\tif (includeEdges)\n\t{\n\t\tcells = cells.concat(this.model.getEdges(cell));\n\t}\n\t\n\tvar result = this.view.getBounds(cells);\n\t\n\t// Recursively includes the bounds of the children\n\tif (includeDescendants)\n\t{\n\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar tmp = this.getCellBounds(this.model.getChildAt(cell, i),\n\t\t\t\tincludeEdges, true);\n\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\tresult.add(tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = tmp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getBoundingBoxFromGeometry\n * \n * Returns the bounding box for the geometries of the vertices in the\n * given array of cells. This can be used to find the graph bounds during\n * a layout operation (ie. before the last endUpdate) as follows:\n * \n * (code)\n * var cells = graph.getChildCells(graph.getDefaultParent(), true, true);\n * var bounds = graph.getBoundingBoxFromGeometry(cells, true);\n * (end)\n * \n * This can then be used to move cells to the origin:\n * \n * (code)\n * if (bounds.x < 0 || bounds.y < 0)\n * {\n *   graph.moveCells(cells, -Math.min(bounds.x, 0), -Math.min(bounds.y, 0))\n * }\n * (end)\n * \n * Or to translate the graph view:\n * \n * (code)\n * if (bounds.x < 0 || bounds.y < 0)\n * {\n *   graph.view.setTranslate(-Math.min(bounds.x, 0), -Math.min(bounds.y, 0));\n * }\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be returned.\n * includeEdges - Specifies if edge bounds should be included by computing\n * the bounding box for all points in geometry. Default is false.\n */\nmxGraph.prototype.getBoundingBoxFromGeometry = function(cells, includeEdges)\n{\n\tincludeEdges = (includeEdges != null) ? includeEdges : false;\n\tvar result = null;\n\t\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (includeEdges || this.model.isVertex(cells[i]))\n\t\t\t{\n\t\t\t\t// Computes the bounding box for the points in the geometry\n\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\t\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = null;\n\t\t\t\t\t\n\t\t\t\t\tif (this.model.isEdge(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar addPoint = function(pt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pt != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (tmp == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp = new mxRectangle(pt.x, pt.y, 0, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp.add(new mxRectangle(pt.x, pt.y, 0, 0));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.model.getTerminal(cells[i], true) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddPoint(geo.getTerminalPoint(true));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.model.getTerminal(cells[i], false) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddPoint(geo.getTerminalPoint(false));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tvar pts = geo.points;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pts != null && pts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar tmp = new mxRectangle(pts[0].x, pts[0].y, 0, 0);\n\n\t\t\t\t\t\t\tfor (var j = 1; j < pts.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taddPoint(pts[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbbox = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (geo.relative)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (this.model.isVertex(parent) && parent != this.view.currentRoot)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar tmp = this.getBoundingBoxFromGeometry([parent], false);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbbox = new mxRectangle(geo.x * tmp.width, geo.y * tmp.height, geo.width, geo.height);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (mxUtils.indexOf(cells, parent) >= 0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tbbox.x += tmp.x;\n\t\t\t\t\t\t\t\t\t\tbbox.y += tmp.y;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbbox = mxRectangle.fromRectangle(geo);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.model.isVertex(parent) && mxUtils.indexOf(cells, parent) >= 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar tmp = this.getBoundingBoxFromGeometry([parent], false);\n\n\t\t\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbbox.x += tmp.x;\n\t\t\t\t\t\t\t\t\tbbox.y += tmp.y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bbox != null && geo.offset != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbbox.x += geo.offset.x;\n\t\t\t\t\t\t\tbbox.y += geo.offset.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (result == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: refresh\n * \n * Clears all cell states or the states for the hierarchy starting at the\n * given cell and validates the graph. This fires a refresh event as the\n * last step.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> for which the cell states should be cleared.\n */\nmxGraph.prototype.refresh = function(cell)\n{\n\tthis.view.clear(cell, cell == null);\n\tthis.view.validate();\n\tthis.sizeDidChange();\n\tthis.fireEvent(new mxEventObject(mxEvent.REFRESH));\n};\n\n/**\n * Function: snap\n * \n * Snaps the given numeric value to the grid if <gridEnabled> is true.\n * \n * Parameters:\n * \n * value - Numeric value to be snapped to the grid.\n */\nmxGraph.prototype.snap = function(value)\n{\n\tif (this.gridEnabled)\n\t{\n\t\tvalue = Math.round(value / this.gridSize ) * this.gridSize;\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: panGraph\n * \n * Shifts the graph display by the given amount. This is used to preview\n * panning operations, use <mxGraphView.setTranslate> to set a persistent\n * translation of the view. Fires <mxEvent.PAN>.\n * \n * Parameters:\n * \n * dx - Amount to shift the graph along the x-axis.\n * dy - Amount to shift the graph along the y-axis.\n */\nmxGraph.prototype.panGraph = function(dx, dy)\n{\n\tif (this.useScrollbarsForPanning && mxUtils.hasScrollbars(this.container))\n\t{\n\t\tthis.container.scrollLeft = -dx;\n\t\tthis.container.scrollTop = -dy;\n\t}\n\telse\n\t{\n\t\tvar canvas = this.view.getCanvas();\n\t\t\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\t// Puts everything inside the container in a DIV so that it\n\t\t\t// can be moved without changing the state of the container\n\t\t\tif (dx == 0 && dy == 0)\n\t\t\t{\n\t\t\t\t// Workaround for ignored removeAttribute on SVG element in IE9 standards\n\t\t\t\tif (mxClient.IS_IE)\n\t\t\t\t{\n\t\t\t\t\tcanvas.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcanvas.removeAttribute('transform');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.shiftPreview1 != null)\n\t\t\t\t{\n\t\t\t\t\tvar child = this.shiftPreview1.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tthis.container.appendChild(child);\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shiftPreview1.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shiftPreview1.parentNode.removeChild(this.shiftPreview1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview1 = null;\n\t\t\t\t\t\n\t\t\t\t\tthis.container.appendChild(canvas.parentNode);\n\t\t\t\t\t\n\t\t\t\t\tchild = this.shiftPreview2.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tthis.container.appendChild(child);\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shiftPreview2.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shiftPreview2.parentNode.removeChild(this.shiftPreview2);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview2 = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t\t\n\t\t\t\tif (this.shiftPreview1 == null)\n\t\t\t\t{\n\t\t\t\t\t// Needs two divs for stuff before and after the SVG element\n\t\t\t\t\tthis.shiftPreview1 = document.createElement('div');\n\t\t\t\t\tthis.shiftPreview1.style.position = 'absolute';\n\t\t\t\t\tthis.shiftPreview1.style.overflow = 'visible';\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview2 = document.createElement('div');\n\t\t\t\t\tthis.shiftPreview2.style.position = 'absolute';\n\t\t\t\t\tthis.shiftPreview2.style.overflow = 'visible';\n\n\t\t\t\t\tvar current = this.shiftPreview1;\n\t\t\t\t\tvar child = this.container.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// SVG element is moved via transform attribute\n\t\t\t\t\t\tif (child != canvas.parentNode)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent.appendChild(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent = this.shiftPreview2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Inserts elements only if not empty\n\t\t\t\t\tif (this.shiftPreview1.firstChild != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.container.insertBefore(this.shiftPreview1, canvas.parentNode);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.shiftPreview2.firstChild != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.container.appendChild(this.shiftPreview2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.shiftPreview1.style.left = dx + 'px';\n\t\t\t\tthis.shiftPreview1.style.top = dy + 'px';\n\t\t\t\tthis.shiftPreview2.style.left = dx + 'px';\n\t\t\t\tthis.shiftPreview2.style.top = dy + 'px';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcanvas.style.left = dx + 'px';\n\t\t\tcanvas.style.top = dy + 'px';\n\t\t}\n\t\t\n\t\tthis.panDx = dx;\n\t\tthis.panDy = dy;\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN));\n\t}\n};\n\n/**\n * Function: zoomIn\n * \n * Zooms into the graph by <zoomFactor>.\n */\nmxGraph.prototype.zoomIn = function()\n{\n\tthis.zoom(this.zoomFactor);\n};\n\n/**\n * Function: zoomOut\n * \n * Zooms out of the graph by <zoomFactor>.\n */\nmxGraph.prototype.zoomOut = function()\n{\n\tthis.zoom(1 / this.zoomFactor);\n};\n\n/**\n * Function: zoomActual\n * \n * Resets the zoom and panning in the view.\n */\nmxGraph.prototype.zoomActual = function()\n{\n\tif (this.view.scale == 1)\n\t{\n\t\tthis.view.setTranslate(0, 0);\n\t}\n\telse\n\t{\n\t\tthis.view.translate.x = 0;\n\t\tthis.view.translate.y = 0;\n\n\t\tthis.view.setScale(1);\n\t}\n};\n\n/**\n * Function: zoomTo\n * \n * Zooms the graph to the given scale with an optional boolean center\n * argument, which is passd to <zoom>.\n */\nmxGraph.prototype.zoomTo = function(scale, center)\n{\n\tthis.zoom(scale / this.view.scale, center);\n};\n\n/**\n * Function: center\n * \n * Centers the graph in the container.\n * \n * Parameters:\n * \n * horizontal - Optional boolean that specifies if the graph should be centered\n * horizontally. Default is true.\n * vertical - Optional boolean that specifies if the graph should be centered\n * vertically. Default is true.\n * cx - Optional float that specifies the horizontal center. Default is 0.5.\n * cy - Optional float that specifies the vertical center. Default is 0.5.\n */\nmxGraph.prototype.center = function(horizontal, vertical, cx, cy)\n{\n\thorizontal = (horizontal != null) ? horizontal : true;\n\tvertical = (vertical != null) ? vertical : true;\n\tcx = (cx != null) ? cx : 0.5;\n\tcy = (cy != null) ? cy : 0.5;\n\t\n\tvar hasScrollbars = mxUtils.hasScrollbars(this.container);\n\tvar cw = this.container.clientWidth;\n\tvar ch = this.container.clientHeight;\n\tvar bounds = this.getGraphBounds();\n\n\tvar t = this.view.translate;\n\tvar s = this.view.scale;\n\n\tvar dx = (horizontal) ? cw - bounds.width : 0;\n\tvar dy = (vertical) ? ch - bounds.height : 0;\n\t\n\tif (!hasScrollbars)\n\t{\n\t\tthis.view.setTranslate((horizontal) ? Math.floor(t.x - bounds.x * s + dx * cx / s) : t.x,\n\t\t\t(vertical) ? Math.floor(t.y - bounds.y * s + dy * cy / s) : t.y);\n\t}\n\telse\n\t{\n\t\tbounds.x -= t.x;\n\t\tbounds.y -= t.y;\n\t\n\t\tvar sw = this.container.scrollWidth;\n\t\tvar sh = this.container.scrollHeight;\n\t\t\n\t\tif (sw > cw)\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t\t\n\t\tif (sh > ch)\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\n\t\tthis.view.setTranslate(Math.floor(dx / 2 - bounds.x), Math.floor(dy / 2 - bounds.y));\n\t\tthis.container.scrollLeft = (sw - cw) / 2;\n\t\tthis.container.scrollTop = (sh - ch) / 2;\n\t}\n};\n\n/**\n * Function: zoom\n * \n * Zooms the graph using the given factor. Center is an optional boolean\n * argument that keeps the graph scrolled to the center. If the center argument\n * is omitted, then <centerZoom> will be used as its value.\n */\nmxGraph.prototype.zoom = function(factor, center)\n{\n\tcenter = (center != null) ? center : this.centerZoom;\n\tvar scale = Math.round(this.view.scale * factor * 100) / 100;\n\tvar state = this.view.getState(this.getSelectionCell());\n\tfactor = scale / this.view.scale;\n\t\n\tif (this.keepSelectionVisibleOnZoom && state != null)\n\t{\n\t\tvar rect = new mxRectangle(state.x * factor, state.y * factor,\n\t\t\tstate.width * factor, state.height * factor);\n\t\t\n\t\t// Refreshes the display only once if a scroll is carried out\n\t\tthis.view.scale = scale;\n\t\t\n\t\tif (!this.scrollRectToVisible(rect))\n\t\t{\n\t\t\tthis.view.revalidate();\n\t\t\t\n\t\t\t// Forces an event to be fired but does not revalidate again\n\t\t\tthis.view.setScale(scale);\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar hasScrollbars = mxUtils.hasScrollbars(this.container);\n\t\t\n\t\tif (center && !hasScrollbars)\n\t\t{\n\t\t\tvar dx = this.container.offsetWidth;\n\t\t\tvar dy = this.container.offsetHeight;\n\t\t\t\n\t\t\tif (factor > 1)\n\t\t\t{\n\t\t\t\tvar f = (factor - 1) / (scale * 2);\n\t\t\t\tdx *= -f;\n\t\t\t\tdy *= -f;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar f = (1 / factor - 1) / (this.view.scale * 2);\n\t\t\t\tdx *= f;\n\t\t\t\tdy *= f;\n\t\t\t}\n\n\t\t\tthis.view.scaleAndTranslate(scale,\n\t\t\t\tthis.view.translate.x + dx,\n\t\t\t\tthis.view.translate.y + dy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Allows for changes of translate and scrollbars during setscale\n\t\t\tvar tx = this.view.translate.x;\n\t\t\tvar ty = this.view.translate.y;\n\t\t\tvar sl = this.container.scrollLeft;\n\t\t\tvar st = this.container.scrollTop;\n\t\t\t\n\t\t\tthis.view.setScale(scale);\n\t\t\t\n\t\t\tif (hasScrollbars)\n\t\t\t{\n\t\t\t\tvar dx = 0;\n\t\t\t\tvar dy = 0;\n\t\t\t\t\n\t\t\t\tif (center)\n\t\t\t\t{\n\t\t\t\t\tdx = this.container.offsetWidth * (factor - 1) / 2;\n\t\t\t\t\tdy = this.container.offsetHeight * (factor - 1) / 2;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.container.scrollLeft = (this.view.translate.x - tx) * this.view.scale + Math.round(sl * factor + dx);\n\t\t\t\tthis.container.scrollTop = (this.view.translate.y - ty) * this.view.scale + Math.round(st * factor + dy);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: zoomToRect\n * \n * Zooms the graph to the specified rectangle. If the rectangle does not have same aspect\n * ratio as the display container, it is increased in the smaller relative dimension only\n * until the aspect match. The original rectangle is centralised within this expanded one.\n * \n * Note that the input rectangular must be un-scaled and un-translated.\n * \n * Parameters:\n * \n * rect - The un-scaled and un-translated rectangluar region that should be just visible \n * after the operation\n */\nmxGraph.prototype.zoomToRect = function(rect)\n{\n\tvar scaleX = this.container.clientWidth / rect.width;\n\tvar scaleY = this.container.clientHeight / rect.height;\n\tvar aspectFactor = scaleX / scaleY;\n\n\t// Remove any overlap of the rect outside the client area\n\trect.x = Math.max(0, rect.x);\n\trect.y = Math.max(0, rect.y);\n\tvar rectRight = Math.min(this.container.scrollWidth, rect.x + rect.width);\n\tvar rectBottom = Math.min(this.container.scrollHeight, rect.y + rect.height);\n\trect.width = rectRight - rect.x;\n\trect.height = rectBottom - rect.y;\n\n\t// The selection area has to be increased to the same aspect\n\t// ratio as the container, centred around the centre point of the \n\t// original rect passed in.\n\tif (aspectFactor < 1.0)\n\t{\n\t\t// Height needs increasing\n\t\tvar newHeight = rect.height / aspectFactor;\n\t\tvar deltaHeightBuffer = (newHeight - rect.height) / 2.0;\n\t\trect.height = newHeight;\n\t\t\n\t\t// Assign up to half the buffer to the upper part of the rect, not crossing 0\n\t\t// put the rest on the bottom\n\t\tvar upperBuffer = Math.min(rect.y , deltaHeightBuffer);\n\t\trect.y = rect.y - upperBuffer;\n\t\t\n\t\t// Check if the bottom has extended too far\n\t\trectBottom = Math.min(this.container.scrollHeight, rect.y + rect.height);\n\t\trect.height = rectBottom - rect.y;\n\t}\n\telse\n\t{\n\t\t// Width needs increasing\n\t\tvar newWidth = rect.width * aspectFactor;\n\t\tvar deltaWidthBuffer = (newWidth - rect.width) / 2.0;\n\t\trect.width = newWidth;\n\t\t\n\t\t// Assign up to half the buffer to the upper part of the rect, not crossing 0\n\t\t// put the rest on the bottom\n\t\tvar leftBuffer = Math.min(rect.x , deltaWidthBuffer);\n\t\trect.x = rect.x - leftBuffer;\n\t\t\n\t\t// Check if the right hand side has extended too far\n\t\trectRight = Math.min(this.container.scrollWidth, rect.x + rect.width);\n\t\trect.width = rectRight - rect.x;\n\t}\n\n\tvar scale = this.container.clientWidth / rect.width;\n\tvar newScale = this.view.scale * scale;\n\n\tif (!mxUtils.hasScrollbars(this.container))\n\t{\n\t\tthis.view.scaleAndTranslate(newScale, (this.view.translate.x - rect.x / this.view.scale), (this.view.translate.y - rect.y / this.view.scale));\n\t}\n\telse\n\t{\n\t\tthis.view.setScale(newScale);\n\t\tthis.container.scrollLeft = Math.round(rect.x * scale);\n\t\tthis.container.scrollTop = Math.round(rect.y * scale);\n\t}\n};\n\n/**\n * Function: scrollCellToVisible\n * \n * Pans the graph so that it shows the given cell. Optionally the cell may\n * be centered in the container.\n * \n * To center a given graph if the <container> has no scrollbars, use the following code.\n * \n * [code]\n * var bounds = graph.getGraphBounds();\n * graph.view.setTranslate(-bounds.x - (bounds.width - container.clientWidth) / 2,\n * \t\t\t\t\t\t   -bounds.y - (bounds.height - container.clientHeight) / 2);\n * [/code]\n * \n * Parameters:\n * \n * cell - <mxCell> to be made visible.\n * center - Optional boolean flag. Default is false.\n */\nmxGraph.prototype.scrollCellToVisible = function(cell, center)\n{\n\tvar x = -this.view.translate.x;\n\tvar y = -this.view.translate.y;\n\n\tvar state = this.view.getState(cell);\n\n\tif (state != null)\n\t{\n\t\tvar bounds = new mxRectangle(x + state.x, y + state.y, state.width,\n\t\t\tstate.height);\n\n\t\tif (center && this.container != null)\n\t\t{\n\t\t\tvar w = this.container.clientWidth;\n\t\t\tvar h = this.container.clientHeight;\n\n\t\t\tbounds.x = bounds.getCenterX() - w / 2;\n\t\t\tbounds.width = w;\n\t\t\tbounds.y = bounds.getCenterY() - h / 2;\n\t\t\tbounds.height = h;\n\t\t}\n\t\t\n\t\tvar tr = new mxPoint(this.view.translate.x, this.view.translate.y);\n\n\t\tif (this.scrollRectToVisible(bounds))\n\t\t{\n\t\t\t// Triggers an update via the view's event source\n\t\t\tvar tr2 = new mxPoint(this.view.translate.x, this.view.translate.y);\n\t\t\tthis.view.translate.x = tr.x;\n\t\t\tthis.view.translate.y = tr.y;\n\t\t\tthis.view.setTranslate(tr2.x, tr2.y);\n\t\t}\n\t}\n};\n\n/**\n * Function: scrollRectToVisible\n * \n * Pans the graph so that it shows the given rectangle.\n * \n * Parameters:\n * \n * rect - <mxRectangle> to be made visible.\n */\nmxGraph.prototype.scrollRectToVisible = function(rect)\n{\n\tvar isChanged = false;\n\t\n\tif (rect != null)\n\t{\n\t\tvar w = this.container.offsetWidth;\n\t\tvar h = this.container.offsetHeight;\n\n        var widthLimit = Math.min(w, rect.width);\n        var heightLimit = Math.min(h, rect.height);\n\n\t\tif (mxUtils.hasScrollbars(this.container))\n\t\t{\n\t\t\tvar c = this.container;\n\t\t\trect.x += this.view.translate.x;\n\t\t\trect.y += this.view.translate.y;\n\t\t\tvar dx = c.scrollLeft - rect.x;\n\t\t\tvar ddx = Math.max(dx - c.scrollLeft, 0);\n\n\t\t\tif (dx > 0)\n\t\t\t{\n\t\t\t\tc.scrollLeft -= dx + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdx = rect.x + widthLimit - c.scrollLeft - c.clientWidth;\n\n\t\t\t\tif (dx > 0)\n\t\t\t\t{\n\t\t\t\t\tc.scrollLeft += dx + 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dy = c.scrollTop - rect.y;\n\t\t\tvar ddy = Math.max(0, dy - c.scrollTop);\n\n\t\t\tif (dy > 0)\n\t\t\t{\n\t\t\t\tc.scrollTop -= dy + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdy = rect.y + heightLimit - c.scrollTop - c.clientHeight;\n\n\t\t\t\tif (dy > 0)\n\t\t\t\t{\n\t\t\t\t\tc.scrollTop += dy + 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.useScrollbarsForPanning && (ddx != 0 || ddy != 0))\n\t\t\t{\n\t\t\t\tthis.view.setTranslate(ddx, ddy);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar x = -this.view.translate.x;\n\t\t\tvar y = -this.view.translate.y;\n\n\t\t\tvar s = this.view.scale;\n\n\t\t\tif (rect.x + widthLimit > x + w)\n\t\t\t{\n\t\t\t\tthis.view.translate.x -= (rect.x + widthLimit - w - x) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.y + heightLimit > y + h)\n\t\t\t{\n\t\t\t\tthis.view.translate.y -= (rect.y + heightLimit - h - y) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.x < x)\n\t\t\t{\n\t\t\t\tthis.view.translate.x += (x - rect.x) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.y  < y)\n\t\t\t{\n\t\t\t\tthis.view.translate.y += (y - rect.y) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (isChanged)\n\t\t\t{\n\t\t\t\tthis.view.refresh();\n\t\t\t\t\n\t\t\t\t// Repaints selection marker (ticket 18)\n\t\t\t\tif (this.selectionCellsHandler != null)\n\t\t\t\t{\n\t\t\t\t\tthis.selectionCellsHandler.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn isChanged;\n};\n\n/**\n * Function: getCellGeometry\n * \n * Returns the <mxGeometry> for the given cell. This implementation uses\n * <mxGraphModel.getGeometry>. Subclasses can override this to implement\n * specific geometries for cells in only one graph, that is, it can return\n * geometries that depend on the current state of the view.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be returned.\n */\nmxGraph.prototype.getCellGeometry = function(cell)\n{\n\treturn this.model.getGeometry(cell);\n};\n\n/**\n * Function: isCellVisible\n * \n * Returns true if the given cell is visible in this graph. This\n * implementation uses <mxGraphModel.isVisible>. Subclassers can override\n * this to implement specific visibility for cells in only one graph, that\n * is, without affecting the visible state of the cell.\n * \n * When using dynamic filter expressions for cell visibility, then the\n * graph should be revalidated after the filter expression has changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose visible state should be returned.\n */\nmxGraph.prototype.isCellVisible = function(cell)\n{\n\treturn this.model.isVisible(cell);\n};\n\n/**\n * Function: isCellCollapsed\n * \n * Returns true if the given cell is collapsed in this graph. This\n * implementation uses <mxGraphModel.isCollapsed>. Subclassers can override\n * this to implement specific collapsed states for cells in only one graph,\n * that is, without affecting the collapsed state of the cell.\n * \n * When using dynamic filter expressions for the collapsed state, then the\n * graph should be revalidated after the filter expression has changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be returned.\n */\nmxGraph.prototype.isCellCollapsed = function(cell)\n{\n\treturn this.model.isCollapsed(cell);\n};\n\n/**\n * Function: isCellConnectable\n * \n * Returns true if the given cell is connectable in this graph. This\n * implementation uses <mxGraphModel.isConnectable>. Subclassers can override\n * this to implement specific connectable states for cells in only one graph,\n * that is, without affecting the connectable state of the cell in the model.\n * \n * Parameters:\n * \n * cell - <mxCell> whose connectable state should be returned.\n */\nmxGraph.prototype.isCellConnectable = function(cell)\n{\n\treturn this.model.isConnectable(cell);\n};\n\n/**\n * Function: isOrthogonal\n * \n * Returns true if perimeter points should be computed such that the\n * resulting edge has only horizontal or vertical segments.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n */\nmxGraph.prototype.isOrthogonal = function(edge)\n{\n\tvar orthogonal = edge.style[mxConstants.STYLE_ORTHOGONAL];\n\t\n\tif (orthogonal != null)\n\t{\n\t\treturn orthogonal;\n\t}\n\t\n\tvar tmp = this.view.getEdgeStyle(edge);\n\t\n\treturn tmp == mxEdgeStyle.SegmentConnector ||\n\t\ttmp == mxEdgeStyle.ElbowConnector ||\n\t\ttmp == mxEdgeStyle.SideToSide ||\n\t\ttmp == mxEdgeStyle.TopToBottom ||\n\t\ttmp == mxEdgeStyle.EntityRelation ||\n\t\ttmp == mxEdgeStyle.OrthConnector;\n};\n\n/**\n * Function: isLoop\n * \n * Returns true if the given cell state is a loop.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents a potential loop.\n */\nmxGraph.prototype.isLoop = function(state)\n{\n\tvar src = state.getVisibleTerminalState(true);\n\tvar trg = state.getVisibleTerminalState(false);\n\t\n\treturn (src != null && src == trg);\n};\n\n/**\n * Function: isCloneEvent\n * \n * Returns true if the given event is a clone event. This implementation\n * returns true if control is pressed.\n */\nmxGraph.prototype.isCloneEvent = function(evt)\n{\n\treturn mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: isTransparentClickEvent\n * \n * Hook for implementing click-through behaviour on selected cells. If this\n * returns true the cell behind the selected cell will be selected. This\n * implementation returns false;\n */\nmxGraph.prototype.isTransparentClickEvent = function(evt)\n{\n\treturn false;\n};\n\n/**\n * Function: isToggleEvent\n * \n * Returns true if the given event is a toggle event. This implementation\n * returns true if the meta key (Cmd) is pressed on Macs or if control is\n * pressed on any other platform.\n */\nmxGraph.prototype.isToggleEvent = function(evt)\n{\n\treturn (mxClient.IS_MAC) ? mxEvent.isMetaDown(evt) : mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: isGridEnabledEvent\n * \n * Returns true if the given mouse event should be aligned to the grid.\n */\nmxGraph.prototype.isGridEnabledEvent = function(evt)\n{\n\treturn evt != null && !mxEvent.isAltDown(evt);\n};\n\n/**\n * Function: isConstrainedEvent\n * \n * Returns true if the given mouse event should be aligned to the grid.\n */\nmxGraph.prototype.isConstrainedEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: isIgnoreTerminalEvent\n * \n * Returns true if the given mouse event should not allow any connections to be\n * made. This implementation returns false.\n */\nmxGraph.prototype.isIgnoreTerminalEvent = function(evt)\n{\n\treturn false;\n};\n\n/**\n * Group: Validation\n */\n\n/**\n * Function: validationAlert\n * \n * Displays the given validation error in a dialog. This implementation uses\n * mxUtils.alert.\n */\nmxGraph.prototype.validationAlert = function(message)\n{\n\tmxUtils.alert(message);\n};\n\n/**\n * Function: isEdgeValid\n * \n * Checks if the return value of <getEdgeValidationError> for the given\n * arguments is null.\n *  \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.isEdgeValid = function(edge, source, target)\n{\n\treturn this.getEdgeValidationError(edge, source, target) == null;\n};\n\n/**\n * Function: getEdgeValidationError\n * \n * Returns the validation error message to be displayed when inserting or\n * changing an edges' connectivity. A return value of null means the edge\n * is valid, a return value of '' means it's not valid, but do not display\n * an error message. Any other (non-empty) string returned from this method\n * is displayed as an error message when trying to connect an edge to a\n * source and target. This implementation uses the <multiplicities>, and\n * checks <multigraph>, <allowDanglingEdges> and <allowLoops> to generate\n * validation errors.\n * \n * For extending this method with specific checks for source/target cells,\n * the method can be extended as follows. Returning an empty string means\n * the edge is invalid with no error message, a non-null string specifies\n * the error message, and null means the edge is valid.\n * \n * (code)\n * graph.getEdgeValidationError = function(edge, source, target)\n * {\n *   if (source != null && target != null &&\n *     this.model.getValue(source) != null &&\n *     this.model.getValue(target) != null)\n *   {\n *     if (target is not valid for source)\n *     {\n *       return 'Invalid Target';\n *     }\n *   }\n *   \n *   // \"Supercall\"\n *   return mxGraph.prototype.getEdgeValidationError.apply(this, arguments);\n * }\n * (end)\n *  \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.getEdgeValidationError = function(edge, source, target)\n{\n\tif (edge != null && !this.isAllowDanglingEdges() && (source == null || target == null))\n\t{\n\t\treturn '';\n\t}\n\t\n\tif (edge != null && this.model.getTerminal(edge, true) == null &&\n\t\tthis.model.getTerminal(edge, false) == null)\t\n\t{\n\t\treturn null;\n\t}\n\t\n\t// Checks if we're dealing with a loop\n\tif (!this.allowLoops && source == target && source != null)\n\t{\n\t\treturn '';\n\t}\n\t\n\t// Checks if the connection is generally allowed\n\tif (!this.isValidConnection(source, target))\n\t{\n\t\treturn '';\n\t}\n\n\tif (source != null && target != null)\n\t{\n\t\tvar error = '';\n\n\t\t// Checks if the cells are already connected\n\t\t// and adds an error message if required\t\t\t\n\t\tif (!this.multigraph)\n\t\t{\n\t\t\tvar tmp = this.model.getEdgesBetween(source, target, true);\n\t\t\t\n\t\t\t// Checks if the source and target are not connected by another edge\n\t\t\tif (tmp.length > 1 || (tmp.length == 1 && tmp[0] != edge))\n\t\t\t{\n\t\t\t\terror += (mxResources.get(this.alreadyConnectedResource) ||\n\t\t\t\t\tthis.alreadyConnectedResource)+'\\n';\n\t\t\t}\n\t\t}\n\n\t\t// Gets the number of outgoing edges from the source\n\t\t// and the number of incoming edges from the target\n\t\t// without counting the edge being currently changed.\n\t\tvar sourceOut = this.model.getDirectedEdgeCount(source, true, edge);\n\t\tvar targetIn = this.model.getDirectedEdgeCount(target, false, edge);\n\n\t\t// Checks the change against each multiplicity rule\n\t\tif (this.multiplicities != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.multiplicities.length; i++)\n\t\t\t{\n\t\t\t\tvar err = this.multiplicities[i].check(this, edge, source,\n\t\t\t\t\ttarget, sourceOut, targetIn);\n\t\t\t\t\n\t\t\t\tif (err != null)\n\t\t\t\t{\n\t\t\t\t\terror += err;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Validates the source and target terminals independently\n\t\tvar err = this.validateEdge(edge, source, target);\n\t\t\n\t\tif (err != null)\n\t\t{\n\t\t\terror += err;\n\t\t}\n\t\t\n\t\treturn (error.length > 0) ? error : null;\n\t}\n\t\n\treturn (this.allowDanglingEdges) ? null : '';\n};\n\n/**\n * Function: validateEdge\n * \n * Hook method for subclassers to return an error message for the given\n * edge and terminals. This implementation returns null.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.validateEdge = function(edge, source, target)\n{\n\treturn null;\n};\n\n/**\n * Function: validateGraph\n * \n * Validates the graph by validating each descendant of the given cell or\n * the root of the model. Context is an object that contains the validation\n * state for the complete validation run. The validation errors are\n * attached to their cells using <setCellWarning>. Returns null in the case of\n * successful validation or an array of strings (warnings) in the case of\n * failed validations.\n * \n * Paramters:\n * \n * cell - Optional <mxCell> to start the validation recursion. Default is\n * the graph root.\n * context - Object that represents the global validation state.\n */\nmxGraph.prototype.validateGraph = function(cell, context)\n{\n\tcell = (cell != null) ? cell : this.model.getRoot();\n\tcontext = (context != null) ? context : new Object();\n\t\n\tvar isValid = true;\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar tmp = this.model.getChildAt(cell, i);\n\t\tvar ctx = context;\n\t\t\n\t\tif (this.isValidRoot(tmp))\n\t\t{\n\t\t\tctx = new Object();\n\t\t}\n\t\t\n\t\tvar warn = this.validateGraph(tmp, ctx);\n\t\t\n\t\tif (warn != null)\n\t\t{\n\t\t\tthis.setCellWarning(tmp, warn.replace(/\\n/g, '<br>'));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setCellWarning(tmp, null);\n\t\t}\n\t\t\n\t\tisValid = isValid && warn == null;\n\t}\n\t\n\tvar warning = '';\n\t\n\t// Adds error for invalid children if collapsed (children invisible)\n\tif (this.isCellCollapsed(cell) && !isValid)\n\t{\n\t\twarning += (mxResources.get(this.containsValidationErrorsResource) ||\n\t\t\tthis.containsValidationErrorsResource) + '\\n';\n\t}\n\t\n\t// Checks edges and cells using the defined multiplicities\n\tif (this.model.isEdge(cell))\n\t{\n\t\twarning += this.getEdgeValidationError(cell,\n\t\tthis.model.getTerminal(cell, true),\n\t\tthis.model.getTerminal(cell, false)) || '';\n\t}\n\telse\n\t{\n\t\twarning += this.getCellValidationError(cell) || '';\n\t}\n\t\n\t// Checks custom validation rules\n\tvar err = this.validateCell(cell, context);\n\t\n\tif (err != null)\n\t{\n\t\twarning += err;\n\t}\n\t\n\t// Updates the display with the warning icons\n\t// before any potential alerts are displayed.\n\t// LATER: Move this into addCellOverlay. Redraw\n\t// should check if overlay was added or removed.\n\tif (this.model.getParent(cell) == null)\n\t{\n\t\tthis.view.validate();\n\t}\n\n\treturn (warning.length > 0 || !isValid) ? warning : null;\n};\n\n/**\n * Function: getCellValidationError\n * \n * Checks all <multiplicities> that cannot be enforced while the graph is\n * being modified, namely, all multiplicities that require a minimum of\n * 1 edge.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the multiplicities should be checked.\n */\nmxGraph.prototype.getCellValidationError = function(cell)\n{\n\tvar outCount = this.model.getDirectedEdgeCount(cell, true);\n\tvar inCount = this.model.getDirectedEdgeCount(cell, false);\n\tvar value = this.model.getValue(cell);\n\tvar error = '';\n\n\tif (this.multiplicities != null)\n\t{\n\t\tfor (var i = 0; i < this.multiplicities.length; i++)\n\t\t{\n\t\t\tvar rule = this.multiplicities[i];\n\t\t\t\n\t\t\tif (rule.source && mxUtils.isNode(value, rule.type,\n\t\t\t\trule.attr, rule.value) && (outCount > rule.max ||\n\t\t\t\toutCount < rule.min))\n\t\t\t{\n\t\t\t\terror += rule.countError + '\\n';\n\t\t\t}\n\t\t\telse if (!rule.source && mxUtils.isNode(value, rule.type,\n\t\t\t\t\trule.attr, rule.value) && (inCount > rule.max ||\n\t\t\t\t\tinCount < rule.min))\n\t\t\t{\n\t\t\t\terror += rule.countError + '\\n';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (error.length > 0) ? error : null;\n};\n\n/**\n * Function: validateCell\n * \n * Hook method for subclassers to return an error message for the given\n * cell and validation context. This implementation returns null. Any HTML\n * breaks will be converted to linefeeds in the calling method.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to validate.\n * context - Object that represents the global validation state.\n */\nmxGraph.prototype.validateCell = function(cell, context)\n{\n\treturn null;\n};\n\n/**\n * Group: Graph appearance\n */\n\n/**\n * Function: getBackgroundImage\n * \n * Returns the <backgroundImage> as an <mxImage>.\n */\nmxGraph.prototype.getBackgroundImage = function()\n{\n\treturn this.backgroundImage;\n};\n\n/**\n * Function: setBackgroundImage\n * \n * Sets the new <backgroundImage>.\n * \n * Parameters:\n * \n * image - New <mxImage> to be used for the background.\n */\nmxGraph.prototype.setBackgroundImage = function(image)\n{\n\tthis.backgroundImage = image;\n};\n\n/**\n * Function: getFoldingImage\n * \n * Returns the <mxImage> used to display the collapsed state of\n * the specified cell state. This returns null for all edges.\n */\nmxGraph.prototype.getFoldingImage = function(state)\n{\n\tif (state != null && this.foldingEnabled && !this.getModel().isEdge(state.cell))\n\t{\n\t\tvar tmp = this.isCellCollapsed(state.cell);\n\t\t\n\t\tif (this.isCellFoldable(state.cell, !tmp))\n\t\t{\n\t\t\treturn (tmp) ? this.collapsedImage : this.expandedImage;\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: convertValueToString\n * \n * Returns the textual representation for the given cell. This\n * implementation returns the nodename or string-representation of the user\n * object.\n *\n * Example:\n * \n * The following returns the label attribute from the cells user\n * object if it is an XML node.\n * \n * (code)\n * graph.convertValueToString = function(cell)\n * {\n * \treturn cell.getAttribute('label');\n * }\n * (end)\n * \n * See also: <cellLabelChanged>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose textual representation should be returned.\n */\nmxGraph.prototype.convertValueToString = function(cell)\n{\n\tvar value = this.model.getValue(cell);\n\t\n\tif (value != null)\n\t{\n\t\tif (mxUtils.isNode(value))\n\t\t{\n\t\t\treturn value.nodeName;\n\t\t}\n\t\telse if (typeof(value.toString) == 'function')\n\t\t{\n\t\t\treturn value.toString();\n\t\t}\n\t}\n\t\n\treturn '';\n};\n\n/**\n * Function: getLabel\n * \n * Returns a string or DOM node that represents the label for the given\n * cell. This implementation uses <convertValueToString> if <labelsVisible>\n * is true. Otherwise it returns an empty string.\n * \n * To truncate a label to match the size of the cell, the following code\n * can be used.\n * \n * (code)\n * graph.getLabel = function(cell)\n * {\n *   var label = mxGraph.prototype.getLabel.apply(this, arguments);\n * \n *   if (label != null && this.model.isVertex(cell))\n *   {\n *     var geo = this.getCellGeometry(cell);\n * \n *     if (geo != null)\n *     {\n *       var max = parseInt(geo.width / 8);\n * \n *       if (label.length > max)\n *       {\n *         label = label.substring(0, max)+'...';\n *       }\n *     }\n *   } \n *   return mxUtils.htmlEntities(label);\n * }\n * (end)\n * \n * A resize listener is needed in the graph to force a repaint of the label\n * after a resize.\n * \n * (code)\n * graph.addListener(mxEvent.RESIZE_CELLS, function(sender, evt)\n * {\n *   var cells = evt.getProperty('cells');\n * \n *   for (var i = 0; i < cells.length; i++)\n *   {\n *     this.view.removeState(cells[i]);\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be returned.\n */\nmxGraph.prototype.getLabel = function(cell)\n{\n\tvar result = '';\n\t\n\tif (this.labelsVisible && cell != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\n\t\tif (!mxUtils.getValue(style, mxConstants.STYLE_NOLABEL, false))\n\t\t{\n\t\t\tresult = this.convertValueToString(cell);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: isHtmlLabel\n * \n * Returns true if the label must be rendered as HTML markup. The default\n * implementation returns <htmlLabels>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be displayed as HTML markup.\n */\nmxGraph.prototype.isHtmlLabel = function(cell)\n{\n\treturn this.isHtmlLabels();\n};\n \n/**\n * Function: isHtmlLabels\n * \n * Returns <htmlLabels>.\n */\nmxGraph.prototype.isHtmlLabels = function()\n{\n\treturn this.htmlLabels;\n};\n \n/**\n * Function: setHtmlLabels\n * \n * Sets <htmlLabels>.\n */\nmxGraph.prototype.setHtmlLabels = function(value)\n{\n\tthis.htmlLabels = value;\n};\n\n/**\n * Function: isWrapping\n * \n * This enables wrapping for HTML labels.\n * \n * Returns true if no white-space CSS style directive should be used for\n * displaying the given cells label. This implementation returns true if\n * <mxConstants.STYLE_WHITE_SPACE> in the style of the given cell is 'wrap'.\n * \n * This is used as a workaround for IE ignoring the white-space directive\n * of child elements if the directive appears in a parent element. It\n * should be overridden to return true if a white-space directive is used\n * in the HTML markup that represents the given cells label. In order for\n * HTML markup to work in labels, <isHtmlLabel> must also return true\n * for the given cell.\n * \n * Example:\n * \n * (code)\n * graph.getLabel = function(cell)\n * {\n *   var tmp = mxGraph.prototype.getLabel.apply(this, arguments); // \"supercall\"\n *   \n *   if (this.model.isEdge(cell))\n *   {\n *     tmp = '<div style=\"width: 150px; white-space:normal;\">'+tmp+'</div>';\n *   }\n *   \n *   return tmp;\n * }\n * \n * graph.isWrapping = function(state)\n * {\n * \t return this.model.isEdge(state.cell);\n * }\n * (end)\n * \n * Makes sure no edge label is wider than 150 pixels, otherwise the content\n * is wrapped. Note: No width must be specified for wrapped vertex labels as\n * the vertex defines the width in its geometry.\n * \n * Parameters:\n * \n * state - <mxCell> whose label should be wrapped.\n */\nmxGraph.prototype.isWrapping = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn (style != null) ? style[mxConstants.STYLE_WHITE_SPACE] == 'wrap' : false;\n};\n\n/**\n * Function: isLabelClipped\n * \n * Returns true if the overflow portion of labels should be hidden. If this\n * returns true then vertex labels will be clipped to the size of the vertices.\n * This implementation returns true if <mxConstants.STYLE_OVERFLOW> in the\n * style of the given cell is 'hidden'.\n * \n * Parameters:\n * \n * state - <mxCell> whose label should be clipped.\n */\nmxGraph.prototype.isLabelClipped = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn (style != null) ? style[mxConstants.STYLE_OVERFLOW] == 'hidden' : false;\n};\n\n/**\n * Function: getTooltip\n * \n * Returns the string or DOM node that represents the tooltip for the given\n * state, node and coordinate pair. This implementation checks if the given\n * node is a folding icon or overlay and returns the respective tooltip. If\n * this does not result in a tooltip, the handler for the cell is retrieved\n * from <selectionCellsHandler> and the optional getTooltipForNode method is\n * called. If no special tooltip exists here then <getTooltipForCell> is used\n * with the cell in the given state as the argument to return a tooltip for the\n * given state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose tooltip should be returned.\n * node - DOM node that is currently under the mouse.\n * x - X-coordinate of the mouse.\n * y - Y-coordinate of the mouse.\n */\nmxGraph.prototype.getTooltip = function(state, node, x, y)\n{\n\tvar tip = null;\n\t\n\tif (state != null)\n\t{\n\t\t// Checks if the mouse is over the folding icon\n\t\tif (state.control != null && (node == state.control.node ||\n\t\t\tnode.parentNode == state.control.node))\n\t\t{\n\t\t\ttip = this.collapseExpandResource;\n\t\t\ttip = mxUtils.htmlEntities(mxResources.get(tip) || tip).replace(/\\\\n/g, '<br>');\n\t\t}\n\n\t\tif (tip == null && state.overlays != null)\n\t\t{\n\t\t\tstate.overlays.visit(function(id, shape)\n\t\t\t{\n\t\t\t\t// LATER: Exit loop if tip is not null\n\t\t\t\tif (tip == null && (node == shape.node || node.parentNode == shape.node))\n\t\t\t\t{\n\t\t\t\t\ttip = shape.overlay.toString();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\tif (tip == null)\n\t\t{\n\t\t\tvar handler = this.selectionCellsHandler.getHandler(state.cell);\n\t\t\t\n\t\t\tif (handler != null && typeof(handler.getTooltipForNode) == 'function')\n\t\t\t{\n\t\t\t\ttip = handler.getTooltipForNode(node);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (tip == null)\n\t\t{\n\t\t\ttip = this.getTooltipForCell(state.cell);\n\t\t}\n\t}\n\t\n\treturn tip;\n};\n\n/**\n * Function: getTooltipForCell\n * \n * Returns the string or DOM node to be used as the tooltip for the given\n * cell. This implementation uses the cells getTooltip function if it\n * exists, or else it returns <convertValueToString> for the cell.\n * \n * Example:\n * \n * (code)\n * graph.getTooltipForCell = function(cell)\n * {\n *   return 'Hello, World!';\n * }\n * (end)\n * \n * Replaces all tooltips with the string Hello, World!\n * \n * Parameters:\n * \n * cell - <mxCell> whose tooltip should be returned.\n */\nmxGraph.prototype.getTooltipForCell = function(cell)\n{\n\tvar tip = null;\n\t\n\tif (cell != null && cell.getTooltip != null)\n\t{\n\t\ttip = cell.getTooltip();\n\t}\n\telse\n\t{\n\t\ttip = this.convertValueToString(cell);\n\t}\n\t\n\treturn tip;\n};\n\n/**\n * Function: getLinkForCell\n * \n * Returns the string to be used as the link for the given cell. This\n * implementation returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose tooltip should be returned.\n */\nmxGraph.prototype.getLinkForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: getCursorForMouseEvent\n * \n * Returns the cursor value to be used for the CSS of the shape for the\n * given event. This implementation calls <getCursorForCell>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> whose cursor should be returned.\n */\nmxGraph.prototype.getCursorForMouseEvent = function(me)\n{\n\treturn this.getCursorForCell(me.getCell());\n};\n\n/**\n * Function: getCursorForCell\n * \n * Returns the cursor value to be used for the CSS of the shape for the\n * given cell. This implementation returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose cursor should be returned.\n */\nmxGraph.prototype.getCursorForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: getStartSize\n * \n * Returns the start size of the given swimlane, that is, the width or\n * height of the part that contains the title, depending on the\n * horizontal style. The return value is an <mxRectangle> with either\n * width or height set as appropriate.\n * \n * Parameters:\n * \n * swimlane - <mxCell> whose start size should be returned.\n */\nmxGraph.prototype.getStartSize = function(swimlane)\n{\n\tvar result = new mxRectangle();\n\tvar state = this.view.getState(swimlane);\n\tvar style = (state != null) ? state.style : this.getCellStyle(swimlane);\n\t\n\tif (style != null)\n\t{\n\t\tvar size = parseInt(mxUtils.getValue(style,\n\t\t\tmxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE));\n\t\t\n\t\tif (mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t{\n\t\t\tresult.height = size;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.width = size;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getImage\n * \n * Returns the image URL for the given cell state. This implementation\n * returns the value stored under <mxConstants.STYLE_IMAGE> in the cell\n * style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose image URL should be returned.\n */\nmxGraph.prototype.getImage = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_IMAGE] : null;\n};\n\n/**\n * Function: getVerticalAlign\n * \n * Returns the vertical alignment for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_VERTICAL_ALIGN> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose vertical alignment should be\n * returned.\n */\nmxGraph.prototype.getVerticalAlign = function(state)\n{\n\treturn (state != null && state.style != null) ?\n\t\t(state.style[mxConstants.STYLE_VERTICAL_ALIGN] ||\n\t\tmxConstants.ALIGN_MIDDLE) : null;\n};\n\n/**\n * Function: getIndicatorColor\n * \n * Returns the indicator color for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_COLOR> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator color should be\n * returned.\n */\nmxGraph.prototype.getIndicatorColor = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_COLOR] : null;\n};\n\n/**\n * Function: getIndicatorGradientColor\n * \n * Returns the indicator gradient color for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_GRADIENTCOLOR> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator gradient color should be\n * returned.\n */\nmxGraph.prototype.getIndicatorGradientColor = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_GRADIENTCOLOR] : null;\n};\n\n/**\n * Function: getIndicatorShape\n * \n * Returns the indicator shape for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_SHAPE> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator shape should be returned.\n */\nmxGraph.prototype.getIndicatorShape = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_SHAPE] : null;\n};\n\n/**\n * Function: getIndicatorImage\n * \n * Returns the indicator image for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_IMAGE> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator image should be returned.\n */\nmxGraph.prototype.getIndicatorImage = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_IMAGE] : null;\n};\n\n/**\n * Function: getBorder\n * \n * Returns the value of <border>.\n */\nmxGraph.prototype.getBorder = function()\n{\n\treturn this.border;\n};\n\n/**\n * Function: setBorder\n * \n * Sets the value of <border>.\n * \n * Parameters:\n * \n * value - Positive integer that represents the border to be used.\n */\nmxGraph.prototype.setBorder = function(value)\n{\n\tthis.border = value;\n};\n\n/**\n * Function: isSwimlane\n * \n * Returns true if the given cell is a swimlane in the graph. A swimlane is\n * a container cell with some specific behaviour. This implementation\n * checks if the shape associated with the given cell is a <mxSwimlane>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be checked.\n */\nmxGraph.prototype.isSwimlane = function (cell)\n{\n\tif (cell != null)\n\t{\n\t\tif (this.model.getParent(cell) != this.model.getRoot())\n\t\t{\n\t\t\tvar state = this.view.getState(cell);\n\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\t\t\tif (style != null && !this.model.isEdge(cell))\n\t\t\t{\n\t\t\t\treturn style[mxConstants.STYLE_SHAPE] == mxConstants.SHAPE_SWIMLANE;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Group: Graph behaviour\n */\n\n/**\n * Function: isResizeContainer\n * \n * Returns <resizeContainer>.\n */\nmxGraph.prototype.isResizeContainer = function()\n{\n\treturn this.resizeContainer;\n};\n\n/**\n * Function: setResizeContainer\n * \n * Sets <resizeContainer>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the container should be resized.\n */\nmxGraph.prototype.setResizeContainer = function(value)\n{\n\tthis.resizeContainer = value;\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if the graph is <enabled>.\n */\nmxGraph.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Specifies if the graph should allow any interactions. This\n * implementation updates <enabled>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should be enabled.\n */\nmxGraph.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isEscapeEnabled\n * \n * Returns <escapeEnabled>.\n */\nmxGraph.prototype.isEscapeEnabled = function()\n{\n\treturn this.escapeEnabled;\n};\n\n/**\n * Function: setEscapeEnabled\n * \n * Sets <escapeEnabled>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if escape should be enabled.\n */\nmxGraph.prototype.setEscapeEnabled = function(value)\n{\n\tthis.escapeEnabled = value;\n};\n\n/**\n * Function: isInvokesStopCellEditing\n * \n * Returns <invokesStopCellEditing>.\n */\nmxGraph.prototype.isInvokesStopCellEditing = function()\n{\n\treturn this.invokesStopCellEditing;\n};\n\n/**\n * Function: setInvokesStopCellEditing\n * \n * Sets <invokesStopCellEditing>.\n */\nmxGraph.prototype.setInvokesStopCellEditing = function(value)\n{\n\tthis.invokesStopCellEditing = value;\n};\n\n/**\n * Function: isEnterStopsCellEditing\n * \n * Returns <enterStopsCellEditing>.\n */\nmxGraph.prototype.isEnterStopsCellEditing = function()\n{\n\treturn this.enterStopsCellEditing;\n};\n\n/**\n * Function: setEnterStopsCellEditing\n * \n * Sets <enterStopsCellEditing>.\n */\nmxGraph.prototype.setEnterStopsCellEditing = function(value)\n{\n\tthis.enterStopsCellEditing = value;\n};\n\n/**\n * Function: isCellLocked\n * \n * Returns true if the given cell may not be moved, sized, bended,\n * disconnected, edited or selected. This implementation returns true for\n * all vertices with a relative geometry if <locked> is false.\n * \n * Parameters:\n * \n * cell - <mxCell> whose locked state should be returned.\n */\nmxGraph.prototype.isCellLocked = function(cell)\n{\n\tvar geometry = this.model.getGeometry(cell);\n\t\n\treturn this.isCellsLocked() || (geometry != null && this.model.isVertex(cell) && geometry.relative);\n};\n\n/**\n * Function: isCellsLocked\n * \n * Returns true if the given cell may not be moved, sized, bended,\n * disconnected, edited or selected. This implementation returns true for\n * all vertices with a relative geometry if <locked> is false.\n * \n * Parameters:\n * \n * cell - <mxCell> whose locked state should be returned.\n */\nmxGraph.prototype.isCellsLocked = function()\n{\n\treturn this.cellsLocked;\n};\n\n/**\n * Function: setCellsLocked\n * \n * Sets if any cell may be moved, sized, bended, disconnected, edited or\n * selected.\n * \n * Parameters:\n * \n * value - Boolean that defines the new value for <cellsLocked>.\n */\nmxGraph.prototype.setCellsLocked = function(value)\n{\n\tthis.cellsLocked = value;\n};\n\n/**\n * Function: getCloneableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getCloneableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellCloneable(cell);\n\t}));\n};\n\n/**\n * Function: isCellCloneable\n * \n * Returns true if the given cell is cloneable. This implementation returns\n * <isCellsCloneable> for all cells unless a cell style specifies\n * <mxConstants.STYLE_CLONEABLE> to be 0. \n * \n * Parameters:\n * \n * cell - Optional <mxCell> whose cloneable state should be returned.\n */\nmxGraph.prototype.isCellCloneable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn this.isCellsCloneable() && style[mxConstants.STYLE_CLONEABLE] != 0;\n};\n\n/**\n * Function: isCellsCloneable\n * \n * Returns <cellsCloneable>, that is, if the graph allows cloning of cells\n * by using control-drag.\n */\nmxGraph.prototype.isCellsCloneable = function()\n{\n\treturn this.cellsCloneable;\n};\n\n/**\n * Function: setCellsCloneable\n * \n * Specifies if the graph should allow cloning of cells by holding down the\n * control key while cells are being moved. This implementation updates\n * <cellsCloneable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should be cloneable.\n */\nmxGraph.prototype.setCellsCloneable = function(value)\n{\n\tthis.cellsCloneable = value;\n};\n\n/**\n * Function: getExportableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getExportableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.canExportCell(cell);\n\t}));\n};\n\n/**\n * Function: canExportCell\n * \n * Returns true if the given cell may be exported to the clipboard. This\n * implementation returns <exportEnabled> for all cells.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to be exported.\n */\nmxGraph.prototype.canExportCell = function(cell)\n{\n\treturn this.exportEnabled;\n};\n\n/**\n * Function: getImportableCells\n * \n * Returns the cells which may be imported in the given array of cells.\n */\nmxGraph.prototype.getImportableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.canImportCell(cell);\n\t}));\n};\n\n/**\n * Function: canImportCell\n * \n * Returns true if the given cell may be imported from the clipboard.\n * This implementation returns <importEnabled> for all cells.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to be imported.\n */\nmxGraph.prototype.canImportCell = function(cell)\n{\n\treturn this.importEnabled;\n};\n\n/**\n * Function: isCellSelectable\n *\n * Returns true if the given cell is selectable. This implementation\n * returns <cellsSelectable>.\n * \n * To add a new style for making cells (un)selectable, use the following code.\n * \n * (code)\n * mxGraph.prototype.isCellSelectable = function(cell)\n * {\n *   var state = this.view.getState(cell);\n *   var style = (state != null) ? state.style : this.getCellStyle(cell);\n *   \n *   return this.isCellsSelectable() && !this.isCellLocked(cell) && style['selectable'] != 0;\n * };\n * (end)\n * \n * You can then use the new style as shown in this example.\n * \n * (code)\n * graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30, 'selectable=0');\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose selectable state should be returned.\n */\nmxGraph.prototype.isCellSelectable = function(cell)\n{\n\treturn this.isCellsSelectable();\n};\n\n/**\n * Function: isCellsSelectable\n *\n * Returns <cellsSelectable>.\n */\nmxGraph.prototype.isCellsSelectable = function()\n{\n\treturn this.cellsSelectable;\n};\n\n/**\n * Function: setCellsSelectable\n *\n * Sets <cellsSelectable>.\n */\nmxGraph.prototype.setCellsSelectable = function(value)\n{\n\tthis.cellsSelectable = value;\n};\n\n/**\n * Function: getDeletableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getDeletableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellDeletable(cell);\n\t}));\n};\n\n/**\n * Function: isCellDeletable\n *\n * Returns true if the given cell is moveable. This returns\n * <cellsDeletable> for all given cells if a cells style does not specify\n * <mxConstants.STYLE_DELETABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose deletable state should be returned.\n */\nmxGraph.prototype.isCellDeletable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsDeletable() && style[mxConstants.STYLE_DELETABLE] != 0;\n};\n\n/**\n * Function: isCellsDeletable\n *\n * Returns <cellsDeletable>.\n */\nmxGraph.prototype.isCellsDeletable = function()\n{\n\treturn this.cellsDeletable;\n};\n\n/**\n * Function: setCellsDeletable\n * \n * Sets <cellsDeletable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow deletion of cells.\n */\nmxGraph.prototype.setCellsDeletable = function(value)\n{\n\tthis.cellsDeletable = value;\n};\n\n/**\n * Function: isLabelMovable\n *\n * Returns true if the given edges's label is moveable. This returns\n * <movable> for all given cells if <isLocked> does not return true\n * for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be moved.\n */\nmxGraph.prototype.isLabelMovable = function(cell)\n{\n\treturn !this.isCellLocked(cell) &&\n\t\t((this.model.isEdge(cell) && this.edgeLabelsMovable) ||\n\t\t(this.model.isVertex(cell) && this.vertexLabelsMovable));\n};\n\n/**\n * Function: isCellRotatable\n *\n * Returns true if the given cell is rotatable. This returns true for the given\n * cell if its style does not specify <mxConstants.STYLE_ROTATABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose rotatable state should be returned.\n */\nmxGraph.prototype.isCellRotatable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn style[mxConstants.STYLE_ROTATABLE] != 0;\n};\n\n/**\n * Function: getMovableCells\n * \n * Returns the cells which are movable in the given array of cells.\n */\nmxGraph.prototype.getMovableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellMovable(cell);\n\t}));\n};\n\n/**\n * Function: isCellMovable\n *\n * Returns true if the given cell is moveable. This returns <cellsMovable>\n * for all given cells if <isCellLocked> does not return true for the given\n * cell and its style does not specify <mxConstants.STYLE_MOVABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose movable state should be returned.\n */\nmxGraph.prototype.isCellMovable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsMovable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_MOVABLE] != 0;\n};\n\n/**\n * Function: isCellsMovable\n *\n * Returns <cellsMovable>.\n */\nmxGraph.prototype.isCellsMovable = function()\n{\n\treturn this.cellsMovable;\n};\n\n/**\n * Function: setCellsMovable\n * \n * Specifies if the graph should allow moving of cells. This implementation\n * updates <cellsMsovable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow moving of cells.\n */\nmxGraph.prototype.setCellsMovable = function(value)\n{\n\tthis.cellsMovable = value;\n};\n\n/**\n * Function: isGridEnabled\n *\n * Returns <gridEnabled> as a boolean.\n */\nmxGraph.prototype.isGridEnabled = function()\n{\n\treturn this.gridEnabled;\n};\n\n/**\n * Function: setGridEnabled\n * \n * Specifies if the grid should be enabled.\n * \n * Parameters:\n * \n * value - Boolean indicating if the grid should be enabled.\n */\nmxGraph.prototype.setGridEnabled = function(value)\n{\n\tthis.gridEnabled = value;\n};\n\n/**\n * Function: isPortsEnabled\n *\n * Returns <portsEnabled> as a boolean.\n */\nmxGraph.prototype.isPortsEnabled = function()\n{\n\treturn this.portsEnabled;\n};\n\n/**\n * Function: setPortsEnabled\n * \n * Specifies if the ports should be enabled.\n * \n * Parameters:\n * \n * value - Boolean indicating if the ports should be enabled.\n */\nmxGraph.prototype.setPortsEnabled = function(value)\n{\n\tthis.portsEnabled = value;\n};\n\n/**\n * Function: getGridSize\n *\n * Returns <gridSize>.\n */\nmxGraph.prototype.getGridSize = function()\n{\n\treturn this.gridSize;\n};\n\n/**\n * Function: setGridSize\n * \n * Sets <gridSize>.\n */\nmxGraph.prototype.setGridSize = function(value)\n{\n\tthis.gridSize = value;\n};\n\n/**\n * Function: getTolerance\n *\n * Returns <tolerance>.\n */\nmxGraph.prototype.getTolerance = function()\n{\n\treturn this.tolerance;\n};\n\n/**\n * Function: setTolerance\n * \n * Sets <tolerance>.\n */\nmxGraph.prototype.setTolerance = function(value)\n{\n\tthis.tolerance = value;\n};\n\n/**\n * Function: isVertexLabelsMovable\n *\n * Returns <vertexLabelsMovable>.\n */\nmxGraph.prototype.isVertexLabelsMovable = function()\n{\n\treturn this.vertexLabelsMovable;\n};\n\n/**\n * Function: setVertexLabelsMovable\n * \n * Sets <vertexLabelsMovable>.\n */\nmxGraph.prototype.setVertexLabelsMovable = function(value)\n{\n\tthis.vertexLabelsMovable = value;\n};\n\n/**\n * Function: isEdgeLabelsMovable\n *\n * Returns <edgeLabelsMovable>.\n */\nmxGraph.prototype.isEdgeLabelsMovable = function()\n{\n\treturn this.edgeLabelsMovable;\n};\n\n/**\n * Function: isEdgeLabelsMovable\n * \n * Sets <edgeLabelsMovable>.\n */\nmxGraph.prototype.setEdgeLabelsMovable = function(value)\n{\n\tthis.edgeLabelsMovable = value;\n};\n\n/**\n * Function: isSwimlaneNesting\n *\n * Returns <swimlaneNesting> as a boolean.\n */\nmxGraph.prototype.isSwimlaneNesting = function()\n{\n\treturn this.swimlaneNesting;\n};\n\n/**\n * Function: setSwimlaneNesting\n * \n * Specifies if swimlanes can be nested by drag and drop. This is only\n * taken into account if dropEnabled is true.\n * \n * Parameters:\n * \n * value - Boolean indicating if swimlanes can be nested.\n */\nmxGraph.prototype.setSwimlaneNesting = function(value)\n{\n\tthis.swimlaneNesting = value;\n};\n\n/**\n * Function: isSwimlaneSelectionEnabled\n *\n * Returns <swimlaneSelectionEnabled> as a boolean.\n */\nmxGraph.prototype.isSwimlaneSelectionEnabled = function()\n{\n\treturn this.swimlaneSelectionEnabled;\n};\n\n/**\n * Function: setSwimlaneSelectionEnabled\n * \n * Specifies if swimlanes should be selected if the mouse is released\n * over their content area.\n * \n * Parameters:\n * \n * value - Boolean indicating if swimlanes content areas\n * should be selected when the mouse is released over them.\n */\nmxGraph.prototype.setSwimlaneSelectionEnabled = function(value)\n{\n\tthis.swimlaneSelectionEnabled = value;\n};\n\n/**\n * Function: isMultigraph\n *\n * Returns <multigraph> as a boolean.\n */\nmxGraph.prototype.isMultigraph = function()\n{\n\treturn this.multigraph;\n};\n\n/**\n * Function: setMultigraph\n * \n * Specifies if the graph should allow multiple connections between the\n * same pair of vertices.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph allows multiple connections\n * between the same pair of vertices.\n */\nmxGraph.prototype.setMultigraph = function(value)\n{\n\tthis.multigraph = value;\n};\n\n/**\n * Function: isAllowLoops\n *\n * Returns <allowLoops> as a boolean.\n */\nmxGraph.prototype.isAllowLoops = function()\n{\n\treturn this.allowLoops;\n};\n\n/**\n * Function: setAllowDanglingEdges\n * \n * Specifies if dangling edges are allowed, that is, if edges are allowed\n * that do not have a source and/or target terminal defined.\n * \n * Parameters:\n * \n * value - Boolean indicating if dangling edges are allowed.\n */\nmxGraph.prototype.setAllowDanglingEdges = function(value)\n{\n\tthis.allowDanglingEdges = value;\n};\n\n/**\n * Function: isAllowDanglingEdges\n *\n * Returns <allowDanglingEdges> as a boolean.\n */\nmxGraph.prototype.isAllowDanglingEdges = function()\n{\n\treturn this.allowDanglingEdges;\n};\n\n/**\n * Function: setConnectableEdges\n * \n * Specifies if edges should be connectable.\n * \n * Parameters:\n * \n * value - Boolean indicating if edges should be connectable.\n */\nmxGraph.prototype.setConnectableEdges = function(value)\n{\n\tthis.connectableEdges = value;\n};\n\n/**\n * Function: isConnectableEdges\n *\n * Returns <connectableEdges> as a boolean.\n */\nmxGraph.prototype.isConnectableEdges = function()\n{\n\treturn this.connectableEdges;\n};\n\n/**\n * Function: setCloneInvalidEdges\n * \n * Specifies if edges should be inserted when cloned but not valid wrt.\n * <getEdgeValidationError>. If false such edges will be silently ignored.\n * \n * Parameters:\n * \n * value - Boolean indicating if cloned invalid edges should be\n * inserted into the graph or ignored.\n */\nmxGraph.prototype.setCloneInvalidEdges = function(value)\n{\n\tthis.cloneInvalidEdges = value;\n};\n\n/**\n * Function: isCloneInvalidEdges\n *\n * Returns <cloneInvalidEdges> as a boolean.\n */\nmxGraph.prototype.isCloneInvalidEdges = function()\n{\n\treturn this.cloneInvalidEdges;\n};\n\n/**\n * Function: setAllowLoops\n * \n * Specifies if loops are allowed.\n * \n * Parameters:\n * \n * value - Boolean indicating if loops are allowed.\n */\nmxGraph.prototype.setAllowLoops = function(value)\n{\n\tthis.allowLoops = value;\n};\n\n/**\n * Function: isDisconnectOnMove\n *\n * Returns <disconnectOnMove> as a boolean.\n */\nmxGraph.prototype.isDisconnectOnMove = function()\n{\n\treturn this.disconnectOnMove;\n};\n\n/**\n * Function: setDisconnectOnMove\n * \n * Specifies if edges should be disconnected when moved. (Note: Cloned\n * edges are always disconnected.)\n * \n * Parameters:\n * \n * value - Boolean indicating if edges should be disconnected\n * when moved.\n */\nmxGraph.prototype.setDisconnectOnMove = function(value)\n{\n\tthis.disconnectOnMove = value;\n};\n\n/**\n * Function: isDropEnabled\n *\n * Returns <dropEnabled> as a boolean.\n */\nmxGraph.prototype.isDropEnabled = function()\n{\n\treturn this.dropEnabled;\n};\n\n/**\n * Function: setDropEnabled\n * \n * Specifies if the graph should allow dropping of cells onto or into other\n * cells.\n * \n * Parameters:\n * \n * dropEnabled - Boolean indicating if the graph should allow dropping\n * of cells into other cells.\n */\nmxGraph.prototype.setDropEnabled = function(value)\n{\n\tthis.dropEnabled = value;\n};\n\n/**\n * Function: isSplitEnabled\n *\n * Returns <splitEnabled> as a boolean.\n */\nmxGraph.prototype.isSplitEnabled = function()\n{\n\treturn this.splitEnabled;\n};\n\n/**\n * Function: setSplitEnabled\n * \n * Specifies if the graph should allow dropping of cells onto or into other\n * cells.\n * \n * Parameters:\n * \n * dropEnabled - Boolean indicating if the graph should allow dropping\n * of cells into other cells.\n */\nmxGraph.prototype.setSplitEnabled = function(value)\n{\n\tthis.splitEnabled = value;\n};\n\n/**\n * Function: isCellResizable\n *\n * Returns true if the given cell is resizable. This returns\n * <cellsResizable> for all given cells if <isCellLocked> does not return\n * true for the given cell and its style does not specify\n * <mxConstants.STYLE_RESIZABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose resizable state should be returned.\n */\nmxGraph.prototype.isCellResizable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn this.isCellsResizable() && !this.isCellLocked(cell) &&\n\t\tmxUtils.getValue(style, mxConstants.STYLE_RESIZABLE, '1') != '0';\n};\n\n/**\n * Function: isCellsResizable\n *\n * Returns <cellsResizable>.\n */\nmxGraph.prototype.isCellsResizable = function()\n{\n\treturn this.cellsResizable;\n};\n\n/**\n * Function: setCellsResizable\n * \n * Specifies if the graph should allow resizing of cells. This\n * implementation updates <cellsResizable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow resizing of\n * cells.\n */\nmxGraph.prototype.setCellsResizable = function(value)\n{\n\tthis.cellsResizable = value;\n};\n\n/**\n * Function: isTerminalPointMovable\n *\n * Returns true if the given terminal point is movable. This is independent\n * from <isCellConnectable> and <isCellDisconnectable> and controls if terminal\n * points can be moved in the graph if the edge is not connected. Note that it\n * is required for this to return true to connect unconnected edges. This\n * implementation returns true.\n * \n * Parameters:\n * \n * cell - <mxCell> whose terminal point should be moved.\n * source - Boolean indicating if the source or target terminal should be moved.\n */\nmxGraph.prototype.isTerminalPointMovable = function(cell, source)\n{\n\treturn true;\n};\n\n/**\n * Function: isCellBendable\n *\n * Returns true if the given cell is bendable. This returns <cellsBendable>\n * for all given cells if <isLocked> does not return true for the given\n * cell and its style does not specify <mxConstants.STYLE_BENDABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bendable state should be returned.\n */\nmxGraph.prototype.isCellBendable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsBendable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_BENDABLE] != 0;\n};\n\n/**\n * Function: isCellsBendable\n *\n * Returns <cellsBenadable>.\n */\nmxGraph.prototype.isCellsBendable = function()\n{\n\treturn this.cellsBendable;\n};\n\n/**\n * Function: setCellsBendable\n * \n * Specifies if the graph should allow bending of edges. This\n * implementation updates <bendable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow bending of\n * edges.\n */\nmxGraph.prototype.setCellsBendable = function(value)\n{\n\tthis.cellsBendable = value;\n};\n\n/**\n * Function: isCellEditable\n *\n * Returns true if the given cell is editable. This returns <cellsEditable> for\n * all given cells if <isCellLocked> does not return true for the given cell\n * and its style does not specify <mxConstants.STYLE_EDITABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose editable state should be returned.\n */\nmxGraph.prototype.isCellEditable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsEditable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_EDITABLE] != 0;\n};\n\n/**\n * Function: isCellsEditable\n *\n * Returns <cellsEditable>.\n */\nmxGraph.prototype.isCellsEditable = function()\n{\n\treturn this.cellsEditable;\n};\n\n/**\n * Function: setCellsEditable\n * \n * Specifies if the graph should allow in-place editing for cell labels.\n * This implementation updates <cellsEditable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow in-place\n * editing.\n */\nmxGraph.prototype.setCellsEditable = function(value)\n{\n\tthis.cellsEditable = value;\n};\n\n/**\n * Function: isCellDisconnectable\n *\n * Returns true if the given cell is disconnectable from the source or\n * target terminal. This returns <isCellsDisconnectable> for all given\n * cells if <isCellLocked> does not return true for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose disconnectable state should be returned.\n * terminal - <mxCell> that represents the source or target terminal.\n * source - Boolean indicating if the source or target terminal is to be\n * disconnected.\n */\nmxGraph.prototype.isCellDisconnectable = function(cell, terminal, source)\n{\n\treturn this.isCellsDisconnectable() && !this.isCellLocked(cell);\n};\n\n/**\n * Function: isCellsDisconnectable\n *\n * Returns <cellsDisconnectable>.\n */\nmxGraph.prototype.isCellsDisconnectable = function()\n{\n\treturn this.cellsDisconnectable;\n};\n\n/**\n * Function: setCellsDisconnectable\n *\n * Sets <cellsDisconnectable>.\n */\nmxGraph.prototype.setCellsDisconnectable = function(value)\n{\n\tthis.cellsDisconnectable = value;\n};\n\n/**\n * Function: isValidSource\n * \n * Returns true if the given cell is a valid source for new connections.\n * This implementation returns true for all non-null values and is\n * called by is called by <isValidConnection>.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents a possible source or null.\n */\nmxGraph.prototype.isValidSource = function(cell)\n{\n\treturn (cell == null && this.allowDanglingEdges) ||\n\t\t(cell != null && (!this.model.isEdge(cell) ||\n\t\tthis.connectableEdges) && this.isCellConnectable(cell));\n};\n\t\n/**\n * Function: isValidTarget\n * \n * Returns <isValidSource> for the given cell. This is called by\n * <isValidConnection>.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents a possible target or null.\n */\nmxGraph.prototype.isValidTarget = function(cell)\n{\n\treturn this.isValidSource(cell);\n};\n\n/**\n * Function: isValidConnection\n * \n * Returns true if the given target cell is a valid target for source.\n * This is a boolean implementation for not allowing connections between\n * certain pairs of vertices and is called by <getEdgeValidationError>.\n * This implementation returns true if <isValidSource> returns true for\n * the source and <isValidTarget> returns true for the target.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source cell.\n * target - <mxCell> that represents the target cell.\n */\nmxGraph.prototype.isValidConnection = function(source, target)\n{\n\treturn this.isValidSource(source) && this.isValidTarget(target);\n};\n\n/**\n * Function: setConnectable\n * \n * Specifies if the graph should allow new connections. This implementation\n * updates <mxConnectionHandler.enabled> in <connectionHandler>.\n * \n * Parameters:\n * \n * connectable - Boolean indicating if new connections should be allowed.\n */\nmxGraph.prototype.setConnectable = function(connectable)\n{\n\tthis.connectionHandler.setEnabled(connectable);\n};\n\t\n/**\n * Function: isConnectable\n * \n * Returns true if the <connectionHandler> is enabled.\n */\nmxGraph.prototype.isConnectable = function(connectable)\n{\n\treturn this.connectionHandler.isEnabled();\n};\n\n/**\n * Function: setTooltips\n * \n * Specifies if tooltips should be enabled. This implementation updates\n * <mxTooltipHandler.enabled> in <tooltipHandler>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if tooltips should be enabled.\n */\nmxGraph.prototype.setTooltips = function (enabled)\n{\n\tthis.tooltipHandler.setEnabled(enabled);\n};\n\n/**\n * Function: setPanning\n * \n * Specifies if panning should be enabled. This implementation updates\n * <mxPanningHandler.panningEnabled> in <panningHandler>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if panning should be enabled.\n */\nmxGraph.prototype.setPanning = function(enabled)\n{\n\tthis.panningHandler.panningEnabled = enabled;\n};\n\n/**\n * Function: isEditing\n * \n * Returns true if the given cell is currently being edited.\n * If no cell is specified then this returns true if any\n * cell is currently being edited.\n *\n * Parameters:\n * \n * cell - <mxCell> that should be checked.\n */\nmxGraph.prototype.isEditing = function(cell)\n{\n\tif (this.cellEditor != null)\n\t{\n\t\tvar editingCell = this.cellEditor.getEditingCell();\n\t\t\n\t\treturn (cell == null) ? editingCell != null : cell == editingCell;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: isAutoSizeCell\n * \n * Returns true if the size of the given cell should automatically be\n * updated after a change of the label. This implementation returns\n * <autoSizeCells> or checks if the cell style does specify\n * <mxConstants.STYLE_AUTOSIZE> to be 1.\n * \n * Parameters:\n * \n * cell - <mxCell> that should be resized.\n */\nmxGraph.prototype.isAutoSizeCell = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isAutoSizeCells() || style[mxConstants.STYLE_AUTOSIZE] == 1;\n};\n\n/**\n * Function: isAutoSizeCells\n * \n * Returns <autoSizeCells>.\n */\nmxGraph.prototype.isAutoSizeCells = function()\n{\n\treturn this.autoSizeCells;\n};\n\n/**\n * Function: setAutoSizeCells\n * \n * Specifies if cell sizes should be automatically updated after a label\n * change. This implementation sets <autoSizeCells> to the given parameter.\n * To update the size of cells when the cells are added, set\n * <autoSizeCellsOnAdd> to true.\n * \n * Parameters:\n * \n * value - Boolean indicating if cells should be resized\n * automatically.\n */\nmxGraph.prototype.setAutoSizeCells = function(value)\n{\n\tthis.autoSizeCells = value;\n};\n\n/**\n * Function: isExtendParent\n * \n * Returns true if the parent of the given cell should be extended if the\n * child has been resized so that it overlaps the parent. This\n * implementation returns <isExtendParents> if the cell is not an edge.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.isExtendParent = function(cell)\n{\n\treturn !this.getModel().isEdge(cell) && this.isExtendParents();\n};\n\n/**\n * Function: isExtendParents\n * \n * Returns <extendParents>.\n */\nmxGraph.prototype.isExtendParents = function()\n{\n\treturn this.extendParents;\n};\n\n/**\n * Function: setExtendParents\n * \n * Sets <extendParents>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParents>.\n */\nmxGraph.prototype.setExtendParents = function(value)\n{\n\tthis.extendParents = value;\n};\n\n/**\n * Function: isExtendParentsOnAdd\n * \n * Returns <extendParentsOnAdd>.\n */\nmxGraph.prototype.isExtendParentsOnAdd = function(cell)\n{\n\treturn this.extendParentsOnAdd;\n};\n\n/**\n * Function: setExtendParentsOnAdd\n * \n * Sets <extendParentsOnAdd>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParentsOnAdd>.\n */\nmxGraph.prototype.setExtendParentsOnAdd = function(value)\n{\n\tthis.extendParentsOnAdd = value;\n};\n\n/**\n * Function: isExtendParentsOnMove\n * \n * Returns <extendParentsOnMove>.\n */\nmxGraph.prototype.isExtendParentsOnMove = function()\n{\n\treturn this.extendParentsOnMove;\n};\n\n/**\n * Function: setExtendParentsOnMove\n * \n * Sets <extendParentsOnMove>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParentsOnAdd>.\n */\nmxGraph.prototype.setExtendParentsOnMove = function(value)\n{\n\tthis.extendParentsOnMove = value;\n};\n\n/**\n * Function: isRecursiveResize\n * \n * Returns <recursiveResize>.\n * \n * Parameters:\n * \n * state - <mxCellState> that is being resized.\n */\nmxGraph.prototype.isRecursiveResize = function(state)\n{\n\treturn this.recursiveResize;\n};\n\n/**\n * Function: setRecursiveResize\n * \n * Sets <recursiveResize>.\n * \n * Parameters:\n * \n * value - New boolean value for <recursiveResize>.\n */\nmxGraph.prototype.setRecursiveResize = function(value)\n{\n\tthis.recursiveResize = value;\n};\n\n/**\n * Function: isConstrainChild\n * \n * Returns true if the given cell should be kept inside the bounds of its\n * parent according to the rules defined by <getOverlap> and\n * <isAllowOverlapParent>. This implementation returns false for all children\n * of edges and <isConstrainChildren> otherwise.\n * \n * Parameters:\n * \n * cell - <mxCell> that should be constrained.\n */\nmxGraph.prototype.isConstrainChild = function(cell)\n{\n\treturn this.isConstrainChildren() && !this.getModel().isEdge(this.getModel().getParent(cell));\n};\n\n/**\n * Function: isConstrainChildren\n * \n * Returns <constrainChildren>.\n */\nmxGraph.prototype.isConstrainChildren = function()\n{\n\treturn this.constrainChildren;\n};\n\n/**\n * Function: setConstrainChildren\n * \n * Sets <constrainChildren>.\n */\nmxGraph.prototype.setConstrainChildren = function(value)\n{\n\tthis.constrainChildren = value;\n};\n\n/**\n * Function: isConstrainRelativeChildren\n * \n * Returns <constrainRelativeChildren>.\n */\nmxGraph.prototype.isConstrainRelativeChildren = function()\n{\n\treturn this.constrainRelativeChildren;\n};\n\n/**\n * Function: setConstrainRelativeChildren\n * \n * Sets <constrainRelativeChildren>.\n */\nmxGraph.prototype.setConstrainRelativeChildren = function(value)\n{\n\tthis.constrainRelativeChildren = value;\n};\n\n/**\n * Function: isConstrainChildren\n * \n * Returns <allowNegativeCoordinates>.\n */\nmxGraph.prototype.isAllowNegativeCoordinates = function()\n{\n\treturn this.allowNegativeCoordinates;\n};\n\n/**\n * Function: setConstrainChildren\n * \n * Sets <allowNegativeCoordinates>.\n */\nmxGraph.prototype.setAllowNegativeCoordinates = function(value)\n{\n\tthis.allowNegativeCoordinates = value;\n};\n\n/**\n * Function: getOverlap\n * \n * Returns a decimal number representing the amount of the width and height\n * of the given cell that is allowed to overlap its parent. A value of 0\n * means all children must stay inside the parent, 1 means the child is\n * allowed to be placed outside of the parent such that it touches one of\n * the parents sides. If <isAllowOverlapParent> returns false for the given\n * cell, then this method returns 0.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the overlap ratio should be returned.\n */\nmxGraph.prototype.getOverlap = function(cell)\n{\n\treturn (this.isAllowOverlapParent(cell)) ? this.defaultOverlap : 0;\n};\n\t\n/**\n * Function: isAllowOverlapParent\n * \n * Returns true if the given cell is allowed to be placed outside of the\n * parents area.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the child to be checked.\n */\nmxGraph.prototype.isAllowOverlapParent = function(cell)\n{\n\treturn false;\n};\n\n/**\n * Function: getFoldableCells\n * \n * Returns the cells which are movable in the given array of cells.\n */\nmxGraph.prototype.getFoldableCells = function(cells, collapse)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellFoldable(cell, collapse);\n\t}));\n};\n\n/**\n * Function: isCellFoldable\n * \n * Returns true if the given cell is foldable. This implementation\n * returns true if the cell has at least one child and its style\n * does not specify <mxConstants.STYLE_FOLDABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose foldable state should be returned.\n */\nmxGraph.prototype.isCellFoldable = function(cell, collapse)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.model.getChildCount(cell) > 0 && style[mxConstants.STYLE_FOLDABLE] != 0;\n};\n\n/**\n * Function: isValidDropTarget\n *\n * Returns true if the given cell is a valid drop target for the specified\n * cells. If <splitEnabled> is true then this returns <isSplitTarget> for\n * the given arguments else it returns true if the cell is not collapsed\n * and its child count is greater than 0.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the possible drop target.\n * cells - <mxCells> that should be dropped into the target.\n * evt - Mouseevent that triggered the invocation.\n */\nmxGraph.prototype.isValidDropTarget = function(cell, cells, evt)\n{\n\treturn cell != null && ((this.isSplitEnabled() &&\n\t\tthis.isSplitTarget(cell, cells, evt)) || (!this.model.isEdge(cell) &&\n\t\t(this.isSwimlane(cell) || (this.model.getChildCount(cell) > 0 &&\n\t\t!this.isCellCollapsed(cell)))));\n};\n\n/**\n * Function: isSplitTarget\n *\n * Returns true if the given edge may be splitted into two edges with the\n * given cell as a new terminal between the two.\n * \n * Parameters:\n * \n * target - <mxCell> that represents the edge to be splitted.\n * cells - <mxCells> that should split the edge.\n * evt - Mouseevent that triggered the invocation.\n */\nmxGraph.prototype.isSplitTarget = function(target, cells, evt)\n{\n\tif (this.model.isEdge(target) && cells != null && cells.length == 1 &&\n\t\tthis.isCellConnectable(cells[0]) && this.getEdgeValidationError(target,\n\t\t\tthis.model.getTerminal(target, true), cells[0]) == null)\n\t{\n\t\tvar src = this.model.getTerminal(target, true);\n\t\tvar trg = this.model.getTerminal(target, false);\n\n\t\treturn (!this.model.isAncestor(cells[0], src) &&\n\t\t\t\t!this.model.isAncestor(cells[0], trg));\n\t}\n\n\treturn false;\n};\n\n/**\n * Function: getDropTarget\n * \n * Returns the given cell if it is a drop target for the given cells or the\n * nearest ancestor that may be used as a drop target for the given cells.\n * If the given array contains a swimlane and <swimlaneNesting> is false\n * then this always returns null. If no cell is given, then the bottommost\n * swimlane at the location of the given event is returned.\n * \n * This function should only be used if <isDropEnabled> returns true.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> which are to be dropped onto the target.\n * evt - Mouseevent for the drag and drop.\n * cell - <mxCell> that is under the mousepointer.\n * clone - Optional boolean to indicate of cells will be cloned.\n */\nmxGraph.prototype.getDropTarget = function(cells, evt, cell, clone)\n{\n\tif (!this.isSwimlaneNesting())\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.isSwimlane(cells[i]))\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar pt = mxUtils.convertPoint(this.container,\n\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\tpt.x -= this.panDx;\n\tpt.y -= this.panDy;\n\tvar swimlane = this.getSwimlaneAt(pt.x, pt.y);\n\t\n\tif (cell == null)\n\t{\n\t\tcell = swimlane;\n\t}\n\telse if (swimlane != null)\n\t{\n\t\t// Checks if the cell is an ancestor of the swimlane\n\t\t// under the mouse and uses the swimlane in that case\n\t\tvar tmp = this.model.getParent(swimlane);\n\t\t\n\t\twhile (tmp != null && this.isSwimlane(tmp) && tmp != cell)\n\t\t{\n\t\t\ttmp = this.model.getParent(tmp);\n\t\t}\n\t\t\n\t\tif (tmp == cell)\n\t\t{\n\t\t\tcell = swimlane;\n\t\t}\n\t}\n\t\n\twhile (cell != null && !this.isValidDropTarget(cell, cells, evt) &&\n\t\t!this.model.isLayer(cell))\n\t{\n\t\tcell = this.model.getParent(cell);\n\t}\n\t\n\t// Checks if parent is dropped into child if not cloning\n\tif (clone == null || !clone)\n\t{\n\t\tvar parent = cell;\n\t\t\n\t\twhile (parent != null && mxUtils.indexOf(cells, parent) < 0)\n\t\t{\n\t\t\tparent = this.model.getParent(parent);\n\t\t}\n\t}\n\n\treturn (!this.model.isLayer(cell) && parent == null) ? cell : null;\n};\n\n/**\n * Group: Cell retrieval\n */\n\n/**\n * Function: getDefaultParent\n * \n * Returns <defaultParent> or <mxGraphView.currentRoot> or the first child\n * child of <mxGraphModel.root> if both are null. The value returned by\n * this function should be used as the parent for new cells (aka default\n * layer).\n */\nmxGraph.prototype.getDefaultParent = function()\n{\n\tvar parent = this.getCurrentRoot();\n\t\n\tif (parent == null)\n\t{\n\t\tparent = this.defaultParent;\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tvar root = this.model.getRoot();\n\t\t\tparent = this.model.getChildAt(root, 0);\n\t\t}\n\t}\n\t\n\treturn parent;\n};\n\n/**\n * Function: setDefaultParent\n * \n * Sets the <defaultParent> to the given cell. Set this to null to return\n * the first child of the root in getDefaultParent.\n */\nmxGraph.prototype.setDefaultParent = function(cell)\n{\n\tthis.defaultParent = cell;\n};\n\n/**\n * Function: getSwimlane\n * \n * Returns the nearest ancestor of the given cell which is a swimlane, or\n * the given cell, if it is itself a swimlane.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the ancestor swimlane should be returned.\n */\nmxGraph.prototype.getSwimlane = function(cell)\n{\n\twhile (cell != null && !this.isSwimlane(cell))\n\t{\n\t\tcell = this.model.getParent(cell);\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: getSwimlaneAt\n * \n * Returns the bottom-most swimlane that intersects the given point (x, y)\n * in the cell hierarchy that starts at the given parent.\n * \n * Parameters:\n * \n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is <defaultParent>.\n */\nmxGraph.prototype.getSwimlaneAt = function (x, y, parent)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tif (parent != null)\n\t{\n\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = this.model.getChildAt(parent, i);\n\t\t\tvar result = this.getSwimlaneAt(x, y, child);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse if (this.isSwimlane(child))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(child);\n\t\t\t\t\n\t\t\t\tif (this.intersects(state, x, y))\n\t\t\t\t{\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getCellAt\n * \n * Returns the bottom-most cell that intersects the given point (x, y) in\n * the cell hierarchy starting at the given parent. This will also return\n * swimlanes if the given location intersects the content area of the\n * swimlane. If this is not desired, then the <hitsSwimlaneContent> may be\n * used if the returned cell is a swimlane to determine if the location\n * is inside the content area or on the actual title of the swimlane.\n * \n * Parameters:\n * \n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is current root of the view or the root of the model.\n * vertices - Optional boolean indicating if vertices should be returned.\n * Default is true.\n * edges - Optional boolean indicating if edges should be returned. Default\n * is true.\n * ignoreFn - Optional function that returns true if cell should be ignored.\n * The function is passed the cell state and the x and y parameter.\n */\nmxGraph.prototype.getCellAt = function(x, y, parent, vertices, edges, ignoreFn)\n{\n\tvertices = (vertices != null) ? vertices : true;\n\tedges = (edges != null) ? edges : true;\n\n\tif (parent == null)\n\t{\n\t\tparent = this.getCurrentRoot();\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getModel().getRoot();\n\t\t}\n\t}\n\n\tif (parent != null)\n\t{\n\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\n\t\tfor (var i = childCount - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar cell = this.model.getChildAt(parent, i);\n\t\t\tvar result = this.getCellAt(x, y, cell, vertices, edges, ignoreFn);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse if (this.isCellVisible(cell) && (edges && this.model.isEdge(cell) ||\n\t\t\t\tvertices && this.model.isVertex(cell)))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(cell);\n\n\t\t\t\tif (state != null && (ignoreFn == null || !ignoreFn(state, x, y)) &&\n\t\t\t\t\tthis.intersects(state, x, y))\n\t\t\t\t{\n\t\t\t\t\treturn cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: intersects\n * \n * Returns the bottom-most cell that intersects the given point (x, y) in\n * the cell hierarchy that starts at the given parent.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the cell state.\n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n */\nmxGraph.prototype.intersects = function(state, x, y)\n{\n\tif (state != null)\n\t{\n\t\tvar pts = state.absolutePoints;\n\n\t\tif (pts != null)\n\t\t{\n\t\t\tvar t2 = this.tolerance * this.tolerance;\n\t\t\tvar pt = pts[0];\n\t\t\t\n\t\t\tfor (var i = 1; i < pts.length; i++)\n\t\t\t{\n\t\t\t\tvar next = pts[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(pt.x, pt.y, next.x, next.y, x, y);\n\t\t\t\t\n\t\t\t\tif (dist <= t2)\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpt = next;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(x, y), cos, sin, cx);\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (mxUtils.contains(state, x, y))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: hitsSwimlaneContent\n * \n * Returns true if the given coordinate pair is inside the content\n * are of the given swimlane.\n * \n * Parameters:\n * \n * swimlane - <mxCell> that specifies the swimlane.\n * x - X-coordinate of the mouse event.\n * y - Y-coordinate of the mouse event.\n */\nmxGraph.prototype.hitsSwimlaneContent = function(swimlane, x, y)\n{\n\tvar state = this.getView().getState(swimlane);\n\tvar size = this.getStartSize(swimlane);\n\t\n\tif (state != null)\n\t{\n\t\tvar scale = this.getView().getScale();\n\t\tx -= state.x;\n\t\ty -= state.y;\n\t\t\n\t\tif (size.width > 0 && x > 0 && x > size.width * scale)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if (size.height > 0 && y > 0 && y > size.height * scale)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getChildVertices\n * \n * Returns the visible child vertices of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be returned.\n */\nmxGraph.prototype.getChildVertices = function(parent)\n{\n\treturn this.getChildCells(parent, true, false);\n};\n\t\n/**\n * Function: getChildEdges\n * \n * Returns the visible child edges of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose child vertices should be returned.\n */\nmxGraph.prototype.getChildEdges = function(parent)\n{\n\treturn this.getChildCells(parent, false, true);\n};\n\n/**\n * Function: getChildCells\n * \n * Returns the visible child vertices or edges in the given parent. If\n * vertices and edges is false, then all children are returned.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be returned.\n * vertices - Optional boolean that specifies if child vertices should\n * be returned. Default is false.\n * edges - Optional boolean that specifies if child edges should\n * be returned. Default is false.\n */\nmxGraph.prototype.getChildCells = function(parent, vertices, edges)\n{\n\tparent = (parent != null) ? parent : this.getDefaultParent();\n\tvertices = (vertices != null) ? vertices : false;\n\tedges = (edges != null) ? edges : false;\n\n\tvar cells = this.model.getChildCells(parent, vertices, edges);\n\tvar result = [];\n\n\t// Filters out the non-visible child cells\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (this.isCellVisible(cells[i]))\n\t\t{\n\t\t\tresult.push(cells[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\t\n/**\n * Function: getConnections\n * \n * Returns all visible edges connected to the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose connections should be returned.\n * parent - Optional parent of the opposite end for a connection to be\n * returned.\n */\nmxGraph.prototype.getConnections = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, true, true, false);\n};\n\t\n/**\n * Function: getIncomingEdges\n * \n * Returns the visible incoming edges for the given cell. If the optional\n * parent argument is specified, then only child edges of the given parent\n * are returned.\n * \n * Parameters:\n * \n * cell - <mxCell> whose incoming edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n */\nmxGraph.prototype.getIncomingEdges = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, true, false, false);\n};\n\t\n/**\n * Function: getOutgoingEdges\n * \n * Returns the visible outgoing edges for the given cell. If the optional\n * parent argument is specified, then only child edges of the given parent\n * are returned.\n * \n * Parameters:\n * \n * cell - <mxCell> whose outgoing edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n */\nmxGraph.prototype.getOutgoingEdges = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, false, true, false);\n};\n\t\n/**\n * Function: getEdges\n * \n * Returns the incoming and/or outgoing edges for the given cell.\n * If the optional parent argument is specified, then only edges are returned\n * where the opposite is in the given parent cell. If at least one of incoming\n * or outgoing is true, then loops are ignored, if both are false, then all\n * edges connected to the given cell are returned including loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n * incoming - Optional boolean that specifies if incoming edges should\n * be included in the result. Default is true.\n * outgoing - Optional boolean that specifies if outgoing edges should\n * be included in the result. Default is true.\n * includeLoops - Optional boolean that specifies if loops should be\n * included in the result. Default is true.\n * recurse - Optional boolean the specifies if the parent specified only \n * need be an ancestral parent, true, or the direct parent, false.\n * Default is false\n */\nmxGraph.prototype.getEdges = function(cell, parent, incoming, outgoing, includeLoops, recurse)\n{\n\tincoming = (incoming != null) ? incoming : true;\n\toutgoing = (outgoing != null) ? outgoing : true;\n\tincludeLoops = (includeLoops != null) ? includeLoops : true;\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tvar edges = [];\n\tvar isCollapsed = this.isCellCollapsed(cell);\n\tvar childCount = this.model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.model.getChildAt(cell, i);\n\n\t\tif (isCollapsed || !this.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(this.model.getEdges(child, incoming, outgoing));\n\t\t}\n\t}\n\n\tedges = edges.concat(this.model.getEdges(cell, incoming, outgoing));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar state = this.view.getState(edges[i]);\n\t\t\n\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\n\t\tif ((includeLoops && source == target) || ((source != target) && ((incoming &&\n\t\t\ttarget == cell && (parent == null || this.isValidAncestor(source, parent, recurse))) ||\n\t\t\t(outgoing && source == cell && (parent == null ||\n\t\t\t\t\tthis.isValidAncestor(target, parent, recurse))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isValidAncestor\n * \n * Returns whether or not the specified parent is a valid\n * ancestor of the specified cell, either direct or indirectly\n * based on whether ancestor recursion is enabled.\n * \n * Parameters:\n * \n * cell - <mxCell> the possible child cell\n * parent - <mxCell> the possible parent cell\n * recurse - boolean whether or not to recurse the child ancestors\n */\nmxGraph.prototype.isValidAncestor = function(cell, parent, recurse)\n{\n\treturn (recurse ? this.model.isAncestor(parent, cell) : this.model\n\t\t\t.getParent(cell) == parent);\n};\n\n/**\n * Function: getOpposites\n * \n * Returns all distinct visible opposite cells for the specified terminal\n * on the given edges.\n * \n * Parameters:\n * \n * edges - Array of <mxCells> that contains the edges whose opposite\n * terminals should be returned.\n * terminal - Terminal that specifies the end whose opposite should be\n * returned.\n * source - Optional boolean that specifies if source terminals should be\n * included in the result. Default is true.\n * targets - Optional boolean that specifies if targer terminals should be\n * included in the result. Default is true.\n */\nmxGraph.prototype.getOpposites = function(edges, terminal, sources, targets)\n{\n\tsources = (sources != null) ? sources : true;\n\ttargets = (targets != null) ? targets : true;\n\t\n\tvar terminals = [];\n\t\n\t// Fast lookup to avoid duplicates in terminals array\n\tvar dict = new mxDictionary();\n\t\n\tif (edges != null)\n\t{\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar state = this.view.getState(edges[i]);\n\t\t\t\n\t\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\t\t\t\n\t\t\t// Checks if the terminal is the source of the edge and if the\n\t\t\t// target should be stored in the result\n\t\t\tif (source == terminal && target != null && target != terminal && targets)\n\t\t\t{\n\t\t\t\tif (!dict.get(target))\n\t\t\t\t{\n\t\t\t\t\tdict.put(target, true);\n\t\t\t\t\tterminals.push(target);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Checks if the terminal is the taget of the edge and if the\n\t\t\t// source should be stored in the result\n\t\t\telse if (target == terminal && source != null && source != terminal && sources)\n\t\t\t{\n\t\t\t\tif (!dict.get(source))\n\t\t\t\t{\n\t\t\t\t\tdict.put(source, true);\n\t\t\t\t\tterminals.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn terminals;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and returns the connected edges\n * as displayed on the screen.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxGraph.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar state = this.view.getState(edges[i]);\n\t\t\n\t\tvar src = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\tvar trg = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getPointForEvent\n * \n * Returns an <mxPoint> representing the given event in the unscaled,\n * non-translated coordinate space of <container> and applies the grid.\n * \n * Parameters:\n * \n * evt - Mousevent that contains the mouse pointer location.\n * addOffset - Optional boolean that specifies if the position should be\n * offset by half of the <gridSize>. Default is true.\n */\n mxGraph.prototype.getPointForEvent = function(evt, addOffset)\n {\n\tvar p = mxUtils.convertPoint(this.container,\n\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\n\tvar s = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar off = (addOffset != false) ? this.gridSize / 2 : 0;\n\t\n\tp.x = this.snap(p.x / s - tr.x - off);\n\tp.y = this.snap(p.y / s - tr.y - off);\n\t\n\treturn p;\n };\n\n/**\n * Function: getCells\n * \n * Returns the child vertices and edges of the given parent that are contained\n * in the given rectangle. The result is added to the optional result array,\n * which is returned. If no result array is specified then a new array is\n * created and returned.\n * \n * Parameters:\n * \n * x - X-coordinate of the rectangle.\n * y - Y-coordinate of the rectangle.\n * width - Width of the rectangle.\n * height - Height of the rectangle.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is current root of the view or the root of the model.\n * result - Optional array to store the result in.\n */\nmxGraph.prototype.getCells = function(x, y, width, height, parent, result)\n{\n\tresult = (result != null) ? result : [];\n\t\n\tif (width > 0 || height > 0)\n\t{\n\t\tvar model = this.getModel();\n\t\tvar right = x + width;\n\t\tvar bottom = y + height;\n\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getCurrentRoot();\n\t\t\t\n\t\t\tif (parent == null)\n\t\t\t{\n\t\t\t\tparent = model.getRoot();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\tvar state = this.view.getState(cell);\n\t\t\t\t\n\t\t\t\tif (state != null && this.isCellVisible(cell))\n\t\t\t\t{\n\t\t\t\t\tvar deg = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0;\n\t\t\t\t\tvar box = state;\n\t\t\t\t\t\n\t\t\t\t\tif (deg != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbox = mxUtils.getBoundingBox(box, deg);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif ((model.isEdge(cell) || model.isVertex(cell)) &&\n\t\t\t\t\t\tbox.x >= x && box.y + box.height <= bottom &&\n\t\t\t\t\t\tbox.y >= y && box.x + box.width <= right)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(cell);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.getCells(x, y, width, height, cell, result);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getCellsBeyond\n * \n * Returns the children of the given parent that are contained in the\n * halfpane from the given point (x0, y0) rightwards or downwards\n * depending on rightHalfpane and bottomHalfpane.\n * \n * Parameters:\n * \n * x0 - X-coordinate of the origin.\n * y0 - Y-coordinate of the origin.\n * parent - Optional <mxCell> whose children should be checked. Default is\n * <defaultParent>.\n * rightHalfpane - Boolean indicating if the cells in the right halfpane\n * from the origin should be returned.\n * bottomHalfpane - Boolean indicating if the cells in the bottom halfpane\n * from the origin should be returned.\n */\nmxGraph.prototype.getCellsBeyond = function(x0, y0, parent, rightHalfpane, bottomHalfpane)\n{\n\tvar result = [];\n\t\n\tif (rightHalfpane || bottomHalfpane)\n\t{\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getDefaultParent();\n\t\t}\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = this.model.getChildAt(parent, i);\n\t\t\t\tvar state = this.view.getState(child);\n\t\t\t\t\n\t\t\t\tif (this.isCellVisible(child) && state != null)\n\t\t\t\t{\n\t\t\t\t\tif ((!rightHalfpane || state.x >= x0) &&\n\t\t\t\t\t\t(!bottomHalfpane || state.y >= y0))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: findTreeRoots\n * \n * Returns all children in the given parent which do not have incoming\n * edges. If the result is empty then the with the greatest difference\n * between incoming and outgoing edges is returned.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * isolate - Optional boolean that specifies if edges should be ignored if\n * the opposite end is not a child of the given parent cell. Default is\n * false.\n * invert - Optional boolean that specifies if outgoing or incoming edges\n * should be counted for a tree root. If false then outgoing edges will be\n * counted. Default is false.\n */\nmxGraph.prototype.findTreeRoots = function(parent, isolate, invert)\n{\n\tisolate = (isolate != null) ? isolate : false;\n\tinvert = (invert != null) ? invert : false;\n\tvar roots = [];\n\t\n\tif (parent != null)\n\t{\n\t\tvar model = this.getModel();\n\t\tvar childCount = model.getChildCount(parent);\n\t\tvar best = null;\n\t\tvar maxDiff = 0;\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (this.model.isVertex(cell) && this.isCellVisible(cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getConnections(cell, (isolate) ? parent : null);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < conns.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.view.getVisibleTerminal(conns[j], true);\n\n                    if (src == cell)\n                    {\n                        fanOut++;\n                    }\n                    else\n                    {\n                        fanIn++;\n                    }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((invert && fanOut == 0 && fanIn > 0) ||\n\t\t\t\t\t(!invert && fanIn == 0 && fanOut > 0))\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar diff = (invert) ? fanIn - fanOut : fanOut - fanIn;\n\t\t\t\t\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: traverse\n * \n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Example:\n * \n * (code)\n * mxLog.show();\n * var cell = graph.getSelectionCell();\n * graph.traverse(cell, false, function(vertex, edge)\n * {\n *   mxLog.debug(graph.getLabel(vertex));\n * });\n * (end)\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - Optional boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * func - Visitor function that takes the current vertex and the incoming\n * edge as arguments. The traversal stops if the function returns false.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * visited - Optional <mxDictionary> from cells to true for the visited cells.\n * inverse - Optional boolean to traverse in inverse direction. Default is false.\n * This is ignored if directed is false.\n */\nmxGraph.prototype.traverse = function(vertex, directed, func, edge, visited, inverse)\n{\n\tif (func != null && vertex != null)\n\t{\n\t\tdirected = (directed != null) ? directed : true;\n\t\tinverse = (inverse != null) ? inverse : false;\n\t\tvisited = visited || new mxDictionary();\n\t\t\n\t\tif (!visited.get(vertex))\n\t\t{\n\t\t\tvisited.put(vertex, true);\n\t\t\tvar result = func(vertex, edge);\n\t\t\t\n\t\t\tif (result == null || result)\n\t\t\t{\n\t\t\t\tvar edgeCount = this.model.getEdgeCount(vertex);\n\t\t\t\t\n\t\t\t\tif (edgeCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar e = this.model.getEdgeAt(vertex, i);\n\t\t\t\t\t\tvar isSource = this.model.getTerminal(e, true) == vertex;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!directed || (!inverse == isSource))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar next = this.model.getTerminal(e, !isSource);\n\t\t\t\t\t\t\tthis.traverse(next, directed, func, e, visited, inverse);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Group: Selection\n */\n\n/**\n * Function: isCellSelected\n * \n * Returns true if the given cell is selected.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the selection state should be returned.\n */\nmxGraph.prototype.isCellSelected = function(cell)\n{\n\treturn this.getSelectionModel().isSelected(cell);\n};\n\n/**\n * Function: isSelectionEmpty\n * \n * Returns true if the selection is empty.\n */\nmxGraph.prototype.isSelectionEmpty = function()\n{\n\treturn this.getSelectionModel().isEmpty();\n};\n\n/**\n * Function: clearSelection\n * \n * Clears the selection using <mxGraphSelectionModel.clear>.\n */\nmxGraph.prototype.clearSelection = function()\n{\n\treturn this.getSelectionModel().clear();\n};\n\n/**\n * Function: getSelectionCount\n * \n * Returns the number of selected cells.\n */\nmxGraph.prototype.getSelectionCount = function()\n{\n\treturn this.getSelectionModel().cells.length;\n};\n\t\n/**\n * Function: getSelectionCell\n * \n * Returns the first cell from the array of selected <mxCells>.\n */\nmxGraph.prototype.getSelectionCell = function()\n{\n\treturn this.getSelectionModel().cells[0];\n};\n\n/**\n * Function: getSelectionCells\n * \n * Returns the array of selected <mxCells>.\n */\nmxGraph.prototype.getSelectionCells = function()\n{\n\treturn this.getSelectionModel().cells.slice();\n};\n\n/**\n * Function: setSelectionCell\n * \n * Sets the selection cell.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n */\nmxGraph.prototype.setSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().setCell(cell);\n};\n\n/**\n * Function: setSelectionCells\n * \n * Sets the selection cell.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n */\nmxGraph.prototype.setSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().setCells(cells);\n};\n\n/**\n * Function: addSelectionCell\n * \n * Adds the given cell to the selection.\n * \n * Parameters:\n * \n * cell - <mxCell> to be add to the selection.\n */\nmxGraph.prototype.addSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().addCell(cell);\n};\n\n/**\n * Function: addSelectionCells\n * \n * Adds the given cells to the selection.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be added to the selection.\n */\nmxGraph.prototype.addSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().addCells(cells);\n};\n\n/**\n * Function: removeSelectionCell\n * \n * Removes the given cell from the selection.\n * \n * Parameters:\n * \n * cell - <mxCell> to be removed from the selection.\n */\nmxGraph.prototype.removeSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().removeCell(cell);\n};\n\n/**\n * Function: removeSelectionCells\n * \n * Removes the given cells from the selection.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be removed from the selection.\n */\nmxGraph.prototype.removeSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().removeCells(cells);\n};\n\n/**\n * Function: selectRegion\n * \n * Selects and returns the cells inside the given rectangle for the\n * specified event.\n * \n * Parameters:\n * \n * rect - <mxRectangle> that represents the region to be selected.\n * evt - Mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectRegion = function(rect, evt)\n{\n\tvar cells = this.getCells(rect.x, rect.y, rect.width, rect.height);\n\tthis.selectCellsForEvent(cells, evt);\n\t\n\treturn cells;\n};\n\n/**\n * Function: selectNextCell\n * \n * Selects the next cell.\n */\nmxGraph.prototype.selectNextCell = function()\n{\n\tthis.selectCell(true);\n};\n\n/**\n * Function: selectPreviousCell\n * \n * Selects the previous cell.\n */\nmxGraph.prototype.selectPreviousCell = function()\n{\n\tthis.selectCell();\n};\n\n/**\n * Function: selectParentCell\n * \n * Selects the parent cell.\n */\nmxGraph.prototype.selectParentCell = function()\n{\n\tthis.selectCell(false, true);\n};\n\n/**\n * Function: selectChildCell\n * \n * Selects the first child cell.\n */\nmxGraph.prototype.selectChildCell = function()\n{\n\tthis.selectCell(false, false, true);\n};\n\n/**\n * Function: selectCell\n * \n * Selects the next, parent, first child or previous cell, if all arguments\n * are false.\n * \n * Parameters:\n * \n * isNext - Boolean indicating if the next cell should be selected.\n * isParent - Boolean indicating if the parent cell should be selected.\n * isChild - Boolean indicating if the first child cell should be selected.\n */\nmxGraph.prototype.selectCell = function(isNext, isParent, isChild)\n{\n\tvar sel = this.selectionModel;\n\tvar cell = (sel.cells.length > 0) ? sel.cells[0] : null;\n\t\n\tif (sel.cells.length > 1)\n\t{\n\t\tsel.clear();\n\t}\n\t\n\tvar parent = (cell != null) ?\n\t\tthis.model.getParent(cell) :\n\t\tthis.getDefaultParent();\n\t\n\tvar childCount = this.model.getChildCount(parent);\n\t\n\tif (cell == null && childCount > 0)\n\t{\n\t\tvar child = this.model.getChildAt(parent, 0);\n\t\tthis.setSelectionCell(child);\n\t}\n\telse if ((cell == null || isParent) &&\n\t\tthis.view.getState(parent) != null &&\n\t\tthis.model.getGeometry(parent) != null)\n\t{\n\t\tif (this.getCurrentRoot() != parent)\n\t\t{\n\t\t\tthis.setSelectionCell(parent);\n\t\t}\n\t}\n\telse if (cell != null && isChild)\n\t{\n\t\tvar tmp = this.model.getChildCount(cell);\n\t\t\n\t\tif (tmp > 0)\n\t\t{\n\t\t\tvar child = this.model.getChildAt(cell, 0);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t}\n\telse if (childCount > 0)\n\t{\n\t\tvar i = parent.getIndex(cell);\n\t\t\n\t\tif (isNext)\n\t\t{\n\t\t\ti++;\n\t\t\tvar child = this.model.getChildAt(parent, i % childCount);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti--;\n\t\t\tvar index =  (i < 0) ? childCount - 1 : i;\n\t\t\tvar child = this.model.getChildAt(parent, index);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t}\n};\n\n/**\n * Function: selectAll\n * \n * Selects all children of the given parent cell or the children of the\n * default parent if no parent is specified. To select leaf vertices and/or\n * edges use <selectCells>.\n * \n * Parameters:\n * \n * parent - Optional <mxCell> whose children should be selected.\n * Default is <defaultParent>.\n * descendants - Optional boolean specifying whether all descendants should be\n * selected. Default is false.\n */\nmxGraph.prototype.selectAll = function(parent, descendants)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tvar cells = (descendants) ? this.model.filterDescendants(function(cell)\n\t{\n\t\treturn cell != parent;\n\t}, parent) : this.model.getChildren(parent);\n\t\n\tif (cells != null)\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Function: selectVertices\n * \n * Select all vertices inside the given parent or the default parent.\n */\nmxGraph.prototype.selectVertices = function(parent)\n{\n\tthis.selectCells(true, false, parent);\n};\n\n/**\n * Function: selectVertices\n * \n * Select all vertices inside the given parent or the default parent.\n */\nmxGraph.prototype.selectEdges = function(parent)\n{\n\tthis.selectCells(false, true, parent);\n};\n\n/**\n * Function: selectCells\n * \n * Selects all vertices and/or edges depending on the given boolean\n * arguments recursively, starting at the given parent or the default\n * parent if no parent is specified. Use <selectAll> to select all cells.\n * For vertices, only cells with no children are selected.\n * \n * Parameters:\n * \n * vertices - Boolean indicating if vertices should be selected.\n * edges - Boolean indicating if edges should be selected.\n * parent - Optional <mxCell> that acts as the root of the recursion.\n * Default is <defaultParent>.\n */\nmxGraph.prototype.selectCells = function(vertices, edges, parent)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tvar filter = mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.view.getState(cell) != null &&\n\t\t\t((this.model.getChildCount(cell) == 0 && this.model.isVertex(cell) && vertices\n\t\t\t&& !this.model.isEdge(this.model.getParent(cell))) ||\n\t\t\t(this.model.isEdge(cell) && edges));\n\t});\n\t\n\tvar cells = this.model.filterDescendants(filter, parent);\n\tthis.setSelectionCells(cells);\n};\n\n/**\n * Function: selectCellForEvent\n * \n * Selects the given cell by either adding it to the selection or\n * replacing the selection depending on whether the given mouse event is a\n * toggle event.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n * evt - Optional mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectCellForEvent = function(cell, evt)\n{\n\tvar isSelected = this.isCellSelected(cell);\n\t\n\tif (this.isToggleEvent(evt))\n\t{\n\t\tif (isSelected)\n\t\t{\n\t\t\tthis.removeSelectionCell(cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addSelectionCell(cell);\n\t\t}\n\t}\n\telse if (!isSelected || this.getSelectionCount() != 1)\n\t{\n\t\tthis.setSelectionCell(cell);\n\t}\n};\n\n/**\n * Function: selectCellsForEvent\n * \n * Selects the given cells by either adding them to the selection or\n * replacing the selection depending on whether the given mouse event is a\n * toggle event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n * evt - Optional mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectCellsForEvent = function(cells, evt)\n{\n\tif (this.isToggleEvent(evt))\n\t{\n\t\tthis.addSelectionCells(cells);\n\t}\n\telse\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Group: Selection state\n */\n\n/**\n * Function: createHandler\n * \n * Creates a new handler for the given cell state. This implementation\n * returns a new <mxEdgeHandler> of the corresponding cell is an edge,\n * otherwise it returns an <mxVertexHandler>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose handler should be created.\n */\nmxGraph.prototype.createHandler = function(state)\n{\n\tvar result = null;\n\t\n\tif (state != null)\n\t{\n\t\tif (this.model.isEdge(state.cell))\n\t\t{\n\t\t\tvar source = state.getVisibleTerminalState(true);\n\t\t\tvar target = state.getVisibleTerminalState(false);\n\t\t\tvar geo = this.getCellGeometry(state.cell);\n\t\t\t\n\t\t\tvar edgeStyle = this.view.getEdgeStyle(state, (geo != null) ? geo.points : null, source, target);\n\t\t\tresult = this.createEdgeHandler(state, edgeStyle);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = this.createVertexHandler(state);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createVertexHandler\n * \n * Hooks to create a new <mxVertexHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createVertexHandler = function(state)\n{\n\treturn new mxVertexHandler(state);\n};\n\n/**\n * Function: createEdgeHandler\n * \n * Hooks to create a new <mxEdgeHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createEdgeHandler = function(state, edgeStyle)\n{\n\tvar result = null;\n\t\n\tif (edgeStyle == mxEdgeStyle.Loop ||\n\t\tedgeStyle == mxEdgeStyle.ElbowConnector ||\n\t\tedgeStyle == mxEdgeStyle.SideToSide ||\n\t\tedgeStyle == mxEdgeStyle.TopToBottom)\n\t{\n\t\tresult = this.createElbowEdgeHandler(state);\n\t}\n\telse if (edgeStyle == mxEdgeStyle.SegmentConnector || \n\t\t\tedgeStyle == mxEdgeStyle.OrthConnector)\n\t{\n\t\tresult = this.createEdgeSegmentHandler(state);\n\t}\n\telse\n\t{\n\t\tresult = new mxEdgeHandler(state);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createEdgeSegmentHandler\n * \n * Hooks to create a new <mxEdgeSegmentHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createEdgeSegmentHandler = function(state)\n{\n\treturn new mxEdgeSegmentHandler(state);\n};\n\n/**\n * Function: createElbowEdgeHandler\n * \n * Hooks to create a new <mxElbowEdgeHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createElbowEdgeHandler = function(state)\n{\n\treturn new mxElbowEdgeHandler(state);\n};\n\n/**\n * Group: Graph events\n */\n\n/**\n * Function: addMouseListener\n * \n * Adds a listener to the graph event dispatch loop. The listener\n * must implement the mouseDown, mouseMove and mouseUp methods\n * as shown in the <mxMouseEvent> class.\n * \n * Parameters:\n * \n * listener - Listener to be added to the graph event listeners.\n */\nmxGraph.prototype.addMouseListener = function(listener)\n{\n\tif (this.mouseListeners == null)\n\t{\n\t\tthis.mouseListeners = [];\n\t}\n\t\n\tthis.mouseListeners.push(listener);\n};\n\n/**\n * Function: removeMouseListener\n * \n * Removes the specified graph listener.\n * \n * Parameters:\n * \n * listener - Listener to be removed from the graph event listeners.\n */\nmxGraph.prototype.removeMouseListener = function(listener)\n{\n\tif (this.mouseListeners != null)\n\t{\n\t\tfor (var i = 0; i < this.mouseListeners.length; i++)\n\t\t{\n\t\t\tif (this.mouseListeners[i] == listener)\n\t\t\t{\n\t\t\t\tthis.mouseListeners.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: updateMouseEvent\n * \n * Sets the graphX and graphY properties if the given <mxMouseEvent> if\n * required and returned the event.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> to be updated.\n * evtName - Name of the mouse event.\n */\nmxGraph.prototype.updateMouseEvent = function(me, evtName)\n{\n\tif (me.graphX == null || me.graphY == null)\n\t{\n\t\tvar pt = mxUtils.convertPoint(this.container, me.getX(), me.getY());\n\t\t\n\t\tme.graphX = pt.x - this.panDx;\n\t\tme.graphY = pt.y - this.panDy;\n\t\t\n\t\t// Searches for rectangles using method if native hit detection is disabled on shape\n\t\tif (me.getCell() == null && this.isMouseDown && evtName == mxEvent.MOUSE_MOVE)\n\t\t{\n\t\t\tme.state = this.view.getState(this.getCellAt(pt.x, pt.y, null, null, null, function(state)\n\t\t\t{\n\t\t\t\treturn state.shape == null || state.shape.paintBackground != mxRectangleShape.prototype.paintBackground ||\n\t\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1' ||\n\t\t\t\t\t(state.shape.fill != null && state.shape.fill != mxConstants.NONE);\n\t\t\t}));\n\t\t}\n\t}\n\t\n\treturn me;\n};\n\n/**\n * Function: getStateForEvent\n * \n * Returns the state for the given touch event.\n */\nmxGraph.prototype.getStateForTouchEvent = function(evt)\n{\n\tvar x = mxEvent.getClientX(evt);\n\tvar y = mxEvent.getClientY(evt);\n\t\n\t// Dispatches the drop event to the graph which\n\t// consumes and executes the source function\n\tvar pt = mxUtils.convertPoint(this.container, x, y);\n\n\treturn this.view.getState(this.getCellAt(pt.x, pt.y));\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the event should be ignored in <fireMouseEvent>.\n */\nmxGraph.prototype.isEventIgnored = function(evtName, me, sender)\n{\n\tvar mouseEvent = mxEvent.isMouseEvent(me.getEvent());\n\tvar result = false;\n\n\t// Drops events that are fired more than once\n\tif (me.getEvent() == this.lastEvent)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tthis.lastEvent = me.getEvent();\n\t}\n\n\t// Installs event listeners to capture the complete gesture from the event source\n\t// for non-MS touch events as a workaround for all events for the same geture being\n\t// fired from the event source even if that was removed from the DOM.\n\tif (this.eventSource != null && evtName != mxEvent.MOUSE_MOVE)\n\t{\n\t\tmxEvent.removeGestureListeners(this.eventSource, null, this.mouseMoveRedirect, this.mouseUpRedirect);\n\t\tthis.mouseMoveRedirect = null;\n\t\tthis.mouseUpRedirect = null;\n\t\tthis.eventSource = null;\n\t}\n\telse if (!mxClient.IS_GC && this.eventSource != null && me.getSource() != this.eventSource)\n\t{\n\t\tresult = true;\n\t}\n\telse if (mxClient.IS_TOUCH && evtName == mxEvent.MOUSE_DOWN && !mouseEvent && !mxEvent.isPenEvent(me.getEvent()))\n\t{\n\t\tthis.eventSource = me.getSource();\n\n\t\tthis.mouseMoveRedirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, this.getStateForTouchEvent(evt)));\n\t\t});\n\t\tthis.mouseUpRedirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, this.getStateForTouchEvent(evt)));\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(this.eventSource, null, this.mouseMoveRedirect, this.mouseUpRedirect);\n\t}\n\n\t// Factored out the workarounds for FF to make it easier to override/remove\n\t// Note this method has side-effects!\n\tif (this.isSyntheticEventIgnored(evtName, me, sender))\n\t{\n\t\tresult = true;\n\t}\n\n\t// Never fires mouseUp/-Down for double clicks\n\tif (!mxEvent.isPopupTrigger(this.lastEvent) && evtName != mxEvent.MOUSE_MOVE && this.lastEvent.detail == 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\t// Filters out of sequence events or mixed event types during a gesture\n\tif (evtName == mxEvent.MOUSE_UP && this.isMouseDown)\n\t{\n\t\tthis.isMouseDown = false;\n\t}\n\telse if (evtName == mxEvent.MOUSE_DOWN && !this.isMouseDown)\n\t{\n\t\tthis.isMouseDown = true;\n\t\tthis.isMouseTrigger = mouseEvent;\n\t}\n\t// Drops mouse events that are fired during touch gestures as a workaround for Webkit\n\t// and mouse events that are not in sync with the current internal button state\n\telse if (!result && (((!mxClient.IS_FF || evtName != mxEvent.MOUSE_MOVE) &&\n\t\tthis.isMouseDown && this.isMouseTrigger != mouseEvent) ||\n\t\t(evtName == mxEvent.MOUSE_DOWN && this.isMouseDown) ||\n\t\t(evtName == mxEvent.MOUSE_UP && !this.isMouseDown)))\n\t{\n\t\tresult = true;\n\t}\n\t\n\tif (!result && evtName == mxEvent.MOUSE_DOWN)\n\t{\n\t\tthis.lastMouseX = me.getX();\n\t\tthis.lastMouseY = me.getY();\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isSyntheticEventIgnored\n * \n * Hook for ignoring synthetic mouse events after touchend in Firefox.\n */\nmxGraph.prototype.isSyntheticEventIgnored = function(evtName, me, sender)\n{\n\tvar result = false;\n\tvar mouseEvent = mxEvent.isMouseEvent(me.getEvent());\n\t\n\t// LATER: This does not cover all possible cases that can go wrong in FF\n\tif (this.ignoreMouseEvents && mouseEvent && evtName != mxEvent.MOUSE_MOVE)\n\t{\n\t\tthis.ignoreMouseEvents = evtName != mxEvent.MOUSE_UP;\n\t\tresult = true;\n\t}\n\telse if (mxClient.IS_FF && !mouseEvent && evtName == mxEvent.MOUSE_UP)\n\t{\n\t\tthis.ignoreMouseEvents = true;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: isEventSourceIgnored\n * \n * Returns true if the event should be ignored in <fireMouseEvent>. This\n * implementation returns true for select, option and input (if not of type\n * checkbox, radio, button, submit or file) event sources if the event is not\n * a mouse event or a left mouse button press event.\n * \n * Parameters:\n * \n * evtName - The name of the event.\n * me - <mxMouseEvent> that should be ignored.\n */\nmxGraph.prototype.isEventSourceIgnored = function(evtName, me)\n{\n\tvar source = me.getSource();\n\tvar name = (source.nodeName != null) ? source.nodeName.toLowerCase() : '';\n\tvar candidate = !mxEvent.isMouseEvent(me.getEvent()) || mxEvent.isLeftMouseButton(me.getEvent());\n\t\n\treturn evtName == mxEvent.MOUSE_DOWN && candidate && (name == 'select' || name == 'option' ||\n\t\t(name == 'input' && source.type != 'checkbox' && source.type != 'radio' &&\n\t\tsource.type != 'button' && source.type != 'submit' && source.type != 'file'));\n};\n\n/**\n * Function: getEventState\n * \n * Returns the <mxCellState> to be used when firing the mouse event for the\n * given state. This implementation returns the given state.\n * \n * Parameters:\n * \n * <mxCellState> - State whose event source should be returned.\n */\nmxGraph.prototype.getEventState = function(state)\n{\n\treturn state;\n};\n\n/**\n * Function: fireMouseEvent\n * \n * Dispatches the given event in the graph event dispatch loop. Possible\n * event names are <mxEvent.MOUSE_DOWN>, <mxEvent.MOUSE_MOVE> and\n * <mxEvent.MOUSE_UP>. All listeners are invoked for all events regardless\n * of the consumed state of the event.\n * \n * Parameters:\n * \n * evtName - String that specifies the type of event to be dispatched.\n * me - <mxMouseEvent> to be fired.\n * sender - Optional sender argument. Default is this.\n */\nmxGraph.prototype.fireMouseEvent = function(evtName, me, sender)\n{\n\tif (this.isEventSourceIgnored(evtName, me))\n\t{\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.hide();\n\t\t}\n\t\t\n\t\treturn;\n\t}\n\t\n\tif (sender == null)\n\t{\n\t\tsender = this;\n\t}\n\n\t// Updates the graph coordinates in the event\n\tme = this.updateMouseEvent(me, evtName);\n\n\t// Detects and processes double taps for touch-based devices which do not have native double click events\n\t// or where detection of double click is not always possible (quirks, IE10+). Note that this can only handle\n\t// double clicks on cells because the sequence of events in IE prevents detection on the background, it fires\n\t// two mouse ups, one of which without a cell but no mousedown for the second click which means we cannot\n\t// detect which mouseup(s) are part of the first click, ie we do not know when the first click ends.\n\tif ((!this.nativeDblClickEnabled && !mxEvent.isPopupTrigger(me.getEvent())) || (this.doubleTapEnabled &&\n\t\tmxClient.IS_TOUCH && (mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent()))))\n\t{\n\t\tvar currentTime = new Date().getTime();\n\t\t\n\t\t// NOTE: Second mouseDown for double click missing in quirks mode\n\t\tif ((!mxClient.IS_QUIRKS && evtName == mxEvent.MOUSE_DOWN) || (mxClient.IS_QUIRKS && evtName == mxEvent.MOUSE_UP && !this.fireDoubleClick))\n\t\t{\n\t\t\tif (this.lastTouchEvent != null && this.lastTouchEvent != me.getEvent() &&\n\t\t\t\tcurrentTime - this.lastTouchTime < this.doubleTapTimeout &&\n\t\t\t\tMath.abs(this.lastTouchX - me.getX()) < this.doubleTapTolerance &&\n\t\t\t\tMath.abs(this.lastTouchY - me.getY()) < this.doubleTapTolerance &&\n\t\t\t\tthis.doubleClickCounter < 2)\n\t\t\t{\n\t\t\t\tthis.doubleClickCounter++;\n\t\t\t\tvar doubleClickFired = false;\n\t\t\t\t\n\t\t\t\tif (evtName == mxEvent.MOUSE_UP)\n\t\t\t\t{\n\t\t\t\t\tif (me.getCell() == this.lastTouchCell && this.lastTouchCell != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.lastTouchTime = 0;\n\t\t\t\t\t\tvar cell = this.lastTouchCell;\n\t\t\t\t\t\tthis.lastTouchCell = null;\n\n\t\t\t\t\t\t// Fires native dblclick event via event source\n\t\t\t\t\t\t// NOTE: This fires two double click events on edges in quirks mode. While\n\t\t\t\t\t\t// trying to fix this, we realized that nativeDoubleClick can be disabled for\n\t\t\t\t\t\t// quirks and IE10+ (or we didn't find the case mentioned above where it\n\t\t\t\t\t\t// would not work), ie. all double clicks seem to be working without this.\n\t\t\t\t\t\tif (mxClient.IS_QUIRKS)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tme.getSource().fireEvent('ondblclick');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.dblClick(me.getEvent(), cell);\n\t\t\t\t\t\tdoubleClickFired = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.fireDoubleClick = true;\n\t\t\t\t\tthis.lastTouchTime = 0;\n\t\t\t\t}\n\n\t\t\t\t// Do not ignore mouse up in quirks in this case\n\t\t\t\tif (!mxClient.IS_QUIRKS || doubleClickFired)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(me.getEvent());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.lastTouchEvent == null || this.lastTouchEvent != me.getEvent())\n\t\t\t{\n\t\t\t\tthis.lastTouchCell = me.getCell();\n\t\t\t\tthis.lastTouchX = me.getX();\n\t\t\t\tthis.lastTouchY = me.getY();\n\t\t\t\tthis.lastTouchTime = currentTime;\n\t\t\t\tthis.lastTouchEvent = me.getEvent();\n\t\t\t\tthis.doubleClickCounter = 0;\n\t\t\t}\n\t\t}\n\t\telse if ((this.isMouseDown || evtName == mxEvent.MOUSE_UP) && this.fireDoubleClick)\n\t\t{\n\t\t\tthis.fireDoubleClick = false;\n\t\t\tvar cell = this.lastTouchCell;\n\t\t\tthis.lastTouchCell = null;\n\t\t\tthis.isMouseDown = false;\n\t\t\t\n\t\t\t// Workaround for Chrome/Safari not firing native double click events for double touch on background\n\t\t\tvar valid = (cell != null) || ((mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent())) &&\n\t\t\t\t(mxClient.IS_GC || mxClient.IS_SF));\n\t\t\t\n\t\t\tif (valid && Math.abs(this.lastTouchX - me.getX()) < this.doubleTapTolerance &&\n\t\t\t\tMath.abs(this.lastTouchY - me.getY()) < this.doubleTapTolerance)\n\t\t\t{\n\t\t\t\tthis.dblClick(me.getEvent(), cell);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.consume(me.getEvent());\n\t\t\t}\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (!this.isEventIgnored(evtName, me, sender))\n\t{\n\t\t// Updates the event state via getEventState\n\t\tme.state = this.getEventState(me.getState());\n\t\tthis.fireEvent(new mxEventObject(mxEvent.FIRE_MOUSE_EVENT, 'eventName', evtName, 'event', me));\n\t\t\n\t\tif ((mxClient.IS_OP || mxClient.IS_SF || mxClient.IS_GC || mxClient.IS_IE11 ||\n\t\t\t(mxClient.IS_IE && mxClient.IS_SVG) || me.getEvent().target != this.container))\n\t\t{\n\t\t\tif (evtName == mxEvent.MOUSE_MOVE && this.isMouseDown && this.autoScroll && !mxEvent.isMultiTouchEvent(me.getEvent))\n\t\t\t{\n\t\t\t\tthis.scrollPointToVisible(me.getGraphX(), me.getGraphY(), this.autoExtend);\n\t\t\t}\n\t\t\telse if (evtName == mxEvent.MOUSE_UP && this.ignoreScrollbars && this.translateToScrollPosition &&\n\t\t\t\t\t(this.container.scrollLeft != 0 || this.container.scrollTop != 0))\n\t\t\t{\n\t\t\t\tvar s = this.view.scale;\n\t\t\t\tvar tr = this.view.translate;\n\t\t\t\tthis.view.setTranslate(tr.x - this.container.scrollLeft / s, tr.y - this.container.scrollTop / s);\n\t\t\t\tthis.container.scrollLeft = 0;\n\t\t\t\tthis.container.scrollTop = 0;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.mouseListeners != null)\n\t\t\t{\n\t\t\t\tvar args = [sender, me];\n\t\n\t\t\t\t// Does not change returnValue in Opera\n\t\t\t\tif (!me.getEvent().preventDefault)\n\t\t\t\t{\n\t\t\t\t\tme.getEvent().returnValue = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < this.mouseListeners.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar l = this.mouseListeners[i];\n\t\t\t\t\t\n\t\t\t\t\tif (evtName == mxEvent.MOUSE_DOWN)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseDown.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t\telse if (evtName == mxEvent.MOUSE_MOVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseMove.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t\telse if (evtName == mxEvent.MOUSE_UP)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseUp.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Invokes the click handler\n\t\t\tif (evtName == mxEvent.MOUSE_UP)\n\t\t\t{\n\t\t\t\tthis.click(me);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Detects tapAndHold events using a timer\n\t\tif ((mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent())) &&\n\t\t\tevtName == mxEvent.MOUSE_DOWN && this.tapAndHoldEnabled && !this.tapAndHoldInProgress)\n\t\t{\n\t\t\tthis.tapAndHoldInProgress = true;\n\t\t\tthis.initialTouchX = me.getGraphX();\n\t\t\tthis.initialTouchY = me.getGraphY();\n\t\t\t\n\t\t\tvar handler = function()\n\t\t\t{\n\t\t\t\tif (this.tapAndHoldValid)\n\t\t\t\t{\n\t\t\t\t\tthis.tapAndHold(me);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.tapAndHoldInProgress = false;\n\t\t\t\tthis.tapAndHoldValid = false;\n\t\t\t};\n\t\t\t\n\t\t\tif (this.tapAndHoldThread)\n\t\t\t{\n\t\t\t\twindow.clearTimeout(this.tapAndHoldThread);\n\t\t\t}\n\t\n\t\t\tthis.tapAndHoldThread = window.setTimeout(mxUtils.bind(this, handler), this.tapAndHoldDelay);\n\t\t\tthis.tapAndHoldValid = true;\n\t\t}\n\t\telse if (evtName == mxEvent.MOUSE_UP)\n\t\t{\n\t\t\tthis.tapAndHoldInProgress = false;\n\t\t\tthis.tapAndHoldValid = false;\n\t\t}\n\t\telse if (this.tapAndHoldValid)\n\t\t{\n\t\t\tthis.tapAndHoldValid =\n\t\t\t\tMath.abs(this.initialTouchX - me.getGraphX()) < this.tolerance &&\n\t\t\t\tMath.abs(this.initialTouchY - me.getGraphY()) < this.tolerance;\n\t\t}\n\n\t\t// Stops editing for all events other than from cellEditor\n\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isEditing() && !this.cellEditor.isEventSource(me.getEvent()))\n\t\t{\n\t\t\tthis.stopEditing(!this.isInvokesStopCellEditing());\n\t\t}\n\n\t\tthis.consumeMouseEvent(evtName, me, sender);\n\t}\n};\n\n/**\n * Function: consumeMouseEvent\n * \n * Consumes the given <mxMouseEvent> if it's a touchStart event.\n */\nmxGraph.prototype.consumeMouseEvent = function(evtName, me, sender)\n{\n\t// Workaround for duplicate click in Windows 8 with Chrome/FF/Opera with touch\n\tif (evtName == mxEvent.MOUSE_DOWN && mxEvent.isTouchEvent(me.getEvent()))\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: fireGestureEvent\n * \n * Dispatches a <mxEvent.GESTURE> event. The following example will resize the\n * cell under the mouse based on the scale property of the native touch event.\n * \n * (code)\n * graph.addListener(mxEvent.GESTURE, function(sender, eo)\n * {\n *   var evt = eo.getProperty('event');\n *   var state = graph.view.getState(eo.getProperty('cell'));\n *   \n *   if (graph.isEnabled() && graph.isCellResizable(state.cell) && Math.abs(1 - evt.scale) > 0.2)\n *   {\n *     var scale = graph.view.scale;\n *     var tr = graph.view.translate;\n *     \n *     var w = state.width * evt.scale;\n *     var h = state.height * evt.scale;\n *     var x = state.x - (w - state.width) / 2;\n *     var y = state.y - (h - state.height) / 2;\n *     \n *     var bounds = new mxRectangle(graph.snap(x / scale) - tr.x,\n *     \t\tgraph.snap(y / scale) - tr.y, graph.snap(w / scale), graph.snap(h / scale));\n *     graph.resizeCell(state.cell, bounds);\n *     eo.consume();\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * evt - Gestureend event that represents the gesture.\n * cell - Optional <mxCell> associated with the gesture.\n */\nmxGraph.prototype.fireGestureEvent = function(evt, cell)\n{\n\t// Resets double tap event handling when gestures take place\n\tthis.lastTouchTime = 0;\n\tthis.fireEvent(new mxEventObject(mxEvent.GESTURE, 'event', evt, 'cell', cell));\n};\n\n/**\n * Function: destroy\n * \n * Destroys the graph and all its resources.\n */\nmxGraph.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\t\t\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.selectionCellsHandler != null)\n\t\t{\n\t\t\tthis.selectionCellsHandler.destroy();\n\t\t}\n\n\t\tif (this.panningHandler != null)\n\t\t{\n\t\t\tthis.panningHandler.destroy();\n\t\t}\n\n\t\tif (this.popupMenuHandler != null)\n\t\t{\n\t\t\tthis.popupMenuHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.connectionHandler != null)\n\t\t{\n\t\t\tthis.connectionHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.graphHandler != null)\n\t\t{\n\t\t\tthis.graphHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.cellEditor != null)\n\t\t{\n\t\t\tthis.cellEditor.destroy();\n\t\t}\n\t\t\n\t\tif (this.view != null)\n\t\t{\n\t\t\tthis.view.destroy();\n\t\t}\n\n\t\tif (this.model != null && this.graphModelChangeListener != null)\n\t\t{\n\t\t\tthis.model.removeListener(this.graphModelChangeListener);\n\t\t\tthis.graphModelChangeListener = null;\n\t\t}\n\n\t\tthis.container = null;\n\t}\n};\n\n__mxOutput.mxGraph = typeof mxGraph !== 'undefined' ? mxGraph : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellOverlay\n *\n * Extends <mxEventSource> to implement a graph overlay, represented by an icon\n * and a tooltip. Overlays can handle and fire <click> events and are added to\n * the graph using <mxGraph.addCellOverlay>, and removed using\n * <mxGraph.removeCellOverlay>, or <mxGraph.removeCellOverlays> to remove all overlays.\n * The <mxGraph.getCellOverlays> function returns the array of overlays for a given\n * cell in a graph. If multiple overlays exist for the same cell, then\n * <getBounds> should be overridden in at least one of the overlays.\n * \n * Overlays appear on top of all cells in a special layer. If this is not\n * desirable, then the image must be rendered as part of the shape or label of\n * the cell instead.\n *\n * Example:\n * \n * The following adds a new overlays for a given vertex and selects the cell\n * if the overlay is clicked.\n *\n * (code)\n * var overlay = new mxCellOverlay(img, html);\n * graph.addCellOverlay(vertex, overlay);\n * overlay.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var cell = evt.getProperty('cell');\n *   graph.setSelectionCell(cell);\n * });\n * (end)\n * \n * For cell overlays to be printed use <mxPrintPreview.printOverlays>.\n *\n * Event: mxEvent.CLICK\n *\n * Fires when the user clicks on the overlay. The <code>event</code> property\n * contains the corresponding mouse event and the <code>cell</code> property\n * contains the cell. For touch devices this is fired if the element receives\n * a touchend event.\n * \n * Constructor: mxCellOverlay\n *\n * Constructs a new overlay using the given image and tooltip.\n * \n * Parameters:\n * \n * image - <mxImage> that represents the icon to be displayed.\n * tooltip - Optional string that specifies the tooltip.\n * align - Optional horizontal alignment for the overlay. Possible\n * values are <ALIGN_LEFT>, <ALIGN_CENTER> and <ALIGN_RIGHT>\n * (default).\n * verticalAlign - Vertical alignment for the overlay. Possible\n * values are <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>\n * (default).\n */\nfunction mxCellOverlay(image, tooltip, align, verticalAlign, offset, cursor)\n{\n\tthis.image = image;\n\tthis.tooltip = tooltip;\n\tthis.align = (align != null) ? align : this.align;\n\tthis.verticalAlign = (verticalAlign != null) ? verticalAlign : this.verticalAlign;\n\tthis.offset = (offset != null) ? offset : new mxPoint();\n\tthis.cursor = (cursor != null) ? cursor : 'help';\n};\n\n/**\n * Extends mxEventSource.\n */\nmxCellOverlay.prototype = new mxEventSource();\nmxCellOverlay.prototype.constructor = mxCellOverlay;\n\n/**\n * Variable: image\n *\n * Holds the <mxImage> to be used as the icon.\n */\nmxCellOverlay.prototype.image = null;\n\n/**\n * Variable: tooltip\n * \n * Holds the optional string to be used as the tooltip.\n */\nmxCellOverlay.prototype.tooltip = null;\n\n/**\n * Variable: align\n * \n * Holds the horizontal alignment for the overlay. Default is\n * <mxConstants.ALIGN_RIGHT>. For edges, the overlay always appears in the\n * center of the edge.\n */\nmxCellOverlay.prototype.align = mxConstants.ALIGN_RIGHT;\n\n/**\n * Variable: verticalAlign\n * \n * Holds the vertical alignment for the overlay. Default is\n * <mxConstants.ALIGN_BOTTOM>. For edges, the overlay always appears in the\n * center of the edge.\n */\nmxCellOverlay.prototype.verticalAlign = mxConstants.ALIGN_BOTTOM;\n\n/**\n * Variable: offset\n * \n * Holds the offset as an <mxPoint>. The offset will be scaled according to the\n * current scale.\n */\nmxCellOverlay.prototype.offset = null;\n\n/**\n * Variable: cursor\n * \n * Holds the cursor for the overlay. Default is 'help'.\n */\nmxCellOverlay.prototype.cursor = null;\n\n/**\n * Variable: defaultOverlap\n * \n * Defines the overlapping for the overlay, that is, the proportional distance\n * from the origin to the point defined by the alignment. Default is 0.5.\n */\nmxCellOverlay.prototype.defaultOverlap = 0.5;\n\n/**\n * Function: getBounds\n * \n * Returns the bounds of the overlay for the given <mxCellState> as an\n * <mxRectangle>. This should be overridden when using multiple overlays\n * per cell so that the overlays do not overlap.\n * \n * The following example will place the overlay along an edge (where\n * x=[-1..1] from the start to the end of the edge and y is the\n * orthogonal offset in px).\n * \n * (code)\n * overlay.getBounds = function(state)\n * {\n *   var bounds = mxCellOverlay.prototype.getBounds.apply(this, arguments);\n *   \n *   if (state.view.graph.getModel().isEdge(state.cell))\n *   {\n *     var pt = state.view.getPoint(state, {x: 0, y: 0, relative: true});\n *     \n *     bounds.x = pt.x - bounds.width / 2;\n *     bounds.y = pt.y - bounds.height / 2;\n *   }\n *   \n *   return bounds;\n * };\n * (end)\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the current state of the\n * associated cell.\n */\nmxCellOverlay.prototype.getBounds = function(state)\n{\n\tvar isEdge = state.view.graph.getModel().isEdge(state.cell);\n\tvar s = state.view.scale;\n\tvar pt = null;\n\n\tvar w = this.image.width;\n\tvar h = this.image.height;\n\t\n\tif (isEdge)\n\t{\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tif (pts.length % 2 == 1)\n\t\t{\n\t\t\tpt = pts[Math.floor(pts.length / 2)];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar idx = pts.length / 2;\n\t\t\tvar p0 = pts[idx-1];\n\t\t\tvar p1 = pts[idx];\n\t\t\tpt = new mxPoint(p0.x + (p1.x - p0.x) / 2,\n\t\t\t\tp0.y + (p1.y - p0.y) / 2);\n\t\t}\n\t}\n\telse\n\t{\n\t\tpt = new mxPoint();\n\t\t\n\t\tif (this.align == mxConstants.ALIGN_LEFT)\n\t\t{\n\t\t\tpt.x = state.x;\n\t\t}\n\t\telse if (this.align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tpt.x = state.x + state.width / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpt.x = state.x + state.width;\n\t\t}\n\t\t\n\t\tif (this.verticalAlign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tpt.y = state.y;\n\t\t}\n\t\telse if (this.verticalAlign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tpt.y = state.y + state.height / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpt.y = state.y + state.height;\n\t\t}\n\t}\n\n\treturn new mxRectangle(Math.round(pt.x - (w * this.defaultOverlap - this.offset.x) * s),\n\t\tMath.round(pt.y - (h * this.defaultOverlap - this.offset.y) * s), w * s, h * s);\n};\n\n/**\n * Function: toString\n * \n * Returns the textual representation of the overlay to be used as the\n * tooltip. This implementation returns <tooltip>.\n */\nmxCellOverlay.prototype.toString = function()\n{\n\treturn this.tooltip;\n};\n\n__mxOutput.mxCellOverlay = typeof mxCellOverlay !== 'undefined' ? mxCellOverlay : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxOutline\n *\n * Implements an outline (aka overview) for a graph. Set <updateOnPan> to true\n * to enable updates while the source graph is panning.\n * \n * Example:\n * \n * (code)\n * var outline = new mxOutline(graph, div);\n * (end)\n * \n * If an outline is used in an <mxWindow> in IE8 standards mode, the following\n * code makes sure that the shadow filter is not inherited and that any\n * transparent elements in the graph do not show the page background, but the\n * background of the graph container.\n * \n * (code)\n * if (document.documentMode == 8)\n * {\n *   container.style.filter = 'progid:DXImageTransform.Microsoft.alpha(opacity=100)';\n * }\n * (end)\n * \n * To move the graph to the top, left corner the following code can be used.\n * \n * (code)\n * var scale = graph.view.scale;\n * var bounds = graph.getGraphBounds();\n * graph.view.setTranslate(-bounds.x / scale, -bounds.y / scale);\n * (end)\n * \n * To toggle the suspended mode, the following can be used.\n * \n * (code)\n * outline.suspended = !outln.suspended;\n * if (!outline.suspended)\n * {\n *   outline.update(true);\n * }\n * (end)\n * \n * Constructor: mxOutline\n *\n * Constructs a new outline for the specified graph inside the given\n * container.\n * \n * Parameters:\n * \n * source - <mxGraph> to create the outline for.\n * container - DOM node that will contain the outline.\n */\nfunction mxOutline(source, container)\n{\n\tthis.source = source;\n\n\tif (container != null)\n\t{\n\t\tthis.init(container);\n\t}\n};\n\n/**\n * Function: source\n * \n * Reference to the source <mxGraph>.\n */\nmxOutline.prototype.source = null;\n\n/**\n * Function: outline\n * \n * Reference to the <mxGraph> that renders the outline.\n */\nmxOutline.prototype.outline = null;\n\n/**\n * Function: graphRenderHint\n * \n * Renderhint to be used for the outline graph. Default is faster.\n */\nmxOutline.prototype.graphRenderHint = mxConstants.RENDERING_HINT_FASTER;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxOutline.prototype.enabled = true;\n\n/**\n * Variable: showViewport\n * \n * Specifies a viewport rectangle should be shown. Default is true.\n */\nmxOutline.prototype.showViewport = true;\n\n/**\n * Variable: border\n * \n * Border to be added at the bottom and right. Default is 10.\n */\nmxOutline.prototype.border = 10;\n\n/**\n * Variable: enabled\n * \n * Specifies the size of the sizer handler. Default is 8.\n */\nmxOutline.prototype.sizerSize = 8;\n\n/**\n * Variable: labelsVisible\n * \n * Specifies if labels should be visible in the outline. Default is false.\n */\nmxOutline.prototype.labelsVisible = false;\n\n/**\n * Variable: updateOnPan\n * \n * Specifies if <update> should be called for <mxEvent.PAN> in the source\n * graph. Default is false.\n */\nmxOutline.prototype.updateOnPan = false;\n\n/**\n * Variable: sizerImage\n * \n * Optional <mxImage> to be used for the sizer. Default is null.\n */\nmxOutline.prototype.sizerImage = null;\n\n/**\n * Variable: minScale\n * \n * Minimum scale to be used. Default is 0.001.\n */\nmxOutline.prototype.minScale = 0.0001;\n\n/**\n * Variable: suspended\n * \n * Optional boolean flag to suspend updates. Default is false. This flag will\n * also suspend repaints of the outline. To toggle this switch, use the\n * following code.\n * \n * (code)\n * nav.suspended = !nav.suspended;\n * \n * if (!nav.suspended)\n * {\n *   nav.update(true);\n * }\n * (end)\n */\nmxOutline.prototype.suspended = false;\n\n/**\n * Variable: forceVmlHandles\n * \n * Specifies if VML should be used to render the handles in this control. This\n * is true for IE8 standards mode and false for all other browsers and modes.\n * This is a workaround for rendering issues of HTML elements over elements\n * with filters in IE 8 standards mode.\n */\nmxOutline.prototype.forceVmlHandles = document.documentMode == 8;\n\n/**\n * Function: createGraph\n * \n * Creates the <mxGraph> used in the outline.\n */\nmxOutline.prototype.createGraph = function(container)\n{\n\tvar graph = new mxGraph(container, this.source.getModel(), this.graphRenderHint, this.source.getStylesheet());\n\tgraph.foldingEnabled = false;\n\tgraph.autoScroll = false;\n\t\n\treturn graph;\n};\n\n/**\n * Function: init\n * \n * Initializes the outline inside the given container.\n */\nmxOutline.prototype.init = function(container)\n{\n\tthis.outline = this.createGraph(container);\n\t\n\t// Do not repaint when suspended\n\tvar outlineGraphModelChanged = this.outline.graphModelChanged;\n\tthis.outline.graphModelChanged = mxUtils.bind(this, function(changes)\n\t{\n\t\tif (!this.suspended && this.outline != null)\n\t\t{\n\t\t\toutlineGraphModelChanged.apply(this.outline, arguments);\n\t\t}\n\t});\n\n\t// Enables faster painting in SVG\n\tif (mxClient.IS_SVG)\n\t{\n\t\tvar node = this.outline.getView().getCanvas().parentNode;\n\t\tnode.setAttribute('shape-rendering', 'optimizeSpeed');\n\t\tnode.setAttribute('image-rendering', 'optimizeSpeed');\n\t}\n\t\n\t// Hides cursors and labels\n\tthis.outline.labelsVisible = this.labelsVisible;\n\tthis.outline.setEnabled(false);\n\t\n\tthis.updateHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (!this.suspended && !this.active)\n\t\t{\n\t\t\tthis.update();\n\t\t}\n\t});\n\t\n\t// Updates the scale of the outline after a change of the main graph\n\tthis.source.getModel().addListener(mxEvent.CHANGE, this.updateHandler);\n\tthis.outline.addMouseListener(this);\n\t\n\t// Adds listeners to keep the outline in sync with the source graph\n\tvar view = this.source.getView();\n\tview.addListener(mxEvent.SCALE, this.updateHandler);\n\tview.addListener(mxEvent.TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.SCALE_AND_TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.DOWN, this.updateHandler);\n\tview.addListener(mxEvent.UP, this.updateHandler);\n\n\t// Updates blue rectangle on scroll\n\tmxEvent.addListener(this.source.container, 'scroll', this.updateHandler);\n\t\n\tthis.panHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.updateOnPan)\n\t\t{\n\t\t\tthis.updateHandler.apply(this, arguments);\n\t\t}\n\t});\n\tthis.source.addListener(mxEvent.PAN, this.panHandler);\n\t\n\t// Refreshes the graph in the outline after a refresh of the main graph\n\tthis.refreshHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.outline.setStylesheet(this.source.getStylesheet());\n\t\tthis.outline.refresh();\n\t});\n\tthis.source.addListener(mxEvent.REFRESH, this.refreshHandler);\n\n\t// Creates the blue rectangle for the viewport\n\tthis.bounds = new mxRectangle(0, 0, 0, 0);\n\tthis.selectionBorder = new mxRectangleShape(this.bounds, null,\n\t\tmxConstants.OUTLINE_COLOR, mxConstants.OUTLINE_STROKEWIDTH);\n\tthis.selectionBorder.dialect = this.outline.dialect;\n\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.selectionBorder.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.selectionBorder.init(this.outline.getView().getOverlayPane());\n\n\t// Handles event by catching the initial pointer start and then listening to the\n\t// complete gesture on the event target. This is needed because all the events\n\t// are routed via the initial element even if that element is removed from the\n\t// DOM, which happens when we repaint the selection border and zoom handles.\n\tvar handler = mxUtils.bind(this, function(evt)\n\t{\n\t\tvar t = mxEvent.getSource(evt);\n\t\t\n\t\tvar redirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tvar redirect2 = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tmxEvent.removeGestureListeners(t, null, redirect, redirect2);\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(t, null, redirect, redirect2);\n\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t});\n\t\n\tmxEvent.addGestureListeners(this.selectionBorder.node, handler);\n\n\t// Creates a small blue rectangle for sizing (sizer handle)\n\tthis.sizer = this.createSizer();\n\t\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.sizer.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.sizer.init(this.outline.getView().getOverlayPane());\n\t\n\tif (this.enabled)\n\t{\n\t\tthis.sizer.node.style.cursor = 'nwse-resize';\n\t}\n\t\n\tmxEvent.addGestureListeners(this.sizer.node, handler);\n\n\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\tthis.sizer.node.style.display = this.selectionBorder.node.style.display;\n\tthis.selectionBorder.node.style.cursor = 'move';\n\n\tthis.update(false);\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxOutline.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: setZoomEnabled\n * \n * Enables or disables the zoom handling by showing or hiding the respective\n * handle.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setZoomEnabled = function(value)\n{\n\tthis.sizer.node.style.visibility = (value) ? 'visible' : 'hidden';\n};\n\n/**\n * Function: refresh\n * \n * Invokes <update> and revalidate the outline. This method is deprecated.\n */\nmxOutline.prototype.refresh = function()\n{\n\tthis.update(true);\n};\n\n/**\n * Function: createSizer\n * \n * Creates the shape used as the sizer.\n */\nmxOutline.prototype.createSizer = function()\n{\n\tif (this.sizerImage != null)\n\t{\n\t\tvar sizer = new mxImageShape(new mxRectangle(0, 0, this.sizerImage.width, this.sizerImage.height), this.sizerImage.src);\n\t\tsizer.dialect = this.outline.dialect;\n\t\t\n\t\treturn sizer;\n\t}\n\telse\n\t{\n\t\tvar sizer = new mxRectangleShape(new mxRectangle(0, 0, this.sizerSize, this.sizerSize),\n\t\t\tmxConstants.OUTLINE_HANDLE_FILLCOLOR, mxConstants.OUTLINE_HANDLE_STROKECOLOR);\n\t\tsizer.dialect = this.outline.dialect;\n\t\n\t\treturn sizer;\n\t}\n};\n\n/**\n * Function: getSourceContainerSize\n * \n * Returns the size of the source container.\n */\nmxOutline.prototype.getSourceContainerSize = function()\n{\n\treturn new mxRectangle(0, 0, this.source.container.scrollWidth, this.source.container.scrollHeight);\n};\n\n/**\n * Function: getOutlineOffset\n * \n * Returns the offset for drawing the outline graph.\n */\nmxOutline.prototype.getOutlineOffset = function(scale)\n{\n\treturn null;\n};\n\n/**\n * Function: getOutlineOffset\n * \n * Returns the offset for drawing the outline graph.\n */\nmxOutline.prototype.getSourceGraphBounds = function()\n{\n\treturn this.source.getGraphBounds();\n};\n\n/**\n * Function: update\n * \n * Updates the outline.\n */\nmxOutline.prototype.update = function(revalidate)\n{\n\tif (this.source != null && this.source.container != null &&\n\t\tthis.outline != null && this.outline.container != null)\n\t{\n\t\tvar sourceScale = this.source.view.scale;\n\t\tvar scaledGraphBounds = this.getSourceGraphBounds();\n\t\tvar unscaledGraphBounds = new mxRectangle(scaledGraphBounds.x / sourceScale + this.source.panDx,\n\t\t\t\tscaledGraphBounds.y / sourceScale + this.source.panDy, scaledGraphBounds.width / sourceScale,\n\t\t\t\tscaledGraphBounds.height / sourceScale);\n\n\t\tvar unscaledFinderBounds = new mxRectangle(0, 0,\n\t\t\tthis.source.container.clientWidth / sourceScale,\n\t\t\tthis.source.container.clientHeight / sourceScale);\n\t\t\n\t\tvar union = unscaledGraphBounds.clone();\n\t\tunion.add(unscaledFinderBounds);\n\t\n\t\t// Zooms to the scrollable area if that is bigger than the graph\n\t\tvar size = this.getSourceContainerSize();\n\t\tvar completeWidth = Math.max(size.width / sourceScale, union.width);\n\t\tvar completeHeight = Math.max(size.height / sourceScale, union.height);\n\t\n\t\tvar availableWidth = Math.max(0, this.outline.container.clientWidth - this.border);\n\t\tvar availableHeight = Math.max(0, this.outline.container.clientHeight - this.border);\n\t\t\n\t\tvar outlineScale = Math.min(availableWidth / completeWidth, availableHeight / completeHeight);\n\t\tvar scale = (isNaN(outlineScale)) ? this.minScale : Math.max(this.minScale, outlineScale);\n\n\t\tif (scale > 0)\n\t\t{\n\t\t\tif (this.outline.getView().scale != scale)\n\t\t\t{\n\t\t\t\tthis.outline.getView().scale = scale;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\tvar navView = this.outline.getView();\n\t\t\t\n\t\t\tif (navView.currentRoot != this.source.getView().currentRoot)\n\t\t\t{\n\t\t\t\tnavView.setCurrentRoot(this.source.getView().currentRoot);\n\t\t\t}\n\n\t\t\tvar t = this.source.view.translate;\n\t\t\tvar tx = t.x + this.source.panDx;\n\t\t\tvar ty = t.y + this.source.panDy;\n\t\t\t\n\t\t\tvar off = this.getOutlineOffset(scale);\n\t\t\t\n\t\t\tif (off != null)\n\t\t\t{\n\t\t\t\ttx += off.x;\n\t\t\t\tty += off.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (unscaledGraphBounds.x < 0)\n\t\t\t{\n\t\t\t\ttx = tx - unscaledGraphBounds.x;\n\t\t\t}\n\t\t\tif (unscaledGraphBounds.y < 0)\n\t\t\t{\n\t\t\t\tty = ty - unscaledGraphBounds.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (navView.translate.x != tx || navView.translate.y != ty)\n\t\t\t{\n\t\t\t\tnavView.translate.x = tx;\n\t\t\t\tnavView.translate.y = ty;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\t// Prepares local variables for computations\n\t\t\tvar t2 = navView.translate;\n\t\t\tscale = this.source.getView().scale;\n\t\t\tvar scale2 = scale / navView.scale;\n\t\t\tvar scale3 = 1.0 / navView.scale;\n\t\t\tvar container = this.source.container;\n\t\t\t\n\t\t\t// Updates the bounds of the viewrect in the navigation\n\t\t\tthis.bounds = new mxRectangle(\n\t\t\t\t(t2.x - t.x - this.source.panDx) / scale3,\n\t\t\t\t(t2.y - t.y - this.source.panDy) / scale3,\n\t\t\t\t(container.clientWidth / scale2),\n\t\t\t\t(container.clientHeight / scale2));\n\t\t\t\n\t\t\t// Adds the scrollbar offset to the finder\n\t\t\tthis.bounds.x += this.source.container.scrollLeft * navView.scale / scale;\n\t\t\tthis.bounds.y += this.source.container.scrollTop * navView.scale / scale;\n\t\t\t\n\t\t\tvar b = this.selectionBorder.bounds;\n\t\t\t\n\t\t\tif (b.x != this.bounds.x || b.y != this.bounds.y || b.width != this.bounds.width || b.height != this.bounds.height)\n\t\t\t{\n\t\t\t\tthis.selectionBorder.bounds = this.bounds;\n\t\t\t\tthis.selectionBorder.redraw();\n\t\t\t}\n\t\t\n\t\t\t// Updates the bounds of the zoom handle at the bottom right\n\t\t\tvar b = this.sizer.bounds;\n\t\t\tvar b2 = new mxRectangle(this.bounds.x + this.bounds.width - b.width / 2,\n\t\t\t\t\tthis.bounds.y + this.bounds.height - b.height / 2, b.width, b.height);\n\n\t\t\tif (b.x != b2.x || b.y != b2.y || b.width != b2.width || b.height != b2.height)\n\t\t\t{\n\t\t\t\tthis.sizer.bounds = b2;\n\t\t\t\t\n\t\t\t\t// Avoids update of visibility in redraw for VML\n\t\t\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t\t\t{\n\t\t\t\t\tthis.sizer.redraw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (revalidate)\n\t\t\t{\n\t\t\t\tthis.outline.view.revalidate();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by starting a translation or zoom.\n */\nmxOutline.prototype.mouseDown = function(sender, me)\n{\n\tif (this.enabled && this.showViewport)\n\t{\n\t\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.source.tolerance : 0;\n\t\tvar hit = (this.source.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\t\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\t\tthis.zoom = me.isSource(this.sizer) || (hit != null && mxUtils.intersects(shape.bounds, hit));\n\t\tthis.startX = me.getX();\n\t\tthis.startY = me.getY();\n\t\tthis.active = true;\n\n\t\tif (this.source.useScrollbarsForPanning && mxUtils.hasScrollbars(this.source.container))\n\t\t{\n\t\t\tthis.dx0 = this.source.container.scrollLeft;\n\t\t\tthis.dy0 = this.source.container.scrollTop;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dx0 = 0;\n\t\t\tthis.dy0 = 0;\n\t\t}\n\t}\n\n\tme.consume();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by previewing the viewrect in <graph> and updating the\n * rectangle that represents the viewrect in the outline.\n */\nmxOutline.prototype.mouseMove = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\t\tthis.sizer.node.style.display = this.selectionBorder.node.style.display; \n\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\tvar bounds = null;\n\t\t\n\t\tif (!this.zoom)\n\t\t{\n\t\t\t// Previews the panning on the source graph\n\t\t\tvar scale = this.outline.getView().scale;\n\t\t\tbounds = new mxRectangle(this.bounds.x + dx,\n\t\t\t\tthis.bounds.y + dy, this.bounds.width, this.bounds.height);\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t\tdx /= scale;\n\t\t\tdx *= this.source.getView().scale;\n\t\t\tdy /= scale;\n\t\t\tdy *= this.source.getView().scale;\n\t\t\tthis.source.panGraph(-dx - this.dx0, -dy - this.dy0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Does *not* preview zooming on the source graph\n\t\t\tvar container = this.source.container;\n\t\t\tvar viewRatio = container.clientWidth / container.clientHeight;\n\t\t\tdy = dx / viewRatio;\n\t\t\tbounds = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y,\n\t\t\t\tMath.max(1, this.bounds.width + dx),\n\t\t\t\tMath.max(1, this.bounds.height + dy));\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t}\n\t\t\n\t\t// Updates the zoom handle\n\t\tvar b = this.sizer.bounds;\n\t\tthis.sizer.bounds = new mxRectangle(\n\t\t\tbounds.x + bounds.width - b.width / 2,\n\t\t\tbounds.y + bounds.height - b.height / 2,\n\t\t\tb.width, b.height);\n\t\t\n\t\t// Avoids update of visibility in redraw for VML\n\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t{\n\t\t\tthis.sizer.redraw();\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: getTranslateForEvent\n * \n * Gets the translate for the given mouse event. Here is an example to limit\n * the outline to stay within positive coordinates:\n * \n * (code)\n * outline.getTranslateForEvent = function(me)\n * {\n *   var pt = new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n *   \n *   if (!this.zoom)\n *   {\n *     var tr = this.source.view.translate;\n *     pt.x = Math.max(tr.x * this.outline.view.scale, pt.x);\n *     pt.y = Math.max(tr.y * this.outline.view.scale, pt.y);\n *   }\n *   \n *   return pt;\n * };\n * (end)\n */\nmxOutline.prototype.getTranslateForEvent = function(me)\n{\n\treturn new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the translation or zoom to <graph>.\n */\nmxOutline.prototype.mouseUp = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\t\n\t\tif (Math.abs(dx) > 0 || Math.abs(dy) > 0)\n\t\t{\n\t\t\tif (!this.zoom)\n\t\t\t{\n\t\t\t\t// Applies the new translation if the source\n\t\t\t\t// has no scrollbars\n\t\t\t\tif (!this.source.useScrollbarsForPanning ||\n\t\t\t\t\t!mxUtils.hasScrollbars(this.source.container))\n\t\t\t\t{\n\t\t\t\t\tthis.source.panGraph(0, 0);\n\t\t\t\t\tdx /= this.outline.getView().scale;\n\t\t\t\t\tdy /= this.outline.getView().scale;\n\t\t\t\t\tvar t = this.source.getView().translate;\n\t\t\t\t\tthis.source.getView().setTranslate(t.x - dx, t.y - dy);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Applies the new zoom\n\t\t\t\tvar w = this.selectionBorder.bounds.width;\n\t\t\t\tvar scale = this.source.getView().scale;\n\t\t\t\tthis.source.zoomTo(Math.max(this.minScale, scale - (dx * scale) / w), false);\n\t\t\t}\n\n\t\t\tthis.update();\n\t\t\tme.consume();\n\t\t}\n\t\t\t\n\t\t// Resets the state of the handler\n\t\tthis.index = null;\n\t\tthis.active = false;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroy this outline and removes all listeners from <source>.\n */\nmxOutline.prototype.destroy = function()\n{\n\tif (this.source != null)\n\t{\n\t\tthis.source.removeListener(this.panHandler);\n\t\tthis.source.removeListener(this.refreshHandler);\n\t\tthis.source.getModel().removeListener(this.updateHandler);\n\t\tthis.source.getView().removeListener(this.updateHandler);\n\t\tmxEvent.addListener(this.source.container, 'scroll', this.updateHandler);\n\t\tthis.source = null;\n\t}\n\t\n\tif (this.outline != null)\n\t{\n\t\tthis.outline.removeMouseListener(this);\n\t\tthis.outline.destroy();\n\t\tthis.outline = null;\n\t}\n\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.destroy();\n\t\tthis.selectionBorder = null;\n\t}\n\t\n\tif (this.sizer != null)\n\t{\n\t\tthis.sizer.destroy();\n\t\tthis.sizer = null;\n\t}\n};\n\n__mxOutput.mxOutline = typeof mxOutline !== 'undefined' ? mxOutline : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMultiplicity\n * \n * Defines invalid connections along with the error messages that they produce.\n * To add or remove rules on a graph, you must add/remove instances of this\n * class to <mxGraph.multiplicities>.\n * \n * Example:\n * \n * (code)\n * graph.multiplicities.push(new mxMultiplicity(\n *   true, 'rectangle', null, null, 0, 2, ['circle'],\n *   'Only 2 targets allowed',\n *   'Only circle targets allowed'));\n * (end)\n * \n * Defines a rule where each rectangle must be connected to no more than 2\n * circles and no other types of targets are allowed.\n * \n * Constructor: mxMultiplicity\n * \n * Instantiate class mxMultiplicity in order to describe allowed\n * connections in a graph. Not all constraints can be enforced while\n * editing, some must be checked at validation time. The <countError> and\n * <typeError> are treated as resource keys in <mxResources>.\n * \n * Parameters:\n * \n * source - Boolean indicating if this rule applies to the source or target\n * terminal.\n * type - Type of the source or target terminal that this rule applies to.\n * See <type> for more information.\n * attr - Optional attribute name to match the source or target terminal.\n * value - Optional attribute value to match the source or target terminal.\n * min - Minimum number of edges for this rule. Default is 1.\n * max - Maximum number of edges for this rule. n means infinite. Default\n * is n.\n * validNeighbors - Array of types of the opposite terminal for which this\n * rule applies.\n * countError - Error to be displayed for invalid number of edges.\n * typeError - Error to be displayed for invalid opposite terminals.\n * validNeighborsAllowed - Optional boolean indicating if the array of\n * opposite types should be valid or invalid.\n */\nfunction mxMultiplicity(source, type, attr, value, min, max,\n\tvalidNeighbors, countError, typeError, validNeighborsAllowed)\n{\n\tthis.source = source;\n\tthis.type = type;\n\tthis.attr = attr;\n\tthis.value = value;\n\tthis.min = (min != null) ? min : 0;\n\tthis.max = (max != null) ? max : 'n';\n\tthis.validNeighbors = validNeighbors;\n\tthis.countError = mxResources.get(countError) || countError;\n\tthis.typeError = mxResources.get(typeError) || typeError;\n\tthis.validNeighborsAllowed = (validNeighborsAllowed != null) ?\n\t\tvalidNeighborsAllowed : true;\n};\n\n/**\n * Variable: type\n * \n * Defines the type of the source or target terminal. The type is a string\n * passed to <mxUtils.isNode> together with the source or target vertex\n * value as the first argument.\n */\nmxMultiplicity.prototype.type = null;\n\n/**\n * Variable: attr\n * \n * Optional string that specifies the attributename to be passed to\n * <mxUtils.isNode> to check if the rule applies to a cell.\n */\nmxMultiplicity.prototype.attr = null;\n\n/**\n * Variable: value\n * \n * Optional string that specifies the value of the attribute to be passed\n * to <mxUtils.isNode> to check if the rule applies to a cell.\n */\nmxMultiplicity.prototype.value = null;\n\n/**\n * Variable: source\n * \n * Boolean that specifies if the rule is applied to the source or target\n * terminal of an edge.\n */\nmxMultiplicity.prototype.source = null;\n\n/**\n * Variable: min\n * \n * Defines the minimum number of connections for which this rule applies.\n * Default is 0.\n */\nmxMultiplicity.prototype.min = null;\n\n/**\n * Variable: max\n * \n * Defines the maximum number of connections for which this rule applies.\n * A value of 'n' means unlimited times. Default is 'n'. \n */\nmxMultiplicity.prototype.max = null;\n\n/**\n * Variable: validNeighbors\n * \n * Holds an array of strings that specify the type of neighbor for which\n * this rule applies. The strings are used in <mxCell.is> on the opposite\n * terminal to check if the rule applies to the connection.\n */\nmxMultiplicity.prototype.validNeighbors = null;\n\n/**\n * Variable: validNeighborsAllowed\n * \n * Boolean indicating if the list of validNeighbors are those that are allowed\n * for this rule or those that are not allowed for this rule.\n */\nmxMultiplicity.prototype.validNeighborsAllowed = true;\n\n/**\n * Variable: countError\n * \n * Holds the localized error message to be displayed if the number of\n * connections for which the rule applies is smaller than <min> or greater\n * than <max>.\n */\nmxMultiplicity.prototype.countError = null;\n\n/**\n * Variable: typeError\n * \n * Holds the localized error message to be displayed if the type of the\n * neighbor for a connection does not match the rule.\n */\nmxMultiplicity.prototype.typeError = null;\n\n/**\n * Function: check\n * \n * Checks the multiplicity for the given arguments and returns the error\n * for the given connection or null if the multiplicity does not apply.\n *  \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph> instance.\n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * sourceOut - Number of outgoing edges from the source terminal.\n * targetIn - Number of incoming edges for the target terminal.\n */\nmxMultiplicity.prototype.check = function(graph, edge, source, target, sourceOut, targetIn)\n{\n\tvar error = '';\n\n\tif ((this.source && this.checkTerminal(graph, source, edge)) ||\n\t\t(!this.source && this.checkTerminal(graph, target, edge)))\n\t{\n\t\tif (this.countError != null && \n\t\t\t((this.source && (this.max == 0 || (sourceOut >= this.max))) ||\n\t\t\t(!this.source && (this.max == 0 || (targetIn >= this.max)))))\n\t\t{\n\t\t\terror += this.countError + '\\n';\n\t\t}\n\n\t\tif (this.validNeighbors != null && this.typeError != null && this.validNeighbors.length > 0)\n\t\t{\n\t\t\tvar isValid = this.checkNeighbors(graph, edge, source, target);\n\n\t\t\tif (!isValid)\n\t\t\t{\n\t\t\t\terror += this.typeError + '\\n';\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn (error.length > 0) ? error : null;\n};\n\n/**\n * Function: checkNeighbors\n * \n * Checks if there are any valid neighbours in <validNeighbors>. This is only\n * called if <validNeighbors> is a non-empty array.\n */\nmxMultiplicity.prototype.checkNeighbors = function(graph, edge, source, target)\n{\n\tvar sourceValue = graph.model.getValue(source);\n\tvar targetValue = graph.model.getValue(target);\n\tvar isValid = !this.validNeighborsAllowed;\n\tvar valid = this.validNeighbors;\n\t\n\tfor (var j = 0; j < valid.length; j++)\n\t{\n\t\tif (this.source &&\n\t\t\tthis.checkType(graph, targetValue, valid[j]))\n\t\t{\n\t\t\tisValid = this.validNeighborsAllowed;\n\t\t\tbreak;\n\t\t}\n\t\telse if (!this.source && \n\t\t\tthis.checkType(graph, sourceValue, valid[j]))\n\t\t{\n\t\t\tisValid = this.validNeighborsAllowed;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn isValid;\n};\n\n/**\n * Function: checkTerminal\n * \n * Checks the given terminal cell and returns true if this rule applies. The\n * given cell is the source or target of the given edge, depending on\n * <source>. This implementation uses <checkType> on the terminal's value.\n */\nmxMultiplicity.prototype.checkTerminal = function(graph, terminal, edge)\n{\n\tvar value = graph.model.getValue(terminal);\n\t\n\treturn this.checkType(graph, value, this.type, this.attr, this.value);\n};\n\n/**\n * Function: checkType\n * \n * Checks the type of the given value.\n */\nmxMultiplicity.prototype.checkType = function(graph, value, type, attr, attrValue)\n{\n\tif (value != null)\n\t{\n\t\tif (!isNaN(value.nodeType)) // Checks if value is a DOM node\n\t\t{\n\t\t\treturn mxUtils.isNode(value, type, attr, attrValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn value == type;\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n__mxOutput.mxMultiplicity = typeof mxMultiplicity !== 'undefined' ? mxMultiplicity : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLayoutManager\n * \n * Implements a layout manager that runs a given layout after any changes to the graph:\n * \n * Example:\n * \n * (code)\n * var layoutMgr = new mxLayoutManager(graph);\n * layoutMgr.getLayout = function(cell)\n * {\n *   return layout;\n * };\n * (end)\n * \n * Event: mxEvent.LAYOUT_CELLS\n * \n * Fires between begin- and endUpdate after all cells have been layouted in\n * <layoutCells>. The <code>cells</code> property contains all cells that have\n * been passed to <layoutCells>.\n * \n * Constructor: mxLayoutManager\n *\n * Constructs a new automatic layout for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxLayoutManager(graph)\n{\n\t// Executes the layout before the changes are dispatched\n\tthis.undoHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.beforeUndo(evt.getProperty('edit'));\n\t\t}\n\t});\n\t\n\t// Notifies the layout of a move operation inside a parent\n\tthis.moveHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.cellsMoved(evt.getProperty('cells'), evt.getProperty('event'));\n\t\t}\n\t});\n\t\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxLayoutManager.prototype = new mxEventSource();\nmxLayoutManager.prototype.constructor = mxLayoutManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxLayoutManager.prototype.graph = null;\n\n/**\n * Variable: bubbling\n * \n * Specifies if the layout should bubble along\n * the cell hierarchy. Default is true.\n */\nmxLayoutManager.prototype.bubbling = true;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxLayoutManager.prototype.enabled = true;\n\n/**\n * Variable: updateHandler\n * \n * Holds the function that handles the endUpdate event.\n */\nmxLayoutManager.prototype.updateHandler = null;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxLayoutManager.prototype.moveHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxLayoutManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxLayoutManager.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isBubbling\n * \n * Returns true if a layout should bubble, that is, if the parent layout\n * should be executed whenever a cell layout (layout of the children of\n * a cell) has been executed. This implementation returns <bubbling>.\n */\nmxLayoutManager.prototype.isBubbling = function()\n{\n\treturn this.bubbling;\n};\n\n/**\n * Function: setBubbling\n * \n * Sets <bubbling>.\n */\nmxLayoutManager.prototype.setBubbling = function(value)\n{\n\tthis.bubbling = value;\n};\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this layout operates on.\n */\nmxLayoutManager.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the layouts operate on.\n */\nmxLayoutManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tvar model = this.graph.getModel();\t\t\n\t\tmodel.removeListener(this.undoHandler);\n\t\tthis.graph.removeListener(this.moveHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tvar model = this.graph.getModel();\t\n\t\tmodel.addListener(mxEvent.BEFORE_UNDO, this.undoHandler);\n\t\tthis.graph.addListener(mxEvent.MOVE_CELLS, this.moveHandler);\n\t}\n};\n\n/**\n * Function: getLayout\n * \n * Returns the layout to be executed for the given graph and parent.\n */\nmxLayoutManager.prototype.getLayout = function(parent)\n{\n\treturn null;\n};\n\n/**\n * Function: beforeUndo\n * \n * Called from the undoHandler.\n *\n * Parameters:\n * \n * cell - Array of <mxCells> that have been moved.\n * evt - Mouse event that represents the mousedown.\n */\nmxLayoutManager.prototype.beforeUndo = function(undoableEdit)\n{\n\tvar cells = this.getCellsForChanges(undoableEdit.changes);\n\tvar model = this.getGraph().getModel();\n\n\t// Adds all descendants\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\ttmp = tmp.concat(model.getDescendants(cells[i]));\n\t}\n\t\n\tcells = tmp;\n\t\n\t// Adds all parent ancestors\n\tif (this.isBubbling())\n\t{\n\t\ttmp = model.getParents(cells);\n\t\t\n\t\twhile (tmp.length > 0)\n\t\t{\n\t\t\tcells = cells.concat(tmp);\n\t\t\ttmp = model.getParents(tmp);\n\t\t}\n\t}\n\t\n\tthis.executeLayoutForCells(cells);\n};\n\n/**\n * Function: executeLayout\n * \n * Executes the given layout on the given parent.\n */\nmxLayoutManager.prototype.executeLayoutForCells = function(cells)\n{\n\t// Adds reverse to this array to avoid duplicate execution of leafes\n\t// Works like capture/bubble for events, first executes all layout\n\t// from top to bottom and in reverse order and removes duplicates.\n\tvar sorted = mxUtils.sortCells(cells, true);\n\tsorted = sorted.concat(sorted.slice().reverse());\n\tthis.layoutCells(sorted);\n};\n\n/**\n * Function: cellsMoved\n * \n * Called from the moveHandler.\n *\n * Parameters:\n * \n * cell - Array of <mxCells> that have been moved.\n * evt - Mouse event that represents the mousedown.\n */\nmxLayoutManager.prototype.cellsMoved = function(cells, evt)\n{\n\tif (cells != null && evt != null)\n\t{\n\t\tvar point = mxUtils.convertPoint(this.getGraph().container,\n\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\t// Checks if a layout exists to take care of the moving if the\n\t\t// parent itself is not being moved\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar parent = model.getParent(cells[i]);\n\t\t\t\n\t\t\tif (mxUtils.indexOf(cells, parent) < 0)\n\t\t\t{\n\t\t\t\tvar layout = this.getLayout(parent);\n\t\n\t\t\t\tif (layout != null)\n\t\t\t\t{\n\t\t\t\t\tlayout.moveCell(cells[i], point.x, point.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getCellsForEdit\n * \n * Returns the cells to be layouted for the given sequence of changes.\n */\nmxLayoutManager.prototype.getCellsForChanges = function(changes)\n{\n\tvar dict = new mxDictionary();\n\tvar result = [];\n\t\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\tif (change instanceof mxRootChange)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar cells = this.getCellsForChange(change);\n\t\t\t\n\t\t\tfor (var j = 0; j < cells.length; j++)\n\t\t\t{\n\t\t\t\tif (cells[j] != null && !dict.get(cells[j]))\n\t\t\t\t{\n\t\t\t\t\tdict.put(cells[j], true);\n\t\t\t\t\tresult.push(cells[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getCellsForChange\n * \n * Executes all layouts which have been scheduled during the\n * changes.\n */\nmxLayoutManager.prototype.getCellsForChange = function(change)\n{\n\tvar model = this.getGraph().getModel();\n\t\n\tif (change instanceof mxChildChange)\n\t{\n\t\treturn [change.child, change.previous, model.getParent(change.child)];\n\t}\n\telse if (change instanceof mxTerminalChange || change instanceof mxGeometryChange)\n\t{\n\t\treturn [change.cell, model.getParent(change.cell)];\n\t}\n\telse if (change instanceof mxVisibleChange || change instanceof mxStyleChange)\n\t{\n\t\treturn [change.cell];\n\t}\n\t\n\treturn [];\n};\n\n/**\n * Function: layoutCells\n * \n * Executes all layouts which have been scheduled during the\n * changes.\n */\nmxLayoutManager.prototype.layoutCells = function(cells)\n{\n\tif (cells.length > 0)\n\t{\n\t\t// Invokes the layouts while removing duplicates\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tmodel.beginUpdate();\n\t\ttry \n\t\t{\n\t\t\tvar last = null;\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (cells[i] != model.getRoot() && cells[i] != last)\n\t\t\t\t{\n\t\t\t\t\tif (this.executeLayout(this.getLayout(cells[i]), cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tlast = cells[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.LAYOUT_CELLS, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: executeLayout\n * \n * Executes the given layout on the given parent.\n */\nmxLayoutManager.prototype.executeLayout = function(layout, parent)\n{\n\tvar result = false;\n\t\n\tif (layout != null && parent != null)\n\t{\n\t\tlayout.execute(parent);\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxLayoutManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n\n__mxOutput.mxLayoutManager = typeof mxLayoutManager !== 'undefined' ? mxLayoutManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneManager\n * \n * Manager for swimlanes and nested swimlanes that sets the size of newly added\n * swimlanes to that of their siblings, and propagates changes to the size of a\n * swimlane to its siblings, if <siblings> is true, and its ancestors, if\n * <bubbling> is true.\n * \n * Constructor: mxSwimlaneManager\n *\n * Constructs a new swimlane manager for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxSwimlaneManager(graph, horizontal, addEnabled, resizeEnabled)\n{\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.addEnabled = (addEnabled != null) ? addEnabled : true;\n\tthis.resizeEnabled = (resizeEnabled != null) ? resizeEnabled : true;\n\n\tthis.addHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled() && this.isAddEnabled())\n\t\t{\n\t\t\tthis.cellsAdded(evt.getProperty('cells'));\n\t\t}\n\t});\n\t\n\tthis.resizeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled() && this.isResizeEnabled())\n\t\t{\n\t\t\tthis.cellsResized(evt.getProperty('cells'));\n\t\t}\n\t});\n\t\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxSwimlaneManager.prototype = new mxEventSource();\nmxSwimlaneManager.prototype.constructor = mxSwimlaneManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxSwimlaneManager.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxSwimlaneManager.prototype.enabled = true;\n\n/**\n * Variable: horizontal\n * \n * Specifies the orientation of the swimlanes. Default is true.\n */\nmxSwimlaneManager.prototype.horizontal = true;\n\n/**\n * Variable: addEnabled\n * \n * Specifies if newly added cells should be resized to match the size of their\n * existing siblings. Default is true.\n */\nmxSwimlaneManager.prototype.addEnabled = true;\n\n/**\n * Variable: resizeEnabled\n * \n * Specifies if resizing of swimlanes should be handled. Default is true.\n */\nmxSwimlaneManager.prototype.resizeEnabled = true;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxSwimlaneManager.prototype.addHandler = null;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxSwimlaneManager.prototype.resizeHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxSwimlaneManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxSwimlaneManager.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxSwimlaneManager.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: setHorizontal\n * \n * Sets <horizontal>.\n */\nmxSwimlaneManager.prototype.setHorizontal = function(value)\n{\n\tthis.horizontal = value;\n};\n\n/**\n * Function: isAddEnabled\n * \n * Returns <addEnabled>.\n */\nmxSwimlaneManager.prototype.isAddEnabled = function()\n{\n\treturn this.addEnabled;\n};\n\n/**\n * Function: setAddEnabled\n * \n * Sets <addEnabled>.\n */\nmxSwimlaneManager.prototype.setAddEnabled = function(value)\n{\n\tthis.addEnabled = value;\n};\n\n/**\n * Function: isResizeEnabled\n * \n * Returns <resizeEnabled>.\n */\nmxSwimlaneManager.prototype.isResizeEnabled = function()\n{\n\treturn this.resizeEnabled;\n};\n\n/**\n * Function: setResizeEnabled\n * \n * Sets <resizeEnabled>.\n */\nmxSwimlaneManager.prototype.setResizeEnabled = function(value)\n{\n\tthis.resizeEnabled = value;\n};\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this manager operates on.\n */\nmxSwimlaneManager.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the manager operates on.\n */\nmxSwimlaneManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.removeListener(this.addHandler);\n\t\tthis.graph.removeListener(this.resizeHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.addListener(mxEvent.ADD_CELLS, this.addHandler);\n\t\tthis.graph.addListener(mxEvent.CELLS_RESIZED, this.resizeHandler);\n\t}\n};\n\n/**\n * Function: isSwimlaneIgnored\n * \n * Returns true if the given swimlane should be ignored.\n */\nmxSwimlaneManager.prototype.isSwimlaneIgnored = function(swimlane)\n{\n\treturn !this.getGraph().isSwimlane(swimlane);\n};\n\n/**\n * Function: isCellHorizontal\n * \n * Returns true if the given cell is horizontal. If the given cell is not a\n * swimlane, then the global orientation is returned.\n */\nmxSwimlaneManager.prototype.isCellHorizontal = function(cell)\n{\n\tif (this.graph.isSwimlane(cell))\n\t{\n\t\tvar style = this.graph.getCellStyle(cell);\n\t\t\n\t\treturn mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, 1) == 1;\n\t}\n\t\n\treturn !this.isHorizontal();\n};\n\n/**\n * Function: cellsAdded\n * \n * Called if any cells have been added.\n * \n * Parameters:\n * \n * cell - Array of <mxCells> that have been added.\n */\nmxSwimlaneManager.prototype.cellsAdded = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar model = this.getGraph().getModel();\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!this.isSwimlaneIgnored(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.swimlaneAdded(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: swimlaneAdded\n * \n * Updates the size of the given swimlane to match that of any existing\n * siblings swimlanes.\n * \n * Parameters:\n * \n * swimlane - <mxCell> that represents the new swimlane.\n */\nmxSwimlaneManager.prototype.swimlaneAdded = function(swimlane)\n{\n\tvar model = this.getGraph().getModel();\n\tvar parent = model.getParent(swimlane);\n\tvar childCount = model.getChildCount(parent);\n\tvar geo = null;\n\t\n\t// Finds the first valid sibling swimlane as reference\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (child != swimlane && !this.isSwimlaneIgnored(child))\n\t\t{\n\t\t\tgeo = model.getGeometry(child);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Applies the size of the refernece to the newly added swimlane\n\tif (geo != null)\n\t{\n\t\tvar parentHorizontal = (parent != null) ? this.isCellHorizontal(parent) : this.horizontal;\n\t\tthis.resizeSwimlane(swimlane, geo.width, geo.height, parentHorizontal);\n\t}\n};\n\n/**\n * Function: cellsResized\n * \n * Called if any cells have been resizes. Calls <swimlaneResized> for all\n * swimlanes where <isSwimlaneIgnored> returns false.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose size was changed.\n */\nmxSwimlaneManager.prototype.cellsResized = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Finds the top-level swimlanes and adds offsets\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!this.isSwimlaneIgnored(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tvar geo = model.getGeometry(cells[i]);\n\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar size = new mxRectangle(0, 0, geo.width, geo.height);\n\t\t\t\t\t\tvar top = cells[i];\n\t\t\t\t\t\tvar current = top;\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (current != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttop = current;\n\t\t\t\t\t\t\tcurrent = model.getParent(current);\n\t\t\t\t\t\t\tvar tmp = (this.graph.isSwimlane(current)) ?\n\t\t\t\t\t\t\t\t\tthis.graph.getStartSize(current) :\n\t\t\t\t\t\t\t\t\tnew mxRectangle();\n\t\t\t\t\t\t\tsize.width += tmp.width;\n\t\t\t\t\t\t\tsize.height += tmp.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar parentHorizontal = (current != null) ? this.isCellHorizontal(current) : this.horizontal;\n\t\t\t\t\t\tthis.resizeSwimlane(top, size.width, size.height, parentHorizontal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resizeSwimlane\n * \n * Called from <cellsResized> for all swimlanes that are not ignored to update\n * the size of the siblings and the size of the parent swimlanes, recursively,\n * if <bubbling> is true.\n * \n * Parameters:\n * \n * swimlane - <mxCell> whose size has changed.\n */\nmxSwimlaneManager.prototype.resizeSwimlane = function(swimlane, w, h, parentHorizontal)\n{\n\tvar model = this.getGraph().getModel();\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvar horizontal = this.isCellHorizontal(swimlane);\n\t\t\n\t\tif (!this.isSwimlaneIgnored(swimlane))\n\t\t{\n\t\t\tvar geo = model.getGeometry(swimlane);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tif ((parentHorizontal && geo.height != h) || (!parentHorizontal && geo.width != w))\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tif (parentHorizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.height = h;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.width = w;\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.setGeometry(swimlane, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar tmp = (this.graph.isSwimlane(swimlane)) ?\n\t\t\t\tthis.graph.getStartSize(swimlane) :\n\t\t\t\tnew mxRectangle();\n\t\tw -= tmp.width;\n\t\th -= tmp.height;\n\t\t\n\t\tvar childCount = model.getChildCount(swimlane);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(swimlane, i);\n\t\t\tthis.resizeSwimlane(child, w, h, horizontal);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxSwimlaneManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n\n__mxOutput.mxSwimlaneManager = typeof mxSwimlaneManager !== 'undefined' ? mxSwimlaneManager : undefined;\n\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxTemporaryCellStates\n * \n * Creates a temporary set of cell states.\n */\nfunction mxTemporaryCellStates(view, scale, cells, isCellVisibleFn, getLinkForCellState)\n{\n\tscale = (scale != null) ? scale : 1;\n\tthis.view = view;\n\t\n\t// Stores the previous state\n\tthis.oldValidateCellState = view.validateCellState;\n\tthis.oldBounds = view.getGraphBounds();\n\tthis.oldStates = view.getStates();\n\tthis.oldScale = view.getScale();\n\tthis.oldDoRedrawShape = view.graph.cellRenderer.doRedrawShape;\n\n\tvar self = this;\n\n\t// Overrides doRedrawShape and paint shape to add links on shapes\n\tif (getLinkForCellState != null)\n\t{\n\t\tview.graph.cellRenderer.doRedrawShape = function(state)\n\t\t{\n\t\t\tvar oldPaint = state.shape.paint;\n\t\t\t\n\t\t\tstate.shape.paint = function(c)\n\t\t\t{\n\t\t\t\tvar link = getLinkForCellState(state);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(link);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toldPaint.apply(this, arguments);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(null);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tself.oldDoRedrawShape.apply(view.graph.cellRenderer, arguments);\n\t\t\tstate.shape.paint = oldPaint;\n\t\t};\n\t}\n\n\t// Overrides validateCellState to ignore invisible cells\n\tview.validateCellState = function(cell, resurse)\n\t{\n\t\tif (cell == null || isCellVisibleFn == null || isCellVisibleFn(cell))\n\t\t{\n\t\t\treturn self.oldValidateCellState.apply(view, arguments);\n\t\t}\n\t\t\n\t\treturn null;\n\t};\n\t\n\t// Creates space for new states\n\tview.setStates(new mxDictionary());\n\tview.setScale(scale);\n\t\n\tif (cells != null)\n\t{\n\t\tview.resetValidationState();\n\t\tvar bbox = null;\n\n\t\t// Validates the vertices and edges without adding them to\n\t\t// the model so that the original cells are not modified\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar bounds = view.getBoundingBox(view.validateCellState(view.validateCell(cells[i])));\n\t\t\t\n\t\t\tif (bbox == null)\n\t\t\t{\n\t\t\t\tbbox = bounds;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbbox.add(bounds);\n\t\t\t}\n\t\t}\n\n\t\tview.setGraphBounds(bbox || new mxRectangle());\n\t}\n};\n\n/**\n * Variable: view\n *\n * Holds the width of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.view = null;\n\n/**\n * Variable: oldStates\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldStates = null;\n\n/**\n * Variable: oldBounds\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldBounds = null;\n\n/**\n * Variable: oldScale\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldScale = null;\n\n/**\n * Function: destroy\n * \n * Returns the top, left corner as a new <mxPoint>.\n */\nmxTemporaryCellStates.prototype.destroy = function()\n{\n\tthis.view.setScale(this.oldScale);\n\tthis.view.setStates(this.oldStates);\n\tthis.view.setGraphBounds(this.oldBounds);\n\tthis.view.validateCellState = this.oldValidateCellState;\n\tthis.view.graph.cellRenderer.doRedrawShape = this.oldDoRedrawShape;\n};\n\n__mxOutput.mxTemporaryCellStates = typeof mxTemporaryCellStates !== 'undefined' ? mxTemporaryCellStates : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxCellStatePreview\n * \n * Implements a live preview for moving cells.\n * \n * Constructor: mxCellStatePreview\n * \n * Constructs a move preview for the given graph.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxCellStatePreview(graph)\n{\n\tthis.deltas = new mxDictionary();\n\tthis.graph = graph;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellStatePreview.prototype.graph = null;\n\n/**\n * Variable: deltas\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellStatePreview.prototype.deltas = null;\n\n/**\n * Variable: count\n * \n * Contains the number of entries in the map.\n */\nmxCellStatePreview.prototype.count = 0;\n\n/**\n * Function: isEmpty\n * \n * Returns true if this contains no entries.\n */\nmxCellStatePreview.prototype.isEmpty = function()\n{\n\treturn this.count == 0;\n};\n\n/**\n * Function: moveState\n */\nmxCellStatePreview.prototype.moveState = function(state, dx, dy, add, includeEdges)\n{\n\tadd = (add != null) ? add : true;\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tvar delta = this.deltas.get(state.cell);\n\n\tif (delta == null)\n\t{\n\t\t// Note: Deltas stores the point and the state since the key is a string.\n\t\tdelta = {point: new mxPoint(dx, dy), state: state};\n\t\tthis.deltas.put(state.cell, delta);\n\t\tthis.count++;\n\t}\n\telse if (add)\n\t{\n\t\tdelta.point.x += dx;\n\t\tdelta.point.y += dy;\n\t}\n\telse\n\t{\n\t\tdelta.point.x = dx;\n\t\tdelta.point.y = dy;\n\t}\n\t\n\tif (includeEdges)\n\t{\n\t\tthis.addEdges(state);\n\t}\n\t\n\treturn delta.point;\n};\n\n/**\n * Function: show\n */\nmxCellStatePreview.prototype.show = function(visitor)\n{\n\tthis.deltas.visit(mxUtils.bind(this, function(key, delta)\n\t{\n\t\tthis.translateState(delta.state, delta.point.x, delta.point.y);\n\t}));\n\t\n\tthis.deltas.visit(mxUtils.bind(this, function(key, delta)\n\t{\n\t\tthis.revalidateState(delta.state, delta.point.x, delta.point.y, visitor);\n\t}));\n};\n\n/**\n * Function: translateState\n */\nmxCellStatePreview.prototype.translateState = function(state, dx, dy)\n{\n\tif (state != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tif (model.isVertex(state.cell))\n\t\t{\n\t\t\tstate.view.updateCellState(state);\n\t\t\tvar geo = model.getGeometry(state.cell);\n\t\t\t\n\t\t\t// Moves selection cells and non-relative vertices in\n\t\t\t// the first phase so that edge terminal points will\n\t\t\t// be updated in the second phase\n\t\t\tif ((dx != 0 || dy != 0) && geo != null && (!geo.relative || this.deltas.get(state.cell) != null))\n\t\t\t{\n\t\t\t\tstate.x += dx;\n\t\t\t\tstate.y += dy;\n\t\t\t}\n\t\t}\n\t    \n\t    var childCount = model.getChildCount(state.cell);\n\t    \n\t    for (var i = 0; i < childCount; i++)\n\t    {\n\t    \tthis.translateState(state.view.getState(model.getChildAt(state.cell, i)), dx, dy);\n\t    }\n\t}\n};\n\n/**\n * Function: revalidateState\n */\nmxCellStatePreview.prototype.revalidateState = function(state, dx, dy, visitor)\n{\n\tif (state != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\t// Updates the edge terminal points and restores the\n\t\t// (relative) positions of any (relative) children\n\t\tif (model.isEdge(state.cell))\n\t\t{\n\t\t\tstate.view.updateCellState(state);\n\t\t}\n\n\t\tvar geo = this.graph.getCellGeometry(state.cell);\n\t\tvar pState = state.view.getState(model.getParent(state.cell));\n\t\t\n\t\t// Moves selection vertices which are relative\n\t\tif ((dx != 0 || dy != 0) && geo != null && geo.relative &&\n\t\t\tmodel.isVertex(state.cell) && (pState == null ||\n\t\t\tmodel.isVertex(pState.cell) || this.deltas.get(state.cell) != null))\n\t\t{\n\t\t\tstate.x += dx;\n\t\t\tstate.y += dy;\n\t\t}\n\t\t\n\t\tthis.graph.cellRenderer.redraw(state);\n\t\n\t\t// Invokes the visitor on the given state\n\t\tif (visitor != null)\n\t\t{\n\t\t\tvisitor(state);\n\t\t}\n\t\t\t\t\t\t\n\t    var childCount = model.getChildCount(state.cell);\n\t    \n\t    for (var i = 0; i < childCount; i++)\n\t    {\n\t    \tthis.revalidateState(this.graph.view.getState(model.getChildAt(state.cell, i)), dx, dy, visitor);\n\t    }\n\t}\n};\n\n/**\n * Function: addEdges\n */\nmxCellStatePreview.prototype.addEdges = function(state)\n{\n\tvar model = this.graph.getModel();\n\tvar edgeCount = model.getEdgeCount(state.cell);\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar s = state.view.getState(model.getEdgeAt(state.cell, i));\n\n\t\tif (s != null)\n\t\t{\n\t\t\tthis.moveState(s, 0, 0);\n\t\t}\n\t}\n};\n\n__mxOutput.mxCellStatePreview = typeof mxCellStatePreview !== 'undefined' ? mxCellStatePreview : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConnectionConstraint\n * \n * Defines an object that contains the constraints about how to connect one\n * side of an edge to its terminal.\n * \n * Constructor: mxConnectionConstraint\n * \n * Constructs a new connection constraint for the given point and boolean\n * arguments.\n * \n * Parameters:\n * \n * point - Optional <mxPoint> that specifies the fixed location of the point\n * in relative coordinates. Default is null.\n * perimeter - Optional boolean that specifies if the fixed point should be\n * projected onto the perimeter of the terminal. Default is true.\n */\nfunction mxConnectionConstraint(point, perimeter, name)\n{\n\tthis.point = point;\n\tthis.perimeter = (perimeter != null) ? perimeter : true;\n\tthis.name = name;\n};\n\n/**\n * Variable: point\n * \n * <mxPoint> that specifies the fixed location of the connection point.\n */\nmxConnectionConstraint.prototype.point = null;\n\n/**\n * Variable: perimeter\n * \n * Boolean that specifies if the point should be projected onto the perimeter\n * of the terminal.\n */\nmxConnectionConstraint.prototype.perimeter = null;\n\n/**\n * Variable: name\n * \n * Optional string that specifies the name of the constraint.\n */\nmxConnectionConstraint.prototype.name = null;\n\n__mxOutput.mxConnectionConstraint = typeof mxConnectionConstraint !== 'undefined' ? mxConnectionConstraint : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHandler\n * \n * Graph event handler that handles selection. Individual cells are handled\n * separately using <mxVertexHandler> or one of the edge handlers. These\n * handlers are created using <mxGraph.createHandler> in\n * <mxGraphSelectionModel.cellAdded>.\n * \n * To avoid the container to scroll a moved cell into view, set\n * <scrollAfterMove> to false.\n * \n * Constructor: mxGraphHandler\n * \n * Constructs an event handler that creates handles for the\n * selection cells.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphHandler(graph)\n{\n\tthis.graph = graph;\n\tthis.graph.addMouseListener(this);\n\t\n\t// Repaints the handler after autoscroll\n\tthis.panHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.updatePreviewShape();\n\t\tthis.updateHint();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.PAN, this.panHandler);\n\t\n\t// Handles escape keystrokes\n\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tthis.reset();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t\n\t// Updates the preview box for remote changes\n\tthis.refreshHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.first != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tthis.bounds = this.graph.getView().getBounds(this.cells);\n\t\t\t\tthis.pBounds = this.getPreviewBounds(this.cells);\n\t\t\t\tthis.updatePreviewShape();\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// Resets the handler if cells have vanished\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}\n\t});\n\t\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphHandler.prototype.graph = null;\n\n/**\n * Variable: maxCells\n * \n * Defines the maximum number of cells to paint subhandles\n * for. Default is 50 for Firefox and 20 for IE. Set this\n * to 0 if you want an unlimited number of handles to be\n * displayed. This is only recommended if the number of\n * cells in the graph is limited to a small number, eg.\n * 500.\n */\nmxGraphHandler.prototype.maxCells = (mxClient.IS_IE) ? 20 : 50;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxGraphHandler.prototype.enabled = true;\n\n/**\n * Variable: highlightEnabled\n * \n * Specifies if drop targets under the mouse should be enabled. Default is\n * true.\n */\nmxGraphHandler.prototype.highlightEnabled = true;\n\n/**\n * Variable: cloneEnabled\n * \n * Specifies if cloning by control-drag is enabled. Default is true.\n */\nmxGraphHandler.prototype.cloneEnabled = true;\n\n/**\n * Variable: moveEnabled\n * \n * Specifies if moving is enabled. Default is true.\n */\nmxGraphHandler.prototype.moveEnabled = true;\n\n/**\n * Variable: guidesEnabled\n * \n * Specifies if other cells should be used for snapping the right, center or\n * left side of the current selection. Default is false.\n */\nmxGraphHandler.prototype.guidesEnabled = false;\n\n/**\n * Variable: guide\n * \n * Holds the <mxGuide> instance that is used for alignment.\n */\nmxGraphHandler.prototype.guide = null;\n\n/**\n * Variable: currentDx\n * \n * Stores the x-coordinate of the current mouse move.\n */\nmxGraphHandler.prototype.currentDx = null;\n\n/**\n * Variable: currentDy\n * \n * Stores the y-coordinate of the current mouse move.\n */\nmxGraphHandler.prototype.currentDy = null;\n\n/**\n * Variable: updateCursor\n * \n * Specifies if a move cursor should be shown if the mouse is over a movable\n * cell. Default is true.\n */\nmxGraphHandler.prototype.updateCursor = true;\n\n/**\n * Variable: selectEnabled\n * \n * Specifies if selecting is enabled. Default is true.\n */\nmxGraphHandler.prototype.selectEnabled = true;\n\n/**\n * Variable: removeCellsFromParent\n * \n * Specifies if cells may be moved out of their parents. Default is true.\n */\nmxGraphHandler.prototype.removeCellsFromParent = true;\n\n/**\n * Variable: connectOnDrop\n * \n * Specifies if drop events are interpreted as new connections if no other\n * drop action is defined. Default is false.\n */\nmxGraphHandler.prototype.connectOnDrop = false;\n\n/**\n * Variable: scrollOnMove\n * \n * Specifies if the view should be scrolled so that a moved cell is\n * visible. Default is true.\n */\nmxGraphHandler.prototype.scrollOnMove = true;\n\n/**\n * Variable: minimumSize\n * \n * Specifies the minimum number of pixels for the width and height of a\n * selection border. Default is 6.\n */\nmxGraphHandler.prototype.minimumSize = 6;\n\n/**\n * Variable: previewColor\n * \n * Specifies the color of the preview shape. Default is black.\n */\nmxGraphHandler.prototype.previewColor = 'black';\n\n/**\n * Variable: htmlPreview\n * \n * Specifies if the graph container should be used for preview. If this is used\n * then drop target detection relies entirely on <mxGraph.getCellAt> because\n * the HTML preview does not \"let events through\". Default is false.\n */\nmxGraphHandler.prototype.htmlPreview = false;\n\n/**\n * Variable: shape\n * \n * Reference to the <mxShape> that represents the preview.\n */\nmxGraphHandler.prototype.shape = null;\n\n/**\n * Variable: scaleGrid\n * \n * Specifies if the grid should be scaled. Default is false.\n */\nmxGraphHandler.prototype.scaleGrid = false;\n\n/**\n * Variable: rotationEnabled\n * \n * Specifies if the bounding box should allow for rotation. Default is true.\n */\nmxGraphHandler.prototype.rotationEnabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxGraphHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxGraphHandler.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isCloneEnabled\n * \n * Returns <cloneEnabled>.\n */\nmxGraphHandler.prototype.isCloneEnabled = function()\n{\n\treturn this.cloneEnabled;\n};\n\n/**\n * Function: setCloneEnabled\n * \n * Sets <cloneEnabled>.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new clone enabled state.\n */\nmxGraphHandler.prototype.setCloneEnabled = function(value)\n{\n\tthis.cloneEnabled = value;\n};\n\n/**\n * Function: isMoveEnabled\n * \n * Returns <moveEnabled>.\n */\nmxGraphHandler.prototype.isMoveEnabled = function()\n{\n\treturn this.moveEnabled;\n};\n\n/**\n * Function: setMoveEnabled\n * \n * Sets <moveEnabled>.\n */\nmxGraphHandler.prototype.setMoveEnabled = function(value)\n{\n\tthis.moveEnabled = value;\n};\n\n/**\n * Function: isSelectEnabled\n * \n * Returns <selectEnabled>.\n */\nmxGraphHandler.prototype.isSelectEnabled = function()\n{\n\treturn this.selectEnabled;\n};\n\n/**\n * Function: setSelectEnabled\n * \n * Sets <selectEnabled>.\n */\nmxGraphHandler.prototype.setSelectEnabled = function(value)\n{\n\tthis.selectEnabled = value;\n};\n\n/**\n * Function: isRemoveCellsFromParent\n * \n * Returns <removeCellsFromParent>.\n */\nmxGraphHandler.prototype.isRemoveCellsFromParent = function()\n{\n\treturn this.removeCellsFromParent;\n};\n\n/**\n * Function: setRemoveCellsFromParent\n * \n * Sets <removeCellsFromParent>.\n */\nmxGraphHandler.prototype.setRemoveCellsFromParent = function(value)\n{\n\tthis.removeCellsFromParent = value;\n};\n\n/**\n * Function: getInitialCellForEvent\n * \n * Hook to return initial cell for the given event.\n */\nmxGraphHandler.prototype.getInitialCellForEvent = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: isDelayedSelection\n * \n * Hook to return true for delayed selections.\n */\nmxGraphHandler.prototype.isDelayedSelection = function(cell, me)\n{\n\treturn this.graph.isCellSelected(cell);\n};\n\n/**\n * Function: consumeMouseEvent\n * \n * Consumes the given mouse event. NOTE: This may be used to enable click\n * events for links in labels on iOS as follows as consuming the initial\n * touchStart disables firing the subsequent click evnent on the link.\n * \n * <code>\n * mxGraphHandler.prototype.consumeMouseEvent = function(evtName, me)\n * {\n *   var source = mxEvent.getSource(me.getEvent());\n *   \n *   if (!mxEvent.isTouchEvent(me.getEvent()) || source.nodeName != 'A')\n *   {\n *     me.consume();\n *   }\n * }\n * </code>\n */\nmxGraphHandler.prototype.consumeMouseEvent = function(evtName, me)\n{\n\tme.consume();\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by selecing the given cell and creating a handle for\n * it. By consuming the event all subsequent events of the gesture are\n * redirected to this handler.\n */\nmxGraphHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isEnabled() && this.graph.isEnabled() &&\n\t\tme.getState() != null && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\tvar cell = this.getInitialCellForEvent(me);\n\t\tthis.delayedSelection = this.isDelayedSelection(cell, me);\n\t\tthis.cell = null;\n\t\t\n\t\tif (this.isSelectEnabled() && !this.delayedSelection)\n\t\t{\n\t\t\tthis.graph.selectCellForEvent(cell, me.getEvent());\n\t\t}\n\n\t\tif (this.isMoveEnabled())\n\t\t{\n\t\t\tvar model = this.graph.model;\n\t\t\tvar geo = model.getGeometry(cell);\n\n\t\t\tif (this.graph.isCellMovable(cell) && ((!model.isEdge(cell) || this.graph.getSelectionCount() > 1 ||\n\t\t\t\t(geo.points != null && geo.points.length > 0) || model.getTerminal(cell, true) == null ||\n\t\t\t\tmodel.getTerminal(cell, false) == null) || this.graph.allowDanglingEdges || \n\t\t\t\t(this.graph.isCloneEvent(me.getEvent()) && this.graph.isCellsCloneable())))\n\t\t\t{\n\t\t\t\tthis.start(cell, me.getX(), me.getY());\n\t\t\t}\n\t\t\telse if (this.delayedSelection)\n\t\t\t{\n\t\t\t\tthis.cell = cell;\n\t\t\t}\n\n\t\t\tthis.cellWasClicked = true;\n\t\t\tthis.consumeMouseEvent(mxEvent.MOUSE_DOWN, me);\n\t\t}\n\t}\n};\n\n/**\n * Function: getGuideStates\n * \n * Creates an array of cell states which should be used as guides.\n */\nmxGraphHandler.prototype.getGuideStates = function()\n{\n\tvar parent = this.graph.getDefaultParent();\n\tvar model = this.graph.getModel();\n\t\n\tvar filter = mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.graph.view.getState(cell) != null &&\n\t\t\tmodel.isVertex(cell) &&\n\t\t\tmodel.getGeometry(cell) != null &&\n\t\t\t!model.getGeometry(cell).relative;\n\t});\n\t\n\treturn this.graph.view.getCellStates(model.filterDescendants(filter, parent));\n};\n\n/**\n * Function: getCells\n * \n * Returns the cells to be modified by this handler. This implementation\n * returns all selection cells that are movable, or the given initial cell if\n * the given cell is not selected and movable. This handles the case of moving\n * unselectable or unselected cells.\n * \n * Parameters:\n * \n * initialCell - <mxCell> that triggered this handler.\n */\nmxGraphHandler.prototype.getCells = function(initialCell)\n{\n\tif (!this.delayedSelection && this.graph.isCellMovable(initialCell))\n\t{\n\t\treturn [initialCell];\n\t}\n\telse\n\t{\n\t\treturn this.graph.getMovableCells(this.graph.getSelectionCells());\n\t}\n};\n\n/**\n * Function: getPreviewBounds\n * \n * Returns the <mxRectangle> used as the preview bounds for\n * moving the given cells.\n */\nmxGraphHandler.prototype.getPreviewBounds = function(cells)\n{\n\tvar bounds = this.getBoundingBox(cells);\n\t\n\tif (bounds != null)\n\t{\n\t\t// Corrects width and height\n\t\tbounds.width = Math.max(0, bounds.width - 1);\n\t\tbounds.height = Math.max(0, bounds.height - 1);\n\t\t\n\t\tif (bounds.width < this.minimumSize)\n\t\t{\n\t\t\tvar dx = this.minimumSize - bounds.width;\n\t\t\tbounds.x -= dx / 2;\n\t\t\tbounds.width = this.minimumSize;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds.x = Math.round(bounds.x);\n\t\t\tbounds.width = Math.ceil(bounds.width);\n\t\t}\n\t\t\n\t\tvar tr = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\t\n\t\tif (bounds.height < this.minimumSize)\n\t\t{\n\t\t\tvar dy = this.minimumSize - bounds.height;\n\t\t\tbounds.y -= dy / 2;\n\t\t\tbounds.height = this.minimumSize;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds.y = Math.round(bounds.y);\n\t\t\tbounds.height = Math.ceil(bounds.height);\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the union of the <mxCellStates> for the given array of <mxCells>.\n * For vertices, this method uses the bounding box of the corresponding shape\n * if one exists. The bounding box of the corresponding text label and all\n * controls and overlays are ignored. See also: <mxGraphView.getBounds> and\n * <mxGraph.getBoundingBox>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounding box should be returned.\n */\nmxGraphHandler.prototype.getBoundingBox = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (model.isVertex(cells[i]) || model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar state = this.graph.view.getState(cells[i]);\n\t\t\t\n\t\t\t\tif (state != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = state;\n\t\t\t\t\t\n\t\t\t\t\tif (model.isVertex(cells[i]) && state.shape != null && state.shape.boundingBox != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox = state.shape.boundingBox;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createPreviewShape\n * \n * Creates the shape used to draw the preview for the given bounds.\n */\nmxGraphHandler.prototype.createPreviewShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.previewColor);\n\tshape.isDashed = true;\n\t\n\tif (this.htmlPreview)\n\t{\n\t\tshape.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tshape.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t// event-transparency on the background area of the rectangle since\n\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\tshape.init(this.graph.getView().getOverlayPane());\n\t\tshape.pointerEvents = false;\n\t\t\n\t\t// Workaround for artifacts on iOS\n\t\tif (mxClient.IS_IOS)\n\t\t{\n\t\t\tshape.getSvgScreenOffset = function()\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxGraphHandler.prototype.start = function(cell, x, y)\n{\n\tthis.cell = cell;\n\tthis.first = mxUtils.convertPoint(this.graph.container, x, y);\n\tthis.cells = this.getCells(this.cell);\n\tthis.bounds = this.graph.getView().getBounds(this.cells);\n\tthis.pBounds = this.getPreviewBounds(this.cells);\n\n\tif (this.guidesEnabled)\n\t{\n\t\tthis.guide = new mxGuide(this.graph, this.getGuideStates());\n\t}\n};\n\n/**\n * Function: useGuidesForEvent\n * \n * Returns true if the guides should be used for the given <mxMouseEvent>.\n * This implementation returns <mxGuide.isEnabledForEvent>.\n */\nmxGraphHandler.prototype.useGuidesForEvent = function(me)\n{\n\treturn (this.guide != null) ? this.guide.isEnabledForEvent(me.getEvent()) : true;\n};\n\n\n/**\n * Function: snap\n * \n * Snaps the given vector to the grid and returns the given mxPoint instance.\n */\nmxGraphHandler.prototype.snap = function(vector)\n{\n\tvar scale = (this.scaleGrid) ? this.graph.view.scale : 1;\n\t\n\tvector.x = this.graph.snap(vector.x / scale) * scale;\n\tvector.y = this.graph.snap(vector.y / scale) * scale;\n\t\n\treturn vector;\n};\n\n/**\n * Function: getDelta\n * \n * Returns an <mxPoint> that represents the vector for moving the cells\n * for the given <mxMouseEvent>.\n */\nmxGraphHandler.prototype.getDelta = function(me)\n{\n\tvar point = mxUtils.convertPoint(this.graph.container, me.getX(), me.getY());\n\tvar s = this.graph.view.scale;\n\t\n\treturn new mxPoint(this.roundLength((point.x - this.first.x) / s) * s,\n\t\tthis.roundLength((point.y - this.first.y) / s) * s);\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxGraphHandler.prototype.updateHint = function(me) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxGraphHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled vector. This uses Math.round.\n */\nmxGraphHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length * 2) / 2;\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by highlighting possible drop targets and updating the\n * preview.\n */\nmxGraphHandler.prototype.mouseMove = function(sender, me)\n{\n\tvar graph = this.graph;\n\n\tif (!me.isConsumed() && graph.isMouseDown && this.cell != null &&\n\t\tthis.first != null && this.bounds != null)\n\t{\n\t\t// Stops moving if a multi touch event is received\n\t\tif (mxEvent.isMultiTouchEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar delta = this.getDelta(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\tvar tol = graph.tolerance;\n\n\t\tif (this.shape != null || Math.abs(dx) > tol || Math.abs(dy) > tol)\n\t\t{\n\t\t\t// Highlight is used for highlighting drop targets\n\t\t\tif (this.highlight == null)\n\t\t\t{\n\t\t\t\tthis.highlight = new mxCellHighlight(this.graph,\n\t\t\t\t\tmxConstants.DROP_TARGET_COLOR, 3);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.shape == null)\n\t\t\t{\n\t\t\t\tthis.shape = this.createPreviewShape(this.bounds);\n\t\t\t}\n\t\t\t\n\t\t\tvar clone = graph.isCloneEvent(me.getEvent()) && graph.isCellsCloneable() && this.isCloneEnabled();\n\t\t\tvar gridEnabled = graph.isGridEnabledEvent(me.getEvent());\n\t\t\tvar hideGuide = true;\n\t\t\t\n\t\t\tif (this.guide != null && this.useGuidesForEvent(me))\n\t\t\t{\n\t\t\t\tdelta = this.guide.move(this.bounds, new mxPoint(dx, dy), gridEnabled, clone);\n\t\t\t\thideGuide = false;\n\t\t\t\tdx = delta.x;\n\t\t\t\tdy = delta.y;\n\t\t\t}\n\t\t\telse if (gridEnabled)\n\t\t\t{\n\t\t\t\tvar trx = graph.getView().translate;\n\t\t\t\tvar scale = graph.getView().scale;\t\t\t\t\n\t\t\t\t\n\t\t\t\tvar tx = this.bounds.x - (graph.snap(this.bounds.x / scale - trx.x) + trx.x) * scale;\n\t\t\t\tvar ty = this.bounds.y - (graph.snap(this.bounds.y / scale - trx.y) + trx.y) * scale;\n\t\t\t\tvar v = this.snap(new mxPoint(dx, dy));\n\t\t\t\n\t\t\t\tdx = v.x - tx;\n\t\t\t\tdy = v.y - ty;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.guide != null && hideGuide)\n\t\t\t{\n\t\t\t\tthis.guide.hide();\n\t\t\t}\n\n\t\t\t// Constrained movement if shift key is pressed\n\t\t\tif (graph.isConstrainedEvent(me.getEvent()))\n\t\t\t{\n\t\t\t\tif (Math.abs(dx) > Math.abs(dy))\n\t\t\t\t{\n\t\t\t\t\tdy = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdx = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.currentDx = dx;\n\t\t\tthis.currentDy = dy;\n\t\t\tthis.updatePreviewShape();\n\n\t\t\tvar target = null;\n\t\t\tvar cell = me.getCell();\n\n\t\t\tif (graph.isDropEnabled() && this.highlightEnabled)\n\t\t\t{\n\t\t\t\t// Contains a call to getCellAt to find the cell under the mouse\n\t\t\t\ttarget = graph.getDropTarget(this.cells, me.getEvent(), cell, clone);\n\t\t\t}\n\n\t\t\tvar state = graph.getView().getState(target);\n\t\t\tvar highlight = false;\n\t\t\t\n\t\t\tif (state != null && (graph.model.getParent(this.cell) != target || clone))\n\t\t\t{\n\t\t\t    if (this.target != target)\n\t\t\t    {\n\t\t\t\t    this.target = target;\n\t\t\t\t    this.setHighlightColor(mxConstants.DROP_TARGET_COLOR);\n\t\t\t\t}\n\t\t\t    \n\t\t\t    highlight = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.target = null;\n\n\t\t\t\tif (this.connectOnDrop && cell != null && this.cells.length == 1 &&\n\t\t\t\t\tgraph.getModel().isVertex(cell) && graph.isCellConnectable(cell))\n\t\t\t\t{\n\t\t\t\t\tstate = graph.getView().getState(cell);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar error = graph.getEdgeValidationError(null, this.cell, cell);\n\t\t\t\t\t\tvar color = (error == null) ?\n\t\t\t\t\t\t\tmxConstants.VALID_COLOR :\n\t\t\t\t\t\t\tmxConstants.INVALID_CONNECT_TARGET_COLOR;\n\t\t\t\t\t\tthis.setHighlightColor(color);\n\t\t\t\t\t\thighlight = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (state != null && highlight)\n\t\t\t{\n\t\t\t\tthis.highlight.highlight(state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.highlight.hide();\n\t\t\t}\n\t\t}\n\n\t\tthis.updateHint(me);\n\t\tthis.consumeMouseEvent(mxEvent.MOUSE_MOVE, me);\n\t\t\n\t\t// Cancels the bubbling of events to the container so\n\t\t// that the droptarget is not reset due to an mouseMove\n\t\t// fired on the container with no associated state.\n\t\tmxEvent.consume(me.getEvent());\n\t}\n\telse if ((this.isMoveEnabled() || this.isCloneEnabled()) && this.updateCursor && !me.isConsumed() &&\n\t\t(me.getState() != null || me.sourceState != null) && !graph.isMouseDown)\n\t{\n\t\tvar cursor = graph.getCursorForMouseEvent(me);\n\t\t\n\t\tif (cursor == null && graph.isEnabled() && graph.isCellMovable(me.getCell()))\n\t\t{\n\t\t\tif (graph.getModel().isEdge(me.getCell()))\n\t\t\t{\n\t\t\t\tcursor = mxConstants.CURSOR_MOVABLE_EDGE;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcursor = mxConstants.CURSOR_MOVABLE_VERTEX;\n\t\t\t}\n\t\t}\n\n\t\t// Sets the cursor on the original source state under the mouse\n\t\t// instead of the event source state which can be the parent\n\t\tif (cursor != null && me.sourceState != null)\n\t\t{\n\t\t\tme.sourceState.setCursor(cursor);\n\t\t}\n\t}\n};\n\n/**\n * Function: updatePreviewShape\n * \n * Updates the bounds of the preview shape.\n */\nmxGraphHandler.prototype.updatePreviewShape = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.bounds = new mxRectangle(Math.round(this.pBounds.x + this.currentDx - this.graph.panDx),\n\t\t\t\tMath.round(this.pBounds.y + this.currentDy - this.graph.panDy), this.pBounds.width, this.pBounds.height);\n\t\tthis.shape.redraw();\n\t}\n};\n\n/**\n * Function: setHighlightColor\n * \n * Sets the color of the rectangle used to highlight drop targets.\n * \n * Parameters:\n * \n * color - String that represents the new highlight color.\n */\nmxGraphHandler.prototype.setHighlightColor = function(color)\n{\n\tif (this.highlight != null)\n\t{\n\t\tthis.highlight.setHighlightColor(color);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the changes to the selection cells.\n */\nmxGraphHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (!me.isConsumed())\n\t{\n\t\tvar graph = this.graph;\n\t\t\n\t\tif (this.cell != null && this.first != null && this.shape != null &&\n\t\t\tthis.currentDx != null && this.currentDy != null)\n\t\t{\n\t\t\tvar cell = me.getCell();\n\t\t\t\n\t\t\tif (this.connectOnDrop && this.target == null && cell != null && graph.getModel().isVertex(cell) &&\n\t\t\t\tgraph.isCellConnectable(cell) && graph.isEdgeValid(null, this.cell, cell))\n\t\t\t{\n\t\t\t\tgraph.connectionHandler.connect(this.cell, cell, me.getEvent());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar clone = graph.isCloneEvent(me.getEvent()) && graph.isCellsCloneable() && this.isCloneEnabled();\n\t\t\t\tvar scale = graph.getView().scale;\n\t\t\t\tvar dx = this.roundLength(this.currentDx / scale);\n\t\t\t\tvar dy = this.roundLength(this.currentDy / scale);\n\t\t\t\tvar target = this.target;\n\t\t\t\t\n\t\t\t\tif (graph.isSplitEnabled() && graph.isSplitTarget(target, this.cells, me.getEvent()))\n\t\t\t\t{\n\t\t\t\t\tgraph.splitEdge(target, this.cells, null, dx, dy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.moveCells(this.cells, dx, dy, clone, this.target, me.getEvent());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.isSelectEnabled() && this.delayedSelection && this.cell != null)\n\t\t{\n\t\t\tthis.selectDelayed(me);\n\t\t}\n\t}\n\n\t// Consumes the event if a cell was initially clicked\n\tif (this.cellWasClicked)\n\t{\n\t\tthis.consumeMouseEvent(mxEvent.MOUSE_UP, me);\n\t}\n\n\tthis.reset();\n};\n\n/**\n * Function: selectDelayed\n * \n * Implements the delayed selection for the given mouse event.\n */\nmxGraphHandler.prototype.selectDelayed = function(me)\n{\n\tif (!this.graph.isCellSelected(this.cell) || !this.graph.popupMenuHandler.isPopupTrigger(me))\n\t{\n\t\tthis.graph.selectCellForEvent(this.cell, me.getEvent());\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxGraphHandler.prototype.reset = function()\n{\n\tthis.destroyShapes();\n\tthis.removeHint();\n\t\n\tthis.cellWasClicked = false;\n\tthis.delayedSelection = false;\n\tthis.currentDx = null;\n\tthis.currentDy = null;\n\tthis.guides = null;\n\tthis.first = null;\n\tthis.cell = null;\n\tthis.target = null;\n};\n\n/**\n * Function: shouldRemoveCellsFromParent\n * \n * Returns true if the given cells should be removed from the parent for the specified\n * mousereleased event.\n */\nmxGraphHandler.prototype.shouldRemoveCellsFromParent = function(parent, cells, evt)\n{\n\tif (this.graph.getModel().isVertex(parent))\n\t{\n\t\tvar pState = this.graph.getView().getState(parent);\n\t\t\n\t\tif (pState != null)\n\t\t{\n\t\t\tvar pt = mxUtils.convertPoint(this.graph.container,\n\t\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(pState.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(pState.getCenterX(), pState.getCenterY());\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, cx);\n\t\t\t}\n\t\t\n\t\t\treturn !mxUtils.contains(pState, pt.x, pt.y);\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: moveCells\n * \n * Moves the given cells by the specified amount.\n */\nmxGraphHandler.prototype.moveCells = function(cells, dx, dy, clone, target, evt)\n{\n\tif (clone)\n\t{\n\t\tcells = this.graph.getCloneableCells(cells);\n\t}\n\t\n\t// Removes cells from parent\n\tif (target == null && this.isRemoveCellsFromParent() &&\n\t\tthis.shouldRemoveCellsFromParent(this.graph.getModel().getParent(this.cell), cells, evt))\n\t{\n\t\ttarget = this.graph.getDefaultParent();\n\t}\n\t\n\t// Cloning into locked cells is not allowed\n\tclone = clone && !this.graph.isCellLocked(target || this.graph.getDefaultParent());\n\t\n\t// Passes all selected cells in order to correctly clone or move into\n\t// the target cell. The method checks for each cell if its movable.\n\tcells = this.graph.moveCells(cells, dx - this.graph.panDx / this.graph.view.scale,\n\t\t\tdy - this.graph.panDy / this.graph.view.scale, clone, target, evt);\n\t\n\tif (this.isSelectEnabled() && this.scrollOnMove)\n\t{\n\t\tthis.graph.scrollCellToVisible(cells[0]);\n\t}\n\t\t\t\n\t// Selects the new cells if cells have been cloned\n\tif (clone)\n\t{\n\t\tthis.graph.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Function: destroyShapes\n * \n * Destroy the preview and highlight shapes.\n */\nmxGraphHandler.prototype.destroyShapes = function()\n{\n\t// Destroys the preview dashed rectangle\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.guide != null)\n\t{\n\t\tthis.guide.destroy();\n\t\tthis.guide = null;\n\t}\n\t\n\t// Destroys the drop target highlight\n\tif (this.highlight != null)\n\t{\n\t\tthis.highlight.destroy();\n\t\tthis.highlight = null;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxGraphHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.panHandler);\n\t\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.refreshHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.refreshHandler);\n\t\tthis.refreshHandler = null;\n\t}\n\t\n\tthis.destroyShapes();\n\tthis.removeHint();\n};\n\n__mxOutput.mxGraphHandler = typeof mxGraphHandler !== 'undefined' ? mxGraphHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPanningHandler\n * \n * Event handler that pans and creates popupmenus. To use the left\n * mousebutton for panning without interfering with cell moving and\n * resizing, use <isUseLeftButton> and <isIgnoreCell>. For grid size\n * steps while panning, use <useGrid>. This handler is built-into\n * <mxGraph.panningHandler> and enabled using <mxGraph.setPanning>.\n * \n * Constructor: mxPanningHandler\n * \n * Constructs an event handler that creates a <mxPopupMenu>\n * and pans the graph.\n *\n * Event: mxEvent.PAN_START\n *\n * Fires when the panning handler changes its <active> state to true. The\n * <code>event</code> property contains the corresponding <mxMouseEvent>.\n *\n * Event: mxEvent.PAN\n *\n * Fires while handle is processing events. The <code>event</code> property contains\n * the corresponding <mxMouseEvent>.\n *\n * Event: mxEvent.PAN_END\n *\n * Fires when the panning handler changes its <active> state to false. The\n * <code>event</code> property contains the corresponding <mxMouseEvent>.\n */\nfunction mxPanningHandler(graph)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.graph.addMouseListener(this);\n\n\t\t// Handles force panning event\n\t\tthis.forcePanningHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar evtName = evt.getProperty('eventName');\n\t\t\tvar me = evt.getProperty('event');\n\t\t\t\n\t\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isForcePanningEvent(me))\n\t\t\t{\n\t\t\t\tthis.start(me);\n\t\t\t\tthis.active = true;\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_START, 'event', me));\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.forcePanningHandler);\n\t\t\n\t\t// Handles pinch gestures\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tif (this.isPinchEnabled())\n\t\t\t{\n\t\t\t\tvar evt = eo.getProperty('event');\n\t\t\t\t\n\t\t\t\tif (!mxEvent.isConsumed(evt) && evt.type == 'gesturestart')\n\t\t\t\t{\n\t\t\t\t\tthis.initialScale = this.graph.view.scale;\n\t\t\t\t\n\t\t\t\t\t// Forces start of panning when pinch gesture starts\n\t\t\t\t\tif (!this.active && this.mouseDownEvent != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.start(this.mouseDownEvent);\n\t\t\t\t\t\tthis.mouseDownEvent = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (evt.type == 'gestureend' && this.initialScale != null)\n\t\t\t\t{\n\t\t\t\t\tthis.initialScale = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.initialScale != null)\n\t\t\t\t{\n\t\t\t\t\tvar value = Math.round(this.initialScale * evt.scale * 100) / 100;\n\t\t\t\t\t\n\t\t\t\t\tif (this.minScale != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue = Math.max(this.minScale, value);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.maxScale != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue = Math.min(this.maxScale, value);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (this.graph.view.scale != value)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.zoomTo(value);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\tthis.mouseUpListener = mxUtils.bind(this, function()\n\t\t{\n\t\t    \tif (this.active)\n\t\t    \t{\n\t\t    \t\tthis.reset();\n\t\t    \t}\n\t\t});\n\t\t\n\t\t// Stops scrolling on every mouseup anywhere in the document\n\t\tmxEvent.addListener(document, 'mouseup', this.mouseUpListener);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxPanningHandler.prototype = new mxEventSource();\nmxPanningHandler.prototype.constructor = mxPanningHandler;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxPanningHandler.prototype.graph = null;\n\n/**\n * Variable: useLeftButtonForPanning\n * \n * Specifies if panning should be active for the left mouse button.\n * Setting this to true may conflict with <mxRubberband>. Default is false.\n */\nmxPanningHandler.prototype.useLeftButtonForPanning = false;\n\n/**\n * Variable: usePopupTrigger\n * \n * Specifies if <mxEvent.isPopupTrigger> should also be used for panning.\n */\nmxPanningHandler.prototype.usePopupTrigger = true;\n\n/**\n * Variable: ignoreCell\n * \n * Specifies if panning should be active even if there is a cell under the\n * mousepointer. Default is false.\n */\nmxPanningHandler.prototype.ignoreCell = false;\n\n/**\n * Variable: previewEnabled\n * \n * Specifies if the panning should be previewed. Default is true.\n */\nmxPanningHandler.prototype.previewEnabled = true;\n\n/**\n * Variable: useGrid\n * \n * Specifies if the panning steps should be aligned to the grid size.\n * Default is false.\n */\nmxPanningHandler.prototype.useGrid = false;\n\n/**\n * Variable: panningEnabled\n * \n * Specifies if panning should be enabled. Default is true.\n */\nmxPanningHandler.prototype.panningEnabled = true;\n\n/**\n * Variable: pinchEnabled\n * \n * Specifies if pinch gestures should be handled as zoom. Default is true.\n */\nmxPanningHandler.prototype.pinchEnabled = true;\n\n/**\n * Variable: maxScale\n * \n * Specifies the maximum scale. Default is 8.\n */\nmxPanningHandler.prototype.maxScale = 8;\n\n/**\n * Variable: minScale\n * \n * Specifies the minimum scale. Default is 0.01.\n */\nmxPanningHandler.prototype.minScale = 0.01;\n\n/**\n * Variable: dx\n * \n * Holds the current horizontal offset.\n */\nmxPanningHandler.prototype.dx = null;\n\n/**\n * Variable: dy\n * \n * Holds the current vertical offset.\n */\nmxPanningHandler.prototype.dy = null;\n\n/**\n * Variable: startX\n * \n * Holds the x-coordinate of the start point.\n */\nmxPanningHandler.prototype.startX = 0;\n\n/**\n * Variable: startY\n * \n * Holds the y-coordinate of the start point.\n */\nmxPanningHandler.prototype.startY = 0;\n\n/**\n * Function: isActive\n * \n * Returns true if the handler is currently active.\n */\nmxPanningHandler.prototype.isActive = function()\n{\n\treturn this.active || this.initialScale != null;\n};\n\n/**\n * Function: isPanningEnabled\n * \n * Returns <panningEnabled>.\n */\nmxPanningHandler.prototype.isPanningEnabled = function()\n{\n\treturn this.panningEnabled;\n};\n\n/**\n * Function: setPanningEnabled\n * \n * Sets <panningEnabled>.\n */\nmxPanningHandler.prototype.setPanningEnabled = function(value)\n{\n\tthis.panningEnabled = value;\n};\n\n/**\n * Function: isPinchEnabled\n * \n * Returns <pinchEnabled>.\n */\nmxPanningHandler.prototype.isPinchEnabled = function()\n{\n\treturn this.pinchEnabled;\n};\n\n/**\n * Function: setPinchEnabled\n * \n * Sets <pinchEnabled>.\n */\nmxPanningHandler.prototype.setPinchEnabled = function(value)\n{\n\tthis.pinchEnabled = value;\n};\n\n/**\n * Function: isPanningTrigger\n * \n * Returns true if the given event is a panning trigger for the optional\n * given cell. This returns true if control-shift is pressed or if\n * <usePopupTrigger> is true and the event is a popup trigger.\n */\nmxPanningHandler.prototype.isPanningTrigger = function(me)\n{\n\tvar evt = me.getEvent();\n\t\n\treturn (this.useLeftButtonForPanning && me.getState() == null &&\n\t\t\tmxEvent.isLeftMouseButton(evt)) || (mxEvent.isControlDown(evt) &&\n\t\t\tmxEvent.isShiftDown(evt)) || (this.usePopupTrigger && mxEvent.isPopupTrigger(evt));\n};\n\n/**\n * Function: isForcePanningEvent\n * \n * Returns true if the given <mxMouseEvent> should start panning. This\n * implementation always returns true if <ignoreCell> is true or for\n * multi touch events.\n */\nmxPanningHandler.prototype.isForcePanningEvent = function(me)\n{\n\treturn this.ignoreCell || mxEvent.isMultiTouchEvent(me.getEvent());\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating the panning. By consuming the event all\n * subsequent events of the gesture are redirected to this handler.\n */\nmxPanningHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.mouseDownEvent = me;\n\t\n\tif (!me.isConsumed() && this.isPanningEnabled() && !this.active && this.isPanningTrigger(me))\n\t{\n\t\tthis.start(me);\n\t\tthis.consumePanningTrigger(me);\n\t}\n};\n\n/**\n * Function: start\n * \n * Starts panning at the given event.\n */\nmxPanningHandler.prototype.start = function(me)\n{\n\tthis.dx0 = -this.graph.container.scrollLeft;\n\tthis.dy0 = -this.graph.container.scrollTop;\n\n\t// Stores the location of the trigger event\n\tthis.startX = me.getX();\n\tthis.startY = me.getY();\n\tthis.dx = null;\n\tthis.dy = null;\n\t\n\tthis.panningTrigger = true;\n};\n\n/**\n * Function: consumePanningTrigger\n * \n * Consumes the given <mxMouseEvent> if it was a panning trigger in\n * <mouseDown>. The default is to invoke <mxMouseEvent.consume>. Note that this\n * will block any further event processing. If you haven't disabled built-in\n * context menus and require immediate selection of the cell on mouseDown in\n * Safari and/or on the Mac, then use the following code:\n * \n * (code)\n * mxPanningHandler.prototype.consumePanningTrigger = function(me)\n * {\n *   if (me.evt.preventDefault)\n *   {\n *     me.evt.preventDefault();\n *   }\n *   \n *   // Stops event processing in IE\n *   me.evt.returnValue = false;\n *   \n *   // Sets local consumed state\n *   if (!mxClient.IS_SF && !mxClient.IS_MAC)\n *   {\n *     me.consumed = true;\n *   }\n * };\n * (end)\n */\nmxPanningHandler.prototype.consumePanningTrigger = function(me)\n{\n\tme.consume();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the panning on the graph.\n */\nmxPanningHandler.prototype.mouseMove = function(sender, me)\n{\n\tthis.dx = me.getX() - this.startX;\n\tthis.dy = me.getY() - this.startY;\n\t\n\tif (this.active)\n\t{\n\t\tif (this.previewEnabled)\n\t\t{\n\t\t\t// Applies the grid to the panning steps\n\t\t\tif (this.useGrid)\n\t\t\t{\n\t\t\t\tthis.dx = this.graph.snap(this.dx);\n\t\t\t\tthis.dy = this.graph.snap(this.dy);\n\t\t\t}\n\t\t\t\n\t\t\tthis.graph.panGraph(this.dx + this.dx0, this.dy + this.dy0);\n\t\t}\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN, 'event', me));\n\t}\n\telse if (this.panningTrigger)\n\t{\n\t\tvar tmp = this.active;\n\n\t\t// Panning is activated only if the mouse is moved\n\t\t// beyond the graph tolerance\n\t\tthis.active = Math.abs(this.dx) > this.graph.tolerance || Math.abs(this.dy) > this.graph.tolerance;\n\n\t\tif (!tmp && this.active)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_START, 'event', me));\n\t\t}\n\t}\n\t\n\tif (this.active || this.panningTrigger)\n\t{\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPanningHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tif (this.dx != null && this.dy != null)\n\t\t{\n\t\t\t// Ignores if scrollbars have been used for panning\n\t\t\tif (!this.graph.useScrollbarsForPanning || !mxUtils.hasScrollbars(this.graph.container))\n\t\t\t{\n\t\t\t\tvar scale = this.graph.getView().scale;\n\t\t\t\tvar t = this.graph.getView().translate;\n\t\t\t\tthis.graph.panGraph(0, 0);\n\t\t\t\tthis.panGraph(t.x + this.dx / scale, t.y + this.dy / scale);\n\t\t\t}\n\t\t\t\n\t\t\tme.consume();\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_END, 'event', me));\n\t}\n\t\n\tthis.reset();\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPanningHandler.prototype.reset = function()\n{\n\tthis.panningTrigger = false;\n\tthis.mouseDownEvent = null;\n\tthis.active = false;\n\tthis.dx = null;\n\tthis.dy = null;\n};\n\n/**\n * Function: panGraph\n * \n * Pans <graph> by the given amount.\n */\nmxPanningHandler.prototype.panGraph = function(dx, dy)\n{\n\tthis.graph.getView().setTranslate(dx, dy);\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPanningHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.forcePanningHandler);\n\tthis.graph.removeListener(this.gestureHandler);\n\tmxEvent.removeListener(document, 'mouseup', this.mouseUpListener);\n};\n\n__mxOutput.mxPanningHandler = typeof mxPanningHandler !== 'undefined' ? mxPanningHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPopupMenuHandler\n * \n * Event handler that creates popupmenus.\n * \n * Constructor: mxPopupMenuHandler\n * \n * Constructs an event handler that creates a <mxPopupMenu>.\n */\nfunction mxPopupMenuHandler(graph, factoryMethod)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.factoryMethod = factoryMethod;\n\t\tthis.graph.addMouseListener(this);\n\t\t\n\t\t// Does not show menu if any touch gestures take place after the trigger\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\tthis.init();\n\t}\n};\n\n/**\n * Extends mxPopupMenu.\n */\nmxPopupMenuHandler.prototype = new mxPopupMenu();\nmxPopupMenuHandler.prototype.constructor = mxPopupMenuHandler;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxPopupMenuHandler.prototype.graph = null;\n\n/**\n * Variable: selectOnPopup\n * \n * Specifies if cells should be selected if a popupmenu is displayed for\n * them. Default is true.\n */\nmxPopupMenuHandler.prototype.selectOnPopup = true;\n\n/**\n * Variable: clearSelectionOnBackground\n * \n * Specifies if cells should be deselected if a popupmenu is displayed for\n * the diagram background. Default is true.\n */\nmxPopupMenuHandler.prototype.clearSelectionOnBackground = true;\n\n/**\n * Variable: triggerX\n * \n * X-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.triggerX = null;\n\n/**\n * Variable: triggerY\n * \n * Y-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.triggerY = null;\n\n/**\n * Variable: screenX\n * \n * Screen X-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.screenX = null;\n\n/**\n * Variable: screenY\n * \n * Screen Y-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.screenY = null;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxPopupMenuHandler.prototype.init = function()\n{\n\t// Supercall\n\tmxPopupMenu.prototype.init.apply(this);\n\n\t// Hides the tooltip if the mouse is over\n\t// the context menu\n\tmxEvent.addGestureListeners(this.div, mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.graph.tooltipHandler.hide();\n\t}));\n};\n\n/**\n * Function: isSelectOnPopup\n * \n * Hook for returning if a cell should be selected for a given <mxMouseEvent>.\n * This implementation returns <selectOnPopup>.\n */\nmxPopupMenuHandler.prototype.isSelectOnPopup = function(me)\n{\n\treturn this.selectOnPopup;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating the panning. By consuming the event all\n * subsequent events of the gesture are redirected to this handler.\n */\nmxPopupMenuHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (this.isEnabled() && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\t// Hides the popupmenu if is is being displayed\n\t\tthis.hideMenu();\n\t\tthis.triggerX = me.getGraphX();\n\t\tthis.triggerY = me.getGraphY();\n\t\tthis.screenX = mxEvent.getMainEvent(me.getEvent()).screenX;\n\t\tthis.screenY = mxEvent.getMainEvent(me.getEvent()).screenY;\n\t\tthis.popupTrigger = this.isPopupTrigger(me);\n\t\tthis.inTolerance = true;\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the panning on the graph.\n */\nmxPopupMenuHandler.prototype.mouseMove = function(sender, me)\n{\n\t// Popup trigger may change on mouseUp so ignore it\n\tif (this.inTolerance && this.screenX != null && this.screenY != null)\n\t{\n\t\tif (Math.abs(mxEvent.getMainEvent(me.getEvent()).screenX - this.screenX) > this.graph.tolerance ||\n\t\t\tMath.abs(mxEvent.getMainEvent(me.getEvent()).screenY - this.screenY) > this.graph.tolerance)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPopupMenuHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.popupTrigger && this.inTolerance && this.triggerX != null && this.triggerY != null)\n\t{\n\t\tvar cell = this.getCellForPopupEvent(me);\n\n\t\t// Selects the cell for which the context menu is being displayed\n\t\tif (this.graph.isEnabled() && this.isSelectOnPopup(me) &&\n\t\t\tcell != null && !this.graph.isCellSelected(cell))\n\t\t{\n\t\t\tthis.graph.setSelectionCell(cell);\n\t\t}\n\t\telse if (this.clearSelectionOnBackground && cell == null)\n\t\t{\n\t\t\tthis.graph.clearSelection();\n\t\t}\n\t\t\n\t\t// Hides the tooltip if there is one\n\t\tthis.graph.tooltipHandler.hide();\n\n\t\t// Menu is shifted by 1 pixel so that the mouse up event\n\t\t// is routed via the underlying shape instead of the DIV\n\t\tvar origin = mxUtils.getScrollOrigin();\n\t\tthis.popup(me.getX() + origin.x + 1, me.getY() + origin.y + 1, cell, me.getEvent());\n\t\tme.consume();\n\t}\n\t\n\tthis.popupTrigger = false;\n\tthis.inTolerance = false;\n};\n\n/**\n * Function: getCellForPopupEvent\n * \n * Hook to return the cell for the mouse up popup trigger handling.\n */\nmxPopupMenuHandler.prototype.getCellForPopupEvent = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPopupMenuHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.gestureHandler);\n\t\n\t// Supercall\n\tmxPopupMenu.prototype.destroy.apply(this);\n};\n\n__mxOutput.mxPopupMenuHandler = typeof mxPopupMenuHandler !== 'undefined' ? mxPopupMenuHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellMarker\n * \n * A helper class to process mouse locations and highlight cells.\n * \n * Helper class to highlight cells. To add a cell marker to an existing graph\n * for highlighting all cells, the following code is used:\n * \n * (code)\n * var marker = new mxCellMarker(graph);\n * graph.addMouseListener({\n *   mouseDown: function() {},\n *   mouseMove: function(sender, me)\n *   {\n *     marker.process(me);\n *   },\n *   mouseUp: function() {}\n * });\n * (end)\n *\n * Event: mxEvent.MARK\n * \n * Fires after a cell has been marked or unmarked. The <code>state</code>\n * property contains the marked <mxCellState> or null if no state is marked.\n * \n * Constructor: mxCellMarker\n * \n * Constructs a new cell marker.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * validColor - Optional marker color for valid states. Default is\n * <mxConstants.DEFAULT_VALID_COLOR>.\n * invalidColor - Optional marker color for invalid states. Default is\n * <mxConstants.DEFAULT_INVALID_COLOR>.\n * hotspot - Portion of the width and hight where a state intersects a\n * given coordinate pair. A value of 0 means always highlight. Default is\n * <mxConstants.DEFAULT_HOTSPOT>.\n */\nfunction mxCellMarker(graph, validColor, invalidColor, hotspot)\n{\n\tmxEventSource.call(this);\n\t\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.validColor = (validColor != null) ? validColor : mxConstants.DEFAULT_VALID_COLOR;\n\t\tthis.invalidColor = (invalidColor != null) ? invalidColor : mxConstants.DEFAULT_INVALID_COLOR;\n\t\tthis.hotspot = (hotspot != null) ? hotspot : mxConstants.DEFAULT_HOTSPOT;\n\t\t\n\t\tthis.highlight = new mxCellHighlight(graph);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxCellMarker, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellMarker.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if the marker is enabled. Default is true.\n */\nmxCellMarker.prototype.enabled = true;\n\n/**\n * Variable: hotspot\n * \n * Specifies the portion of the width and height that should trigger\n * a highlight. The area around the center of the cell to be marked is used\n * as the hotspot. Possible values are between 0 and 1. Default is\n * mxConstants.DEFAULT_HOTSPOT.\n */\nmxCellMarker.prototype.hotspot = mxConstants.DEFAULT_HOTSPOT; \n\n/**\n * Variable: hotspotEnabled\n * \n * Specifies if the hotspot is enabled. Default is false.\n */\nmxCellMarker.prototype.hotspotEnabled = false;\n\n/**\n * Variable: validColor\n * \n * Holds the valid marker color.\n */\nmxCellMarker.prototype.validColor = null;\n\n/**\n * Variable: invalidColor\n * \n * Holds the invalid marker color.\n */\nmxCellMarker.prototype.invalidColor = null;\n\n/**\n * Variable: currentColor\n * \n * Holds the current marker color.\n */\nmxCellMarker.prototype.currentColor = null;\n\n/**\n * Variable: validState\n * \n * Holds the marked <mxCellState> if it is valid.\n */\nmxCellMarker.prototype.validState = null; \n\n/**\n * Variable: markedState\n * \n * Holds the marked <mxCellState>.\n */\nmxCellMarker.prototype.markedState = null;\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxCellMarker.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxCellMarker.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setHotspot\n * \n * Sets the <hotspot>.\n */\nmxCellMarker.prototype.setHotspot = function(hotspot)\n{\n\tthis.hotspot = hotspot;\n};\n\n/**\n * Function: getHotspot\n * \n * Returns the <hotspot>.\n */\nmxCellMarker.prototype.getHotspot = function()\n{\n\treturn this.hotspot;\n};\n\n/**\n * Function: setHotspotEnabled\n * \n * Specifies whether the hotspot should be used in <intersects>.\n */\nmxCellMarker.prototype.setHotspotEnabled = function(enabled)\n{\n\tthis.hotspotEnabled = enabled;\n};\n\n/**\n * Function: isHotspotEnabled\n * \n * Returns true if hotspot is used in <intersects>.\n */\nmxCellMarker.prototype.isHotspotEnabled = function()\n{\n\treturn this.hotspotEnabled;\n};\n\n/**\n * Function: hasValidState\n * \n * Returns true if <validState> is not null.\n */\nmxCellMarker.prototype.hasValidState = function()\n{\n\treturn this.validState != null;\n};\n\n/**\n * Function: getValidState\n * \n * Returns the <validState>.\n */\nmxCellMarker.prototype.getValidState = function()\n{\n\treturn this.validState;\n};\n\n/**\n * Function: getMarkedState\n * \n * Returns the <markedState>.\n */\nmxCellMarker.prototype.getMarkedState = function()\n{\n\treturn this.markedState;\n};\n\n/**\n * Function: reset\n * \n * Resets the state of the cell marker.\n */\nmxCellMarker.prototype.reset = function()\n{\n\tthis.validState = null;\n\t\n\tif (this.markedState != null)\n\t{\n\t\tthis.markedState = null;\n\t\tthis.unmark();\n\t}\n};\n\n/**\n * Function: process\n * \n * Processes the given event and cell and marks the state returned by\n * <getState> with the color returned by <getMarkerColor>. If the\n * markerColor is not null, then the state is stored in <markedState>. If\n * <isValidState> returns true, then the state is stored in <validState>\n * regardless of the marker color. The state is returned regardless of the\n * marker color and valid state. \n */\nmxCellMarker.prototype.process = function(me)\n{\n\tvar state = null;\n\t\n\tif (this.isEnabled())\n\t{\n\t\tstate = this.getState(me);\n\t\tthis.setCurrentState(state, me);\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: setCurrentState\n * \n * Sets and marks the current valid state.\n */\nmxCellMarker.prototype.setCurrentState = function(state, me, color)\n{\n\tvar isValid = (state != null) ? this.isValidState(state) : false;\n\tcolor = (color != null) ? color : this.getMarkerColor(me.getEvent(), state, isValid);\n\t\n\tif (isValid)\n\t{\n\t\tthis.validState = state;\n\t}\n\telse\n\t{\n\t\tthis.validState = null;\n\t}\n\t\n\tif (state != this.markedState || color != this.currentColor)\n\t{\n\t\tthis.currentColor = color;\n\t\t\n\t\tif (state != null && this.currentColor != null)\n\t\t{\n\t\t\tthis.markedState = state;\n\t\t\tthis.mark();\t\t\n\t\t}\n\t\telse if (this.markedState != null)\n\t\t{\n\t\t\tthis.markedState = null;\n\t\t\tthis.unmark();\n\t\t}\n\t}\n};\n\n/**\n * Function: markCell\n * \n * Marks the given cell using the given color, or <validColor> if no color is specified.\n */\nmxCellMarker.prototype.markCell = function(cell, color)\n{\n\tvar state = this.graph.getView().getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\tthis.currentColor = (color != null) ? color : this.validColor;\n\t\tthis.markedState = state;\n\t\tthis.mark();\n\t}\n};\n\n/**\n * Function: mark\n * \n * Marks the <markedState> and fires a <mark> event.\n */\nmxCellMarker.prototype.mark = function()\n{\n\tthis.highlight.setHighlightColor(this.currentColor);\n\tthis.highlight.highlight(this.markedState);\n\tthis.fireEvent(new mxEventObject(mxEvent.MARK, 'state', this.markedState));\n};\n\n/**\n * Function: unmark\n * \n * Hides the marker and fires a <mark> event.\n */\nmxCellMarker.prototype.unmark = function()\n{\n\tthis.mark();\n};\n\n/**\n * Function: isValidState\n * \n * Returns true if the given <mxCellState> is a valid state. If this\n * returns true, then the state is stored in <validState>. The return value\n * of this method is used as the argument for <getMarkerColor>.\n */\nmxCellMarker.prototype.isValidState = function(state)\n{\n\treturn true;\n};\n\n/**\n * Function: getMarkerColor\n * \n * Returns the valid- or invalidColor depending on the value of isValid.\n * The given <mxCellState> is ignored by this implementation.\n */\nmxCellMarker.prototype.getMarkerColor = function(evt, state, isValid)\n{\n\treturn (isValid) ? this.validColor : this.invalidColor;\n};\n\n/**\n * Function: getState\n * \n * Uses <getCell>, <getStateToMark> and <intersects> to return the\n * <mxCellState> for the given <mxMouseEvent>.\n */\nmxCellMarker.prototype.getState = function(me)\n{\n\tvar view = this.graph.getView();\n\tvar cell = this.getCell(me);\n\tvar state = this.getStateToMark(view.getState(cell));\n\n\treturn (state != null && this.intersects(state, me)) ? state : null;\n};\n\n/**\n * Function: getCell\n * \n * Returns the <mxCell> for the given event and cell. This returns the\n * given cell.\n */\nmxCellMarker.prototype.getCell = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: getStateToMark\n * \n * Returns the <mxCellState> to be marked for the given <mxCellState> under\n * the mouse. This returns the given state.\n */\nmxCellMarker.prototype.getStateToMark = function(state)\n{\n\treturn state;\n};\n\n/**\n * Function: intersects\n * \n * Returns true if the given coordinate pair intersects the given state.\n * This returns true if the <hotspot> is 0 or the coordinates are inside\n * the hotspot for the given cell state.\n */\nmxCellMarker.prototype.intersects = function(state, me)\n{\n\tif (this.hotspotEnabled)\n\t{\n\t\treturn mxUtils.intersectsHotspot(state, me.getGraphX(), me.getGraphY(),\n\t\t\tthis.hotspot, mxConstants.MIN_HOTSPOT_SIZE,\n\t\t\tmxConstants.MAX_HOTSPOT_SIZE);\n\t}\n\t\n\treturn true;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxCellMarker.prototype.destroy = function()\n{\n\tthis.graph.getView().removeListener(this.resetHandler);\n\tthis.graph.getModel().removeListener(this.resetHandler);\n\tthis.highlight.destroy();\n};\n\n__mxOutput.mxCellMarker = typeof mxCellMarker !== 'undefined' ? mxCellMarker : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSelectionCellsHandler\n * \n * An event handler that manages cell handlers and invokes their mouse event\n * processing functions.\n * \n * Group: Events\n * \n * Event: mxEvent.ADD\n * \n * Fires if a cell has been added to the selection. The <code>state</code>\n * property contains the <mxCellState> that has been added.\n * \n * Event: mxEvent.REMOVE\n * \n * Fires if a cell has been remove from the selection. The <code>state</code>\n * property contains the <mxCellState> that has been removed.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxSelectionCellsHandler(graph)\n{\n\tmxEventSource.call(this);\n\t\n\tthis.graph = graph;\n\tthis.handlers = new mxDictionary();\n\tthis.graph.addMouseListener(this);\n\t\n\tthis.refreshHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.refresh();\n\t\t}\n\t});\n\t\n\tthis.graph.getSelectionModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.DOWN, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.UP, this.refreshHandler);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxSelectionCellsHandler, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxSelectionCellsHandler.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxSelectionCellsHandler.prototype.enabled = true;\n\n/**\n * Variable: refreshHandler\n * \n * Keeps a reference to an event listener for later removal.\n */\nmxSelectionCellsHandler.prototype.refreshHandler = null;\n\n/**\n * Variable: maxHandlers\n * \n * Defines the maximum number of handlers to paint individually. Default is 100.\n */\nmxSelectionCellsHandler.prototype.maxHandlers = 100;\n\n/**\n * Variable: handlers\n * \n * <mxDictionary> that maps from cells to handlers.\n */\nmxSelectionCellsHandler.prototype.handlers = null;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxSelectionCellsHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxSelectionCellsHandler.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: getHandler\n * \n * Returns the handler for the given cell.\n */\nmxSelectionCellsHandler.prototype.getHandler = function(cell)\n{\n\treturn this.handlers.get(cell);\n};\n\n/**\n * Function: reset\n * \n * Resets all handlers.\n */\nmxSelectionCellsHandler.prototype.reset = function()\n{\n\tthis.handlers.visit(function(key, handler)\n\t{\n\t\thandler.reset.apply(handler);\n\t});\n};\n\n/**\n * Function: refresh\n * \n * Reloads or updates all handlers.\n */\nmxSelectionCellsHandler.prototype.refresh = function()\n{\n\t// Removes all existing handlers\n\tvar oldHandlers = this.handlers;\n\tthis.handlers = new mxDictionary();\n\t\n\t// Creates handles for all selection cells\n\tvar tmp = this.graph.getSelectionCells();\n\n\tfor (var i = 0; i < tmp.length; i++)\n\t{\n\t\tvar state = this.graph.view.getState(tmp[i]);\n\n\t\tif (state != null)\n\t\t{\n\t\t\tvar handler = oldHandlers.remove(tmp[i]);\n\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tif (handler.state != state)\n\t\t\t\t{\n\t\t\t\t\thandler.destroy();\n\t\t\t\t\thandler = null;\n\t\t\t\t}\n\t\t\t\telse if (!this.isHandlerActive(handler))\n\t\t\t\t{\n\t\t\t\t\tif (handler.refresh != null)\n\t\t\t\t\t{\n\t\t\t\t\t\thandler.refresh();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\thandler.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (handler == null)\n\t\t\t{\n\t\t\t\thandler = this.graph.createHandler(state);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD, 'state', state));\n\t\t\t}\n\t\t\t\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tthis.handlers.put(tmp[i], handler);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Destroys all unused handlers\n\toldHandlers.visit(mxUtils.bind(this, function(key, handler)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE, 'state', handler.state));\n\t\thandler.destroy();\n\t}));\n};\n\n/**\n * Function: isHandlerActive\n * \n * Returns true if the given handler is active and should not be redrawn.\n */\nmxSelectionCellsHandler.prototype.isHandlerActive = function(handler)\n{\n\treturn handler.index != null;\n};\n\n/**\n * Function: updateHandler\n * \n * Updates the handler for the given shape if one exists.\n */\nmxSelectionCellsHandler.prototype.updateHandler = function(state)\n{\n\tvar handler = this.handlers.remove(state.cell);\n\t\n\tif (handler != null)\n\t{\n\t\thandler.destroy();\n\t\thandler = this.graph.createHandler(state);\n\t\t\n\t\tif (handler != null)\n\t\t{\n\t\t\tthis.handlers.put(state.cell, handler);\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseDown\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseDown.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseMove.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseUp.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxSelectionCellsHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\t\n\tif (this.refreshHandler != null)\n\t{\n\t\tthis.graph.getSelectionModel().removeListener(this.refreshHandler);\n\t\tthis.graph.getModel().removeListener(this.refreshHandler);\n\t\tthis.graph.getView().removeListener(this.refreshHandler);\n\t\tthis.refreshHandler = null;\n\t}\n};\n\n__mxOutput.mxSelectionCellsHandler = typeof mxSelectionCellsHandler !== 'undefined' ? mxSelectionCellsHandler : undefined;\n\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\n/**\n * Class: mxConnectionHandler\n *\n * Graph event handler that creates new connections. Uses <mxTerminalMarker>\n * for finding and highlighting the source and target vertices and\n * <factoryMethod> to create the edge instance. This handler is built-into\n * <mxGraph.connectionHandler> and enabled using <mxGraph.setConnectable>.\n *\n * Example:\n * \n * (code)\n * new mxConnectionHandler(graph, function(source, target, style)\n * {\n *   edge = new mxCell('', new mxGeometry());\n *   edge.setEdge(true);\n *   edge.setStyle(style);\n *   edge.geometry.relative = true;\n *   return edge;\n * });\n * (end)\n * \n * Here is an alternative solution that just sets a specific user object for\n * new edges by overriding <insertEdge>.\n *\n * (code)\n * mxConnectionHandlerInsertEdge = mxConnectionHandler.prototype.insertEdge;\n * mxConnectionHandler.prototype.insertEdge = function(parent, id, value, source, target, style)\n * {\n *   value = 'Test';\n * \n *   return mxConnectionHandlerInsertEdge.apply(this, arguments);\n * };\n * (end)\n * \n * Using images to trigger connections:\n * \n * This handler uses mxTerminalMarker to find the source and target cell for\n * the new connection and creates a new edge using <connect>. The new edge is\n * created using <createEdge> which in turn uses <factoryMethod> or creates a\n * new default edge.\n * \n * The handler uses a \"highlight-paradigm\" for indicating if a cell is being\n * used as a source or target terminal, as seen in other diagramming products.\n * In order to allow both, moving and connecting cells at the same time,\n * <mxConstants.DEFAULT_HOTSPOT> is used in the handler to determine the hotspot\n * of a cell, that is, the region of the cell which is used to trigger a new\n * connection. The constant is a value between 0 and 1 that specifies the\n * amount of the width and height around the center to be used for the hotspot\n * of a cell and its default value is 0.5. In addition,\n * <mxConstants.MIN_HOTSPOT_SIZE> defines the minimum number of pixels for the\n * width and height of the hotspot.\n * \n * This solution, while standards compliant, may be somewhat confusing because\n * there is no visual indicator for the hotspot and the highlight is seen to\n * switch on and off while the mouse is being moved in and out. Furthermore,\n * this paradigm does not allow to create different connections depending on\n * the highlighted hotspot as there is only one hotspot per cell and it\n * normally does not allow cells to be moved and connected at the same time as\n * there is no clear indication of the connectable area of the cell.\n * \n * To come across these issues, the handle has an additional <createIcons> hook\n * with a default implementation that allows to create one icon to be used to\n * trigger new connections. If this icon is specified, then new connections can\n * only be created if the image is clicked while the cell is being highlighted.\n * The <createIcons> hook may be overridden to create more than one\n * <mxImageShape> for creating new connections, but the default implementation\n * supports one image and is used as follows:\n * \n * In order to display the \"connect image\" whenever the mouse is over the cell,\n * an DEFAULT_HOTSPOT of 1 should be used:\n * \n * (code)\n * mxConstants.DEFAULT_HOTSPOT = 1;\n * (end)\n * \n * In order to avoid confusion with the highlighting, the highlight color\n * should not be used with a connect image:\n * \n * (code)\n * mxConstants.HIGHLIGHT_COLOR = null;\n * (end)\n * \n * To install the image, the connectImage field of the mxConnectionHandler must\n * be assigned a new <mxImage> instance:\n * \n * (code)\n * mxConnectionHandler.prototype.connectImage = new mxImage('images/green-dot.gif', 14, 14);\n * (end)\n * \n * This will use the green-dot.gif with a width and height of 14 pixels as the\n * image to trigger new connections. In createIcons the icon field of the\n * handler will be set in order to remember the icon that has been clicked for\n * creating the new connection. This field will be available under selectedIcon\n * in the connect method, which may be overridden to take the icon that\n * triggered the new connection into account. This is useful if more than one\n * icon may be used to create a connection.\n *\n * Group: Events\n * \n * Event: mxEvent.START\n * \n * Fires when a new connection is being created by the user. The <code>state</code>\n * property contains the state of the source cell.\n * \n * Event: mxEvent.CONNECT\n * \n * Fires between begin- and endUpdate in <connect>. The <code>cell</code>\n * property contains the inserted edge, the <code>event</code> and <code>target</code> \n * properties contain the respective arguments that were passed to <connect> (where\n * target corresponds to the dropTarget argument). Finally, the <code>terminal</code>\n * property corresponds to the target argument in <connect> or the clone of the source\n * terminal if <createTarget> is enabled.\n * \n * Note that the target is the cell under the mouse where the mouse button was released.\n * Depending on the logic in the handler, this doesn't necessarily have to be the target\n * of the inserted edge. To print the source, target or any optional ports IDs that the\n * edge is connected to, the following code can be used. To get more details about the\n * actual connection point, <mxGraph.getConnectionConstraint> can be used. To resolve\n * the port IDs, use <mxGraphModel.getCell>.\n * \n * (code)\n * graph.connectionHandler.addListener(mxEvent.CONNECT, function(sender, evt)\n * {\n *   var edge = evt.getProperty('cell');\n *   var source = graph.getModel().getTerminal(edge, true);\n *   var target = graph.getModel().getTerminal(edge, false);\n *   \n *   var style = graph.getCellStyle(edge);\n *   var sourcePortId = style[mxConstants.STYLE_SOURCE_PORT];\n *   var targetPortId = style[mxConstants.STYLE_TARGET_PORT];\n *   \n *   mxLog.show();\n *   mxLog.debug('connect', edge, source.id, target.id, sourcePortId, targetPortId);\n * });\n * (end)\n *\n * Event: mxEvent.RESET\n * \n * Fires when the <reset> method is invoked.\n *\n * Constructor: mxConnectionHandler\n *\n * Constructs an event handler that connects vertices using the specified\n * factory method to create the new edges. Modify\n * <mxConstants.ACTIVE_REGION> to setup the region on a cell which triggers\n * the creation of a new connection or use connect icons as explained\n * above.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * factoryMethod - Optional function to create the edge. The function takes\n * the source and target <mxCell> as the first and second argument and an\n * optional cell style from the preview as the third argument. It returns\n * the <mxCell> that represents the new edge.\n */\nfunction mxConnectionHandler(graph, factoryMethod)\n{\n\tmxEventSource.call(this);\n\t\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.factoryMethod = factoryMethod;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tthis.reset();\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxConnectionHandler, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxConnectionHandler.prototype.graph = null;\n\n/**\n * Variable: factoryMethod\n * \n * Function that is used for creating new edges. The function takes the\n * source and target <mxCell> as the first and second argument and returns\n * a new <mxCell> that represents the edge. This is used in <createEdge>.\n */\nmxConnectionHandler.prototype.factoryMethod = true;\n\n/**\n * Variable: moveIconFront\n * \n * Specifies if icons should be displayed inside the graph container instead\n * of the overlay pane. This is used for HTML labels on vertices which hide\n * the connect icon. This has precendence over <moveIconBack> when set\n * to true. Default is false.\n */\nmxConnectionHandler.prototype.moveIconFront = false;\n\n/**\n * Variable: moveIconBack\n * \n * Specifies if icons should be moved to the back of the overlay pane. This can\n * be set to true if the icons of the connection handler conflict with other\n * handles, such as the vertex label move handle. Default is false.\n */\nmxConnectionHandler.prototype.moveIconBack = false;\n\n/**\n * Variable: connectImage\n * \n * <mxImage> that is used to trigger the creation of a new connection. This\n * is used in <createIcons>. Default is null.\n */\nmxConnectionHandler.prototype.connectImage = null;\n\n/**\n * Variable: targetConnectImage\n * \n * Specifies if the connect icon should be centered on the target state\n * while connections are being previewed. Default is false.\n */\nmxConnectionHandler.prototype.targetConnectImage = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxConnectionHandler.prototype.enabled = true;\n\n/**\n * Variable: select\n * \n * Specifies if new edges should be selected. Default is true.\n */\nmxConnectionHandler.prototype.select = true;\n\n/**\n * Variable: createTarget\n * \n * Specifies if <createTargetVertex> should be called if no target was under the\n * mouse for the new connection. Setting this to true means the connection\n * will be drawn as valid if no target is under the mouse, and\n * <createTargetVertex> will be called before the connection is created between\n * the source cell and the newly created vertex in <createTargetVertex>, which\n * can be overridden to create a new target. Default is false.\n */\nmxConnectionHandler.prototype.createTarget = false;\n\n/**\n * Variable: marker\n * \n * Holds the <mxTerminalMarker> used for finding source and target cells.\n */\nmxConnectionHandler.prototype.marker = null;\n\n/**\n * Variable: constraintHandler\n * \n * Holds the <mxConstraintHandler> used for drawing and highlighting\n * constraints.\n */\nmxConnectionHandler.prototype.constraintHandler = null;\n\n/**\n * Variable: error\n * \n * Holds the current validation error while connections are being created.\n */\nmxConnectionHandler.prototype.error = null;\n\n/**\n * Variable: waypointsEnabled\n * \n * Specifies if single clicks should add waypoints on the new edge. Default is\n * false.\n */\nmxConnectionHandler.prototype.waypointsEnabled = false;\n\n/**\n * Variable: ignoreMouseDown\n * \n * Specifies if the connection handler should ignore the state of the mouse\n * button when highlighting the source. Default is false, that is, the\n * handler only highlights the source if no button is being pressed.\n */\nmxConnectionHandler.prototype.ignoreMouseDown = false;\n\n/**\n * Variable: first\n * \n * Holds the <mxPoint> where the mouseDown took place while the handler is\n * active.\n */\nmxConnectionHandler.prototype.first = null;\n\n/**\n * Variable: connectIconOffset\n * \n * Holds the offset for connect icons during connection preview.\n * Default is mxPoint(0, <mxConstants.TOOLTIP_VERTICAL_OFFSET>).\n * Note that placing the icon under the mouse pointer with an\n * offset of (0,0) will affect hit detection.\n */\nmxConnectionHandler.prototype.connectIconOffset = new mxPoint(0, mxConstants.TOOLTIP_VERTICAL_OFFSET);\n\n/**\n * Variable: edgeState\n * \n * Optional <mxCellState> that represents the preview edge while the\n * handler is active. This is created in <createEdgeState>.\n */\nmxConnectionHandler.prototype.edgeState = null;\n\n/**\n * Variable: changeHandler\n * \n * Holds the change event listener for later removal.\n */\nmxConnectionHandler.prototype.changeHandler = null;\n\n/**\n * Variable: drillHandler\n * \n * Holds the drill event listener for later removal.\n */\nmxConnectionHandler.prototype.drillHandler = null;\n\n/**\n * Variable: mouseDownCounter\n * \n * Counts the number of mouseDown events since the start. The initial mouse\n * down event counts as 1.\n */\nmxConnectionHandler.prototype.mouseDownCounter = 0;\n\n/**\n * Variable: movePreviewAway\n * \n * Switch to enable moving the preview away from the mousepointer. This is required in browsers\n * where the preview cannot be made transparent to events and if the built-in hit detection on\n * the HTML elements in the page should be used. Default is the value of <mxClient.IS_VML>.\n */\nmxConnectionHandler.prototype.movePreviewAway = mxClient.IS_VML;\n\n/**\n * Variable: outlineConnect\n * \n * Specifies if connections to the outline of a highlighted target should be\n * enabled. This will allow to place the connection point along the outline of\n * the highlighted target. Default is false.\n */\nmxConnectionHandler.prototype.outlineConnect = false;\n\n/**\n * Variable: livePreview\n * \n * Specifies if the actual shape of the edge state should be used for the preview.\n * Default is false. (Ignored if no edge state is created in <createEdgeState>.)\n */\nmxConnectionHandler.prototype.livePreview = false;\n\n/**\n * Variable: cursor\n * \n * Specifies the cursor to be used while the handler is active. Default is null.\n */\nmxConnectionHandler.prototype.cursor = null;\n\n/**\n * Variable: insertBeforeSource\n * \n * Specifies if new edges should be inserted before the source vertex in the\n * cell hierarchy. Default is false for backwards compatibility.\n */\nmxConnectionHandler.prototype.insertBeforeSource = false;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxConnectionHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxConnectionHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isInsertBefore\n * \n * Returns <insertBeforeSource> for non-loops and false for loops.\n *\n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be inserted.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * evt - Mousedown event of the connect gesture.\n * dropTarget - <mxCell> that represents the cell under the mouse when it was\n * released.\n */\nmxConnectionHandler.prototype.isInsertBefore = function(edge, source, target, evt, dropTarget)\n{\n\treturn this.insertBeforeSource && source != target;\n};\n\n/**\n * Function: isCreateTarget\n * \n * Returns <createTarget>.\n *\n * Parameters:\n *\n * evt - Current active native pointer event.\n */\nmxConnectionHandler.prototype.isCreateTarget = function(evt)\n{\n\treturn this.createTarget;\n};\n\n/**\n * Function: setCreateTarget\n * \n * Sets <createTarget>.\n */\nmxConnectionHandler.prototype.setCreateTarget = function(value)\n{\n\tthis.createTarget = value;\n};\n\n/**\n * Function: createShape\n * \n * Creates the preview shape for new connections.\n */\nmxConnectionHandler.prototype.createShape = function()\n{\n\t// Creates the edge preview\n\tvar shape = (this.livePreview && this.edgeState != null) ?\n\t\tthis.graph.cellRenderer.createShape(this.edgeState) :\n\t\tnew mxPolyline([], mxConstants.INVALID_COLOR);\n\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tshape.scale = this.graph.view.scale;\n\tshape.pointerEvents = false;\n\tshape.isDashed = true;\n\tshape.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(shape.node, this.graph, null);\n\n\treturn shape;\n};\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this connection handler. This should\n * be invoked if <mxGraph.container> is assigned after the connection\n * handler has been created.\n */\nmxConnectionHandler.prototype.init = function()\n{\n\tthis.graph.addMouseListener(this);\n\tthis.marker = this.createMarker();\n\tthis.constraintHandler = new mxConstraintHandler(this.graph);\n\n\t// Redraws the icons if the graph changes\n\tthis.changeHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.iconState != null)\n\t\t{\n\t\t\tthis.iconState = this.graph.getView().getState(this.iconState.cell);\n\t\t}\n\t\t\n\t\tif (this.iconState != null)\n\t\t{\n\t\t\tthis.redrawIcons(this.icons, this.iconState);\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\telse if (this.previous != null && this.graph.view.getState(this.previous.cell) == null)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t});\n\t\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.changeHandler);\n\t\n\t// Removes the icon if we step into/up or start editing\n\tthis.drillHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.reset();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.START_EDITING, this.drillHandler);\n\tthis.graph.getView().addListener(mxEvent.DOWN, this.drillHandler);\n\tthis.graph.getView().addListener(mxEvent.UP, this.drillHandler);\n};\n\n/**\n * Function: isConnectableCell\n * \n * Returns true if the given cell is connectable. This is a hook to\n * disable floating connections. This implementation returns true.\n */\nmxConnectionHandler.prototype.isConnectableCell = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: createMarker\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxConnectionHandler.prototype.createMarker = function()\n{\n\tvar marker = new mxCellMarker(this.graph);\n\tmarker.hotspotEnabled = true;\n\n\t// Overrides to return cell at location only if valid (so that\n\t// there is no highlight for invalid cells)\n\tmarker.getCell = mxUtils.bind(this, function(me)\n\t{\n\t\tvar cell = mxCellMarker.prototype.getCell.apply(marker, arguments);\n\t\tthis.error = null;\n\t\t\n\t\t// Checks for cell at preview point (with grid)\n\t\tif (cell == null && this.currentPoint != null)\n\t\t{\n\t\t\tcell = this.graph.getCellAt(this.currentPoint.x, this.currentPoint.y);\n\t\t}\n\t\t\n\t\t// Uses connectable parent vertex if one exists\n\t\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\t\n\t\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t\t{\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ((this.graph.isSwimlane(cell) && this.currentPoint != null &&\n\t\t\tthis.graph.hitsSwimlaneContent(cell, this.currentPoint.x, this.currentPoint.y)) ||\n\t\t\t!this.isConnectableCell(cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tif (this.isConnecting())\n\t\t\t{\n\t\t\t\tif (this.previous != null)\n\t\t\t\t{\n\t\t\t\t\tthis.error = this.validateConnection(this.previous.cell, cell);\n\t\t\t\t\t\n\t\t\t\t\tif (this.error != null && this.error.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell = null;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Enables create target inside groups\n\t\t\t\t\t\tif (this.isCreateTarget(me.getEvent()))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.error = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!this.isValidSource(cell, me))\n\t\t\t{\n\t\t\t\tcell = null;\n\t\t\t}\n\t\t}\n\t\telse if (this.isConnecting() && !this.isCreateTarget(me.getEvent()) &&\n\t\t\t\t!this.graph.allowDanglingEdges)\n\t\t{\n\t\t\tthis.error = '';\n\t\t}\n\n\t\treturn cell;\n\t});\n\n\t// Sets the highlight color according to validateConnection\n\tmarker.isValidState = mxUtils.bind(this, function(state)\n\t{\n\t\tif (this.isConnecting())\n\t\t{\n\t\t\treturn this.error == null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn mxCellMarker.prototype.isValidState.apply(marker, arguments);\n\t\t}\n\t});\n\n\t// Overrides to use marker color only in highlight mode or for\n\t// target selection\n\tmarker.getMarkerColor = mxUtils.bind(this, function(evt, state, isValid)\n\t{\n\t\treturn (this.connectImage == null || this.isConnecting()) ?\n\t\t\tmxCellMarker.prototype.getMarkerColor.apply(marker, arguments) :\n\t\t\tnull;\n\t});\n\n\t// Overrides to use hotspot only for source selection otherwise\n\t// intersects always returns true when over a cell\n\tmarker.intersects = mxUtils.bind(this, function(state, evt)\n\t{\n\t\tif (this.connectImage != null || this.isConnecting())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn mxCellMarker.prototype.intersects.apply(marker, arguments);\n\t});\n\n\treturn marker;\n};\n\n/**\n * Function: start\n * \n * Starts a new connection for the given state and coordinates.\n */\nmxConnectionHandler.prototype.start = function(state, x, y, edgeState)\n{\n\tthis.previous = state;\n\tthis.first = new mxPoint(x, y);\n\tthis.edgeState = (edgeState != null) ? edgeState : this.createEdgeState(null);\n\t\n\t// Marks the source state\n\tthis.marker.currentColor = this.marker.validColor;\n\tthis.marker.markedState = state;\n\tthis.marker.mark();\n\n\tthis.fireEvent(new mxEventObject(mxEvent.START, 'state', this.previous));\n};\n\n/**\n * Function: isConnecting\n * \n * Returns true if the source terminal has been clicked and a new\n * connection is currently being previewed.\n */\nmxConnectionHandler.prototype.isConnecting = function()\n{\n\treturn this.first != null && this.shape != null;\n};\n\n/**\n * Function: isValidSource\n * \n * Returns <mxGraph.isValidSource> for the given source terminal.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the source terminal.\n * me - <mxMouseEvent> that is associated with this call.\n */\nmxConnectionHandler.prototype.isValidSource = function(cell, me)\n{\n\treturn this.graph.isValidSource(cell);\n};\n\n/**\n * Function: isValidTarget\n * \n * Returns true. The call to <mxGraph.isValidTarget> is implicit by calling\n * <mxGraph.getEdgeValidationError> in <validateConnection>. This is an\n * additional hook for disabling certain targets in this specific handler.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the target terminal.\n */\nmxConnectionHandler.prototype.isValidTarget = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: validateConnection\n * \n * Returns the error message or an empty string if the connection for the\n * given source target pair is not valid. Otherwise it returns null. This\n * implementation uses <mxGraph.getEdgeValidationError>.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxConnectionHandler.prototype.validateConnection = function(source, target)\n{\n\tif (!this.isValidTarget(target))\n\t{\n\t\treturn '';\n\t}\n\t\n\treturn this.graph.getEdgeValidationError(null, source, target);\n};\n\n/**\n * Function: getConnectImage\n * \n * Hook to return the <mxImage> used for the connection icon of the given\n * <mxCellState>. This implementation returns <connectImage>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect image should be returned.\n */\nmxConnectionHandler.prototype.getConnectImage = function(state)\n{\n\treturn this.connectImage;\n};\n\n/**\n * Function: isMoveIconToFrontForState\n * \n * Returns true if the state has a HTML label in the graph's container, otherwise\n * it returns <moveIconFront>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect icons should be returned.\n */\nmxConnectionHandler.prototype.isMoveIconToFrontForState = function(state)\n{\n\tif (state.text != null && state.text.node.parentNode == this.graph.container)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn this.moveIconFront;\n};\n\n/**\n * Function: createIcons\n * \n * Creates the array <mxImageShapes> that represent the connect icons for\n * the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect icons should be returned.\n */\nmxConnectionHandler.prototype.createIcons = function(state)\n{\n\tvar image = this.getConnectImage(state);\n\t\n\tif (image != null && state != null)\n\t{\n\t\tthis.iconState = state;\n\t\tvar icons = [];\n\n\t\t// Cannot use HTML for the connect icons because the icon receives all\n\t\t// mouse move events in IE, must use VML and SVG instead even if the\n\t\t// connect-icon appears behind the selection border and the selection\n\t\t// border consumes the events before the icon gets a chance\n\t\tvar bounds = new mxRectangle(0, 0, image.width, image.height);\n\t\tvar icon = new mxImageShape(bounds, image.src, null, null, 0);\n\t\ticon.preserveImageAspect = false;\n\t\t\n\t\tif (this.isMoveIconToFrontForState(state))\n\t\t{\n\t\t\ticon.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\t\ticon.init(this.graph.container);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ticon.dialect = (this.graph.dialect == mxConstants.DIALECT_SVG) ?\n\t\t\t\tmxConstants.DIALECT_SVG : mxConstants.DIALECT_VML;\n\t\t\ticon.init(this.graph.getView().getOverlayPane());\n\n\t\t\t// Move the icon back in the overlay pane\n\t\t\tif (this.moveIconBack && icon.node.previousSibling != null)\n\t\t\t{\n\t\t\t\ticon.node.parentNode.insertBefore(icon.node, icon.node.parentNode.firstChild);\n\t\t\t}\n\t\t}\n\n\t\ticon.node.style.cursor = mxConstants.CURSOR_CONNECT;\n\n\t\t// Events transparency\n\t\tvar getState = mxUtils.bind(this, function()\n\t\t{\n\t\t\treturn (this.currentState != null) ? this.currentState : state;\n\t\t});\n\t\t\n\t\t// Updates the local icon before firing the mouse down event.\n\t\tvar mouseDown = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tthis.icon = icon;\n\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN,\n\t\t\t\t\tnew mxMouseEvent(evt, getState()));\n\t\t\t}\n\t\t});\n\n\t\tmxEvent.redirectMouseEvents(icon.node, this.graph, getState, mouseDown);\n\t\t\n\t\ticons.push(icon);\n\t\tthis.redrawIcons(icons, this.iconState);\n\t\t\n\t\treturn icons;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: redrawIcons\n * \n * Redraws the given array of <mxImageShapes>.\n * \n * Parameters:\n * \n * icons - Optional array of <mxImageShapes> to be redrawn.\n */\nmxConnectionHandler.prototype.redrawIcons = function(icons, state)\n{\n\tif (icons != null && icons[0] != null && state != null)\n\t{\n\t\tvar pos = this.getIconPosition(icons[0], state);\n\t\ticons[0].bounds.x = pos.x;\n\t\ticons[0].bounds.y = pos.y;\n\t\ticons[0].redraw();\n\t}\n};\n\n/**\n * Function: redrawIcons\n * \n * Redraws the given array of <mxImageShapes>.\n * \n * Parameters:\n * \n * icons - Optional array of <mxImageShapes> to be redrawn.\n */\nmxConnectionHandler.prototype.getIconPosition = function(icon, state)\n{\n\tvar scale = this.graph.getView().scale;\n\tvar cx = state.getCenterX();\n\tvar cy = state.getCenterY();\n\t\n\tif (this.graph.isSwimlane(state.cell))\n\t{\n\t\tvar size = this.graph.getStartSize(state.cell);\n\t\t\n\t\tcx = (size.width != 0) ? state.x + size.width * scale / 2 : cx;\n\t\tcy = (size.height != 0) ? state.y + size.height * scale / 2 : cy;\n\t\t\n\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(alpha);\n\t\t\tvar sin = Math.sin(alpha);\n\t\t\tvar ct = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin, ct);\n\t\t\tcx = pt.x;\n\t\t\tcy = pt.y;\n\t\t}\n\t}\n\n\treturn new mxPoint(cx - icon.bounds.width / 2,\n\t\t\tcy - icon.bounds.height / 2);\n};\n\n/**\n * Function: destroyIcons\n * \n * Destroys the connect icons and resets the respective state.\n */\nmxConnectionHandler.prototype.destroyIcons = function()\n{\n\tif (this.icons != null)\n\t{\n\t\tfor (var i = 0; i < this.icons.length; i++)\n\t\t{\n\t\t\tthis.icons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.icons = null;\n\t\tthis.icon = null;\n\t\tthis.selectedIcon = null;\n\t\tthis.iconState = null;\n\t}\n};\n\n/**\n * Function: isStartEvent\n * \n * Returns true if the given mouse down event should start this handler. The\n * This implementation returns true if the event does not force marquee\n * selection, and the currentConstraint and currentFocus of the\n * <constraintHandler> are not null, or <previous> and <error> are not null and\n * <icons> is null or <icons> and <icon> are not null.\n */\nmxConnectionHandler.prototype.isStartEvent = function(me)\n{\n\treturn ((this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null) ||\n\t\t(this.previous != null && this.error == null && (this.icons == null || (this.icons != null &&\n\t\tthis.icon != null))));\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a new connection.\n */\nmxConnectionHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.mouseDownCounter++;\n\t\n\tif (this.isEnabled() && this.graph.isEnabled() && !me.isConsumed() &&\n\t\t!this.isConnecting() && this.isStartEvent(me))\n\t{\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t{\n\t\t\tthis.sourceConstraint = this.constraintHandler.currentConstraint;\n\t\t\tthis.previous = this.constraintHandler.currentFocus;\n\t\t\tthis.first = this.constraintHandler.currentPoint.clone();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Stores the location of the initial mousedown\n\t\t\tthis.first = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t}\n\t\n\t\tthis.edgeState = this.createEdgeState(me);\n\t\tthis.mouseDownCounter = 1;\n\t\t\n\t\tif (this.waypointsEnabled && this.shape == null)\n\t\t{\n\t\t\tthis.waypoints = null;\n\t\t\tthis.shape = this.createShape();\n\t\t\t\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tthis.shape.apply(this.edgeState);\n\t\t\t}\n\t\t}\n\n\t\t// Stores the starting point in the geometry of the preview\n\t\tif (this.previous == null && this.edgeState != null)\n\t\t{\n\t\t\tvar pt = this.graph.getPointForEvent(me.getEvent());\n\t\t\tthis.edgeState.cell.geometry.setTerminalPoint(pt, true);\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.START, 'state', this.previous));\n\n\t\tme.consume();\n\t}\n\n\tthis.selectedIcon = this.icon;\n\tthis.icon = null;\n};\n\n/**\n * Function: isImmediateConnectSource\n * \n * Returns true if a tap on the given source state should immediately start\n * connecting. This implementation returns true if the state is not movable\n * in the graph. \n */\nmxConnectionHandler.prototype.isImmediateConnectSource = function(state)\n{\n\treturn !this.graph.isCellMovable(state.cell);\n};\n\n/**\n * Function: createEdgeState\n * \n * Hook to return an <mxCellState> which may be used during the preview.\n * This implementation returns null.\n * \n * Use the following code to create a preview for an existing edge style:\n * \n * (code)\n * graph.connectionHandler.createEdgeState = function(me)\n * {\n *   var edge = graph.createEdge(null, null, null, null, null, 'edgeStyle=elbowEdgeStyle');\n *   \n *   return new mxCellState(this.graph.view, edge, this.graph.getCellStyle(edge));\n * };\n * (end)\n */\nmxConnectionHandler.prototype.createEdgeState = function(me)\n{\n\treturn null;\n};\n\n/**\n * Function: isOutlineConnectEvent\n * \n * Returns true if <outlineConnect> is true and the source of the event is the outline shape\n * or shift is pressed.\n */\nmxConnectionHandler.prototype.isOutlineConnectEvent = function(me)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar evt = me.getEvent();\n\t\n\tvar clientX = mxEvent.getClientX(evt);\n\tvar clientY = mxEvent.getClientY(evt);\n\t\n\tvar doc = document.documentElement;\n\tvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n\tvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\t\n\tvar gridX = this.currentPoint.x - this.graph.container.scrollLeft + offset.x - left;\n\tvar gridY = this.currentPoint.y - this.graph.container.scrollTop + offset.y - top;\n\n\treturn this.outlineConnect && !mxEvent.isShiftDown(me.getEvent()) &&\n\t\t(me.isSource(this.marker.highlight.shape) ||\n\t\t(mxEvent.isAltDown(me.getEvent()) && me.getState() != null) ||\n\t\tthis.marker.highlight.isHighlightAt(clientX, clientY) ||\n\t\t((gridX != clientX || gridY != clientY) && me.getState() == null &&\n\t\tthis.marker.highlight.isHighlightAt(gridX, gridY)));\n};\n\n/**\n * Function: updateCurrentState\n * \n * Updates the current state for a given mouse move event by using\n * the <marker>.\n */\nmxConnectionHandler.prototype.updateCurrentState = function(me, point)\n{\n\tthis.constraintHandler.update(me, this.first == null, false, (this.first == null ||\n\t\tme.isSource(this.marker.highlight.shape)) ? null : point);\n\t\n\tif (this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null)\n\t{\n\t\t// Handles special case where grid is large and connection point is at actual point in which\n\t\t// case the outline is not followed as long as we're < gridSize / 2 away from that point\n\t\tif (this.marker.highlight != null && this.marker.highlight.state != null &&\n\t\t\tthis.marker.highlight.state.cell == this.constraintHandler.currentFocus.cell)\n\t\t{\n\t\t\t// Direct repaint needed if cell already highlighted\n\t\t\tif (this.marker.highlight.shape.stroke != 'transparent')\n\t\t\t{\n\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.markCell(this.constraintHandler.currentFocus.cell, 'transparent');\n\t\t}\n\n\t\t// Updates validation state\n\t\tif (this.previous != null)\n\t\t{\n\t\t\tthis.error = this.validateConnection(this.previous.cell, this.constraintHandler.currentFocus.cell);\n\t\t\t\n\t\t\tif (this.error == null)\n\t\t\t{\n\t\t\t\tthis.currentState = this.constraintHandler.currentFocus;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.constraintHandler.reset();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (this.graph.isIgnoreTerminalEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.marker.reset();\n\t\t\tthis.currentState = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.process(me);\n\t\t\tthis.currentState = this.marker.getValidState();\n\t\t\t\n\t\t\tif (this.currentState != null && !this.isCellEnabled(this.currentState.cell))\n\t\t\t{\n\t\t\t\tthis.currentState = null;\n\t\t\t}\n\t\t}\n\n\t\tvar outline = this.isOutlineConnectEvent(me);\n\t\t\n\t\tif (this.currentState != null && outline)\n\t\t{\n\t\t\t// Handles special case where mouse is on outline away from actual end point\n\t\t\t// in which case the grid is ignored and mouse point is used instead\n\t\t\tif (me.isSource(this.marker.highlight.shape))\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\t\t\t\n\t\t\tvar constraint = this.graph.getOutlineConstraint(point, this.currentState, me);\n\t\t\tthis.constraintHandler.setFocus(me, this.currentState, false);\n\t\t\tthis.constraintHandler.currentConstraint = constraint;\n\t\t\tthis.constraintHandler.currentPoint = point;\n\t\t}\n\n\t\tif (this.outlineConnect)\n\t\t{\n\t\t\tif (this.marker.highlight != null && this.marker.highlight.shape != null)\n\t\t\t{\n\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\n\t\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t\t\t{\n\t\t\t\t\tthis.marker.highlight.shape.stroke = mxConstants.OUTLINE_HIGHLIGHT_COLOR;\n\t\t\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.OUTLINE_HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t} \n\t\t\t\telse if (this.marker.hasValidState())\n\t\t\t\t{\n\t\t\t\t\t// Handles special case where actual end point of edge and current mouse point\n\t\t\t\t\t// are not equal (due to grid snapping) and there is no hit on shape or highlight\n\t\t\t\t\tif (this.marker.getValidState() != me.getState())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\t\t\tthis.currentState = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.marker.highlight.shape.stroke = mxConstants.DEFAULT_VALID_COLOR;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isCellEnabled\n * \n * Returns true if the given cell does not allow new connections to be created.\n */\nmxConnectionHandler.prototype.isCellEnabled = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: convertWaypoint\n * \n * Converts the given point from screen coordinates to model coordinates.\n */\nmxConnectionHandler.prototype.convertWaypoint = function(point)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\t\n\tpoint.x = point.x / scale - tr.x;\n\tpoint.y = point.y / scale - tr.y;\n};\n\n/**\n * Function: snapToPreview\n * \n * Called to snap the given point to the current preview. This snaps to the\n * first point of the preview if alt is not pressed.\n */\nmxConnectionHandler.prototype.snapToPreview = function(me, point)\n{\n\tif (!mxEvent.isAltDown(me.getEvent()) && this.previous != null)\n\t{\n\t\tvar tol = this.graph.gridSize * this.graph.view.scale / 2;\t\n\t\tvar tmp = (this.sourceConstraint != null) ? this.first :\n\t\t\tnew mxPoint(this.previous.getCenterX(), this.previous.getCenterY());\n\n\t\tif (Math.abs(tmp.x - me.getGraphX()) < tol)\n\t\t{\n\t\t\tpoint.x = tmp.x;\n\t\t}\n\t\t\n\t\tif (Math.abs(tmp.y - me.getGraphY()) < tol)\n\t\t{\n\t\t\tpoint.y = tmp.y;\n\t\t}\n\t}\t\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview edge or by highlighting\n * a possible source or target terminal.\n */\nmxConnectionHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && (this.ignoreMouseDown || this.first != null || !this.graph.isMouseDown))\n\t{\n\t\t// Handles special case when handler is disabled during highlight\n\t\tif (!this.isEnabled() && this.currentState != null)\n\t\t{\n\t\t\tthis.destroyIcons();\n\t\t\tthis.currentState = null;\n\t\t}\n\n\t\tvar view = this.graph.getView();\n\t\tvar scale = view.scale;\n\t\tvar tr = view.translate;\n\t\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\tthis.error = null;\n\n\t\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t\t{\n\t\t\tpoint = new mxPoint((this.graph.snap(point.x / scale - tr.x) + tr.x) * scale,\n\t\t\t\t(this.graph.snap(point.y / scale - tr.y) + tr.y) * scale);\n\t\t}\n\t\t\n\t\tthis.snapToPreview(me, point);\n\t\tthis.currentPoint = point;\n\t\t\n\t\tif ((this.first != null || (this.isEnabled() && this.graph.isEnabled())) &&\n\t\t\t(this.shape != null || this.first == null ||\n\t\t\tMath.abs(me.getGraphX() - this.first.x) > this.graph.tolerance ||\n\t\t\tMath.abs(me.getGraphY() - this.first.y) > this.graph.tolerance))\n\t\t{\n\t\t\tthis.updateCurrentState(me, point);\n\t\t}\n\n\t\tif (this.first != null)\n\t\t{\n\t\t\tvar constraint = null;\n\t\t\tvar current = point;\n\t\t\t\n\t\t\t// Uses the current point from the constraint handler if available\n\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t\t{\n\t\t\t\tconstraint = this.constraintHandler.currentConstraint;\n\t\t\t\tcurrent = this.constraintHandler.currentPoint.clone();\n\t\t\t}\n\t\t\telse if (this.previous != null && !this.graph.isIgnoreTerminalEvent(me.getEvent()) &&\n\t\t\t\tmxEvent.isShiftDown(me.getEvent()))\n\t\t\t{\n\t\t\t\tif (Math.abs(this.previous.getCenterX() - point.x) <\n\t\t\t\t\tMath.abs(this.previous.getCenterY() - point.y))\n\t\t\t\t{\n\t\t\t\t\tpoint.x = this.previous.getCenterX();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpoint.y = this.previous.getCenterY();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pt2 = this.first;\n\t\t\t\n\t\t\t// Moves the connect icon with the mouse\n\t\t\tif (this.selectedIcon != null)\n\t\t\t{\n\t\t\t\tvar w = this.selectedIcon.bounds.width;\n\t\t\t\tvar h = this.selectedIcon.bounds.height;\n\t\t\t\t\n\t\t\t\tif (this.currentState != null && this.targetConnectImage)\n\t\t\t\t{\n\t\t\t\t\tvar pos = this.getIconPosition(this.selectedIcon, this.currentState);\n\t\t\t\t\tthis.selectedIcon.bounds.x = pos.x;\n\t\t\t\t\tthis.selectedIcon.bounds.y = pos.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar bounds = new mxRectangle(me.getGraphX() + this.connectIconOffset.x,\n\t\t\t\t\t\tme.getGraphY() + this.connectIconOffset.y, w, h);\n\t\t\t\t\tthis.selectedIcon.bounds = bounds;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.selectedIcon.redraw();\n\t\t\t}\n\n\t\t\t// Uses edge state to compute the terminal points\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tthis.updateEdgeState(current, constraint);\n\t\t\t\tcurrent = this.edgeState.absolutePoints[this.edgeState.absolutePoints.length - 1];\n\t\t\t\tpt2 = this.edgeState.absolutePoints[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.currentState != null)\n\t\t\t\t{\n\t\t\t\t\tif (this.constraintHandler.currentConstraint == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = this.getTargetPerimeterPoint(this.currentState, me);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Computes the source perimeter point\n\t\t\t\tif (this.sourceConstraint == null && this.previous != null)\n\t\t\t\t{\n\t\t\t\t\tvar next = (this.waypoints != null && this.waypoints.length > 0) ?\n\t\t\t\t\t\t\tthis.waypoints[0] : current;\n\t\t\t\t\tvar tmp = this.getSourcePerimeterPoint(this.previous, next, me);\n\t\t\t\t\t\n\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt2 = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Makes sure the cell under the mousepointer can be detected\n\t\t\t// by moving the preview shape away from the mouse. This\n\t\t\t// makes sure the preview shape does not prevent the detection\n\t\t\t// of the cell under the mousepointer even for slow gestures.\n\t\t\tif (this.currentState == null && this.movePreviewAway)\n\t\t\t{\n\t\t\t\tvar tmp = pt2; \n\t\t\t\t\n\t\t\t\tif (this.edgeState != null && this.edgeState.absolutePoints.length >= 2)\n\t\t\t\t{\n\t\t\t\t\tvar tmp2 = this.edgeState.absolutePoints[this.edgeState.absolutePoints.length - 2];\n\t\t\t\t\t\n\t\t\t\t\tif (tmp2 != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = tmp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dx = current.x - tmp.x;\n\t\t\t\tvar dy = current.y - tmp.y;\n\t\t\t\t\n\t\t\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\t\n\t\t\t\tif (len == 0)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Stores old point to reuse when creating edge\n\t\t\t\tthis.originalPoint = current.clone();\n\t\t\t\tcurrent.x -= dx * 4 / len;\n\t\t\t\tcurrent.y -= dy * 4 / len;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.originalPoint = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Creates the preview shape (lazy)\n\t\t\tif (this.shape == null)\n\t\t\t{\n\t\t\t\tvar dx = Math.abs(me.getGraphX() - this.first.x);\n\t\t\t\tvar dy = Math.abs(me.getGraphY() - this.first.y);\n\n\t\t\t\tif (dx > this.graph.tolerance || dy > this.graph.tolerance)\n\t\t\t\t{\n\t\t\t\t\tthis.shape = this.createShape();\n\n\t\t\t\t\tif (this.edgeState != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shape.apply(this.edgeState);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Revalidates current connection\n\t\t\t\t\tthis.updateCurrentState(me, point);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Updates the points in the preview edge\n\t\t\tif (this.shape != null)\n\t\t\t{\n\t\t\t\tif (this.edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tthis.shape.points = this.edgeState.absolutePoints;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar pts = [pt2];\n\t\t\t\t\t\n\t\t\t\t\tif (this.waypoints != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpts = pts.concat(this.waypoints);\n\t\t\t\t\t}\n\n\t\t\t\t\tpts.push(current);\n\t\t\t\t\tthis.shape.points = pts;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.drawPreview();\n\t\t\t}\n\t\t\t\n\t\t\t// Makes sure endpoint of edge is visible during connect\n\t\t\tif (this.cursor != null)\n\t\t\t{\n\t\t\t\tthis.graph.container.style.cursor = this.cursor;\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(me.getEvent());\n\t\t\tme.consume();\n\t\t}\n\t\telse if (!this.isEnabled() || !this.graph.isEnabled())\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\telse if (this.previous != this.currentState && this.edgeState == null)\n\t\t{\n\t\t\tthis.destroyIcons();\n\t\t\t\n\t\t\t// Sets the cursor on the current shape\t\t\t\t\n\t\t\tif (this.currentState != null && this.error == null && this.constraintHandler.currentConstraint == null)\n\t\t\t{\n\t\t\t\tthis.icons = this.createIcons(this.currentState);\n\n\t\t\t\tif (this.icons == null)\n\t\t\t\t{\n\t\t\t\t\tthis.currentState.setCursor(mxConstants.CURSOR_CONNECT);\n\t\t\t\t\tme.consume();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.previous = this.currentState;\n\t\t}\n\t\telse if (this.previous == this.currentState && this.currentState != null && this.icons == null &&\n\t\t\t!this.graph.isMouseDown)\n\t\t{\n\t\t\t// Makes sure that no cursors are changed\n\t\t\tme.consume();\n\t\t}\n\n\t\tif (!this.graph.isMouseDown && this.currentState != null && this.icons != null)\n\t\t{\n\t\t\tvar hitsIcon = false;\n\t\t\tvar target = me.getSource();\n\t\t\t\n\t\t\tfor (var i = 0; i < this.icons.length && !hitsIcon; i++)\n\t\t\t{\n\t\t\t\thitsIcon = target == this.icons[i].node || target.parentNode == this.icons[i].node;\n\t\t\t}\n\n\t\t\tif (!hitsIcon)\n\t\t\t{\n\t\t\t\tthis.updateIcons(this.currentState, this.icons, me);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.constraintHandler.reset();\n\t}\n};\n\n/**\n * Function: updateEdgeState\n * \n * Updates <edgeState>.\n */\nmxConnectionHandler.prototype.updateEdgeState = function(current, constraint)\n{\n\t// TODO: Use generic method for writing constraint to style\n\tif (this.sourceConstraint != null && this.sourceConstraint.point != null)\n\t{\n\t\tthis.edgeState.style[mxConstants.STYLE_EXIT_X] = this.sourceConstraint.point.x;\n\t\tthis.edgeState.style[mxConstants.STYLE_EXIT_Y] = this.sourceConstraint.point.y;\n\t}\n\n\tif (constraint != null && constraint.point != null)\n\t{\n\t\tthis.edgeState.style[mxConstants.STYLE_ENTRY_X] = constraint.point.x;\n\t\tthis.edgeState.style[mxConstants.STYLE_ENTRY_Y] = constraint.point.y;\n\t}\n\telse\n\t{\n\t\tdelete this.edgeState.style[mxConstants.STYLE_ENTRY_X];\n\t\tdelete this.edgeState.style[mxConstants.STYLE_ENTRY_Y];\n\t}\n\t\n\tthis.edgeState.absolutePoints = [null, (this.currentState != null) ? null : current];\n\tthis.graph.view.updateFixedTerminalPoint(this.edgeState, this.previous, true, this.sourceConstraint);\n\t\n\tif (this.currentState != null)\n\t{\n\t\tif (constraint == null)\n\t\t{\n\t\t\tconstraint = this.graph.getConnectionConstraint(this.edgeState, this.previous, false);\n\t\t}\n\t\t\n\t\tthis.edgeState.setAbsoluteTerminalPoint(null, false);\n\t\tthis.graph.view.updateFixedTerminalPoint(this.edgeState, this.currentState, false, constraint);\n\t}\n\t\n\t// Scales and translates the waypoints to the model\n\tvar realPoints = null;\n\t\n\tif (this.waypoints != null)\n\t{\n\t\trealPoints = [];\n\t\t\n\t\tfor (var i = 0; i < this.waypoints.length; i++)\n\t\t{\n\t\t\tvar pt = this.waypoints[i].clone();\n\t\t\tthis.convertWaypoint(pt);\n\t\t\trealPoints[i] = pt;\n\t\t}\n\t}\n\t\n\tthis.graph.view.updatePoints(this.edgeState, realPoints, this.previous, this.currentState);\n\tthis.graph.view.updateFloatingTerminalPoints(this.edgeState, this.previous, this.currentState);\n};\n\n/**\n * Function: getTargetPerimeterPoint\n * \n * Returns the perimeter point for the given target state.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the target cell state.\n * me - <mxMouseEvent> that represents the mouse move.\n */\nmxConnectionHandler.prototype.getTargetPerimeterPoint = function(state, me)\n{\n\tvar result = null;\n\tvar view = state.view;\n\tvar targetPerimeter = view.getPerimeterFunction(state);\n\t\n\tif (targetPerimeter != null)\n\t{\n\t\tvar next = (this.waypoints != null && this.waypoints.length > 0) ?\n\t\t\t\tthis.waypoints[this.waypoints.length - 1] :\n\t\t\t\tnew mxPoint(this.previous.getCenterX(), this.previous.getCenterY());\n\t\tvar tmp = targetPerimeter(view.getPerimeterBounds(state),\n\t\t\tthis.edgeState, next, false);\n\t\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tresult = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = new mxPoint(state.getCenterX(), state.getCenterY());\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getSourcePerimeterPoint\n * \n * Hook to update the icon position(s) based on a mouseOver event. This is\n * an empty implementation.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the target cell state.\n * next - <mxPoint> that represents the next point along the previewed edge.\n * me - <mxMouseEvent> that represents the mouse move.\n */\nmxConnectionHandler.prototype.getSourcePerimeterPoint = function(state, next, me)\n{\n\tvar result = null;\n\tvar view = state.view;\n\tvar sourcePerimeter = view.getPerimeterFunction(state);\n\tvar c = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\n\tif (sourcePerimeter != null)\n\t{\n\t\tvar theta = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0);\n\t\tvar rad = -theta * (Math.PI / 180);\n\t\t\n\t\tif (theta != 0)\n\t\t{\n\t\t\tnext = mxUtils.getRotatedPoint(new mxPoint(next.x, next.y), Math.cos(rad), Math.sin(rad), c);\n\t\t}\n\t\t\n\t\tvar tmp = sourcePerimeter(view.getPerimeterBounds(state), state, next, false);\n\t\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tif (theta != 0)\n\t\t\t{\n\t\t\t\ttmp = mxUtils.getRotatedPoint(new mxPoint(tmp.x, tmp.y), Math.cos(-rad), Math.sin(-rad), c);\n\t\t\t}\n\t\t\t\n\t\t\tresult = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = c;\n\t}\n\t\n\treturn result;\n};\n\n\n/**\n * Function: updateIcons\n * \n * Hook to update the icon position(s) based on a mouseOver event. This is\n * an empty implementation.\n * \n * Parameters:\n * \n * state - <mxCellState> under the mouse.\n * icons - Array of currently displayed icons.\n * me - <mxMouseEvent> that contains the mouse event.\n */\nmxConnectionHandler.prototype.updateIcons = function(state, icons, me)\n{\n\t// empty\n};\n\n/**\n * Function: isStopEvent\n * \n * Returns true if the given mouse up event should stop this handler. The\n * connection will be created if <error> is null. Note that this is only\n * called if <waypointsEnabled> is true. This implemtation returns true\n * if there is a cell state in the given event.\n */\nmxConnectionHandler.prototype.isStopEvent = function(me)\n{\n\treturn me.getState() != null;\n};\n\n/**\n * Function: addWaypoint\n * \n * Adds the waypoint for the given event to <waypoints>.\n */\nmxConnectionHandler.prototype.addWaypointForEvent = function(me)\n{\n\tvar point = mxUtils.convertPoint(this.graph.container, me.getX(), me.getY());\n\tvar dx = Math.abs(point.x - this.first.x);\n\tvar dy = Math.abs(point.y - this.first.y);\n\tvar addPoint = this.waypoints != null || (this.mouseDownCounter > 1 &&\n\t\t\t(dx > this.graph.tolerance || dy > this.graph.tolerance));\n\n\tif (addPoint)\n\t{\n\t\tif (this.waypoints == null)\n\t\t{\n\t\t\tthis.waypoints = [];\n\t\t}\n\t\t\n\t\tvar scale = this.graph.view.scale;\n\t\tvar point = new mxPoint(this.graph.snap(me.getGraphX() / scale) * scale,\n\t\t\t\tthis.graph.snap(me.getGraphY() / scale) * scale);\n\t\tthis.waypoints.push(point);\n\t}\n};\n\n/**\n * Function: checkConstraints\n * \n * Returns true if the connection for the given constraints is valid. This\n * implementation returns true if the constraints are not pointing to the\n * same fixed connection point.\n */\nmxConnectionHandler.prototype.checkConstraints = function(c1, c2)\n{\n\treturn (c1 == null || c2 == null || c1.point == null || c2.point == null ||\n\t\t!c1.point.equals(c2.point) || c1.perimeter != c2.perimeter);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by inserting the new connection.\n */\nmxConnectionHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isConnecting())\n\t{\n\t\tif (this.waypointsEnabled && !this.isStopEvent(me))\n\t\t{\n\t\t\tthis.addWaypointForEvent(me);\n\t\t\tme.consume();\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar c1 = this.sourceConstraint;\n\t\tvar c2 = this.constraintHandler.currentConstraint;\n\n\t\tvar source = (this.previous != null) ? this.previous.cell : null;\n\t\tvar target = null;\n\t\t\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t{\n\t\t\ttarget = this.constraintHandler.currentFocus.cell;\n\t\t}\n\t\t\n\t\tif (target == null && this.currentState != null)\n\t\t{\n\t\t\ttarget = this.currentState.cell;\n\t\t}\n\t\t\n\t\t// Inserts the edge if no validation error exists and if constraints differ\n\t\tif (this.error == null && (source == null || target == null ||\n\t\t\tsource != target || this.checkConstraints(c1, c2)))\n\t\t{\n\t\t\tthis.connect(source, target, me.getEvent(), me.getCell());\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Selects the source terminal for self-references\n\t\t\tif (this.previous != null && this.marker.validState != null &&\n\t\t\t\tthis.previous.cell == this.marker.validState.cell)\n\t\t\t{\n\t\t\t\tthis.graph.selectCellForEvent(this.marker.source, me.getEvent());\n\t\t\t}\n\t\t\t\n\t\t\t// Displays the error message if it is not an empty string,\n\t\t\t// for empty error messages, the event is silently dropped\n\t\t\tif (this.error != null && this.error.length > 0)\n\t\t\t{\n\t\t\t\tthis.graph.validationAlert(this.error);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Redraws the connect icons and resets the handler state\n\t\tthis.destroyIcons();\n\t\tme.consume();\n\t}\n\n\tif (this.first != null)\n\t{\n\t\tthis.reset();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxConnectionHandler.prototype.reset = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\t// Resets the cursor on the container\n\tif (this.cursor != null && this.graph.container != null)\n\t{\n\t\tthis.graph.container.style.cursor = '';\n\t}\n\t\n\tthis.destroyIcons();\n\tthis.marker.reset();\n\tthis.constraintHandler.reset();\n\tthis.originalPoint = null;\n\tthis.currentPoint = null;\n\tthis.edgeState = null;\n\tthis.previous = null;\n\tthis.error = null;\n\tthis.sourceConstraint = null;\n\tthis.mouseDownCounter = 0;\n\tthis.first = null;\n\n\tthis.fireEvent(new mxEventObject(mxEvent.RESET));\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview edge using the color and width returned by\n * <getEdgeColor> and <getEdgeWidth>.\n */\nmxConnectionHandler.prototype.drawPreview = function()\n{\n\tthis.updatePreview(this.error == null);\n\tthis.shape.redraw();\n};\n\n/**\n * Function: getEdgeColor\n * \n * Returns the color used to draw the preview edge. This returns green if\n * there is no edge validation error and red otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the color for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.updatePreview = function(valid)\n{\n\tthis.shape.strokewidth = this.getEdgeWidth(valid);\n\tthis.shape.stroke = this.getEdgeColor(valid);\n};\n\n/**\n * Function: getEdgeColor\n * \n * Returns the color used to draw the preview edge. This returns green if\n * there is no edge validation error and red otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the color for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.getEdgeColor = function(valid)\n{\n\treturn (valid) ? mxConstants.VALID_COLOR : mxConstants.INVALID_COLOR;\n};\n\t\n/**\n * Function: getEdgeWidth\n * \n * Returns the width used to draw the preview edge. This returns 3 if\n * there is no edge validation error and 1 otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the width for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.getEdgeWidth = function(valid)\n{\n\treturn (valid) ? 3 : 1;\n};\n\n/**\n * Function: connect\n * \n * Connects the given source and target using a new edge. This\n * implementation uses <createEdge> to create the edge.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * evt - Mousedown event of the connect gesture.\n * dropTarget - <mxCell> that represents the cell under the mouse when it was\n * released.\n */\nmxConnectionHandler.prototype.connect = function(source, target, evt, dropTarget)\n{\n\tif (target != null || this.isCreateTarget(evt) || this.graph.allowDanglingEdges)\n\t{\n\t\t// Uses the common parent of source and target or\n\t\t// the default parent to insert the edge\n\t\tvar model = this.graph.getModel();\n\t\tvar terminalInserted = false;\n\t\tvar edge = null;\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (source != null && target == null && !this.graph.isIgnoreTerminalEvent(evt) && this.isCreateTarget(evt))\n\t\t\t{\n\t\t\t\ttarget = this.createTargetVertex(evt, source);\n\t\t\t\t\n\t\t\t\tif (target != null)\n\t\t\t\t{\n\t\t\t\t\tdropTarget = this.graph.getDropTarget([target], evt, dropTarget);\n\t\t\t\t\tterminalInserted = true;\n\t\t\t\t\t\n\t\t\t\t\t// Disables edges as drop targets if the target cell was created\n\t\t\t\t\t// FIXME: Should not shift if vertex was aligned (same in Java)\n\t\t\t\t\tif (dropTarget == null || !this.graph.getModel().isEdge(dropTarget))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pstate = this.graph.getView().getState(dropTarget);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar tmp = model.getGeometry(target);\n\t\t\t\t\t\t\ttmp.x -= pstate.origin.x;\n\t\t\t\t\t\t\ttmp.y -= pstate.origin.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdropTarget = this.graph.getDefaultParent();\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tthis.graph.addCell(target, dropTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar parent = this.graph.getDefaultParent();\n\n\t\t\tif (source != null && target != null &&\n\t\t\t\tmodel.getParent(source) == model.getParent(target) &&\n\t\t\t\tmodel.getParent(model.getParent(source)) != model.getRoot())\n\t\t\t{\n\t\t\t\tparent = model.getParent(source);\n\n\t\t\t\tif ((source.geometry != null && source.geometry.relative) &&\n\t\t\t\t\t(target.geometry != null && target.geometry.relative))\n\t\t\t\t{\n\t\t\t\t\tparent = model.getParent(parent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Uses the value of the preview edge state for inserting\n\t\t\t// the new edge into the graph\n\t\t\tvar value = null;\n\t\t\tvar style = null;\n\t\t\t\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tvalue = this.edgeState.cell.value;\n\t\t\t\tstyle = this.edgeState.cell.style;\n\t\t\t}\n\n\t\t\tedge = this.insertEdge(parent, null, value, source, target, style);\n\t\t\t\n\t\t\tif (edge != null)\n\t\t\t{\n\t\t\t\t// Updates the connection constraints\n\t\t\t\tthis.graph.setConnectionConstraint(edge, source, true, this.sourceConstraint);\n\t\t\t\tthis.graph.setConnectionConstraint(edge, target, false, this.constraintHandler.currentConstraint);\n\t\t\t\t\n\t\t\t\t// Uses geometry of the preview edge state\n\t\t\t\tif (this.edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tmodel.setGeometry(edge, this.edgeState.cell.geometry);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar parent = model.getParent(source);\n\t\t\t\t\n\t\t\t\t// Inserts edge before source\n\t\t\t\tif (this.isInsertBefore(edge, source, target, evt, dropTarget))\n\t\t\t\t{\n\t\t\t\t\tvar index = null;\n\t\t\t\t\tvar tmp = source;\n\n\t\t\t\t\twhile (tmp.parent != null && tmp.geometry != null &&\n\t\t\t\t\t\ttmp.geometry.relative && tmp.parent != edge.parent)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = this.graph.model.getParent(tmp);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tmp != null && tmp.parent != null && tmp.parent == edge.parent)\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.add(parent, edge, tmp.parent.getIndex(tmp));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Makes sure the edge has a non-null, relative geometry\n\t\t\t\tvar geo = model.getGeometry(edge);\n\n\t\t\t\tif (geo == null)\n\t\t\t\t{\n\t\t\t\t\tgeo = new mxGeometry();\n\t\t\t\t\tgeo.relative = true;\n\t\t\t\t\t\n\t\t\t\t\tmodel.setGeometry(edge, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Uses scaled waypoints in geometry\n\t\t\t\tif (this.waypoints != null && this.waypoints.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\tvar tr = this.graph.view.translate;\n\t\t\t\t\tgeo.points = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < this.waypoints.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pt = this.waypoints[i];\n\t\t\t\t\t\tgeo.points.push(new mxPoint(pt.x / s - tr.x, pt.y / s - tr.y));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\tvar t = this.graph.view.translate;\n\t\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\tvar pt = (this.originalPoint != null) ?\n\t\t\t\t\t\t\tnew mxPoint(this.originalPoint.x / s - t.x, this.originalPoint.y / s - t.y) :\n\t\t\t\t\t\tnew mxPoint(this.currentPoint.x / s - t.x, this.currentPoint.y / s - t.y);\n\t\t\t\t\tpt.x -= this.graph.panDx / this.graph.view.scale;\n\t\t\t\t\tpt.y -= this.graph.panDy / this.graph.view.scale;\n\t\t\t\t\tgeo.setTerminalPoint(pt, false);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CONNECT, 'cell', edge, 'terminal', target,\n\t\t\t\t\t'event', evt, 'target', dropTarget, 'terminalInserted', terminalInserted));\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxLog.show();\n\t\t\tmxLog.debug(e.message);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t\t\n\t\tif (this.select)\n\t\t{\n\t\t\tthis.selectCells(edge, (terminalInserted) ? target : null);\n\t\t}\n\t}\n};\n\n/**\n * Function: selectCells\n * \n * Selects the given edge after adding a new connection. The target argument\n * contains the target vertex if one has been inserted.\n */\nmxConnectionHandler.prototype.selectCells = function(edge, target)\n{\n\tthis.graph.setSelectionCell(edge);\n};\n\n/**\n * Function: insertEdge\n * \n * Creates, inserts and returns the new edge for the given parameters. This\n * implementation does only use <createEdge> if <factoryMethod> is defined,\n * otherwise <mxGraph.insertEdge> will be used.\n */\nmxConnectionHandler.prototype.insertEdge = function(parent, id, value, source, target, style)\n{\n\tif (this.factoryMethod == null)\n\t{\n\t\treturn this.graph.insertEdge(parent, id, value, source, target, style);\n\t}\n\telse\n\t{\n\t\tvar edge = this.createEdge(value, source, target, style);\n\t\tedge = this.graph.addEdge(edge, parent, source, target);\n\t\t\n\t\treturn edge;\n\t}\n};\n\n/**\n * Function: createTargetVertex\n * \n * Hook method for creating new vertices on the fly if no target was\n * under the mouse. This is only called if <createTarget> is true and\n * returns null.\n * \n * Parameters:\n * \n * evt - Mousedown event of the connect gesture.\n * source - <mxCell> that represents the source terminal.\n */\nmxConnectionHandler.prototype.createTargetVertex = function(evt, source)\n{\n\t// Uses the first non-relative source\n\tvar geo = this.graph.getCellGeometry(source);\n\t\n\twhile (geo != null && geo.relative)\n\t{\n\t\tsource = this.graph.getModel().getParent(source);\n\t\tgeo = this.graph.getCellGeometry(source);\n\t}\n\t\n\tvar clone = this.graph.cloneCell(source);\n\tvar geo = this.graph.getModel().getGeometry(clone);\n\t\n\tif (geo != null)\n\t{\n\t\tvar t = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\tvar point = new mxPoint(this.currentPoint.x / s - t.x, this.currentPoint.y / s - t.y);\n\t\tgeo.x = Math.round(point.x - geo.width / 2 - this.graph.panDx / s);\n\t\tgeo.y = Math.round(point.y - geo.height / 2 - this.graph.panDy / s);\n\n\t\t// Aligns with source if within certain tolerance\n\t\tvar tol = this.getAlignmentTolerance();\n\t\t\n\t\tif (tol > 0)\n\t\t{\n\t\t\tvar sourceState = this.graph.view.getState(source);\n\t\t\t\n\t\t\tif (sourceState != null)\n\t\t\t{\n\t\t\t\tvar x = sourceState.x / s - t.x;\n\t\t\t\tvar y = sourceState.y / s - t.y;\n\t\t\t\t\n\t\t\t\tif (Math.abs(x - geo.x) <= tol)\n\t\t\t\t{\n\t\t\t\t\tgeo.x = Math.round(x);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(y - geo.y) <= tol)\n\t\t\t\t{\n\t\t\t\t\tgeo.y = Math.round(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn clone;\t\t\n};\n\n/**\n * Function: getAlignmentTolerance\n * \n * Returns the tolerance for aligning new targets to sources. This returns the grid size / 2.\n */\nmxConnectionHandler.prototype.getAlignmentTolerance = function(evt)\n{\n\treturn (this.graph.isGridEnabled()) ? this.graph.gridSize / 2 : this.graph.tolerance;\n};\n\n/**\n * Function: createEdge\n * \n * Creates and returns a new edge using <factoryMethod> if one exists. If\n * no factory method is defined, then a new default edge is returned. The\n * source and target arguments are informal, the actual connection is\n * setup later by the caller of this function.\n * \n * Parameters:\n * \n * value - Value to be used for creating the edge.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * style - Optional style from the preview edge.\n */\nmxConnectionHandler.prototype.createEdge = function(value, source, target, style)\n{\n\tvar edge = null;\n\t\n\t// Creates a new edge using the factoryMethod\n\tif (this.factoryMethod != null)\n\t{\n\t\tedge = this.factoryMethod(source, target, style);\n\t}\n\t\n\tif (edge == null)\n\t{\n\t\tedge = new mxCell(value || '');\n\t\tedge.setEdge(true);\n\t\tedge.setStyle(style);\n\t\t\n\t\tvar geo = new mxGeometry();\n\t\tgeo.relative = true;\n\t\tedge.setGeometry(geo);\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This should be\n * called on all instances. It is called automatically for the built-in\n * instance created for each <mxGraph>.\n */\nmxConnectionHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.destroy();\n\t\tthis.marker = null;\n\t}\n\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.destroy();\n\t\tthis.constraintHandler = null;\n\t}\n\n\tif (this.changeHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t\tthis.graph.getView().removeListener(this.changeHandler);\n\t\tthis.changeHandler = null;\n\t}\n\t\n\tif (this.drillHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.drillHandler);\n\t\tthis.graph.getView().removeListener(this.drillHandler);\n\t\tthis.drillHandler = null;\n\t}\n\t\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n};\n\n__mxOutput.mxConnectionHandler = typeof mxConnectionHandler !== 'undefined' ? mxConnectionHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConstraintHandler\n *\n * Handles constraints on connection targets. This class is in charge of\n * showing fixed points when the mouse is over a vertex and handles constraints\n * to establish new connections.\n *\n * Constructor: mxConstraintHandler\n *\n * Constructs an new constraint handler.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * factoryMethod - Optional function to create the edge. The function takes\n * the source and target <mxCell> as the first and second argument and\n * returns the <mxCell> that represents the new edge.\n */\nfunction mxConstraintHandler(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Adds a graph model listener to update the current focus on changes\n\tthis.resetHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.currentFocus != null && this.graph.view.getState(this.currentFocus.cell) == null)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.redraw();\n\t\t}\n\t});\n\t\n\tthis.graph.model.addListener(mxEvent.CHANGE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE, this.resetHandler);\n\tthis.graph.addListener(mxEvent.ROOT, this.resetHandler);\n};\n\n/**\n * Variable: pointImage\n * \n * <mxImage> to be used as the image for fixed connection points.\n */\nmxConstraintHandler.prototype.pointImage = new mxImage(mxClient.imageBasePath + '/point.gif', 5, 5);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxConstraintHandler.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxConstraintHandler.prototype.enabled = true;\n\n/**\n * Variable: highlightColor\n * \n * Specifies the color for the highlight. Default is <mxConstants.DEFAULT_VALID_COLOR>.\n */\nmxConstraintHandler.prototype.highlightColor = mxConstants.DEFAULT_VALID_COLOR;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxConstraintHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxConstraintHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxConstraintHandler.prototype.reset = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t}\n\t\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n\t\n\tthis.currentConstraint = null;\n\tthis.currentFocusArea = null;\n\tthis.currentPoint = null;\n\tthis.currentFocus = null;\n\tthis.focusPoints = null;\n};\n\n/**\n * Function: getTolerance\n * \n * Returns the tolerance to be used for intersecting connection points. This\n * implementation returns <mxGraph.tolerance>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> whose tolerance should be returned.\n */\nmxConstraintHandler.prototype.getTolerance = function(me)\n{\n\treturn this.graph.getTolerance();\n};\n\n/**\n * Function: getImageForConstraint\n * \n * Returns the tolerance to be used for intersecting connection points.\n */\nmxConstraintHandler.prototype.getImageForConstraint = function(state, constraint, point)\n{\n\treturn this.pointImage;\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the given <mxMouseEvent> should be ignored in <update>. This\n * implementation always returns false.\n */\nmxConstraintHandler.prototype.isEventIgnored = function(me, source)\n{\n\treturn false;\n};\n\n/**\n * Function: isStateIgnored\n * \n * Returns true if the given state should be ignored. This always returns false.\n */\nmxConstraintHandler.prototype.isStateIgnored = function(state, source)\n{\n\treturn false;\n};\n\n/**\n * Function: destroyIcons\n * \n * Destroys the <focusIcons> if they exist.\n */\nmxConstraintHandler.prototype.destroyIcons = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t\tthis.focusPoints = null;\n\t}\n};\n\n/**\n * Function: destroyFocusHighlight\n * \n * Destroys the <focusHighlight> if one exists.\n */\nmxConstraintHandler.prototype.destroyFocusHighlight = function()\n{\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n};\n\n/**\n * Function: isKeepFocusEvent\n * \n * Returns true if the current focused state should not be changed for the given event.\n * This returns true if shift and alt are pressed.\n */\nmxConstraintHandler.prototype.isKeepFocusEvent = function(me)\n{\n\treturn mxEvent.isShiftDown(me.getEvent());\n};\n\n/**\n * Function: getCellForEvent\n * \n * Returns the cell for the given event.\n */\nmxConstraintHandler.prototype.getCellForEvent = function(me, point)\n{\n\tvar cell = me.getCell();\n\t\n\t// Gets cell under actual point if different from event location\n\tif (cell == null && point != null && (me.getGraphX() != point.x || me.getGraphY() != point.y))\n\t{\n\t\tcell = this.graph.getCellAt(point.x, point.y);\n\t}\n\t\n\t// Uses connectable parent vertex if one exists\n\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\n\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t{\n\t\t\tcell = parent;\n\t\t}\n\t}\n\t\n\treturn (this.graph.isCellLocked(cell)) ? null : cell;\n};\n\n/**\n * Function: update\n * \n * Updates the state of this handler based on the given <mxMouseEvent>.\n * Source is a boolean indicating if the cell is a source or target.\n */\nmxConstraintHandler.prototype.update = function(me, source, existingEdge, point)\n{\n\tif (this.isEnabled() && !this.isEventIgnored(me))\n\t{\n\t\t// Lazy installation of mouseleave handler\n\t\tif (this.mouseleaveHandler == null && this.graph.container != null)\n\t\t{\n\t\t\tthis.mouseleaveHandler = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.reset();\n\t\t\t});\n\n\t\t\tmxEvent.addListener(this.graph.container, 'mouseleave', this.resetHandler);\t\n\t\t}\n\t\t\n\t\tvar tol = this.getTolerance(me);\n\t\tvar x = (point != null) ? point.x : me.getGraphX();\n\t\tvar y = (point != null) ? point.y : me.getGraphY();\n\t\tvar grid = new mxRectangle(x - tol, y - tol, 2 * tol, 2 * tol);\n\t\tvar mouse = new mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol);\n\t\tvar state = this.graph.view.getState(this.getCellForEvent(me, point));\n\n\t\t// Keeps focus icons visible while over vertex bounds and no other cell under mouse or shift is pressed\n\t\tif (!this.isKeepFocusEvent(me) && (this.currentFocusArea == null || this.currentFocus == null ||\n\t\t\t(state != null) || !this.graph.getModel().isVertex(this.currentFocus.cell) ||\n\t\t\t!mxUtils.intersects(this.currentFocusArea, mouse)) && (state != this.currentFocus))\n\t\t{\n\t\t\tthis.currentFocusArea = null;\n\t\t\tthis.currentFocus = null;\n\t\t\tthis.setFocus(me, state, source);\n\t\t}\n\n\t\tthis.currentConstraint = null;\n\t\tthis.currentPoint = null;\n\t\tvar minDistSq = null;\n\t\t\n\t\tif (this.focusIcons != null && this.constraints != null &&\n\t\t\t(state == null || this.currentFocus == state))\n\t\t{\n\t\t\tvar cx = mouse.getCenterX();\n\t\t\tvar cy = mouse.getCenterY();\n\t\t\t\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tvar dx = cx - this.focusIcons[i].bounds.getCenterX();\n\t\t\t\tvar dy = cy - this.focusIcons[i].bounds.getCenterY();\n\t\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\t\n\t\t\t\tif ((this.intersects(this.focusIcons[i], mouse, source, existingEdge) || (point != null &&\n\t\t\t\t\tthis.intersects(this.focusIcons[i], grid, source, existingEdge))) &&\n\t\t\t\t\t(minDistSq == null || tmp < minDistSq))\n\t\t\t\t{\n\t\t\t\t\tthis.currentConstraint = this.constraints[i];\n\t\t\t\t\tthis.currentPoint = this.focusPoints[i];\n\t\t\t\t\tminDistSq = tmp;\n\t\t\t\t\t\n\t\t\t\t\tvar tmp = this.focusIcons[i].bounds.clone();\n\t\t\t\t\ttmp.grow(mxConstants.HIGHLIGHT_SIZE + 1);\n\t\t\t\t\ttmp.width -= 1;\n\t\t\t\t\ttmp.height -= 1;\n\t\t\t\t\t\n\t\t\t\t\tif (this.focusHighlight == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar hl = this.createHighlightShape();\n\t\t\t\t\t\thl.dialect = (this.graph.dialect == mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\t\t\tmxConstants.DIALECT_SVG : mxConstants.DIALECT_VML;\n\t\t\t\t\t\thl.pointerEvents = false;\n\n\t\t\t\t\t\thl.init(this.graph.getView().getOverlayPane());\n\t\t\t\t\t\tthis.focusHighlight = hl;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\tmxEvent.redirectMouseEvents(hl.node, this.graph, getState);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.focusHighlight.bounds = tmp;\n\t\t\t\t\tthis.focusHighlight.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.currentConstraint == null)\n\t\t{\n\t\t\tthis.destroyFocusHighlight();\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.currentConstraint = null;\n\t\tthis.currentFocus = null;\n\t\tthis.currentPoint = null;\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.redraw = function()\n{\n\tif (this.currentFocus != null && this.constraints != null && this.focusIcons != null)\n\t{\n\t\tvar state = this.graph.view.getState(this.currentFocus.cell);\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tthis.focusIcons[i].bounds = bounds;\n\t\t\tthis.focusIcons[i].redraw();\n\t\t\tthis.currentFocusArea.add(this.focusIcons[i].bounds);\n\t\t\tthis.focusPoints[i] = cp;\n\t\t}\n\t}\t\n};\n\n/**\n * Function: setFocus\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.setFocus = function(me, state, source)\n{\n\tthis.constraints = (state != null && !this.isStateIgnored(state, source) &&\n\t\tthis.graph.isCellConnectable(state.cell)) ? ((this.isEnabled()) ?\n\t\t(this.graph.getAllConnectionConstraints(state, source) || []) : []) : null;\n\n\t// Only uses cells which have constraints\n\tif (this.constraints != null)\n\t{\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tif (this.focusIcons != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tthis.focusIcons[i].destroy();\n\t\t\t}\n\t\t\t\n\t\t\tthis.focusIcons = null;\n\t\t\tthis.focusPoints = null;\n\t\t}\n\t\t\n\t\tthis.focusPoints = [];\n\t\tthis.focusIcons = [];\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar src = img.src;\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tvar icon = new mxImageShape(bounds, src);\n\t\t\ticon.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\ticon.preserveImageAspect = false;\n\t\t\ticon.init(this.graph.getView().getDecoratorPane());\n\t\t\t\n\t\t\t// Fixes lost event tracking for images in quirks / IE8 standards\n\t\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(icon.node, 'dragstart', function(evt)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// Move the icon behind all other overlays\n\t\t\tif (icon.node.previousSibling != null)\n\t\t\t{\n\t\t\t\ticon.node.parentNode.insertBefore(icon.node, icon.node.parentNode.firstChild);\n\t\t\t}\n\n\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t});\n\t\t\t\n\t\t\ticon.redraw();\n\n\t\t\tmxEvent.redirectMouseEvents(icon.node, this.graph, getState);\n\t\t\tthis.currentFocusArea.add(icon.bounds);\n\t\t\tthis.focusIcons.push(icon);\n\t\t\tthis.focusPoints.push(cp);\n\t\t}\n\t\t\n\t\tthis.currentFocusArea.grow(this.getTolerance(me));\n\t}\n\telse\n\t{\n\t\tthis.destroyIcons();\n\t\tthis.destroyFocusHighlight();\n\t}\n};\n\n/**\n * Function: createHighlightShape\n * \n * Create the shape used to paint the highlight.\n * \n * Returns true if the given icon intersects the given point.\n */\nmxConstraintHandler.prototype.createHighlightShape = function()\n{\n\tvar hl = new mxRectangleShape(null, this.highlightColor, this.highlightColor, mxConstants.HIGHLIGHT_STROKEWIDTH);\n\thl.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\t\n\treturn hl;\n};\n\n/**\n * Function: intersects\n * \n * Returns true if the given icon intersects the given rectangle.\n */\nmxConstraintHandler.prototype.intersects = function(icon, mouse, source, existingEdge)\n{\n\treturn mxUtils.intersects(icon.bounds, mouse);\n};\n\n/**\n * Function: destroy\n * \n * Destroy this handler.\n */\nmxConstraintHandler.prototype.destroy = function()\n{\n\tthis.reset();\n\t\n\tif (this.resetHandler != null)\n\t{\n\t\tthis.graph.model.removeListener(this.resetHandler);\n\t\tthis.graph.view.removeListener(this.resetHandler);\n\t\tthis.graph.removeListener(this.resetHandler);\n\t\tthis.resetHandler = null;\n\t}\n\t\n\tif (this.mouseleaveHandler != null && this.graph.container != null)\n\t{\n\t\tmxEvent.removeListener(this.graph.container, 'mouseleave', this.mouseleaveHandler);\n\t\tthis.mouseleaveHandler = null;\n\t}\n};\n\n__mxOutput.mxConstraintHandler = typeof mxConstraintHandler !== 'undefined' ? mxConstraintHandler : undefined;\n\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\n/**\n * Class: mxRubberband\n * \n * Event handler that selects rectangular regions. This is not built-into\n * <mxGraph>. To enable rubberband selection in a graph, use the following code.\n * \n * Example:\n * \n * (code)\n * var rubberband = new mxRubberband(graph);\n * (end)\n * \n * Constructor: mxRubberband\n * \n * Constructs an event handler that selects rectangular regions in the graph\n * using rubberband selection.\n */\nfunction mxRubberband(graph)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.graph.addMouseListener(this);\n\n\t\t// Handles force rubberband event\n\t\tthis.forceRubberbandHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar evtName = evt.getProperty('eventName');\n\t\t\tvar me = evt.getProperty('event');\n\t\t\t\n\t\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isForceRubberbandEvent(me))\n\t\t\t{\n\t\t\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\t\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\t\t\torigin.x -= offset.x;\n\t\t\t\torigin.y -= offset.y;\n\t\t\t\tthis.start(me.getX() + origin.x, me.getY() + origin.y);\n\t\t\t\tme.consume(false);\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.forceRubberbandHandler);\n\t\t\n\t\t// Repaints the marquee after autoscroll\n\t\tthis.panHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.repaint();\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.PAN, this.panHandler);\n\t\t\n\t\t// Does not show menu if any touch gestures take place after the trigger\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tif (this.first != null)\n\t\t\t{\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\t// Automatic deallocation of memory\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload',\n\t\t\t\tmxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tthis.destroy();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Variable: defaultOpacity\n * \n * Specifies the default opacity to be used for the rubberband div. Default\n * is 20.\n */\nmxRubberband.prototype.defaultOpacity = 20;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxRubberband.prototype.enabled = true;\n\n/**\n * Variable: div\n * \n * Holds the DIV element which is currently visible.\n */\nmxRubberband.prototype.div = null;\n\n/**\n * Variable: sharedDiv\n * \n * Holds the DIV element which is used to display the rubberband.\n */\nmxRubberband.prototype.sharedDiv = null;\n\n/**\n * Variable: currentX\n * \n * Holds the value of the x argument in the last call to <update>.\n */\nmxRubberband.prototype.currentX = 0;\n\n/**\n * Variable: currentY\n * \n * Holds the value of the y argument in the last call to <update>.\n */\nmxRubberband.prototype.currentY = 0;\n\n/**\n * Variable: fadeOut\n * \n * Optional fade out effect. Default is false.\n */\nmxRubberband.prototype.fadeOut = false;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation returns\n * <enabled>.\n */\nmxRubberband.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation updates\n * <enabled>.\n */\nmxRubberband.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isForceRubberbandEvent\n * \n * Returns true if the given <mxMouseEvent> should start rubberband selection.\n * This implementation returns true if the alt key is pressed.\n */\nmxRubberband.prototype.isForceRubberbandEvent = function(me)\n{\n\treturn mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a rubberband selection. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxRubberband.prototype.mouseDown = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isEnabled() && this.graph.isEnabled() &&\n\t\tme.getState() == null && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\torigin.x -= offset.x;\n\t\torigin.y -= offset.y;\n\t\tthis.start(me.getX() + origin.x, me.getY() + origin.y);\n\n\t\t// Does not prevent the default for this event so that the\n\t\t// event processing chain is still executed even if we start\n\t\t// rubberbanding. This is required eg. in ExtJs to hide the\n\t\t// current context menu. In mouseMove we'll make sure we're\n\t\t// not selecting anything while we're rubberbanding.\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: start\n * \n * Sets the start point for the rubberband selection.\n */\nmxRubberband.prototype.start = function(x, y)\n{\n\tthis.first = new mxPoint(x, y);\n\n\tvar container = this.graph.container;\n\t\n\tfunction createMouseEvent(evt)\n\t{\n\t\tvar me = new mxMouseEvent(evt);\n\t\tvar pt = mxUtils.convertPoint(container, me.getX(), me.getY());\n\t\t\n\t\tme.graphX = pt.x;\n\t\tme.graphY = pt.y;\n\t\t\n\t\treturn me;\n\t};\n\n\tthis.dragHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseMove(this.graph, createMouseEvent(evt));\n\t});\n\n\tthis.dropHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseUp(this.graph, createMouseEvent(evt));\n\t});\n\n\t// Workaround for rubberband stopping if the mouse leaves the container in Firefox\n\tif (mxClient.IS_FF)\n\t{\n\t\tmxEvent.addGestureListeners(document, null, this.dragHandler, this.dropHandler);\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating therubberband selection.\n */\nmxRubberband.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && this.first != null)\n\t{\n\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\torigin.x -= offset.x;\n\t\torigin.y -= offset.y;\n\t\tvar x = me.getX() + origin.x;\n\t\tvar y = me.getY() + origin.y;\n\t\tvar dx = this.first.x - x;\n\t\tvar dy = this.first.y - y;\n\t\tvar tol = this.graph.tolerance;\n\t\t\n\t\tif (this.div != null || Math.abs(dx) > tol ||  Math.abs(dy) > tol)\n\t\t{\n\t\t\tif (this.div == null)\n\t\t\t{\n\t\t\t\tthis.div = this.createShape();\n\t\t\t}\n\t\t\t\n\t\t\t// Clears selection while rubberbanding. This is required because\n\t\t\t// the event is not consumed in mouseDown.\n\t\t\tmxUtils.clearSelection();\n\t\t\t\n\t\t\tthis.update(x, y);\n\t\t\tme.consume();\n\t\t}\n\t}\n};\n\n/**\n * Function: createShape\n * \n * Creates the rubberband selection shape.\n */\nmxRubberband.prototype.createShape = function()\n{\n\tif (this.sharedDiv == null)\n\t{\n\t\tthis.sharedDiv = document.createElement('div');\n\t\tthis.sharedDiv.className = 'mxRubberband';\n\t\tmxUtils.setOpacity(this.sharedDiv, this.defaultOpacity);\n\t}\n\n\tthis.graph.container.appendChild(this.sharedDiv);\n\tvar result = this.sharedDiv;\n\t\n\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10) && this.fadeOut)\n\t{\n\t\tthis.sharedDiv = null;\n\t}\n\t\t\n\treturn result;\n};\n\n/**\n * Function: isActive\n * \n * Returns true if this handler is active.\n */\nmxRubberband.prototype.isActive = function(sender, me)\n{\n\treturn this.div != null && this.div.style.display != 'none';\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by selecting the region of the rubberband using\n * <mxGraph.selectRegion>.\n */\nmxRubberband.prototype.mouseUp = function(sender, me)\n{\n\tvar active = this.isActive();\n\tthis.reset();\n\t\n\tif (active)\n\t{\n\t\tthis.execute(me.getEvent());\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: execute\n * \n * Resets the state of this handler and selects the current region\n * for the given event.\n */\nmxRubberband.prototype.execute = function(evt)\n{\n\tvar rect = new mxRectangle(this.x, this.y, this.width, this.height);\n\tthis.graph.selectRegion(rect, evt);\n};\n\n/**\n * Function: reset\n * \n * Resets the state of the rubberband selection.\n */\nmxRubberband.prototype.reset = function()\n{\n\tif (this.div != null)\n\t{\n\t\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10) && this.fadeOut)\n\t\t{\n\t\t\tvar temp = this.div;\n\t\t\tmxUtils.setPrefixedStyle(temp.style, 'transition', 'all 0.2s linear');\n\t\t\ttemp.style.pointerEvents = 'none';\n\t\t\ttemp.style.opacity = 0;\n\t\t    \n\t\t    window.setTimeout(function()\n\t\t    \t{\n\t\t    \t\ttemp.parentNode.removeChild(temp);\n\t\t    \t}, 200);\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t}\n\n\tmxEvent.removeGestureListeners(document, null, this.dragHandler, this.dropHandler);\n\tthis.dragHandler = null;\n\tthis.dropHandler = null;\n\t\n\tthis.currentX = 0;\n\tthis.currentY = 0;\n\tthis.first = null;\n\tthis.div = null;\n};\n\n/**\n * Function: update\n * \n * Sets <currentX> and <currentY> and calls <repaint>.\n */\nmxRubberband.prototype.update = function(x, y)\n{\n\tthis.currentX = x;\n\tthis.currentY = y;\n\t\n\tthis.repaint();\n};\n\n/**\n * Function: repaint\n * \n * Computes the bounding box and updates the style of the <div>.\n */\nmxRubberband.prototype.repaint = function()\n{\n\tif (this.div != null)\n\t{\n\t\tvar x = this.currentX - this.graph.panDx;\n\t\tvar y = this.currentY - this.graph.panDy;\n\t\t\n\t\tthis.x = Math.min(this.first.x, x);\n\t\tthis.y = Math.min(this.first.y, y);\n\t\tthis.width = Math.max(this.first.x, x) - this.x;\n\t\tthis.height =  Math.max(this.first.y, y) - this.y;\n\n\t\tvar dx = (mxClient.IS_VML) ? this.graph.panDx : 0;\n\t\tvar dy = (mxClient.IS_VML) ? this.graph.panDy : 0;\n\t\t\n\t\tthis.div.style.left = (this.x + dx) + 'px';\n\t\tthis.div.style.top = (this.y + dy) + 'px';\n\t\tthis.div.style.width = Math.max(1, this.width) + 'px';\n\t\tthis.div.style.height = Math.max(1, this.height) + 'px';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This does\n * normally not need to be called, it is called automatically when the\n * window unloads.\n */\nmxRubberband.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\t\tthis.graph.removeMouseListener(this);\n\t\tthis.graph.removeListener(this.forceRubberbandHandler);\n\t\tthis.graph.removeListener(this.panHandler);\n\t\tthis.reset();\n\t\t\n\t\tif (this.sharedDiv != null)\n\t\t{\n\t\t\tthis.sharedDiv = null;\n\t\t}\n\t}\n};\n\n__mxOutput.mxRubberband = typeof mxRubberband !== 'undefined' ? mxRubberband : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHandle\n * \n * Implements a single custom handle for vertices.\n * \n * Constructor: mxHandle\n * \n * Constructs a new handle for the given state.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxHandle(state, cursor, image)\n{\n\tthis.graph = state.view.graph;\n\tthis.state = state;\n\tthis.cursor = (cursor != null) ? cursor : this.cursor;\n\tthis.image = (image != null) ? image : this.image;\n\tthis.init();\n};\n\n/**\n * Variable: cursor\n * \n * Specifies the cursor to be used for this handle. Default is 'default'.\n */\nmxHandle.prototype.cursor = 'default';\n\n/**\n * Variable: image\n * \n * Specifies the <mxImage> to be used to render the handle. Default is null.\n */\nmxHandle.prototype.image = null;\n\n/**\n * Variable: image\n * \n * Specifies the <mxImage> to be used to render the handle. Default is null.\n */\nmxHandle.prototype.ignoreGrid = false;\n\n/**\n * Function: getPosition\n * \n * Hook for subclassers to return the current position of the handle.\n */\nmxHandle.prototype.getPosition = function(bounds) { };\n\n/**\n * Function: setPosition\n * \n * Hooks for subclassers to update the style in the <state>.\n */\nmxHandle.prototype.setPosition = function(bounds, pt, me) { };\n\n/**\n * Function: execute\n * \n * Hook for subclassers to execute the handle.\n */\nmxHandle.prototype.execute = function() { };\n\n/**\n * Function: copyStyle\n * \n * Sets the cell style with the given name to the corresponding value in <state>.\n */\nmxHandle.prototype.copyStyle = function(key)\n{\n\tthis.graph.setCellStyles(key, this.state.style[key], [this.state.cell]);\n};\n\n/**\n * Function: processEvent\n * \n * Processes the given <mxMouseEvent> and invokes <setPosition>.\n */\nmxHandle.prototype.processEvent = function(me)\n{\n\tvar scale = this.graph.view.scale;\n\tvar tr = this.graph.view.translate;\n\tvar pt = new mxPoint(me.getGraphX() / scale - tr.x, me.getGraphY() / scale - tr.y);\n\t\n\t// Center shape on mouse cursor\n\tif (this.shape != null && this.shape.bounds != null)\n\t{\n\t\tpt.x -= this.shape.bounds.width / scale / 4;\n\t\tpt.y -= this.shape.bounds.height / scale / 4;\n\t}\n\n\t// Snaps to grid for the rotated position then applies the rotation for the direction after that\n\tvar alpha1 = -mxUtils.toRadians(this.getRotation());\n\tvar alpha2 = -mxUtils.toRadians(this.getTotalRotation()) - alpha1;\n\tpt = this.flipPoint(this.rotatePoint(this.snapPoint(this.rotatePoint(pt, alpha1),\n\t\t\tthis.ignoreGrid || !this.graph.isGridEnabledEvent(me.getEvent())), alpha2));\n\tthis.setPosition(this.state.getPaintBounds(), pt, me);\n\tthis.positionChanged();\n\tthis.redraw();\n};\n\n/**\n * Function: positionChanged\n * \n * Called after <setPosition> has been called in <processEvent>. This repaints\n * the state using <mxCellRenderer>.\n */\nmxHandle.prototype.positionChanged = function()\n{\n\tif (this.state.text != null)\n\t{\n\t\tthis.state.text.apply(this.state);\n\t}\n\t\n\tif (this.state.shape != null)\n\t{\n\t\tthis.state.shape.apply(this.state);\n\t}\n\t\n\tthis.graph.cellRenderer.redraw(this.state, true);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation defined in the style of the cell.\n */\nmxHandle.prototype.getRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: getTotalRotation\n * \n * Returns the rotation from the style and the rotation from the direction of\n * the cell.\n */\nmxHandle.prototype.getTotalRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getShapeRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: init\n * \n * Creates and initializes the shapes required for this handle.\n */\nmxHandle.prototype.init = function()\n{\n\tvar html = this.isHtmlRequired();\n\t\n\tif (this.image != null)\n\t{\n\t\tthis.shape = new mxImageShape(new mxRectangle(0, 0, this.image.width, this.image.height), this.image.src);\n\t\tthis.shape.preserveImageAspect = false;\n\t}\n\telse\n\t{\n\t\tthis.shape = this.createShape(html);\n\t}\n\t\n\tthis.initShape(html);\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the shape for this handle.\n */\nmxHandle.prototype.createShape = function(html)\n{\n\tvar bounds = new mxRectangle(0, 0, mxConstants.HANDLE_SIZE, mxConstants.HANDLE_SIZE);\n\t\n\treturn new mxRectangleShape(bounds, mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n};\n\n/**\n * Function: initShape\n * \n * Initializes <shape> and sets its cursor.\n */\nmxHandle.prototype.initShape = function(html)\n{\n\tif (html && this.shape.isHtmlAllowed())\n\t{\n\t\tthis.shape.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tthis.shape.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\n\t\tif (this.cursor != null)\n\t\t{\n\t\t\tthis.shape.init(this.graph.getView().getOverlayPane());\n\t\t}\n\t}\n\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\tthis.shape.node.style.cursor = this.cursor;\n};\n\n/**\n * Function: redraw\n * \n * Renders the shape for this handle.\n */\nmxHandle.prototype.redraw = function()\n{\n\tif (this.shape != null && this.state.shape != null)\n\t{\n\t\tvar pt = this.getPosition(this.state.getPaintBounds());\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tvar alpha = mxUtils.toRadians(this.getTotalRotation());\n\t\t\tpt = this.rotatePoint(this.flipPoint(pt), alpha);\n\t\n\t\t\tvar scale = this.graph.view.scale;\n\t\t\tvar tr = this.graph.view.translate;\n\t\t\tthis.shape.bounds.x = Math.floor((pt.x + tr.x) * scale - this.shape.bounds.width / 2);\n\t\t\tthis.shape.bounds.y = Math.floor((pt.y + tr.y) * scale - this.shape.bounds.height / 2);\n\t\t\t\n\t\t\t// Needed to force update of text bounds\n\t\t\tthis.shape.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHtmlRequired\n * \n * Returns true if this handle should be rendered in HTML. This returns true if\n * the text node is in the graph container.\n */\nmxHandle.prototype.isHtmlRequired = function()\n{\n\treturn this.state.text != null && this.state.text.node.parentNode == this.graph.container;\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the point by the given angle.\n */\nmxHandle.prototype.rotatePoint = function(pt, alpha)\n{\n\tvar bounds = this.state.getCellBounds();\n\tvar cx = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\tvar cos = Math.cos(alpha);\n\tvar sin = Math.sin(alpha); \n\n\treturn mxUtils.getRotatedPoint(pt, cos, sin, cx);\n};\n\n/**\n * Function: flipPoint\n * \n * Flips the given point vertically and/or horizontally.\n */\nmxHandle.prototype.flipPoint = function(pt)\n{\n\tif (this.state.shape != null)\n\t{\n\t\tvar bounds = this.state.getCellBounds();\n\t\t\n\t\tif (this.state.shape.flipH)\n\t\t{\n\t\t\tpt.x = 2 * bounds.x + bounds.width - pt.x;\n\t\t}\n\t\t\n\t\tif (this.state.shape.flipV)\n\t\t{\n\t\t\tpt.y = 2 * bounds.y + bounds.height - pt.y;\n\t\t}\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: snapPoint\n * \n * Snaps the given point to the grid if ignore is false. This modifies\n * the given point in-place and also returns it.\n */\nmxHandle.prototype.snapPoint = function(pt, ignore)\n{\n\tif (!ignore)\n\t{\n\t\tpt.x = this.graph.snap(pt.x);\n\t\tpt.y = this.graph.snap(pt.y);\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides this handle.\n */\nmxHandle.prototype.setVisible = function(visible)\n{\n\tif (this.shape != null && this.shape.node != null)\n\t{\n\t\tthis.shape.node.style.display = (visible) ? '' : 'none';\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handle by setting its visibility to true.\n */\nmxHandle.prototype.reset = function()\n{\n\tthis.setVisible(true);\n\tthis.state.style = this.graph.getCellStyle(this.state.cell);\n\tthis.positionChanged();\n};\n\n/**\n * Function: destroy\n * \n * Destroys this handle.\n */\nmxHandle.prototype.destroy = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n\n__mxOutput.mxHandle = typeof mxHandle !== 'undefined' ? mxHandle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxVertexHandler\n * \n * Event handler for resizing cells. This handler is automatically created in\n * <mxGraph.createHandler>.\n * \n * Constructor: mxVertexHandler\n * \n * Constructs an event handler that allows to resize vertices\n * and groups.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be resized.\n */\nfunction mxVertexHandler(state)\n{\n\tif (state != null)\n\t{\n\t\tthis.state = state;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tif (this.livePreview && this.index != null)\n\t\t\t{\n\t\t\t\t// Redraws the live preview\n\t\t\t\tthis.state.view.graph.cellRenderer.redraw(this.state, true);\n\t\t\t\t\n\t\t\t\t// Redraws connected edges\n\t\t\t\tthis.state.view.invalidate(this.state.cell);\n\t\t\t\tthis.state.invalid = false;\n\t\t\t\tthis.state.view.validate();\n\t\t\t}\n\t\t\t\n\t\t\tthis.reset();\n\t\t});\n\t\t\n\t\tthis.state.view.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxVertexHandler.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState> being modified.\n */\nmxVertexHandler.prototype.state = null;\n\n/**\n * Variable: singleSizer\n * \n * Specifies if only one sizer handle at the bottom, right corner should be\n * used. Default is false.\n */\nmxVertexHandler.prototype.singleSizer = false;\n\n/**\n * Variable: index\n * \n * Holds the index of the current handle.\n */\nmxVertexHandler.prototype.index = null;\n\n/**\n * Variable: allowHandleBoundsCheck\n * \n * Specifies if the bounds of handles should be used for hit-detection in IE or\n * if <tolerance> > 0. Default is true.\n */\nmxVertexHandler.prototype.allowHandleBoundsCheck = true;\n\n/**\n * Variable: handleImage\n * \n * Optional <mxImage> to be used as handles. Default is null.\n */\nmxVertexHandler.prototype.handleImage = null;\n\n/**\n * Variable: tolerance\n * \n * Optional tolerance for hit-detection in <getHandleForEvent>. Default is 0.\n */\nmxVertexHandler.prototype.tolerance = 0;\n\n/**\n * Variable: rotationEnabled\n * \n * Specifies if a rotation handle should be visible. Default is false.\n */\nmxVertexHandler.prototype.rotationEnabled = false;\n\n/**\n * Variable: parentHighlightEnabled\n * \n * Specifies if the parent should be highlighted if a child cell is selected.\n * Default is false.\n */\nmxVertexHandler.prototype.parentHighlightEnabled = false;\n\n/**\n * Variable: rotationRaster\n * \n * Specifies if rotation steps should be \"rasterized\" depening on the distance\n * to the handle. Default is true.\n */\nmxVertexHandler.prototype.rotationRaster = true;\n\n/**\n * Variable: rotationCursor\n * \n * Specifies the cursor for the rotation handle. Default is 'crosshair'.\n */\nmxVertexHandler.prototype.rotationCursor = 'crosshair';\n\n/**\n * Variable: livePreview\n * \n * Specifies if resize should change the cell in-place. This is an experimental\n * feature for non-touch devices. Default is false.\n */\nmxVertexHandler.prototype.livePreview = false;\n\n/**\n * Variable: manageSizers\n * \n * Specifies if sizers should be hidden and spaced if the vertex is small.\n * Default is false.\n */\nmxVertexHandler.prototype.manageSizers = false;\n\n/**\n * Variable: constrainGroupByChildren\n * \n * Specifies if the size of groups should be constrained by the children.\n * Default is false.\n */\nmxVertexHandler.prototype.constrainGroupByChildren = false;\n\n/**\n * Variable: rotationHandleVSpacing\n * \n * Vertical spacing for rotation icon. Default is -16.\n */\nmxVertexHandler.prototype.rotationHandleVSpacing = -16;\n\n/**\n * Variable: horizontalOffset\n * \n * The horizontal offset for the handles. This is updated in <redrawHandles>\n * if <manageSizers> is true and the sizers are offset horizontally.\n */\nmxVertexHandler.prototype.horizontalOffset = 0;\n\n/**\n * Variable: verticalOffset\n * \n * The horizontal offset for the handles. This is updated in <redrawHandles>\n * if <manageSizers> is true and the sizers are offset vertically.\n */\nmxVertexHandler.prototype.verticalOffset = 0;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxVertexHandler.prototype.init = function()\n{\n\tthis.graph = this.state.view.graph;\n\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y, this.selectionBounds.width, this.selectionBounds.height);\n\tthis.selectionBorder = this.createSelectionShape(this.bounds);\n\t// VML dialect required here for event transparency in IE\n\tthis.selectionBorder.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tthis.selectionBorder.pointerEvents = false;\n\tthis.selectionBorder.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\tthis.selectionBorder.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(this.selectionBorder.node, this.graph, this.state);\n\t\n\tif (this.graph.isCellMovable(this.state.cell))\n\t{\n\t\tthis.selectionBorder.setCursor(mxConstants.CURSOR_MOVABLE_VERTEX);\n\t}\n\n\t// Adds the sizer handles\n\tif (mxGraphHandler.prototype.maxCells <= 0 || this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells)\n\t{\n\t\tvar resizable = this.graph.isCellResizable(this.state.cell);\n\t\tthis.sizers = [];\n\n\t\tif (resizable || (this.graph.isLabelMovable(this.state.cell) &&\n\t\t\tthis.state.width >= 2 && this.state.height >= 2))\n\t\t{\n\t\t\tvar i = 0;\n\n\t\t\tif (resizable)\n\t\t\t{\n\t\t\t\tif (!this.singleSizer)\n\t\t\t\t{\n\t\t\t\t\tthis.sizers.push(this.createSizer('nw-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('n-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('ne-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('w-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('e-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('sw-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('s-resize', i++));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.sizers.push(this.createSizer('se-resize', i++));\n\t\t\t}\n\t\t\t\n\t\t\tvar geo = this.graph.model.getGeometry(this.state.cell);\n\t\t\t\n\t\t\tif (geo != null && !geo.relative && !this.graph.isSwimlane(this.state.cell) &&\n\t\t\t\tthis.graph.isLabelMovable(this.state.cell))\n\t\t\t{\n\t\t\t\t// Marks this as the label handle for getHandleForEvent\n\t\t\t\tthis.labelShape = this.createSizer(mxConstants.CURSOR_LABEL_HANDLE, mxEvent.LABEL_HANDLE, mxConstants.LABEL_HANDLE_SIZE, mxConstants.LABEL_HANDLE_FILLCOLOR);\n\t\t\t\tthis.sizers.push(this.labelShape);\n\t\t\t}\n\t\t}\n\t\telse if (this.graph.isCellMovable(this.state.cell) && !this.graph.isCellResizable(this.state.cell) &&\n\t\t\tthis.state.width < 2 && this.state.height < 2)\n\t\t{\n\t\t\tthis.labelShape = this.createSizer(mxConstants.CURSOR_MOVABLE_VERTEX,\n\t\t\t\tmxEvent.LABEL_HANDLE, null, mxConstants.LABEL_HANDLE_FILLCOLOR);\n\t\t\tthis.sizers.push(this.labelShape);\n\t\t}\n\t}\n\t\n\t// Adds the rotation handler\n\tif (this.isRotationHandleVisible())\n\t{\n\t\tthis.rotationShape = this.createSizer(this.rotationCursor, mxEvent.ROTATION_HANDLE,\n\t\t\tmxConstants.HANDLE_SIZE + 3, mxConstants.HANDLE_FILLCOLOR);\n\t\tthis.sizers.push(this.rotationShape);\n\t}\n\n\tthis.customHandles = this.createCustomHandles();\n\tthis.redraw();\n\t\n\tif (this.constrainGroupByChildren)\n\t{\n\t\tthis.updateMinBounds();\n\t}\n};\n\n/**\n * Function: isRotationHandleVisible\n * \n * Returns true if the rotation handle should be showing.\n */\nmxVertexHandler.prototype.isRotationHandleVisible = function()\n{\n\treturn this.graph.isEnabled() && this.rotationEnabled && this.graph.isCellRotatable(this.state.cell) &&\n\t\t(mxGraphHandler.prototype.maxCells <= 0 || this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells) &&\n\t\tthis.state.width >= 2 && this.state.height >= 2;\n};\n\n/**\n * Function: isConstrainedEvent\n * \n * Returns true if the aspect ratio if the cell should be maintained.\n */\nmxVertexHandler.prototype.isConstrainedEvent = function(me)\n{\n\treturn mxEvent.isShiftDown(me.getEvent()) || this.state.style[mxConstants.STYLE_ASPECT] == 'fixed';\n};\n\n/**\n * Function: isCenteredEvent\n * \n * Returns true if the center of the vertex should be maintained during the resize.\n */\nmxVertexHandler.prototype.isCenteredEvent = function(state, me)\n{\n\treturn false;\n};\n\n/**\n * Function: createCustomHandles\n * \n * Returns an array of custom handles. This implementation returns null.\n */\nmxVertexHandler.prototype.createCustomHandles = function()\n{\n\treturn null;\n};\n\n/**\n * Function: updateMinBounds\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxVertexHandler.prototype.updateMinBounds = function()\n{\n\tvar children = this.graph.getChildCells(this.state.cell);\n\t\n\tif (children.length > 0)\n\t{\n\t\tthis.minBounds = this.graph.view.getBounds(children);\n\t\t\n\t\tif (this.minBounds != null)\n\t\t{\n\t\t\tvar s = this.state.view.scale;\n\t\t\tvar t = this.state.view.translate;\n\n\t\t\tthis.minBounds.x -= this.state.x;\n\t\t\tthis.minBounds.y -= this.state.y;\n\t\t\tthis.minBounds.x /= s;\n\t\t\tthis.minBounds.y /= s;\n\t\t\tthis.minBounds.width /= s;\n\t\t\tthis.minBounds.height /= s;\n\t\t\tthis.x0 = this.state.x / s - t.x;\n\t\t\tthis.y0 = this.state.y / s - t.y;\n\t\t}\n\t}\n};\n\n/**\n * Function: getSelectionBounds\n * \n * Returns the mxRectangle that defines the bounds of the selection\n * border.\n */\nmxVertexHandler.prototype.getSelectionBounds = function(state)\n{\n\treturn new mxRectangle(Math.round(state.x), Math.round(state.y), Math.round(state.width), Math.round(state.height));\n};\n\n/**\n * Function: createParentHighlightShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxVertexHandler.prototype.createParentHighlightShape = function(bounds)\n{\n\treturn this.createSelectionShape(bounds);\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxVertexHandler.prototype.createSelectionShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.getSelectionColor());\n\tshape.strokewidth = this.getSelectionStrokeWidth();\n\tshape.isDashed = this.isSelectionDashed();\n\t\n\treturn shape;\n};\n\n/**\n * Function: getSelectionColor\n * \n * Returns <mxConstants.VERTEX_SELECTION_COLOR>.\n */\nmxVertexHandler.prototype.getSelectionColor = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_COLOR;\n};\n\n/**\n * Function: getSelectionStrokeWidth\n * \n * Returns <mxConstants.VERTEX_SELECTION_STROKEWIDTH>.\n */\nmxVertexHandler.prototype.getSelectionStrokeWidth = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_STROKEWIDTH;\n};\n\n/**\n * Function: isSelectionDashed\n * \n * Returns <mxConstants.VERTEX_SELECTION_DASHED>.\n */\nmxVertexHandler.prototype.isSelectionDashed = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_DASHED;\n};\n\n/**\n * Function: createSizer\n * \n * Creates a sizer handle for the specified cursor and index and returns\n * the new <mxRectangleShape> that represents the handle.\n */\nmxVertexHandler.prototype.createSizer = function(cursor, index, size, fillColor)\n{\n\tsize = size || mxConstants.HANDLE_SIZE;\n\t\n\tvar bounds = new mxRectangle(0, 0, size, size);\n\tvar sizer = this.createSizerShape(bounds, index, fillColor);\n\n\tif (sizer.isHtmlAllowed() && this.state.text != null && this.state.text.node.parentNode == this.graph.container)\n\t{\n\t\tsizer.bounds.height -= 1;\n\t\tsizer.bounds.width -= 1;\n\t\tsizer.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tsizer.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tsizer.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\tsizer.init(this.graph.getView().getOverlayPane());\n\t}\n\n\tmxEvent.redirectMouseEvents(sizer.node, this.graph, this.state);\n\t\n\tif (this.graph.isEnabled())\n\t{\n\t\tsizer.setCursor(cursor);\n\t}\n\t\n\tif (!this.isSizerVisible(index))\n\t{\n\t\tsizer.visible = false;\n\t}\n\t\n\treturn sizer;\n};\n\n/**\n * Function: isSizerVisible\n * \n * Returns true if the sizer for the given index is visible.\n * This returns true for all given indices.\n */\nmxVertexHandler.prototype.isSizerVisible = function(index)\n{\n\treturn true;\n};\n\n/**\n * Function: createSizerShape\n * \n * Creates the shape used for the sizer handle for the specified bounds an\n * index. Only images and rectangles should be returned if support for HTML\n * labels with not foreign objects is required.\n */\nmxVertexHandler.prototype.createSizerShape = function(bounds, index, fillColor)\n{\n\tif (this.handleImage != null)\n\t{\n\t\tbounds = new mxRectangle(bounds.x, bounds.y, this.handleImage.width, this.handleImage.height);\n\t\tvar shape = new mxImageShape(bounds, this.handleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse if (index == mxEvent.ROTATION_HANDLE)\n\t{\n\t\treturn new mxEllipse(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n\telse\n\t{\n\t\treturn new mxRectangleShape(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: createBounds\n * \n * Helper method to create an <mxRectangle> around the given centerpoint\n * with a width and height of 2*s or 6, if no s is given.\n */\nmxVertexHandler.prototype.moveSizerTo = function(shape, x, y)\n{\n\tif (shape != null)\n\t{\n\t\tshape.bounds.x = Math.floor(x - shape.bounds.width / 2);\n\t\tshape.bounds.y = Math.floor(y - shape.bounds.height / 2);\n\t\t\n\t\t// Fixes visible inactive handles in VML\n\t\tif (shape.node != null && shape.node.style.display != 'none')\n\t\t{\n\t\t\tshape.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getHandleForEvent\n * \n * Returns the index of the handle for the given event. This returns the index\n * of the sizer from where the event originated or <mxEvent.LABEL_INDEX>.\n */\nmxVertexHandler.prototype.getHandleForEvent = function(me)\n{\n\t// Connection highlight may consume events before they reach sizer handle\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 1;\n\tvar hit = (this.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\t\n\tfunction checkShape(shape)\n\t{\n\t\treturn shape != null && (me.isSource(shape) || (hit != null && mxUtils.intersects(shape.bounds, hit) &&\n\t\t\tshape.node.style.display != 'none' && shape.node.style.visibility != 'hidden'));\n\t}\n\n\tif (this.customHandles != null && this.isCustomHandleEvent(me))\n\t{\n\t\t// Inverse loop order to match display order\n\t\tfor (var i = this.customHandles.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (checkShape(this.customHandles[i].shape))\n\t\t\t{\n\t\t\t\t// LATER: Return reference to active shape\n\t\t\t\treturn mxEvent.CUSTOM_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (checkShape(this.rotationShape))\n\t{\n\t\treturn mxEvent.ROTATION_HANDLE;\n\t}\n\telse if (checkShape(this.labelShape))\n\t{\n\t\treturn mxEvent.LABEL_HANDLE;\n\t}\n\t\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.sizers[i]))\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: isCustomHandleEvent\n * \n * Returns true if the given event allows custom handles to be changed. This\n * implementation returns true.\n */\nmxVertexHandler.prototype.isCustomHandleEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event if a handle has been clicked. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxVertexHandler.prototype.mouseDown = function(sender, me)\n{\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 0;\n\t\n\tif (!me.isConsumed() && this.graph.isEnabled() && (tol > 0 || me.getState() == this.state))\n\t{\n\t\tvar handle = this.getHandleForEvent(me);\n\n\t\tif (handle != null)\n\t\t{\n\t\t\tthis.start(me.getGraphX(), me.getGraphY(), handle);\n\t\t\tme.consume();\n\t\t}\n\t}\n};\n\n/**\n * Function: isLivePreviewBorder\n * \n * Called if <livePreview> is enabled to check if a border should be painted.\n * This implementation returns true if the shape is transparent.\n */\nmxVertexHandler.prototype.isLivePreviewBorder = function()\n{\n\treturn this.state.shape != null && this.state.shape.fill == null && this.state.shape.stroke == null;\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxVertexHandler.prototype.start = function(x, y, index)\n{\n\tthis.inTolerance = true;\n\tthis.childOffsetX = 0;\n\tthis.childOffsetY = 0;\n\tthis.index = index;\n\tthis.startX = x;\n\tthis.startY = y;\n\t\n\t// Saves reference to parent state\n\tvar model = this.state.view.graph.model;\n\tvar parent = model.getParent(this.state.cell);\n\t\n\tif (this.state.view.currentRoot != parent && (model.isVertex(parent) || model.isEdge(parent)))\n\t{\n\t\tthis.parentState = this.state.view.graph.view.getState(parent);\n\t}\n\t\n\t// Creates a preview that can be on top of any HTML label\n\tthis.selectionBorder.node.style.display = (index == mxEvent.ROTATION_HANDLE) ? 'inline' : 'none';\n\t\n\t// Creates the border that represents the new bounds\n\tif (!this.livePreview || this.isLivePreviewBorder())\n\t{\n\t\tthis.preview = this.createSelectionShape(this.bounds);\n\t\t\n\t\tif (!(mxClient.IS_SVG && Number(this.state.style[mxConstants.STYLE_ROTATION] || '0') != 0) &&\n\t\t\tthis.state.text != null && this.state.text.node.parentNode == this.graph.container)\n\t\t{\n\t\t\tthis.preview.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\t\tthis.preview.init(this.graph.container);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.preview.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\tthis.preview.init(this.graph.view.getOverlayPane());\n\t\t}\n\t}\n\t\n\t// Prepares the handles for live preview\n\tif (this.livePreview)\n\t{\n\t\tthis.hideSizers();\n\t\t\n\t\tif (index == mxEvent.ROTATION_HANDLE)\n\t\t{\n\t\t\tthis.rotationShape.node.style.display = '';\n\t\t}\n\t\telse if (index == mxEvent.LABEL_HANDLE)\n\t\t{\n\t\t\tthis.labelShape.node.style.display = '';\n\t\t}\n\t\telse if (this.sizers != null && this.sizers[index] != null)\n\t\t{\n\t\t\tthis.sizers[index].node.style.display = '';\n\t\t}\n\t\telse if (index <= mxEvent.CUSTOM_HANDLE && this.customHandles != null)\n\t\t{\n\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].setVisible(true);\n\t\t}\n\t\t\n\t\t// Gets the array of connected edge handlers for redrawing\n\t\tvar edges = this.graph.getEdges(this.state.cell);\n\t\tthis.edgeHandlers = [];\n\t\t\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar handler = this.graph.selectionCellsHandler.getHandler(edges[i]);\n\t\t\t\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tthis.edgeHandlers.push(handler);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: hideHandles\n * \n * Shortcut to <hideSizers>.\n */\nmxVertexHandler.prototype.setHandlesVisible = function(visible)\n{\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tthis.sizers[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].setVisible(visible);\n\t\t}\n\t}\n};\n\n/**\n * Function: hideSizers\n * \n * Hides all sizers except.\n * \n * Starts the handling of the mouse gesture.\n */\nmxVertexHandler.prototype.hideSizers = function()\n{\n\tthis.setHandlesVisible(false);\n};\n\n/**\n * Function: checkTolerance\n * \n * Checks if the coordinates for the given event are within the\n * <mxGraph.tolerance>. If the event is a mouse event then the tolerance is\n * ignored.\n */\nmxVertexHandler.prototype.checkTolerance = function(me)\n{\n\tif (this.inTolerance && this.startX != null && this.startY != null)\n\t{\n\t\tif (mxEvent.isMouseEvent(me.getEvent()) ||\n\t\t\tMath.abs(me.getGraphX() - this.startX) > this.graph.tolerance ||\n\t\t\tMath.abs(me.getGraphY() - this.startY) > this.graph.tolerance)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxVertexHandler.prototype.updateHint = function(me) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxVertexHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundAngle\n * \n * Hook for rounding the angle. This uses Math.round.\n */\nmxVertexHandler.prototype.roundAngle = function(angle)\n{\n\treturn Math.round(angle * 10) / 10;\n};\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled width or height. This uses Math.round.\n */\nmxVertexHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length);\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview.\n */\nmxVertexHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && this.index != null)\n\t{\n\t\t// Checks tolerance for ignoring single clicks\n\t\tthis.checkTolerance(me);\n\n\t\tif (!this.inTolerance)\n\t\t{\n\t\t\tif (this.index <= mxEvent.CUSTOM_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].processEvent(me);\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].active = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.index == mxEvent.LABEL_HANDLE)\n\t\t\t{\n\t\t\t\tthis.moveLabel(me);\n\t\t\t}\n\t\t\telse if (this.index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\tthis.rotateVertex(me);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.resizeVertex(me);\n\t\t\t}\n\n\t\t\tthis.updateHint(me);\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n\t// Workaround for disabling the connect highlight when over handle\n\telse if (!this.graph.isMouseDown && this.getHandleForEvent(me) != null)\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.moveLabel = function(me)\n{\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar tr = this.graph.view.translate;\n\tvar scale = this.graph.view.scale;\n\t\n\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tpoint.x = (this.graph.snap(point.x / scale - tr.x) + tr.x) * scale;\n\t\tpoint.y = (this.graph.snap(point.y / scale - tr.y) + tr.y) * scale;\n\t}\n\n\tvar index = (this.rotationShape != null) ? this.sizers.length - 2 : this.sizers.length - 1;\n\tthis.moveSizerTo(this.sizers[index], point.x, point.y);\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.rotateVertex = function(me)\n{\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar dx = this.state.x + this.state.width / 2 - point.x;\n\tvar dy = this.state.y + this.state.height / 2 - point.y;\n\tthis.currentAlpha = (dx != 0) ? Math.atan(dy / dx) * 180 / Math.PI + 90 : ((dy < 0) ? 180 : 0);\n\t\n\tif (dx > 0)\n\t{\n\t\tthis.currentAlpha -= 180;\n\t}\n\n\t// Rotation raster\n\tif (this.rotationRaster && this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tvar dx = point.x - this.state.getCenterX();\n\t\tvar dy = point.y - this.state.getCenterY();\n\t\tvar dist = Math.abs(Math.sqrt(dx * dx + dy * dy) - 20) * 3;\n\t\tvar raster = Math.max(1, 5 * Math.min(3, Math.max(0, Math.round(80 / Math.abs(dist)))));\n\t\t\n\t\tthis.currentAlpha = Math.round(this.currentAlpha / raster) * raster;\n\t}\n\telse\n\t{\n\t\tthis.currentAlpha = this.roundAngle(this.currentAlpha);\n\t}\n\n\tthis.selectionBorder.rotation = this.currentAlpha;\n\tthis.selectionBorder.redraw();\n\t\t\t\t\t\n\tif (this.livePreview)\n\t{\n\t\tthis.redrawHandles();\n\t}\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.resizeVertex = function(me)\n{\n\tvar ct = new mxPoint(this.state.getCenterX(), this.state.getCenterY());\n\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar tr = this.graph.view.translate;\n\tvar scale = this.graph.view.scale;\n\tvar cos = Math.cos(-alpha);\n\tvar sin = Math.sin(-alpha);\n\t\n\tvar dx = point.x - this.startX;\n\tvar dy = point.y - this.startY;\n\n\t// Rotates vector for mouse gesture\n\tvar tx = cos * dx - sin * dy;\n\tvar ty = sin * dx + cos * dy;\n\t\n\tdx = tx;\n\tdy = ty;\n\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\tthis.unscaledBounds = this.union(geo, dx / scale, dy / scale, this.index,\n\t\tthis.graph.isGridEnabledEvent(me.getEvent()), 1,\n\t\tnew mxPoint(0, 0), this.isConstrainedEvent(me),\n\t\tthis.isCenteredEvent(this.state, me));\n\t\n\t// Keeps vertex within maximum graph or parent bounds\n\tif (!geo.relative)\n\t{\n\t\tvar max = this.graph.getMaximumGraphBounds();\n\t\t\n\t\t// Handles child cells\n\t\tif (max != null && this.parentState != null)\n\t\t{\n\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\n\t\t\tmax.x -= (this.parentState.x - tr.x * scale) / scale;\n\t\t\tmax.y -= (this.parentState.y - tr.y * scale) / scale;\n\t\t}\n\t\t\n\t\tif (this.graph.isConstrainChild(this.state.cell))\n\t\t{\n\t\t\tvar tmp = this.graph.getCellContainmentArea(this.state.cell);\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tvar overlap = this.graph.getOverlap(this.state.cell);\n\t\t\t\t\n\t\t\t\tif (overlap > 0)\n\t\t\t\t{\n\t\t\t\t\ttmp = mxRectangle.fromRectangle(tmp);\n\t\t\t\t\t\n\t\t\t\t\ttmp.x -= tmp.width * overlap;\n\t\t\t\t\ttmp.y -= tmp.height * overlap;\n\t\t\t\t\ttmp.width += 2 * tmp.width * overlap;\n\t\t\t\t\ttmp.height += 2 * tmp.height * overlap;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (max == null)\n\t\t\t\t{\n\t\t\t\t\tmax = tmp;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\tmax.intersect(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif (max != null)\n\t\t{\n\t\t\tif (this.unscaledBounds.x < max.x)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.width -= max.x - this.unscaledBounds.x;\n\t\t\t\tthis.unscaledBounds.x = max.x;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.y < max.y)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.height -= max.y - this.unscaledBounds.y;\n\t\t\t\tthis.unscaledBounds.y = max.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.x + this.unscaledBounds.width > max.x + max.width)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.width -= this.unscaledBounds.x +\n\t\t\t\t\tthis.unscaledBounds.width - max.x - max.width;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.y + this.unscaledBounds.height > max.y + max.height)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.height -= this.unscaledBounds.y +\n\t\t\t\t\tthis.unscaledBounds.height - max.y - max.height;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.bounds = new mxRectangle(((this.parentState != null) ? this.parentState.x : tr.x * scale) +\n\t\t(this.unscaledBounds.x) * scale, ((this.parentState != null) ? this.parentState.y : tr.y * scale) +\n\t\t(this.unscaledBounds.y) * scale, this.unscaledBounds.width * scale, this.unscaledBounds.height * scale);\n\n\tif (geo.relative && this.parentState != null)\n\t{\n\t\tthis.bounds.x += this.state.x - this.parentState.x;\n\t\tthis.bounds.y += this.state.y - this.parentState.y;\n\t}\n\n\tcos = Math.cos(alpha);\n\tsin = Math.sin(alpha);\n\t\n\tvar c2 = new mxPoint(this.bounds.getCenterX(), this.bounds.getCenterY());\n\n\tvar dx = c2.x - ct.x;\n\tvar dy = c2.y - ct.y;\n\t\n\tvar dx2 = cos * dx - sin * dy;\n\tvar dy2 = sin * dx + cos * dy;\n\t\n\tvar dx3 = dx2 - dx;\n\tvar dy3 = dy2 - dy;\n\t\n\tvar dx4 = this.bounds.x - this.state.x;\n\tvar dy4 = this.bounds.y - this.state.y;\n\t\n\tvar dx5 = cos * dx4 - sin * dy4;\n\tvar dy5 = sin * dx4 + cos * dy4;\n\t\n\tthis.bounds.x += dx3;\n\tthis.bounds.y += dy3;\n\t\n\t// Rounds unscaled bounds to int\n\tthis.unscaledBounds.x = this.roundLength(this.unscaledBounds.x + dx3 / scale);\n\tthis.unscaledBounds.y = this.roundLength(this.unscaledBounds.y + dy3 / scale);\n\tthis.unscaledBounds.width = this.roundLength(this.unscaledBounds.width);\n\tthis.unscaledBounds.height = this.roundLength(this.unscaledBounds.height);\n\t\n\t// Shifts the children according to parent offset\n\tif (!this.graph.isCellCollapsed(this.state.cell) && (dx3 != 0 || dy3 != 0))\n\t{\n\t\tthis.childOffsetX = this.state.x - this.bounds.x + dx5;\n\t\tthis.childOffsetY = this.state.y - this.bounds.y + dy5;\n\t}\n\telse\n\t{\n\t\tthis.childOffsetX = 0;\n\t\tthis.childOffsetY = 0;\n\t}\n\t\n\tif (this.livePreview)\n\t{\n\t\tthis.updateLivePreview(me);\n\t}\n\t\n\tif (this.preview != null)\n\t{\n\t\tthis.drawPreview();\n\t}\n};\n\n/**\n * Function: updateLivePreview\n * \n * Repaints the live preview.\n */\nmxVertexHandler.prototype.updateLivePreview = function(me)\n{\n\t// TODO: Apply child offset to children in live preview\n\tvar scale = this.graph.view.scale;\n\tvar tr = this.graph.view.translate;\n\t\n\t// Saves current state\n\tvar tempState = this.state.clone();\n\n\t// Temporarily changes size and origin\n\tthis.state.x = this.bounds.x;\n\tthis.state.y = this.bounds.y;\n\tthis.state.origin = new mxPoint(this.state.x / scale - tr.x, this.state.y / scale - tr.y);\n\tthis.state.width = this.bounds.width;\n\tthis.state.height = this.bounds.height;\n\t\n\t// Needed to force update of text bounds\n\tthis.state.unscaledWidth = null;\n\t\n\t// Redraws cell and handles\n\tvar off = this.state.absoluteOffset;\n\toff = new mxPoint(off.x, off.y);\n\n\t// Required to store and reset absolute offset for updating label position\n\tthis.state.absoluteOffset.x = 0;\n\tthis.state.absoluteOffset.y = 0;\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\t\t\t\t\n\n\tif (geo != null)\n\t{\n\t\tvar offset = geo.offset || this.EMPTY_POINT;\n\n\t\tif (offset != null && !geo.relative)\n\t\t{\n\t\t\tthis.state.absoluteOffset.x = this.state.view.scale * offset.x;\n\t\t\tthis.state.absoluteOffset.y = this.state.view.scale * offset.y;\n\t\t}\n\t\t\n\t\tthis.state.view.updateVertexLabelOffset(this.state);\n\t}\n\t\n\t// Draws the live preview\n\tthis.state.view.graph.cellRenderer.redraw(this.state, true);\n\t\n\t// Redraws connected edges TODO: Include child edges\n\tthis.state.view.invalidate(this.state.cell);\n\tthis.state.invalid = false;\n\tthis.state.view.validate();\n\tthis.redrawHandles();\n\t\n\t// Restores current state\n\tthis.state.setState(tempState);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the changes to the geometry.\n */\nmxVertexHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.index != null && this.state != null)\n\t{\n\t\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\n\t\tthis.graph.getModel().beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (this.index <= mxEvent.CUSTOM_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].active = false;\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].execute();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.currentAlpha != null)\n\t\t\t\t{\n\t\t\t\t\tvar delta = this.currentAlpha - (this.state.style[mxConstants.STYLE_ROTATION] || 0);\n\t\t\t\t\t\n\t\t\t\t\tif (delta != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.rotateCell(this.state.cell, delta);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.rotateClick();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar gridEnabled = this.graph.isGridEnabledEvent(me.getEvent());\n\t\t\t\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\t\n\t\t\t\tvar dx = point.x - this.startX;\n\t\t\t\tvar dy = point.y - this.startY;\n\t\t\t\t\n\t\t\t\t// Rotates vector for mouse gesture\n\t\t\t\tvar tx = cos * dx - sin * dy;\n\t\t\t\tvar ty = sin * dx + cos * dy;\n\t\t\t\t\n\t\t\t\tdx = tx;\n\t\t\t\tdy = ty;\n\t\t\t\t\n\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\tvar recurse = this.isRecursiveResize(this.state, me);\n\t\t\t\tthis.resizeCell(this.state.cell, this.roundLength(dx / s), this.roundLength(dy / s),\n\t\t\t\t\tthis.index, gridEnabled, this.isConstrainedEvent(me), recurse);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.graph.getModel().endUpdate();\n\t\t}\n\n\t\tme.consume();\n\t\tthis.reset();\n\t}\n};\n\n/**\n * Function: rotateCell\n * \n * Rotates the given cell to the given rotation.\n */\nmxVertexHandler.prototype.isRecursiveResize = function(state, me)\n{\n\treturn this.graph.isRecursiveResize(this.state);\n};\n\n/**\n * Function: rotateClick\n * \n * Hook for subclassers to implement a single click on the rotation handle.\n * This code is executed as part of the model transaction. This implementation\n * is empty.\n */\nmxVertexHandler.prototype.rotateClick = function() { };\n\n/**\n * Function: rotateCell\n * \n * Rotates the given cell and its children by the given angle in degrees.\n * \n * Parameters:\n * \n * cell - <mxCell> to be rotated.\n * angle - Angle in degrees.\n */\nmxVertexHandler.prototype.rotateCell = function(cell, angle, parent)\n{\n\tif (angle != 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\n\t\tif (model.isVertex(cell) || model.isEdge(cell))\n\t\t{\n\t\t\tif (!model.isEdge(cell))\n\t\t\t{\n\t\t\t\tvar state = this.graph.view.getState(cell);\n\t\t\t\tvar style = (state != null) ? state.style : this.graph.getCellStyle(cell);\n\t\t\n\t\t\t\tif (style != null)\n\t\t\t\t{\n\t\t\t\t\tvar total = (style[mxConstants.STYLE_ROTATION] || 0) + angle;\n\t\t\t\t\tthis.graph.setCellStyles(mxConstants.STYLE_ROTATION, total, [cell]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar geo = this.graph.getCellGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar pgeo = this.graph.getCellGeometry(parent);\n\t\t\t\t\n\t\t\t\tif (pgeo != null && !model.isEdge(parent))\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\tgeo.rotate(angle, new mxPoint(pgeo.width / 2, pgeo.height / 2));\n\t\t\t\t\tmodel.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((model.isVertex(cell) && !geo.relative) || model.isEdge(cell))\n\t\t\t\t{\n\t\t\t\t\t// Recursive rotation\n\t\t\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.rotateCell(model.getChildAt(cell, i), angle, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxVertexHandler.prototype.reset = function()\n{\n\tif (this.sizers != null && this.index != null && this.sizers[this.index] != null &&\n\t\tthis.sizers[this.index].node.style.display == 'none')\n\t{\n\t\tthis.sizers[this.index].node.style.display = '';\n\t}\n\n\tthis.currentAlpha = null;\n\tthis.inTolerance = null;\n\tthis.index = null;\n\n\t// TODO: Reset and redraw cell states for live preview\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.destroy();\n\t\tthis.preview = null;\n\t}\n\n\tif (this.livePreview && this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (this.sizers[i] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[i].node.style.display = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tif (this.customHandles[i].active)\n\t\t\t{\n\t\t\t\tthis.customHandles[i].active = false;\n\t\t\t\tthis.customHandles[i].reset();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.customHandles[i].setVisible(true);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Checks if handler has been destroyed\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.node.style.display = 'inline';\n\t\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\t\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y,\n\t\t\tthis.selectionBounds.width, this.selectionBounds.height);\n\t\tthis.drawPreview();\n\t}\n\n\tthis.removeHint();\n\tthis.redrawHandles();\n\tthis.edgeHandlers = null;\n\tthis.unscaledBounds = null;\n};\n\n/**\n * Function: resizeCell\n * \n * Uses the given vector to change the bounds of the given cell\n * in the graph using <mxGraph.resizeCell>.\n */\nmxVertexHandler.prototype.resizeCell = function(cell, dx, dy, index, gridEnabled, constrained, recurse)\n{\n\tvar geo = this.graph.model.getGeometry(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tif (index == mxEvent.LABEL_HANDLE)\n\t\t{\n\t\t\tvar scale = this.graph.view.scale;\n\t\t\tdx = Math.round((this.labelShape.bounds.getCenterX() - this.startX) / scale);\n\t\t\tdy = Math.round((this.labelShape.bounds.getCenterY() - this.startY) / scale);\n\t\t\t\n\t\t\tgeo = geo.clone();\n\t\t\t\n\t\t\tif (geo.offset == null)\n\t\t\t{\n\t\t\t\tgeo.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeo.offset.x += dx;\n\t\t\t\tgeo.offset.y += dy;\n\t\t\t}\n\t\t\t\n\t\t\tthis.graph.model.setGeometry(cell, geo);\n\t\t}\n\t\telse if (this.unscaledBounds != null)\n\t\t{\n\t\t\tvar scale = this.graph.view.scale;\n\n\t\t\tif (this.childOffsetX != 0 || this.childOffsetY != 0)\n\t\t\t{\n\t\t\t\tthis.moveChildren(cell, Math.round(this.childOffsetX / scale), Math.round(this.childOffsetY / scale));\n\t\t\t}\n\n\t\t\tthis.graph.resizeCell(cell, this.unscaledBounds, recurse);\n\t\t}\n\t}\n};\n\n/**\n * Function: moveChildren\n * \n * Moves the children of the given cell by the given vector.\n */\nmxVertexHandler.prototype.moveChildren = function(cell, dx, dy)\n{\n\tvar model = this.graph.getModel();\n\tvar childCount = model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\t\tvar geo = this.graph.getCellGeometry(child);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.translate(dx, dy);\n\t\t\tmodel.setGeometry(child, geo);\n\t\t}\n\t}\n};\n/**\n * Function: union\n * \n * Returns the union of the given bounds and location for the specified\n * handle index.\n * \n * To override this to limit the size of vertex via a minWidth/-Height style,\n * the following code can be used.\n * \n * (code)\n * var vertexHandlerUnion = mxVertexHandler.prototype.union;\n * mxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained)\n * {\n *   var result = vertexHandlerUnion.apply(this, arguments);\n *   \n *   result.width = Math.max(result.width, mxUtils.getNumber(this.state.style, 'minWidth', 0));\n *   result.height = Math.max(result.height, mxUtils.getNumber(this.state.style, 'minHeight', 0));\n *   \n *   return result;\n * };\n * (end)\n * \n * The minWidth/-Height style can then be used as follows:\n * \n * (code)\n * graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30, 'minWidth=100;minHeight=100;');\n * (end)\n * \n * To override this to update the height for a wrapped text if the width of a vertex is\n * changed, the following can be used.\n * \n * (code)\n * var mxVertexHandlerUnion = mxVertexHandler.prototype.union;\n * mxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained)\n * {\n *   var result = mxVertexHandlerUnion.apply(this, arguments);\n *   var s = this.state;\n *   \n *   if (this.graph.isHtmlLabel(s.cell) && (index == 3 || index == 4) &&\n *       s.text != null && s.style[mxConstants.STYLE_WHITE_SPACE] == 'wrap')\n *   {\n *     var label = this.graph.getLabel(s.cell);\n *     var fontSize = mxUtils.getNumber(s.style, mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE);\n *     var ww = result.width / s.view.scale - s.text.spacingRight - s.text.spacingLeft\n *     \n *     result.height = mxUtils.getSizeForString(label, fontSize, s.style[mxConstants.STYLE_FONTFAMILY], ww).height;\n *   }\n *   \n *   return result;\n * };\n * (end)\n */\nmxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained, centered)\n{\n\tif (this.singleSizer)\n\t{\n\t\tvar x = bounds.x + bounds.width + dx;\n\t\tvar y = bounds.y + bounds.height + dy;\n\t\t\n\t\tif (gridEnabled)\n\t\t{\n\t\t\tx = this.graph.snap(x / scale) * scale;\n\t\t\ty = this.graph.snap(y / scale) * scale;\n\t\t}\n\t\t\n\t\tvar rect = new mxRectangle(bounds.x, bounds.y, 0, 0);\n\t\trect.add(new mxRectangle(x, y, 0, 0));\n\t\t\n\t\treturn rect;\n\t}\n\telse\n\t{\n\t\tvar w0 = bounds.width;\n\t\tvar h0 = bounds.height;\n\t\tvar left = bounds.x - tr.x * scale;\n\t\tvar right = left + w0;\n\t\tvar top = bounds.y - tr.y * scale;\n\t\tvar bottom = top + h0;\n\t\t\n\t\tvar cx = left + w0 / 2;\n\t\tvar cy = top + h0 / 2;\n\t\t\n\t\tif (index > 4 /* Bottom Row */)\n\t\t{\n\t\t\tbottom = bottom + dy;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tbottom = this.graph.snap(bottom / scale) * scale;\n\t\t\t}\n\t\t}\n\t\telse if (index < 3 /* Top Row */)\n\t\t{\n\t\t\ttop = top + dy;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\ttop = this.graph.snap(top / scale) * scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (index == 0 || index == 3 || index == 5 /* Left */)\n\t\t{\n\t\t\tleft += dx;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tleft = this.graph.snap(left / scale) * scale;\n\t\t\t}\n\t\t}\n\t\telse if (index == 2 || index == 4 || index == 7 /* Right */)\n\t\t{\n\t\t\tright += dx;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tright = this.graph.snap(right / scale) * scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar width = right - left;\n\t\tvar height = bottom - top;\n\n\t\tif (constrained)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar aspect = geo.width / geo.height;\n\t\t\t\t\n\t\t\t\tif (index== 1 || index== 2 || index == 7 || index == 6)\n\t\t\t\t{\n\t\t\t\t\twidth = height * aspect;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\theight = width / aspect;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (index == 0)\n\t\t\t\t{\n\t\t\t\t\tleft = right - width;\n\t\t\t\t\ttop = bottom - height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (centered)\n\t\t{\n\t\t\twidth += (width - w0);\n\t\t\theight += (height - h0);\n\t\t\t\n\t\t\tvar cdx = cx - (left + width / 2);\n\t\t\tvar cdy = cy - (top + height / 2);\n\n\t\t\tleft += cdx;\n\t\t\ttop += cdy;\n\t\t\tright += cdx;\n\t\t\tbottom += cdy;\n\t\t}\n\n\t\t// Flips over left side\n\t\tif (width < 0)\n\t\t{\n\t\t\tleft += width;\n\t\t\twidth = Math.abs(width);\n\t\t}\n\t\t\n\t\t// Flips over top side\n\t\tif (height < 0)\n\t\t{\n\t\t\ttop += height;\n\t\t\theight = Math.abs(height);\n\t\t}\n\n\t\tvar result = new mxRectangle(left + tr.x * scale, top + tr.y * scale, width, height);\n\t\t\n\t\tif (this.minBounds != null)\n\t\t{\n\t\t\tresult.width = Math.max(result.width, this.minBounds.x * scale + this.minBounds.width * scale +\n\t\t\t\tMath.max(0, this.x0 * scale - result.x));\n\t\t\tresult.height = Math.max(result.height, this.minBounds.y * scale + this.minBounds.height * scale +\n\t\t\t\tMath.max(0, this.y0 * scale - result.y));\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Redraws the handles and the preview.\n */\nmxVertexHandler.prototype.redraw = function()\n{\n\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y, this.selectionBounds.width, this.selectionBounds.height);\n\t\n\tthis.redrawHandles();\n\tthis.drawPreview();\n};\n\n/**\n * Returns the padding to be used for drawing handles for the current <bounds>.\n */\nmxVertexHandler.prototype.getHandlePadding = function()\n{\n\t// KNOWN: Tolerance depends on event type (eg. 0 for mouse events)\n\tvar result = new mxPoint(0, 0);\n\tvar tol = this.tolerance;\n\n\tif (this.sizers != null && this.sizers.length > 0 && this.sizers[0] != null &&\n\t\t(this.bounds.width < 2 * this.sizers[0].bounds.width + 2 * tol ||\n\t\tthis.bounds.height < 2 * this.sizers[0].bounds.height + 2 * tol))\n\t{\n\t\ttol /= 2;\n\t\t\n\t\tresult.x = this.sizers[0].bounds.width + tol;\n\t\tresult.y = this.sizers[0].bounds.height + tol;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the handles. To hide certain handles the following code can be used.\n * \n * (code)\n * mxVertexHandler.prototype.redrawHandles = function()\n * {\n *   mxVertexHandlerRedrawHandles.apply(this, arguments);\n *   \n *   if (this.sizers != null && this.sizers.length > 7)\n *   {\n *     this.sizers[1].node.style.display = 'none';\n *     this.sizers[6].node.style.display = 'none';\n *   }\n * };\n * (end)\n */\nmxVertexHandler.prototype.redrawHandles = function()\n{\n\tvar tol = this.tolerance;\n\tthis.horizontalOffset = 0;\n\tthis.verticalOffset = 0;\n\tvar s = this.bounds;\n\n\tif (this.sizers != null && this.sizers.length > 0 && this.sizers[0] != null)\n\t{\n\t\tif (this.index == null && this.manageSizers && this.sizers.length >= 8)\n\t\t{\n\t\t\t// KNOWN: Tolerance depends on event type (eg. 0 for mouse events)\n\t\t\tvar padding = this.getHandlePadding();\n\t\t\tthis.horizontalOffset = padding.x;\n\t\t\tthis.verticalOffset = padding.y;\n\t\t\t\n\t\t\tif (this.horizontalOffset != 0 || this.verticalOffset != 0)\n\t\t\t{\n\t\t\t\ts = new mxRectangle(s.x, s.y, s.width, s.height);\n\n\t\t\t\ts.x -= this.horizontalOffset / 2;\n\t\t\t\ts.width += this.horizontalOffset;\n\t\t\t\ts.y -= this.verticalOffset / 2;\n\t\t\t\ts.height += this.verticalOffset;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.sizers.length >= 8)\n\t\t\t{\n\t\t\t\tif ((s.width < 2 * this.sizers[0].bounds.width + 2 * tol) ||\n\t\t\t\t\t(s.height < 2 * this.sizers[0].bounds.height + 2 * tol))\n\t\t\t\t{\n\t\t\t\t\tthis.sizers[0].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[2].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[5].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[7].node.style.display = 'none';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.sizers[0].node.style.display = '';\n\t\t\t\t\tthis.sizers[2].node.style.display = '';\n\t\t\t\t\tthis.sizers[5].node.style.display = '';\n\t\t\t\t\tthis.sizers[7].node.style.display = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar r = s.x + s.width;\n\t\tvar b = s.y + s.height;\n\t\t\n\t\tif (this.singleSizer)\n\t\t{\n\t\t\tthis.moveSizerTo(this.sizers[0], r, b);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar cx = s.x + s.width / 2;\n\t\t\tvar cy = s.y + s.height / 2;\n\t\t\t\n\t\t\tif (this.sizers.length >= 8)\n\t\t\t{\n\t\t\t\tvar crs = ['nw-resize', 'n-resize', 'ne-resize', 'e-resize', 'se-resize', 's-resize', 'sw-resize', 'w-resize'];\n\t\t\t\t\n\t\t\t\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tvar cos = Math.cos(alpha);\n\t\t\t\tvar sin = Math.sin(alpha);\n\t\t\t\t\n\t\t\t\tvar da = Math.round(alpha * 4 / Math.PI);\n\t\t\t\t\n\t\t\t\tvar ct = new mxPoint(s.getCenterX(), s.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(s.x, s.y), cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[0], pt.x, pt.y);\n\t\t\t\tthis.sizers[0].setCursor(crs[mxUtils.mod(0 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = cx;\n\t\t\t\tpt.y = s.y;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[1], pt.x, pt.y);\n\t\t\t\tthis.sizers[1].setCursor(crs[mxUtils.mod(1 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = s.y;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[2], pt.x, pt.y);\n\t\t\t\tthis.sizers[2].setCursor(crs[mxUtils.mod(2 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = s.x;\n\t\t\t\tpt.y = cy;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[3], pt.x, pt.y);\n\t\t\t\tthis.sizers[3].setCursor(crs[mxUtils.mod(7 + da, crs.length)]);\n\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = cy;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[4], pt.x, pt.y);\n\t\t\t\tthis.sizers[4].setCursor(crs[mxUtils.mod(3 + da, crs.length)]);\n\n\t\t\t\tpt.x = s.x;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[5], pt.x, pt.y);\n\t\t\t\tthis.sizers[5].setCursor(crs[mxUtils.mod(6 + da, crs.length)]);\n\n\t\t\t\tpt.x = cx;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[6], pt.x, pt.y);\n\t\t\t\tthis.sizers[6].setCursor(crs[mxUtils.mod(5 + da, crs.length)]);\n\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[7], pt.x, pt.y);\n\t\t\t\tthis.sizers[7].setCursor(crs[mxUtils.mod(4 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[8], cx + this.state.absoluteOffset.x, cy + this.state.absoluteOffset.y);\n\t\t\t}\n\t\t\telse if (this.state.width >= 2 && this.state.height >= 2)\n\t\t\t{\n\t\t\t\tthis.moveSizerTo(this.sizers[0], cx + this.state.absoluteOffset.x, cy + this.state.absoluteOffset.y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.moveSizerTo(this.sizers[0], this.state.x, this.state.y);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.rotationShape != null)\n\t{\n\t\tvar alpha = mxUtils.toRadians((this.currentAlpha != null) ? this.currentAlpha : this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\tvar cos = Math.cos(alpha);\n\t\tvar sin = Math.sin(alpha);\n\t\t\n\t\tvar ct = new mxPoint(this.state.getCenterX(), this.state.getCenterY());\n\t\tvar pt = mxUtils.getRotatedPoint(this.getRotationHandlePosition(), cos, sin, ct);\n\n\t\tif (this.rotationShape.node != null)\n\t\t{\n\t\t\tthis.moveSizerTo(this.rotationShape, pt.x, pt.y);\n\n\t\t\t// Hides rotation handle during text editing\n\t\t\tthis.rotationShape.node.style.visibility = (this.state.view.graph.isEditing()) ? 'hidden' : '';\n\t\t}\n\t}\n\t\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t}\n\t\n\tif (this.edgeHandlers != null)\n\t{\t\t\n\t\tfor (var i = 0; i < this.edgeHandlers.length; i++)\n\t\t{\n\t\t\tthis.edgeHandlers[i].redraw();\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tvar temp = this.customHandles[i].shape.node.style.display;\n\t\t\tthis.customHandles[i].redraw();\n\t\t\tthis.customHandles[i].shape.node.style.display = temp;\n\n\t\t\t// Hides custom handles during text editing\n\t\t\tthis.customHandles[i].shape.node.style.visibility = (this.graph.isEditing()) ? 'hidden' : '';\n\t\t}\n\t}\n\n\tthis.updateParentHighlight();\n};\n\n/**\n * Function: getRotationHandlePosition\n * \n * Returns an <mxPoint> that defines the rotation handle position.\n */\nmxVertexHandler.prototype.getRotationHandlePosition = function()\n{\n\treturn new mxPoint(this.bounds.x + this.bounds.width / 2, this.bounds.y + this.rotationHandleVSpacing)\n};\n\n/**\n * Function: updateParentHighlight\n * \n * Updates the highlight of the parent if <parentHighlightEnabled> is true.\n */\nmxVertexHandler.prototype.updateParentHighlight = function()\n{\n\t// If not destroyed\n\tif (this.selectionBorder != null)\n\t{\n\t\tif (this.parentHighlight != null)\n\t\t{\n\t\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\n\t\t\tif (this.graph.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\tvar b = this.parentHighlight.bounds;\n\t\t\t\t\n\t\t\t\tif (pstate != null && (b.x != pstate.x || b.y != pstate.y ||\n\t\t\t\t\tb.width != pstate.width || b.height != pstate.height))\n\t\t\t\t{\n\t\t\t\t\tthis.parentHighlight.bounds = pstate;\n\t\t\t\t\tthis.parentHighlight.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.parentHighlight.destroy();\n\t\t\t\tthis.parentHighlight = null;\n\t\t\t}\n\t\t}\n\t\telse if (this.parentHighlightEnabled)\n\t\t{\n\t\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\t\n\t\t\tif (this.graph.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\t\n\t\t\t\tif (pstate != null)\n\t\t\t\t{\n\t\t\t\t\tthis.parentHighlight = this.createParentHighlightShape(pstate);\n\t\t\t\t\t// VML dialect required here for event transparency in IE\n\t\t\t\t\tthis.parentHighlight.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.parentHighlight.pointerEvents = false;\n\t\t\t\t\tthis.parentHighlight.rotation = Number(pstate.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\t\tthis.parentHighlight.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview.\n */\nmxVertexHandler.prototype.drawPreview = function()\n{\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.bounds = this.bounds;\n\t\t\n\t\tif (this.preview.node.parentNode == this.graph.container)\n\t\t{\n\t\t\tthis.preview.bounds.width = Math.max(0, this.preview.bounds.width - 1);\n\t\t\tthis.preview.bounds.height = Math.max(0, this.preview.bounds.height - 1);\n\t\t}\n\t\n\t\tthis.preview.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\tthis.preview.redraw();\n\t}\n\t\n\tthis.selectionBorder.bounds = this.bounds;\n\tthis.selectionBorder.redraw();\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.redraw();\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxVertexHandler.prototype.destroy = function()\n{\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.state.view.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.destroy();\n\t\tthis.preview = null;\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.destroy();\n\t\tthis.parentHighlight = null;\n\t}\n\t\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.destroy();\n\t\tthis.selectionBorder = null;\n\t}\n\t\n\tthis.labelShape = null;\n\tthis.removeHint();\n\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tthis.sizers[i].destroy();\n\t\t}\n\t\t\n\t\tthis.sizers = null;\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].destroy();\n\t\t}\n\t\t\n\t\tthis.customHandles = null;\n\t}\n};\n\n__mxOutput.mxVertexHandler = typeof mxVertexHandler !== 'undefined' ? mxVertexHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEdgeHandler\n *\n * Graph event handler that reconnects edges and modifies control points and\n * the edge label location. Uses <mxTerminalMarker> for finding and\n * highlighting new source and target vertices. This handler is automatically\n * created in <mxGraph.createHandler> for each selected edge.\n * \n * To enable adding/removing control points, the following code can be used:\n * \n * (code)\n * mxEdgeHandler.prototype.addEnabled = true;\n * mxEdgeHandler.prototype.removeEnabled = true;\n * (end)\n * \n * Note: This experimental feature is not recommended for production use.\n * \n * Constructor: mxEdgeHandler\n *\n * Constructs an edge handler for the specified <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxEdgeHandler(state)\n{\n\tif (state != null)\n\t{\n\t\tthis.state = state;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar dirty = this.index != null;\n\t\t\tthis.reset();\n\t\t\t\n\t\t\tif (dirty)\n\t\t\t{\n\t\t\t\tthis.graph.cellRenderer.redraw(this.state, false, state.view.isRendering());\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.state.view.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxEdgeHandler.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState> being modified.\n */\nmxEdgeHandler.prototype.state = null;\n\n/**\n * Variable: marker\n * \n * Holds the <mxTerminalMarker> which is used for highlighting terminals.\n */\nmxEdgeHandler.prototype.marker = null;\n\n/**\n * Variable: constraintHandler\n * \n * Holds the <mxConstraintHandler> used for drawing and highlighting\n * constraints.\n */\nmxEdgeHandler.prototype.constraintHandler = null;\n\n/**\n * Variable: error\n * \n * Holds the current validation error while a connection is being changed.\n */\nmxEdgeHandler.prototype.error = null;\n\n/**\n * Variable: shape\n * \n * Holds the <mxShape> that represents the preview edge.\n */\nmxEdgeHandler.prototype.shape = null;\n\n/**\n * Variable: bends\n * \n * Holds the <mxShapes> that represent the points.\n */\nmxEdgeHandler.prototype.bends = null;\n\n/**\n * Variable: labelShape\n * \n * Holds the <mxShape> that represents the label position.\n */\nmxEdgeHandler.prototype.labelShape = null;\n\n/**\n * Variable: cloneEnabled\n * \n * Specifies if cloning by control-drag is enabled. Default is true.\n */\nmxEdgeHandler.prototype.cloneEnabled = true;\n\n/**\n * Variable: addEnabled\n * \n * Specifies if adding bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.addEnabled = false;\n\n/**\n * Variable: removeEnabled\n * \n * Specifies if removing bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.removeEnabled = false;\n\n/**\n * Variable: dblClickRemoveEnabled\n * \n * Specifies if removing bends by double click is enabled. Default is false.\n */\nmxEdgeHandler.prototype.dblClickRemoveEnabled = false;\n\n/**\n * Variable: mergeRemoveEnabled\n * \n * Specifies if removing bends by dropping them on other bends is enabled.\n * Default is false.\n */\nmxEdgeHandler.prototype.mergeRemoveEnabled = false;\n\n/**\n * Variable: straightRemoveEnabled\n * \n * Specifies if removing bends by creating straight segments should be enabled.\n * If enabled, this can be overridden by holding down the alt key while moving.\n * Default is false.\n */\nmxEdgeHandler.prototype.straightRemoveEnabled = false;\n\n/**\n * Variable: virtualBendsEnabled\n * \n * Specifies if virtual bends should be added in the center of each\n * segments. These bends can then be used to add new waypoints.\n * Default is false.\n */\nmxEdgeHandler.prototype.virtualBendsEnabled = false;\n\n/**\n * Variable: virtualBendOpacity\n * \n * Opacity to be used for virtual bends (see <virtualBendsEnabled>).\n * Default is 20.\n */\nmxEdgeHandler.prototype.virtualBendOpacity = 20;\n\n/**\n * Variable: parentHighlightEnabled\n * \n * Specifies if the parent should be highlighted if a child cell is selected.\n * Default is false.\n */\nmxEdgeHandler.prototype.parentHighlightEnabled = false;\n\n/**\n * Variable: preferHtml\n * \n * Specifies if bends should be added to the graph container. This is updated\n * in <init> based on whether the edge or one of its terminals has an HTML\n * label in the container.\n */\nmxEdgeHandler.prototype.preferHtml = false;\n\n/**\n * Variable: allowHandleBoundsCheck\n * \n * Specifies if the bounds of handles should be used for hit-detection in IE\n * Default is true.\n */\nmxEdgeHandler.prototype.allowHandleBoundsCheck = true;\n\n/**\n * Variable: snapToTerminals\n * \n * Specifies if waypoints should snap to the routing centers of terminals.\n * Default is false.\n */\nmxEdgeHandler.prototype.snapToTerminals = false;\n\n/**\n * Variable: handleImage\n * \n * Optional <mxImage> to be used as handles. Default is null.\n */\nmxEdgeHandler.prototype.handleImage = null;\n\n/**\n * Variable: tolerance\n * \n * Optional tolerance for hit-detection in <getHandleForEvent>. Default is 0.\n */\nmxEdgeHandler.prototype.tolerance = 0;\n\n/**\n * Variable: outlineConnect\n * \n * Specifies if connections to the outline of a highlighted target should be\n * enabled. This will allow to place the connection point along the outline of\n * the highlighted target. Default is false.\n */\nmxEdgeHandler.prototype.outlineConnect = false;\n\n/**\n * Variable: manageLabelHandle\n * \n * Specifies if the label handle should be moved if it intersects with another\n * handle. Uses <checkLabelHandle> for checking and moving. Default is false.\n */\nmxEdgeHandler.prototype.manageLabelHandle = false;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this edge handler.\n */\nmxEdgeHandler.prototype.init = function()\n{\n\tthis.graph = this.state.view.graph;\n\tthis.marker = this.createMarker();\n\tthis.constraintHandler = new mxConstraintHandler(this.graph);\n\t\n\t// Clones the original points from the cell\n\t// and makes sure at least one point exists\n\tthis.points = [];\n\t\n\t// Uses the absolute points of the state\n\t// for the initial configuration and preview\n\tthis.abspoints = this.getSelectionPoints(this.state);\n\tthis.shape = this.createSelectionShape(this.abspoints);\n\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\tthis.shape.init(this.graph.getView().getOverlayPane());\n\tthis.shape.pointerEvents = false;\n\tthis.shape.setCursor(mxConstants.CURSOR_MOVABLE_EDGE);\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\n\t// Updates preferHtml\n\tthis.preferHtml = this.state.text != null &&\n\t\tthis.state.text.node.parentNode == this.graph.container;\n\t\n\tif (!this.preferHtml)\n\t{\n\t\t// Checks source terminal\n\t\tvar sourceState = this.state.getVisibleTerminalState(true);\n\t\t\n\t\tif (sourceState != null)\n\t\t{\n\t\t\tthis.preferHtml = sourceState.text != null &&\n\t\t\t\tsourceState.text.node.parentNode == this.graph.container;\n\t\t}\n\t\t\n\t\tif (!this.preferHtml)\n\t\t{\n\t\t\t// Checks target terminal\n\t\t\tvar targetState = this.state.getVisibleTerminalState(false);\n\t\t\t\n\t\t\tif (targetState != null)\n\t\t\t{\n\t\t\t\tthis.preferHtml = targetState.text != null &&\n\t\t\t\ttargetState.text.node.parentNode == this.graph.container;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Adds highlight for parent group\n\tif (this.parentHighlightEnabled)\n\t{\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\n\t\tif (this.graph.model.isVertex(parent))\n\t\t{\n\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\n\t\t\tif (pstate != null)\n\t\t\t{\n\t\t\t\tthis.parentHighlight = this.createParentHighlightShape(pstate);\n\t\t\t\t// VML dialect required here for event transparency in IE\n\t\t\t\tthis.parentHighlight.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\tthis.parentHighlight.pointerEvents = false;\n\t\t\t\tthis.parentHighlight.rotation = Number(pstate.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tthis.parentHighlight.init(this.graph.getView().getOverlayPane());\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Creates bends for the non-routed absolute points\n\t// or bends that don't correspond to points\n\tif (this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells ||\n\t\tmxGraphHandler.prototype.maxCells <= 0)\n\t{\n\t\tthis.bends = this.createBends();\n\n\t\tif (this.isVirtualBendsEnabled())\n\t\t{\n\t\t\tthis.virtualBends = this.createVirtualBends();\n\t\t}\n\t}\n\n\t// Adds a rectangular handle for the label position\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape = this.createLabelHandleShape();\n\tthis.initBend(this.labelShape);\n\tthis.labelShape.setCursor(mxConstants.CURSOR_LABEL_HANDLE);\n\t\n\tthis.customHandles = this.createCustomHandles();\n\t\n\tthis.redraw();\n};\n\n/**\n * Function: createCustomHandles\n * \n * Returns an array of custom handles. This implementation returns null.\n */\nmxEdgeHandler.prototype.createCustomHandles = function()\n{\n\treturn null;\n};\n\n/**\n * Function: isVirtualBendsEnabled\n * \n * Returns true if virtual bends should be added. This returns true if\n * <virtualBendsEnabled> is true and the current style allows and\n * renders custom waypoints.\n */\nmxEdgeHandler.prototype.isVirtualBendsEnabled = function(evt)\n{\n\treturn this.virtualBendsEnabled && (this.state.style[mxConstants.STYLE_EDGE] == null ||\n\t\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.NONE ||\n\t\t\tthis.state.style[mxConstants.STYLE_NOEDGESTYLE] == 1)  &&\n\t\t\tmxUtils.getValue(this.state.style, mxConstants.STYLE_SHAPE, null) != 'arrow';\n};\n\n/**\n * Function: isAddPointEvent\n * \n * Returns true if the given event is a trigger to add a new point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isAddPointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: isRemovePointEvent\n * \n * Returns true if the given event is a trigger to remove a point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isRemovePointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: getSelectionPoints\n * \n * Returns the list of points that defines the selection stroke.\n */\nmxEdgeHandler.prototype.getSelectionPoints = function(state)\n{\n\treturn state.absolutePoints;\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createParentHighlightShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.getSelectionColor());\n\tshape.strokewidth = this.getSelectionStrokeWidth();\n\tshape.isDashed = this.isSelectionDashed();\n\t\n\treturn shape;\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createSelectionShape = function(points)\n{\n\tvar shape = new this.state.shape.constructor();\n\tshape.outline = true;\n\tshape.apply(this.state);\n\t\n\tshape.isDashed = this.isSelectionDashed();\n\tshape.stroke = this.getSelectionColor();\n\tshape.isShadow = false;\n\t\n\treturn shape;\n};\n\n/**\n * Function: getSelectionColor\n * \n * Returns <mxConstants.EDGE_SELECTION_COLOR>.\n */\nmxEdgeHandler.prototype.getSelectionColor = function()\n{\n\treturn mxConstants.EDGE_SELECTION_COLOR;\n};\n\n/**\n * Function: getSelectionStrokeWidth\n * \n * Returns <mxConstants.EDGE_SELECTION_STROKEWIDTH>.\n */\nmxEdgeHandler.prototype.getSelectionStrokeWidth = function()\n{\n\treturn mxConstants.EDGE_SELECTION_STROKEWIDTH;\n};\n\n/**\n * Function: isSelectionDashed\n * \n * Returns <mxConstants.EDGE_SELECTION_DASHED>.\n */\nmxEdgeHandler.prototype.isSelectionDashed = function()\n{\n\treturn mxConstants.EDGE_SELECTION_DASHED;\n};\n\n/**\n * Function: isConnectableCell\n * \n * Returns true if the given cell is connectable. This is a hook to\n * disable floating connections. This implementation returns true.\n */\nmxEdgeHandler.prototype.isConnectableCell = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: getCellAt\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.getCellAt = function(x, y)\n{\n\treturn (!this.outlineConnect) ? this.graph.getCellAt(x, y) : null;\n};\n\n/**\n * Function: createMarker\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.createMarker = function()\n{\n\tvar marker = new mxCellMarker(this.graph);\n\tvar self = this; // closure\n\n\t// Only returns edges if they are connectable and never returns\n\t// the edge that is currently being modified\n\tmarker.getCell = function(me)\n\t{\n\t\tvar cell = mxCellMarker.prototype.getCell.apply(this, arguments);\n\n\t\t// Checks for cell at preview point (with grid)\n\t\tif ((cell == self.state.cell || cell == null) && self.currentPoint != null)\n\t\t{\n\t\t\tcell = self.graph.getCellAt(self.currentPoint.x, self.currentPoint.y);\n\t\t}\n\t\t\n\t\t// Uses connectable parent vertex if one exists\n\t\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\t\n\t\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t\t{\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar model = self.graph.getModel();\n\t\t\n\t\tif ((this.graph.isSwimlane(cell) && self.currentPoint != null &&\n\t\t\tthis.graph.hitsSwimlaneContent(cell, self.currentPoint.x, self.currentPoint.y)) ||\n\t\t\t(!self.isConnectableCell(cell)) || (cell == self.state.cell ||\n\t\t\t(cell != null && !self.graph.connectableEdges && model.isEdge(cell))) ||\n\t\t\tmodel.isAncestor(self.state.cell, cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\tif (!this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\treturn cell;\n\t};\n\n\t// Sets the highlight color according to validateConnection\n\tmarker.isValidState = function(state)\n\t{\n\t\tvar model = self.graph.getModel();\n\t\tvar other = self.graph.view.getTerminalPort(state,\n\t\t\tself.graph.view.getState(model.getTerminal(self.state.cell,\n\t\t\t!self.isSource)), !self.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (self.isSource) ? state.cell : otherCell;\n\t\tvar target = (self.isSource) ? otherCell : state.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tself.error = self.validateConnection(source, target);\n\n\t\treturn self.error == null;\n\t};\n\t\n\treturn marker;\n};\n\n/**\n * Function: validateConnection\n * \n * Returns the error message or an empty string if the connection for the\n * given source, target pair is not valid. Otherwise it returns null. This\n * implementation uses <mxGraph.getEdgeValidationError>.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxEdgeHandler.prototype.validateConnection = function(source, target)\n{\n\treturn this.graph.getEdgeValidationError(this.state.cell, source, target);\n};\n\n/**\n * Function: createBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar bends = [];\n\n\tfor (var i = 0; i < this.abspoints.length; i++)\n\t{\n\t\tif (this.isHandleVisible(i))\n\t\t{\n\t\t\tvar source = i == 0;\n\t\t\tvar target = i == this.abspoints.length - 1;\n\t\t\tvar terminal = source || target;\n\n\t\t\tif (terminal || this.graph.isCellBendable(cell))\n\t\t\t{\n\t\t\t\t(mxUtils.bind(this, function(index)\n\t\t\t\t{\n\t\t\t\t\tvar bend = this.createHandleShape(index);\n\t\t\t\t\tthis.initBend(bend, mxUtils.bind(this, mxUtils.bind(this, function()\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.dblClickRemoveEnabled)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.removePoint(this.state, index);\n\t\t\t\t\t\t}\n\t\t\t\t\t})));\n\t\n\t\t\t\t\tif (this.isHandleEnabled(i))\n\t\t\t\t\t{\n\t\t\t\t\t\tbend.setCursor((terminal) ? mxConstants.CURSOR_TERMINAL_HANDLE : mxConstants.CURSOR_BEND_HANDLE);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbends.push(bend);\n\t\t\t\t\n\t\t\t\t\tif (!terminal)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.points.push(new mxPoint(0,0));\n\t\t\t\t\t\tbend.node.style.visibility = 'hidden';\n\t\t\t\t\t}\n\t\t\t\t}))(i);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: createVirtualBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createVirtualBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar last = this.abspoints[0];\n\tvar bends = [];\n\n\tif (this.graph.isCellBendable(cell))\n\t{\n\t\tfor (var i = 1; i < this.abspoints.length; i++)\n\t\t{\n\t\t\t(mxUtils.bind(this, function(bend)\n\t\t\t{\n\t\t\t\tthis.initBend(bend);\n\t\t\t\tbend.setCursor(mxConstants.CURSOR_VIRTUAL_BEND_HANDLE);\n\t\t\t\tbends.push(bend);\n\t\t\t}))(this.createHandleShape());\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: isHandleEnabled\n * \n * Creates the shape used to display the given bend.\n */\nmxEdgeHandler.prototype.isHandleEnabled = function(index)\n{\n\treturn true;\n};\n\n/**\n * Function: isHandleVisible\n * \n * Returns true if the handle at the given index is visible.\n */\nmxEdgeHandler.prototype.isHandleVisible = function(index)\n{\n\tvar source = this.state.getVisibleTerminalState(true);\n\tvar target = this.state.getVisibleTerminalState(false);\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\tvar edgeStyle = (geo != null) ? this.graph.view.getEdgeStyle(this.state, geo.points, source, target) : null;\n\n\treturn edgeStyle != mxEdgeStyle.EntityRelation || index == 0 || index == this.abspoints.length - 1;\n};\n\n/**\n * Function: createHandleShape\n * \n * Creates the shape used to display the given bend. Note that the index may be\n * null for special cases, such as when called from\n * <mxElbowEdgeHandler.createVirtualBend>. Only images and rectangles should be\n * returned if support for HTML labels with not foreign objects is required.\n * Index if null for virtual handles.\n */\nmxEdgeHandler.prototype.createHandleShape = function(index)\n{\n\tif (this.handleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.handleImage.width, this.handleImage.height), this.handleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.HANDLE_SIZE;\n\t\t\n\t\tif (this.preferHtml)\n\t\t{\n\t\t\ts -= 1;\n\t\t}\n\t\t\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: createLabelHandleShape\n * \n * Creates the shape used to display the the label handle.\n */\nmxEdgeHandler.prototype.createLabelHandleShape = function()\n{\n\tif (this.labelHandleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.labelHandleImage.width, this.labelHandleImage.height), this.labelHandleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.LABEL_HANDLE_SIZE;\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.LABEL_HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: initBend\n * \n * Helper method to initialize the given bend.\n * \n * Parameters:\n * \n * bend - <mxShape> that represents the bend to be initialized.\n */\nmxEdgeHandler.prototype.initBend = function(bend, dblClick)\n{\n\tif (this.preferHtml)\n\t{\n\t\tbend.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tbend.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tbend.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\tbend.init(this.graph.getView().getOverlayPane());\n\t}\n\n\tmxEvent.redirectMouseEvents(bend.node, this.graph, this.state,\n\t\t\tnull, null, null, dblClick);\n\t\n\t// Fixes lost event tracking for images in quirks / IE8 standards\n\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t{\n\t\tmxEvent.addListener(bend.node, 'dragstart', function(evt)\n\t\t{\n\t\t\tmxEvent.consume(evt);\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t}\n\t\n\tif (mxClient.IS_TOUCH)\n\t{\n\t\tbend.node.setAttribute('pointer-events', 'none');\n\t}\n};\n\n/**\n * Function: getHandleForEvent\n * \n * Returns the index of the handle for the given event.\n */\nmxEdgeHandler.prototype.getHandleForEvent = function(me)\n{\n\t// Connection highlight may consume events before they reach sizer handle\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 1;\n\tvar hit = (this.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\tvar minDistSq = null;\n\tvar result = null;\n\n\tfunction checkShape(shape)\n\t{\n\t\tif (shape != null && shape.node.style.display != 'none' && shape.node.style.visibility != 'hidden' &&\n\t\t\t(me.isSource(shape) || (hit != null && mxUtils.intersects(shape.bounds, hit))))\n\t\t{\n\t\t\tvar dx = me.getGraphX() - shape.bounds.getCenterX();\n\t\t\tvar dy = me.getGraphY() - shape.bounds.getCenterY();\n\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\n\t\t\tif (minDistSq == null || tmp <= minDistSq)\n\t\t\t{\n\t\t\t\tminDistSq = tmp;\n\t\t\t\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tif (this.customHandles != null && this.isCustomHandleEvent(me))\n\t{\n\t\t// Inverse loop order to match display order\n\t\tfor (var i = this.customHandles.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (checkShape(this.customHandles[i].shape))\n\t\t\t{\n\t\t\t\t// LATER: Return reference to active shape\n\t\t\t\treturn mxEvent.CUSTOM_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (me.isSource(this.state.text) || checkShape(this.labelShape))\n\t{\n\t\tresult = mxEvent.LABEL_HANDLE;\n\t}\n\t\n\tif (this.bends != null)\n\t{\n\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.bends[i]))\n\t\t\t{\n\t\t\t\tresult = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.virtualBends != null && this.isAddVirtualBendEvent(me))\n\t{\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.virtualBends[i]))\n\t\t\t{\n\t\t\t\tresult = mxEvent.VIRTUAL_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isAddVirtualBendEvent\n * \n * Returns true if the given event allows virtual bends to be added. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isAddVirtualBendEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: isCustomHandleEvent\n * \n * Returns true if the given event allows custom handles to be changed. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isCustomHandleEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by checking if a special element of the handler\n * was clicked, in which case the index parameter is non-null. The\n * indices may be one of <LABEL_HANDLE> or the number of the respective\n * control point. The source and target points are used for reconnecting\n * the edge.\n */\nmxEdgeHandler.prototype.mouseDown = function(sender, me)\n{\n\tvar handle = this.getHandleForEvent(me);\n\t\n\tif (this.bends != null && this.bends[handle] != null)\n\t{\n\t\tvar b = this.bends[handle].bounds;\n\t\tthis.snapPoint = new mxPoint(b.getCenterX(), b.getCenterY());\n\t}\n\t\n\tif (this.addEnabled && handle == null && this.isAddPointEvent(me.getEvent()))\n\t{\n\t\tthis.addPoint(this.state, me.getEvent());\n\t\tme.consume();\n\t}\n\telse if (handle != null && !me.isConsumed() && this.graph.isEnabled())\n\t{\n\t\tif (this.removeEnabled && this.isRemovePointEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.removePoint(this.state, handle);\n\t\t}\n\t\telse if (handle != mxEvent.LABEL_HANDLE || this.graph.isLabelMovable(me.getCell()))\n\t\t{\n\t\t\tif (handle <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(this.virtualBends[mxEvent.VIRTUAL_HANDLE - handle].node, 100);\n\t\t\t}\n\t\t\t\n\t\t\tthis.start(me.getX(), me.getY(), handle);\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxEdgeHandler.prototype.start = function(x, y, index)\n{\n\tthis.startX = x;\n\tthis.startY = y;\n\n\tthis.isSource = (this.bends == null) ? false : index == 0;\n\tthis.isTarget = (this.bends == null) ? false : index == this.bends.length - 1;\n\tthis.isLabel = index == mxEvent.LABEL_HANDLE;\n\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tvar cell = this.state.cell;\n\t\tvar terminal = this.graph.model.getTerminal(cell, this.isSource);\n\n\t\tif ((terminal == null && this.graph.isTerminalPointMovable(cell, this.isSource)) ||\n\t\t\t(terminal != null && this.graph.isCellDisconnectable(cell, terminal, this.isSource)))\n\t\t{\n\t\t\tthis.index = index;\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.index = index;\n\t}\n\t\n\t// Hides other custom handles\n\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t{\n\t\tif (this.customHandles != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t\t{\n\t\t\t\tif (i != mxEvent.CUSTOM_HANDLE - this.index)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[i].setVisible(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: clonePreviewState\n * \n * Returns a clone of the current preview state for the given point and terminal.\n */\nmxEdgeHandler.prototype.clonePreviewState = function(point, terminal)\n{\n\treturn this.state.clone();\n};\n\n/**\n * Function: getSnapToTerminalTolerance\n * \n * Returns the tolerance for the guides. Default value is\n * gridSize * scale / 2.\n */\nmxEdgeHandler.prototype.getSnapToTerminalTolerance = function()\n{\n\treturn this.graph.gridSize * this.graph.view.scale / 2;\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxEdgeHandler.prototype.updateHint = function(me, point) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxEdgeHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled width or height. This uses Math.round.\n */\nmxEdgeHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length);\n};\n\n/**\n * Function: isSnapToTerminalsEvent\n * \n * Returns true if <snapToTerminals> is true and if alt is not pressed.\n */\nmxEdgeHandler.prototype.isSnapToTerminalsEvent = function(me)\n{\n\treturn this.snapToTerminals && !mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: getPointForEvent\n * \n * Returns the point for the given event.\n */\nmxEdgeHandler.prototype.getPointForEvent = function(me)\n{\n\tvar view = this.graph.getView();\n\tvar scale = view.scale;\n\tvar point = new mxPoint(this.roundLength(me.getGraphX() / scale) * scale,\n\t\tthis.roundLength(me.getGraphY() / scale) * scale);\n\t\n\tvar tt = this.getSnapToTerminalTolerance();\n\tvar overrideX = false;\n\tvar overrideY = false;\t\t\n\t\n\tif (tt > 0 && this.isSnapToTerminalsEvent(me))\n\t{\n\t\tfunction snapToPoint(pt)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar x = pt.x;\n\n\t\t\t\tif (Math.abs(point.x - x) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.x = x;\n\t\t\t\t\toverrideX = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar y = pt.y;\n\n\t\t\t\tif (Math.abs(point.y - y) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.y = y;\n\t\t\t\t\toverrideY = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Temporary function\n\t\tfunction snapToTerminal(terminal)\n\t\t{\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, new mxPoint(view.getRoutingCenterX(terminal),\n\t\t\t\t\t\tview.getRoutingCenterY(terminal)));\n\t\t\t}\n\t\t};\n\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(true));\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(false));\n\n\t\tif (this.state.absolutePoints != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, this.state.absolutePoints[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tvar tr = view.translate;\n\t\t\n\t\tif (!overrideX)\n\t\t{\n\t\t\tpoint.x = (this.graph.snap(point.x / scale - tr.x) + tr.x) * scale;\n\t\t}\n\t\t\n\t\tif (!overrideY)\n\t\t{\n\t\t\tpoint.y = (this.graph.snap(point.y / scale - tr.y) + tr.y) * scale;\n\t\t}\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getPreviewTerminalState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.getPreviewTerminalState = function(me)\n{\n\tthis.constraintHandler.update(me, this.isSource, true, me.isSource(this.marker.highlight.shape) ? null : this.currentPoint);\n\t\n\tif (this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null)\n\t{\n\t\t// Handles special case where grid is large and connection point is at actual point in which\n\t\t// case the outline is not followed as long as we're < gridSize / 2 away from that point\n\t\tif (this.marker.highlight != null && this.marker.highlight.state != null &&\n\t\t\tthis.marker.highlight.state.cell == this.constraintHandler.currentFocus.cell)\n\t\t{\n\t\t\t// Direct repaint needed if cell already highlighted\n\t\t\tif (this.marker.highlight.shape.stroke != 'transparent')\n\t\t\t{\n\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.markCell(this.constraintHandler.currentFocus.cell, 'transparent');\n\t\t}\n\t\t\n\t\tvar model = this.graph.getModel();\n\t\tvar other = this.graph.view.getTerminalPort(this.state,\n\t\t\t\tthis.graph.view.getState(model.getTerminal(this.state.cell,\n\t\t\t!this.isSource)), !this.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (this.isSource) ? this.constraintHandler.currentFocus.cell : otherCell;\n\t\tvar target = (this.isSource) ? otherCell : this.constraintHandler.currentFocus.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tthis.error = this.validateConnection(source, target);\n\t\tvar result = null;\n\t\t\n\t\tif (this.error == null)\n\t\t{\n\t\t\tresult = this.constraintHandler.currentFocus;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\telse if (!this.graph.isIgnoreTerminalEvent(me.getEvent()))\n\t{\n\t\tthis.marker.process(me);\n\t\tvar state = this.marker.getValidState();\n\t\t\n\t\tif (state != null && this.graph.isCellLocked(state.cell))\n\t\t{\n\t\t\tthis.marker.reset();\n\t\t}\n\t\t\n\t\treturn this.marker.getValidState();\n\t}\n\telse\n\t{\n\t\tthis.marker.reset();\n\t\t\n\t\treturn null;\n\t}\n};\n\n/**\n * Function: getPreviewPoints\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n * \n * Parameters:\n * \n * pt - <mxPoint> that contains the current pointer position.\n * me - Optional <mxMouseEvent> that contains the current event.\n */\nmxEdgeHandler.prototype.getPreviewPoints = function(pt, me)\n{\n\tvar geometry = this.graph.getCellGeometry(this.state.cell);\n\tvar points = (geometry.points != null) ? geometry.points.slice() : null;\n\tvar point = new mxPoint(pt.x, pt.y);\n\tvar result = null;\n\t\n\tif (!this.isSource && !this.isTarget)\n\t{\n\t\tthis.convertPoint(point, false);\n\t\t\n\t\tif (points == null)\n\t\t{\n\t\t\tpoints = [point];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Adds point from virtual bend\n\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 0, point);\n\t\t\t}\n\n\t\t\t// Removes point if dragged on terminal point\n\t\t\tif (!this.isSource && !this.isTarget)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i != this.index)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar bend = this.bends[i];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bend != null && mxUtils.contains(bend.bounds, pt.x, pt.y))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(this.index - 1, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Removes point if user tries to straighten a segment\n\t\t\t\tif (result == null && this.straightRemoveEnabled && (me == null || !mxEvent.isAltDown(me.getEvent())))\n\t\t\t\t{\n\t\t\t\t\tvar tol = this.graph.tolerance * this.graph.tolerance;\n\t\t\t\t\tvar abs = this.state.absolutePoints.slice();\n\t\t\t\t\tabs[this.index] = pt;\n\t\t\t\t\t\n\t\t\t\t\t// Handes special case where removing waypoint affects tolerance (flickering)\n\t\t\t\t\tvar src = this.state.getVisibleTerminalState(true);\n\t\t\t\t\t\n\t\t\t\t\tif (src != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, src, true);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(src, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[0] = new mxPoint(src.view.getRoutingCenterX(src), src.view.getRoutingCenterY(src));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar trg = this.state.getVisibleTerminalState(false);\n\t\t\t\t\t\n\t\t\t\t\tif (trg != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, trg, false);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(trg, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[abs.length - 1] = new mxPoint(trg.view.getRoutingCenterX(trg), trg.view.getRoutingCenterY(trg));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction checkRemove(idx, tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (idx > 0 && idx < abs.length - 1 &&\n\t\t\t\t\t\t\tmxUtils.ptSegDistSq(abs[idx - 1].x, abs[idx - 1].y,\n\t\t\t\t\t\t\t\tabs[idx + 1].x, abs[idx + 1].y, tmp.x, tmp.y) < tol)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpoints.splice(idx - 1, 1);\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// LATER: Check if other points can be removed if a segment is made straight\n\t\t\t\t\tcheckRemove(this.index, pt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Updates existing point\n\t\t\tif (result == null && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints[this.index - 1] = point;\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.graph.resetEdgesOnConnect)\n\t{\n\t\tpoints = null;\n\t}\n\t\n\treturn (result != null) ? result : points;\n};\n\n/**\n * Function: isOutlineConnectEvent\n * \n * Returns true if <outlineConnect> is true and the source of the event is the outline shape\n * or shift is pressed.\n */\nmxEdgeHandler.prototype.isOutlineConnectEvent = function(me)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar evt = me.getEvent();\n\t\n\tvar clientX = mxEvent.getClientX(evt);\n\tvar clientY = mxEvent.getClientY(evt);\n\t\n\tvar doc = document.documentElement;\n\tvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n\tvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\t\n\tvar gridX = this.currentPoint.x - this.graph.container.scrollLeft + offset.x - left;\n\tvar gridY = this.currentPoint.y - this.graph.container.scrollTop + offset.y - top;\n\n\treturn this.outlineConnect && !mxEvent.isShiftDown(me.getEvent()) &&\n\t\t(me.isSource(this.marker.highlight.shape) ||\n\t\t(mxEvent.isAltDown(me.getEvent()) && me.getState() != null) ||\n\t\tthis.marker.highlight.isHighlightAt(clientX, clientY) ||\n\t\t((gridX != clientX || gridY != clientY) && me.getState() == null &&\n\t\tthis.marker.highlight.isHighlightAt(gridX, gridY)));\n};\n\n/**\n * Function: updatePreviewState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.updatePreviewState = function(edge, point, terminalState, me, outline)\n{\n\t// Computes the points for the edge style and terminals\n\tvar sourceState = (this.isSource) ? terminalState : this.state.getVisibleTerminalState(true);\n\tvar targetState = (this.isTarget) ? terminalState : this.state.getVisibleTerminalState(false);\n\t\n\tvar sourceConstraint = this.graph.getConnectionConstraint(edge, sourceState, true);\n\tvar targetConstraint = this.graph.getConnectionConstraint(edge, targetState, false);\n\n\tvar constraint = this.constraintHandler.currentConstraint;\n\n\tif (constraint == null && outline)\n\t{\n\t\tif (terminalState != null)\n\t\t{\n\t\t\t// Handles special case where mouse is on outline away from actual end point\n\t\t\t// in which case the grid is ignored and mouse point is used instead\n\t\t\tif (me.isSource(this.marker.highlight.shape))\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\t\t\t\n\t\t\tconstraint = this.graph.getOutlineConstraint(point, terminalState, me);\n\t\t\tthis.constraintHandler.setFocus(me, terminalState, this.isSource);\n\t\t\tthis.constraintHandler.currentConstraint = constraint;\n\t\t\tthis.constraintHandler.currentPoint = point;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\t}\n\t\n\tif (this.outlineConnect && this.marker.highlight != null && this.marker.highlight.shape != null)\n\t{\n\t\tvar s = this.graph.view.scale;\n\t\t\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (outline) ? mxConstants.OUTLINE_HIGHLIGHT_COLOR : 'transparent';\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.OUTLINE_HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t\telse if (this.marker.hasValidState())\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (this.marker.getValidState() == me.getState()) ?\n\t\t\t\tmxConstants.DEFAULT_VALID_COLOR : 'transparent';\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t}\n\t\n\tif (this.isSource)\n\t{\n\t\tsourceConstraint = constraint;\n\t}\n\telse if (this.isTarget)\n\t{\n\t\ttargetConstraint = constraint;\n\t}\n\t\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tif (constraint != null && constraint.point != null)\n\t\t{\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X] = constraint.point.x;\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y] = constraint.point.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X];\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y];\n\t\t}\n\t}\n\t\n\tedge.setVisibleTerminalState(sourceState, true);\n\tedge.setVisibleTerminalState(targetState, false);\n\t\n\tif (!this.isSource || sourceState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, sourceState, true, sourceConstraint);\n\t}\n\t\n\tif (!this.isTarget || targetState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, targetState, false, targetConstraint);\n\t}\n\t\n\tif ((this.isSource || this.isTarget) && terminalState == null)\n\t{\n\t\tedge.setAbsoluteTerminalPoint(point, this.isSource);\n\n\t\tif (this.marker.getMarkedState() == null)\n\t\t{\n\t\t\tthis.error = (this.graph.allowDanglingEdges) ? null : '';\n\t\t}\n\t}\n\t\n\tedge.view.updatePoints(edge, this.points, sourceState, targetState);\n\tedge.view.updateFloatingTerminalPoints(edge, sourceState, targetState);\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview.\n */\nmxEdgeHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tthis.currentPoint = this.getPointForEvent(me);\n\t\tthis.error = null;\n\t\t\n\t\t// Uses the current point from the constraint handler if available\n\t\tif (!this.graph.isIgnoreTerminalEvent(me.getEvent()) && mxEvent.isShiftDown(me.getEvent()) && this.snapPoint != null)\n\t\t{\n\t\t\tif (Math.abs(this.snapPoint.x - this.currentPoint.x) < Math.abs(this.snapPoint.y - this.currentPoint.y))\n\t\t\t{\n\t\t\t\tthis.currentPoint.x = this.snapPoint.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.currentPoint.y = this.snapPoint.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t{\n\t\t\tif (this.customHandles != null)\n\t\t\t{\n\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].processEvent(me);\n\t\t\t}\n\t\t}\n\t\telse if (this.isLabel)\n\t\t{\n\t\t\tthis.label.x = this.currentPoint.x;\n\t\t\tthis.label.y = this.currentPoint.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.points = this.getPreviewPoints(this.currentPoint, me);\n\t\t\tvar terminalState = (this.isSource || this.isTarget) ? this.getPreviewTerminalState(me) : null;\n\n\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t\t{\n\t\t\t\tthis.currentPoint = this.constraintHandler.currentPoint.clone();\n\t\t\t}\n\t\t\telse if (this.outlineConnect)\n\t\t\t{\n\t\t\t\t// Need to check outline before cloning terminal state\n\t\t\t\tvar outline = (this.isSource || this.isTarget) ? this.isOutlineConnectEvent(me) : false\n\t\t\t\t\t\t\n\t\t\t\tif (outline)\n\t\t\t\t{\n\t\t\t\t\tterminalState = this.marker.highlight.state;\n\t\t\t\t}\n\t\t\t\telse if (terminalState != null && terminalState != me.getState() && this.marker.highlight.shape != null)\n\t\t\t\t{\n\t\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t\tterminalState = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (terminalState != null && this.graph.isCellLocked(terminalState.cell))\n\t\t\t{\n\t\t\t\tterminalState = null;\n\t\t\t\tthis.marker.reset();\n\t\t\t}\n\t\t\t\n\t\t\tvar clone = this.clonePreviewState(this.currentPoint, (terminalState != null) ? terminalState.cell : null);\n\t\t\tthis.updatePreviewState(clone, this.currentPoint, terminalState, me, outline);\n\n\t\t\t// Sets the color of the preview to valid or invalid, updates the\n\t\t\t// points of the preview and redraws\n\t\t\tvar color = (this.error == null) ? this.marker.validColor : this.marker.invalidColor;\n\t\t\tthis.setPreviewColor(color);\n\t\t\tthis.abspoints = clone.absolutePoints;\n\t\t\tthis.active = true;\n\t\t}\n\n\t\t// This should go before calling isOutlineConnectEvent above. As a workaround\n\t\t// we add an offset of gridSize to the hint to avoid problem with hit detection\n\t\t// in highlight.isHighlightAt (which uses comonentFromPoint)\n\t\tthis.updateHint(me, this.currentPoint);\n\t\tthis.drawPreview();\n\t\tmxEvent.consume(me.getEvent());\n\t\tme.consume();\n\t}\n\t// Workaround for disabling the connect highlight when over handle\n\telse if (mxClient.IS_IE && this.getHandleForEvent(me) != null)\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event to applying the previewed changes on the edge by\n * using <moveLabel>, <connect> or <changePoints>.\n */\nmxEdgeHandler.prototype.mouseUp = function(sender, me)\n{\n\t// Workaround for wrong event source in Webkit\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tvar edge = this.state.cell;\n\t\t\n\t\t// Ignores event if mouse has not been moved\n\t\tif (me.getX() != this.startX || me.getY() != this.startY)\n\t\t{\n\t\t\tvar clone = !this.graph.isIgnoreTerminalEvent(me.getEvent()) && this.graph.isCloneEvent(me.getEvent()) &&\n\t\t\t\tthis.cloneEnabled && this.graph.isCellsCloneable();\n\t\t\t\n\t\t\t// Displays the reason for not carriying out the change\n\t\t\t// if there is an error message with non-zero length\n\t\t\tif (this.error != null)\n\t\t\t{\n\t\t\t\tif (this.error.length > 0)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.validationAlert(this.error);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].execute();\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.isLabel)\n\t\t\t{\n\t\t\t\tthis.moveLabel(this.state, this.label.x, this.label.y);\n\t\t\t}\n\t\t\telse if (this.isSource || this.isTarget)\n\t\t\t{\n\t\t\t\tvar terminal = null;\n\t\t\t\t\n\t\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t\t\t{\n\t\t\t\t\tterminal = this.constraintHandler.currentFocus.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal == null && this.marker.hasValidState() && this.marker.highlight != null &&\n\t\t\t\t\tthis.marker.highlight.shape != null &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'transparent' &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'white')\n\t\t\t\t{\n\t\t\t\t\tterminal = this.marker.validState.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\tvar parent = model.getParent(edge);\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Clones and adds the cell\n\t\t\t\t\t\tif (clone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar geo = model.getGeometry(edge);\n\t\t\t\t\t\t\tvar clone = this.graph.cloneCell(edge);\n\t\t\t\t\t\t\tmodel.add(parent, clone, model.getChildCount(parent));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\tmodel.setGeometry(clone, geo);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar other = model.getTerminal(edge, !this.isSource);\n\t\t\t\t\t\t\tthis.graph.connectCell(clone, other, !this.isSource);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tedge = clone;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tedge = this.connect(edge, terminal, this.isSource, clone, me);\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.graph.isAllowDanglingEdges())\n\t\t\t\t{\n\t\t\t\t\tvar pt = this.abspoints[(this.isSource) ? 0 : this.abspoints.length - 1];\n\t\t\t\t\tpt.x = this.roundLength(pt.x / this.graph.view.scale - this.graph.view.translate.x);\n\t\t\t\t\tpt.y = this.roundLength(pt.y / this.graph.view.scale - this.graph.view.translate.y);\n\n\t\t\t\t\tvar pstate = this.graph.getView().getState(\n\t\t\t\t\t\t\tthis.graph.getModel().getParent(edge));\n\t\t\t\t\t\t\t\n\t\t\t\t\tif (pstate != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt.x -= pstate.origin.x;\n\t\t\t\t\t\tpt.y -= pstate.origin.y;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpt.x -= this.graph.panDx / this.graph.view.scale;\n\t\t\t\t\tpt.y -= this.graph.panDy / this.graph.view.scale;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t// Destroys and recreates this handler\n\t\t\t\t\tedge = this.changeTerminalPoint(edge, pt, this.isSource, clone);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.active)\n\t\t\t{\n\t\t\t\tedge = this.changePoints(edge, this.points, clone);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.graph.getView().invalidate(this.state.cell);\n\t\t\t\tthis.graph.getView().validate(this.state.cell);\t\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Resets the preview color the state of the handler if this\n\t\t// handler has not been recreated\n\t\tif (this.marker != null)\n\t\t{\n\t\t\tthis.reset();\n\n\t\t\t// Updates the selection if the edge has been cloned\n\t\t\tif (edge != this.state.cell)\n\t\t\t{\n\t\t\t\tthis.graph.setSelectionCell(edge);\n\t\t\t}\n\t\t}\n\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxEdgeHandler.prototype.reset = function()\n{\n\tif (this.active)\n\t{\n\t\tthis.refresh();\n\t}\n\t\n\tthis.error = null;\n\tthis.index = null;\n\tthis.label = null;\n\tthis.points = null;\n\tthis.snapPoint = null;\n\tthis.isLabel = false;\n\tthis.isSource = false;\n\tthis.isTarget = false;\n\tthis.active = false;\n\t\n\tif (this.livePreview && this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (this.sizers[i] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[i].node.style.display = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.reset();\n\t}\n\t\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.reset();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].reset();\n\t\t}\n\t}\n\n\tthis.setPreviewColor(mxConstants.EDGE_SELECTION_COLOR);\n\tthis.removeHint();\n\tthis.redraw();\n};\n\n/**\n * Function: setPreviewColor\n * \n * Sets the color of the preview to the given value.\n */\nmxEdgeHandler.prototype.setPreviewColor = function(color)\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n\n/**\n * Function: convertPoint\n * \n * Converts the given point in-place from screen to unscaled, untranslated\n * graph coordinates and applies the grid. Returns the given, modified\n * point instance.\n * \n * Parameters:\n * \n * point - <mxPoint> to be converted.\n * gridEnabled - Boolean that specifies if the grid should be applied.\n */\nmxEdgeHandler.prototype.convertPoint = function(point, gridEnabled)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\t\t\n\tif (gridEnabled)\n\t{\n\t\tpoint.x = this.graph.snap(point.x);\n\t\tpoint.y = this.graph.snap(point.y);\n\t}\n\t\n\tpoint.x = Math.round(point.x / scale - tr.x);\n\tpoint.y = Math.round(point.y / scale - tr.y);\n\n\tvar pstate = this.graph.getView().getState(\n\t\tthis.graph.getModel().getParent(this.state.cell));\n\n\tif (pstate != null)\n\t{\n\t\tpoint.x -= pstate.origin.x;\n\t\tpoint.y -= pstate.origin.y;\n\t}\n\n\treturn point;\n};\n\n/**\n * Function: moveLabel\n * \n * Changes the coordinates for the label of the given edge.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge.\n * x - Integer that specifies the x-coordinate of the new location.\n * y - Integer that specifies the y-coordinate of the new location.\n */\nmxEdgeHandler.prototype.moveLabel = function(edgeState, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(edgeState.cell);\n\t\n\tif (geometry != null)\n\t{\n\t\tvar scale = this.graph.getView().scale;\n\t\tgeometry = geometry.clone();\n\t\t\n\t\tif (geometry.relative)\n\t\t{\n\t\t\t// Resets the relative location stored inside the geometry\n\t\t\tvar pt = this.graph.getView().getRelativePoint(edgeState, x, y);\n\t\t\tgeometry.x = Math.round(pt.x * 10000) / 10000;\n\t\t\tgeometry.y = Math.round(pt.y);\n\t\t\t\n\t\t\t// Resets the offset inside the geometry to find the offset\n\t\t\t// from the resulting point\n\t\t\tgeometry.offset = new mxPoint(0, 0);\n\t\t\tvar pt = this.graph.view.getPoint(edgeState, geometry);\n\t\t\tgeometry.offset = new mxPoint(Math.round((x - pt.x) / scale), Math.round((y - pt.y) / scale));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar points = edgeState.absolutePoints;\n\t\t\tvar p0 = points[0];\n\t\t\tvar pe = points[points.length - 1];\n\t\t\t\n\t\t\tif (p0 != null && pe != null)\n\t\t\t{\n\t\t\t\tvar cx = p0.x + (pe.x - p0.x) / 2;\n\t\t\t\tvar cy = p0.y + (pe.y - p0.y) / 2;\n\t\t\t\t\n\t\t\t\tgeometry.offset = new mxPoint(Math.round((x - cx) / scale), Math.round((y - cy) / scale));\n\t\t\t\tgeometry.x = 0;\n\t\t\t\tgeometry.y = 0;\n\t\t\t}\n\t\t}\n\n\t\tmodel.setGeometry(edgeState.cell, geometry);\n\t}\n};\n\n/**\n * Function: connect\n * \n * Changes the terminal or terminal point of the given edge in the graph\n * model.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be reconnected.\n * terminal - <mxCell> that represents the new terminal.\n * isSource - Boolean indicating if the new terminal is the source or\n * target terminal.\n * isClone - Boolean indicating if the new connection should be a clone of\n * the old edge.\n * me - <mxMouseEvent> that contains the mouse up event.\n */\nmxEdgeHandler.prototype.connect = function(edge, terminal, isSource, isClone, me)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(edge);\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvar constraint = this.constraintHandler.currentConstraint;\n\t\t\n\t\tif (constraint == null)\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\n\t\tthis.graph.connectCell(edge, terminal, isSource, constraint);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changeTerminalPoint\n * \n * Changes the terminal point of the given edge.\n */\nmxEdgeHandler.prototype.changeTerminalPoint = function(edge, point, isSource, clone)\n{\n\tvar model = this.graph.getModel();\n\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar terminal = model.getTerminal(edge, !isSource);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, terminal, !isSource);\n\t\t}\n\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.setTerminalPoint(point, isSource);\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t\tthis.graph.connectCell(edge, null, isSource, new mxConnectionConstraint());\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changePoints\n * \n * Changes the control points of the given edge in the graph model.\n */\nmxEdgeHandler.prototype.changePoints = function(edge, points, clone)\n{\n\tvar model = this.graph.getModel();\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar source = model.getTerminal(edge, true);\n\t\t\tvar target = model.getTerminal(edge, false);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, source, true);\n\t\t\tmodel.setTerminal(edge, target, false);\n\t\t}\n\t\t\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points = points;\n\t\t\t\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: addPoint\n * \n * Adds a control point for the given state and event.\n */\nmxEdgeHandler.prototype.addPoint = function(state, evt)\n{\n\tvar pt = mxUtils.convertPoint(this.graph.container, mxEvent.getClientX(evt),\n\t\t\tmxEvent.getClientY(evt));\n\tvar gridEnabled = this.graph.isGridEnabledEvent(evt);\n\tthis.convertPoint(pt, gridEnabled);\n\tthis.addPointAt(state, pt.x, pt.y);\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: addPointAt\n * \n * Adds a control point at the given point.\n */\nmxEdgeHandler.prototype.addPointAt = function(state, x, y)\n{\n\tvar geo = this.graph.getCellGeometry(state.cell);\n\tvar pt = new mxPoint(x, y);\n\t\n\tif (geo != null)\n\t{\n\t\tgeo = geo.clone();\n\t\tvar t = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\tvar offset = new mxPoint(t.x * s, t.y * s);\n\t\t\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\n\t\tif (this.graph.model.isVertex(parent))\n\t\t{\n\t\t\tvar pState = this.graph.view.getState(parent);\n\t\t\toffset = new mxPoint(pState.x, pState.y);\n\t\t}\n\t\t\n\t\tvar index = mxUtils.findNearestSegment(state, pt.x * s + offset.x, pt.y * s + offset.y);\n\n\t\tif (geo.points == null)\n\t\t{\n\t\t\tgeo.points = [pt];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeo.points.splice(index, 0, pt);\n\t\t}\n\t\t\n\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\tthis.refresh();\t\n\t\tthis.redraw();\n\t}\n};\n\n/**\n * Function: removePoint\n * \n * Removes the control point at the given index from the given state.\n */\nmxEdgeHandler.prototype.removePoint = function(state, index)\n{\n\tif (index > 0 && index < this.abspoints.length - 1)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\t\t\n\t\tif (geo != null && geo.points != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points.splice(index - 1, 1);\n\t\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\t\tthis.refresh();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getHandleFillColor\n * \n * Returns the fillcolor for the handle at the given index.\n */\nmxEdgeHandler.prototype.getHandleFillColor = function(index)\n{\n\tvar isSource = index == 0;\n\tvar cell = this.state.cell;\n\tvar terminal = this.graph.getModel().getTerminal(cell, isSource);\n\tvar color = mxConstants.HANDLE_FILLCOLOR;\n\t\n\tif ((terminal != null && !this.graph.isCellDisconnectable(cell, terminal, isSource)) ||\n\t\t(terminal == null && !this.graph.isTerminalPointMovable(cell, isSource)))\n\t{\n\t\tcolor = mxConstants.LOCKED_HANDLE_FILLCOLOR;\n\t}\n\telse if (terminal != null && this.graph.isCellDisconnectable(cell, terminal, isSource))\n\t{\n\t\tcolor = mxConstants.CONNECT_HANDLE_FILLCOLOR;\n\t}\n\t\n\treturn color;\n};\n\n/**\n * Function: redraw\n * \n * Redraws the preview, and the bends- and label control points.\n */\nmxEdgeHandler.prototype.redraw = function()\n{\n\tthis.abspoints = this.state.absolutePoints.slice();\n\tthis.redrawHandles();\n\t\n\tvar g = this.graph.getModel().getGeometry(this.state.cell);\n\tvar pts = g.points;\n\n\tif (this.bends != null && this.bends.length > 0)\n\t{\n\t\tif (pts != null)\n\t\t{\n\t\t\tif (this.points == null)\n\t\t\t{\n\t\t\t\tthis.points = [];\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t\t\t{\n\t\t\t\tif (this.bends[i] != null && this.abspoints[i] != null)\n\t\t\t\t{\n\t\t\t\t\tthis.points[i - 1] = pts[i - 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.drawPreview();\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the handles.\n */\nmxEdgeHandler.prototype.redrawHandles = function()\n{\n\tvar cell = this.state.cell;\n\n\t// Updates the handle for the label position\n\tvar b = this.labelShape.bounds;\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape.bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\n\t// Shows or hides the label handle depending on the label\n\tvar lab = this.graph.getLabel(cell);\n\tthis.labelShape.visible = (lab != null && lab.length > 0 && this.graph.isLabelMovable(cell));\n\t\n\tif (this.bends != null && this.bends.length > 0)\n\t{\n\t\tvar n = this.abspoints.length - 1;\n\t\t\n\t\tvar p0 = this.abspoints[0];\n\t\tvar x0 = p0.x;\n\t\tvar y0 = p0.y;\n\t\t\n\t\tb = this.bends[0].bounds;\n\t\tthis.bends[0].bounds = new mxRectangle(Math.floor(x0 - b.width / 2),\n\t\t\t\tMath.floor(y0 - b.height / 2), b.width, b.height);\n\t\tthis.bends[0].fill = this.getHandleFillColor(0);\n\t\tthis.bends[0].redraw();\n\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[0].bounds);\n\t\t}\n\t\t\t\t\n\t\tvar pe = this.abspoints[n];\n\t\tvar xn = pe.x;\n\t\tvar yn = pe.y;\n\t\t\n\t\tvar bn = this.bends.length - 1;\n\t\tb = this.bends[bn].bounds;\n\t\tthis.bends[bn].bounds = new mxRectangle(Math.floor(xn - b.width / 2),\n\t\t\t\tMath.floor(yn - b.height / 2), b.width, b.height);\n\t\tthis.bends[bn].fill = this.getHandleFillColor(bn);\n\t\tthis.bends[bn].redraw();\n\t\t\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[bn].bounds);\n\t\t}\n\t\t\n\t\tthis.redrawInnerBends(p0, pe);\n\t}\n\n\tif (this.abspoints != null && this.virtualBends != null && this.virtualBends.length > 0)\n\t{\n\t\tvar last = this.abspoints[0];\n\t\t\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tif (this.virtualBends[i] != null && this.abspoints[i + 1] != null)\n\t\t\t{\n\t\t\t\tvar pt = this.abspoints[i + 1];\n\t\t\t\tvar b = this.virtualBends[i];\n\t\t\t\tvar x = last.x + (pt.x - last.x) / 2;\n\t\t\t\tvar y = last.y + (pt.y - last.y) / 2;\n\t\t\t\tb.bounds = new mxRectangle(Math.floor(x - b.bounds.width / 2),\n\t\t\t\t\t\tMath.floor(y - b.bounds.height / 2), b.bounds.width, b.bounds.height);\n\t\t\t\tb.redraw();\n\t\t\t\tmxUtils.setOpacity(b.node, this.virtualBendOpacity);\n\t\t\t\tlast = pt;\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(b.bounds);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.redraw();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: hideHandles\n * \n * Shortcut to <hideSizers>.\n */\nmxEdgeHandler.prototype.setHandlesVisible = function(visible)\n{\n\tif (this.bends != null)\n\t{\n\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t{\n\t\t\tthis.bends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\t\n\tif (this.virtualBends != null)\n\t{\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tthis.virtualBends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.node.style.display = (visible) ? '' : 'none';\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].setVisible(visible);\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates and redraws the inner bends.\n * \n * Parameters:\n * \n * p0 - <mxPoint> that represents the location of the first point.\n * pe - <mxPoint> that represents the location of the last point.\n */\nmxEdgeHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t{\n\t\tif (this.bends[i] != null)\n\t\t{\n\t\t\tif (this.abspoints[i] != null)\n\t\t\t{\n\t\t\t\tvar x = this.abspoints[i].x;\n\t\t\t\tvar y = this.abspoints[i].y;\n\t\t\t\t\n\t\t\t\tvar b = this.bends[i].bounds;\n\t\t\t\tthis.bends[i].node.style.visibility = 'visible';\n\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - b.width / 2),\n\t\t\t\t\t\tMath.round(y - b.height / 2), b.width, b.height);\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(this.bends[i].bounds);\n\t\t\t\t}\n\t\t\t\telse if (this.handleImage == null && this.labelShape.visible && mxUtils.intersects(this.bends[i].bounds, this.labelShape.bounds))\n\t\t\t\t{\n\t\t\t\t\tw = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\th = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - w / 2), Math.round(y - h / 2), w, h);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.bends[i].redraw();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.bends[i].destroy();\n\t\t\t\tthis.bends[i] = null;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: checkLabelHandle\n * \n * Checks if the label handle intersects the given bounds and moves it if it\n * intersects.\n */\nmxEdgeHandler.prototype.checkLabelHandle = function(b)\n{\n\tif (this.labelShape != null)\n\t{\n\t\tvar b2 = this.labelShape.bounds;\n\t\t\n\t\tif (mxUtils.intersects(b, b2))\n\t\t{\n\t\t\tif (b.getCenterY() < b2.getCenterY())\n\t\t\t{\n\t\t\t\tb2.y = b.y + b.height;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb2.y = b.y - b2.height;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview.\n */\nmxEdgeHandler.prototype.drawPreview = function()\n{\n\tif (this.isLabel)\n\t{\n\t\tvar b = this.labelShape.bounds;\n\t\tvar bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\t\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\t\tthis.labelShape.bounds = bounds;\n\t\tthis.labelShape.redraw();\n\t}\n\telse if (this.shape != null)\n\t{\n\t\tthis.shape.apply(this.state);\n\t\tthis.shape.points = this.abspoints;\n\t\tthis.shape.scale = this.state.view.scale;\n\t\tthis.shape.isDashed = this.isSelectionDashed();\n\t\tthis.shape.stroke = this.getSelectionColor();\n\t\tthis.shape.strokewidth = this.getSelectionStrokeWidth() / this.shape.scale / this.shape.scale;\n\t\tthis.shape.isShadow = false;\n\t\tthis.shape.redraw();\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.redraw();\n\t}\n};\n\n/**\n * Function: refresh\n * \n * Refreshes the bends of this handler.\n */\nmxEdgeHandler.prototype.refresh = function()\n{\n\tthis.abspoints = this.getSelectionPoints(this.state);\n\tthis.points = [];\n\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.points = this.abspoints;\n\t}\n\t\n\tif (this.bends != null)\n\t{\n\t\tthis.destroyBends(this.bends);\n\t\tthis.bends = this.createBends();\n\t}\n\t\n\tif (this.virtualBends != null)\n\t{\n\t\tthis.destroyBends(this.virtualBends);\n\t\tthis.virtualBends = this.createVirtualBends();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tthis.destroyBends(this.customHandles);\n\t\tthis.customHandles = this.createCustomHandles();\n\t}\n\t\n\t// Puts label node on top of bends\n\tif (this.labelShape != null && this.labelShape.node != null && this.labelShape.node.parentNode != null)\n\t{\n\t\tthis.labelShape.node.parentNode.appendChild(this.labelShape.node);\n\t}\n};\n\n/**\n * Function: destroyBends\n * \n * Destroys all elements in <bends>.\n */\nmxEdgeHandler.prototype.destroyBends = function(bends)\n{\n\tif (bends != null)\n\t{\n\t\tfor (var i = 0; i < bends.length; i++)\n\t\t{\n\t\t\tif (bends[i] != null)\n\t\t\t{\n\t\t\t\tbends[i].destroy();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This does\n * normally not need to be called as handlers are destroyed automatically\n * when the corresponding cell is deselected.\n */\nmxEdgeHandler.prototype.destroy = function()\n{\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.state.view.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.destroy();\n\t\tthis.marker = null;\n\t}\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.destroy();\n\t\tthis.parentHighlight = null;\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.destroy();\n\t\tthis.labelShape = null;\n\t}\n\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.destroy();\n\t\tthis.constraintHandler = null;\n\t}\n\t\n\tthis.destroyBends(this.virtualBends);\n\tthis.virtualBends = null;\n\t\n\tthis.destroyBends(this.customHandles);\n\tthis.customHandles = null;\n\n\tthis.destroyBends(this.bends);\n\tthis.bends = null;\n\t\n\tthis.removeHint();\n};\n\n__mxOutput.mxEdgeHandler = typeof mxEdgeHandler !== 'undefined' ? mxEdgeHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxElbowEdgeHandler\n *\n * Graph event handler that reconnects edges and modifies control points and\n * the edge label location. Uses <mxTerminalMarker> for finding and\n * highlighting new source and target vertices. This handler is automatically\n * created in <mxGraph.createHandler>. It extends <mxEdgeHandler>.\n * \n * Constructor: mxEdgeHandler\n *\n * Constructs an edge handler for the specified <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be modified.\n */\nfunction mxElbowEdgeHandler(state)\n{\n\tmxEdgeHandler.call(this, state);\n};\n\n/**\n * Extends mxEdgeHandler.\n */\nmxUtils.extend(mxElbowEdgeHandler, mxEdgeHandler);\n\n/**\n * Specifies if a double click on the middle handle should call\n * <mxGraph.flipEdge>. Default is true.\n */\nmxElbowEdgeHandler.prototype.flipEnabled = true;\n\n/**\n * Variable: doubleClickOrientationResource\n * \n * Specifies the resource key for the tooltip to be displayed on the single\n * control point for routed edges. If the resource for this key does not\n * exist then the value is used as the error message. Default is\n * 'doubleClickOrientation'.\n */\nmxElbowEdgeHandler.prototype.doubleClickOrientationResource =\n\t(mxClient.language != 'none') ? 'doubleClickOrientation' : '';\n\n/**\n * Function: createBends\n * \n * Overrides <mxEdgeHandler.createBends> to create custom bends.\n */\n mxElbowEdgeHandler.prototype.createBends = function()\n {\n\tvar bends = [];\n\t\n\t// Source\n\tvar bend = this.createHandleShape(0);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\t// Virtual\n\tbends.push(this.createVirtualBend(mxUtils.bind(this, function(evt)\n\t{\n\t\tif (!mxEvent.isConsumed(evt) && this.flipEnabled)\n\t\t{\n\t\t\tthis.graph.flipEdge(this.state.cell, evt);\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t})));\n\tthis.points.push(new mxPoint(0,0));\n\n\t// Target\n\tbend = this.createHandleShape(2);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\t\n\treturn bends;\n };\n\n/**\n * Function: createVirtualBend\n * \n * Creates a virtual bend that supports double clicking and calls\n * <mxGraph.flipEdge>.\n */\nmxElbowEdgeHandler.prototype.createVirtualBend = function(dblClickHandler)\n{\n\tvar bend = this.createHandleShape();\n\tthis.initBend(bend, dblClickHandler);\n\n\tbend.setCursor(this.getCursorForBend());\n\n\tif (!this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tbend.node.style.display = 'none';\n\t}\n\n\treturn bend;\n};\n\n/**\n * Function: getCursorForBend\n * \n * Returns the cursor to be used for the bend.\n */\nmxElbowEdgeHandler.prototype.getCursorForBend = function()\n{\n\treturn (this.state.style[mxConstants.STYLE_EDGE] == mxEdgeStyle.TopToBottom ||\n\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.EDGESTYLE_TOPTOBOTTOM ||\n\t\t((this.state.style[mxConstants.STYLE_EDGE] == mxEdgeStyle.ElbowConnector ||\n\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.EDGESTYLE_ELBOW)&&\n\t\tthis.state.style[mxConstants.STYLE_ELBOW] == mxConstants.ELBOW_VERTICAL)) ? \n\t\t'row-resize' : 'col-resize';\n};\n\n/**\n * Function: getTooltipForNode\n * \n * Returns the tooltip for the given node.\n */\nmxElbowEdgeHandler.prototype.getTooltipForNode = function(node)\n{\n\tvar tip = null;\n\t\n\tif (this.bends != null && this.bends[1] != null && (node == this.bends[1].node ||\n\t\tnode.parentNode == this.bends[1].node))\n\t{\n\t\ttip = this.doubleClickOrientationResource;\n\t\ttip = mxResources.get(tip) || tip; // translate\n\t}\n\n\treturn tip;\n};\n\n/**\n * Function: convertPoint\n * \n * Converts the given point in-place from screen to unscaled, untranslated\n * graph coordinates and applies the grid.\n * \n * Parameters:\n * \n * point - <mxPoint> to be converted.\n * gridEnabled - Boolean that specifies if the grid should be applied.\n */\nmxElbowEdgeHandler.prototype.convertPoint = function(point, gridEnabled)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\tvar origin = this.state.origin;\n\t\n\tif (gridEnabled)\n\t{\n\t\tpoint.x = this.graph.snap(point.x);\n\t\tpoint.y = this.graph.snap(point.y);\n\t}\n\t\n\tpoint.x = Math.round(point.x / scale - tr.x - origin.x);\n\tpoint.y = Math.round(point.y / scale - tr.y - origin.y);\n\t\n\treturn point;\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates and redraws the inner bends.\n * \n * Parameters:\n * \n * p0 - <mxPoint> that represents the location of the first point.\n * pe - <mxPoint> that represents the location of the last point.\n */\nmxElbowEdgeHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tvar g = this.graph.getModel().getGeometry(this.state.cell);\n\tvar pts = this.state.absolutePoints;\n\tvar pt = null;\n\n\t// Keeps the virtual bend on the edge shape\n\tif (pts.length > 1)\n\t{\n\t\tp0 = pts[1];\n\t\tpe = pts[pts.length - 2];\n\t}\n\telse if (g.points != null && g.points.length > 0)\n\t{\n\t\tpt = pts[0];\n\t}\n\t\n\tif (pt == null)\n\t{\n\t\tpt = new mxPoint(p0.x + (pe.x - p0.x) / 2, p0.y + (pe.y - p0.y) / 2);\n\t}\n\telse\n\t{\n\t\tpt = new mxPoint(this.graph.getView().scale * (pt.x + this.graph.getView().translate.x + this.state.origin.x),\n\t\t\t\tthis.graph.getView().scale * (pt.y + this.graph.getView().translate.y + this.state.origin.y));\n\t}\n\n\t// Makes handle slightly bigger if the yellow  label handle\n\t// exists and intersects this green handle\n\tvar b = this.bends[1].bounds;\n\tvar w = b.width;\n\tvar h = b.height;\n\tvar bounds = new mxRectangle(Math.round(pt.x - w / 2), Math.round(pt.y - h / 2), w, h);\n\n\tif (this.manageLabelHandle)\n\t{\n\t\tthis.checkLabelHandle(bounds);\n\t}\n\telse if (this.handleImage == null && this.labelShape.visible && mxUtils.intersects(bounds, this.labelShape.bounds))\n\t{\n\t\tw = mxConstants.HANDLE_SIZE + 3;\n\t\th = mxConstants.HANDLE_SIZE + 3;\n\t\tbounds = new mxRectangle(Math.floor(pt.x - w / 2), Math.floor(pt.y - h / 2), w, h);\n\t}\n\n\tthis.bends[1].bounds = bounds;\n\tthis.bends[1].redraw();\n\t\n\tif (this.manageLabelHandle)\n\t{\n\t\tthis.checkLabelHandle(this.bends[1].bounds);\n\t}\n};\n\n__mxOutput.mxElbowEdgeHandler = typeof mxElbowEdgeHandler !== 'undefined' ? mxElbowEdgeHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nfunction mxEdgeSegmentHandler(state)\n{\n\tmxEdgeHandler.call(this, state);\n};\n\n/**\n * Extends mxEdgeHandler.\n */\nmxUtils.extend(mxEdgeSegmentHandler, mxElbowEdgeHandler);\n\n/**\n * Function: getCurrentPoints\n * \n * Returns the current absolute points.\n */\nmxEdgeSegmentHandler.prototype.getCurrentPoints = function()\n{\n\tvar pts = this.state.absolutePoints;\n\t\n\tif (pts != null)\n\t{\n\t\t// Special case for straight edges where we add a virtual middle handle for moving the edge\n\t\tvar tol = Math.max(1, this.graph.view.scale);\n\t\t\n\t\tif (pts.length == 2 || (pts.length == 3 &&\n\t\t\t(Math.abs(pts[0].x - pts[1].x) < tol && Math.abs(pts[1].x - pts[2].x) < tol ||\n\t\t\tMath.abs(pts[0].y - pts[1].y) < tol && Math.abs(pts[1].y - pts[2].y) < tol)))\n\t\t{\n\t\t\tvar cx = pts[0].x + (pts[pts.length - 1].x - pts[0].x) / 2;\n\t\t\tvar cy = pts[0].y + (pts[pts.length - 1].y - pts[0].y) / 2;\n\t\t\t\n\t\t\tpts = [pts[0], new mxPoint(cx, cy), new mxPoint(cx, cy), pts[pts.length - 1]];\t\n\t\t}\n\t}\n\n\treturn pts;\n};\n\n/**\n * Function: getPreviewPoints\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeSegmentHandler.prototype.getPreviewPoints = function(point)\n{\n\tif (this.isSource || this.isTarget)\n\t{\n\t\treturn mxElbowEdgeHandler.prototype.getPreviewPoints.apply(this, arguments);\n\t}\n\telse\n\t{\n\t\tvar pts = this.getCurrentPoints();\n\t\tvar last = this.convertPoint(pts[0].clone(), false);\n\t\tpoint = this.convertPoint(point.clone(), false);\n\t\tvar result = [];\n\n\t\tfor (var i = 1; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt = this.convertPoint(pts[i].clone(), false);\n\t\t\t\n\t\t\tif (i == this.index)\n\t\t\t{\n\t\t\t\tif (Math.round(last.x - pt.x) == 0)\n\t\t \t\t{\n\t\t\t\t\tlast.x = point.x;\n\t\t\t\t\tpt.x = point.x;\n\t\t \t\t}\n\t\t \t\t\n\t\t\t\tif (Math.round(last.y - pt.y) == 0)\n\t\t \t\t{\n\t\t \t\t\tlast.y = point.y;\n\t\t \t\t\tpt.y = point.y;\n\t\t \t\t}\n\t\t\t}\n\n\t\t\tif (i < pts.length - 1)\n\t\t\t{\n\t\t\t\tresult.push(pt);\n\t\t\t}\n\n\t\t\tlast = pt;\n\t\t}\n\t\t\n\t\t// Replaces single point that intersects with source or target\n\t\tif (result.length == 1)\n\t\t{\n\t\t\tvar source = this.state.getVisibleTerminalState(true);\n\t\t\tvar target = this.state.getVisibleTerminalState(false);\n\t\t\tvar scale = this.state.view.getScale();\n\t\t\tvar tr = this.state.view.getTranslate();\n\t\t\t\n\t\t\tvar x = result[0].x * scale + tr.x;\n\t\t\tvar y = result[0].y * scale + tr.y;\n\t\t\t\n\t\t\tif ((source != null && mxUtils.contains(source, x, y)) ||\n\t\t\t\t(target != null && mxUtils.contains(target, x, y)))\n\t\t\t{\n\t\t\t\tresult = [point, point];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: updatePreviewState\n * \n * Overridden to perform optimization of the edge style result.\n */\nmxEdgeSegmentHandler.prototype.updatePreviewState = function(edge, point, terminalState, me)\n{\n\tmxEdgeHandler.prototype.updatePreviewState.apply(this, arguments);\n\n\t// Checks and corrects preview by running edge style again\n\tif (!this.isSource && !this.isTarget)\n\t{\n\t\tpoint = this.convertPoint(point.clone(), false);\n\t\tvar pts = edge.absolutePoints;\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = pts[1];\n\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 2; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt2 = pts[i];\n\t\t\n\t\t\t// Merges adjacent segments only if more than 2 to allow for straight edges\n\t\t\tif ((Math.round(pt0.x - pt1.x) != 0 || Math.round(pt1.x - pt2.x) != 0) &&\n\t\t\t\t(Math.round(pt0.y - pt1.y) != 0 || Math.round(pt1.y - pt2.y) != 0))\n\t\t\t{\n\t\t\t\tresult.push(this.convertPoint(pt1.clone(), false));\n\t\t\t}\n\n\t\t\tpt0 = pt1;\n\t\t\tpt1 = pt2;\n\t\t}\n\t\t\n\t\tvar source = this.state.getVisibleTerminalState(true);\n\t\tvar target = this.state.getVisibleTerminalState(false);\n\t\tvar rpts = this.state.absolutePoints;\n\t\t\n\t\t// A straight line is represented by 3 handles\n\t\tif (result.length == 0 && (Math.round(pts[0].x - pts[pts.length - 1].x) == 0 ||\n\t\t\tMath.round(pts[0].y - pts[pts.length - 1].y) == 0))\n\t\t{\n\t\t\tresult = [point, point];\n\t\t}\n\t\t// Handles special case of transitions from straight vertical to routed\n\t\telse if (pts.length == 5 && result.length == 2 && source != null && target != null &&\n\t\t\t\trpts != null && Math.round(rpts[0].x - rpts[rpts.length - 1].x) == 0)\n\t\t{\n\t\t\tvar view = this.graph.getView();\n\t\t\tvar scale = view.getScale();\n\t\t\tvar tr = view.getTranslate();\n\t\t\t\n\t\t\tvar y0 = view.getRoutingCenterY(source) / scale - tr.y;\n\t\t\t\n\t\t\t// Use fixed connection point y-coordinate if one exists\n\t\t\tvar sc = this.graph.getConnectionConstraint(edge, source, true);\n\t\t\t\n\t\t\tif (sc != null)\n\t\t\t{\n\t\t\t\tvar pt = this.graph.getConnectionPoint(source, sc);\n\t\t\t\t\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tthis.convertPoint(pt, false);\n\t\t\t\t\ty0 = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar ye = view.getRoutingCenterY(target) / scale - tr.y;\n\t\t\t\n\t\t\t// Use fixed connection point y-coordinate if one exists\n\t\t\tvar tc = this.graph.getConnectionConstraint(edge, target, false);\n\t\t\t\n\t\t\tif (tc)\n\t\t\t{\n\t\t\t\tvar pt = this.graph.getConnectionPoint(target, tc);\n\t\t\t\t\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tthis.convertPoint(pt, false);\n\t\t\t\t\tye = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult = [new mxPoint(point.x, y0), new mxPoint(point.x, ye)];\n\t\t}\n\n\t\tthis.points = result;\n\n\t\t// LATER: Check if points and result are different\n\t\tedge.view.updateFixedTerminalPoints(edge, source, target);\n\t\tedge.view.updatePoints(edge, this.points, source, target);\n\t\tedge.view.updateFloatingTerminalPoints(edge, source, target);\n\t}\n};\n\n/**\n * Overriden to merge edge segments.\n */\nmxEdgeSegmentHandler.prototype.connect = function(edge, terminal, isSource, isClone, me)\n{\n\tvar model = this.graph.getModel();\n\tvar geo = model.getGeometry(edge);\n\tvar result = null;\n\t\n\t// Merges adjacent edge segments\n\tif (geo != null && geo.points != null && geo.points.length > 0)\n\t{\n\t\tvar pts = this.abspoints;\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = pts[1];\n\t\tresult = [];\n\t\t\n\t\tfor (var i = 2; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt2 = pts[i];\n\t\t\n\t\t\t// Merges adjacent segments only if more than 2 to allow for straight edges\n\t\t\tif ((Math.round(pt0.x - pt1.x) != 0 || Math.round(pt1.x - pt2.x) != 0) &&\n\t\t\t\t(Math.round(pt0.y - pt1.y) != 0 || Math.round(pt1.y - pt2.y) != 0))\n\t\t\t{\n\t\t\t\tresult.push(this.convertPoint(pt1.clone(), false));\n\t\t\t}\n\t\n\t\t\tpt0 = pt1;\n\t\t\tpt1 = pt2;\n\t\t}\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (result != null)\n\t\t{\n\t\t\tvar geo = model.getGeometry(edge);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.points = result;\n\t\t\t\t\n\t\t\t\tmodel.setGeometry(edge, geo);\n\t\t\t}\n\t\t}\n\t\t\n\t\tedge = mxEdgeHandler.prototype.connect.apply(this, arguments);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: getTooltipForNode\n * \n * Returns no tooltips.\n */\nmxEdgeSegmentHandler.prototype.getTooltipForNode = function(node)\n{\n\treturn null;\n};\n\n/**\n * Function: createBends\n * \n * Adds custom bends for the center of each segment.\n */\nmxEdgeSegmentHandler.prototype.start = function(x, y, index)\n{\n\tmxEdgeHandler.prototype.start.apply(this, arguments);\n\t\n\tif (this.bends != null && this.bends[index] != null &&\n\t\t!this.isSource && !this.isTarget)\n\t{\n\t\tmxUtils.setOpacity(this.bends[index].node, 100);\n\t}\n};\n\n/**\n * Function: createBends\n * \n * Adds custom bends for the center of each segment.\n */\nmxEdgeSegmentHandler.prototype.createBends = function()\n{\n\tvar bends = [];\n\t\n\t// Source\n\tvar bend = this.createHandleShape(0);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\tvar pts = this.getCurrentPoints();\n\n\t// Waypoints (segment handles)\n\tif (this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tif (this.points == null)\n\t\t{\n\t\t\tthis.points = [];\n\t\t}\n\n\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t{\n\t\t\tbend = this.createVirtualBend();\n\t\t\tbends.push(bend);\n\t\t\tvar horizontal = Math.round(pts[i].x - pts[i + 1].x) == 0;\n\t\t\t\n\t\t\t// Special case where dy is 0 as well\n\t\t\tif (Math.round(pts[i].y - pts[i + 1].y) == 0 && i < pts.length - 2)\n\t\t\t{\n\t\t\t\thorizontal = Math.round(pts[i].x - pts[i + 2].x) == 0;\n\t\t\t}\n\t\t\t\n\t\t\tbend.setCursor((horizontal) ? 'col-resize' : 'row-resize');\n\t\t\tthis.points.push(new mxPoint(0,0));\n\t\t}\n\t}\n\n\t// Target\n\tvar bend = this.createHandleShape(pts.length);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\treturn bends;\n};\n\n/**\n * Function: redraw\n * \n * Overridden to invoke <refresh> before the redraw.\n */\nmxEdgeSegmentHandler.prototype.redraw = function()\n{\n\tthis.refresh();\n\tmxEdgeHandler.prototype.redraw.apply(this, arguments);\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates the position of the custom bends.\n */\nmxEdgeSegmentHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tif (this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tvar pts = this.getCurrentPoints();\n\t\t\n\t\tif (pts != null && pts.length > 1)\n\t\t{\n\t\t\tvar straight = false;\n\t\t\t\n\t\t\t// Puts handle in the center of straight edges\n\t\t\tif (pts.length == 4 && Math.round(pts[1].x - pts[2].x) == 0 && Math.round(pts[1].y - pts[2].y) == 0)\n\t\t\t{\n\t\t\t\tstraight = true;\n\t\t\t\t\n\t\t\t\tif (Math.round(pts[0].y - pts[pts.length - 1].y) == 0)\n\t\t\t\t{\n\t\t\t\t\tvar cx = pts[0].x + (pts[pts.length - 1].x - pts[0].x) / 2;\n\t\t\t\t\tpts[1] = new mxPoint(cx, pts[1].y);\n\t\t\t\t\tpts[2] = new mxPoint(cx, pts[2].y);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar cy = pts[0].y + (pts[pts.length - 1].y - pts[0].y) / 2;\n\t\t\t\t\tpts[1] = new mxPoint(pts[1].x, cy);\n\t\t\t\t\tpts[2] = new mxPoint(pts[2].x, cy);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t\t{\n\t\t\t\tif (this.bends[i + 1] != null)\n\t\t\t\t{\n\t\t \t\t\tvar p0 = pts[i];\n\t \t\t\t\tvar pe = pts[i + 1];\n\t\t\t \t\tvar pt = new mxPoint(p0.x + (pe.x - p0.x) / 2, p0.y + (pe.y - p0.y) / 2);\n\t\t\t \t\tvar b = this.bends[i + 1].bounds;\n\t\t\t \t\tthis.bends[i + 1].bounds = new mxRectangle(Math.floor(pt.x - b.width / 2),\n\t\t\t \t\t\t\tMath.floor(pt.y - b.height / 2), b.width, b.height);\n\t\t\t\t \tthis.bends[i + 1].redraw();\n\t\t\t\t \t\n\t\t\t\t \tif (this.manageLabelHandle)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.checkLabelHandle(this.bends[i + 1].bounds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (straight)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(this.bends[1].node, this.virtualBendOpacity);\n\t\t\t\tmxUtils.setOpacity(this.bends[3].node, this.virtualBendOpacity);\n\t\t\t}\n\t\t}\n\t}\n};\n\n__mxOutput.mxEdgeSegmentHandler = typeof mxEdgeSegmentHandler !== 'undefined' ? mxEdgeSegmentHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxKeyHandler\n *\n * Event handler that listens to keystroke events. This is not a singleton,\n * however, it is normally only required once if the target is the document\n * element (default).\n * \n * This handler installs a key event listener in the topmost DOM node and\n * processes all events that originate from descandants of <mxGraph.container>\n * or from the topmost DOM node. The latter means that all unhandled keystrokes\n * are handled by this object regardless of the focused state of the <graph>.\n * \n * Example:\n * \n * The following example creates a key handler that listens to the delete key\n * (46) and deletes the selection cells if the graph is enabled.\n * \n * (code)\n * var keyHandler = new mxKeyHandler(graph);\n * keyHandler.bindKey(46, function(evt)\n * {\n *   if (graph.isEnabled())\n *   {\n *     graph.removeCells();\n *   }\n * });\n * (end)\n * \n * Keycodes:\n * \n * See http://tinyurl.com/yp8jgl or http://tinyurl.com/229yqw for a list of\n * keycodes or install a key event listener into the document element and print\n * the key codes of the respective events to the console.\n * \n * To support the Command key and the Control key on the Mac, the following\n * code can be used.\n *\n * (code)\n * keyHandler.getFunction = function(evt)\n * {\n *   if (evt != null)\n *   {\n *     return (mxEvent.isControlDown(evt) || (mxClient.IS_MAC && evt.metaKey)) ? this.controlKeys[evt.keyCode] : this.normalKeys[evt.keyCode];\n *   }\n *   \n *   return null;\n * };\n * (end)\n * \n * Constructor: mxKeyHandler\n *\n * Constructs an event handler that executes functions bound to specific\n * keystrokes.\n * \n * Parameters:\n * \n * graph - Reference to the associated <mxGraph>.\n * target - Optional reference to the event target. If null, the document\n * element is used as the event target, that is, the object where the key\n * event listener is installed.\n */\nfunction mxKeyHandler(graph, target)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.target = target || document.documentElement;\n\t\t\n\t\t// Creates the arrays to map from keycodes to functions\n\t\tthis.normalKeys = [];\n\t\tthis.shiftKeys = [];\n\t\tthis.controlKeys = [];\n\t\tthis.controlShiftKeys = [];\n\t\t\n\t\tthis.keydownHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.keyDown(evt);\n\t\t});\n\n\t\t// Installs the keystroke listener in the target\n\t\tmxEvent.addListener(this.target, 'keydown', this.keydownHandler);\n\t\t\n\t\t// Automatically deallocates memory in IE\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload',\n\t\t\t\tmxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tthis.destroy();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the <mxGraph> associated with this handler.\n */\nmxKeyHandler.prototype.graph = null;\n\n/**\n * Variable: target\n * \n * Reference to the target DOM, that is, the DOM node where the key event\n * listeners are installed.\n */\nmxKeyHandler.prototype.target = null;\n\n/**\n * Variable: normalKeys\n * \n * Maps from keycodes to functions for non-pressed control keys.\n */\nmxKeyHandler.prototype.normalKeys = null;\n\n/**\n * Variable: shiftKeys\n * \n * Maps from keycodes to functions for pressed shift keys.\n */\nmxKeyHandler.prototype.shiftKeys = null;\n\n/**\n * Variable: controlKeys\n * \n * Maps from keycodes to functions for pressed control keys.\n */\nmxKeyHandler.prototype.controlKeys = null;\n\n/**\n * Variable: controlShiftKeys\n * \n * Maps from keycodes to functions for pressed control and shift keys.\n */\nmxKeyHandler.prototype.controlShiftKeys = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxKeyHandler.prototype.enabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation returns\n * <enabled>.\n */\nmxKeyHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling by updating <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxKeyHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: bindKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control key is not pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindKey = function(code, funct)\n{\n\tthis.normalKeys[code] = funct;\n};\n\n/**\n * Function: bindShiftKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the shift key is pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindShiftKey = function(code, funct)\n{\n\tthis.shiftKeys[code] = funct;\n};\n\n/**\n * Function: bindControlKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control key is pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindControlKey = function(code, funct)\n{\n\tthis.controlKeys[code] = funct;\n};\n\n/**\n * Function: bindControlShiftKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control and shift key are pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindControlShiftKey = function(code, funct)\n{\n\tthis.controlShiftKeys[code] = funct;\n};\n\n/**\n * Function: isControlDown\n * \n * Returns true if the control key is pressed. This uses <mxEvent.isControlDown>.\n * \n * Parameters:\n * \n * evt - Key event whose control key pressed state should be returned.\n */\nmxKeyHandler.prototype.isControlDown = function(evt)\n{\n\treturn mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: getFunction\n * \n * Returns the function associated with the given key event or null if no\n * function is associated with the given event.\n * \n * Parameters:\n * \n * evt - Key event whose associated function should be returned.\n */\nmxKeyHandler.prototype.getFunction = function(evt)\n{\n\tif (evt != null && !mxEvent.isAltDown(evt))\n\t{\n\t\tif (this.isControlDown(evt))\n\t\t{\n\t\t\tif (mxEvent.isShiftDown(evt))\n\t\t\t{\n\t\t\t\treturn this.controlShiftKeys[evt.keyCode];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.controlKeys[evt.keyCode];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxEvent.isShiftDown(evt))\n\t\t\t{\n\t\t\t\treturn this.shiftKeys[evt.keyCode];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.normalKeys[evt.keyCode];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\t\n/**\n * Function: isGraphEvent\n * \n * Returns true if the event should be processed by this handler, that is,\n * if the event source is either the target, one of its direct children, a\n * descendant of the <mxGraph.container>, or the <mxGraph.cellEditor> of the\n * <graph>.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isGraphEvent = function(evt)\n{\n\tvar source = mxEvent.getSource(evt);\n\t\n\t// Accepts events from the target object or\n\t// in-place editing inside graph\n\tif ((source == this.target || source.parentNode == this.target) ||\n\t\t(this.graph.cellEditor != null && this.graph.cellEditor.isEventSource(evt)))\n\t{\n\t\treturn true;\n\t}\n\t\n\t// Accepts events from inside the container\n\treturn mxUtils.isAncestorNode(this.graph.container, source);\n};\n\n/**\n * Function: keyDown\n * \n * Handles the event by invoking the function bound to the respective keystroke\n * if <isEnabledForEvent> returns true for the given event and if\n * <isEventIgnored> returns false, except for escape for which\n * <isEventIgnored> is not invoked.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.keyDown = function(evt)\n{\n\tif (this.isEnabledForEvent(evt))\n\t{\n\t\t// Cancels the editing if escape is pressed\n\t\tif (evt.keyCode == 27 /* Escape */)\n\t\t{\n\t\t\tthis.escape(evt);\n\t\t}\n\t\t\n\t\t// Invokes the function for the keystroke\n\t\telse if (!this.isEventIgnored(evt))\n\t\t{\n\t\t\tvar boundFunction = this.getFunction(evt);\n\t\t\t\n\t\t\tif (boundFunction != null)\n\t\t\t{\n\t\t\t\tboundFunction(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isEnabledForEvent\n * \n * Returns true if the given event should be handled. <isEventIgnored> is\n * called later if the event is not an escape key stroke, in which case\n * <escape> is called. This implementation returns true if <isEnabled>\n * returns true for both, this handler and <graph>, if the event is not\n * consumed and if <isGraphEvent> returns true.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isEnabledForEvent = function(evt)\n{\n\treturn (this.graph.isEnabled() && !mxEvent.isConsumed(evt) &&\n\t\tthis.isGraphEvent(evt) && this.isEnabled());\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the given keystroke should be ignored. This returns\n * graph.isEditing().\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isEventIgnored = function(evt)\n{\n\treturn this.graph.isEditing();\n};\n\n/**\n * Function: escape\n * \n * Hook to process ESCAPE keystrokes. This implementation invokes\n * <mxGraph.stopEditing> to cancel the current editing, connecting\n * and/or other ongoing modifications.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke. Possible keycode in this\n * case is 27 (ESCAPE).\n */\nmxKeyHandler.prototype.escape = function(evt)\n{\n\tif (this.graph.isEscapeEnabled())\n\t{\n\t\tthis.graph.escape(evt);\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its references into the DOM. This does\n * normally not need to be called, it is called automatically when the\n * window unloads (in IE).\n */\nmxKeyHandler.prototype.destroy = function()\n{\n\tif (this.target != null && this.keydownHandler != null)\n\t{\n\t\tmxEvent.removeListener(this.target, 'keydown', this.keydownHandler);\n\t\tthis.keydownHandler = null;\n\t}\n\t\n\tthis.target = null;\n};\n\n__mxOutput.mxKeyHandler = typeof mxKeyHandler !== 'undefined' ? mxKeyHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxTooltipHandler\n * \n * Graph event handler that displays tooltips. <mxGraph.getTooltip> is used to\n * get the tooltip for a cell or handle. This handler is built-into\n * <mxGraph.tooltipHandler> and enabled using <mxGraph.setTooltips>.\n *\n * Example:\n * \n * (code>\n * new mxTooltipHandler(graph);\n * (end)\n * \n * Constructor: mxTooltipHandler\n * \n * Constructs an event handler that displays tooltips with the specified\n * delay (in milliseconds). If no delay is specified then a default delay\n * of 500 ms (0.5 sec) is used.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * delay - Optional delay in milliseconds.\n */\nfunction mxTooltipHandler(graph, delay)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.delay = delay || 500;\n\t\tthis.graph.addMouseListener(this);\n\t}\n};\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the tooltip and its shadow. Default is 10005.\n */\nmxTooltipHandler.prototype.zIndex = 10005;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxTooltipHandler.prototype.graph = null;\n\n/**\n * Variable: delay\n * \n * Delay to show the tooltip in milliseconds. Default is 500.\n */\nmxTooltipHandler.prototype.delay = null;\n\n/**\n * Variable: ignoreTouchEvents\n * \n * Specifies if touch and pen events should be ignored. Default is true.\n */\nmxTooltipHandler.prototype.ignoreTouchEvents = true;\n\n/**\n * Variable: hideOnHover\n * \n * Specifies if the tooltip should be hidden if the mouse is moved over the\n * current cell. Default is false.\n */\nmxTooltipHandler.prototype.hideOnHover = false;\n\n/**\n * Variable: destroyed\n * \n * True if this handler was destroyed using <destroy>.\n */\nmxTooltipHandler.prototype.destroyed = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxTooltipHandler.prototype.enabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxTooltipHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n */\nmxTooltipHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isHideOnHover\n * \n * Returns <hideOnHover>.\n */\nmxTooltipHandler.prototype.isHideOnHover = function()\n{\n\treturn this.hideOnHover;\n};\n\n/**\n * Function: setHideOnHover\n * \n * Sets <hideOnHover>.\n */\nmxTooltipHandler.prototype.setHideOnHover = function(value)\n{\n\tthis.hideOnHover = value;\n};\n\n/**\n * Function: init\n * \n * Initializes the DOM nodes required for this tooltip handler.\n */\nmxTooltipHandler.prototype.init = function()\n{\n\tif (document.body != null)\n\t{\n\t\tthis.div = document.createElement('div');\n\t\tthis.div.className = 'mxTooltip';\n\t\tthis.div.style.visibility = 'hidden';\n\n\t\tdocument.body.appendChild(this.div);\n\n\t\tmxEvent.addGestureListeners(this.div, mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.hideTooltip();\n\t\t}));\n\t}\n};\n\n/**\n * Function: getStateForEvent\n * \n * Returns the <mxCellState> to be used for showing a tooltip for this event.\n */\nmxTooltipHandler.prototype.getStateForEvent = function(me)\n{\n\treturn me.getState();\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a rubberband selection. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxTooltipHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.reset(me, false);\n\tthis.hideTooltip();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the rubberband selection.\n */\nmxTooltipHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (me.getX() != this.lastX || me.getY() != this.lastY)\n\t{\n\t\tthis.reset(me, true);\n\t\tvar state = this.getStateForEvent(me);\n\t\t\n\t\tif (this.isHideOnHover() || state != this.state || (me.getSource() != this.node &&\n\t\t\t(!this.stateSource || (state != null && this.stateSource ==\n\t\t\t(me.isSource(state.shape) || !me.isSource(state.text))))))\n\t\t{\n\t\t\tthis.hideTooltip();\n\t\t}\n\t}\n\t\n\tthis.lastX = me.getX();\n\tthis.lastY = me.getY();\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by resetting the tooltip timer or hiding the existing\n * tooltip.\n */\nmxTooltipHandler.prototype.mouseUp = function(sender, me)\n{\n\tthis.reset(me, true);\n\tthis.hideTooltip();\n};\n\n\n/**\n * Function: resetTimer\n * \n * Resets the timer.\n */\nmxTooltipHandler.prototype.resetTimer = function()\n{\n\tif (this.thread != null)\n\t{\n\t\twindow.clearTimeout(this.thread);\n\t\tthis.thread = null;\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets and/or restarts the timer to trigger the display of the tooltip.\n */\nmxTooltipHandler.prototype.reset = function(me, restart, state)\n{\n\tif (!this.ignoreTouchEvents || mxEvent.isMouseEvent(me.getEvent()))\n\t{\n\t\tthis.resetTimer();\n\t\tstate = (state != null) ? state : this.getStateForEvent(me);\n\t\t\n\t\tif (restart && this.isEnabled() && state != null && (this.div == null ||\n\t\t\tthis.div.style.visibility == 'hidden'))\n\t\t{\n\t\t\tvar node = me.getSource();\n\t\t\tvar x = me.getX();\n\t\t\tvar y = me.getY();\n\t\t\tvar stateSource = me.isSource(state.shape) || me.isSource(state.text);\n\t\n\t\t\tthis.thread = window.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tif (!this.graph.isEditing() && !this.graph.popupMenuHandler.isMenuShowing() && !this.graph.isMouseDown)\n\t\t\t\t{\n\t\t\t\t\t// Uses information from inside event cause using the event at\n\t\t\t\t\t// this (delayed) point in time is not possible in IE as it no\n\t\t\t\t\t// longer contains the required information (member not found)\n\t\t\t\t\tvar tip = this.graph.getTooltip(state, node, x, y);\n\t\t\t\t\tthis.show(tip, x, y);\n\t\t\t\t\tthis.state = state;\n\t\t\t\t\tthis.node = node;\n\t\t\t\t\tthis.stateSource = stateSource;\n\t\t\t\t}\n\t\t\t}), this.delay);\n\t\t}\n\t}\n};\n\n/**\n * Function: hide\n * \n * Hides the tooltip and resets the timer.\n */\nmxTooltipHandler.prototype.hide = function()\n{\n\tthis.resetTimer();\n\tthis.hideTooltip();\n};\n\n/**\n * Function: hideTooltip\n * \n * Hides the tooltip.\n */\nmxTooltipHandler.prototype.hideTooltip = function()\n{\n\tif (this.div != null)\n\t{\n\t\tthis.div.style.visibility = 'hidden';\n\t\tthis.div.innerHTML = '';\n\t}\n};\n\n/**\n * Function: show\n * \n * Shows the tooltip for the specified cell and optional index at the\n * specified location (with a vertical offset of 10 pixels).\n */\nmxTooltipHandler.prototype.show = function(tip, x, y)\n{\n\tif (!this.destroyed && tip != null && tip.length > 0)\n\t{\n\t\t// Initializes the DOM nodes if required\n\t\tif (this.div == null)\n\t\t{\n\t\t\tthis.init();\n\t\t}\n\t\t\n\t\tvar origin = mxUtils.getScrollOrigin();\n\n\t\tthis.div.style.zIndex = this.zIndex;\n\t\tthis.div.style.left = (x + origin.x) + 'px';\n\t\tthis.div.style.top = (y + mxConstants.TOOLTIP_VERTICAL_OFFSET +\n\t\t\torigin.y) + 'px';\n\n\t\tif (!mxUtils.isNode(tip))\n\t\t{\t\n\t\t\tthis.div.innerHTML = tip.replace(/\\n/g, '<br>');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.div.innerHTML = '';\n\t\t\tthis.div.appendChild(tip);\n\t\t}\n\t\t\n\t\tthis.div.style.visibility = '';\n\t\tmxUtils.fit(this.div);\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxTooltipHandler.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.graph.removeMouseListener(this);\n\t\tmxEvent.release(this.div);\n\t\t\n\t\tif (this.div != null && this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.destroyed = true;\n\t\tthis.div = null;\n\t}\n};\n\n__mxOutput.mxTooltipHandler = typeof mxTooltipHandler !== 'undefined' ? mxTooltipHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellTracker\n * \n * Event handler that highlights cells. Inherits from <mxCellMarker>.\n * \n * Example:\n * \n * (code)\n * new mxCellTracker(graph, '#00FF00');\n * (end)\n * \n * For detecting dragEnter, dragOver and dragLeave on cells, the following\n * code can be used:\n * \n * (code)\n * graph.addMouseListener(\n * {\n *   cell: null,\n *   mouseDown: function(sender, me) { },\n *   mouseMove: function(sender, me)\n *   {\n *     var tmp = me.getCell();\n *     \n *     if (tmp != this.cell)\n *     {\n *       if (this.cell != null)\n *       {\n *         this.dragLeave(me.getEvent(), this.cell);\n *       }\n *       \n *       this.cell = tmp;\n *       \n *       if (this.cell != null)\n *       {\n *         this.dragEnter(me.getEvent(), this.cell);\n *       }\n *     }\n *     \n *     if (this.cell != null)\n *     {\n *       this.dragOver(me.getEvent(), this.cell);\n *     }\n *   },\n *   mouseUp: function(sender, me) { },\n *   dragEnter: function(evt, cell)\n *   {\n *     mxLog.debug('dragEnter', cell.value);\n *   },\n *   dragOver: function(evt, cell)\n *   {\n *     mxLog.debug('dragOver', cell.value);\n *   },\n *   dragLeave: function(evt, cell)\n *   {\n *     mxLog.debug('dragLeave', cell.value);\n *   }\n * });\n * (end)\n * \n * Constructor: mxCellTracker\n * \n * Constructs an event handler that highlights cells.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * color - Color of the highlight. Default is blue.\n * funct - Optional JavaScript function that is used to override\n * <mxCellMarker.getCell>.\n */\nfunction mxCellTracker(graph, color, funct)\n{\n\tmxCellMarker.call(this, graph, color);\n\n\tthis.graph.addMouseListener(this);\n\t\n\tif (funct != null)\n\t{\n\t\tthis.getCell = funct;\n\t}\n\t\n\t// Automatic deallocation of memory\n\tif (mxClient.IS_IE)\n\t{\n\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.destroy();\n\t\t}));\n\t}\n};\n\n/**\n * Extends mxCellMarker.\n */\nmxUtils.extend(mxCellTracker, mxCellMarker);\n\n/**\n * Function: mouseDown\n * \n * Ignores the event. The event is not consumed.\n */\nmxCellTracker.prototype.mouseDown = function(sender, me) { };\n\n/**\n * Function: mouseMove\n * \n * Handles the event by highlighting the cell under the mousepointer if it\n * is over the hotspot region of the cell.\n */\nmxCellTracker.prototype.mouseMove = function(sender, me)\n{\n\tif (this.isEnabled())\n\t{\n\t\tthis.process(me);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by reseting the highlight.\n */\nmxCellTracker.prototype.mouseUp = function(sender, me) { };\n\n/**\n * Function: destroy\n * \n * Destroys the object and all its resources and DOM nodes. This doesn't\n * normally need to be called. It is called automatically when the window\n * unloads.\n */\nmxCellTracker.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\n\t\tthis.graph.removeMouseListener(this);\n\t\tmxCellMarker.prototype.destroy.apply(this);\n\t}\n};\n\n__mxOutput.mxCellTracker = typeof mxCellTracker !== 'undefined' ? mxCellTracker : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellHighlight\n * \n * A helper class to highlight cells. Here is an example for a given cell.\n * \n * (code)\n * var highlight = new mxCellHighlight(graph, '#ff0000', 2);\n * highlight.highlight(graph.view.getState(cell)));\n * (end)\n * \n * Constructor: mxCellHighlight\n * \n * Constructs a cell highlight.\n */\nfunction mxCellHighlight(graph, highlightColor, strokeWidth, dashed)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.highlightColor = (highlightColor != null) ? highlightColor : mxConstants.DEFAULT_VALID_COLOR;\n\t\tthis.strokeWidth = (strokeWidth != null) ? strokeWidth : mxConstants.HIGHLIGHT_STROKEWIDTH;\n\t\tthis.dashed = (dashed != null) ? dashed : false;\n\t\tthis.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\n\t\t// Updates the marker if the graph changes\n\t\tthis.repaintHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Updates reference to state\n\t\t\tif (this.state != null)\n\t\t\t{\n\t\t\t\tvar tmp = this.graph.view.getState(this.state.cell);\n\t\t\t\t\n\t\t\t\tif (tmp == null)\n\t\t\t\t{\n\t\t\t\t\tthis.hide();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.state = tmp;\n\t\t\t\t\tthis.repaint();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.SCALE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.repaintHandler);\n\t\t\n\t\t// Hides the marker if the current root changes\n\t\tthis.resetHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.hide();\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.DOWN, this.resetHandler);\n\t\tthis.graph.getView().addListener(mxEvent.UP, this.resetHandler);\n\t}\n};\n\n/**\n * Variable: keepOnTop\n * \n * Specifies if the highlights should appear on top of everything\n * else in the overlay pane. Default is false.\n */\nmxCellHighlight.prototype.keepOnTop = false;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellHighlight.prototype.graph = true;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState>.\n */\nmxCellHighlight.prototype.state = null;\n\n/**\n * Variable: spacing\n * \n * Specifies the spacing between the highlight for vertices and the vertex.\n * Default is 2.\n */\nmxCellHighlight.prototype.spacing = 2;\n\n/**\n * Variable: resetHandler\n * \n * Holds the handler that automatically invokes reset if the highlight\n * should be hidden.\n */\nmxCellHighlight.prototype.resetHandler = null;\n\n/**\n * Function: setHighlightColor\n * \n * Sets the color of the rectangle used to highlight drop targets.\n * \n * Parameters:\n * \n * color - String that represents the new highlight color.\n */\nmxCellHighlight.prototype.setHighlightColor = function(color)\n{\n\tthis.highlightColor = color;\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n/**\n * Function: drawHighlight\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.drawHighlight = function()\n{\n\tthis.shape = this.createShape();\n\tthis.repaint();\n\n\tif (!this.keepOnTop && this.shape.node.parentNode.firstChild != this.shape.node)\n\t{\n\t\tthis.shape.node.parentNode.insertBefore(this.shape.node, this.shape.node.parentNode.firstChild);\n\t}\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.createShape = function()\n{\n\tvar shape = this.graph.cellRenderer.createShape(this.state);\n\t\n\tshape.svgStrokeTolerance = this.graph.tolerance;\n\tshape.points = this.state.absolutePoints;\n\tshape.apply(this.state);\n\tshape.stroke = this.highlightColor;\n\tshape.opacity = this.opacity;\n\tshape.isDashed = this.dashed;\n\tshape.isShadow = false;\n\t\n\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tshape.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(shape.node, this.graph, this.state);\n\t\n\tif (this.graph.dialect != mxConstants.DIALECT_SVG)\n\t{\n\t\tshape.pointerEvents = false;\n\t}\n\telse\n\t{\n\t\tshape.svgPointerEvents = 'stroke';\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: repaint\n * \n * Updates the highlight after a change of the model or view.\n */\nmxCellHighlight.prototype.getStrokeWidth = function(state)\n{\n\treturn this.strokeWidth;\n};\n\n/**\n * Function: repaint\n * \n * Updates the highlight after a change of the model or view.\n */\nmxCellHighlight.prototype.repaint = function()\n{\n\tif (this.state != null && this.shape != null)\n\t{\n\t\tthis.shape.scale = this.state.view.scale;\n\t\t\n\t\tif (this.graph.model.isEdge(this.state.cell))\n\t\t{\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth();\n\t\t\tthis.shape.points = this.state.absolutePoints;\n\t\t\tthis.shape.outline = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.shape.bounds = new mxRectangle(this.state.x - this.spacing, this.state.y - this.spacing,\n\t\t\t\t\tthis.state.width + 2 * this.spacing, this.state.height + 2 * this.spacing);\n\t\t\tthis.shape.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth() / this.state.view.scale;\n\t\t\tthis.shape.outline = true;\n\t\t}\n\n\t\t// Uses cursor from shape in highlight\n\t\tif (this.state.shape != null)\n\t\t{\n\t\t\tthis.shape.setCursor(this.state.shape.getCursor());\n\t\t}\n\t\t\n\t\t// Workaround for event transparency in VML with transparent color\n\t\t// is to use a non-transparent color with near zero opacity\n\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t{\n\t\t\tif (this.shape.stroke == 'transparent')\n\t\t\t{\n\t\t\t\t// KNOWN: Quirks mode does not seem to catch events if\n\t\t\t\t// we do not force an update of the DOM via a change such\n\t\t\t\t// as mxLog.debug. Since IE6 is EOL we do not add a fix.\n\t\t\t\tthis.shape.stroke = 'white';\n\t\t\t\tthis.shape.opacity = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.shape.opacity = this.opacity;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.shape.redraw();\n\t}\n};\n\n/**\n * Function: hide\n * \n * Resets the state of the cell marker.\n */\nmxCellHighlight.prototype.hide = function()\n{\n\tthis.highlight(null);\n};\n\n/**\n * Function: mark\n * \n * Marks the <markedState> and fires a <mark> event.\n */\nmxCellHighlight.prototype.highlight = function(state)\n{\n\tif (this.state != state)\n\t{\n\t\tif (this.shape != null)\n\t\t{\n\t\t\tthis.shape.destroy();\n\t\t\tthis.shape = null;\n\t\t}\n\n\t\tthis.state = state;\n\t\t\n\t\tif (this.state != null)\n\t\t{\n\t\t\tthis.drawHighlight();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHighlightAt\n * \n * Returns true if this highlight is at the given position.\n */\nmxCellHighlight.prototype.isHighlightAt = function(x, y)\n{\n\tvar hit = false;\n\t\n\t// Quirks mode is currently not supported as it used a different coordinate system\n\tif (this.shape != null && document.elementFromPoint != null && !mxClient.IS_QUIRKS)\n\t{\n\t\tvar elt = document.elementFromPoint(x, y);\n\n\t\twhile (elt != null)\n\t\t{\n\t\t\tif (elt == this.shape.node)\n\t\t\t{\n\t\t\t\thit = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\t\n\treturn hit;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxCellHighlight.prototype.destroy = function()\n{\n\tthis.graph.getView().removeListener(this.resetHandler);\n\tthis.graph.getView().removeListener(this.repaintHandler);\n\tthis.graph.getModel().removeListener(this.repaintHandler);\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n\n__mxOutput.mxCellHighlight = typeof mxCellHighlight !== 'undefined' ? mxCellHighlight : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultKeyHandler\n *\n * Binds keycodes to actionnames in an editor. This aggregates an internal\n * <handler> and extends the implementation of <mxKeyHandler.escape> to not\n * only cancel the editing, but also hide the properties dialog and fire an\n * <mxEditor.escape> event via <editor>. An instance of this class is created\n * by <mxEditor> and stored in <mxEditor.keyHandler>.\n * \n * Example:\n * \n * Bind the delete key to the delete action in an existing editor.\n * \n * (code)\n * var keyHandler = new mxDefaultKeyHandler(editor);\n * keyHandler.bindAction(46, 'delete');\n * (end)\n *\n * Codec:\n * \n * This class uses the <mxDefaultKeyHandlerCodec> to read configuration\n * data into an existing instance. See <mxDefaultKeyHandlerCodec> for a\n * description of the configuration format.\n * \n * Keycodes:\n * \n * See <mxKeyHandler>.\n * \n * An <mxEvent.ESCAPE> event is fired via the editor if the escape key is\n * pressed.\n * \n * Constructor: mxDefaultKeyHandler\n *\n * Constructs a new default key handler for the <mxEditor.graph> in the\n * given <mxEditor>. (The editor may be null if a prototypical instance for\n * a <mxDefaultKeyHandlerCodec> is created.)\n * \n * Parameters:\n * \n * editor - Reference to the enclosing <mxEditor>.\n */\nfunction mxDefaultKeyHandler(editor)\n{\n\tif (editor != null)\n\t{\n\t\tthis.editor = editor;\n\t\tthis.handler = new mxKeyHandler(editor.graph);\n\t\t\n\t\t// Extends the escape function of the internal key\n\t\t// handle to hide the properties dialog and fire\n\t\t// the escape event via the editor instance\n\t\tvar old = this.handler.escape;\n\t\t\n\t\tthis.handler.escape = function(evt)\n\t\t{\n\t\t\told.apply(this, arguments);\n\t\t\teditor.hideProperties();\n\t\t\teditor.fireEvent(new mxEventObject(mxEvent.ESCAPE, 'event', evt));\n\t\t};\n\t}\n};\n\t\n/**\n * Variable: editor\n *\n * Reference to the enclosing <mxEditor>.\n */\nmxDefaultKeyHandler.prototype.editor = null;\n\n/**\n * Variable: handler\n *\n * Holds the <mxKeyHandler> for key event handling.\n */\nmxDefaultKeyHandler.prototype.handler = null;\n\n/**\n * Function: bindAction\n *\n * Binds the specified keycode to the given action in <editor>. The\n * optional control flag specifies if the control key must be pressed\n * to trigger the action.\n *\n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * action - Name of the action to execute in <editor>.\n * control - Optional boolean that specifies if control must be pressed.\n * Default is false.\n */\nmxDefaultKeyHandler.prototype.bindAction = function (code, action, control)\n{\n\tvar keyHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.execute(action);\n\t});\n\n\t// Binds the function to control-down keycode\n\tif (control)\n\t{\n\t\tthis.handler.bindControlKey(code, keyHandler);\n\t}\n\n\t// Binds the function to the normal keycode\n\telse\n\t{\n\t\tthis.handler.bindKey(code, keyHandler);\t\t\t\t\n\t}\n};\n\n/**\n * Function: destroy\n *\n * Destroys the <handler> associated with this object. This does normally\n * not need to be called, the <handler> is destroyed automatically when the\n * window unloads (in IE) by <mxEditor>.\n */\nmxDefaultKeyHandler.prototype.destroy = function ()\n{\n\tthis.handler.destroy();\n\tthis.handler = null;\n};\n\n__mxOutput.mxDefaultKeyHandler = typeof mxDefaultKeyHandler !== 'undefined' ? mxDefaultKeyHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultPopupMenu\n *\n * Creates popupmenus for mouse events. This object holds an XML node\n * which is a description of the popup menu to be created. In\n * <createMenu>, the configuration is applied to the context and\n * the resulting menu items are added to the menu dynamically. See\n * <createMenu> for a description of the configuration format.\n * \n * This class does not create the DOM nodes required for the popup menu, it\n * only parses an XML description to invoke the respective methods on an\n * <mxPopupMenu> each time the menu is displayed.\n *\n * Codec:\n * \n * This class uses the <mxDefaultPopupMenuCodec> to read configuration\n * data into an existing instance, however, the actual parsing is done\n * by this class during program execution, so the format is described\n * below.\n * \n * Constructor: mxDefaultPopupMenu\n *\n * Constructs a new popupmenu-factory based on given configuration.\n *\n * Paramaters:\n *\n * config - XML node that contains the configuration data.\n */\nfunction mxDefaultPopupMenu(config)\n{\n\tthis.config = config;\n};\n\n/**\n * Variable: imageBasePath\n *\n * Base path for all icon attributes in the config. Default is null.\n */\nmxDefaultPopupMenu.prototype.imageBasePath = null;\n\n/**\n * Variable: config\n *\n * XML node used as the description of new menu items. This node is\n * used in <createMenu> to dynamically create the menu items if their\n * respective conditions evaluate to true for the given arguments.\n */\nmxDefaultPopupMenu.prototype.config = null;\n\n/**\n * Function: createMenu\n *\n * This function is called from <mxEditor> to add items to the\n * given menu based on <config>. The config is a sequence of\n * the following nodes and attributes.\n *\n * Child Nodes: \n *\n * add - Adds a new menu item. See below for attributes.\n * separator - Adds a separator. No attributes.\n * condition - Adds a custom condition. Name attribute.\n * \n * The add-node may have a child node that defines a function to be invoked\n * before the action is executed (or instead of an action to be executed).\n *\n * Attributes:\n *\n * as - Resource key for the label (needs entry in property file).\n * action - Name of the action to execute in enclosing editor.\n * icon - Optional icon (relative/absolute URL).\n * iconCls - Optional CSS class for the icon.\n * if - Optional name of condition that must be true (see below).\n * enabled-if - Optional name of condition that specifies if the menu item\n * should be enabled.\n * name - Name of custom condition. Only for condition nodes.\n *\n * Conditions:\n *\n * nocell - No cell under the mouse.\n * ncells - More than one cell selected.\n * notRoot - Drilling position is other than home.\n * cell - Cell under the mouse.\n * notEmpty - Exactly one cell with children under mouse.\n * expandable - Exactly one expandable cell under mouse.\n * collapsable - Exactly one collapsable cell under mouse.\n * validRoot - Exactly one cell which is a possible root under mouse.\n * swimlane - Exactly one cell which is a swimlane under mouse.\n *\n * Example:\n *\n * To add a new item for a given action to the popupmenu:\n * \n * (code)\n * <mxDefaultPopupMenu as=\"popupHandler\">\n *   <add as=\"delete\" action=\"delete\" icon=\"images/delete.gif\" if=\"cell\"/>\n * </mxDefaultPopupMenu>\n * (end)\n * \n * To add a new item for a custom function:\n * \n * (code)\n * <mxDefaultPopupMenu as=\"popupHandler\">\n *   <add as=\"action1\"><![CDATA[\n *\t\tfunction (editor, cell, evt)\n *\t\t{\n *\t\t\teditor.execute('action1', cell, 'myArg');\n *\t\t}\n *   ]]></add>\n * </mxDefaultPopupMenu>\n * (end)\n * \n * The above example invokes action1 with an additional third argument via\n * the editor instance. The third argument is passed to the function that\n * defines action1. If the add-node has no action-attribute, then only the\n * function defined in the text content is executed, otherwise first the\n * function and then the action defined in the action-attribute is\n * executed. The function in the text content has 3 arguments, namely the\n * <mxEditor> instance, the <mxCell> instance under the mouse, and the\n * native mouse event.\n *\n * Custom Conditions:\n *\n * To add a new condition for popupmenu items:\n *  \n * (code)\n * <condition name=\"condition1\"><![CDATA[\n *   function (editor, cell, evt)\n *   {\n *     return cell != null;\n *   }\n * ]]></condition>\n * (end)\n * \n * The new condition can then be used in any item as follows:\n * \n * (code)\n * <add as=\"action1\" action=\"action1\" icon=\"action1.gif\" if=\"condition1\"/>\n * (end)\n * \n * The order in which the items and conditions appear is not significant as\n * all connditions are evaluated before any items are created.\n * \n * Parameters:\n *\n * editor - Enclosing <mxEditor> instance.\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * cell - Optional <mxCell> which is under the mousepointer.\n * evt - Optional mouse event which triggered the menu. \n */\nmxDefaultPopupMenu.prototype.createMenu = function(editor, menu, cell, evt)\n{\n\tif (this.config != null)\n\t{\n\t\tvar conditions = this.createConditions(editor, cell, evt);\n\t\tvar item = this.config.firstChild;\n\n\t\tthis.addItems(editor, menu, cell, evt, conditions, item, null);\n\t}\n};\n\n/**\n * Function: addItems\n * \n * Recursively adds the given items and all of its children into the given menu.\n * \n * Parameters:\n *\n * editor - Enclosing <mxEditor> instance.\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * cell - Optional <mxCell> which is under the mousepointer.\n * evt - Optional mouse event which triggered the menu.\n * conditions - Array of names boolean conditions.\n * item - XML node that represents the current menu item.\n * parent - DOM node that represents the parent menu item.\n */\nmxDefaultPopupMenu.prototype.addItems = function(editor, menu, cell, evt, conditions, item, parent)\n{\n\tvar addSeparator = false;\n\t\n\twhile (item != null)\n\t{\n\t\tif (item.nodeName == 'add')\n\t\t{\n\t\t\tvar condition = item.getAttribute('if');\n\t\t\t\n\t\t\tif (condition == null || conditions[condition])\n\t\t\t{\n\t\t\t\tvar as = item.getAttribute('as');\n\t\t\t\tas = mxResources.get(as) || as;\n\t\t\t\tvar funct = mxUtils.eval(mxUtils.getTextContent(item));\n\t\t\t\tvar action = item.getAttribute('action');\n\t\t\t\tvar icon = item.getAttribute('icon');\n\t\t\t\tvar iconCls = item.getAttribute('iconCls');\n\t\t\t\tvar enabledCond = item.getAttribute('enabled-if');\n\t\t\t\tvar enabled = enabledCond == null || conditions[enabledCond];\n\t\t\t\t\n\t\t\t\tif (addSeparator)\n\t\t\t\t{\n\t\t\t\t\tmenu.addSeparator(parent);\n\t\t\t\t\taddSeparator = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (icon != null && this.imageBasePath)\n\t\t\t\t{\n\t\t\t\t\ticon = this.imageBasePath + icon;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar row = this.addAction(menu, editor, as, icon, funct, action, cell, parent, iconCls, enabled);\n\t\t\t\tthis.addItems(editor, menu, cell, evt, conditions, item.firstChild, row);\n\t\t\t}\n\t\t}\n\t\telse if (item.nodeName == 'separator')\n\t\t{\n\t\t\taddSeparator = true;\n\t\t}\n\t\t\n\t\titem = item.nextSibling;\n\t}\n};\n\n/**\n * Function: addAction\n *\n * Helper method to bind an action to a new menu item.\n * \n * Parameters:\n *\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * editor - Enclosing <mxEditor> instance.\n * lab - String that represents the label of the menu item.\n * icon - Optional URL that represents the icon of the menu item.\n * action - Optional name of the action to execute in the given editor.\n * funct - Optional function to execute before the optional action. The\n * function takes an <mxEditor>, the <mxCell> under the mouse and the\n * mouse event that triggered the call.\n * cell - Optional <mxCell> to use as an argument for the action.\n * parent - DOM node that represents the parent menu item.\n * iconCls - Optional CSS class for the menu icon.\n * enabled - Optional boolean that specifies if the menu item is enabled.\n * Default is true.\n */\nmxDefaultPopupMenu.prototype.addAction = function(menu, editor, lab, icon, funct, action, cell, parent, iconCls, enabled)\n{\n\tvar clickHandler = function(evt)\n\t{\n\t\tif (typeof(funct) == 'function')\n\t\t{\n\t\t\tfunct.call(editor, editor, cell, evt);\n\t\t}\n\t\t\n\t\tif (action != null)\n\t\t{\n\t\t\teditor.execute(action, cell, evt);\n\t\t}\n\t};\n\t\n\treturn menu.addItem(lab, icon, clickHandler, parent, iconCls, enabled);\n};\n\n/**\n * Function: createConditions\n * \n * Evaluates the default conditions for the given context.\n */\nmxDefaultPopupMenu.prototype.createConditions = function(editor, cell, evt)\n{\n\t// Creates array with conditions\n\tvar model = editor.graph.getModel();\n\tvar childCount = model.getChildCount(cell);\n\t\n\t// Adds some frequently used conditions\n\tvar conditions = [];\n\tconditions['nocell'] = cell == null;\n\tconditions['ncells'] = editor.graph.getSelectionCount() > 1;\n\tconditions['notRoot'] = model.getRoot() !=\n\t\tmodel.getParent(editor.graph.getDefaultParent());\n\tconditions['cell'] = cell != null;\n\t\n\tvar isCell = cell != null && editor.graph.getSelectionCount() == 1;\n\tconditions['nonEmpty'] = isCell && childCount > 0;\n\tconditions['expandable'] = isCell && editor.graph.isCellFoldable(cell, false);\n\tconditions['collapsable'] = isCell && editor.graph.isCellFoldable(cell, true);\n\tconditions['validRoot'] = isCell && editor.graph.isValidRoot(cell);\n\tconditions['emptyValidRoot'] = conditions['validRoot'] && childCount == 0;\n\tconditions['swimlane'] = isCell && editor.graph.isSwimlane(cell);\n\n\t// Evaluates dynamic conditions from config file\n\tvar condNodes = this.config.getElementsByTagName('condition');\n\t\n\tfor (var i=0; i<condNodes.length; i++)\n\t{\n\t\tvar funct = mxUtils.eval(mxUtils.getTextContent(condNodes[i]));\n\t\tvar name = condNodes[i].getAttribute('name');\n\t\t\n\t\tif (name != null && typeof(funct) == 'function')\n\t\t{\n\t\t\tconditions[name] = funct(editor, cell, evt);\n\t\t}\n\t}\n\t\n\treturn conditions;\n};\n\n__mxOutput.mxDefaultPopupMenu = typeof mxDefaultPopupMenu !== 'undefined' ? mxDefaultPopupMenu : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultToolbar\n *\n * Toolbar for the editor. This modifies the state of the graph\n * or inserts new cells upon mouse clicks.\n * \n * Example:\n * \n * Create a toolbar with a button to copy the selection into the clipboard,\n * and a combo box with one action to paste the selection from the clipboard\n * into the graph.\n * \n * (code)\n * var toolbar = new mxDefaultToolbar(container, editor);\n * toolbar.addItem('Copy', null, 'copy');\n * \n * var combo = toolbar.addActionCombo('More actions...');\n * toolbar.addActionOption(combo, 'Paste', 'paste');\n * (end) \n *\n * Codec:\n * \n * This class uses the <mxDefaultToolbarCodec> to read configuration\n * data into an existing instance. See <mxDefaultToolbarCodec> for a\n * description of the configuration format.\n * \n * Constructor: mxDefaultToolbar\n *\n * Constructs a new toolbar for the given container and editor. The\n * container and editor may be null if a prototypical instance for a\n * <mxDefaultKeyHandlerCodec> is created.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n * editor - Reference to the enclosing <mxEditor>. \n */\nfunction mxDefaultToolbar(container, editor)\n{\n\tthis.editor = editor;\n\n\tif (container != null && editor != null)\n\t{\n\t\tthis.init(container);\n\t}\n};\n\t\n/**\n * Variable: editor\n *\n * Reference to the enclosing <mxEditor>.\n */\nmxDefaultToolbar.prototype.editor = null;\n\n/**\n * Variable: toolbar\n *\n * Holds the internal <mxToolbar>.\n */\nmxDefaultToolbar.prototype.toolbar = null;\n\n/**\n * Variable: resetHandler\n *\n * Reference to the function used to reset the <toolbar>.\n */\nmxDefaultToolbar.prototype.resetHandler = null;\n\n/**\n * Variable: spacing\n *\n * Defines the spacing between existing and new vertices in\n * gridSize units when a new vertex is dropped on an existing\n * cell. Default is 4 (40 pixels).\n */\nmxDefaultToolbar.prototype.spacing = 4;\n\n/**\n * Variable: connectOnDrop\n * \n * Specifies if elements should be connected if new cells are dropped onto\n * connectable elements. Default is false.\n */\nmxDefaultToolbar.prototype.connectOnDrop = false;\n\n/**\n * Variable: init\n * \n * Constructs the <toolbar> for the given container and installs a listener\n * that updates the <mxEditor.insertFunction> on <editor> if an item is\n * selected in the toolbar. This assumes that <editor> is not null.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n */\nmxDefaultToolbar.prototype.init = function(container)\n{\n\tif (container != null)\n\t{\n\t\tthis.toolbar = new mxToolbar(container);\n\t\t\n\t\t// Installs the insert function in the editor if an item is\n\t\t// selected in the toolbar\n\t\tthis.toolbar.addListener(mxEvent.SELECT, mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar funct = evt.getProperty('function');\n\t\t\t\n\t\t\tif (funct != null)\n\t\t\t{\n\t\t\t\tthis.editor.insertFunction = mxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tfunct.apply(this, arguments);\n\t\t\t\t\tthis.toolbar.resetMode();\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.editor.insertFunction = null;\n\t\t\t}\n\t\t}));\n\t\t\n\t\t// Resets the selected tool after a doubleclick or escape keystroke\n\t\tthis.resetHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tif (this.toolbar != null)\n\t\t\t{\n\t\t\t\tthis.toolbar.resetMode(true);\n\t\t\t}\n\t\t});\n\n\t\tthis.editor.graph.addListener(mxEvent.DOUBLE_CLICK, this.resetHandler);\n\t\tthis.editor.addListener(mxEvent.ESCAPE, this.resetHandler);\n\t}\n};\n\n/**\n * Function: addItem\n *\n * Adds a new item that executes the given action in <editor>. The title,\n * icon and pressedIcon are used to display the toolbar item.\n * \n * Parameters:\n *\n * title - String that represents the title (tooltip) for the item.\n * icon - URL of the icon to be used for displaying the item.\n * action - Name of the action to execute when the item is clicked.\n * pressed - Optional URL of the icon for the pressed state.\n */\nmxDefaultToolbar.prototype.addItem = function(title, icon, action, pressed)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (action != null && action.length > 0)\n\t\t{\n\t\t\tthis.editor.execute(action);\n\t\t}\n\t});\n\t\n\treturn this.toolbar.addItem(title, icon, clickHandler, pressed);\n};\n\n/**\n * Function: addSeparator\n *\n * Adds a vertical separator using the optional icon.\n * \n * Parameters:\n * \n * icon - Optional URL of the icon that represents the vertical separator.\n * Default is <mxClient.imageBasePath> + '/separator.gif'.\n */\nmxDefaultToolbar.prototype.addSeparator = function(icon)\n{\n\ticon = icon || mxClient.imageBasePath + '/separator.gif';\n\tthis.toolbar.addSeparator(icon);\n};\n\t\n/**\n * Function: addCombo\n *\n * Helper method to invoke <mxToolbar.addCombo> on <toolbar> and return the\n * resulting DOM node.\n */\nmxDefaultToolbar.prototype.addCombo = function()\n{\n\treturn this.toolbar.addCombo();\n};\n\t\t\n/**\n * Function: addActionCombo\n *\n * Helper method to invoke <mxToolbar.addActionCombo> on <toolbar> using\n * the given title and return the resulting DOM node.\n * \n * Parameters:\n * \n * title - String that represents the title of the combo.\n */\nmxDefaultToolbar.prototype.addActionCombo = function(title)\n{\n\treturn this.toolbar.addActionCombo(title);\n};\n\n/**\n * Function: addActionOption\n *\n * Binds the given action to a option with the specified label in the\n * given combo. Combo is an object returned from an earlier call to\n * <addCombo> or <addActionCombo>.\n * \n * Parameters:\n * \n * combo - DOM node that represents the combo box.\n * title - String that represents the title of the combo.\n * action - Name of the action to execute in <editor>.\n */\nmxDefaultToolbar.prototype.addActionOption = function(combo, title, action)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.execute(action);\n\t});\n\t\n\tthis.addOption(combo, title, clickHandler);\n};\n\n/**\n * Function: addOption\n *\n * Helper method to invoke <mxToolbar.addOption> on <toolbar> and return\n * the resulting DOM node that represents the option.\n * \n * Parameters:\n * \n * combo - DOM node that represents the combo box.\n * title - String that represents the title of the combo.\n * value - Object that represents the value of the option.\n */\nmxDefaultToolbar.prototype.addOption = function(combo, title, value)\n{\n\treturn this.toolbar.addOption(combo, title, value);\n};\n\t\n/**\n * Function: addMode\n *\n * Creates an item for selecting the given mode in the <editor>'s graph.\n * Supported modenames are select, connect and pan.\n * \n * Parameters:\n * \n * title - String that represents the title of the item.\n * icon - URL of the icon that represents the item.\n * mode - String that represents the mode name to be used in\n * <mxEditor.setMode>.\n * pressed - Optional URL of the icon that represents the pressed state.\n * funct - Optional JavaScript function that takes the <mxEditor> as the\n * first and only argument that is executed after the mode has been\n * selected.\n */\nmxDefaultToolbar.prototype.addMode = function(title, icon, mode, pressed, funct)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.setMode(mode);\n\t\t\n\t\tif (funct != null)\n\t\t{\n\t\t\tfunct(this.editor);\n\t\t}\n\t});\n\t\n\treturn this.toolbar.addSwitchMode(title, icon, clickHandler, pressed);\n};\n\n/**\n * Function: addPrototype\n *\n * Creates an item for inserting a clone of the specified prototype cell into\n * the <editor>'s graph. The ptype may either be a cell or a function that\n * returns a cell.\n * \n * Parameters:\n * \n * title - String that represents the title of the item.\n * icon - URL of the icon that represents the item.\n * ptype - Function or object that represents the prototype cell. If ptype\n * is a function then it is invoked with no arguments to create new\n * instances.\n * pressed - Optional URL of the icon that represents the pressed state.\n * insert - Optional JavaScript function that handles an insert of the new\n * cell. This function takes the <mxEditor>, new cell to be inserted, mouse\n * event and optional <mxCell> under the mouse pointer as arguments.\n * toggle - Optional boolean that specifies if the item can be toggled.\n * Default is true.\n */\nmxDefaultToolbar.prototype.addPrototype = function(title, icon, ptype, pressed, insert, toggle)\n{\n\t// Creates a wrapper function that is in charge of constructing\n\t// the new cell instance to be inserted into the graph\n\tvar factory = mxUtils.bind(this, function()\n\t{\n\t\tif (typeof(ptype) == 'function')\n\t\t{\n\t\t\treturn ptype();\n\t\t}\n\t\telse if (ptype != null)\n\t\t{\n\t\t\treturn this.editor.graph.cloneCell(ptype);\n\t\t}\n\t\t\n\t\treturn null;\n\t});\n\t\n\t// Defines the function for a click event on the graph\n\t// after this item has been selected in the toolbar\n\tvar clickHandler = mxUtils.bind(this, function(evt, cell)\n\t{\n\t\tif (typeof(insert) == 'function')\n\t\t{\n\t\t\tinsert(this.editor, factory(), evt, cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.drop(factory(), evt, cell);\n\t\t}\n\t\t\n\t\tthis.toolbar.resetMode();\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tvar img = this.toolbar.addMode(title, icon, clickHandler, pressed, null, toggle);\n\t\t\t\t\n\t// Creates a wrapper function that calls the click handler without\n\t// the graph argument\n\tvar dropHandler = function(graph, evt, cell)\n\t{\n\t\tclickHandler(evt, cell);\n\t};\n\t\n\tthis.installDropHandler(img, dropHandler);\n\t\n\treturn img;\n};\n\n/**\n * Function: drop\n * \n * Handles a drop from a toolbar item to the graph. The given vertex\n * represents the new cell to be inserted. This invokes <insert> or\n * <connect> depending on the given target cell.\n * \n * Parameters:\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * target - Optional <mxCell> that represents the drop target.\n */\nmxDefaultToolbar.prototype.drop = function(vertex, evt, target)\n{\n\tvar graph = this.editor.graph;\n\tvar model = graph.getModel();\n\t\n\tif (target == null ||\n\t\tmodel.isEdge(target) ||\n\t\t!this.connectOnDrop ||\n\t\t!graph.isCellConnectable(target))\n\t{\n\t\twhile (target != null &&\n\t\t\t!graph.isValidDropTarget(target, [vertex], evt))\n\t\t{\n\t\t\ttarget = model.getParent(target);\n\t\t}\n\t\t\n\t\tthis.insert(vertex, evt, target);\n\t}\n\telse\n\t{\n\t\tthis.connect(vertex, evt, target);\n\t}\n};\n\n/**\n * Function: insert\n *\n * Handles a drop by inserting the given vertex into the given parent cell\n * or the default parent if no parent is specified.\n * \n * Parameters:\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * parent - Optional <mxCell> that represents the parent.\n */\nmxDefaultToolbar.prototype.insert = function(vertex, evt, target)\n{\n\tvar graph = this.editor.graph;\n\t\n\tif (graph.canImportCell(vertex))\n\t{\n\t\tvar x = mxEvent.getClientX(evt);\n\t\tvar y = mxEvent.getClientY(evt);\n\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\n\t\t// Splits the target edge or inserts into target group\n\t\tif (graph.isSplitEnabled() &&\n\t\t\tgraph.isSplitTarget(target, [vertex], evt))\n\t\t{\n\t\t\treturn graph.splitEdge(target, [vertex], null, pt.x, pt.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.editor.addVertex(target, vertex, pt.x, pt.y);\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: connect\n * \n * Handles a drop by connecting the given vertex to the given source cell.\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * source - Optional <mxCell> that represents the source terminal.\n */\nmxDefaultToolbar.prototype.connect = function(vertex, evt, source)\n{\n\tvar graph = this.editor.graph;\n\tvar model = graph.getModel();\n\t\n\tif (source != null &&\n\t\tgraph.isCellConnectable(vertex) &&\n\t\tgraph.isEdgeValid(null, source, vertex))\n\t{\n\t\tvar edge = null;\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar geo = model.getGeometry(source);\n\t\t\tvar g = model.getGeometry(vertex).clone();\n\t\t\t\n\t\t\t// Moves the vertex away from the drop target that will\n\t\t\t// be used as the source for the new connection\n\t\t\tg.x = geo.x + (geo.width - g.width) / 2;\n\t\t\tg.y = geo.y + (geo.height - g.height) / 2;\n\t\t\t\n\t\t\tvar step = this.spacing * graph.gridSize;\n\t\t\tvar dist = model.getDirectedEdgeCount(source, true) * 20;\n\t\t\t\n\t\t\tif (this.editor.horizontalFlow)\n\t\t\t{\n\t\t\t\tg.x += (g.width + geo.width) / 2 + step + dist;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tg.y += (g.height + geo.height) / 2 + step + dist;\n\t\t\t}\n\t\t\t\n\t\t\tvertex.setGeometry(g);\n\t\t\t\n\t\t\t// Fires two add-events with the code below - should be fixed\n\t\t\t// to only fire one add event for both inserts\n\t\t\tvar parent = model.getParent(source);\n\t\t\tgraph.addCell(vertex, parent);\n\t\t\tgraph.constrainChild(vertex);\n\n\t\t\t// Creates the edge using the editor instance and calls\n\t\t\t// the second function that fires an add event\n\t\t\tedge = this.editor.createEdge(source, vertex);\n\t\t\t\n\t\t\tif (model.getGeometry(edge) == null)\n\t\t\t{\n\t\t\t\tvar edgeGeometry = new mxGeometry();\n\t\t\t\tedgeGeometry.relative = true;\n\t\t\t\t\n\t\t\t\tmodel.setGeometry(edge, edgeGeometry);\n\t\t\t}\n\t\t\t\n\t\t\tgraph.addEdge(edge, parent, source, vertex);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t\t\n\t\tgraph.setSelectionCells([vertex, edge]);\n\t\tgraph.scrollCellToVisible(vertex);\n\t}\n};\n\n/**\n * Function: installDropHandler\n * \n * Makes the given img draggable using the given function for handling a\n * drop event.\n * \n * Parameters:\n * \n * img - DOM node that represents the image.\n * dropHandler - Function that handles a drop of the image.\n */\nmxDefaultToolbar.prototype.installDropHandler = function (img, dropHandler)\n{\n\tvar sprite = document.createElement('img');\n\tsprite.setAttribute('src', img.getAttribute('src'));\n\n\t// Handles delayed loading of the images\n\tvar loader = mxUtils.bind(this, function(evt)\n\t{\n\t\t// Preview uses the image node with double size. Later this can be\n\t\t// changed to use a separate preview and guides, but for this the\n\t\t// dropHandler must use the additional x- and y-arguments and the\n\t\t// dragsource which makeDraggable returns much be configured to\n\t\t// use guides via mxDragSource.isGuidesEnabled.\n\t\tsprite.style.width = (2 * img.offsetWidth) + 'px';\n\t\tsprite.style.height = (2 * img.offsetHeight) + 'px';\n\n\t\tmxUtils.makeDraggable(img, this.editor.graph, dropHandler,\n\t\t\tsprite);\n\t\tmxEvent.removeListener(sprite, 'load', loader);\n\t});\n\n\tif (mxClient.IS_IE)\n\t{\n\t\tloader();\n\t}\n\telse\n\t{\n\t\tmxEvent.addListener(sprite, 'load', loader);\n\t}\t\n};\n\n/**\n * Function: destroy\n * \n * Destroys the <toolbar> associated with this object and removes all\n * installed listeners. This does normally not need to be called, the\n * <toolbar> is destroyed automatically when the window unloads (in IE) by\n * <mxEditor>.\n */\nmxDefaultToolbar.prototype.destroy = function ()\n{\n\tif (this.resetHandler != null)\n\t{\n\t\tthis.editor.graph.removeListener('dblclick', this.resetHandler);\n\t\tthis.editor.removeListener('escape', this.resetHandler);\n\t\tthis.resetHandler = null;\n\t}\n\t\n\tif (this.toolbar != null)\n\t{\n\t\tthis.toolbar.destroy();\n\t\tthis.toolbar = null;\n\t}\n};\n\n__mxOutput.mxDefaultToolbar = typeof mxDefaultToolbar !== 'undefined' ? mxDefaultToolbar : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEditor\n *\n * Extends <mxEventSource> to implement a application wrapper for a graph that\n * adds <actions>, I/O using <mxCodec>, auto-layout using <mxLayoutManager>,\n * command history using <undoManager>, and standard dialogs and widgets, eg.\n * properties, help, outline, toolbar, and popupmenu. It also adds <templates>\n * to be used as cells in toolbars, auto-validation using the <validation>\n * flag, attribute cycling using <cycleAttributeValues>, higher-level events\n * such as <root>, and backend integration using <urlPost> and <urlImage>. \n * \n * Actions:\n * \n * Actions are functions stored in the <actions> array under their names. The\n * functions take the <mxEditor> as the first, and an optional <mxCell> as the\n * second argument and are invoked using <execute>. Any additional arguments\n * passed to execute are passed on to the action as-is.\n * \n * A list of built-in actions is available in the <addActions> description.\n * \n * Read/write Diagrams:\n * \n * To read a diagram from an XML string, for example from a textfield within the \n * page, the following code is used:\n * \n * (code)\n * var doc = mxUtils.parseXML(xmlString);\n * var node = doc.documentElement;\n * editor.readGraphModel(node);\n * (end)\n * \n * For reading a diagram from a remote location, use the <open> method.\n * \n * To save diagrams in XML on a server, you can set the <urlPost> variable. \n * This variable will be used in <getUrlPost> to construct a URL for the post \n * request that is issued in the <save> method. The post request contains the \n * XML representation of the diagram as returned by <writeGraphModel> in the \n * xml parameter.\n * \n * On the server side, the post request is processed using standard\n * technologies such as Java Servlets, CGI, .NET or ASP.\n * \n * Here are some examples of processing a post request in various languages.\n * \n * - Java: URLDecoder.decode(request.getParameter(\"xml\"), \"UTF-8\").replace(\"\\n\", \"&#xa;\")\n * \n * Note that the linefeeds should only be replaced if the XML is\n * processed in Java, for example when creating an image, but not\n * if the XML is passed back to the client-side.\n * \n * - .NET: HttpUtility.UrlDecode(context.Request.Params[\"xml\"])\n * - PHP: urldecode($_POST[\"xml\"])\n * \n * Creating images:\n * \n * A backend (Java, PHP or C#) is required for creating images. The\n * distribution contains an example for each backend (ImageHandler.java,\n * ImageHandler.cs and graph.php). More information about using a backend\n * to create images can be found in the readme.html files. Note that the\n * preview is implemented using VML/SVG in the browser and does not require\n * a backend. The backend is only required to creates images (bitmaps).\n * \n * Special characters:\n * \n * Note There are five characters that should always appear in XML content as\n * escapes, so that they do not interact with the syntax of the markup. These\n * are part of the language for all documents based on XML and for HTML.\n * \n * - &lt; (<)\n * - &gt; (>)\n * - &amp; (&)\n * - &quot; (\")\n * - &apos; (')\n * \n * Although it is part of the XML language, &apos; is not defined in HTML.\n * For this reason the XHTML specification recommends instead the use of\n * &#39; if text may be passed to a HTML user agent.\n * \n * If you are having problems with special characters on the server-side then\n * you may want to try the <escapePostData> flag.\n * \n * For converting decimal escape sequences inside strings, a user has provided\n * us with the following function:\n * \n * (code)\n * function html2js(text)\n * {\n *   var entitySearch = /&#[0-9]+;/;\n *   var entity;\n *   \n *   while (entity = entitySearch.exec(text))\n *   {\n *     var charCode = entity[0].substring(2, entity[0].length -1);\n *     text = text.substring(0, entity.index)\n *            + String.fromCharCode(charCode)\n *            + text.substring(entity.index + entity[0].length);\n *   }\n *   \n *   return text;\n * }\n * (end)\n * \n * Otherwise try using hex escape sequences and the built-in unescape function\n * for converting such strings.\n * \n * Local Files:\n * \n * For saving and opening local files, no standardized method exists that\n * works across all browsers. The recommended way of dealing with local files\n * is to create a backend that streams the XML data back to the browser (echo)\n * as an attachment so that a Save-dialog is displayed on the client-side and\n * the file can be saved to the local disk.\n * \n * For example, in PHP the code that does this looks as follows.\n * \n * (code)\n * $xml = stripslashes($_POST[\"xml\"]);\n * header(\"Content-Disposition: attachment; filename=\\\"diagram.xml\\\"\");\n * echo($xml);\n * (end)\n * \n * To open a local file, the file should be uploaded via a form in the browser\n * and then opened from the server in the editor.\n * \n * Cell Properties:\n * \n * The properties displayed in the properties dialog are the attributes and \n * values of the cell's user object, which is an XML node. The XML node is \n * defined in the templates section of the config file.\n * \n * The templates are stored in <mxEditor.templates> and contain cells which\n * are cloned at insertion time to create new vertices by use of drag and\n * drop from the toolbar. Each entry in the toolbar for adding a new vertex\n * must refer to an existing template.\n * \n * In the following example, the task node is a business object and only the \n * mxCell node and its mxGeometry child contain graph information:\n * \n * (code)\n * <Task label=\"Task\" description=\"\">\n *   <mxCell vertex=\"true\">\n *     <mxGeometry as=\"geometry\" width=\"72\" height=\"32\"/>\n *   </mxCell>\n * </Task> \n * (end)\n * \n * The idea is that the XML representation is inverse from the in-memory \n * representation: The outer XML node is the user object and the inner node is \n * the cell. This means the user object of the cell is the Task node with no \n * children for the above example:\n * \n * (code)\n * <Task label=\"Task\" description=\"\"/>\n * (end)\n * \n * The Task node can have any tag name, attributes and child nodes. The \n * <mxCodec> will use the XML hierarchy as the user object, while removing the \n * \"known annotations\", such as the mxCell node. At save-time the cell data \n * will be \"merged\" back into the user object. The user object is only modified \n * via the properties dialog during the lifecycle of the cell.\n * \n * In the default implementation of <createProperties>, the user object's\n * attributes are put into a form for editing. Attributes are changed using\n * the <mxCellAttributeChange> action in the model. The dialog can be replaced \n * by overriding the <createProperties> hook or by replacing the showProperties\n * action in <actions>. Alternatively, the entry in the config file's popupmenu\n * section can be modified to invoke a different action.\n * \n * If you want to displey the properties dialog on a doubleclick, you can set\n * <mxEditor.dblClickAction> to showProperties as follows:\n * \n * (code)\n * editor.dblClickAction = 'showProperties';\n * (end)\n * \n * Popupmenu and Toolbar:\n * \n * The toolbar and popupmenu are typically configured using the respective\n * sections in the config file, that is, the popupmenu is defined as follows:\n * \n * (code)\n * <mxEditor>\n *   <mxDefaultPopupMenu as=\"popupHandler\">\n * \t\t<add as=\"cut\" action=\"cut\" icon=\"images/cut.gif\"/>\n *      ...\n * (end)\n * \n * New entries can be added to the toolbar by inserting an add-node into the\n * above configuration. Existing entries may be removed and changed by\n * modifying or removing the respective entries in the configuration.\n * The configuration is read by the <mxDefaultPopupMenuCodec>, the format of the\n * configuration is explained in <mxDefaultPopupMenu.decode>.\n * \n * The toolbar is defined in the mxDefaultToolbar section. Items can be added\n * and removed in this section.\n * \n * (code)\n * <mxEditor>\n *   <mxDefaultToolbar>\n *     <add as=\"save\" action=\"save\" icon=\"images/save.gif\"/>\n *     <add as=\"Swimlane\" template=\"swimlane\" icon=\"images/swimlane.gif\"/>\n *     ...\n * (end)\n * \n * The format of the configuration is described in\n * <mxDefaultToolbarCodec.decode>.\n * \n * Ids:\n * \n * For the IDs, there is an implicit behaviour in <mxCodec>: It moves the Id\n * from the cell to the user object at encoding time and vice versa at decoding\n * time. For example, if the Task node from above has an id attribute, then\n * the <mxCell.id> of the corresponding cell will have this value. If there\n * is no Id collision in the model, then the cell may be retrieved using this\n * Id with the <mxGraphModel.getCell> function. If there is a collision, a new\n * Id will be created for the cell using <mxGraphModel.createId>. At encoding\n * time, this new Id will replace the value previously stored under the id\n * attribute in the Task node.\n * \n * See <mxEditorCodec>, <mxDefaultToolbarCodec> and <mxDefaultPopupMenuCodec>\n * for information about configuring the editor and user interface.\n * \n * Programmatically inserting cells:\n * \n * For inserting a new cell, say, by clicking a button in the document,\n * the following code can be used. This requires an reference to the editor.\n * \n * (code)\n * var userObject = new Object();\n * var parent = editor.graph.getDefaultParent();\n * var model = editor.graph.model;\n * model.beginUpdate();\n * try\n * {\n *   editor.graph.insertVertex(parent, null, userObject, 20, 20, 80, 30);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * (end)\n * \n * If a template cell from the config file should be inserted, then a clone\n * of the template can be created as follows. The clone is then inserted using\n * the add function instead of addVertex.\n * \n * (code)\n * var template = editor.templates['task'];\n * var clone = editor.graph.model.cloneCell(template);\n * (end)\n * \n * Resources:\n *\n * resources/editor - Language resources for mxEditor\n *\n * Callback: onInit\n *\n * Called from within the constructor. In the callback,\n * \"this\" refers to the editor instance.\n *\n * Cookie: mxgraph=seen\n *\n * Set when the editor is started. Never expires. Use\n * <resetFirstTime> to reset this cookie. This cookie\n * only exists if <onInit> is implemented.\n *\n * Event: mxEvent.OPEN\n *\n * Fires after a file was opened in <open>. The <code>filename</code> property\n * contains the filename that was used. The same value is also available in\n * <filename>.\n *\n * Event: mxEvent.SAVE\n *\n * Fires after the current file was saved in <save>. The <code>url</code>\n * property contains the URL that was used for saving.\n *\n * Event: mxEvent.POST\n * \n * Fires if a successful response was received in <postDiagram>. The\n * <code>request</code> property contains the <mxXmlRequest>, the\n * <code>url</code> and <code>data</code> properties contain the URL and the\n * data that were used in the post request. \n *\n * Event: mxEvent.ROOT\n *\n * Fires when the current root has changed, or when the title of the current\n * root has changed. This event has no properties.\n *\n * Event: mxEvent.BEFORE_ADD_VERTEX\n * \n * Fires before a vertex is added in <addVertex>. The <code>vertex</code>\n * property contains the new vertex and the <code>parent</code> property\n * contains its parent.\n * \n * Event: mxEvent.ADD_VERTEX\n * \n * Fires between begin- and endUpdate in <addVertex>. The <code>vertex</code>\n * property contains the vertex that is being inserted.\n * \n * Event: mxEvent.AFTER_ADD_VERTEX\n * \n * Fires after a vertex was inserted and selected in <addVertex>. The\n * <code>vertex</code> property contains the new vertex.\n * \n * Example:\n * \n * For starting an in-place edit after a new vertex has been added to the\n * graph, the following code can be used.\n * \n * (code)\n * editor.addListener(mxEvent.AFTER_ADD_VERTEX, function(sender, evt)\n * {\n *   var vertex = evt.getProperty('vertex');\n * \n *   if (editor.graph.isCellEditable(vertex))\n *   {\n *   \teditor.graph.startEditingAtCell(vertex);\n *   }\n * });\n * (end)\n * \n * Event: mxEvent.ESCAPE\n * \n * Fires when the escape key is pressed. The <code>event</code> property\n * contains the key event.\n * \n * Constructor: mxEditor\n *\n * Constructs a new editor. This function invokes the <onInit> callback\n * upon completion.\n *\n * Example:\n *\n * (code)\n * var config = mxUtils.load('config/diagrameditor.xml').getDocumentElement();\n * var editor = new mxEditor(config);\n * (end)\n * \n * Parameters:\n * \n * config - Optional XML node that contains the configuration.\n */\nfunction mxEditor(config)\n{\n\tthis.actions = [];\n\tthis.addActions();\n\n\t// Executes the following only if a document has been instanciated.\n\t// That is, don't execute when the editorcodec is setup.\n\tif (document.body != null)\n\t{\n\t\t// Defines instance fields\n\t\tthis.cycleAttributeValues = [];\n\t\tthis.popupHandler = new mxDefaultPopupMenu();\n\t\tthis.undoManager = new mxUndoManager();\n\n\t\t// Creates the graph and toolbar without the containers\n\t\tthis.graph = this.createGraph();\n\t\tthis.toolbar = this.createToolbar();\n\n\t\t// Creates the global keyhandler (requires graph instance)\n\t\tthis.keyHandler = new mxDefaultKeyHandler(this);\n\n\t\t// Configures the editor using the URI\n\t\t// which was passed to the ctor\n\t\tthis.configure(config);\n\t\t\n\t\t// Assigns the swimlaneIndicatorColorAttribute on the graph\n\t\tthis.graph.swimlaneIndicatorColorAttribute = this.cycleAttributeName;\n\n\t\t// Checks if the <onInit> hook has been set\n\t\tif (this.onInit != null)\n\t\t{\n\t\t\t// Invokes the <onInit> hook\n\t\t\tthis.onInit();\n\t\t}\n\t\t\n\t\t// Automatic deallocation of memory\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.destroy();\n\t\t\t}));\n\t\t}\n\t}\n};\n\n/**\n * Installs the required language resources at class\n * loading time.\n */\nif (mxLoadResources)\n{\n\tmxResources.add(mxClient.basePath + '/resources/editor');\n}\nelse\n{\n\tmxClient.defaultBundles.push(mxClient.basePath + '/resources/editor');\n}\n\n/**\n * Extends mxEventSource.\n */\nmxEditor.prototype = new mxEventSource();\nmxEditor.prototype.constructor = mxEditor;\n\n/**\n * Group: Controls and Handlers\n */\n\t\n/**\n * Variable: askZoomResource\n * \n * Specifies the resource key for the zoom dialog. If the resource for this\n * key does not exist then the value is used as the error message. Default\n * is 'askZoom'.\n */\nmxEditor.prototype.askZoomResource = (mxClient.language != 'none') ? 'askZoom' : '';\n\t\n/**\n * Variable: lastSavedResource\n * \n * Specifies the resource key for the last saved info. If the resource for\n * this key does not exist then the value is used as the error message.\n * Default is 'lastSaved'.\n */\nmxEditor.prototype.lastSavedResource = (mxClient.language != 'none') ? 'lastSaved' : '';\n\t\n/**\n * Variable: currentFileResource\n * \n * Specifies the resource key for the current file info. If the resource for\n * this key does not exist then the value is used as the error message.\n * Default is 'lastSaved'.\n */\nmxEditor.prototype.currentFileResource = (mxClient.language != 'none') ? 'currentFile' : '';\n\t\n/**\n * Variable: propertiesResource\n * \n * Specifies the resource key for the properties window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'properties'.\n */\nmxEditor.prototype.propertiesResource = (mxClient.language != 'none') ? 'properties' : '';\n\t\n/**\n * Variable: tasksResource\n * \n * Specifies the resource key for the tasks window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'tasks'.\n */\nmxEditor.prototype.tasksResource = (mxClient.language != 'none') ? 'tasks' : '';\n\t\n/**\n * Variable: helpResource\n * \n * Specifies the resource key for the help window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'help'.\n */\nmxEditor.prototype.helpResource = (mxClient.language != 'none') ? 'help' : '';\n\t\n/**\n * Variable: outlineResource\n * \n * Specifies the resource key for the outline window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'outline'.\n */\nmxEditor.prototype.outlineResource = (mxClient.language != 'none') ? 'outline' : '';\n\t\n/**\n * Variable: outline\n * \n * Reference to the <mxWindow> that contains the outline. The <mxOutline>\n * is stored in outline.outline.\n */\nmxEditor.prototype.outline = null;\n\n/**\n * Variable: graph\n *\n * Holds a <mxGraph> for displaying the diagram. The graph\n * is created in <setGraphContainer>.\n */\nmxEditor.prototype.graph = null;\n\n/**\n * Variable: graphRenderHint\n *\n * Holds the render hint used for creating the\n * graph in <setGraphContainer>. See <mxGraph>.\n * Default is null.\n */\nmxEditor.prototype.graphRenderHint = null;\n\n/**\n * Variable: toolbar\n *\n * Holds a <mxDefaultToolbar> for displaying the toolbar. The\n * toolbar is created in <setToolbarContainer>.\n */\nmxEditor.prototype.toolbar = null;\n\n/**\n * Variable: status\n *\n * DOM container that holds the statusbar. Default is null.\n * Use <setStatusContainer> to set this value.\n */\nmxEditor.prototype.status = null;\n\n/**\n * Variable: popupHandler\n *\n * Holds a <mxDefaultPopupMenu> for displaying\n * popupmenus.\n */\nmxEditor.prototype.popupHandler = null;\n\n/**\n * Variable: undoManager\n *\n * Holds an <mxUndoManager> for the command history.\n */\nmxEditor.prototype.undoManager = null;\n\n/**\n * Variable: keyHandler\n *\n * Holds a <mxDefaultKeyHandler> for handling keyboard events.\n * The handler is created in <setGraphContainer>.\n */\nmxEditor.prototype.keyHandler = null;\n\n/**\n * Group: Actions and Options\n */\n\n/**\n * Variable: actions\n *\n * Maps from actionnames to actions, which are functions taking\n * the editor and the cell as arguments. Use <addAction>\n * to add or replace an action and <execute> to execute an action\n * by name, passing the cell to be operated upon as the second\n * argument.\n */\nmxEditor.prototype.actions = null;\n\n/**\n * Variable: dblClickAction\n *\n * Specifies the name of the action to be executed\n * when a cell is double clicked. Default is edit.\n * \n * To handle a singleclick, use the following code.\n * \n * (code)\n * editor.graph.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var e = evt.getProperty('event');\n *   var cell = evt.getProperty('cell');\n * \n *   if (cell != null && !e.isConsumed())\n *   {\n *     // Do something useful with cell...\n *     e.consume();\n *   }\n * });\n * (end)\n */\nmxEditor.prototype.dblClickAction = 'edit';\n\n/**\n * Variable: swimlaneRequired\n * \n * Specifies if new cells must be inserted\n * into an existing swimlane. Otherwise, cells\n * that are not swimlanes can be inserted as\n * top-level cells. Default is false.\n */\nmxEditor.prototype.swimlaneRequired = false;\n\n/**\n * Variable: disableContextMenu\n *\n * Specifies if the context menu should be disabled in the graph container.\n * Default is true.\n */\nmxEditor.prototype.disableContextMenu = true;\n\n/**\n * Group: Templates\n */\n\n/**\n * Variable: insertFunction\n *\n * Specifies the function to be used for inserting new\n * cells into the graph. This is assigned from the\n * <mxDefaultToolbar> if a vertex-tool is clicked.\n */\nmxEditor.prototype.insertFunction = null;\n\n/**\n * Variable: forcedInserting\n *\n * Specifies if a new cell should be inserted on a single\n * click even using <insertFunction> if there is a cell \n * under the mousepointer, otherwise the cell under the \n * mousepointer is selected. Default is false.\n */\nmxEditor.prototype.forcedInserting = false;\n\n/**\n * Variable: templates\n * \n * Maps from names to protoype cells to be used\n * in the toolbar for inserting new cells into\n * the diagram.\n */\nmxEditor.prototype.templates = null;\n\n/**\n * Variable: defaultEdge\n * \n * Prototype edge cell that is used for creating\n * new edges.\n */\nmxEditor.prototype.defaultEdge = null;\n\n/**\n * Variable: defaultEdgeStyle\n * \n * Specifies the edge style to be returned in <getEdgeStyle>.\n * Default is null.\n */\nmxEditor.prototype.defaultEdgeStyle = null;\n\n/**\n * Variable: defaultGroup\n * \n * Prototype group cell that is used for creating\n * new groups.\n */\nmxEditor.prototype.defaultGroup = null;\n\n/**\n * Variable: graphRenderHint\n *\n * Default size for the border of new groups. If null,\n * then then <mxGraph.gridSize> is used. Default is\n * null.\n */\nmxEditor.prototype.groupBorderSize = null;\n\n/**\n * Group: Backend Integration\n */\n\n/**\n * Variable: filename\n *\n * Contains the URL of the last opened file as a string.\n * Default is null.\n */\nmxEditor.prototype.filename = null;\n\n/**\n * Variable: lineFeed\n *\n * Character to be used for encoding linefeeds in <save>. Default is '&#xa;'.\n */\nmxEditor.prototype.linefeed = '&#xa;';\n\n/**\n * Variable: postParameterName\n *\n * Specifies if the name of the post parameter that contains the diagram\n * data in a post request to the server. Default is xml.\n */\nmxEditor.prototype.postParameterName = 'xml';\n\n/**\n * Variable: escapePostData\n *\n * Specifies if the data in the post request for saving a diagram\n * should be converted using encodeURIComponent. Default is true.\n */\nmxEditor.prototype.escapePostData = true;\n\n/**\n * Variable: urlPost\n *\n * Specifies the URL to be used for posting the diagram\n * to a backend in <save>.\n */\nmxEditor.prototype.urlPost = null;\n\n/**\n * Variable: urlImage\n *\n * Specifies the URL to be used for creating a bitmap of\n * the graph in the image action.\n */\nmxEditor.prototype.urlImage = null;\n\n/**\n * Group: Autolayout\n */\n\n/**\n * Variable: horizontalFlow\n *\n * Specifies the direction of the flow\n * in the diagram. This is used in the\n * layout algorithms. Default is false,\n * ie. vertical flow.\n */\nmxEditor.prototype.horizontalFlow = false;\n\n/**\n * Variable: layoutDiagram\n *\n * Specifies if the top-level elements in the\n * diagram should be layed out using a vertical\n * or horizontal stack depending on the setting\n * of <horizontalFlow>. The spacing between the\n * swimlanes is specified by <swimlaneSpacing>.\n * Default is false.\n * \n * If the top-level elements are swimlanes, then\n * the intra-swimlane layout is activated by\n * the <layoutSwimlanes> switch.\n */\nmxEditor.prototype.layoutDiagram = false;\n\n/**\n * Variable: swimlaneSpacing\n *\n * Specifies the spacing between swimlanes if\n * automatic layout is turned on in\n * <layoutDiagram>. Default is 0.\n */\nmxEditor.prototype.swimlaneSpacing = 0;\n\n/**\n * Variable: maintainSwimlanes\n * \n * Specifies if the swimlanes should be kept at the same\n * width or height depending on the setting of\n * <horizontalFlow>.  Default is false.\n * \n * For horizontal flows, all swimlanes\n * have the same height and for vertical flows, all swimlanes\n * have the same width. Furthermore, the swimlanes are\n * automatically \"stacked\" if <layoutDiagram> is true.\n */\nmxEditor.prototype.maintainSwimlanes = false;\n\n/**\n * Variable: layoutSwimlanes\n *\n * Specifies if the children of swimlanes should\n * be layed out, either vertically or horizontally\n * depending on <horizontalFlow>.\n * Default is false.\n */\nmxEditor.prototype.layoutSwimlanes = false;\n\n/**\n * Group: Attribute Cycling\n */\n \n/**\n * Variable: cycleAttributeValues\n * \n * Specifies the attribute values to be cycled when\n * inserting new swimlanes. Default is an empty\n * array.\n */\nmxEditor.prototype.cycleAttributeValues = null;\n\n/**\n * Variable: cycleAttributeIndex\n * \n * Index of the last consumed attribute index. If a new\n * swimlane is inserted, then the <cycleAttributeValues>\n * at this index will be used as the value for\n * <cycleAttributeName>. Default is 0.\n */\nmxEditor.prototype.cycleAttributeIndex = 0;\n\n/**\n * Variable: cycleAttributeName\n * \n * Name of the attribute to be assigned a <cycleAttributeValues>\n * when inserting new swimlanes. Default is fillColor.\n */\nmxEditor.prototype.cycleAttributeName = 'fillColor';\n\n/**\n * Group: Windows\n */\n\n/**\n * Variable: tasks\n * \n * Holds the <mxWindow> created in <showTasks>.\n */\nmxEditor.prototype.tasks = null;\n\n/**\n * Variable: tasksWindowImage\n *\n * Icon for the tasks window.\n */\nmxEditor.prototype.tasksWindowImage = null;\n\n/**\n * Variable: tasksTop\n * \n * Specifies the top coordinate of the tasks window in pixels.\n * Default is 20.\n */\nmxEditor.prototype.tasksTop = 20;\n\n/**\n * Variable: help\n * \n * Holds the <mxWindow> created in <showHelp>.\n */\nmxEditor.prototype.help = null;\n\n/**\n * Variable: helpWindowImage\n *\n * Icon for the help window.\n */\nmxEditor.prototype.helpWindowImage = null;\n\n/**\n * Variable: urlHelp\n *\n * Specifies the URL to be used for the contents of the\n * Online Help window. This is usually specified in the\n * resources file under urlHelp for language-specific\n * online help support.\n */\nmxEditor.prototype.urlHelp = null;\n\n/**\n * Variable: helpWidth\n * \n * Specifies the width of the help window in pixels.\n * Default is 300.\n */\nmxEditor.prototype.helpWidth = 300;\n\t\n/**\n * Variable: helpWidth\n * \n * Specifies the width of the help window in pixels.\n * Default is 260.\n */\nmxEditor.prototype.helpHeight = 260;\n\n/**\n * Variable: propertiesWidth\n * \n * Specifies the width of the properties window in pixels.\n * Default is 240.\n */\nmxEditor.prototype.propertiesWidth = 240;\n\t\t\n/**\n * Variable: propertiesHeight\n * \n * Specifies the height of the properties window in pixels.\n * If no height is specified then the window will be automatically\n * sized to fit its contents. Default is null.\n */\nmxEditor.prototype.propertiesHeight = null;\n\t\t\n/**\n * Variable: movePropertiesDialog\n *\n * Specifies if the properties dialog should be automatically\n * moved near the cell it is displayed for, otherwise the\n * dialog is not moved. This value is only taken into \n * account if the dialog is already visible. Default is false.\n */\nmxEditor.prototype.movePropertiesDialog = false;\n\n/**\n * Variable: validating\n *\n * Specifies if <mxGraph.validateGraph> should automatically be invoked after\n * each change. Default is false.\n */\nmxEditor.prototype.validating = false;\n\n/**\n * Variable: modified\n *\n * True if the graph has been modified since it was last saved.\n */\nmxEditor.prototype.modified = false;\n\n/**\n * Function: isModified\n * \n * Returns <modified>.\n */\nmxEditor.prototype.isModified = function ()\n{\n\treturn this.modified;\n};\n\n/**\n * Function: setModified\n * \n * Sets <modified> to the specified boolean value.\n */\nmxEditor.prototype.setModified = function (value)\n{\n\tthis.modified = value;\n};\n\n/**\n * Function: addActions\n *\n * Adds the built-in actions to the editor instance.\n *\n * save - Saves the graph using <urlPost>.\n * print - Shows the graph in a new print preview window.\n * show - Shows the graph in a new window.\n * exportImage - Shows the graph as a bitmap image using <getUrlImage>.\n * refresh - Refreshes the graph's display.\n * cut - Copies the current selection into the clipboard\n * and removes it from the graph.\n * copy - Copies the current selection into the clipboard.\n * paste - Pastes the clipboard into the graph.\n * delete - Removes the current selection from the graph.\n * group - Puts the current selection into a new group.\n * ungroup - Removes the selected groups and selects the children.\n * undo - Undoes the last change on the graph model.\n * redo - Redoes the last change on the graph model.\n * zoom - Sets the zoom via a dialog.\n * zoomIn - Zooms into the graph.\n * zoomOut - Zooms out of the graph\n * actualSize - Resets the scale and translation on the graph.\n * fit - Changes the scale so that the graph fits into the window.\n * showProperties - Shows the properties dialog.\n * selectAll - Selects all cells.\n * selectNone - Clears the selection.\n * selectVertices - Selects all vertices.\n * selectEdges = Selects all edges.\n * edit - Starts editing the current selection cell.\n * enterGroup - Drills down into the current selection cell.\n * exitGroup - Moves up in the drilling hierachy\n * home - Moves to the topmost parent in the drilling hierarchy\n * selectPrevious - Selects the previous cell.\n * selectNext - Selects the next cell.\n * selectParent - Selects the parent of the selection cell.\n * selectChild - Selects the first child of the selection cell.\n * collapse - Collapses the currently selected cells.\n * expand - Expands the currently selected cells.\n * bold - Toggle bold text style.\n * italic - Toggle italic text style.\n * underline - Toggle underline text style.\n * alignCellsLeft - Aligns the selection cells at the left.\n * alignCellsCenter - Aligns the selection cells in the center.\n * alignCellsRight - Aligns the selection cells at the right.\n * alignCellsTop - Aligns the selection cells at the top.\n * alignCellsMiddle - Aligns the selection cells in the middle.\n * alignCellsBottom - Aligns the selection cells at the bottom.\n * alignFontLeft - Sets the horizontal text alignment to left.\n * alignFontCenter - Sets the horizontal text alignment to center.\n * alignFontRight - Sets the horizontal text alignment to right.\n * alignFontTop - Sets the vertical text alignment to top.\n * alignFontMiddle - Sets the vertical text alignment to middle.\n * alignFontBottom - Sets the vertical text alignment to bottom.\n * toggleTasks - Shows or hides the tasks window.\n * toggleHelp - Shows or hides the help window.\n * toggleOutline - Shows or hides the outline window.\n * toggleConsole - Shows or hides the console window.\n */\nmxEditor.prototype.addActions = function ()\n{\n\tthis.addAction('save', function(editor)\n\t{\n\t\teditor.save();\n\t});\n\t\n\tthis.addAction('print', function(editor)\n\t{\n\t\tvar preview = new mxPrintPreview(editor.graph, 1);\n\t\tpreview.open();\n\t});\n\t\n\tthis.addAction('show', function(editor)\n\t{\n\t\tmxUtils.show(editor.graph, null, 10, 10);\n\t});\n\n\tthis.addAction('exportImage', function(editor)\n\t{\n\t\tvar url = editor.getUrlImage();\n\t\t\n\t\tif (url == null || mxClient.IS_LOCAL)\n\t\t{\n\t\t\teditor.execute('show');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar node = mxUtils.getViewXml(editor.graph, 1);\n\t\t\tvar xml = mxUtils.getXml(node, '\\n');\n\n\t\t\tmxUtils.submit(url, editor.postParameterName + '=' +\n\t\t\t\tencodeURIComponent(xml), document, '_blank');\n\t\t}\n\t});\n\t\n\tthis.addAction('refresh', function(editor)\n\t{\n\t\teditor.graph.refresh();\n\t});\n\t\n\tthis.addAction('cut', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.cut(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('copy', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.copy(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('paste', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.paste(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('delete', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.removeCells();\n\t\t}\n\t});\n\t\n\tthis.addAction('group', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setSelectionCell(editor.groupCells());\n\t\t}\n\t});\n\t\n\tthis.addAction('ungroup', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setSelectionCells(editor.graph.ungroupCells());\n\t\t}\n\t});\n\t\n\tthis.addAction('removeFromParent', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.removeCellsFromParent();\n\t\t}\n\t});\n\t\n\tthis.addAction('undo', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.undo();\n\t\t}\n\t});\n\t\n\tthis.addAction('redo', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.redo();\n\t\t}\n\t});\n\t\n\tthis.addAction('zoomIn', function(editor)\n\t{\n\t\teditor.graph.zoomIn();\n\t});\n\t\n\tthis.addAction('zoomOut', function(editor)\n\t{\n\t\teditor.graph.zoomOut();\n\t});\n\t\n\tthis.addAction('actualSize', function(editor)\n\t{\n\t\teditor.graph.zoomActual();\n\t});\n\t\n\tthis.addAction('fit', function(editor)\n\t{\n\t\teditor.graph.fit();\n\t});\n\t\n\tthis.addAction('showProperties', function(editor, cell)\n\t{\n\t\teditor.showProperties(cell);\n\t});\n\t\n\tthis.addAction('selectAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectAll();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectNone', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.clearSelection();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectVertices', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectVertices();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectEdges', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectEdges();\n\t\t}\n\t});\n\t\n\tthis.addAction('edit', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled() &&\n\t\t\teditor.graph.isCellEditable(cell))\n\t\t{\n\t\t\teditor.graph.startEditingAtCell(cell);\n\t\t}\n\t});\n\t\n\tthis.addAction('toBack', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.orderCells(true);\n\t\t}\n\t});\n\t\n\tthis.addAction('toFront', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.orderCells(false);\n\t\t}\n\t});\n\t\n\tthis.addAction('enterGroup', function(editor, cell)\n\t{\n\t\teditor.graph.enterGroup(cell);\n\t});\n\t\n\tthis.addAction('exitGroup', function(editor)\n\t{\n\t\teditor.graph.exitGroup();\n\t});\n\t\n\tthis.addAction('home', function(editor)\n\t{\n\t\teditor.graph.home();\n\t});\n\t\n\tthis.addAction('selectPrevious', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectPreviousCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectNext', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectNextCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectParent', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectParentCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectChild', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectChildCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('collapse', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.foldCells(true);\n\t\t}\n\t});\n\t\n\tthis.addAction('collapseAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tvar cells = editor.graph.getChildVertices();\n\t\t\teditor.graph.foldCells(true, false, cells);\n\t\t}\n\t});\n\t\n\tthis.addAction('expand', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.foldCells(false);\n\t\t}\n\t});\n\t\n\tthis.addAction('expandAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tvar cells = editor.graph.getChildVertices();\n\t\t\teditor.graph.foldCells(false, false, cells);\n\t\t}\n\t});\n\t\n\tthis.addAction('bold', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_BOLD);\n\t\t}\n\t});\n\t\n\tthis.addAction('italic', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_ITALIC);\n\t\t}\n\t});\n\t\n\tthis.addAction('underline', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_UNDERLINE);\n\t\t}\n\t});\n\n\tthis.addAction('alignCellsLeft', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_LEFT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsCenter', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_CENTER);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsRight', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_RIGHT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsTop', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_TOP);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsMiddle', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_MIDDLE);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsBottom', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_BOTTOM);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontLeft', function(editor)\n\t{\n\t\t\n\t\teditor.graph.setCellStyles(\n\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\tmxConstants.ALIGN_LEFT);\n\t});\n\t\n\tthis.addAction('alignFontCenter', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\t\tmxConstants.ALIGN_CENTER);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontRight', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\t\tmxConstants.ALIGN_RIGHT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontTop', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_TOP);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontMiddle', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_MIDDLE);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontBottom', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_BOTTOM);\n\t\t}\n\t});\n\t\n\tthis.addAction('zoom', function(editor)\n\t{\n\t\tvar current = editor.graph.getView().scale*100;\n\t\tvar scale = parseFloat(mxUtils.prompt(\n\t\t\tmxResources.get(editor.askZoomResource) ||\n\t\t\teditor.askZoomResource,\n\t\t\tcurrent))/100;\n\n\t\tif (!isNaN(scale))\n\t\t{\n\t\t\teditor.graph.getView().setScale(scale);\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleTasks', function(editor)\n\t{\n\t\tif (editor.tasks != null)\n\t\t{\n\t\t\teditor.tasks.setVisible(!editor.tasks.isVisible());\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.showTasks();\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleHelp', function(editor)\n\t{\n\t\tif (editor.help != null)\n\t\t{\n\t\t\teditor.help.setVisible(!editor.help.isVisible());\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.showHelp();\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleOutline', function(editor)\n\t{\n\t\tif (editor.outline == null)\n\t\t{\n\t\t\teditor.showOutline();\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.outline.setVisible(!editor.outline.isVisible());\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleConsole', function(editor)\n\t{\n\t\tmxLog.setVisible(!mxLog.isVisible());\n\t});\n};\n\n/**\n * Function: configure\n *\n * Configures the editor using the specified node. To load the\n * configuration from a given URL the following code can be used to obtain\n * the XML node.\n * \n * (code)\n * var node = mxUtils.load(url).getDocumentElement();\n * (end)\n * \n * Parameters:\n * \n * node - XML node that contains the configuration.\n */\nmxEditor.prototype.configure = function (node)\n{\n\tif (node != null)\n\t{\n\t\t// Creates a decoder for the XML data\n\t\t// and uses it to configure the editor\n\t\tvar dec = new mxCodec(node.ownerDocument);\n\t\tdec.decode(node, this);\n\t\t\n\t\t// Resets the counters, modified state and\n\t\t// command history\n\t\tthis.resetHistory();\n\t}\n};\n\n/**\n * Function: resetFirstTime\n * \n * Resets the cookie that is used to remember if the editor has already\n * been used.\n */\nmxEditor.prototype.resetFirstTime = function ()\n{\n\tdocument.cookie =\n\t\t'mxgraph=seen; expires=Fri, 27 Jul 2001 02:47:11 UTC; path=/';\n};\n\n/**\n * Function: resetHistory\n * \n * Resets the command history, modified state and counters.\n */\nmxEditor.prototype.resetHistory = function ()\n{\n\tthis.lastSnapshot = new Date().getTime();\n\tthis.undoManager.clear();\n\tthis.ignoredChanges = 0;\n\tthis.setModified(false);\n};\n\n/**\n * Function: addAction\n * \n * Binds the specified actionname to the specified function.\n * \n * Parameters:\n * \n * actionname - String that specifies the name of the action\n * to be added.\n * funct - Function that implements the new action. The first\n * argument of the function is the editor it is used\n * with, the second argument is the cell it operates\n * upon.\n * \n * Example:\n * (code)\n * editor.addAction('test', function(editor, cell)\n * {\n * \t\tmxUtils.alert(\"test \"+cell);\n * });\n * (end)\n */\nmxEditor.prototype.addAction = function (actionname, funct)\n{\n\tthis.actions[actionname] = funct;\n};\n\n/**\n * Function: execute\n * \n * Executes the function with the given name in <actions> passing the\n * editor instance and given cell as the first and second argument. All\n * additional arguments are passed to the action as well. This method\n * contains a try-catch block and displays an error message if an action\n * causes an exception. The exception is re-thrown after the error\n * message was displayed.\n * \n * Example:\n * \n * (code)\n * editor.execute(\"showProperties\", cell);\n * (end)\n */\nmxEditor.prototype.execute = function (actionname, cell, evt)\n{\n\tvar action = this.actions[actionname];\n\t\n\tif (action != null)\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Creates the array of arguments by replacing the actionname\n\t\t\t// with the editor instance in the args of this function\n\t\t\tvar args = arguments;\n\t\t\targs[0] = this;\n\t\t\t\n\t\t\t// Invokes the function on the editor using the args\n\t\t\taction.apply(this, args);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxUtils.error('Cannot execute ' + actionname +\n\t\t\t\t': ' + e.message, 280, true);\n\t\t\t\n\t\t\tthrow e;\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxUtils.error('Cannot find action '+actionname, 280, true);\n\t}\n};\n\n/**\n * Function: addTemplate\n * \n * Adds the specified template under the given name in <templates>.\n */\nmxEditor.prototype.addTemplate = function (name, template)\n{\n\tthis.templates[name] = template;\n};\n\n/**\n * Function: getTemplate\n * \n * Returns the template for the given name.\n */\nmxEditor.prototype.getTemplate = function (name)\n{\n\treturn this.templates[name];\n};\n\n/**\n * Function: createGraph\n * \n * Creates the <graph> for the editor. The graph is created with no\n * container and is initialized from <setGraphContainer>.\n */\nmxEditor.prototype.createGraph = function ()\n{\n\tvar graph = new mxGraph(null, null, this.graphRenderHint);\n\t\n\t// Enables rubberband, tooltips, panning\n\tgraph.setTooltips(true);\n\tgraph.setPanning(true);\n\n\t// Overrides the dblclick method on the graph to\n\t// invoke the dblClickAction for a cell and reset\n\t// the selection tool in the toolbar\n\tthis.installDblClickHandler(graph);\n\t\n\t// Installs the command history\n\tthis.installUndoHandler(graph);\n\n\t// Installs the handlers for the root event\n\tthis.installDrillHandler(graph);\n\t\n\t// Installs the handler for validation\n\tthis.installChangeHandler(graph);\n\n\t// Installs the handler for calling the\n\t// insert function and consume the\n\t// event if an insert function is defined\n\tthis.installInsertHandler(graph);\n\n\t// Redirects the function for creating the\n\t// popupmenu items\n\tgraph.popupMenuHandler.factoryMethod =\n\t\tmxUtils.bind(this, function(menu, cell, evt)\n\t\t{\n\t\t\treturn this.createPopupMenu(menu, cell, evt);\n\t\t});\n\n\t// Redirects the function for creating\n\t// new connections in the diagram\n\tgraph.connectionHandler.factoryMethod =\n\t\tmxUtils.bind(this, function(source, target)\n\t\t{\n\t\t\treturn this.createEdge(source, target);\n\t\t});\n\t\n\t// Maintains swimlanes and installs autolayout\n\tthis.createSwimlaneManager(graph);\n\tthis.createLayoutManager(graph);\n\t\n\treturn graph;\n};\n\n/**\n * Function: createSwimlaneManager\n * \n * Sets the graph's container using <mxGraph.init>.\n */\nmxEditor.prototype.createSwimlaneManager = function (graph)\n{\n\tvar swimlaneMgr = new mxSwimlaneManager(graph, false);\n\n\tswimlaneMgr.isHorizontal = mxUtils.bind(this, function()\n\t{\n\t\treturn this.horizontalFlow;\n\t});\n\t\n\tswimlaneMgr.isEnabled = mxUtils.bind(this, function()\n\t{\n\t\treturn this.maintainSwimlanes;\n\t});\n\t\n\treturn swimlaneMgr;\n};\n\n/**\n * Function: createLayoutManager\n * \n * Creates a layout manager for the swimlane and diagram layouts, that\n * is, the locally defined inter- and intraswimlane layouts.\n */\nmxEditor.prototype.createLayoutManager = function (graph)\n{\n\tvar layoutMgr = new mxLayoutManager(graph);\n\t\n\tvar self = this; // closure\n\tlayoutMgr.getLayout = function(cell)\n\t{\n\t\tvar layout = null;\n\t\tvar model = self.graph.getModel();\n\t\t\n\t\tif (model.getParent(cell) != null)\n\t\t{\n\t\t\t// Executes the swimlane layout if a child of\n\t\t\t// a swimlane has been changed. The layout is\n\t\t\t// lazy created in createSwimlaneLayout.\n\t\t\tif (self.layoutSwimlanes &&\n\t\t\t\tgraph.isSwimlane(cell))\n\t\t\t{\n\t\t\t\tif (self.swimlaneLayout == null)\n\t\t\t\t{\n\t\t\t\t\tself.swimlaneLayout = self.createSwimlaneLayout();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlayout = self.swimlaneLayout;\n\t\t\t}\n\t\t\t\n\t\t\t// Executes the diagram layout if the modified\n\t\t\t// cell is a top-level cell. The layout is\n\t\t\t// lazy created in createDiagramLayout.\n\t\t\telse if (self.layoutDiagram &&\n\t\t\t\t(graph.isValidRoot(cell) ||\n\t\t\t\tmodel.getParent(model.getParent(cell)) == null))\n\t\t\t{\n\t\t\t\tif (self.diagramLayout == null)\n\t\t\t\t{\n\t\t\t\t\tself.diagramLayout = self.createDiagramLayout();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlayout = self.diagramLayout;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn layout;\n\t};\n\t\n\treturn layoutMgr;\n};\n\n/**\n * Function: setGraphContainer\n * \n * Sets the graph's container using <mxGraph.init>.\n */\nmxEditor.prototype.setGraphContainer = function (container)\n{\n\tif (this.graph.container == null)\n\t{\n\t\t// Creates the graph instance inside the given container and render hint\n\t\t//this.graph = new mxGraph(container, null, this.graphRenderHint);\n\t\tthis.graph.init(container);\n\n\t\t// Install rubberband selection as the last\n\t\t// action handler in the chain\n\t\tthis.rubberband = new mxRubberband(this.graph);\n\n\t\t// Disables the context menu\n\t\tif (this.disableContextMenu)\n\t\t{\n\t\t\tmxEvent.disableContextMenu(container);\n\t\t}\n\n\t\t// Workaround for stylesheet directives in IE\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnew mxDivResizer(container);\n\t\t}\n\t}\n};\n\n/**\n * Function: installDblClickHandler\n * \n * Overrides <mxGraph.dblClick> to invoke <dblClickAction>\n * on a cell and reset the selection tool in the toolbar.\n */\nmxEditor.prototype.installDblClickHandler = function (graph)\n{\n\t// Installs a listener for double click events\n\tgraph.addListener(mxEvent.DOUBLE_CLICK,\n\t\tmxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar cell = evt.getProperty('cell');\n\t\t\t\n\t\t\tif (cell != null &&\n\t\t\t\tgraph.isEnabled() &&\n\t\t\t\tthis.dblClickAction != null)\n\t\t\t{\n\t\t\t\tthis.execute(this.dblClickAction, cell);\n\t\t\t\tevt.consume();\n\t\t\t}\n\t\t})\n\t);\n};\n\t\t\n/**\n * Function: installUndoHandler\n * \n * Adds the <undoManager> to the graph model and the view.\n */\nmxEditor.prototype.installUndoHandler = function (graph)\n{\t\t\t\t\n\tvar listener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tvar edit = evt.getProperty('edit');\n\t\tthis.undoManager.undoableEditHappened(edit);\n\t});\n\t\n\tgraph.getModel().addListener(mxEvent.UNDO, listener);\n\tgraph.getView().addListener(mxEvent.UNDO, listener);\n\n\t// Keeps the selection state in sync\n\tvar undoHandler = function(sender, evt)\n\t{\n\t\tvar changes = evt.getProperty('edit').changes;\n\t\tgraph.setSelectionCells(graph.getSelectionCellsForChanges(changes));\n\t};\n\t\n\tthis.undoManager.addListener(mxEvent.UNDO, undoHandler);\n\tthis.undoManager.addListener(mxEvent.REDO, undoHandler);\n};\n\t\t\n/**\n * Function: installDrillHandler\n * \n * Installs listeners for dispatching the <root> event.\n */\nmxEditor.prototype.installDrillHandler = function (graph)\n{\t\t\t\t\n\tvar listener = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t});\n\t\n\tgraph.getView().addListener(mxEvent.DOWN, listener);\n\tgraph.getView().addListener(mxEvent.UP, listener);\n};\n\n/**\n * Function: installChangeHandler\n * \n * Installs the listeners required to automatically validate\n * the graph. On each change of the root, this implementation\n * fires a <root> event.\n */\nmxEditor.prototype.installChangeHandler = function (graph)\n{\n\tvar listener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\t// Updates the modified state\n\t\tthis.setModified(true);\n\n\t\t// Automatically validates the graph\n\t\t// after each change\n\t\tif (this.validating == true)\n\t\t{\n\t\t\tgraph.validateGraph();\n\t\t}\n\n\t\t// Checks if the root has been changed\n\t\tvar changes = evt.getProperty('edit').changes;\n\t\t\n\t\tfor (var i = 0; i < changes.length; i++)\n\t\t{\n\t\t\tvar change = changes[i];\n\t\t\t\n\t\t\tif (change instanceof mxRootChange ||\n\t\t\t\t(change instanceof mxValueChange &&\n\t\t\t\tchange.cell == this.graph.model.root) ||\n\t\t\t\t(change instanceof mxCellAttributeChange &&\n\t\t\t\tchange.cell == this.graph.model.root))\n\t\t\t{\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\t\n\tgraph.getModel().addListener(mxEvent.CHANGE, listener);\n};\n\n/**\n * Function: installInsertHandler\n * \n * Installs the handler for invoking <insertFunction> if\n * one is defined.\n */\nmxEditor.prototype.installInsertHandler = function (graph)\n{\n\tvar self = this; // closure\n\tvar insertHandler =\n\t{\n\t\tmouseDown: function(sender, me)\n\t\t{\n\t\t\tif (self.insertFunction != null &&\n\t\t\t\t!me.isPopupTrigger() &&\n\t\t\t\t(self.forcedInserting ||\n\t\t\t\tme.getState() == null))\n\t\t\t{\n\t\t\t\tself.graph.clearSelection();\n\t\t\t\tself.insertFunction(me.getEvent(), me.getCell());\n\n\t\t\t\t// Consumes the rest of the events\n\t\t\t\t// for this gesture (down, move, up)\n\t\t\t\tthis.isActive = true;\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t},\n\t\t\n\t\tmouseMove: function(sender, me)\n\t\t{\n\t\t\tif (this.isActive)\n\t\t\t{\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t},\n\t\t\n\t\tmouseUp: function(sender, me)\n\t\t{\n\t\t\tif (this.isActive)\n\t\t\t{\n\t\t\t\tthis.isActive = false;\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t}\n\t};\n\t\n\tgraph.addMouseListener(insertHandler);\n};\n\n/**\n * Function: createDiagramLayout\n * \n * Creates the layout instance used to layout the\n * swimlanes in the diagram.\n */\nmxEditor.prototype.createDiagramLayout = function ()\n{\n\tvar gs = this.graph.gridSize;\n\tvar layout = new mxStackLayout(this.graph, !this.horizontalFlow,\n\t\t this.swimlaneSpacing, 2*gs, 2*gs);\n\t\n\t// Overrides isIgnored to only take into account swimlanes\n\tlayout.isVertexIgnored = function(cell)\n\t{\n\t\treturn !layout.graph.isSwimlane(cell);\n\t};\n\t\n\treturn layout;\n};\n\n/**\n * Function: createSwimlaneLayout\n * \n * Creates the layout instance used to layout the\n * children of each swimlane.\n */\nmxEditor.prototype.createSwimlaneLayout = function ()\n{\n\treturn new mxCompactTreeLayout(this.graph, this.horizontalFlow);\n};\n\n/**\n * Function: createToolbar\n * \n * Creates the <toolbar> with no container.\n */\nmxEditor.prototype.createToolbar = function ()\n{\n\treturn new mxDefaultToolbar(null, this);\n};\n\n/**\n * Function: setToolbarContainer\n * \n * Initializes the toolbar for the given container.\n */\nmxEditor.prototype.setToolbarContainer = function (container)\n{\n\tthis.toolbar.init(container);\n\t\n\t// Workaround for stylesheet directives in IE\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tnew mxDivResizer(container);\n\t}\n};\n\n/**\n * Function: setStatusContainer\n * \n * Creates the <status> using the specified container.\n * \n * This implementation adds listeners in the editor to \n * display the last saved time and the current filename \n * in the status bar.\n * \n * Parameters:\n * \n * container - DOM node that will contain the statusbar.\n */\nmxEditor.prototype.setStatusContainer = function (container)\n{\n\tif (this.status == null)\n\t{\n\t\tthis.status = container;\n\t\t\n\t\t// Prints the last saved time in the status bar\n\t\t// when files are saved\n\t\tthis.addListener(mxEvent.SAVE, mxUtils.bind(this, function()\n\t\t{\n\t\t\tvar tstamp = new Date().toLocaleString();\n\t\t\tthis.setStatus((mxResources.get(this.lastSavedResource) ||\n\t\t\t\tthis.lastSavedResource)+': '+tstamp);\n\t\t}));\n\t\t\n\t\t// Updates the statusbar to display the filename\n\t\t// when new files are opened\n\t\tthis.addListener(mxEvent.OPEN, mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.setStatus((mxResources.get(this.currentFileResource) ||\n\t\t\t\tthis.currentFileResource)+': '+this.filename);\n\t\t}));\n\t\t\n\t\t// Workaround for stylesheet directives in IE\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnew mxDivResizer(container);\n\t\t}\n\t}\n};\n\n/**\n * Function: setStatus\n * \n * Display the specified message in the status bar.\n * \n * Parameters:\n * \n * message - String the specified the message to\n * be displayed.\n */\nmxEditor.prototype.setStatus = function (message)\n{\n\tif (this.status != null && message != null)\n\t{\n\t\tthis.status.innerHTML = message;\n\t}\n};\n\n/**\n * Function: setTitleContainer\n * \n * Creates a listener to update the inner HTML of the\n * specified DOM node with the value of <getTitle>.\n * \n * Parameters:\n * \n * container - DOM node that will contain the title.\n */\nmxEditor.prototype.setTitleContainer = function (container)\n{\n\tthis.addListener(mxEvent.ROOT, mxUtils.bind(this, function(sender)\n\t{\n\t\tcontainer.innerHTML = this.getTitle();\n\t}));\n\n\t// Workaround for stylesheet directives in IE\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tnew mxDivResizer(container);\n\t}\n};\n\n/**\n * Function: treeLayout\n * \n * Executes a vertical or horizontal compact tree layout\n * using the specified cell as an argument. The cell may\n * either be a group or the root of a tree.\n * \n * Parameters:\n * \n * cell - <mxCell> to use in the compact tree layout.\n * horizontal - Optional boolean to specify the tree's\n * orientation. Default is true.\n */\nmxEditor.prototype.treeLayout = function (cell, horizontal)\n{\n\tif (cell != null)\n\t{\n\t\tvar layout = new mxCompactTreeLayout(this.graph, horizontal);\n\t\tlayout.execute(cell);\n\t}\n};\n\n/**\n * Function: getTitle\n * \n * Returns the string value for the current root of the\n * diagram.\n */\nmxEditor.prototype.getTitle = function ()\n{\n\tvar title = '';\n\tvar graph = this.graph;\n\tvar cell = graph.getCurrentRoot();\n\t\n\twhile (cell != null &&\n\t\t   graph.getModel().getParent(\n\t\t\t\tgraph.getModel().getParent(cell)) != null)\n\t{\n\t\t// Append each label of a valid root\n\t\tif (graph.isValidRoot(cell))\n\t\t{\n\t\t\ttitle = ' > ' +\n\t\t\tgraph.convertValueToString(cell) + title;\n\t\t}\n\t\t\n\t\tcell = graph.getModel().getParent(cell);\n\t}\n\t\n\tvar prefix = this.getRootTitle();\n\t\n\treturn prefix + title;\n};\n\n/**\n * Function: getRootTitle\n * \n * Returns the string value of the root cell in\n * <mxGraph.model>.\n */\nmxEditor.prototype.getRootTitle = function ()\n{\n\tvar root = this.graph.getModel().getRoot();\n\treturn this.graph.convertValueToString(root);\n};\n\n/**\n * Function: undo\n * \n * Undo the last change in <graph>.\n */\nmxEditor.prototype.undo = function ()\n{\n\tthis.undoManager.undo();\n};\n\n/**\n * Function: redo\n * \n * Redo the last change in <graph>.\n */\nmxEditor.prototype.redo = function ()\n{\n\tthis.undoManager.redo();\n};\n\n/**\n * Function: groupCells\n * \n * Invokes <createGroup> to create a new group cell and the invokes\n * <mxGraph.groupCells>, using the grid size of the graph as the spacing\n * in the group's content area.\n */\nmxEditor.prototype.groupCells = function ()\n{\n\tvar border = (this.groupBorderSize != null) ?\n\t\tthis.groupBorderSize :\n\t\tthis.graph.gridSize;\n\treturn this.graph.groupCells(this.createGroup(), border);\n};\n\n/**\n * Function: createGroup\n * \n * Creates and returns a clone of <defaultGroup> to be used\n * as a new group cell in <group>.\n */\nmxEditor.prototype.createGroup = function ()\n{\n\tvar model = this.graph.getModel();\n\t\n\treturn model.cloneCell(this.defaultGroup);\n};\n\n/**\n * Function: open\n * \n * Opens the specified file synchronously and parses it using\n * <readGraphModel>. It updates <filename> and fires an <open>-event after\n * the file has been opened. Exceptions should be handled as follows:\n * \n * (code)\n * try\n * {\n *   editor.open(filename);\n * }\n * catch (e)\n * {\n *   mxUtils.error('Cannot open ' + filename +\n *     ': ' + e.message, 280, true);\n * }\n * (end)\n *\n * Parameters:\n * \n * filename - URL of the file to be opened.\n */\nmxEditor.prototype.open = function (filename)\n{\n\tif (filename != null)\n\t{\n\t\tvar xml = mxUtils.load(filename).getXml();\n\t\tthis.readGraphModel(xml.documentElement);\n\t\tthis.filename = filename;\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.OPEN, 'filename', filename));\n\t}\n};\n\n/**\n * Function: readGraphModel\n * \n * Reads the specified XML node into the existing graph model and resets\n * the command history and modified state.\n */\nmxEditor.prototype.readGraphModel = function (node)\n{\n\tvar dec = new mxCodec(node.ownerDocument);\n\tdec.decode(node, this.graph.getModel());\n\tthis.resetHistory();\n};\n\n/**\n * Function: save\n * \n * Posts the string returned by <writeGraphModel> to the given URL or the\n * URL returned by <getUrlPost>. The actual posting is carried out by\n * <postDiagram>. If the URL is null then the resulting XML will be\n * displayed using <mxUtils.popup>. Exceptions should be handled as\n * follows:\n * \n * (code)\n * try\n * {\n *   editor.save();\n * }\n * catch (e)\n * {\n *   mxUtils.error('Cannot save : ' + e.message, 280, true);\n * }\n * (end)\n */\nmxEditor.prototype.save = function (url, linefeed)\n{\n\t// Gets the URL to post the data to\n\turl = url || this.getUrlPost();\n\n\t// Posts the data if the URL is not empty\n\tif (url != null && url.length > 0)\n\t{\n\t\tvar data = this.writeGraphModel(linefeed);\n\t\tthis.postDiagram(url, data);\n\t\t\n\t\t// Resets the modified flag\n\t\tthis.setModified(false);\n\t}\n\t\n\t// Dispatches a save event\n\tthis.fireEvent(new mxEventObject(mxEvent.SAVE, 'url', url));\n};\n\n/**\n * Function: postDiagram\n * \n * Hook for subclassers to override the posting of a diagram\n * represented by the given node to the given URL. This fires\n * an asynchronous <post> event if the diagram has been posted.\n * \n * Example:\n * \n * To replace the diagram with the diagram in the response, use the\n * following code.\n * \n * (code)\n * editor.addListener(mxEvent.POST, function(sender, evt)\n * {\n *   // Process response (replace diagram)\n *   var req = evt.getProperty('request');\n *   var root = req.getDocumentElement();\n *   editor.graph.readGraphModel(root)\n * });\n * (end)\n */\nmxEditor.prototype.postDiagram = function (url, data)\n{\n\tif (this.escapePostData)\n\t{\n\t\tdata = encodeURIComponent(data);\n\t}\n\n\tmxUtils.post(url, this.postParameterName+'='+data,\n\t\tmxUtils.bind(this, function(req)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.POST,\n\t\t\t\t'request', req, 'url', url, 'data', data));\n\t\t})\n\t);\n};\n\n/**\n * Function: writeGraphModel\n * \n * Hook to create the string representation of the diagram. The default\n * implementation uses an <mxCodec> to encode the graph model as\n * follows:\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(this.graph.getModel());\n * return mxUtils.getXml(node, this.linefeed);\n * (end)\n * \n * Parameters:\n * \n * linefeed - Optional character to be used as the linefeed. Default is\n * <linefeed>.\n */\nmxEditor.prototype.writeGraphModel = function (linefeed)\n{\n\tlinefeed = (linefeed != null) ? linefeed : this.linefeed;\n\tvar enc = new mxCodec();\n\tvar node = enc.encode(this.graph.getModel());\n\n\treturn mxUtils.getXml(node, linefeed);\n};\n\n/**\n * Function: getUrlPost\n * \n * Returns the URL to post the diagram to. This is used\n * in <save>. The default implementation returns <urlPost>,\n * adding <code>?draft=true</code>.\n */\nmxEditor.prototype.getUrlPost = function ()\n{\n\treturn this.urlPost;\n};\n\n/**\n * Function: getUrlImage\n * \n * Returns the URL to create the image with. This is typically\n * the URL of a backend which accepts an XML representation\n * of a graph view to create an image. The function is used\n * in the image action to create an image. This implementation\n * returns <urlImage>.\n */\nmxEditor.prototype.getUrlImage = function ()\n{\n\treturn this.urlImage;\n};\n\n/**\n * Function: swapStyles\n * \n * Swaps the styles for the given names in the graph's\n * stylesheet and refreshes the graph.\n */\nmxEditor.prototype.swapStyles = function (first, second)\n{\n\tvar style = this.graph.getStylesheet().styles[second];\n\tthis.graph.getView().getStylesheet().putCellStyle(\n\t\tsecond, this.graph.getStylesheet().styles[first]);\n\tthis.graph.getStylesheet().putCellStyle(first, style);\n\tthis.graph.refresh();\n};\n\n/**\n * Function: showProperties\n * \n * Creates and shows the properties dialog for the given\n * cell. The content area of the dialog is created using\n * <createProperties>.\n */\nmxEditor.prototype.showProperties = function (cell)\n{\n\tcell = cell || this.graph.getSelectionCell();\n\t\n\t// Uses the root node for the properties dialog\n\t// if not cell was passed in and no cell is\n\t// selected\n\tif (cell == null)\n\t{\n\t\tcell = this.graph.getCurrentRoot();\n\t\t\n\t\tif (cell == null)\n\t\t{\n\t\t\tcell = this.graph.getModel().getRoot();\n\t\t}\n\t}\n\t\n\tif (cell != null)\n\t{\n\t\t// Makes sure there is no in-place editor in the\n\t\t// graph and computes the location of the dialog\n\t\tthis.graph.stopEditing(true);\n\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\tvar x = offset.x+10;\n\t\tvar y = offset.y;\n\t\t\n\t\t// Avoids moving the dialog if it is alredy open\n\t\tif (this.properties != null && !this.movePropertiesDialog)\n\t\t{\n\t\t\tx = this.properties.getX();\n\t\t\ty = this.properties.getY();\n\t\t}\n\t\t\n\t\t// Places the dialog near the cell for which it\n\t\t// displays the properties\n\t\telse\n\t\t{\n\t\t\tvar bounds = this.graph.getCellBounds(cell);\n\t\t\t\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tx += bounds.x+Math.min(200, bounds.width);\n\t\t\t\ty += bounds.y;\t\t\t\t\n\t\t\t}\t\t\t\n\t\t}\n\t\t\n\t\t// Hides the existing properties dialog and creates a new one with the\n\t\t// contents created in the hook method\n\t\tthis.hideProperties();\n\t\tvar node = this.createProperties(cell);\n\t\t\n\t\tif (node != null)\n\t\t{\n\t\t\t// Displays the contents in a window and stores a reference to the\n\t\t\t// window for later hiding of the window\n\t\t\tthis.properties = new mxWindow(mxResources.get(this.propertiesResource) ||\n\t\t\t\tthis.propertiesResource, node, x, y, this.propertiesWidth, this.propertiesHeight, false);\n\t\t\tthis.properties.setVisible(true);\n\t\t}\n\t}\n};\n\n/**\n * Function: isPropertiesVisible\n * \n * Returns true if the properties dialog is currently visible.\n */\nmxEditor.prototype.isPropertiesVisible = function ()\n{\n\treturn this.properties != null;\n};\n\n/**\n * Function: createProperties\n * \n * Creates and returns the DOM node that represents the contents\n * of the properties dialog for the given cell. This implementation\n * works for user objects that are XML nodes and display all the\n * node attributes in a form.\n */\nmxEditor.prototype.createProperties = function (cell)\n{\n\tvar model = this.graph.getModel();\n\tvar value = model.getValue(cell);\n\t\n\tif (mxUtils.isNode(value))\n\t{\n\t\t// Creates a form for the user object inside\n\t\t// the cell\n\t\tvar form = new mxForm('properties');\n\t\t\n\t\t// Adds a readonly field for the cell id\n\t\tvar id = form.addText('ID', cell.getId());\n\t\tid.setAttribute('readonly', 'true');\n\n\t\tvar geo = null;\n\t\tvar yField = null;\n\t\tvar xField = null;\n\t\tvar widthField = null;\n\t\tvar heightField = null;\n\n\t\t// Adds fields for the location and size\n\t\tif (model.isVertex(cell))\n\t\t{\n\t\t\tgeo = model.getGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tyField = form.addText('top', geo.y);\n\t\t\t\txField = form.addText('left', geo.x);\n\t\t\t\twidthField = form.addText('width', geo.width);\n\t\t\t\theightField = form.addText('height', geo.height);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Adds a field for the cell style\t\t\t\n\t\tvar tmp = model.getStyle(cell);\n\t\tvar style = form.addText('Style', tmp || '');\n\t\t\n\t\t// Creates textareas for each attribute of the\n\t\t// user object within the cell\n\t\tvar attrs = value.attributes;\n\t\tvar texts = [];\n\t\t\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t{\n\t\t\t// Creates a textarea with more lines for\n\t\t\t// the cell label\n\t\t\tvar val = attrs[i].value;\n\t\t\ttexts[i] = form.addTextarea(attrs[i].nodeName, val,\n\t\t\t\t(attrs[i].nodeName == 'label') ? 4 : 2);\n\t\t}\n\t\t\n\t\t// Adds an OK and Cancel button to the dialog\n\t\t// contents and implements the respective\n\t\t// actions below\n\t\t\n\t\t// Defines the function to be executed when the\n\t\t// OK button is pressed in the dialog\n\t\tvar okFunction = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Hides the dialog\n\t\t\tthis.hideProperties();\n\t\t\t\n\t\t\t// Supports undo for the changes on the underlying\n\t\t\t// XML structure / XML node attribute changes.\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tgeo.x = parseFloat(xField.value);\n\t\t\t\t\tgeo.y = parseFloat(yField.value);\n\t\t\t\t\tgeo.width = parseFloat(widthField.value);\n\t\t\t\t\tgeo.height = parseFloat(heightField.value);\n\t\t\t\t\t\n\t\t\t\t\tmodel.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Applies the style\n\t\t\t\tif (style.value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tmodel.setStyle(cell, style.value);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmodel.setStyle(cell, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Creates an undoable change for each\n\t\t\t\t// attribute and executes it using the\n\t\t\t\t// model, which will also make the change\n\t\t\t\t// part of the current transaction\n\t\t\t\tfor (var i=0; i<attrs.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar edit = new mxCellAttributeChange(\n\t\t\t\t\t\tcell, attrs[i].nodeName,\n\t\t\t\t\t\ttexts[i].value);\n\t\t\t\t\tmodel.execute(edit);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Checks if the graph wants cells to \n\t\t\t\t// be automatically sized and updates\n\t\t\t\t// the size as an undoable step if\n\t\t\t\t// the feature is enabled\n\t\t\t\tif (this.graph.isAutoSizeCell(cell))\n\t\t\t\t{\n\t\t\t\t\tthis.graph.updateCellSize(cell);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Defines the function to be executed when the\n\t\t// Cancel button is pressed in the dialog\n\t\tvar cancelFunction = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Hides the dialog\n\t\t\tthis.hideProperties();\n\t\t});\n\t\t\n\t\tform.addButtons(okFunction, cancelFunction);\n\t\t\n\t\treturn form.table;\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: hideProperties\n * \n * Hides the properties dialog.\n */\nmxEditor.prototype.hideProperties = function ()\n{\n\tif (this.properties != null)\n\t{\n\t\tthis.properties.destroy();\n\t\tthis.properties = null;\n\t}\n};\n\n/**\n * Function: showTasks\n * \n * Shows the tasks window. The tasks window is created using <createTasks>. The\n * default width of the window is 200 pixels, the y-coordinate of the location\n * can be specifies in <tasksTop> and the x-coordinate is right aligned with a\n * 20 pixel offset from the right border. To change the location of the tasks\n * window, the following code can be used:\n * \n * (code)\n * var oldShowTasks = mxEditor.prototype.showTasks;\n * mxEditor.prototype.showTasks = function()\n * {\n *   oldShowTasks.apply(this, arguments); // \"supercall\"\n *   \n *   if (this.tasks != null)\n *   {\n *     this.tasks.setLocation(10, 10);\n *   }\n * };\n * (end)\n */\nmxEditor.prototype.showTasks = function ()\n{\n\tif (this.tasks == null)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.padding = '4px';\n\t\tdiv.style.paddingLeft = '20px';\n\t\tvar w = document.body.clientWidth;\n\t\tvar wnd = new mxWindow(\n\t\t\tmxResources.get(this.tasksResource) ||\n\t\t\tthis.tasksResource,\n\t\t\tdiv, w - 220, this.tasksTop, 200);\n\t\twnd.setClosable(true);\n\t\twnd.destroyOnClose = false;\n\t\t\n\t\t// Installs a function to update the contents\n\t\t// of the tasks window on every change of the\n\t\t// model, selection or root.\n\t\tvar funct = mxUtils.bind(this, function(sender)\n\t\t{\n\t\t\tmxEvent.release(div);\n\t\t\tdiv.innerHTML = '';\n\t\t\tthis.createTasks(div);\n\t\t});\n\t\t\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, funct);\n\t\tthis.graph.getSelectionModel().addListener(mxEvent.CHANGE, funct);\n\t\tthis.graph.addListener(mxEvent.ROOT, funct);\n\t\t\n\t\t// Assigns the icon to the tasks window\n\t\tif (this.tasksWindowImage != null)\n\t\t{\n\t\t\twnd.setImage(this.tasksWindowImage);\n\t\t}\n\t\t\n\t\tthis.tasks = wnd;\n\t\tthis.createTasks(div);\n\t}\n\t\n\tthis.tasks.setVisible(true);\n};\n\t\t\n/**\n * Function: refreshTasks\n * \n * Updates the contents of the tasks window using <createTasks>.\n */\nmxEditor.prototype.refreshTasks = function (div)\n{\n\tif (this.tasks != null)\n\t{\n\t\tvar div = this.tasks.content;\n\t\tmxEvent.release(div);\n\t\tdiv.innerHTML = '';\n\t\tthis.createTasks(div);\n\t}\n};\n\t\t\n/**\n * Function: createTasks\n * \n * Updates the contents of the given DOM node to\n * display the tasks associated with the current\n * editor state. This is invoked whenever there\n * is a possible change of state in the editor.\n * Default implementation is empty.\n */\nmxEditor.prototype.createTasks = function (div)\n{\n\t// override\n};\n\t\n/**\n * Function: showHelp\n * \n * Shows the help window. If the help window does not exist\n * then it is created using an iframe pointing to the resource\n * for the <code>urlHelp</code> key or <urlHelp> if the resource\n * is undefined.\n */\nmxEditor.prototype.showHelp = function (tasks)\n{\n\tif (this.help == null)\n\t{\n\t\tvar frame = document.createElement('iframe');\n\t\tframe.setAttribute('src', mxResources.get('urlHelp') || this.urlHelp);\n\t\tframe.setAttribute('height', '100%');\n\t\tframe.setAttribute('width', '100%');\n\t\tframe.setAttribute('frameBorder', '0');\n\t\tframe.style.backgroundColor = 'white';\n\t\n\t\tvar w = document.body.clientWidth;\n\t\tvar h = (document.body.clientHeight || document.documentElement.clientHeight);\n\t\t\n\t\tvar wnd = new mxWindow(mxResources.get(this.helpResource) || this.helpResource,\n\t\t\tframe, (w-this.helpWidth)/2, (h-this.helpHeight)/3, this.helpWidth, this.helpHeight);\n\t\twnd.setMaximizable(true);\n\t\twnd.setClosable(true);\n\t\twnd.destroyOnClose = false;\n\t\twnd.setResizable(true);\n\n\t\t// Assigns the icon to the help window\n\t\tif (this.helpWindowImage != null)\n\t\t{\n\t\t\twnd.setImage(this.helpWindowImage);\n\t\t}\n\t\t\n\t\t// Workaround for ignored iframe height 100% in FF\n\t\tif (mxClient.IS_NS)\n\t\t{\n\t\t\tvar handler = function(sender)\n\t\t\t{\n\t\t\t\tvar h = wnd.div.offsetHeight;\n\t\t\t\tframe.setAttribute('height', (h-26)+'px');\n\t\t\t};\n\t\t\t\n\t\t\twnd.addListener(mxEvent.RESIZE_END, handler);\n\t\t\twnd.addListener(mxEvent.MAXIMIZE, handler);\n\t\t\twnd.addListener(mxEvent.NORMALIZE, handler);\n\t\t\twnd.addListener(mxEvent.SHOW, handler);\n\t\t}\n\t\t\n\t\tthis.help = wnd;\n\t}\n\t\n\tthis.help.setVisible(true);\n};\n\n/**\n * Function: showOutline\n * \n * Shows the outline window. If the window does not exist, then it is\n * created using an <mxOutline>.\n */\nmxEditor.prototype.showOutline = function ()\n{\n\tvar create = this.outline == null;\n\t\n\tif (create)\n\t{\n\t\tvar div = document.createElement('div');\n\t\t\n\t\tdiv.style.overflow = 'hidden';\n\t\tdiv.style.position = 'relative';\n\t\tdiv.style.width = '100%';\n\t\tdiv.style.height = '100%';\n\t\tdiv.style.background = 'white';\n\t\tdiv.style.cursor = 'move';\n\t\t\n\t\tif (document.documentMode == 8)\n\t\t{\n\t\t\tdiv.style.filter = 'progid:DXImageTransform.Microsoft.alpha(opacity=100)';\n\t\t}\n\t\t\n\t\tvar wnd = new mxWindow(\n\t\t\tmxResources.get(this.outlineResource) ||\n\t\t\tthis.outlineResource,\n\t\t\tdiv, 600, 480, 200, 200, false);\n\t\t\t\t\n\t\t// Creates the outline in the specified div\n\t\t// and links it to the existing graph\n\t\tvar outline = new mxOutline(this.graph, div);\t\t\t\n\t\twnd.setClosable(true);\n\t\twnd.setResizable(true);\n\t\twnd.destroyOnClose = false;\n\t\t\n\t\twnd.addListener(mxEvent.RESIZE_END, function()\n\t\t{\n\t\t\toutline.update();\n\t\t});\n\t\t\n\t\tthis.outline = wnd;\n\t\tthis.outline.outline = outline;\n\t}\n\t\n\t// Finally shows the outline\n\tthis.outline.setVisible(true);\n\tthis.outline.outline.update(true);\n};\n\t\t\n/**\n * Function: setMode\n *\n * Puts the graph into the specified mode. The following modenames are\n * supported:\n * \n * select - Selects using the left mouse button, new connections\n * are disabled.\n * connect - Selects using the left mouse button or creates new\n * connections if mouse over cell hotspot. See <mxConnectionHandler>.\n * pan - Pans using the left mouse button, new connections are disabled.\n */\nmxEditor.prototype.setMode = function(modename)\n{\n\tif (modename == 'select')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = false;\n\t\tthis.graph.setConnectable(false);\n\t}\n\telse if (modename == 'connect')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = false;\n\t\tthis.graph.setConnectable(true);\n\t}\n\telse if (modename == 'pan')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = true;\n\t\tthis.graph.setConnectable(false);\n\t}\n};\n\n/**\n * Function: createPopupMenu\n * \n * Uses <popupHandler> to create the menu in the graph's\n * panning handler. The redirection is setup in\n * <setToolbarContainer>.\n */\nmxEditor.prototype.createPopupMenu = function (menu, cell, evt)\n{\n\tthis.popupHandler.createMenu(this, menu, cell, evt);\n};\n\n/**\n * Function: createEdge\n * \n * Uses <defaultEdge> as the prototype for creating new edges\n * in the connection handler of the graph. The style of the\n * edge will be overridden with the value returned by\n * <getEdgeStyle>.\n */\nmxEditor.prototype.createEdge = function (source, target)\n{\n\t// Clones the defaultedge prototype\n\tvar e = null;\n\t\n\tif (this.defaultEdge != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\te = model.cloneCell(this.defaultEdge);\n\t}\n\telse\n\t{\n\t\te = new mxCell('');\n\t\te.setEdge(true);\n\t\t\n\t\tvar geo = new mxGeometry();\n\t\tgeo.relative = true;\n\t\te.setGeometry(geo);\n\t}\n\t\n\t// Overrides the edge style\n\tvar style = this.getEdgeStyle();\n\t\n\tif (style != null)\n\t{\n\t\te.setStyle(style);\n\t}\n\t\n\treturn e;\n};\n\n/**\n * Function: getEdgeStyle\n * \n * Returns a string identifying the style of new edges.\n * The function is used in <createEdge> when new edges\n * are created in the graph.\n */\nmxEditor.prototype.getEdgeStyle = function ()\n{\n\treturn this.defaultEdgeStyle;\n};\n\n/**\n * Function: consumeCycleAttribute\n * \n * Returns the next attribute in <cycleAttributeValues>\n * or null, if not attribute should be used in the\n * specified cell.\n */\nmxEditor.prototype.consumeCycleAttribute = function (cell)\n{\n\treturn (this.cycleAttributeValues != null &&\n\t\tthis.cycleAttributeValues.length > 0 &&\n\t\tthis.graph.isSwimlane(cell)) ?\n\t\tthis.cycleAttributeValues[this.cycleAttributeIndex++ %\n\t\t\tthis.cycleAttributeValues.length] : null;\n};\n\n/**\n * Function: cycleAttribute\n * \n * Uses the returned value from <consumeCycleAttribute>\n * as the value for the <cycleAttributeName> key in\n * the given cell's style.\n */\nmxEditor.prototype.cycleAttribute = function (cell)\n{\n\tif (this.cycleAttributeName != null)\n\t{\n\t\tvar value = this.consumeCycleAttribute(cell);\n\t\t\n\t\tif (value != null)\n\t\t{\n\t\t\tcell.setStyle(cell.getStyle()+';'+\n\t\t\t\tthis.cycleAttributeName+'='+value);\n\t\t}\n\t}\n};\n\n/**\n * Function: addVertex\n * \n * Adds the given vertex as a child of parent at the specified\n * x and y coordinate and fires an <addVertex> event.\n */\nmxEditor.prototype.addVertex = function (parent, vertex, x, y)\n{\n\tvar model = this.graph.getModel();\n\t\n\twhile (parent != null && !this.graph.isValidDropTarget(parent))\n\t{\n\t\tparent = model.getParent(parent);\n\t}\n\t\n\tparent = (parent != null) ? parent : this.graph.getSwimlaneAt(x, y);\n\tvar scale = this.graph.getView().scale;\n\t\n\tvar geo = model.getGeometry(vertex);\n\tvar pgeo = model.getGeometry(parent);\n\t\n\tif (this.graph.isSwimlane(vertex) &&\n\t\t!this.graph.swimlaneNesting)\n\t{\n\t\tparent = null;\n\t}\n\telse if (parent == null && this.swimlaneRequired)\n\t{\n\t\treturn null;\n\t}\n\telse if (parent != null && pgeo != null)\n\t{\n\t\t// Keeps vertex inside parent\n\t\tvar state = this.graph.getView().getState(parent);\n\t\t\n\t\tif (state != null)\n\t\t{\t\t\t\n\t\t\tx -= state.origin.x * scale;\n\t\t\ty -= state.origin.y * scale;\n\t\t\t\n\t\t\tif (this.graph.isConstrainedMoving)\n\t\t\t{\n\t\t\t\tvar width = geo.width;\n\t\t\t\tvar height = geo.height;\t\t\t\t\n\t\t\t\tvar tmp = state.x+state.width;\n\t\t\t\t\n\t\t\t\tif (x+width > tmp)\n\t\t\t\t{\n\t\t\t\t\tx -= x+width - tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp = state.y+state.height;\n\t\t\t\t\n\t\t\t\tif (y+height > tmp)\n\t\t\t\t{\n\t\t\t\t\ty -= y+height - tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (pgeo != null)\n\t\t{\n\t\t\tx -= pgeo.x*scale;\n\t\t\ty -= pgeo.y*scale;\n\t\t}\n\t}\n\t\n\tgeo = geo.clone();\n\tgeo.x = this.graph.snap(x / scale -\n\t\tthis.graph.getView().translate.x -\n\t\tthis.graph.gridSize/2);\n\tgeo.y = this.graph.snap(y / scale -\n\t\tthis.graph.getView().translate.y -\n\t\tthis.graph.gridSize/2);\n\tvertex.setGeometry(geo);\n\t\n\tif (parent == null)\n\t{\n\t\tparent = this.graph.getDefaultParent();\n\t}\n\n\tthis.cycleAttribute(vertex);\n\tthis.fireEvent(new mxEventObject(mxEvent.BEFORE_ADD_VERTEX,\n\t\t\t'vertex', vertex, 'parent', parent));\n\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvertex = this.graph.addCell(vertex, parent);\n\t\t\n\t\tif (vertex != null)\n\t\t{\n\t\t\tthis.graph.constrainChild(vertex);\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD_VERTEX, 'vertex', vertex));\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\tif (vertex != null)\n\t{\n\t\tthis.graph.setSelectionCell(vertex);\n\t\tthis.graph.scrollCellToVisible(vertex);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.AFTER_ADD_VERTEX, 'vertex', vertex));\n\t}\n\t\n\treturn vertex;\n};\n\n/**\n * Function: destroy\n * \n * Removes the editor and all its associated resources. This does not\n * normally need to be called, it is called automatically when the window\n * unloads.\n */\nmxEditor.prototype.destroy = function ()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\n\t\tif (this.tasks != null)\n\t\t{\n\t\t\tthis.tasks.destroy();\n\t\t}\n\t\t\n\t\tif (this.outline != null)\n\t\t{\n\t\t\tthis.outline.destroy();\n\t\t}\n\t\t\n\t\tif (this.properties != null)\n\t\t{\n\t\t\tthis.properties.destroy();\n\t\t}\n\t\t\n\t\tif (this.keyHandler != null)\n\t\t{\n\t\t\tthis.keyHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.rubberband != null)\n\t\t{\n\t\t\tthis.rubberband.destroy();\n\t\t}\n\t\t\n\t\tif (this.toolbar != null)\n\t\t{\n\t\t\tthis.toolbar.destroy();\n\t\t}\n\t\t\n\t\tif (this.graph != null)\n\t\t{\n\t\t\tthis.graph.destroy();\n\t\t}\n\t\n\t\tthis.status = null;\n\t\tthis.templates = null;\n\t}\n};\n\n__mxOutput.mxEditor = typeof mxEditor !== 'undefined' ? mxEditor : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxCodecRegistry =\n{\n\t/**\n\t * Class: mxCodecRegistry\n\t *\n\t * Singleton class that acts as a global registry for codecs.\n\t *\n\t * Adding an <mxCodec>:\n\t *\n\t * 1. Define a default codec with a new instance of the \n\t * object to be handled.\n\t *\n\t * (code)\n\t * var codec = new mxObjectCodec(new mxGraphModel());\n\t * (end)\n\t *\n\t * 2. Define the functions required for encoding and decoding\n\t * objects.\n\t *\n\t * (code)\n\t * codec.encode = function(enc, obj) { ... }\n\t * codec.decode = function(dec, node, into) { ... }\n\t * (end)\n\t *\n\t * 3. Register the codec in the <mxCodecRegistry>.\n\t *\n\t * (code)\n\t * mxCodecRegistry.register(codec);\n\t * (end)\n\t *\n\t * <mxObjectCodec.decode> may be used to either create a new \n\t * instance of an object or to configure an existing instance, \n\t * in which case the into argument points to the existing\n\t * object. In this case, we say the codec \"configures\" the\n\t * object.\n\t * \n\t * Variable: codecs\n\t *\n\t * Maps from constructor names to codecs.\n\t */\n\tcodecs: [],\n\t\n\t/**\n\t * Variable: aliases\n\t *\n\t * Maps from classnames to codecnames.\n\t */\n\taliases: [],\n\n\t/**\n\t * Function: register\n\t *\n\t * Registers a new codec and associates the name of the template\n\t * constructor in the codec with the codec object.\n\t *\n\t * Parameters:\n\t *\n\t * codec - <mxObjectCodec> to be registered.\n\t */\n\tregister: function(codec)\n\t{\n\t\tif (codec != null)\n\t\t{\n\t\t\tvar name = codec.getName();\n\t\t\tmxCodecRegistry.codecs[name] = codec;\n\t\t\t\n\t\t\tvar classname = mxUtils.getFunctionName(codec.template.constructor);\n\n\t\t\tif (classname != name)\n\t\t\t{\n\t\t\t\tmxCodecRegistry.addAlias(classname, name);\n\t\t\t}\n\t\t}\n\n\t\treturn codec;\n\t},\n\n\t/**\n\t * Function: addAlias\n\t *\n\t * Adds an alias for mapping a classname to a codecname.\n\t */\n\taddAlias: function(classname, codecname)\n\t{\n\t\tmxCodecRegistry.aliases[classname] = codecname;\n\t},\n\n\t/**\n\t * Function: getCodec\n\t *\n\t * Returns a codec that handles objects that are constructed\n\t * using the given constructor.\n\t *\n\t * Parameters:\n\t *\n\t * ctor - JavaScript constructor function. \n\t */\n\tgetCodec: function(ctor)\n\t{\n\t\tvar codec = null;\n\t\t\n\t\tif (ctor != null)\n\t\t{\n\t\t\tvar name = mxUtils.getFunctionName(ctor);\n\t\t\tvar tmp = mxCodecRegistry.aliases[name];\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tname = tmp;\n\t\t\t}\n\t\t\t\n\t\t\tcodec = mxCodecRegistry.codecs[name];\n\t\t\t\n\t\t\t// Registers a new default codec for the given constructor\n\t\t\t// if no codec has been previously defined.\n\t\t\tif (codec == null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tcodec = new mxObjectCodec(new ctor());\n\t\t\t\t\tmxCodecRegistry.register(codec);\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn codec;\n\t}\n\n};\n\n__mxOutput.mxCodecRegistry = typeof mxCodecRegistry !== 'undefined' ? mxCodecRegistry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCodec\n *\n * XML codec for JavaScript object graphs. See <mxObjectCodec> for a\n * description of the general encoding/decoding scheme. This class uses the\n * codecs registered in <mxCodecRegistry> for encoding/decoding each object.\n * \n * References:\n * \n * In order to resolve references, especially forward references, the mxCodec\n * constructor must be given the document that contains the referenced\n * elements.\n *\n * Examples:\n *\n * The following code is used to encode a graph model.\n *\n * (code)\n * var encoder = new mxCodec();\n * var result = encoder.encode(graph.getModel());\n * var xml = mxUtils.getXml(result);\n * (end)\n * \n * Example:\n * \n * Using the code below, an XML document is decoded into an existing model. The\n * document may be obtained using one of the functions in mxUtils for loading\n * an XML file, eg. <mxUtils.get>, or using <mxUtils.parseXml> for parsing an\n * XML string.\n * \n * (code)\n * var doc = mxUtils.parseXml(xmlString);\n * var codec = new mxCodec(doc);\n * codec.decode(doc.documentElement, graph.getModel());\n * (end)\n * \n * Example:\n * \n * This example demonstrates parsing a list of isolated cells into an existing\n * graph model. Note that the cells do not have a parent reference so they can\n * be added anywhere in the cell hierarchy after parsing.\n * \n * (code)\n * var xml = '<root><mxCell id=\"2\" value=\"Hello,\" vertex=\"1\"><mxGeometry x=\"20\" y=\"20\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell><mxCell id=\"3\" value=\"World!\" vertex=\"1\"><mxGeometry x=\"200\" y=\"150\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell><mxCell id=\"4\" value=\"\" edge=\"1\" source=\"2\" target=\"3\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root>';\n * var doc = mxUtils.parseXml(xml);\n * var codec = new mxCodec(doc);\n * var elt = doc.documentElement.firstChild;\n * var cells = [];\n * \n * while (elt != null)\n * {\n *   cells.push(codec.decode(elt));\n *   elt = elt.nextSibling;\n * }\n * \n * graph.addCells(cells);\n * (end)\n * \n * Example:\n * \n * Using the following code, the selection cells of a graph are encoded and the\n * output is displayed in a dialog box.\n * \n * (code)\n * var enc = new mxCodec();\n * var cells = graph.getSelectionCells();\n * mxUtils.alert(mxUtils.getPrettyXml(enc.encode(cells)));\n * (end)\n * \n * Newlines in the XML can be converted to <br>, in which case a '<br>' argument\n * must be passed to <mxUtils.getXml> as the second argument.\n * \n * Debugging:\n * \n * For debugging I/O you can use the following code to get the sequence of\n * encoded objects:\n * \n * (code)\n * var oldEncode = mxCodec.prototype.encode;\n * mxCodec.prototype.encode = function(obj)\n * {\n *   mxLog.show();\n *   mxLog.debug('mxCodec.encode: obj='+mxUtils.getFunctionName(obj.constructor));\n *   \n *   return oldEncode.apply(this, arguments);\n * };\n * (end)\n * \n * Note that the I/O system adds object codecs for new object automatically. For\n * decoding those objects, the constructor should be written as follows:\n * \n * (code)\n * var MyObj = function(name)\n * {\n *   // ...\n * };\n * (end)\n * \n * Constructor: mxCodec\n *\n * Constructs an XML encoder/decoder for the specified\n * owner document.\n *\n * Parameters:\n *\n * document - Optional XML document that contains the data.\n * If no document is specified then a new document is created\n * using <mxUtils.createXmlDocument>.\n */\nfunction mxCodec(document)\n{\n\tthis.document = document || mxUtils.createXmlDocument();\n\tthis.objects = [];\n};\n\n/**\n * Variable: document\n *\n * The owner document of the codec.\n */\nmxCodec.prototype.document = null;\n\n/**\n * Variable: objects\n *\n * Maps from IDs to objects.\n */\nmxCodec.prototype.objects = null;\n\n/**\n * Variable: elements\n * \n * Lookup table for resolving IDs to elements.\n */\nmxCodec.prototype.elements = null;\n\n/**\n * Variable: encodeDefaults\n *\n * Specifies if default values should be encoded. Default is false.\n */\nmxCodec.prototype.encodeDefaults = false;\n\n\n/**\n * Function: putObject\n * \n * Assoiates the given object with the given ID and returns the given object.\n * \n * Parameters\n * \n * id - ID for the object to be associated with.\n * obj - Object to be associated with the ID.\n */\nmxCodec.prototype.putObject = function(id, obj)\n{\n\tthis.objects[id] = obj;\n\t\n\treturn obj;\n};\n\n/**\n * Function: getObject\n *\n * Returns the decoded object for the element with the specified ID in\n * <document>. If the object is not known then <lookup> is used to find an\n * object. If no object is found, then the element with the respective ID\n * from the document is parsed using <decode>.\n */\nmxCodec.prototype.getObject = function(id)\n{\n\tvar obj = null;\n\n\tif (id != null)\n\t{\n\t\tobj = this.objects[id];\n\t\t\n\t\tif (obj == null)\n\t\t{\n\t\t\tobj = this.lookup(id);\n\t\t\t\n\t\t\tif (obj == null)\n\t\t\t{\n\t\t\t\tvar node = this.getElementById(id);\n\t\t\t\t\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tobj = this.decode(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn obj;\n};\n\n/**\n * Function: lookup\n *\n * Hook for subclassers to implement a custom lookup mechanism for cell IDs.\n * This implementation always returns null.\n *\n * Example:\n *\n * (code)\n * var codec = new mxCodec();\n * codec.lookup = function(id)\n * {\n *   return model.getCell(id);\n * };\n * (end)\n *\n * Parameters:\n *\n * id - ID of the object to be returned.\n */\nmxCodec.prototype.lookup = function(id)\n{\n\treturn null;\n};\n\n/**\n * Function: getElementById\n *\n * Returns the element with the given ID from <document>.\n *\n * Parameters:\n *\n * id - String that contains the ID.\n */\nmxCodec.prototype.getElementById = function(id)\n{\n\tif (this.elements == null)\n\t{\n\t\tthis.elements = new Object();\n\t\t\n\t\tif (this.document.documentElement != null)\n\t\t{\n\t\t\tthis.addElement(this.document.documentElement);\n\t\t}\n\t}\n\t\n\treturn this.elements[id];\n};\n\n/**\n * Function: addElement\n *\n * Adds the given element to <elements> if it has an ID.\n */\nmxCodec.prototype.addElement = function(node)\n{\n\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tvar id = node.getAttribute('id');\n\t\t\n\t\tif (id != null && this.elements[id] == null)\n\t\t{\n\t\t\tthis.elements[id] = node;\n\t\t}\n\t}\n\t\n\tnode = node.firstChild;\n\t\n\twhile (node != null)\n\t{\n\t\tthis.addElement(node);\n\t\tnode = node.nextSibling;\n\t}\n};\n\n/**\n * Function: getId\n *\n * Returns the ID of the specified object. This implementation\n * calls <reference> first and if that returns null handles\n * the object as an <mxCell> by returning their IDs using\n * <mxCell.getId>. If no ID exists for the given cell, then\n * an on-the-fly ID is generated using <mxCellPath.create>.\n *\n * Parameters:\n *\n * obj - Object to return the ID for.\n */\nmxCodec.prototype.getId = function(obj)\n{\n\tvar id = null;\n\t\n\tif (obj != null)\n\t{\n\t\tid = this.reference(obj);\n\t\t\n\t\tif (id == null && obj instanceof mxCell)\n\t\t{\n\t\t\tid = obj.getId();\n\t\t\t\n\t\t\tif (id == null)\n\t\t\t{\n\t\t\t\t// Uses an on-the-fly Id\n\t\t\t\tid = mxCellPath.create(obj);\n\t\t\t\t\n\t\t\t\tif (id.length == 0)\n\t\t\t\t{\n\t\t\t\t\tid = 'root';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn id;\n};\n\n/**\n * Function: reference\n *\n * Hook for subclassers to implement a custom method\n * for retrieving IDs from objects. This implementation\n * always returns null.\n *\n * Example:\n *\n * (code)\n * var codec = new mxCodec();\n * codec.reference = function(obj)\n * {\n *   return obj.getCustomId();\n * };\n * (end)\n *\n * Parameters:\n *\n * obj - Object whose ID should be returned.\n */\nmxCodec.prototype.reference = function(obj)\n{\n\treturn null;\n};\n\n/**\n * Function: encode\n *\n * Encodes the specified object and returns the resulting\n * XML node.\n *\n * Parameters:\n *\n * obj - Object to be encoded. \n */\nmxCodec.prototype.encode = function(obj)\n{\n\tvar node = null;\n\t\n\tif (obj != null && obj.constructor != null)\n\t{\n\t\tvar enc = mxCodecRegistry.getCodec(obj.constructor);\n\t\t\n\t\tif (enc != null)\n\t\t{\n\t\t\tnode = enc.encode(this, obj);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxUtils.isNode(obj))\n\t\t\t{\n\t\t\t\tnode = mxUtils.importNode(this.document, obj, true);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t    \t\tmxLog.warn('mxCodec.encode: No codec for ' + mxUtils.getFunctionName(obj.constructor));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: decode\n *\n * Decodes the given XML node. The optional \"into\"\n * argument specifies an existing object to be\n * used. If no object is given, then a new instance\n * is created using the constructor from the codec.\n *\n * The function returns the passed in object or\n * the new instance if no object was given.\n *\n * Parameters:\n *\n * node - XML node to be decoded.\n * into - Optional object to be decodec into.\n */\nmxCodec.prototype.decode = function(node, into)\n{\n\tvar obj = null;\n\t\n\tif (node != null && node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tvar ctor = null;\n\t\t\n\t\ttry\n\t\t{\n\t\t\tctor = window[node.nodeName];\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\t\t\n\t\tvar dec = mxCodecRegistry.getCodec(ctor);\n\t\t\n\t\tif (dec != null)\n\t\t{\n\t\t\tobj = dec.decode(this, node, into);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobj = node.cloneNode(true);\n\t\t\tobj.removeAttribute('as');\n\t\t}\n\t}\n\t\n\treturn obj;\n};\n\n/**\n * Function: encodeCell\n *\n * Encoding of cell hierarchies is built-into the core, but\n * is a higher-level function that needs to be explicitely\n * used by the respective object encoders (eg. <mxModelCodec>,\n * <mxChildChangeCodec> and <mxRootChangeCodec>). This\n * implementation writes the given cell and its children as a\n * (flat) sequence into the given node. The children are not\n * encoded if the optional includeChildren is false. The\n * function is in charge of adding the result into the\n * given node and has no return value.\n *\n * Parameters:\n *\n * cell - <mxCell> to be encoded.\n * node - Parent XML node to add the encoded cell into.\n * includeChildren - Optional boolean indicating if the\n * function should include all descendents. Default is true. \n */\nmxCodec.prototype.encodeCell = function(cell, node, includeChildren)\n{\n\tnode.appendChild(this.encode(cell));\n\t\n\tif (includeChildren == null || includeChildren)\n\t{\n\t\tvar childCount = cell.getChildCount();\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.encodeCell(cell.getChildAt(i), node);\n\t\t}\n\t}\n};\n\n/**\n * Function: isCellCodec\n * \n * Returns true if the given codec is a cell codec. This uses\n * <mxCellCodec.isCellCodec> to check if the codec is of the\n * given type.\n */\nmxCodec.prototype.isCellCodec = function(codec)\n{\n\tif (codec != null && typeof(codec.isCellCodec) == 'function')\n\t{\n\t\treturn codec.isCellCodec();\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: decodeCell\n *\n * Decodes cells that have been encoded using inversion, ie.\n * where the user object is the enclosing node in the XML,\n * and restores the group and graph structure in the cells.\n * Returns a new <mxCell> instance that represents the\n * given node.\n *\n * Parameters:\n *\n * node - XML node that contains the cell data.\n * restoreStructures - Optional boolean indicating whether\n * the graph structure should be restored by calling insert\n * and insertEdge on the parent and terminals, respectively.\n * Default is true.\n */\nmxCodec.prototype.decodeCell = function(node, restoreStructures)\n{\n\trestoreStructures = (restoreStructures != null) ? restoreStructures : true;\n\tvar cell = null;\n\t\n\tif (node != null && node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\t// Tries to find a codec for the given node name. If that does\n\t\t// not return a codec then the node is the user object (an XML node\n\t\t// that contains the mxCell, aka inversion).\n\t\tvar decoder = mxCodecRegistry.getCodec(node.nodeName);\n\t\t\n\t\t// Tries to find the codec for the cell inside the user object.\n\t\t// This assumes all node names inside the user object are either\n\t\t// not registered or they correspond to a class for cells.\n\t\tif (!this.isCellCodec(decoder))\n\t\t{\n\t\t\tvar child = node.firstChild;\n\t\t\t\n\t\t\twhile (child != null && !this.isCellCodec(decoder))\n\t\t\t{\n\t\t\t\tdecoder = mxCodecRegistry.getCodec(child.nodeName);\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!this.isCellCodec(decoder))\n\t\t{\n\t\t\tdecoder = mxCodecRegistry.getCodec(mxCell);\n\t\t}\n\n\t\tcell = decoder.decode(this, node);\n\t\t\n\t\tif (restoreStructures)\n\t\t{\n\t\t\tthis.insertIntoGraph(cell);\n\t\t}\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: insertIntoGraph\n *\n * Inserts the given cell into its parent and terminal cells.\n */\nmxCodec.prototype.insertIntoGraph = function(cell)\n{\n\tvar parent = cell.parent;\n\tvar source = cell.getTerminal(true);\n\tvar target = cell.getTerminal(false);\n\n\t// Fixes possible inconsistencies during insert into graph\n\tcell.setTerminal(null, false);\n\tcell.setTerminal(null, true);\n\tcell.parent = null;\n\t\n\tif (parent != null)\n\t{\n\t\tparent.insert(cell);\n\t}\n\n\tif (source != null)\n\t{\n\t\tsource.insertEdge(cell, true);\n\t}\n\n\tif (target != null)\n\t{\n\t\ttarget.insertEdge(cell, false);\n\t}\n};\n\n/**\n * Function: setAttribute\n *\n * Sets the attribute on the specified node to value. This is a\n * helper method that makes sure the attribute and value arguments\n * are not null.\n *\n * Parameters:\n *\n * node - XML node to set the attribute for.\n * attributes - Attributename to be set.\n * value - New value of the attribute.\n */\nmxCodec.prototype.setAttribute = function(node, attribute, value)\n{\n\tif (attribute != null && value != null)\n\t{\n\t\tnode.setAttribute(attribute, value);\n\t}\n};\n\n__mxOutput.mxCodec = typeof mxCodec !== 'undefined' ? mxCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxObjectCodec\n *\n * Generic codec for JavaScript objects that implements a mapping between\n * JavaScript objects and XML nodes that maps each field or element to an\n * attribute or child node, and vice versa.\n * \n * Atomic Values:\n * \n * Consider the following example.\n * \n * (code)\n * var obj = new Object();\n * obj.foo = \"Foo\";\n * obj.bar = \"Bar\";\n * (end)\n * \n * This object is encoded into an XML node using the following.\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(obj);\n * (end)\n * \n * The output of the encoding may be viewed using <mxLog> as follows.\n * \n * (code)\n * mxLog.show();\n * mxLog.debug(mxUtils.getPrettyXml(node));\n * (end)\n * \n * Finally, the result of the encoding looks as follows.\n * \n * (code)\n * <Object foo=\"Foo\" bar=\"Bar\"/>\n * (end)\n * \n * In the above output, the foo and bar fields have been mapped to attributes\n * with the same names, and the name of the constructor was used for the\n * nodename.\n * \n * Booleans:\n *\n * Since booleans are numbers in JavaScript, all boolean values are encoded\n * into 1 for true and 0 for false. The decoder also accepts the string true\n * and false for boolean values.\n * \n * Objects:\n * \n * The above scheme is applied to all atomic fields, that is, to all non-object\n * fields of an object. For object fields, a child node is created with a\n * special attribute that contains the fieldname. This special attribute is\n * called \"as\" and hence, as is a reserved word that should not be used for a\n * fieldname.\n * \n * Consider the following example where foo is an object and bar is an atomic\n * property of foo.\n * \n * (code)\n * var obj = {foo: {bar: \"Bar\"}};\n * (end)\n * \n * This will be mapped to the following XML structure by mxObjectCodec.\n * \n * (code)\n * <Object>\n *   <Object bar=\"Bar\" as=\"foo\"/>\n * </Object>\n * (end)\n * \n * In the above output, the inner Object node contains the as-attribute that\n * specifies the fieldname in the enclosing object. That is, the field foo was\n * mapped to a child node with an as-attribute that has the value foo.\n * \n * Arrays:\n * \n * Arrays are special objects that are either associative, in which case each\n * key, value pair is treated like a field where the key is the fieldname, or\n * they are a sequence of atomic values and objects, which is mapped to a\n * sequence of child nodes. For object elements, the above scheme is applied\n * without the use of the special as-attribute for creating each child. For\n * atomic elements, a special add-node is created with the value stored in the\n * value-attribute.\n * \n * For example, the following array contains one atomic value and one object\n * with a field called bar. Furthermore it contains two associative entries\n * called bar with an atomic value, and foo with an object value.\n * \n * (code)\n * var obj = [\"Bar\", {bar: \"Bar\"}];\n * obj[\"bar\"] = \"Bar\";\n * obj[\"foo\"] = {bar: \"Bar\"};\n * (end)\n * \n * This array is represented by the following XML nodes.\n * \n * (code)\n * <Array bar=\"Bar\">\n *   <add value=\"Bar\"/>\n *   <Object bar=\"Bar\"/>\n *   <Object bar=\"Bar\" as=\"foo\"/>\n * </Array>\n * (end)\n * \n * The Array node name is the name of the constructor. The additional\n * as-attribute in the last child contains the key of the associative entry,\n * whereas the second last child is part of the array sequence and does not\n * have an as-attribute.\n * \n * References:\n * \n * Objects may be represented as child nodes or attributes with ID values,\n * which are used to lookup the object in a table within <mxCodec>. The\n * <isReference> function is in charge of deciding if a specific field should\n * be encoded as a reference or not. Its default implementation returns true if\n * the fieldname is in <idrefs>, an array of strings that is used to configure\n * the <mxObjectCodec>.\n * \n * Using this approach, the mapping does not guarantee that the referenced\n * object itself exists in the document. The fields that are encoded as\n * references must be carefully chosen to make sure all referenced objects\n * exist in the document, or may be resolved by some other means if necessary.\n * \n * For example, in the case of the graph model all cells are stored in a tree\n * whose root is referenced by the model's root field. A tree is a structure\n * that is well suited for an XML representation, however, the additional edges\n * in the graph model have a reference to a source and target cell, which are\n * also contained in the tree. To handle this case, the source and target cell\n * of an edge are treated as references, whereas the children are treated as\n * objects. Since all cells are contained in the tree and no edge references a\n * source or target outside the tree, this setup makes sure all referenced\n * objects are contained in the document.\n * \n * In the case of a tree structure we must further avoid infinite recursion by\n * ignoring the parent reference of each child. This is done by returning true\n * in <isExcluded>, whose default implementation uses the array of excluded\n * fieldnames passed to the mxObjectCodec constructor.\n * \n * References are only used for cells in mxGraph. For defining other\n * referencable object types, the codec must be able to work out the ID of an\n * object. This is done by implementing <mxCodec.reference>. For decoding a\n * reference, the XML node with the respective id-attribute is fetched from the\n * document, decoded, and stored in a lookup table for later reference. For\n * looking up external objects, <mxCodec.lookup> may be implemented.\n * \n * Expressions:\n * \n * For decoding JavaScript expressions, the add-node may be used with a text\n * content that contains the JavaScript expression. For example, the following\n * creates a field called foo in the enclosing object and assigns it the value\n * of <mxConstants.ALIGN_LEFT>.\n * \n * (code)\n * <Object>\n *   <add as=\"foo\">mxConstants.ALIGN_LEFT</add>\n * </Object>\n * (end)\n * \n * The resulting object has a field called foo with the value \"left\". Its XML\n * representation looks as follows.\n * \n * (code)\n * <Object foo=\"left\"/>\n * (end)\n * \n * This means the expression is evaluated at decoding time and the result of\n * the evaluation is stored in the respective field. Valid expressions are all\n * JavaScript expressions, including function definitions, which are mapped to\n * functions on the resulting object.\n * \n * Expressions are only evaluated if <allowEval> is true.\n * \n * Constructor: mxObjectCodec\n *\n * Constructs a new codec for the specified template object.\n * The variables in the optional exclude array are ignored by\n * the codec. Variables in the optional idrefs array are\n * turned into references in the XML. The optional mapping\n * may be used to map from variable names to XML attributes.\n * The argument is created as follows:\n *\n * (code)\n * var mapping = new Object();\n * mapping['variableName'] = 'attribute-name';\n * (end)\n *\n * Parameters:\n *\n * template - Prototypical instance of the object to be\n * encoded/decoded.\n * exclude - Optional array of fieldnames to be ignored.\n * idrefs - Optional array of fieldnames to be converted to/from\n * references.\n * mapping - Optional mapping from field- to attributenames.\n */\nfunction mxObjectCodec(template, exclude, idrefs, mapping)\n{\n\tthis.template = template;\n\t\n\tthis.exclude = (exclude != null) ? exclude : [];\n\tthis.idrefs = (idrefs != null) ? idrefs : [];\n\tthis.mapping = (mapping != null) ? mapping : [];\n\t\n\tthis.reverse = new Object();\n\t\n\tfor (var i in this.mapping)\n\t{\n\t\tthis.reverse[this.mapping[i]] = i;\n\t}\n};\n\n/**\n * Variable: allowEval\n *\n * Static global switch that specifies if expressions in arrays are allowed.\n * Default is false. NOTE: Enabling this carries a possible security risk.\n */\nmxObjectCodec.allowEval = false;\n\n/**\n * Variable: template\n *\n * Holds the template object associated with this codec.\n */\nmxObjectCodec.prototype.template = null;\n\n/**\n * Variable: exclude\n *\n * Array containing the variable names that should be\n * ignored by the codec.\n */\nmxObjectCodec.prototype.exclude = null;\n\n/**\n * Variable: idrefs\n *\n * Array containing the variable names that should be\n * turned into or converted from references. See\n * <mxCodec.getId> and <mxCodec.getObject>.\n */\nmxObjectCodec.prototype.idrefs = null;\n\n/**\n * Variable: mapping\n *\n * Maps from from fieldnames to XML attribute names.\n */\nmxObjectCodec.prototype.mapping = null;\n\n/**\n * Variable: reverse\n *\n * Maps from from XML attribute names to fieldnames.\n */\nmxObjectCodec.prototype.reverse = null;\n\n/**\n * Function: getName\n * \n * Returns the name used for the nodenames and lookup of the codec when\n * classes are encoded and nodes are decoded. For classes to work with\n * this the codec registry automatically adds an alias for the classname\n * if that is different than what this returns. The default implementation\n * returns the classname of the template class.\n */\nmxObjectCodec.prototype.getName = function()\n{\n\treturn mxUtils.getFunctionName(this.template.constructor);\n};\n\n/**\n * Function: cloneTemplate\n * \n * Returns a new instance of the template for this codec.\n */\nmxObjectCodec.prototype.cloneTemplate = function()\n{\n\treturn new this.template.constructor();\n};\n\n/**\n * Function: getFieldName\n * \n * Returns the fieldname for the given attributename.\n * Looks up the value in the <reverse> mapping or returns\n * the input if there is no reverse mapping for the\n * given name.\n */\nmxObjectCodec.prototype.getFieldName = function(attributename)\n{\n\tif (attributename != null)\n\t{\n\t\tvar mapped = this.reverse[attributename];\n\t\t\n\t\tif (mapped != null)\n\t\t{\n\t\t\tattributename = mapped;\n\t\t}\n\t}\n\t\n\treturn attributename;\n};\n\n/**\n * Function: getAttributeName\n * \n * Returns the attributename for the given fieldname.\n * Looks up the value in the <mapping> or returns\n * the input if there is no mapping for the\n * given name.\n */\nmxObjectCodec.prototype.getAttributeName = function(fieldname)\n{\n\tif (fieldname != null)\n\t{\n\t\tvar mapped = this.mapping[fieldname];\n\t\t\n\t\tif (mapped != null)\n\t\t{\n\t\t\tfieldname = mapped;\n\t\t}\n\t}\n\t\n\treturn fieldname;\n};\n\n/**\n * Function: isExcluded\n *\n * Returns true if the given attribute is to be ignored by the codec. This\n * implementation returns true if the given fieldname is in <exclude> or\n * if the fieldname equals <mxObjectIdentity.FIELD_NAME>.\n *\n * Parameters:\n *\n * obj - Object instance that contains the field.\n * attr - Fieldname of the field.\n * value - Value of the field.\n * write - Boolean indicating if the field is being encoded or decoded.\n * Write is true if the field is being encoded, else it is being decoded.\n */\nmxObjectCodec.prototype.isExcluded = function(obj, attr, value, write)\n{\n\treturn attr == mxObjectIdentity.FIELD_NAME ||\n\t\tmxUtils.indexOf(this.exclude, attr) >= 0;\n};\n\n/**\n * Function: isReference\n *\n * Returns true if the given fieldname is to be treated\n * as a textual reference (ID). This implementation returns\n * true if the given fieldname is in <idrefs>.\n *\n * Parameters:\n *\n * obj - Object instance that contains the field.\n * attr - Fieldname of the field.\n * value - Value of the field. \n * write - Boolean indicating if the field is being encoded or decoded.\n * Write is true if the field is being encoded, else it is being decoded.\n */\nmxObjectCodec.prototype.isReference = function(obj, attr, value, write)\n{\n\treturn mxUtils.indexOf(this.idrefs, attr) >= 0;\n};\n\n/**\n * Function: encode\n *\n * Encodes the specified object and returns a node\n * representing then given object. Calls <beforeEncode>\n * after creating the node and <afterEncode> with the \n * resulting node after processing.\n *\n * Enc is a reference to the calling encoder. It is used\n * to encode complex objects and create references.\n *\n * This implementation encodes all variables of an\n * object according to the following rules:\n *\n * - If the variable name is in <exclude> then it is ignored.\n * - If the variable name is in <idrefs> then <mxCodec.getId>\n * is used to replace the object with its ID.\n * - The variable name is mapped using <mapping>.\n * - If obj is an array and the variable name is numeric\n * (ie. an index) then it is not encoded.\n * - If the value is an object, then the codec is used to\n * create a child node with the variable name encoded into\n * the \"as\" attribute.\n * - Else, if <encodeDefaults> is true or the value differs\n * from the template value, then ...\n * - ... if obj is not an array, then the value is mapped to\n * an attribute.\n * - ... else if obj is an array, the value is mapped to an\n * add child with a value attribute or a text child node,\n * if the value is a function.\n *\n * If no ID exists for a variable in <idrefs> or if an object\n * cannot be encoded, a warning is issued using <mxLog.warn>.\n *\n * Returns the resulting XML node that represents the given\n * object.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n */\nmxObjectCodec.prototype.encode = function(enc, obj)\n{\n\tvar node = enc.document.createElement(this.getName());\n\t\n\tobj = this.beforeEncode(enc, obj, node);\n\tthis.encodeObject(enc, obj, node);\n\t\n\treturn this.afterEncode(enc, obj, node);\n};\n\t\n/**\n * Function: encodeObject\n *\n * Encodes the value of each member in then given obj into the given node using\n * <encodeValue>.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node that contains the encoded object.\n */\nmxObjectCodec.prototype.encodeObject = function(enc, obj, node)\n{\n\tenc.setAttribute(node, 'id', enc.getId(obj));\n\t\n    for (var i in obj)\n    {\n\t\tvar name = i;\n\t\tvar value = obj[name];\n\t\t\n    \tif (value != null && !this.isExcluded(obj, name, value, true))\n    \t{\n    \t\tif (mxUtils.isInteger(name))\n    \t\t{\n    \t\t\tname = null;\n    \t\t}\n    \t\t\n    \t\tthis.encodeValue(enc, obj, name, value, node);\n    \t}\n    }\n};\n\n/**\n * Function: encodeValue\n * \n * Converts the given value according to the mappings\n * and id-refs in this codec and uses <writeAttribute>\n * to write the attribute into the given node.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object whose property is going to be encoded.\n * name - XML node that contains the encoded object.\n * value - Value of the property to be encoded.\n * node - XML node that contains the encoded object.\n */\nmxObjectCodec.prototype.encodeValue = function(enc, obj, name, value, node)\n{\n\tif (value != null)\n\t{\n\t\tif (this.isReference(obj, name, value, true))\n\t\t{\n\t\t\tvar tmp = enc.getId(value);\n\t\t\t\n\t\t\tif (tmp == null)\n\t\t\t{\n\t\t    \tmxLog.warn('mxObjectCodec.encode: No ID for ' +\n\t\t    \t\tthis.getName() + '.' + name + '=' + value);\n\t\t    \treturn; // exit\n\t\t    }\n\t\t    \n\t\t    value = tmp;\n\t\t}\n\n\t\tvar defaultValue = this.template[name];\n\t\t\n\t\t// Checks if the value is a default value and\n\t\t// the name is correct\n\t\tif (name == null || enc.encodeDefaults || defaultValue != value)\n\t\t{\n\t\t\tname = this.getAttributeName(name);\n\t\t\tthis.writeAttribute(enc, obj, name, value, node);\t\n\t\t}\n\t}\n};\n\n/**\n * Function: writeAttribute\n * \n * Writes the given value into node using <writePrimitiveAttribute>\n * or <writeComplexAttribute> depending on the type of the value.\n */\nmxObjectCodec.prototype.writeAttribute = function(enc, obj, name, value, node)\n{\n\tif (typeof(value) != 'object' /* primitive type */)\n\t{\n\t\tthis.writePrimitiveAttribute(enc, obj, name, value, node);\n\t}\n\telse /* complex type */\n\t{\n\t\tthis.writeComplexAttribute(enc, obj, name, value, node);\n\t}\n};\n\n/**\n * Function: writePrimitiveAttribute\n * \n * Writes the given value as an attribute of the given node.\n */\nmxObjectCodec.prototype.writePrimitiveAttribute = function(enc, obj, name, value, node)\n{\n\tvalue = this.convertAttributeToXml(enc, obj, name, value, node);\n\t\n\tif (name == null)\n\t{\n\t\tvar child = enc.document.createElement('add');\n\t\t\n\t\tif (typeof(value) == 'function')\n\t\t{\n    \t\tchild.appendChild(enc.document.createTextNode(value));\n    \t}\n    \telse\n    \t{\n    \t\tenc.setAttribute(child, 'value', value);\n    \t}\n    \t\n\t\tnode.appendChild(child);\n\t}\n\telse if (typeof(value) != 'function')\n\t{\n    \tenc.setAttribute(node, name, value);\n\t}\t\t\n};\n\t\n/**\n * Function: writeComplexAttribute\n * \n * Writes the given value as a child node of the given node.\n */\nmxObjectCodec.prototype.writeComplexAttribute = function(enc, obj, name, value, node)\n{\n\tvar child = enc.encode(value);\n\t\n\tif (child != null)\n\t{\n\t\tif (name != null)\n\t\t{\n    \t\tchild.setAttribute('as', name);\n    \t}\n    \t\n    \tnode.appendChild(child);\n\t}\n\telse\n\t{\n\t\tmxLog.warn('mxObjectCodec.encode: No node for ' + this.getName() + '.' + name + ': ' + value);\n\t}\n};\n\n/**\n * Function: convertAttributeToXml\n * \n * Converts true to \"1\" and false to \"0\" is <isBooleanAttribute> returns true.\n * All other values are not converted.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Objec to convert the attribute for.\n * name - Name of the attribute to be converted.\n * value - Value to be converted.\n */\nmxObjectCodec.prototype.convertAttributeToXml = function(enc, obj, name, value)\n{\n\t// Makes sure to encode boolean values as numeric values\n\tif (this.isBooleanAttribute(enc, obj, name, value))\n\t{\t\n\t\t// Checks if the value is true (do not use the value as is, because\n\t\t// this would check if the value is not null, so 0 would be true)\n\t\tvalue = (value == true) ? '1' : '0';\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: isBooleanAttribute\n * \n * Returns true if the given object attribute is a boolean value.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Objec to convert the attribute for.\n * name - Name of the attribute to be converted.\n * value - Value of the attribute to be converted.\n */\nmxObjectCodec.prototype.isBooleanAttribute = function(enc, obj, name, value)\n{\n\treturn (typeof(value.length) == 'undefined' && (value == true || value == false));\n};\n\n/**\n * Function: convertAttributeFromXml\n * \n * Converts booleans and numeric values to the respective types. Values are\n * numeric if <isNumericAttribute> returns true.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be converted.\n * obj - Objec to convert the attribute for.\n */\nmxObjectCodec.prototype.convertAttributeFromXml = function(dec, attr, obj)\n{\n\tvar value = attr.value;\n\t\n\tif (this.isNumericAttribute(dec, attr, obj))\n\t{\n\t\tvalue = parseFloat(value);\n\t\t\n\t\tif (isNaN(value))\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: isNumericAttribute\n * \n * Returns true if the given XML attribute is or should be a numeric value.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be converted.\n * obj - Objec to convert the attribute for.\n */\nmxObjectCodec.prototype.isNumericAttribute = function(dec, attr, obj)\n{\n\t// Handles known numeric attributes for generic objects\n\tvar result = (obj.constructor == mxGeometry &&\n\t\t(attr.name == 'x' || attr.name == 'y' ||\n\t\tattr.name == 'width' || attr.name == 'height')) ||\n\t\t(obj.constructor == mxPoint &&\n\t\t(attr.name == 'x' || attr.name == 'y')) ||\n\t\tmxUtils.isNumeric(attr.value);\n\t\n\treturn result;\n};\n\n/**\n * Function: beforeEncode\n *\n * Hook for subclassers to pre-process the object before\n * encoding. This returns the input object. The return\n * value of this function is used in <encode> to perform\n * the default encoding into the given node.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node to encode the object into.\n */\nmxObjectCodec.prototype.beforeEncode = function(enc, obj, node)\n{\n\treturn obj;\n};\n\n/**\n * Function: afterEncode\n *\n * Hook for subclassers to post-process the node\n * for the given object after encoding and return the\n * post-processed node. This implementation returns \n * the input node. The return value of this method\n * is returned to the encoder from <encode>.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node that represents the default encoding.\n */\nmxObjectCodec.prototype.afterEncode = function(enc, obj, node)\n{\n\treturn node;\n};\n\n/**\n * Function: decode\n *\n * Parses the given node into the object or returns a new object\n * representing the given node.\n *\n * Dec is a reference to the calling decoder. It is used to decode\n * complex objects and resolve references.\n *\n * If a node has an id attribute then the object cache is checked for the\n * object. If the object is not yet in the cache then it is constructed\n * using the constructor of <template> and cached in <mxCodec.objects>.\n *\n * This implementation decodes all attributes and childs of a node\n * according to the following rules:\n *\n * - If the variable name is in <exclude> or if the attribute name is \"id\"\n * or \"as\" then it is ignored.\n * - If the variable name is in <idrefs> then <mxCodec.getObject> is used\n * to replace the reference with an object.\n * - The variable name is mapped using a reverse <mapping>.\n * - If the value has a child node, then the codec is used to create a\n * child object with the variable name taken from the \"as\" attribute.\n * - If the object is an array and the variable name is empty then the\n * value or child object is appended to the array.\n * - If an add child has no value or the object is not an array then\n * the child text content is evaluated using <mxUtils.eval>.\n *\n * For add nodes where the object is not an array and the variable name\n * is defined, the default mechanism is used, allowing to override/add\n * methods as follows:\n *\n * (code)\n * <Object>\n *   <add as=\"hello\"><![CDATA[\n *     function(arg1) {\n *       mxUtils.alert('Hello '+arg1);\n *     }\n *   ]]></add>\n * </Object>\n * (end) \n *\n * If no object exists for an ID in <idrefs> a warning is issued\n * using <mxLog.warn>.\n *\n * Returns the resulting object that represents the given XML node\n * or the object given to the method as the into parameter.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * into - Optional objec to encode the node into.\n */\nmxObjectCodec.prototype.decode = function(dec, node, into)\n{\n\tvar id = node.getAttribute('id');\n\tvar obj = dec.objects[id];\n\t\n\tif (obj == null)\n\t{\n\t\tobj = into || this.cloneTemplate();\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tdec.putObject(id, obj);\n\t\t}\n\t}\n\t\n\tnode = this.beforeDecode(dec, node, obj);\n\tthis.decodeNode(dec, node, obj);\n\t\n    return this.afterDecode(dec, node, obj);\n};\t\n\n/**\n * Function: decodeNode\n * \n * Calls <decodeAttributes> and <decodeChildren> for the given node.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeNode = function(dec, node, obj)\n{\n\tif (node != null)\n\t{\n\t\tthis.decodeAttributes(dec, node, obj);\n\t\tthis.decodeChildren(dec, node, obj);\n\t}\n};\n\n/**\n * Function: decodeAttributes\n * \n * Decodes all attributes of the given node using <decodeAttribute>.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeAttributes = function(dec, node, obj)\n{\n\tvar attrs = node.attributes;\n\t\n\tif (attrs != null)\n\t{\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t{\n\t\t\tthis.decodeAttribute(dec, attrs[i], obj);\n\t\t}\n\t}\n};\n\n/**\n * Function: isIgnoredAttribute\n * \n * Returns true if the given attribute should be ignored. This implementation\n * returns true if the attribute name is \"as\" or \"id\".\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be decoded.\n * obj - Objec to encode the attribute into.\n */\t\nmxObjectCodec.prototype.isIgnoredAttribute = function(dec, attr, obj)\n{\n\treturn attr.nodeName == 'as' || attr.nodeName == 'id';\n};\n\n/**\n * Function: decodeAttribute\n * \n * Reads the given attribute into the specified object.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be decoded.\n * obj - Objec to encode the attribute into.\n */\t\nmxObjectCodec.prototype.decodeAttribute = function(dec, attr, obj)\n{\n\tif (!this.isIgnoredAttribute(dec, attr, obj))\n\t{\n\t\tvar name = attr.nodeName;\n\t\t\n\t\t// Converts the string true and false to their boolean values.\n\t\t// This may require an additional check on the obj to see if\n\t\t// the existing field is a boolean value or uninitialized, in\n\t\t// which case we may want to convert true and false to a string.\n\t\tvar value = this.convertAttributeFromXml(dec, attr, obj);\n\t\tvar fieldname = this.getFieldName(name);\n\t\t\n\t\tif (this.isReference(obj, fieldname, value, false))\n\t\t{\n\t\t\tvar tmp = dec.getObject(value);\n\t\t\t\n\t\t\tif (tmp == null)\n\t\t\t{\n\t\t    \tmxLog.warn('mxObjectCodec.decode: No object for ' +\n\t\t    \t\tthis.getName() + '.' + name + '=' + value);\n\t\t    \treturn; // exit\n\t\t    }\n\t\t    \n\t\t    value = tmp;\n\t\t}\n\n\t\tif (!this.isExcluded(obj, name, value, false))\n\t\t{\n\t\t\t//mxLog.debug(mxUtils.getFunctionName(obj.constructor)+'.'+name+'='+value);\n\t\t\tobj[name] = value;\n\t\t}\n\t}\n};\n\n/**\n * Function: decodeChildren\n * \n * Decodes all children of the given node using <decodeChild>.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeChildren = function(dec, node, obj)\n{\n\tvar child = node.firstChild;\n\t\n\twhile (child != null)\n\t{\n\t\tvar tmp = child.nextSibling;\n\t\t\n\t\tif (child.nodeType == mxConstants.NODETYPE_ELEMENT &&\n\t\t\t!this.processInclude(dec, child, obj))\n\t\t{\n\t\t\tthis.decodeChild(dec, child, obj);\n\t\t}\n\t\t\n\t\tchild = tmp;\n\t}\n};\n\n/**\n * Function: decodeChild\n * \n * Reads the specified child into the given object.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * child - XML child element to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeChild = function(dec, child, obj)\n{\n\tvar fieldname = this.getFieldName(child.getAttribute('as'));\n\t\n\tif (fieldname == null || !this.isExcluded(obj, fieldname, child, false))\n\t{\n\t\tvar template = this.getFieldTemplate(obj, fieldname, child);\n\t\tvar value = null;\n\t\t\n\t\tif (child.nodeName == 'add')\n\t\t{\n\t\t\tvalue = child.getAttribute('value');\n\t\t\t\n\t\t\tif (value == null && mxObjectCodec.allowEval)\n\t\t\t{\n\t\t\t\tvalue = mxUtils.eval(mxUtils.getTextContent(child));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvalue = dec.decode(child, template);\n\t\t}\n\n\t\tthis.addObjectValue(obj, fieldname, value, template);\n\t}\n};\n\n/**\n * Function: getFieldTemplate\n * \n * Returns the template instance for the given field. This returns the\n * value of the field, null if the value is an array or an empty collection\n * if the value is a collection. The value is then used to populate the\n * field for a new instance. For strongly typed languages it may be\n * required to override this to return the correct collection instance\n * based on the encoded child.\n */\t\nmxObjectCodec.prototype.getFieldTemplate = function(obj, fieldname, child)\n{\n\tvar template = obj[fieldname];\n\t\n\t// Non-empty arrays are replaced completely\n    if (template instanceof Array && template.length > 0)\n    {\n        template = null;\n    }\n    \n    return template;\n};\n\n/**\n * Function: addObjectValue\n * \n * Sets the decoded child node as a value of the given object. If the\n * object is a map, then the value is added with the given fieldname as a\n * key. If the fieldname is not empty, then setFieldValue is called or\n * else, if the object is a collection, the value is added to the\n * collection. For strongly typed languages it may be required to\n * override this with the correct code to add an entry to an object.\n */\t\nmxObjectCodec.prototype.addObjectValue = function(obj, fieldname, value, template)\n{\n\tif (value != null && value != template)\n\t{\n\t\tif (fieldname != null && fieldname.length > 0)\n\t\t{\n\t\t\tobj[fieldname] = value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobj.push(value);\n\t\t}\n\t\t//mxLog.debug('Decoded '+mxUtils.getFunctionName(obj.constructor)+'.'+fieldname+': '+value);\n\t}\n};\n\n/**\n * Function: processInclude\n *\n * Returns true if the given node is an include directive and\n * executes the include by decoding the XML document. Returns\n * false if the given node is not an include directive.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the encoding/decoding process.\n * node - XML node to be checked.\n * into - Optional object to pass-thru to the codec.\n */\nmxObjectCodec.prototype.processInclude = function(dec, node, into)\n{\n\tif (node.nodeName == 'include')\n\t{\n\t\tvar name = node.getAttribute('name');\n\t\t\n\t\tif (name != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar xml = mxUtils.load(name).getDocumentElement();\n\t\t\t\t\n\t\t\t\tif (xml != null)\n\t\t\t\t{\n\t\t\t\t\tdec.decode(xml, into);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: beforeDecode\n *\n * Hook for subclassers to pre-process the node for\n * the specified object and return the node to be\n * used for further processing by <decode>.\n * The object is created based on the template in the \n * calling method and is never null. This implementation\n * returns the input node. The return value of this\n * function is used in <decode> to perform\n * the default decoding into the given object.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Object to encode the node into.\n */\nmxObjectCodec.prototype.beforeDecode = function(dec, node, obj)\n{\n\treturn node;\n};\n\n/**\n * Function: afterDecode\n *\n * Hook for subclassers to post-process the object after\n * decoding. This implementation returns the given object\n * without any changes. The return value of this method\n * is returned to the decoder from <decode>.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * node - XML node to be decoded.\n * obj - Object that represents the default decoding.\n */\nmxObjectCodec.prototype.afterDecode = function(dec, node, obj)\n{\n\treturn obj;\n};\n\n__mxOutput.mxObjectCodec = typeof mxObjectCodec !== 'undefined' ? mxObjectCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxCellCodec\n\t *\n\t * Codec for <mxCell>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - children\n\t * - edges\n\t * - overlays\n\t * - mxTransient\n\t *\n\t * Reference Fields:\n\t *\n\t * - parent\n\t * - source\n\t * - target\n\t * \n\t * Transient fields can be added using the following code:\n\t * \n\t * mxCodecRegistry.getCodec(mxCell).exclude.push('name_of_field');\n\t * \n\t * To subclass <mxCell>, replace the template and add an alias as\n\t * follows.\n\t * \n\t * (code)\n\t * function CustomCell(value, geometry, style)\n\t * {\n\t *   mxCell.apply(this, arguments);\n\t * }\n\t * \n\t * mxUtils.extend(CustomCell, mxCell);\n\t * \n\t * mxCodecRegistry.getCodec(mxCell).template = new CustomCell();\n\t * mxCodecRegistry.addAlias('CustomCell', 'mxCell');\n\t * (end)\n\t */\n\tvar codec = new mxObjectCodec(new mxCell(),\n\t\t['children', 'edges', 'overlays', 'mxTransient'],\n\t\t['parent', 'source', 'target']);\n\n\t/**\n\t * Function: isCellCodec\n\t *\n\t * Returns true since this is a cell codec.\n\t */\n\tcodec.isCellCodec = function()\n\t{\n\t\treturn true;\n\t};\n\n\t/**\n\t * Overidden to disable conversion of value to number.\n\t */\n\tcodec.isNumericAttribute = function(dec, attr, obj)\n\t{\n\t\treturn attr.nodeName !== 'value' && mxObjectCodec.prototype.isNumericAttribute.apply(this, arguments);\n\t};\n\t\n\t/**\n\t * Function: isExcluded\n\t *\n\t * Excludes user objects that are XML nodes.\n\t */ \n\tcodec.isExcluded = function(obj, attr, value, isWrite)\n\t{\n\t\treturn mxObjectCodec.prototype.isExcluded.apply(this, arguments) ||\n\t\t\t(isWrite && attr == 'value' &&\n\t\t\tvalue.nodeType == mxConstants.NODETYPE_ELEMENT);\n\t};\n\t\n\t/**\n\t * Function: afterEncode\n\t *\n\t * Encodes an <mxCell> and wraps the XML up inside the\n\t * XML of the user object (inversion).\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tif (obj.value != null && obj.value.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Wraps the graphical annotation up in the user object (inversion)\n\t\t\t// by putting the result of the default encoding into a clone of the\n\t\t\t// user object (node type 1) and returning this cloned user object.\n\t\t\tvar tmp = node;\n\t\t\tnode = mxUtils.importNode(enc.document, obj.value, true);\n\t\t\tnode.appendChild(tmp);\n\t\t\t\n\t\t\t// Moves the id attribute to the outermost XML node, namely the\n\t\t\t// node which denotes the object boundaries in the file.\n\t\t\tvar id = tmp.getAttribute('id');\n\t\t\tnode.setAttribute('id', id);\n\t\t\ttmp.removeAttribute('id');\n\t\t}\n\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes an <mxCell> and uses the enclosing XML node as\n\t * the user object for the cell (inversion).\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tvar inner = node.cloneNode(true);\n\t\tvar classname = this.getName();\n\t\t\n\t\tif (node.nodeName != classname)\n\t\t{\n\t\t\t// Passes the inner graphical annotation node to the\n\t\t\t// object codec for further processing of the cell.\n\t\t\tvar tmp = node.getElementsByTagName(classname)[0];\n\t\t\t\n\t\t\tif (tmp != null && tmp.parentNode == node)\n\t\t\t{\n\t\t\t\tmxUtils.removeWhitespace(tmp, true);\n\t\t\t\tmxUtils.removeWhitespace(tmp, false);\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\tinner = tmp;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinner = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Creates the user object out of the XML node\n\t\t\tobj.value = node.cloneNode(true);\n\t\t\tvar id = obj.value.getAttribute('id');\n\t\t\t\n\t\t\tif (id != null)\n\t\t\t{\n\t\t\t\tobj.setId(id);\n\t\t\t\tobj.value.removeAttribute('id');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Uses ID from XML file as ID for cell in model\n\t\t\tobj.setId(node.getAttribute('id'));\n\t\t}\n\t\t\t\n\t\t// Preprocesses and removes all Id-references in order to use the\n\t\t// correct encoder (this) for the known references to cells (all).\n\t\tif (inner != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.idrefs.length; i++)\n\t\t\t{\n\t\t\t\tvar attr = this.idrefs[i];\n\t\t\t\tvar ref = inner.getAttribute(attr);\n\t\t\t\t\n\t\t\t\tif (ref != null)\n\t\t\t\t{\n\t\t\t\t\tinner.removeAttribute(attr);\n\t\t\t\t\tvar object = dec.objects[ref] || dec.lookup(ref);\n\t\t\t\t\t\n\t\t\t\t\tif (object == null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Needs to decode forward reference\n\t\t\t\t\t\tvar element = dec.getElementById(ref);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (element != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar decoder = mxCodecRegistry.codecs[element.nodeName] || this;\n\t\t\t\t\t\t\tobject = decoder.decode(dec, element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj[attr] = object;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn inner;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxCellCodec = typeof mxCellCodec !== 'undefined' ? mxCellCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxModelCodec\n\t *\n\t * Codec for <mxGraphModel>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t */\n\tvar codec = new mxObjectCodec(new mxGraphModel());\n\n\t/**\n\t * Function: encodeObject\n\t *\n\t * Encodes the given <mxGraphModel> by writing a (flat) XML sequence of\n\t * cell nodes as produced by the <mxCellCodec>. The sequence is\n\t * wrapped-up in a node with the name root.\n\t */\n\tcodec.encodeObject = function(enc, obj, node)\n\t{\n\t\tvar rootNode = enc.document.createElement('root');\n\t\tenc.encodeCell(obj.getRoot(), rootNode);\n\t\tnode.appendChild(rootNode);\n\t};\n\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'root')\n\t\t{\n\t\t\tthis.decodeRoot(dec, child, obj);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t\t}\n\t};\n\n\t/**\n\t * Function: decodeRoot\n\t *\n\t * Reads the cells into the graph model. All cells\n\t * are children of the root element in the node.\n\t */\n\tcodec.decodeRoot = function(dec, root, model)\n\t{\n\t\tvar rootCell = null;\n\t\tvar tmp = root.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tvar cell = dec.decodeCell(tmp);\n\t\t\t\n\t\t\tif (cell != null && cell.getParent() == null)\n\t\t\t{\n\t\t\t\trootCell = cell;\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\n\t\t// Sets the root on the model if one has been decoded\n\t\tif (rootCell != null)\n\t\t{\n\t\t\tmodel.setRoot(rootCell);\n\t\t}\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxModelCodec = typeof mxModelCodec !== 'undefined' ? mxModelCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxRootChangeCodec\n\t *\n\t * Codec for <mxRootChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t * - root\n\t */\n\tvar codec = new mxObjectCodec(new mxRootChange(),\n\t\t['model', 'previous', 'root']);\n\n\t/**\n\t * Function: onEncode\n\t *\n\t * Encodes the child recursively.\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tenc.encodeCell(obj.root, node);\n\t\t\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the optional children as cells\n\t * using the respective decoder.\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tif (node.firstChild != null &&\n\t\t\tnode.firstChild.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Makes sure the original node isn't modified\n\t\t\tnode = node.cloneNode(true);\n\t\t\t\n\t\t\tvar tmp = node.firstChild;\n\t\t\tobj.root = dec.decodeCell(tmp, false);\n\n\t\t\tvar tmp2 = tmp.nextSibling;\n\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\ttmp = tmp2;\n\t\t\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\ttmp2 = tmp.nextSibling;\n\t\t\t\tdec.decodeCell(tmp);\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\ttmp = tmp2;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\t\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\tobj.previous = obj.root;\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxRootChangeCodec = typeof mxRootChangeCodec !== 'undefined' ? mxRootChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxChildChangeCodec\n\t *\n\t * Codec for <mxChildChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t * - previousIndex\n\t * - child\n\t *\n\t * Reference Fields:\n\t *\n\t * - parent\n\t */\n\tvar codec = new mxObjectCodec(new mxChildChange(),\n\t\t['model', 'child', 'previousIndex'],\n\t\t['parent', 'previous']);\n\n\t/**\n\t * Function: isReference\n\t *\n\t * Returns true for the child attribute if the child\n\t * cell had a previous parent or if we're reading the\n\t * child as an attribute rather than a child node, in\n\t * which case it's always a reference.\n\t */\n\tcodec.isReference = function(obj, attr, value, isWrite)\n\t{\n\t\tif (attr == 'child' && (obj.previous != null || !isWrite))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn mxUtils.indexOf(this.idrefs, attr) >= 0;\n\t};\n\n\t/**\n\t * Function: afterEncode\n\t *\n\t * Encodes the child recusively and adds the result\n\t * to the given node.\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tif (this.isReference(obj, 'child',  obj.child, true))\n\t\t{\n\t\t\t// Encodes as reference (id)\n\t\t\tnode.setAttribute('child', enc.getId(obj.child));\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// At this point, the encoder is no longer able to know which cells\n\t\t\t// are new, so we have to encode the complete cell hierarchy and\n\t\t\t// ignore the ones that are already there at decoding time. Note:\n\t\t\t// This can only be resolved by moving the notify event into the\n\t\t\t// execute of the edit.\n\t\t\tenc.encodeCell(obj.child, node);\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the any child nodes as using the respective\n\t * codec from the registry.\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tif (node.firstChild != null &&\n\t\t\tnode.firstChild.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Makes sure the original node isn't modified\n\t\t\tnode = node.cloneNode(true);\n\t\t\t\n\t\t\tvar tmp = node.firstChild;\n\t\t\tobj.child = dec.decodeCell(tmp, false);\n\n\t\t\tvar tmp2 = tmp.nextSibling;\n\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\ttmp = tmp2;\n\t\t\t\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\ttmp2 = tmp.nextSibling;\n\t\t\t\t\n\t\t\t\tif (tmp.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\t// Ignores all existing cells because those do not need to\n\t\t\t\t\t// be re-inserted into the model. Since the encoded version\n\t\t\t\t\t// of these cells contains the new parent, this would leave\n\t\t\t\t\t// to an inconsistent state on the model (ie. a parent\n\t\t\t\t\t// change without a call to parentForCellChanged).\n\t\t\t\t\tvar id = tmp.getAttribute('id');\n\t\t\t\t\t\n\t\t\t\t\tif (dec.lookup(id) == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tdec.decodeCell(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\ttmp = tmp2;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar childRef = node.getAttribute('child');\n\t\t\tobj.child = dec.getObject(childRef);\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\t\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores object state in the child change.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Cells are encoded here after a complete transaction so the previous\n\t\t// parent must be restored on the cell for the case where the cell was\n\t\t// added. This is needed for the local model to identify the cell as a\n\t\t// new cell and register the ID.\n        if (obj.child != null)\n        {\n            if (obj.child.parent != null && obj.previous != null &&\n                obj.child.parent != obj.previous)\n            {\n            \t\n                obj.previous = obj.child.parent;\n            }\n\n            obj.child.parent = obj.previous;\n            obj.previous = obj.parent;\n            obj.previousIndex = obj.index;\n        }\n\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxChildChangeCodec = typeof mxChildChangeCodec !== 'undefined' ? mxChildChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxTerminalChangeCodec\n\t *\n\t * Codec for <mxTerminalChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t *\n\t * Reference Fields:\n\t *\n\t * - cell\n\t * - terminal\n\t */\n\tvar codec = new mxObjectCodec(new mxTerminalChange(),\n\t\t['model', 'previous'], ['cell', 'terminal']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\tobj.previous = obj.terminal;\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxTerminalChangeCodec = typeof mxTerminalChangeCodec !== 'undefined' ? mxTerminalChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGenericChangeCodec\n *\n * Codec for <mxValueChange>s, <mxStyleChange>s, <mxGeometryChange>s,\n * <mxCollapseChange>s and <mxVisibleChange>s. This class is created\n * and registered dynamically at load time and used implicitely\n * via <mxCodec> and the <mxCodecRegistry>.\n *\n * Transient Fields:\n *\n * - model\n * - previous\n *\n * Reference Fields:\n *\n * - cell\n * \n * Constructor: mxGenericChangeCodec\n *\n * Factory function that creates a <mxObjectCodec> for\n * the specified change and fieldname.\n *\n * Parameters:\n *\n * obj - An instance of the change object.\n * variable - The fieldname for the change data.\n */\nvar mxGenericChangeCodec = function(obj, variable)\n{\n\tvar codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t};\n\t\n\treturn codec;\n};\n\n// Registers the codecs\nmxCodecRegistry.register(mxGenericChangeCodec(new mxValueChange(), 'value'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxStyleChange(), 'style'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxGeometryChange(), 'geometry'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCollapseChange(), 'collapsed'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxVisibleChange(), 'visible'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCellAttributeChange(), 'value'));\n\n__mxOutput.mxGenericChangeCodec = typeof mxGenericChangeCodec !== 'undefined' ? mxGenericChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxGraphCodec\n\t *\n\t * Codec for <mxGraph>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - graphListeners\n\t * - eventListeners\n\t * - view\n\t * - container\n\t * - cellRenderer\n\t * - editor\n\t * - selection\n\t */\n\treturn new mxObjectCodec(new mxGraph(),\n\t\t['graphListeners', 'eventListeners', 'view', 'container',\n\t\t'cellRenderer', 'editor', 'selection']);\n\n}());\n\n__mxOutput.mxGraphCodec = typeof mxGraphCodec !== 'undefined' ? mxGraphCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxGraphViewCodec\n\t *\n\t * Custom encoder for <mxGraphView>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only writes views\n\t * into a XML format that can be used to create an image for\n\t * the graph, that is, it contains absolute coordinates with\n\t * computed perimeters, edge styles and cell styles.\n\t */\n\tvar codec = new mxObjectCodec(new mxGraphView());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Encodes the given <mxGraphView> using <encodeCell>\n\t * starting at the model's root. This returns the\n\t * top-level graph node of the recursive encoding.\n\t */\n\tcodec.encode = function(enc, view)\n\t{\n\t\treturn this.encodeCell(enc, view,\n\t\t\tview.graph.getModel().getRoot());\n\t};\n\n\t/**\n\t * Function: encodeCell\n\t *\n\t * Recursively encodes the specifed cell. Uses layer\n\t * as the default nodename. If the cell's parent is\n\t * null, then graph is used for the nodename. If\n\t * <mxGraphModel.isEdge> returns true for the cell,\n\t * then edge is used for the nodename, else if\n\t * <mxGraphModel.isVertex> returns true for the cell,\n\t * then vertex is used for the nodename.\n\t *\n\t * <mxGraph.getLabel> is used to create the label\n\t * attribute for the cell. For graph nodes and vertices\n\t * the bounds are encoded into x, y, width and height.\n\t * For edges the points are encoded into a points\n\t * attribute as a space-separated list of comma-separated\n\t * coordinate pairs (eg. x0,y0 x1,y1 ... xn,yn). All\n\t * values from the cell style are added as attribute\n\t * values to the node. \n\t */\n\tcodec.encodeCell = function(enc, view, cell)\n\t{\n\t\tvar model = view.graph.getModel();\n\t\tvar state = view.getState(cell);\n\t\tvar parent = model.getParent(cell);\n\t\t\n\t\tif (parent == null || state != null)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\tvar geo = view.graph.getCellGeometry(cell);\n\t\t\tvar name = null;\n\t\t\t\n\t\t\tif (parent == model.getRoot())\n\t\t\t{\n\t\t\t\tname = 'layer';\n\t\t\t}\n\t\t\telse if (parent == null)\n\t\t\t{\n\t\t\t\tname = 'graph';\n\t\t\t}\n\t\t\telse if (model.isEdge(cell))\n\t\t\t{\n\t\t\t\tname = 'edge';\n\t\t\t}\n\t\t\telse if (childCount > 0 && geo != null)\n\t\t\t{\n\t\t\t\tname = 'group';\n\t\t\t}\n\t\t\telse if (model.isVertex(cell))\n\t\t\t{\n\t\t\t\tname = 'vertex';\n\t\t\t}\n\t\t\t\n\t\t\tif (name != null)\n\t\t\t{\n\t\t\t\tvar node = enc.document.createElement(name);\n\t\t\t\tvar lab = view.graph.getLabel(cell);\n\t\t\t\t\n\t\t\t\tif (lab != null)\n\t\t\t\t{\n\t\t\t\t\tnode.setAttribute('label', view.graph.getLabel(cell));\n\t\t\t\t\t\n\t\t\t\t\tif (view.graph.isHtmlLabel(cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('html', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tif (parent == null)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = view.getGraphBounds();\n\t\t\t\t\t\n\t\t\t\t\tif (bounds != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('x', Math.round(bounds.x));\n\t\t\t\t\t\tnode.setAttribute('y', Math.round(bounds.y));\n\t\t\t\t\t\tnode.setAttribute('width', Math.round(bounds.width));\n\t\t\t\t\t\tnode.setAttribute('height', Math.round(bounds.height));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnode.setAttribute('scale', view.scale);\n\t\t\t\t}\n\t\t\t\telse if (state != null && geo != null)\n\t\t\t\t{\n\t\t\t\t\t// Writes each key, value in the style pair to an attribute\n\t\t\t\t    for (var i in state.style)\n\t\t\t\t    {\n\t\t\t\t    \tvar value = state.style[i];\n\t\t\n\t\t\t\t    \t// Tries to turn objects and functions into strings\n\t\t\t\t\t    if (typeof(value) == 'function' &&\n\t\t\t\t\t\t\ttypeof(value) == 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t    \tvalue = mxStyleRegistry.getName(value);\n\t\t\t\t        }\n\t\t\t\t    \t\n\t\t\t\t    \tif (value != null &&\n\t\t\t\t    \t\ttypeof(value) != 'function' &&\n\t\t\t\t\t\t\ttypeof(value) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute(i, value);\n\t\t\t\t        }\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t\tvar abs = state.absolutePoints;\n\t\t\t\t\t\n\t\t\t\t\t// Writes the list of points into one attribute\n\t\t\t\t\tif (abs != null && abs.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pts = Math.round(abs[0].x) + ',' + Math.round(abs[0].y);\n\t\t\n\t\t\t\t\t\tfor (var i=1; i<abs.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpts += ' ' + Math.round(abs[i].x) + ',' +\n\t\t\t\t\t\t\t\tMath.round(abs[i].y);\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tnode.setAttribute('points', pts);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Writes the bounds into 4 attributes\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('x', Math.round(state.x));\n\t\t\t\t\t\tnode.setAttribute('y', Math.round(state.y));\n\t\t\t\t\t\tnode.setAttribute('width', Math.round(state.width));\n\t\t\t\t\t\tnode.setAttribute('height', Math.round(state.height));\t\t\t\t\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tvar offset = state.absoluteOffset;\n\t\t\t\t\t\n\t\t\t\t\t// Writes the offset into 2 attributes\n\t\t\t\t\tif (offset != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (offset.x != 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute('dx', Math.round(offset.x));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (offset.y != 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute('dy', Math.round(offset.y));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tfor (var i=0; i<childCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar childNode = this.encodeCell(enc,\n\t\t\t\t\t\t\tview, model.getChildAt(cell, i));\n\t\t\t\t\t\n\t\t\t\t\tif (childNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxGraphViewCodec = typeof mxGraphViewCodec !== 'undefined' ? mxGraphViewCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStylesheetCodec\n *\n * Codec for <mxStylesheet>s. This class is created and registered\n * dynamically at load time and used implicitely via <mxCodec>\n * and the <mxCodecRegistry>.\n */\nvar mxStylesheetCodec = mxCodecRegistry.register(function()\n{\n\tvar codec = new mxObjectCodec(new mxStylesheet());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Encodes a stylesheet. See <decode> for a description of the\n\t * format.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\tvar node = enc.document.createElement(this.getName());\n\t\t\n\t\tfor (var i in obj.styles)\n\t\t{\n\t\t\tvar style = obj.styles[i];\n\t\t\tvar styleNode = enc.document.createElement('add');\n\t\t\t\n\t\t\tif (i != null)\n\t\t\t{\n\t\t\t\tstyleNode.setAttribute('as', i);\n\t\t\t\t\n\t\t\t\tfor (var j in style)\n\t\t\t\t{\n\t\t\t\t\tvar value = this.getStringValue(j, style[j]);\n\t\t\t\t\t\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar entry = enc.document.createElement('add');\n\t\t\t\t\t\tentry.setAttribute('value', value);\n\t\t\t\t\t\tentry.setAttribute('as', j);\n\t\t\t\t\t\tstyleNode.appendChild(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (styleNode.childNodes.length > 0)\n\t\t\t\t{\n\t\t\t\t\tnode.appendChild(styleNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t    return node;\n\t};\n\n\t/**\n\t * Function: getStringValue\n\t *\n\t * Returns the string for encoding the given value.\n\t */\n\tcodec.getStringValue = function(key, value)\n\t{\n\t\tvar type = typeof(value);\n\t\t\n\t\tif (type == 'function')\n\t\t{\n\t\t\tvalue = mxStyleRegistry.getName(style[j]);\n\t\t}\n\t\telse if (type == 'object')\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\treturn value;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Adds a new style.\n\t *\n\t * Attributes:\n\t *\n\t * as - Name of the style.\n\t * extend - Name of the style to inherit from.\n\t *\n\t * Each node contains another sequence of add and remove nodes with the following\n\t * attributes:\n\t *\n\t * as - Name of the style (see <mxConstants>).\n\t * value - Value for the style.\n\t *\n\t * Instead of the value-attribute, one can put Javascript expressions into\n\t * the node as follows if <mxStylesheetCodec.allowEval> is true:\n\t * <add as=\"perimeter\">mxPerimeter.RectanglePerimeter</add>\n\t *\n\t * A remove node will remove the entry with the name given in the as-attribute\n\t * from the style.\n\t * \n\t * Example:\n\t *\n\t * (code)\n\t * <mxStylesheet as=\"stylesheet\">\n\t *   <add as=\"text\">\n\t *     <add as=\"fontSize\" value=\"12\"/>\n\t *   </add>\n\t *   <add as=\"defaultVertex\" extend=\"text\">\n\t *     <add as=\"shape\" value=\"rectangle\"/>\n\t *   </add>\n\t * </mxStylesheet>\n\t * (end)\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tvar obj = into || new this.template.constructor();\n\t\tvar id = node.getAttribute('id');\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tdec.objects[id] = obj;\n\t\t}\n\t\t\n\t\tnode = node.firstChild;\n\t\t\n\t\twhile (node != null)\n\t\t{\n\t\t\tif (!this.processInclude(dec, node, obj) && node.nodeName == 'add')\n\t\t\t{\n\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\n\t\t\t\tif (as != null)\n\t\t\t\t{\n\t\t\t\t\tvar extend = node.getAttribute('extend');\n\t\t\t\t\tvar style = (extend != null) ? mxUtils.clone(obj.styles[extend]) : null;\n\t\t\t\t\t\n\t\t\t\t\tif (style == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (extend != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxLog.warn('mxStylesheetCodec.decode: stylesheet ' +\n\t\t\t\t\t\t\t\textend + ' not found to extend');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tstyle = new Object();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar entry = node.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (entry != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (entry.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t \tvar key = entry.getAttribute('as');\n\t\t\t\t\t\t \t\n\t\t\t\t\t\t \tif (entry.nodeName == 'add')\n\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \tvar text = mxUtils.getTextContent(entry);\n\t\t\t\t\t\t\t \tvar value = null;\n\t\t\t\t\t\t\t \t\n\t\t\t\t\t\t\t \tif (text != null && text.length > 0 && mxStylesheetCodec.allowEval)\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tvalue = mxUtils.eval(text);\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t\t \telse\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tvalue = entry.getAttribute('value');\n\t\t\t\t\t\t\t \t\t\n\t\t\t\t\t\t\t \t\tif (mxUtils.isNumeric(value))\n\t\t\t\t\t\t\t \t\t{\n\t\t\t\t\t\t\t\t\t\tvalue = parseFloat(value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t \t}\n\n\t\t\t\t\t\t\t \tif (value != null)\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tstyle[key] = value;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \telse if (entry.nodeName == 'remove')\n\t\t\t\t\t\t \t{\n\t\t\t\t\t\t \t\tdelete style[key];\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tentry = entry.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj.putCellStyle(as, style);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n/**\n * Variable: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content. Default is true. Set this to false if stylesheets\n * may contain user input.\n */\nmxStylesheetCodec.allowEval = true;\n\n__mxOutput.mxStylesheetCodec = typeof mxStylesheetCodec !== 'undefined' ? mxStylesheetCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxDefaultKeyHandlerCodec\n\t *\n\t * Custom codec for configuring <mxDefaultKeyHandler>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n\t * data for existing key handlers, it does not encode or create key handlers.\n\t */\n\tvar codec = new mxObjectCodec(new mxDefaultKeyHandler());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Binds a keystroke to an actionname.\n\t *\n\t * Attributes:\n\t *\n\t * as - Keycode.\n\t * action - Actionname to execute in editor.\n\t * control - Optional boolean indicating if\n\t * \t\tthe control key must be pressed.\n\t *\n\t * Example:\n\t *\n\t * (code)\n\t * <mxDefaultKeyHandler as=\"keyHandler\">\n\t *   <add as=\"88\" control=\"true\" action=\"cut\"/>\n\t *   <add as=\"67\" control=\"true\" action=\"copy\"/>\n\t *   <add as=\"86\" control=\"true\" action=\"paste\"/>\n\t * </mxDefaultKeyHandler>\n\t * (end)\n\t *\n\t * The keycodes are for the x, c and v keys.\n\t *\n\t * See also: <mxDefaultKeyHandler.bindAction>,\n\t * http://www.js-examples.com/page/tutorials__key_codes.html\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tif (into != null)\n\t\t{\n\t\t\tvar editor = into.editor;\n\t\t\tnode = node.firstChild;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tif (!this.processInclude(dec, node, into) &&\n\t\t\t\t\tnode.nodeName == 'add')\n\t\t\t\t{\n\t\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\tvar action = node.getAttribute('action');\n\t\t\t\t\tvar control = node.getAttribute('control');\n\t\t\t\t\t\n\t\t\t\t\tinto.bindAction(as, action, control);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxDefaultKeyHandlerCodec = typeof mxDefaultKeyHandlerCodec !== 'undefined' ? mxDefaultKeyHandlerCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultToolbarCodec\n *\n * Custom codec for configuring <mxDefaultToolbar>s. This class is created\n * and registered dynamically at load time and used implicitely via\n * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n * data for existing toolbars handlers, it does not encode or create toolbars.\n */\nvar mxDefaultToolbarCodec = mxCodecRegistry.register(function()\n{\n\tvar codec = new mxObjectCodec(new mxDefaultToolbar());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Adds a new item to the toolbar. See below for attributes.\n\t * separator - Adds a vertical separator. No attributes.\n\t * hr - Adds a horizontal separator. No attributes.\n\t * br - Adds a linefeed. No attributes. \n\t *\n\t * Attributes:\n\t *\n\t * as - Resource key for the label.\n\t * action - Name of the action to execute in enclosing editor.\n\t * mode - Modename (see below).\n\t * template - Template name for cell insertion.\n\t * style - Optional style to override the template style.\n\t * icon - Icon (relative/absolute URL).\n\t * pressedIcon - Optional icon for pressed state (relative/absolute URL).\n\t * id - Optional ID to be used for the created DOM element.\n\t * toggle - Optional 0 or 1 to disable toggling of the element. Default is\n\t * 1 (true).\n\t *\n\t * The action, mode and template attributes are mutually exclusive. The\n\t * style can only be used with the template attribute. The add node may\n\t * contain another sequence of add nodes with as and action attributes\n\t * to create a combo box in the toolbar. If the icon is specified then\n\t * a list of the child node is expected to have its template attribute\n\t * set and the action is ignored instead.\n\t * \n\t * Nodes with a specified template may define a function to be used for\n\t * inserting the cloned template into the graph. Here is an example of such\n\t * a node:\n\t * \n\t * (code)\n\t * <add as=\"Swimlane\" template=\"swimlane\" icon=\"images/swimlane.gif\"><![CDATA[\n\t *   function (editor, cell, evt, targetCell)\n\t *   {\n\t *     var pt = mxUtils.convertPoint(\n\t *       editor.graph.container, mxEvent.getClientX(evt),\n\t *         mxEvent.getClientY(evt));\n\t *     return editor.addVertex(targetCell, cell, pt.x, pt.y);\n\t *   }\n\t * ]]></add>\n\t * (end)\n\t * \n\t * In the above function, editor is the enclosing <mxEditor> instance, cell\n\t * is the clone of the template, evt is the mouse event that represents the\n\t * drop and targetCell is the cell under the mousepointer where the drop\n\t * occurred. The targetCell is retrieved using <mxGraph.getCellAt>.\n\t *\n\t * Futhermore, nodes with the mode attribute may define a function to\n\t * be executed upon selection of the respective toolbar icon. In the\n\t * example below, the default edge style is set when this specific\n\t * connect-mode is activated:\n\t *\n\t * (code)\n\t * <add as=\"connect\" mode=\"connect\"><![CDATA[\n\t *   function (editor)\n\t *   {\n\t *     if (editor.defaultEdge != null)\n\t *     {\n\t *       editor.defaultEdge.style = 'straightEdge';\n\t *     }\n\t *   }\n\t * ]]></add>\n\t * (end)\n\t * \n\t * Both functions require <mxDefaultToolbarCodec.allowEval> to be set to true.\n\t *\n\t * Modes:\n\t *\n\t * select - Left mouse button used for rubberband- & cell-selection.\n\t * connect - Allows connecting vertices by inserting new edges.\n\t * pan - Disables selection and switches to panning on the left button.\n\t *\n\t * Example:\n\t *\n\t * To add items to the toolbar:\n\t * \n\t * (code)\n\t * <mxDefaultToolbar as=\"toolbar\">\n\t *   <add as=\"save\" action=\"save\" icon=\"images/save.gif\"/>\n\t *   <br/><hr/>\n\t *   <add as=\"select\" mode=\"select\" icon=\"images/select.gif\"/>\n\t *   <add as=\"connect\" mode=\"connect\" icon=\"images/connect.gif\"/>\n\t * </mxDefaultToolbar>\n\t * (end)\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tif (into != null)\n\t\t{\n\t\t\tvar editor = into.editor;\n\t\t\tnode = node.firstChild;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\tif (!this.processInclude(dec, node, into))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (node.nodeName == 'separator')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.addSeparator();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'br')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.toolbar.addBreak();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'hr')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.toolbar.addLine();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'add')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\t\t\tas = mxResources.get(as) || as;\n\t\t\t\t\t\t\tvar icon = node.getAttribute('icon');\n\t\t\t\t\t\t\tvar pressedIcon = node.getAttribute('pressedIcon');\n\t\t\t\t\t\t\tvar action = node.getAttribute('action');\n\t\t\t\t\t\t\tvar mode = node.getAttribute('mode');\n\t\t\t\t\t\t\tvar template = node.getAttribute('template');\n\t\t\t\t\t\t\tvar toggle = node.getAttribute('toggle') != '0';\n\t\t\t\t\t\t\tvar text = mxUtils.getTextContent(node);\n\t\t\t\t\t\t\tvar elt = null;\n\n\t\t\t\t\t\t\tif (action != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telt = into.addItem(as, icon, action, pressedIcon);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (mode != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar funct = (mxDefaultToolbarCodec.allowEval) ? mxUtils.eval(text) : null;\n\t\t\t\t\t\t\t\telt = into.addMode(as, icon, mode, pressedIcon, funct);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (template != null || (text != null && text.length > 0))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar cell = editor.templates[template];\n\t\t\t\t\t\t\t\tvar style = node.getAttribute('style');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (cell != null && style != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcell = editor.graph.cloneCell(cell);\n\t\t\t\t\t\t\t\t\tcell.setStyle(style);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar insertFunction = null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (text != null && text.length > 0 && mxDefaultToolbarCodec.allowEval)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tinsertFunction = mxUtils.eval(text);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\telt = into.addPrototype(as, icon, cell, pressedIcon, insertFunction, toggle);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar children = mxUtils.getChildNodes(node);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (children.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (icon == null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvar combo = into.addActionCombo(as);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tfor (var i=0; i<children.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (child.nodeName == 'separator')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addOption(combo, '---');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if (child.nodeName == 'add')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar lab = child.getAttribute('as');\n\t\t\t\t\t\t\t\t\t\t\t\tvar act = child.getAttribute('action');\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addActionOption(combo, lab, act);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvar select = null;\n\t\t\t\t\t\t\t\t\t\tvar create = function()\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar template = editor.templates[select.value];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (template != null)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar clone = template.clone();\n\t\t\t\t\t\t\t\t\t\t\t\tvar style = select.options[select.selectedIndex].cellStyle;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif (style != null)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tclone.setStyle(style);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\treturn clone;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tmxLog.warn('Template '+template+' not found');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tvar img = into.addPrototype(as, icon, create, null, null, toggle);\n\t\t\t\t\t\t\t\t\t\tselect = into.addCombo();\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Selects the toolbar icon if a selection change\n\t\t\t\t\t\t\t\t\t\t// is made in the corresponding combobox.\n\t\t\t\t\t\t\t\t\t\tmxEvent.addListener(select, 'change', function()\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tinto.toolbar.selectMode(img, function(evt)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar pt = mxUtils.convertPoint(editor.graph.container,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\treturn editor.addVertex(null, funct(), pt.x, pt.y);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tinto.toolbar.noReset = false;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Adds the entries to the combobox\n\t\t\t\t\t\t\t\t\t\tfor (var i=0; i<children.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (child.nodeName == 'separator')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addOption(select, '---');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if (child.nodeName == 'add')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar lab = child.getAttribute('as');\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = child.getAttribute('template');\n\t\t\t\t\t\t\t\t\t\t\t\tvar option = into.addOption(select, lab, tmp || template);\n\t\t\t\t\t\t\t\t\t\t\t\toption.cellStyle = child.getAttribute('style');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Assigns an ID to the created element to access it later.\n\t\t\t\t\t\t\tif (elt != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar id = node.getAttribute('id');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (id != null && id.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\telt.setAttribute('id', id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n/**\n * Variable: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content. Default is true. Set this to false if stylesheets\n * may contain user input\n */\nmxDefaultToolbarCodec.allowEval = true;\n\n__mxOutput.mxDefaultToolbarCodec = typeof mxDefaultToolbarCodec !== 'undefined' ? mxDefaultToolbarCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxDefaultPopupMenuCodec\n\t *\n\t * Custom codec for configuring <mxDefaultPopupMenu>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n\t * data for existing popup menus, it does not encode or create menus. Note\n\t * that this codec only passes the configuration node to the popup menu,\n\t * which uses the config to dynamically create menus. See\n\t * <mxDefaultPopupMenu.createMenu>.\n\t */\n\tvar codec = new mxObjectCodec(new mxDefaultPopupMenu());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Uses the given node as the config for <mxDefaultPopupMenu>.\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tvar inc = node.getElementsByTagName('include')[0];\n\t\t\n\t\tif (inc != null)\n\t\t{\n\t\t\tthis.processInclude(dec, inc, into);\n\t\t}\n\t\telse if (into != null)\n\t\t{\n\t\t\tinto.config = node;\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxDefaultPopupMenuCodec = typeof mxDefaultPopupMenuCodec !== 'undefined' ? mxDefaultPopupMenuCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxEditorCodec\n\t *\n\t * Codec for <mxEditor>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - modified\n\t * - lastSnapshot\n\t * - ignoredChanges\n\t * - undoManager\n\t * - graphContainer\n\t * - toolbarContainer\n\t */\n\tvar codec = new mxObjectCodec(new mxEditor(),\n\t\t['modified', 'lastSnapshot', 'ignoredChanges',\n\t\t'undoManager', 'graphContainer', 'toolbarContainer']);\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the ui-part of the configuration node by reading\n\t * a sequence of the following child nodes and attributes\n\t * and passes the control to the default decoding mechanism:\n\t *\n\t * Child Nodes:\n\t *\n\t * stylesheet - Adds a CSS stylesheet to the document.\n\t * resource - Adds the basename of a resource bundle.\n\t * add - Creates or configures a known UI element.\n\t *\n\t * These elements may appear in any order given that the\n\t * graph UI element is added before the toolbar element\n\t * (see Known Keys).\n\t *\n\t * Attributes:\n\t *\n\t * as - Key for the UI element (see below).\n\t * element - ID for the element in the document.\n\t * style - CSS style to be used for the element or window.\n\t * x - X coordinate for the new window.\n\t * y - Y coordinate for the new window.\n\t * width - Width for the new window.\n\t * height - Optional height for the new window.\n\t * name - Name of the stylesheet (absolute/relative URL).\n\t * basename - Basename of the resource bundle (see <mxResources>).\n\t *\n\t * The x, y, width and height attributes are used to create a new\n\t * <mxWindow> if the element attribute is not specified in an add\n\t * node. The name and basename are only used in the stylesheet and\n\t * resource nodes, respectively.\n\t *\n\t * Known Keys:\n\t *\n\t * graph - Main graph element (see <mxEditor.setGraphContainer>).\n\t * title - Title element (see <mxEditor.setTitleContainer>).\n\t * toolbar - Toolbar element (see <mxEditor.setToolbarContainer>).\n\t * status - Status bar element (see <mxEditor.setStatusContainer>).\n\t *\n\t * Example:\n\t *\n\t * (code)\n\t * <ui>\n\t *   <stylesheet name=\"css/process.css\"/>\n\t *   <resource basename=\"resources/app\"/>\n\t *   <add as=\"graph\" element=\"graph\"\n\t *     style=\"left:70px;right:20px;top:20px;bottom:40px\"/>\n\t *   <add as=\"status\" element=\"status\"/>\n\t *   <add as=\"toolbar\" x=\"10\" y=\"20\" width=\"54\"/>\n\t * </ui>\n\t * (end)\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Assigns the specified templates for edges\n\t\tvar defaultEdge = node.getAttribute('defaultEdge');\n\t\t\n\t\tif (defaultEdge != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultEdge');\n\t\t\tobj.defaultEdge = obj.templates[defaultEdge];\n\t\t}\n\n\t\t// Assigns the specified templates for groups\n\t\tvar defaultGroup = node.getAttribute('defaultGroup');\n\t\t\n\t\tif (defaultGroup != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultGroup');\n\t\t\tobj.defaultGroup = obj.templates[defaultGroup];\n\t\t}\n\n\t\treturn obj;\n\t};\n\t\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'Array')\n\t\t{\n\t\t\tvar role = child.getAttribute('as');\n\t\t\t\n\t\t\tif (role == 'templates')\n\t\t\t{\n\t\t\t\tthis.decodeTemplates(dec, child, obj);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (child.nodeName == 'ui')\n\t\t{\n\t\t\tthis.decodeUi(dec, child, obj);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t};\n\t\t\n\t/**\n\t * Function: decodeTemplates\n\t *\n\t * Decodes the cells from the given node as templates.\n\t */\n\tcodec.decodeUi = function(dec, node, editor)\n\t{\n\t\tvar tmp = node.firstChild;\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeName == 'add')\n\t\t\t{\n\t\t\t\tvar as = tmp.getAttribute('as');\n\t\t\t\tvar elt = tmp.getAttribute('element');\n\t\t\t\tvar style = tmp.getAttribute('style');\n\t\t\t\tvar element = null;\n\n\t\t\t\tif (elt != null)\n\t\t\t\t{\n\t\t\t\t\telement = document.getElementById(elt);\n\t\t\t\t\t\n\t\t\t\t\tif (element != null && style != null)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.style.cssText += ';' + style;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar x = parseInt(tmp.getAttribute('x'));\n\t\t\t\t\tvar y = parseInt(tmp.getAttribute('y'));\n\t\t\t\t\tvar width = tmp.getAttribute('width');\n\t\t\t\t\tvar height = tmp.getAttribute('height');\n\n\t\t\t\t\t// Creates a new window around the element\n\t\t\t\t\telement = document.createElement('div');\n\t\t\t\t\telement.style.cssText = style;\n\t\t\t\t\t\n\t\t\t\t\tvar wnd = new mxWindow(mxResources.get(as) || as,\n\t\t\t\t\t\telement, x, y, width, height, false, true);\n\t\t\t\t\twnd.setVisible(true);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// TODO: Make more generic\n\t\t\t\tif (as == 'graph')\n\t\t\t\t{\n\t\t\t\t\teditor.setGraphContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'toolbar')\n\t\t\t\t{\n\t\t\t\t\teditor.setToolbarContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'title')\n\t\t\t\t{\n\t\t\t\t\teditor.setTitleContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'status')\n\t\t\t\t{\n\t\t\t\t\teditor.setStatusContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'map')\n\t\t\t\t{\n\t\t\t\t\teditor.setMapContainer(element);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'resource')\n\t\t\t{\n\t\t\t\tmxResources.add(tmp.getAttribute('basename'));\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'stylesheet')\n\t\t\t{\n\t\t\t\tmxClient.link('stylesheet', tmp.getAttribute('name'));\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\t\n\t};\n\t\n\t/**\n\t * Function: decodeTemplates\n\t *\n\t * Decodes the cells from the given node as templates.\n\t */\n\tcodec.decodeTemplates = function(dec, node, editor)\n\t{\n\t\tif (editor.templates == null)\n\t\t{\n\t\t\teditor.templates = [];\n\t\t}\n\t\t\n\t\tvar children = mxUtils.getChildNodes(node);\n\t\tfor (var j=0; j<children.length; j++)\n\t\t{\n\t\t\tvar name = children[j].getAttribute('as');\n\t\t\tvar child = children[j].firstChild;\n\t\t\t\n\t\t\twhile (child != null && child.nodeType != 1)\n\t\t\t{\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\t\n\t\t\tif (child != null)\n\t\t\t{\n\t\t\t\t// LATER: Only single cells means you need\n\t\t\t\t// to group multiple cells within another\n\t\t\t\t// cell. This should be changed to support\n\t\t\t\t// arrays of cells, or the wrapper must\n\t\t\t\t// be automatically handled in this class.\n\t\t\t\teditor.templates[name] = dec.decodeCell(child);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxEditorCodec = typeof mxEditorCodec !== 'undefined' ? mxEditorCodec : undefined;\nreturn __mxOutput;\n};\n}));"]}