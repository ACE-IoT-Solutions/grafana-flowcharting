{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/io/mxEditorCodec.js"],"names":["mxCodecRegistry","register","codec","mxObjectCodec","mxEditor","afterDecode","dec","node","obj","defaultEdge","getAttribute","removeAttribute","templates","defaultGroup","decodeChild","child","nodeName","role","decodeTemplates","decodeUi","prototype","apply","arguments","editor","tmp","firstChild","as","elt","style","element","document","getElementById","cssText","x","parseInt","y","width","height","createElement","wnd","mxWindow","mxResources","get","setVisible","setGraphContainer","setToolbarContainer","setTitleContainer","setStatusContainer","setMapContainer","add","mxClient","link","nextSibling","children","mxUtils","getChildNodes","j","length","name","nodeType","decodeCell","__mxOutput","mxEditorCodec","undefined"],"mappings":"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","file":"mxEditorCodec.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxEditorCodec\n\t *\n\t * Codec for <mxEditor>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - modified\n\t * - lastSnapshot\n\t * - ignoredChanges\n\t * - undoManager\n\t * - graphContainer\n\t * - toolbarContainer\n\t */\n\tvar codec = new mxObjectCodec(new mxEditor(),\n\t\t['modified', 'lastSnapshot', 'ignoredChanges',\n\t\t'undoManager', 'graphContainer', 'toolbarContainer']);\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the ui-part of the configuration node by reading\n\t * a sequence of the following child nodes and attributes\n\t * and passes the control to the default decoding mechanism:\n\t *\n\t * Child Nodes:\n\t *\n\t * stylesheet - Adds a CSS stylesheet to the document.\n\t * resource - Adds the basename of a resource bundle.\n\t * add - Creates or configures a known UI element.\n\t *\n\t * These elements may appear in any order given that the\n\t * graph UI element is added before the toolbar element\n\t * (see Known Keys).\n\t *\n\t * Attributes:\n\t *\n\t * as - Key for the UI element (see below).\n\t * element - ID for the element in the document.\n\t * style - CSS style to be used for the element or window.\n\t * x - X coordinate for the new window.\n\t * y - Y coordinate for the new window.\n\t * width - Width for the new window.\n\t * height - Optional height for the new window.\n\t * name - Name of the stylesheet (absolute/relative URL).\n\t * basename - Basename of the resource bundle (see <mxResources>).\n\t *\n\t * The x, y, width and height attributes are used to create a new\n\t * <mxWindow> if the element attribute is not specified in an add\n\t * node. The name and basename are only used in the stylesheet and\n\t * resource nodes, respectively.\n\t *\n\t * Known Keys:\n\t *\n\t * graph - Main graph element (see <mxEditor.setGraphContainer>).\n\t * title - Title element (see <mxEditor.setTitleContainer>).\n\t * toolbar - Toolbar element (see <mxEditor.setToolbarContainer>).\n\t * status - Status bar element (see <mxEditor.setStatusContainer>).\n\t *\n\t * Example:\n\t *\n\t * (code)\n\t * <ui>\n\t *   <stylesheet name=\"css/process.css\"/>\n\t *   <resource basename=\"resources/app\"/>\n\t *   <add as=\"graph\" element=\"graph\"\n\t *     style=\"left:70px;right:20px;top:20px;bottom:40px\"/>\n\t *   <add as=\"status\" element=\"status\"/>\n\t *   <add as=\"toolbar\" x=\"10\" y=\"20\" width=\"54\"/>\n\t * </ui>\n\t * (end)\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Assigns the specified templates for edges\n\t\tvar defaultEdge = node.getAttribute('defaultEdge');\n\t\t\n\t\tif (defaultEdge != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultEdge');\n\t\t\tobj.defaultEdge = obj.templates[defaultEdge];\n\t\t}\n\n\t\t// Assigns the specified templates for groups\n\t\tvar defaultGroup = node.getAttribute('defaultGroup');\n\t\t\n\t\tif (defaultGroup != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultGroup');\n\t\t\tobj.defaultGroup = obj.templates[defaultGroup];\n\t\t}\n\n\t\treturn obj;\n\t};\n\t\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'Array')\n\t\t{\n\t\t\tvar role = child.getAttribute('as');\n\t\t\t\n\t\t\tif (role == 'templates')\n\t\t\t{\n\t\t\t\tthis.decodeTemplates(dec, child, obj);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (child.nodeName == 'ui')\n\t\t{\n\t\t\tthis.decodeUi(dec, child, obj);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t};\n\t\t\n\t/**\n\t * Function: decodeTemplates\n\t *\n\t * Decodes the cells from the given node as templates.\n\t */\n\tcodec.decodeUi = function(dec, node, editor)\n\t{\n\t\tvar tmp = node.firstChild;\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeName == 'add')\n\t\t\t{\n\t\t\t\tvar as = tmp.getAttribute('as');\n\t\t\t\tvar elt = tmp.getAttribute('element');\n\t\t\t\tvar style = tmp.getAttribute('style');\n\t\t\t\tvar element = null;\n\n\t\t\t\tif (elt != null)\n\t\t\t\t{\n\t\t\t\t\telement = document.getElementById(elt);\n\t\t\t\t\t\n\t\t\t\t\tif (element != null && style != null)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.style.cssText += ';' + style;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar x = parseInt(tmp.getAttribute('x'));\n\t\t\t\t\tvar y = parseInt(tmp.getAttribute('y'));\n\t\t\t\t\tvar width = tmp.getAttribute('width');\n\t\t\t\t\tvar height = tmp.getAttribute('height');\n\n\t\t\t\t\t// Creates a new window around the element\n\t\t\t\t\telement = document.createElement('div');\n\t\t\t\t\telement.style.cssText = style;\n\t\t\t\t\t\n\t\t\t\t\tvar wnd = new mxWindow(mxResources.get(as) || as,\n\t\t\t\t\t\telement, x, y, width, height, false, true);\n\t\t\t\t\twnd.setVisible(true);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// TODO: Make more generic\n\t\t\t\tif (as == 'graph')\n\t\t\t\t{\n\t\t\t\t\teditor.setGraphContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'toolbar')\n\t\t\t\t{\n\t\t\t\t\teditor.setToolbarContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'title')\n\t\t\t\t{\n\t\t\t\t\teditor.setTitleContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'status')\n\t\t\t\t{\n\t\t\t\t\teditor.setStatusContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'map')\n\t\t\t\t{\n\t\t\t\t\teditor.setMapContainer(element);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'resource')\n\t\t\t{\n\t\t\t\tmxResources.add(tmp.getAttribute('basename'));\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'stylesheet')\n\t\t\t{\n\t\t\t\tmxClient.link('stylesheet', tmp.getAttribute('name'));\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\t\n\t};\n\t\n\t/**\n\t * Function: decodeTemplates\n\t *\n\t * Decodes the cells from the given node as templates.\n\t */\n\tcodec.decodeTemplates = function(dec, node, editor)\n\t{\n\t\tif (editor.templates == null)\n\t\t{\n\t\t\teditor.templates = [];\n\t\t}\n\t\t\n\t\tvar children = mxUtils.getChildNodes(node);\n\t\tfor (var j=0; j<children.length; j++)\n\t\t{\n\t\t\tvar name = children[j].getAttribute('as');\n\t\t\tvar child = children[j].firstChild;\n\t\t\t\n\t\t\twhile (child != null && child.nodeType != 1)\n\t\t\t{\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\t\n\t\t\tif (child != null)\n\t\t\t{\n\t\t\t\t// LATER: Only single cells means you need\n\t\t\t\t// to group multiple cells within another\n\t\t\t\t// cell. This should be changed to support\n\t\t\t\t// arrays of cells, or the wrapper must\n\t\t\t\t// be automatically handled in this class.\n\t\t\t\teditor.templates[name] = dec.decodeCell(child);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxEditorCodec = typeof mxEditorCodec !== 'undefined' ? mxEditorCodec : undefined;\n"]}