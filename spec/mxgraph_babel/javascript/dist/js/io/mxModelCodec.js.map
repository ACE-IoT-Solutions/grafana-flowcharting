{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/io/mxModelCodec.js"],"names":["mxCodecRegistry","register","codec","mxObjectCodec","mxGraphModel","encodeObject","enc","obj","node","rootNode","document","createElement","encodeCell","getRoot","appendChild","decodeChild","dec","child","nodeName","decodeRoot","prototype","apply","arguments","root","model","rootCell","tmp","firstChild","cell","decodeCell","getParent","nextSibling","setRoot","__mxOutput","mxModelCodec","undefined"],"mappings":";;;;;;;;AAAA;;;;AAIAA,mBAAgBC,QAAhB,CAAyB,YACzB;AACC;;;;;;;AAOA,QAAIC,QAAQ,IAAIC,aAAJ,CAAkB,IAAIC,YAAJ,EAAlB,CAAZ;;AAEA;;;;;;;AAOAF,UAAMG,YAAN,GAAqB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EACrB;AACC,SAAIC,WAAWH,IAAII,QAAJ,CAAaC,aAAb,CAA2B,MAA3B,CAAf;AACAL,SAAIM,UAAJ,CAAeL,IAAIM,OAAJ,EAAf,EAA8BJ,QAA9B;AACAD,UAAKM,WAAL,CAAiBL,QAAjB;AACA,KALD;;AAOA;;;;;AAKAP,UAAMa,WAAN,GAAoB,UAASC,GAAT,EAAcC,KAAd,EAAqBV,GAArB,EACpB;AACC,SAAIU,MAAMC,QAAN,IAAkB,MAAtB,EACA;AACC,WAAKC,UAAL,CAAgBH,GAAhB,EAAqBC,KAArB,EAA4BV,GAA5B;AACA,MAHD,MAKA;AACCJ,oBAAciB,SAAd,CAAwBL,WAAxB,CAAoCM,KAApC,CAA0C,IAA1C,EAAgDC,SAAhD;AACA;AACD,KAVD;;AAYA;;;;;;AAMApB,UAAMiB,UAAN,GAAmB,UAASH,GAAT,EAAcO,IAAd,EAAoBC,KAApB,EACnB;AACC,SAAIC,WAAW,IAAf;AACA,SAAIC,MAAMH,KAAKI,UAAf;;AAEA,YAAOD,OAAO,IAAd,EACA;AACC,UAAIE,OAAOZ,IAAIa,UAAJ,CAAeH,GAAf,CAAX;;AAEA,UAAIE,QAAQ,IAAR,IAAgBA,KAAKE,SAAL,MAAoB,IAAxC,EACA;AACCL,kBAAWG,IAAX;AACA;;AAEDF,YAAMA,IAAIK,WAAV;AACA;;AAED;AACA,SAAIN,YAAY,IAAhB,EACA;AACCD,YAAMQ,OAAN,CAAcP,QAAd;AACA;AACD,KAtBD;;AAwBA;AACA,WAAOvB,KAAP;AAEA,IA3EwB,EAAzB;;AA6EA+B,cAAWC,YAAX,GAA0B,OAAOA,YAAP,KAAwB,WAAxB,GAAsCA,YAAtC,GAAqDC,SAA/E","file":"mxModelCodec.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxModelCodec\n\t *\n\t * Codec for <mxGraphModel>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t */\n\tvar codec = new mxObjectCodec(new mxGraphModel());\n\n\t/**\n\t * Function: encodeObject\n\t *\n\t * Encodes the given <mxGraphModel> by writing a (flat) XML sequence of\n\t * cell nodes as produced by the <mxCellCodec>. The sequence is\n\t * wrapped-up in a node with the name root.\n\t */\n\tcodec.encodeObject = function(enc, obj, node)\n\t{\n\t\tvar rootNode = enc.document.createElement('root');\n\t\tenc.encodeCell(obj.getRoot(), rootNode);\n\t\tnode.appendChild(rootNode);\n\t};\n\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'root')\n\t\t{\n\t\t\tthis.decodeRoot(dec, child, obj);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t\t}\n\t};\n\n\t/**\n\t * Function: decodeRoot\n\t *\n\t * Reads the cells into the graph model. All cells\n\t * are children of the root element in the node.\n\t */\n\tcodec.decodeRoot = function(dec, root, model)\n\t{\n\t\tvar rootCell = null;\n\t\tvar tmp = root.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tvar cell = dec.decodeCell(tmp);\n\t\t\t\n\t\t\tif (cell != null && cell.getParent() == null)\n\t\t\t{\n\t\t\t\trootCell = cell;\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\n\t\t// Sets the root on the model if one has been decoded\n\t\tif (rootCell != null)\n\t\t{\n\t\t\tmodel.setRoot(rootCell);\n\t\t}\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxModelCodec = typeof mxModelCodec !== 'undefined' ? mxModelCodec : undefined;\n"]}