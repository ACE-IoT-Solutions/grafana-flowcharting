{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/io/mxDefaultPopupMenuCodec.js"],"names":["mxCodecRegistry","register","codec","mxObjectCodec","mxDefaultPopupMenu","encode","enc","obj","decode","dec","node","into","inc","getElementsByTagName","processInclude","config","__mxOutput","mxDefaultPopupMenuCodec","undefined"],"mappings":";;;;;;;;AAAA;;;;AAIAA,mBAAgBC,QAAhB,CAAyB,YACzB;AACC;;;;;;;;;;;AAWA,QAAIC,QAAQ,IAAIC,aAAJ,CAAkB,IAAIC,kBAAJ,EAAlB,CAAZ;;AAEA;;;;;AAKAF,UAAMG,MAAN,GAAe,UAASC,GAAT,EAAcC,GAAd,EACf;AACC,YAAO,IAAP;AACA,KAHD;;AAKA;;;;;AAKAL,UAAMM,MAAN,GAAe,UAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EACf;AACC,SAAIC,MAAMF,KAAKG,oBAAL,CAA0B,SAA1B,EAAqC,CAArC,CAAV;;AAEA,SAAID,OAAO,IAAX,EACA;AACC,WAAKE,cAAL,CAAoBL,GAApB,EAAyBG,GAAzB,EAA8BD,IAA9B;AACA,MAHD,MAIK,IAAIA,QAAQ,IAAZ,EACL;AACCA,WAAKI,MAAL,GAAcL,IAAd;AACA;;AAED,YAAOC,IAAP;AACA,KAdD;;AAgBA;AACA,WAAOT,KAAP;AAEA,IAjDwB,EAAzB;;AAmDAc,cAAWC,uBAAX,GAAqC,OAAOA,uBAAP,KAAmC,WAAnC,GAAiDA,uBAAjD,GAA2EC,SAAhH","file":"mxDefaultPopupMenuCodec.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxDefaultPopupMenuCodec\n\t *\n\t * Custom codec for configuring <mxDefaultPopupMenu>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n\t * data for existing popup menus, it does not encode or create menus. Note\n\t * that this codec only passes the configuration node to the popup menu,\n\t * which uses the config to dynamically create menus. See\n\t * <mxDefaultPopupMenu.createMenu>.\n\t */\n\tvar codec = new mxObjectCodec(new mxDefaultPopupMenu());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Uses the given node as the config for <mxDefaultPopupMenu>.\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tvar inc = node.getElementsByTagName('include')[0];\n\t\t\n\t\tif (inc != null)\n\t\t{\n\t\t\tthis.processInclude(dec, inc, into);\n\t\t}\n\t\telse if (into != null)\n\t\t{\n\t\t\tinto.config = node;\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxDefaultPopupMenuCodec = typeof mxDefaultPopupMenuCodec !== 'undefined' ? mxDefaultPopupMenuCodec : undefined;\n"]}