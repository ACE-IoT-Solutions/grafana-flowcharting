{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/io/mxGenericChangeCodec.js"],"names":["mxGenericChangeCodec","obj","variable","codec","mxObjectCodec","afterDecode","dec","node","mxUtils","isNode","cell","decodeCell","previous","mxCodecRegistry","register","mxValueChange","mxStyleChange","mxGeometryChange","mxCollapseChange","mxVisibleChange","mxCellAttributeChange","__mxOutput","undefined"],"mappings":";;;;;;;;;AA+BIA,0B,GAAuB,SAAvBA,oBAAuB,CAASC,GAAT,EAAcC,QAAd,EAC3B;AACC,YAAIC,QAAQ,IAAIC,aAAJ,CAAkBH,GAAlB,EAAwB,CAAC,OAAD,EAAU,UAAV,CAAxB,EAA+C,CAAC,MAAD,CAA/C,CAAZ;;AAEA;;;;;AAKAE,cAAME,WAAN,GAAoB,UAASC,GAAT,EAAcC,IAAd,EAAoBN,GAApB,EACpB;AACC;AACA;AACA,cAAIO,QAAQC,MAAR,CAAeR,IAAIS,IAAnB,CAAJ,EACA;AACCT,gBAAIS,IAAJ,GAAWJ,IAAIK,UAAJ,CAAeV,IAAIS,IAAnB,EAAyB,KAAzB,CAAX;AACA;;AAEDT,cAAIW,QAAJ,GAAeX,IAAIC,QAAJ,CAAf;;AAEA,iBAAOD,GAAP;AACA,SAZD;;AAcA,eAAOE,KAAP;AACA,O;;AAED;AACAU,sBAAgBC,QAAhB,CAAyBd,qBAAqB,IAAIe,aAAJ,EAArB,EAA0C,OAA1C,CAAzB;AACAF,sBAAgBC,QAAhB,CAAyBd,qBAAqB,IAAIgB,aAAJ,EAArB,EAA0C,OAA1C,CAAzB;AACAH,sBAAgBC,QAAhB,CAAyBd,qBAAqB,IAAIiB,gBAAJ,EAArB,EAA6C,UAA7C,CAAzB;AACAJ,sBAAgBC,QAAhB,CAAyBd,qBAAqB,IAAIkB,gBAAJ,EAArB,EAA6C,WAA7C,CAAzB;AACAL,sBAAgBC,QAAhB,CAAyBd,qBAAqB,IAAImB,eAAJ,EAArB,EAA4C,SAA5C,CAAzB;AACAN,sBAAgBC,QAAhB,CAAyBd,qBAAqB,IAAIoB,qBAAJ,EAArB,EAAkD,OAAlD,CAAzB;;AAEAC,iBAAWrB,oBAAX,GAAkC,OAAOA,oBAAP,KAAgC,WAAhC,GAA8CA,oBAA9C,GAAqEsB,SAAvG","file":"mxGenericChangeCodec.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGenericChangeCodec\n *\n * Codec for <mxValueChange>s, <mxStyleChange>s, <mxGeometryChange>s,\n * <mxCollapseChange>s and <mxVisibleChange>s. This class is created\n * and registered dynamically at load time and used implicitely\n * via <mxCodec> and the <mxCodecRegistry>.\n *\n * Transient Fields:\n *\n * - model\n * - previous\n *\n * Reference Fields:\n *\n * - cell\n * \n * Constructor: mxGenericChangeCodec\n *\n * Factory function that creates a <mxObjectCodec> for\n * the specified change and fieldname.\n *\n * Parameters:\n *\n * obj - An instance of the change object.\n * variable - The fieldname for the change data.\n */\nvar mxGenericChangeCodec = function(obj, variable)\n{\n\tvar codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t};\n\t\n\treturn codec;\n};\n\n// Registers the codecs\nmxCodecRegistry.register(mxGenericChangeCodec(new mxValueChange(), 'value'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxStyleChange(), 'style'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxGeometryChange(), 'geometry'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCollapseChange(), 'collapsed'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxVisibleChange(), 'visible'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCellAttributeChange(), 'value'));\n\n__mxOutput.mxGenericChangeCodec = typeof mxGenericChangeCodec !== 'undefined' ? mxGenericChangeCodec : undefined;\n"]}