{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/view/mxTemporaryCellStates.js"],"names":["mxTemporaryCellStates","view","scale","cells","isCellVisibleFn","getLinkForCellState","oldValidateCellState","validateCellState","oldBounds","getGraphBounds","oldStates","getStates","oldScale","getScale","oldDoRedrawShape","graph","cellRenderer","doRedrawShape","self","state","oldPaint","shape","paint","c","link","setLink","apply","arguments","cell","resurse","setStates","mxDictionary","setScale","resetValidationState","bbox","i","length","bounds","getBoundingBox","validateCell","add","setGraphBounds","mxRectangle","prototype","destroy","__mxOutput","undefined"],"mappings":"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","file":"mxTemporaryCellStates.js","sourcesContent":["/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxTemporaryCellStates\n * \n * Creates a temporary set of cell states.\n */\nfunction mxTemporaryCellStates(view, scale, cells, isCellVisibleFn, getLinkForCellState)\n{\n\tscale = (scale != null) ? scale : 1;\n\tthis.view = view;\n\t\n\t// Stores the previous state\n\tthis.oldValidateCellState = view.validateCellState;\n\tthis.oldBounds = view.getGraphBounds();\n\tthis.oldStates = view.getStates();\n\tthis.oldScale = view.getScale();\n\tthis.oldDoRedrawShape = view.graph.cellRenderer.doRedrawShape;\n\n\tvar self = this;\n\n\t// Overrides doRedrawShape and paint shape to add links on shapes\n\tif (getLinkForCellState != null)\n\t{\n\t\tview.graph.cellRenderer.doRedrawShape = function(state)\n\t\t{\n\t\t\tvar oldPaint = state.shape.paint;\n\t\t\t\n\t\t\tstate.shape.paint = function(c)\n\t\t\t{\n\t\t\t\tvar link = getLinkForCellState(state);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(link);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toldPaint.apply(this, arguments);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(null);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tself.oldDoRedrawShape.apply(view.graph.cellRenderer, arguments);\n\t\t\tstate.shape.paint = oldPaint;\n\t\t};\n\t}\n\n\t// Overrides validateCellState to ignore invisible cells\n\tview.validateCellState = function(cell, resurse)\n\t{\n\t\tif (cell == null || isCellVisibleFn == null || isCellVisibleFn(cell))\n\t\t{\n\t\t\treturn self.oldValidateCellState.apply(view, arguments);\n\t\t}\n\t\t\n\t\treturn null;\n\t};\n\t\n\t// Creates space for new states\n\tview.setStates(new mxDictionary());\n\tview.setScale(scale);\n\t\n\tif (cells != null)\n\t{\n\t\tview.resetValidationState();\n\t\tvar bbox = null;\n\n\t\t// Validates the vertices and edges without adding them to\n\t\t// the model so that the original cells are not modified\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar bounds = view.getBoundingBox(view.validateCellState(view.validateCell(cells[i])));\n\t\t\t\n\t\t\tif (bbox == null)\n\t\t\t{\n\t\t\t\tbbox = bounds;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbbox.add(bounds);\n\t\t\t}\n\t\t}\n\n\t\tview.setGraphBounds(bbox || new mxRectangle());\n\t}\n};\n\n/**\n * Variable: view\n *\n * Holds the width of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.view = null;\n\n/**\n * Variable: oldStates\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldStates = null;\n\n/**\n * Variable: oldBounds\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldBounds = null;\n\n/**\n * Variable: oldScale\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldScale = null;\n\n/**\n * Function: destroy\n * \n * Returns the top, left corner as a new <mxPoint>.\n */\nmxTemporaryCellStates.prototype.destroy = function()\n{\n\tthis.view.setScale(this.oldScale);\n\tthis.view.setStates(this.oldStates);\n\tthis.view.setGraphBounds(this.oldBounds);\n\tthis.view.validateCellState = this.oldValidateCellState;\n\tthis.view.graph.cellRenderer.doRedrawShape = this.oldDoRedrawShape;\n};\n\n__mxOutput.mxTemporaryCellStates = typeof mxTemporaryCellStates !== 'undefined' ? mxTemporaryCellStates : undefined;\n"]}