{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/view/mxPerimeter.js"],"names":["mxPerimeter","RectanglePerimeter","bounds","vertex","next","orthogonal","cx","getCenterX","cy","getCenterY","dx","x","dy","y","alpha","Math","atan2","p","mxPoint","pi","PI","pi2","beta","t","height","width","tan","EllipsePerimeter","a","b","px","py","parseInt","abs","ty","tx","sqrt","d","h","e","f","g","det","xout1","xout2","yout1","yout2","dist1","pow","dist2","xout","yout","RhombusPerimeter","w","mxUtils","intersection","TrianglePerimeter","direction","style","mxConstants","STYLE_DIRECTION","vertical","DIRECTION_NORTH","DIRECTION_SOUTH","start","corner","end","DIRECTION_WEST","base","result","pt","HexagonPerimeter","getValue","DIRECTION_EAST","floor","__mxOutput","undefined"],"mappings":"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","file":"mxPerimeter.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxPerimeter =\n{\n\t/**\n\t * Class: mxPerimeter\n\t * \n\t * Provides various perimeter functions to be used in a style\n\t * as the value of <mxConstants.STYLE_PERIMETER>. Perimeters for\n\t * rectangle, circle, rhombus and triangle are available.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * <add as=\"perimeter\">mxPerimeter.RectanglePerimeter</add>\n\t * (end)\n\t * \n\t * Or programmatically:\n\t * \n\t * (code)\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n\t * (end)\n\t * \n\t * When adding new perimeter functions, it is recommended to use the \n\t * mxPerimeter-namespace as follows:\n\t * \n\t * (code)\n\t * mxPerimeter.CustomPerimeter = function (bounds, vertex, next, orthogonal)\n\t * {\n\t *   var x = 0; // Calculate x-coordinate\n\t *   var y = 0; // Calculate y-coordainte\n\t *   \n\t *   return new mxPoint(x, y);\n\t * }\n\t * (end)\n\t * \n\t * The new perimeter should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('customPerimeter', mxPerimeter.CustomPerimeter);\n\t * (end)\n\t * \n\t * The custom perimeter above can now be used in a specific vertex as follows:\n\t * \n\t * (code)\n\t * model.setStyle(vertex, 'perimeter=customPerimeter');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxPerimeter.CustomPerimeter for the value in\n\t * the cell style above.\n\t * \n\t * Or it can be used for all vertices in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultVertexStyle();\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.CustomPerimeter;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * The parameters are explained in <RectanglePerimeter>.\n\t * \n\t * Function: RectanglePerimeter\n\t * \n\t * Describes a rectangular perimeter for the given bounds.\n\t *\n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the absolute bounds of the\n\t * vertex.\n\t * vertex - <mxCellState> that represents the vertex.\n\t * next - <mxPoint> that represents the nearest neighbour point on the\n\t * given edge.\n\t * orthogonal - Boolean that specifies if the orthogonal projection onto\n\t * the perimeter should be returned. If this is false then the intersection\n\t * of the perimeter and the line between the next and the center point is\n\t * returned.\n\t */\n\tRectanglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\t\tvar alpha = Math.atan2(dy, dx);\n\t\tvar p = new mxPoint(0, 0);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI/2;\n\t\tvar beta = pi2 - alpha;\n\t\tvar t = Math.atan2(bounds.height, bounds.width);\n\t\t\n\t\tif (alpha < -pi + t || alpha > pi - t)\n\t\t{\n\t\t\t// Left edge\n\t\t\tp.x = bounds.x;\n\t\t\tp.y = cy - bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse if (alpha < -t)\n\t\t{\n\t\t\t// Top Edge\n\t\t\tp.y = bounds.y;\n\t\t\tp.x = cx - bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\telse if (alpha < t)\n\t\t{\n\t\t\t// Right Edge\n\t\t\tp.x = bounds.x + bounds.width;\n\t\t\tp.y = cy + bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Bottom Edge\n\t\t\tp.y = bounds.y + bounds.height;\n\t\t\tp.x = cx + bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (next.x >= bounds.x &&\n\t\t\t\tnext.x <= bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = next.x;\n\t\t\t}\n\t\t\telse if (next.y >= bounds.y &&\n\t\t\t\t\t   next.y <= bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = next.y;\n\t\t\t}\n\t\t\tif (next.x < bounds.x)\n\t\t\t{\n\t\t\t\tp.x = bounds.x;\n\t\t\t}\n\t\t\telse if (next.x > bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = bounds.x + bounds.width;\n\t\t\t}\n\t\t\tif (next.y < bounds.y)\n\t\t\t{\n\t\t\t\tp.y = bounds.y;\n\t\t\t}\n\t\t\telse if (next.y > bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = bounds.y + bounds.height;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: EllipsePerimeter\n\t * \n\t * Describes an elliptic perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tEllipsePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar a = bounds.width / 2;\n\t\tvar b = bounds.height / 2;\n\t\tvar cx = x + a;\n\t\tvar cy = y + b;\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\t\n\t\t// Calculates straight line equation through\n\t\t// point and ellipse center y = d * x + h\n\t\tvar dx = parseInt(px - cx);\n\t\tvar dy = parseInt(py - cy);\n\t\t\n\t\tif (dx == 0 && dy != 0)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy + b * dy / Math.abs(dy));\n\t\t}\n\t\telse if (dx == 0 && dy == 0)\n\t\t{\n\t\t\treturn new mxPoint(px, py);\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (py >= y && py <= y + bounds.height)\n\t\t\t{\n\t\t\t\tvar ty = py - cy;\n\t\t\t\tvar tx = Math.sqrt(a*a*(1-(ty*ty)/(b*b))) || 0;\n\t\t\t\t\n\t\t\t\tif (px <= x)\n\t\t\t\t{\n\t\t\t\t\ttx = -tx;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(cx+tx, py);\n\t\t\t}\n\t\t\t\n\t\t\tif (px >= x && px <= x + bounds.width)\n\t\t\t{\n\t\t\t\tvar tx = px - cx;\n\t\t\t\tvar ty = Math.sqrt(b*b*(1-(tx*tx)/(a*a))) || 0;\n\t\t\t\t\n\t\t\t\tif (py <= y)\n\t\t\t\t{\n\t\t\t\t\tty = -ty;\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(px, cy+ty);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Calculates intersection\n\t\tvar d = dy / dx;\n\t\tvar h = cy - d * cx;\n\t\tvar e = a * a * d * d + b * b;\n\t\tvar f = -2 * cx * e;\n\t\tvar g = a * a * d * d * cx * cx +\n\t\t\t\tb * b * cx * cx -\n\t\t\t\ta * a * b * b;\n\t\tvar det = Math.sqrt(f * f - 4 * e * g);\n\t\t\n\t\t// Two solutions (perimeter points)\n\t\tvar xout1 = (-f + det) / (2 * e);\n\t\tvar xout2 = (-f - det) / (2 * e);\n\t\tvar yout1 = d * xout1 + h;\n\t\tvar yout2 = d * xout2 + h;\n\t\tvar dist1 = Math.sqrt(Math.pow((xout1 - px), 2)\n\t\t\t\t\t+ Math.pow((yout1 - py), 2));\n\t\tvar dist2 = Math.sqrt(Math.pow((xout2 - px), 2)\n\t\t\t\t\t+ Math.pow((yout2 - py), 2));\n\t\t\t\t\t\n\t\t// Correct solution\n\t\tvar xout = 0;\n\t\tvar yout = 0;\n\t\t\n\t\tif (dist1 < dist2)\n\t\t{\n\t\t\txout = xout1;\n\t\t\tyout = yout1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\txout = xout2;\n\t\t\tyout = yout2;\n\t\t}\n\t\t\n\t\treturn new mxPoint(xout, yout);\n\t},\n\n\t/**\n\t * Function: RhombusPerimeter\n\t * \n\t * Describes a rhombus (aka diamond) perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tRhombusPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\n\t\t// Special case for intersecting the diamond's corners\n\t\tif (cx == px)\n\t\t{\n\t\t\tif (cy > py)\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y); // top\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y + h); // bottom\n\t\t\t}\n\t\t}\n\t\telse if (cy == py)\n\t\t{\n\t\t\tif (cx > px)\n\t\t\t{\n\t\t\t\treturn new mxPoint(x, cy); // left\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(x + w, cy); // right\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar tx = cx;\n\t\tvar ty = cy;\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// In which quadrant will the intersection be?\n\t\t// set the slope and offset of the border line accordingly\n\t\tif (px < cx)\n\t\t{\n\t\t\tif (py < cy)\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x, cy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x, cy);\n\t\t\t}\n\t\t}\n\t\telse if (py < cy)\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x + w, cy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x + w, cy);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: TrianglePerimeter\n\t * \n\t * Describes a triangle perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tTrianglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar direction = (vertex != null) ?\n\t\t\tvertex.style[mxConstants.STYLE_DIRECTION] : null;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_SOUTH;\n\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\t\t\n\t\tvar start = new mxPoint(x, y);\n\t\tvar corner = new mxPoint(x + w, cy);\n\t\tvar end = new mxPoint(x, y + h);\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tstart = end;\n\t\t\tcorner = new mxPoint(cx, y);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tcorner = new mxPoint(cx, y + h);\n\t\t\tend = new mxPoint(x + w, y);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tstart = new mxPoint(x + w, y);\n\t\t\tcorner = new mxPoint(x, cy);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\n\t\tvar alpha = (vertical) ? Math.atan2(dx, dy) : Math.atan2(dy, dx);\n\t\tvar t = (vertical) ? Math.atan2(w, h) : Math.atan2(h, w);\n\t\t\n\t\tvar base = false;\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tbase = alpha > -t && alpha < t;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbase = alpha < -Math.PI + t || alpha > Math.PI - t;\t\n\t\t}\n\n\t\tvar result = null;\t\t\t\n\n\t\tif (base)\n\t\t{\n\t\t\tif (orthogonal && ((vertical && next.x >= start.x && next.x <= end.x) ||\n\t\t\t\t(!vertical && next.y >= start.y && next.y <= end.y)))\n\t\t\t{\n\t\t\t\tif (vertical)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(next.x, start.y);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(start.x, next.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 + h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty + h);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 - h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w, y + h / 2 +\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x, y + h / 2 -\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (orthogonal)\n\t\t\t{\n\t\t\t\tvar pt = new mxPoint(cx, cy);\n\t\t\n\t\t\t\tif (next.y >= y && next.y <= y + h)\n\t\t\t\t{\n\t\t\t\t\tpt.x = (vertical) ? cx : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_WEST) ?\n\t\t\t\t\t\t\tx + w : x);\n\t\t\t\t\tpt.y = next.y;\n\t\t\t\t}\n\t\t\t\telse if (next.x >= x && next.x <= x + w)\n\t\t\t\t{\n\t\t\t\t\tpt.x = next.x;\n\t\t\t\t\tpt.y = (!vertical) ? cy : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_NORTH) ?\n\t\t\t\t\t\t\ty + h : y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Compute angle\n\t\t\t\tdx = next.x - pt.x;\n\t\t\t\tdy = next.y - pt.y;\n\t\t\t\t\n\t\t\t\tcx = pt.x;\n\t\t\t\tcy = pt.y;\n\t\t\t}\n\n\t\t\tif ((vertical && next.x <= x + w / 2) ||\n\t\t\t\t(!vertical && next.y <= y + h / 2))\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tstart.x, start.y, corner.x, corner.y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tcorner.x, corner.y, end.x, end.y);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\tresult = new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: HexagonPerimeter\n\t * \n\t * Describes a hexagon perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tHexagonPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\tvar dx = px - cx;\n\t\tvar dy = py - cy;\n\t\tvar alpha = -Math.atan2(dy, dx);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI / 2;\n\n\t\tvar result = new mxPoint(cx, cy);\n\n\t\tvar direction = (vertex != null) ? mxUtils.getValue(\n\t\t\t\tvertex.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_EAST) : mxConstants.DIRECTION_EAST;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH\n\t\t\t\t|| direction == mxConstants.DIRECTION_SOUTH;\n\t\tvar a = new mxPoint();\n\t\tvar b = new mxPoint();\n\n\t\t//Only consider corrects quadrants for the orthogonal case.\n\t\tif ((px < x) && (py < y) || (px < x) && (py > y + h)\n\t\t\t\t|| (px > x + w) && (py < y) || (px > x + w) && (py > y + h))\n\t\t{\n\t\t\torthogonal = false;\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (px == cx)\n\t\t\t\t{\n\t\t\t\t\tif (py <= y)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py >= y + h)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px < x)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (py == y)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t}\n\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (py == cy)\n\t\t\t\t{\n\t\t\t\t\tif (px <= x)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px >= x + w)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py < y)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (px == x)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, cy);\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, cy);\n\t\t\t\t}\n\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar tx = cx;\n\t\t\tvar ty = cy;\n\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t\t\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tty = y + h;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tty = y;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t\t\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\ttx = x + w;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttx = x;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(tx, ty, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 4, w / 2);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == pi2)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi2))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\n\t\t\t\tif ((alpha < beta) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha > pi2) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (((alpha > (pi - beta)) && (alpha <= pi))\n\t\t\t\t\t\t|| ((alpha < (-pi + beta)) && (alpha >= -pi)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > -pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -pi2) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 2, w / 4);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha == pi) || (alpha == -pi))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == 0)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y + h);\n\t\t\t\t}\n\n\t\t\t\tif ((alpha > 0) && (alpha < beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > (pi - beta)) && (alpha < pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < 0) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < (-pi + beta)) && (alpha > -pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(cx, cy, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n__mxOutput.mxPerimeter = typeof mxPerimeter !== 'undefined' ? mxPerimeter : undefined;\n"]}