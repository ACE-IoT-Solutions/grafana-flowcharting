{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/view/mxCellEditor.js"],"names":["mxCellEditor","graph","zoomHandler","mxUtils","bind","isEditing","resize","view","addListener","mxEvent","SCALE","SCALE_AND_TRANSLATE","changeHandler","sender","editingCell","getView","getState","stopEditing","getModel","CHANGE","prototype","textarea","trigger","modified","autoSize","selectText","emptyLabelText","mxClient","IS_FF","escapeCancelsEditing","textNode","zIndex","minResize","mxRectangle","wordWrapPadding","IS_QUIRKS","IS_IE11","blurEnabled","initialValue","init","document","createElement","className","contentEditable","IS_GC","style","minHeight","position","isLegacyEditor","installListeners","applyValue","state","value","labelChanged","cell","getInitialValue","result","htmlEntities","getEditingValue","documentMode","replaceTrailingNewlines","replace","getCurrentValue","extractTextWithWhitespace","childNodes","isCancelEditingKeyEvent","evt","isShiftDown","isControlDown","isMetaDown","elt","focusLost","isConsumed","isStopEditingEvent","consume","keyCode","keypressHandler","clearOnChange","innerHTML","getEmptyLabelText","keyupHandler","length","IS_IE","evtName","resizeHandler","resizeThread","window","clearTimeout","setTimeout","isEnterStopsCellEditing","isEventSource","getSource","isEdge","scale","m","mxConstants","STYLE_OVERFLOW","bounds","getEditorBounds","width","Math","round","height","left","x","top","y","max","isWrapping","wordWrap","WORD_WRAP","whiteSpace","lw","getValue","STYLE_LABEL_WIDTH","text","margin","getAlignmentAsPoint","STYLE_ALIGN","ALIGN_CENTER","STYLE_VERTICAL_ALIGN","ALIGN_MIDDLE","absoluteOffset","tmp","parseFloat","bds","fromRectangle","hpos","STYLE_LABEL_POSITION","vpos","STYLE_VERTICAL_LABEL_POSITION","shape","getLabelBounds","cellRenderer","legacySpacing","spacing","parseInt","STYLE_SPACING","spacingTop","STYLE_SPACING_TOP","mxText","baseSpacingTop","spacingRight","STYLE_SPACING_RIGHT","baseSpacingRight","spacingBottom","STYLE_SPACING_BOTTOM","baseSpacingBottom","spacingLeft","STYLE_SPACING_LEFT","baseSpacingLeft","scrollWidth","maxWidth","zoom","ow","oh","scrollHeight","ceil","abs","IS_VML","setPrefixedStyle","isInvokesStopCellEditing","getBackgroundColor","absoluteRoot","IS_SVG","root","getDrawPane","ownerSVGElement","getCurrentStyle","startEditing","tooltipHandler","hideTooltip","size","STYLE_FONTSIZE","DEFAULT_FONTSIZE","family","STYLE_FONTFAMILY","DEFAULT_FONTFAMILY","color","STYLE_FONTCOLOR","align","ALIGN_LEFT","bold","STYLE_FONTSTYLE","FONT_BOLD","italic","FONT_ITALIC","uline","FONT_UNDERLINE","lineHeight","ABSOLUTE_LINE_HEIGHT","LINE_HEIGHT","backgroundColor","textDecoration","fontWeight","fontStyle","fontSize","fontFamily","textAlign","outline","dir","textDirection","STYLE_TEXT_DIRECTION","DEFAULT_TEXT_DIRECTION","TEXT_DIRECTION_AUTO","dialect","DIALECT_STRICTHTML","isNode","getAutoDirection","TEXT_DIRECTION_LTR","TEXT_DIRECTION_RTL","setAttribute","removeAttribute","container","appendChild","isHideLabel","node","visibility","model","focus","isSelectText","execCommand","e","clearSelection","selection","getSelection","empty","removeAllRanges","cancel","initial","blur","parentNode","removeChild","prepareTextarea","release","lastChild","nodeName","getMinimumSize","minSize","minWidth","boundingBox","min","isVertex","horizontal","ALIGN_RIGHT","vertical","ALIGN_TOP","ALIGN_BOTTOM","getEditingCell","destroy","removeListener","__mxOutput","undefined"],"mappings":"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","file":"mxCellEditor.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellEditor\n *\n * In-place editor for the graph. To control this editor, use\n * <mxGraph.invokesStopCellEditing>, <mxGraph.enterStopsCellEditing> and\n * <mxGraph.escapeEnabled>. If <mxGraph.enterStopsCellEditing> is true then\n * ctrl-enter or shift-enter can be used to create a linefeed. The F2 and\n * escape keys can always be used to stop editing.\n * \n * To customize the location of the textbox in the graph, override\n * <getEditorBounds> as follows:\n * \n * (code)\n * graph.cellEditor.getEditorBounds = function(state)\n * {\n *   var result = mxCellEditor.prototype.getEditorBounds.apply(this, arguments);\n *   \n *   if (this.graph.getModel().isEdge(state.cell))\n *   {\n *     result.x = state.getCenterX() - result.width / 2;\n *     result.y = state.getCenterY() - result.height / 2;\n *   }\n *   \n *   return result;\n * };\n * (end)\n * \n * Note that this hook is only called if <autoSize> is false. If <autoSize> is true,\n * then <mxShape.getLabelBounds> is used to compute the current bounds of the textbox.\n * \n * The textarea uses the mxCellEditor CSS class. You can modify this class in\n * your custom CSS. Note: You should modify the CSS after loading the client\n * in the page.\n *\n * Example:\n * \n * To only allow numeric input in the in-place editor, use the following code.\n *\n * (code)\n * var text = graph.cellEditor.textarea;\n * \n * mxEvent.addListener(text, 'keydown', function (evt)\n * {\n *   if (!(evt.keyCode >= 48 && evt.keyCode <= 57) &&\n *       !(evt.keyCode >= 96 && evt.keyCode <= 105))\n *   {\n *     mxEvent.consume(evt);\n *   }\n * }); \n * (end)\n * \n * Placeholder:\n * \n * To implement a placeholder for cells without a label, use the\n * <emptyLabelText> variable.\n * \n * Resize in Chrome:\n * \n * Resize of the textarea is disabled by default. If you want to enable\n * this feature extend <init> and set this.textarea.style.resize = ''.\n * \n * To start editing on a key press event, the container of the graph\n * should have focus or a focusable parent should be used to add the\n * key press handler as follows.\n * \n * (code)\n * mxEvent.addListener(graph.container, 'keypress', mxUtils.bind(this, function(evt)\n * {\n *   if (!graph.isEditing() && !graph.isSelectionEmpty() && evt.which !== 0 &&\n *       !mxEvent.isAltDown(evt) && !mxEvent.isControlDown(evt) && !mxEvent.isMetaDown(evt))\n *   {\n *     graph.startEditing();\n *     \n *     if (mxClient.IS_FF)\n *     {\n *       graph.cellEditor.textarea.value = String.fromCharCode(evt.which);\n *     }\n *   }\n * }));\n * (end)\n * \n * To allow focus for a DIV, and hence to receive key press events, some browsers\n * require it to have a valid tabindex attribute. In this case the following\n * code may be used to keep the container focused.\n * \n * (code)\n * var graphFireMouseEvent = graph.fireMouseEvent;\n * graph.fireMouseEvent = function(evtName, me, sender)\n * {\n *   if (evtName == mxEvent.MOUSE_DOWN)\n *   {\n *     this.container.focus();\n *   }\n *   \n *   graphFireMouseEvent.apply(this, arguments);\n * };\n * (end)\n *\n * Constructor: mxCellEditor\n *\n * Constructs a new in-place editor for the specified graph.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxCellEditor(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Stops editing after zoom changes\n\tthis.zoomHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (this.graph.isEditing())\n\t\t{\n\t\t\tthis.resize();\n\t\t}\n\t});\n\t\n\tthis.graph.view.addListener(mxEvent.SCALE, this.zoomHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.zoomHandler);\n\t\n\t// Adds handling of deleted cells while editing\n\tthis.changeHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.editingCell != null && this.graph.getView().getState(this.editingCell) == null)\n\t\t{\n\t\t\tthis.stopEditing(true);\n\t\t}\n\t});\n\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellEditor.prototype.graph = null;\n\n/**\n * Variable: textarea\n *\n * Holds the DIV that is used for text editing. Note that this may be null before the first\n * edit. Instantiated in <init>.\n */\nmxCellEditor.prototype.textarea = null;\n\n/**\n * Variable: editingCell\n * \n * Reference to the <mxCell> that is currently being edited.\n */\nmxCellEditor.prototype.editingCell = null;\n\n/**\n * Variable: trigger\n * \n * Reference to the event that was used to start editing.\n */\nmxCellEditor.prototype.trigger = null;\n\n/**\n * Variable: modified\n * \n * Specifies if the label has been modified.\n */\nmxCellEditor.prototype.modified = false;\n\n/**\n * Variable: autoSize\n * \n * Specifies if the textarea should be resized while the text is being edited.\n * Default is true.\n */\nmxCellEditor.prototype.autoSize = true;\n\n/**\n * Variable: selectText\n * \n * Specifies if the text should be selected when editing starts. Default is\n * true.\n */\nmxCellEditor.prototype.selectText = true;\n\n/**\n * Variable: emptyLabelText\n * \n * Text to be displayed for empty labels. Default is '' or '<br>' in Firefox as\n * a workaround for the missing cursor bug for empty content editable. This can\n * be set to eg. \"[Type Here]\" to easier visualize editing of empty labels. The\n * value is only displayed before the first keystroke and is never used as the\n * actual editing value.\n */\nmxCellEditor.prototype.emptyLabelText = (mxClient.IS_FF) ? '<br>' : '';\n\n/**\n * Variable: escapeCancelsEditing\n * \n * If true, pressing the escape key will stop editing and not accept the new\n * value. Change this to false to accept the new value on escape, and cancel\n * editing on Shift+Escape instead. Default is true.\n */\nmxCellEditor.prototype.escapeCancelsEditing = true;\n\n/**\n * Variable: textNode\n * \n * Reference to the label DOM node that has been hidden.\n */\nmxCellEditor.prototype.textNode = '';\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the textarea. Default is 5.\n */\nmxCellEditor.prototype.zIndex = 5;\n\n/**\n * Variable: minResize\n * \n * Defines the minimum width and height to be used in <resize>. Default is 0x20px.\n */\nmxCellEditor.prototype.minResize = new mxRectangle(0, 20);\n\n/**\n * Variable: wordWrapPadding\n * \n * Correction factor for word wrapping width. Default is 2 in quirks, 0 in IE\n * 11 and 1 in all other browsers and modes.\n */\nmxCellEditor.prototype.wordWrapPadding = (mxClient.IS_QUIRKS) ? 2 : (!mxClient.IS_IE11) ? 1 : 0;\n\n/**\n * Variable: blurEnabled\n *\n * If <focusLost> should be called if <textarea> loses the focus. Default is false.\n */\nmxCellEditor.prototype.blurEnabled = false;\n\n/**\n * Variable: initialValue\n * \n * Holds the initial editing value to check if the current value was modified.\n */\nmxCellEditor.prototype.initialValue = null;\n\n/**\n * Function: init\n *\n * Creates the <textarea> and installs the event listeners. The key handler\n * updates the <modified> state.\n */\nmxCellEditor.prototype.init = function ()\n{\n\tthis.textarea = document.createElement('div');\n\tthis.textarea.className = 'mxCellEditor mxPlainTextEditor';\n\tthis.textarea.contentEditable = true;\n\t\n\t// Workaround for selection outside of DIV if height is 0\n\tif (mxClient.IS_GC)\n\t{\n\t\tthis.textarea.style.minHeight = '1em';\n\t}\n\n\tthis.textarea.style.position = ((this.isLegacyEditor())) ? 'absolute' : 'relative';\n\tthis.installListeners(this.textarea);\n};\n\n/**\n * Function: applyValue\n * \n * Called in <stopEditing> if cancel is false to invoke <mxGraph.labelChanged>.\n */\nmxCellEditor.prototype.applyValue = function(state, value)\n{\n\tthis.graph.labelChanged(state.cell, value, this.trigger);\n};\n\n/**\n * Function: getInitialValue\n * \n * Gets the initial editing value for the given cell.\n */\nmxCellEditor.prototype.getInitialValue = function(state, trigger)\n{\n\tvar result = mxUtils.htmlEntities(this.graph.getEditingValue(state.cell, trigger), false);\n\t\n    // Workaround for trailing line breaks being ignored in the editor\n\tif (!mxClient.IS_QUIRKS && document.documentMode != 8 && document.documentMode != 9 &&\n\t\tdocument.documentMode != 10)\n\t{\n\t\tresult = mxUtils.replaceTrailingNewlines(result, '<div><br></div>');\n\t}\n    \n    return result.replace(/\\n/g, '<br>');\n};\n\n/**\n * Function: getCurrentValue\n * \n * Returns the current editing value.\n */\nmxCellEditor.prototype.getCurrentValue = function(state)\n{\n\treturn mxUtils.extractTextWithWhitespace(this.textarea.childNodes);\n};\n\n/**\n * Function: isCancelEditingKeyEvent\n * \n * Returns true if <escapeCancelsEditing> is true and shift, control and meta\n * are not pressed.\n */\nmxCellEditor.prototype.isCancelEditingKeyEvent = function(evt)\n{\n\treturn this.escapeCancelsEditing || mxEvent.isShiftDown(evt) || mxEvent.isControlDown(evt) || mxEvent.isMetaDown(evt);\n};\n\n/**\n * Function: installListeners\n * \n * Installs listeners for focus, change and standard key event handling.\n */\nmxCellEditor.prototype.installListeners = function(elt)\n{\n\t// Applies value if focus is lost\n\tmxEvent.addListener(elt, 'blur', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.blurEnabled)\n\t\t{\n\t\t\tthis.focusLost(evt);\n\t\t}\n\t}));\n\n\t// Updates modified state and handles placeholder text\n\tmxEvent.addListener(elt, 'keydown', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (!mxEvent.isConsumed(evt))\n\t\t{\n\t\t\tif (this.isStopEditingEvent(evt))\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(false);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t\telse if (evt.keyCode == 27 /* Escape */)\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(this.isCancelEditingKeyEvent(evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t}\n\t}));\n\n\t// Keypress only fires if printable key was pressed and handles removing the empty placeholder\n\tvar keypressHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Clears the initial empty label on the first keystroke\n\t\t\t// and workaround for FF which fires keypress for delete and backspace\n\t\t\tif (this.clearOnChange && elt.innerHTML == this.getEmptyLabelText() &&\n\t\t\t\t(!mxClient.IS_FF || (evt.keyCode != 8 /* Backspace */ && evt.keyCode != 46 /* Delete */)))\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t\telt.innerHTML = '';\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, 'keypress', keypressHandler);\n\tmxEvent.addListener(elt, 'paste', keypressHandler);\n\t\n\t// Handler for updating the empty label text value after a change\n\tvar keyupHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Uses an optional text value for sempty labels which is cleared\n\t\t\t// when the first keystroke appears. This makes it easier to see\n\t\t\t// that a label is being edited even if the label is empty.\n\t\t\t// In Safari and FF, an empty text is represented by <BR> which isn't enough to force a valid size\n\t\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t\t{\n\t\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\t\tthis.clearOnChange = this.textarea.innerHTML.length > 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keyup', keyupHandler);\n\tmxEvent.addListener(elt, 'cut', keyupHandler);\n\tmxEvent.addListener(elt, 'paste', keyupHandler);\n\n\t// Adds automatic resizing of the textbox while typing using input, keyup and/or DOM change events\n\tvar evtName = (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keydown';\n\t\n\tvar resizeHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null && this.autoSize && !mxEvent.isConsumed(evt))\n\t\t{\n\t\t\t// Asynchronous is needed for keydown and shows better results for input events overall\n\t\t\t// (ie non-blocking and cases where the offsetWidth/-Height was wrong at this time)\n\t\t\tif (this.resizeThread != null)\n\t\t\t{\n\t\t\t\twindow.clearTimeout(this.resizeThread);\n\t\t\t}\n\t\t\t\n\t\t\tthis.resizeThread = window.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resizeThread = null;\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t});\n\t\n\tmxEvent.addListener(elt, evtName, resizeHandler);\n\n\tif (document.documentMode >= 9)\n\t{\n\t\tmxEvent.addListener(elt, 'DOMNodeRemoved', resizeHandler);\n\t\tmxEvent.addListener(elt, 'DOMNodeInserted', resizeHandler);\n\t}\n\telse\n\t{\n\t\tmxEvent.addListener(elt, 'cut', resizeHandler);\n\t\tmxEvent.addListener(elt, 'paste', resizeHandler);\n\t}\n};\n\n/**\n * Function: isStopEditingEvent\n * \n * Returns true if the given keydown event should stop cell editing. This\n * returns true if F2 is pressed of if <mxGraph.enterStopsCellEditing> is true\n * and enter is pressed without control or shift.\n */\nmxCellEditor.prototype.isStopEditingEvent = function(evt)\n{\n\treturn evt.keyCode == 113 /* F2 */ || (this.graph.isEnterStopsCellEditing() &&\n\t\tevt.keyCode == 13 /* Enter */ && !mxEvent.isControlDown(evt) &&\n\t\t!mxEvent.isShiftDown(evt));\n};\n\n/**\n * Function: isEventSource\n * \n * Returns true if this editor is the source for the given native event.\n */\nmxCellEditor.prototype.isEventSource = function(evt)\n{\n\treturn mxEvent.getSource(evt) == this.textarea;\n};\n\n/**\n * Function: resize\n * \n * Returns <modified>.\n */\nmxCellEditor.prototype.resize = function()\n{\n\tvar state = this.graph.getView().getState(this.editingCell);\n\t\n\tif (state == null)\n\t{\n\t\tthis.stopEditing(true);\n\t}\n\telse if (this.textarea != null)\n\t{\n\t\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n \t\tvar scale = this.graph.getView().scale;\n \t\tvar m = null;\n\t\t\n\t\tif (!this.autoSize || (state.style[mxConstants.STYLE_OVERFLOW] == 'fill'))\n\t\t{\n\t\t\t// Specifies the bounds of the editor box\n\t\t\tthis.bounds = this.getEditorBounds(state);\n\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + 'px';\n\t\t\tthis.textarea.style.height = Math.round(this.bounds.height / scale) + 'px';\n\t\t\t\n\t\t\t// FIXME: Offset when scaled\n\t\t\tif (document.documentMode == 8 || mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.round(this.bounds.x) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.round(this.bounds.y) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x + 1)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y + 1)) + 'px';\n\t\t\t}\n\t\t\t\n\t\t\t// Installs native word wrapping and avoids word wrap for empty label placeholder\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + this.wordWrapPadding + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t \t{\n\t \t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\tm = (state.text != null) ? state.text.margin : null;\n\t\t\t\n\t\t\tif (m == null)\n\t\t\t{\n\t\t\t\tm = mxUtils.getAlignmentAsPoint(mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_CENTER),\n\t\t\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE));\n\t\t\t}\n\t\t\t\n\t \t\tif (isEdge)\n\t\t\t{\n\t\t\t\tthis.bounds = new mxRectangle(state.absoluteOffset.x, state.absoluteOffset.y, 0, 0);\n\t\t\t\t\n\t\t\t\tif (lw != null)\n\t\t\t \t{\n\t\t\t\t\tvar tmp = (parseFloat(lw) + 2) * scale;\n\t\t\t\t\tthis.bounds.width = tmp;\n\t\t\t\t\tthis.bounds.x += m.x * tmp;\n\t\t\t \t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar bds = mxRectangle.fromRectangle(state);\n\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\tbds = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(bds) : bds;\n\t\t\t \t\n\t\t\t \tif (lw != null)\n\t\t\t \t{\n\t\t\t \t\tbds.width = parseFloat(lw) * scale;\n\t\t\t \t}\n\t\t\t \t\n\t\t\t \tif (!state.view.graph.cellRenderer.legacySpacing || state.style[mxConstants.STYLE_OVERFLOW] != 'width')\n\t\t\t \t{\n\t\t\t\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 2) * scale;\n\t\t\t\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\t\t\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\t\t\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\t\t\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\t\t\t\t\n\t\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\t\tbds = new mxRectangle(bds.x + spacingLeft, bds.y + spacingTop,\n\t\t\t\t\t\tbds.width - ((hpos == mxConstants.ALIGN_CENTER && lw == null) ? (spacingLeft + spacingRight) : 0),\n\t\t\t\t\t\tbds.height - ((vpos == mxConstants.ALIGN_MIDDLE) ? (spacingTop + spacingBottom) : 0));\n\t\t\t \t}\n\n\t\t\t\tthis.bounds = new mxRectangle(bds.x + state.absoluteOffset.x, bds.y + state.absoluteOffset.y, bds.width, bds.height);\n\t\t\t}\n\n\t\t\t// Needed for word wrap inside text blocks with oversize lines to match the final result where\n\t \t\t// the width of the longest line is used as the reference for text alignment in the cell\n\t \t\t// TODO: Fix word wrapping preview for edge labels in helloworld.html\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t \t\t// Forces automatic reflow if text is removed from an oversize label and normal word wrap\n\t\t\t\tvar tmp = Math.round(this.bounds.width / ((document.documentMode == 8) ? scale : scale)) + this.wordWrapPadding;\n\n\t\t\t\tif (this.textarea.style.position != 'relative')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = tmp + 'px';\n\t\t\t\t\t\n\t\t\t\t\tif (this.textarea.scrollWidth > tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.textarea.style.width = this.textarea.scrollWidth + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.maxWidth = tmp + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// KNOWN: Trailing cursor in IE9 quirks mode is not visible\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\tthis.textarea.style.width = '';\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\t// Workaround for wrong measuring in IE8 standards\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\tthis.textarea.style.zoom = '1';\n\t\t\t\tthis.textarea.style.height = 'auto';\n\t\t\t}\n\t\t\t\n\t\t\tvar ow = this.textarea.scrollWidth;\n\t\t\tvar oh = this.textarea.scrollHeight;\n\t\t\t\n\t\t\t// TODO: Update CSS width and height if smaller than minResize or remove minResize\n\t\t\t//if (this.minResize != null)\n\t\t\t//{\n\t\t\t//\tow = Math.max(ow, this.minResize.width);\n\t\t\t//\toh = Math.max(oh, this.minResize.height);\n\t\t\t//}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\t// LATER: Scaled wrapping and position is wrong in IE8\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil((this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2) / scale)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil((this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1) / scale)) + 'px';\n\t\t\t\t// Workaround for wrong event handling width and height\n\t\t\t\tthis.textarea.style.width = Math.round(ow * scale) + 'px';\n\t\t\t\tthis.textarea.style.height = Math.round(oh * scale) + 'px';\n\t\t\t}\n\t\t\telse if (mxClient.IS_QUIRKS)\n\t\t\t{\t\t\t\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil(this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil(this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1)) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x - m.x * (this.bounds.width - 2)) + 1) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y - m.y * (this.bounds.height - 4) + ((m.y == -1) ? 3 : 0)) + 1) + 'px';\n\t\t\t}\n\t \t}\n\n\t\tif (mxClient.IS_VML)\n\t\t{\n\t\t\tthis.textarea.style.zoom = scale;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transformOrigin', '0px 0px');\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transform',\n\t\t\t\t'scale(' + scale + ',' + scale + ')' + ((m == null) ? '' :\n\t\t\t\t' translate(' + (m.x * 100) + '%,' + (m.y * 100) + '%)'));\n\t\t}\n\t}\n};\n\n/**\n * Function: focusLost\n *\n * Called if the textarea has lost focus.\n */\nmxCellEditor.prototype.focusLost = function()\n{\n\tthis.stopEditing(!this.graph.isInvokesStopCellEditing());\n};\n\n/**\n * Function: getBackgroundColor\n * \n * Returns the background color for the in-place editor. This implementation\n * always returns null.\n */\nmxCellEditor.prototype.getBackgroundColor = function(state)\n{\n\treturn null;\n};\n\n/**\n * Function: isLegacyEditor\n * \n * Returns true if max-width is not supported or if the SVG root element in\n * in the graph does not have CSS position absolute. In these cases the text\n * editor must use CSS position absolute to avoid an offset but it will have\n * a less accurate line wrapping width during the text editing preview. This\n * implementation returns true for IE8- and quirks mode or if the CSS position\n * of the SVG element is not absolute.\n */\nmxCellEditor.prototype.isLegacyEditor = function()\n{\n\tif (mxClient.IS_VML)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\tvar absoluteRoot = false;\n\t\t\n\t\tif (mxClient.IS_SVG)\n\t\t{\n\t\t\tvar root = this.graph.view.getDrawPane().ownerSVGElement;\n\t\t\t\n\t\t\tif (root != null)\n\t\t\t{\n\t\t\t\tabsoluteRoot = mxUtils.getCurrentStyle(root).position == 'absolute';\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn !absoluteRoot;\n\t}\n};\n\n/**\n * Function: startEditing\n *\n * Starts the editor for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> to start editing.\n * trigger - Optional mouse event that triggered the editor.\n */\nmxCellEditor.prototype.startEditing = function(cell, trigger)\n{\n\tthis.stopEditing(true);\n\t\n\t// Creates new textarea instance\n\tif (this.textarea == null)\n\t{\n\t\tthis.init();\n\t}\n\t\n\tif (this.graph.tooltipHandler != null)\n\t{\n\t\tthis.graph.tooltipHandler.hideTooltip();\n\t}\n\t\n\tvar state = this.graph.getView().getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\t// Configures the style of the in-place editor\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar size = mxUtils.getValue(state.style, mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE);\n\t\tvar family = mxUtils.getValue(state.style, mxConstants.STYLE_FONTFAMILY, mxConstants.DEFAULT_FONTFAMILY);\n\t\tvar color = mxUtils.getValue(state.style, mxConstants.STYLE_FONTCOLOR, 'black');\n\t\tvar align = mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_LEFT);\n\t\tvar bold = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_BOLD) == mxConstants.FONT_BOLD;\n\t\tvar italic = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC;\n\t\tvar uline = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE;\n\t\t\n\t\tthis.textarea.style.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? Math.round(size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\t\tthis.textarea.style.backgroundColor = this.getBackgroundColor(state);\n\t\tthis.textarea.style.textDecoration = (uline) ? 'underline' : '';\n\t\tthis.textarea.style.fontWeight = (bold) ? 'bold' : 'normal';\n\t\tthis.textarea.style.fontStyle = (italic) ? 'italic' : '';\n\t\tthis.textarea.style.fontSize = Math.round(size) + 'px';\n\t\tthis.textarea.style.zIndex = this.zIndex;\n\t\tthis.textarea.style.fontFamily = family;\n\t\tthis.textarea.style.textAlign = align;\n\t\tthis.textarea.style.outline = 'none';\n\t\tthis.textarea.style.color = color;\n\t\t\n\t\tvar dir = this.textDirection = mxUtils.getValue(state.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO)\n\t\t{\n\t\t\tif (state != null && state.text != null && state.text.dialect != mxConstants.DIALECT_STRICTHTML &&\n\t\t\t\t!mxUtils.isNode(state.text.value))\n\t\t\t{\n\t\t\t\tdir = state.text.getAutoDirection();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tthis.textarea.setAttribute('dir', dir);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.textarea.removeAttribute('dir');\n\t\t}\n\n\t\t// Sets the initial editing value\n\t\tthis.textarea.innerHTML = this.getInitialValue(state, trigger) || '';\n\t\tthis.initialValue = this.textarea.innerHTML;\n\n\t\t// Uses an optional text value for empty labels which is cleared\n\t\t// when the first keystroke appears. This makes it easier to see\n\t\t// that a label is being edited even if the label is empty.\n\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t{\n\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\tthis.clearOnChange = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.clearOnChange = this.textarea.innerHTML == this.getEmptyLabelText();\n\t\t}\n\n\t\tthis.graph.container.appendChild(this.textarea);\n\t\t\n\t\t// Update this after firing all potential events that could update the cleanOnChange flag\n\t\tthis.editingCell = cell;\n\t\tthis.trigger = trigger;\n\t\tthis.textNode = null;\n\n\t\tif (state.text != null && this.isHideLabel(state))\n\t\t{\n\t\t\tthis.textNode = state.text.node;\n\t\t\tthis.textNode.style.visibility = 'hidden';\n\t\t}\n\n\t\t// Workaround for initial offsetHeight not ready for heading in markup\n\t\tif (this.autoSize && (this.graph.model.isEdge(state.cell) || state.style[mxConstants.STYLE_OVERFLOW] != 'fill'))\n\t\t{\n\t\t\twindow.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t\t\n\t\tthis.resize();\n\t\t\n\t\t// Workaround for NS_ERROR_FAILURE in FF\n\t\ttry\n\t\t{\n\t\t\t// Prefers blinking cursor over no selected text if empty\n\t\t\tthis.textarea.focus();\n\t\t\t\n\t\t\tif (this.isSelectText() && this.textarea.innerHTML.length > 0 &&\n\t\t\t\t(this.textarea.innerHTML != this.getEmptyLabelText() || !this.clearOnChange))\n\t\t\t{\n\t\t\t\tdocument.execCommand('selectAll', false, null);\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\t}\n};\n\n/**\n * Function: isSelectText\n * \n * Returns <selectText>.\n */\nmxCellEditor.prototype.isSelectText = function()\n{\n\treturn this.selectText;\n};\n\n/**\n * Function: isSelectText\n * \n * Returns <selectText>.\n */\nmxCellEditor.prototype.clearSelection = function()\n{\n\tvar selection = null;\n\t\n\tif (window.getSelection)\n\t{\n\t\tselection = window.getSelection();\n\t}\n\telse if (document.selection)\n\t{\n\t\tselection = document.selection;\n\t}\n\t\n\tif (selection != null)\n\t{\n\t\tif (selection.empty)\n\t\t{\n\t\t\tselection.empty();\n\t\t}\n\t\telse if (selection.removeAllRanges)\n\t\t{\n\t\t\tselection.removeAllRanges();\n\t\t}\n\t}\n};\n\n/**\n * Function: stopEditing\n *\n * Stops the editor and applies the value if cancel is false.\n */\nmxCellEditor.prototype.stopEditing = function(cancel)\n{\n\tcancel = cancel || false;\n\t\n\tif (this.editingCell != null)\n\t{\n\t\tif (this.textNode != null)\n\t\t{\n\t\t\tthis.textNode.style.visibility = 'visible';\n\t\t\tthis.textNode = null;\n\t\t}\n\n\t\tvar state = (!cancel) ? this.graph.view.getState(this.editingCell) : null;\n\n\t\tvar initial = this.initialValue;\n\t\tthis.initialValue = null;\n\t\tthis.editingCell = null;\n\t\tthis.trigger = null;\n\t\tthis.bounds = null;\n\t\tthis.textarea.blur();\n\t\tthis.clearSelection();\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tif (this.clearOnChange && this.textarea.innerHTML == this.getEmptyLabelText())\n\t\t{\n\t\t\tthis.textarea.innerHTML = '';\n\t\t\tthis.clearOnChange = false;\n\t\t}\n\t\t\n\t\tif (state != null && this.textarea.innerHTML != initial)\n\t\t{\n\t\t\tthis.prepareTextarea();\n\t\t\tvar value = this.getCurrentValue(state);\n\t\t\t\n\t\t\tif (value != null)\n\t\t\t{\n\t\t\t\tthis.applyValue(state, value);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Forces new instance on next edit for undo history reset\n\t\tmxEvent.release(this.textarea);\n\t\tthis.textarea = null;\n\t}\n};\n\n/**\n * Function: prepareTextarea\n * \n * Prepares the textarea for getting its value in <stopEditing>.\n * This implementation removes the extra trailing linefeed in Firefox.\n */\nmxCellEditor.prototype.prepareTextarea = function()\n{\n\tif (mxClient.IS_FF && this.textarea.lastChild != null &&\n\t\tthis.textarea.lastChild.nodeName == 'BR')\n\t{\n\t\tthis.textarea.removeChild(this.textarea.lastChild);\n\t}\n};\n\n/**\n * Function: isHideLabel\n * \n * Returns true if the label should be hidden while the cell is being\n * edited.\n */\nmxCellEditor.prototype.isHideLabel = function(state)\n{\n\treturn true;\n};\n\n/**\n * Function: getMinimumSize\n * \n * Returns the minimum width and height for editing the given state.\n */\nmxCellEditor.prototype.getMinimumSize = function(state)\n{\n\tvar scale = this.graph.getView().scale;\n\t\n\treturn new mxRectangle(0, 0, (state.text == null) ? 30 : state.text.size * scale + 20,\n\t\t\t(this.textarea.style.textAlign == 'left') ? 120 : 40);\n};\n\n/**\n * Function: getEditorBounds\n * \n * Returns the <mxRectangle> that defines the bounds of the editor.\n */\nmxCellEditor.prototype.getEditorBounds = function(state)\n{\n\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n\tvar scale = this.graph.getView().scale;\n\tvar minSize = this.getMinimumSize(state);\n\tvar minWidth = minSize.width;\n \tvar minHeight = minSize.height;\n \tvar result = null;\n \t\n \tif (!isEdge && state.view.graph.cellRenderer.legacySpacing && state.style[mxConstants.STYLE_OVERFLOW] == 'fill')\n \t{\n \t\tresult = state.shape.getLabelBounds(mxRectangle.fromRectangle(state));\n \t}\n \telse\n \t{\n\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 0) * scale;\n\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\n\t \tresult = new mxRectangle(state.x, state.y,\n\t \t\t Math.max(minWidth, state.width - spacingLeft - spacingRight),\n\t \t\t Math.max(minHeight, state.height - spacingTop - spacingBottom));\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\t\n\t\tresult = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(result) : result;\n\t\n\t\tif (isEdge)\n\t\t{\n\t\t\tresult.x = state.absoluteOffset.x;\n\t\t\tresult.y = state.absoluteOffset.y;\n\t\n\t\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t\t{\n\t\t\t\t// Workaround for label containing just spaces in which case\n\t\t\t\t// the bounding box location contains negative numbers \n\t\t\t\tif (state.text.boundingBox.x > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.x = state.text.boundingBox.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.y > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.y = state.text.boundingBox.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tresult.x = Math.min(result.x, state.text.boundingBox.x);\n\t\t\tresult.y = Math.min(result.y, state.text.boundingBox.y);\n\t\t}\n\t\n\t\tresult.x += spacingLeft;\n\t\tresult.y += spacingTop;\n\t\n\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tif (!isEdge)\n\t\t\t{\n\t\t\t\tresult.width = Math.max(result.width, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(result.height, state.text.boundingBox.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.width = Math.max(minWidth, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(minHeight, state.text.boundingBox.height);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Applies the horizontal and vertical label positions\n\t\tif (this.graph.getModel().isVertex(state.cell))\n\t\t{\n\t\t\tvar horizontal = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\n\t\t\tif (horizontal == mxConstants.ALIGN_LEFT)\n\t\t\t{\n\t\t\t\tresult.x -= state.width;\n\t\t\t}\n\t\t\telse if (horizontal == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tresult.x += state.width;\n\t\t\t}\n\t\n\t\t\tvar vertical = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\n\t\t\tif (vertical == mxConstants.ALIGN_TOP)\n\t\t\t{\n\t\t\t\tresult.y -= state.height;\n\t\t\t}\n\t\t\telse if (vertical == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tresult.y += state.height;\n\t\t\t}\n\t\t}\n \t}\n \t\n \treturn new mxRectangle(Math.round(result.x), Math.round(result.y), Math.round(result.width), Math.round(result.height));\n};\n\n/**\n * Function: getEmptyLabelText\n *\n * Returns the initial label value to be used of the label of the given\n * cell is empty. This label is displayed and cleared on the first keystroke.\n * This implementation returns <emptyLabelText>.\n * \n * Parameters:\n * \n * cell - <mxCell> for which a text for an empty editing box should be\n * returned.\n */\nmxCellEditor.prototype.getEmptyLabelText = function (cell)\n{\n\treturn this.emptyLabelText;\n};\n\n/**\n * Function: getEditingCell\n *\n * Returns the cell that is currently being edited or null if no cell is\n * being edited.\n */\nmxCellEditor.prototype.getEditingCell = function ()\n{\n\treturn this.editingCell;\n};\n\n/**\n * Function: destroy\n *\n * Destroys the editor and removes all associated resources.\n */\nmxCellEditor.prototype.destroy = function ()\n{\n\tif (this.textarea != null)\n\t{\n\t\tmxEvent.release(this.textarea);\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tthis.textarea = null;\n\n\t}\n\t\t\t\n\tif (this.changeHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t\tthis.changeHandler = null;\n\t}\n\n\tif (this.zoomHandler)\n\t{\n\t\tthis.graph.view.removeListener(this.zoomHandler);\n\t\tthis.zoomHandler = null;\n\t}\n};\n\n__mxOutput.mxCellEditor = typeof mxCellEditor !== 'undefined' ? mxCellEditor : undefined;\n"]}