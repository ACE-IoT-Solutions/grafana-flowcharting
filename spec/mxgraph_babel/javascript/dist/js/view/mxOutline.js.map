{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/view/mxOutline.js"],"names":["mxOutline","source","container","init","prototype","outline","graphRenderHint","mxConstants","RENDERING_HINT_FASTER","enabled","showViewport","border","sizerSize","labelsVisible","updateOnPan","sizerImage","minScale","suspended","forceVmlHandles","document","documentMode","createGraph","graph","mxGraph","getModel","getStylesheet","foldingEnabled","autoScroll","outlineGraphModelChanged","graphModelChanged","mxUtils","bind","changes","apply","arguments","mxClient","IS_SVG","node","getView","getCanvas","parentNode","setAttribute","setEnabled","updateHandler","sender","evt","active","update","addListener","mxEvent","CHANGE","addMouseListener","view","SCALE","TRANSLATE","SCALE_AND_TRANSLATE","DOWN","UP","panHandler","PAN","refreshHandler","setStylesheet","refresh","REFRESH","bounds","mxRectangle","selectionBorder","mxRectangleShape","OUTLINE_COLOR","OUTLINE_STROKEWIDTH","dialect","isHtmlAllowed","getOverlayPane","handler","t","getSource","redirect","fireMouseEvent","MOUSE_MOVE","mxMouseEvent","redirect2","removeGestureListeners","MOUSE_UP","addGestureListeners","MOUSE_DOWN","sizer","createSizer","style","cursor","display","isEnabled","value","setZoomEnabled","visibility","mxImageShape","width","height","src","OUTLINE_HANDLE_FILLCOLOR","OUTLINE_HANDLE_STROKECOLOR","getSourceContainerSize","scrollWidth","scrollHeight","getOutlineOffset","scale","getSourceGraphBounds","getGraphBounds","revalidate","sourceScale","scaledGraphBounds","unscaledGraphBounds","x","panDx","y","panDy","unscaledFinderBounds","clientWidth","clientHeight","union","clone","add","size","completeWidth","Math","max","completeHeight","availableWidth","availableHeight","outlineScale","min","isNaN","navView","currentRoot","setCurrentRoot","translate","tx","ty","off","t2","scale2","scale3","scrollLeft","scrollTop","b","redraw","b2","mouseDown","me","tol","isMouseEvent","getEvent","tolerance","hit","allowHandleBoundsCheck","IS_IE","getGraphX","getGraphY","zoom","isSource","intersects","shape","startX","getX","startY","getY","useScrollbarsForPanning","hasScrollbars","dx0","dy0","consume","mouseMove","delta","getTranslateForEvent","dx","dy","panGraph","viewRatio","mxPoint","mouseUp","abs","setTranslate","w","zoomTo","index","destroy","removeListener","removeMouseListener","__mxOutput","undefined"],"mappings":"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","file":"mxOutline.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxOutline\n *\n * Implements an outline (aka overview) for a graph. Set <updateOnPan> to true\n * to enable updates while the source graph is panning.\n * \n * Example:\n * \n * (code)\n * var outline = new mxOutline(graph, div);\n * (end)\n * \n * If an outline is used in an <mxWindow> in IE8 standards mode, the following\n * code makes sure that the shadow filter is not inherited and that any\n * transparent elements in the graph do not show the page background, but the\n * background of the graph container.\n * \n * (code)\n * if (document.documentMode == 8)\n * {\n *   container.style.filter = 'progid:DXImageTransform.Microsoft.alpha(opacity=100)';\n * }\n * (end)\n * \n * To move the graph to the top, left corner the following code can be used.\n * \n * (code)\n * var scale = graph.view.scale;\n * var bounds = graph.getGraphBounds();\n * graph.view.setTranslate(-bounds.x / scale, -bounds.y / scale);\n * (end)\n * \n * To toggle the suspended mode, the following can be used.\n * \n * (code)\n * outline.suspended = !outln.suspended;\n * if (!outline.suspended)\n * {\n *   outline.update(true);\n * }\n * (end)\n * \n * Constructor: mxOutline\n *\n * Constructs a new outline for the specified graph inside the given\n * container.\n * \n * Parameters:\n * \n * source - <mxGraph> to create the outline for.\n * container - DOM node that will contain the outline.\n */\nfunction mxOutline(source, container)\n{\n\tthis.source = source;\n\n\tif (container != null)\n\t{\n\t\tthis.init(container);\n\t}\n};\n\n/**\n * Function: source\n * \n * Reference to the source <mxGraph>.\n */\nmxOutline.prototype.source = null;\n\n/**\n * Function: outline\n * \n * Reference to the <mxGraph> that renders the outline.\n */\nmxOutline.prototype.outline = null;\n\n/**\n * Function: graphRenderHint\n * \n * Renderhint to be used for the outline graph. Default is faster.\n */\nmxOutline.prototype.graphRenderHint = mxConstants.RENDERING_HINT_FASTER;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxOutline.prototype.enabled = true;\n\n/**\n * Variable: showViewport\n * \n * Specifies a viewport rectangle should be shown. Default is true.\n */\nmxOutline.prototype.showViewport = true;\n\n/**\n * Variable: border\n * \n * Border to be added at the bottom and right. Default is 10.\n */\nmxOutline.prototype.border = 10;\n\n/**\n * Variable: enabled\n * \n * Specifies the size of the sizer handler. Default is 8.\n */\nmxOutline.prototype.sizerSize = 8;\n\n/**\n * Variable: labelsVisible\n * \n * Specifies if labels should be visible in the outline. Default is false.\n */\nmxOutline.prototype.labelsVisible = false;\n\n/**\n * Variable: updateOnPan\n * \n * Specifies if <update> should be called for <mxEvent.PAN> in the source\n * graph. Default is false.\n */\nmxOutline.prototype.updateOnPan = false;\n\n/**\n * Variable: sizerImage\n * \n * Optional <mxImage> to be used for the sizer. Default is null.\n */\nmxOutline.prototype.sizerImage = null;\n\n/**\n * Variable: minScale\n * \n * Minimum scale to be used. Default is 0.001.\n */\nmxOutline.prototype.minScale = 0.0001;\n\n/**\n * Variable: suspended\n * \n * Optional boolean flag to suspend updates. Default is false. This flag will\n * also suspend repaints of the outline. To toggle this switch, use the\n * following code.\n * \n * (code)\n * nav.suspended = !nav.suspended;\n * \n * if (!nav.suspended)\n * {\n *   nav.update(true);\n * }\n * (end)\n */\nmxOutline.prototype.suspended = false;\n\n/**\n * Variable: forceVmlHandles\n * \n * Specifies if VML should be used to render the handles in this control. This\n * is true for IE8 standards mode and false for all other browsers and modes.\n * This is a workaround for rendering issues of HTML elements over elements\n * with filters in IE 8 standards mode.\n */\nmxOutline.prototype.forceVmlHandles = document.documentMode == 8;\n\n/**\n * Function: createGraph\n * \n * Creates the <mxGraph> used in the outline.\n */\nmxOutline.prototype.createGraph = function(container)\n{\n\tvar graph = new mxGraph(container, this.source.getModel(), this.graphRenderHint, this.source.getStylesheet());\n\tgraph.foldingEnabled = false;\n\tgraph.autoScroll = false;\n\t\n\treturn graph;\n};\n\n/**\n * Function: init\n * \n * Initializes the outline inside the given container.\n */\nmxOutline.prototype.init = function(container)\n{\n\tthis.outline = this.createGraph(container);\n\t\n\t// Do not repaint when suspended\n\tvar outlineGraphModelChanged = this.outline.graphModelChanged;\n\tthis.outline.graphModelChanged = mxUtils.bind(this, function(changes)\n\t{\n\t\tif (!this.suspended && this.outline != null)\n\t\t{\n\t\t\toutlineGraphModelChanged.apply(this.outline, arguments);\n\t\t}\n\t});\n\n\t// Enables faster painting in SVG\n\tif (mxClient.IS_SVG)\n\t{\n\t\tvar node = this.outline.getView().getCanvas().parentNode;\n\t\tnode.setAttribute('shape-rendering', 'optimizeSpeed');\n\t\tnode.setAttribute('image-rendering', 'optimizeSpeed');\n\t}\n\t\n\t// Hides cursors and labels\n\tthis.outline.labelsVisible = this.labelsVisible;\n\tthis.outline.setEnabled(false);\n\t\n\tthis.updateHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (!this.suspended && !this.active)\n\t\t{\n\t\t\tthis.update();\n\t\t}\n\t});\n\t\n\t// Updates the scale of the outline after a change of the main graph\n\tthis.source.getModel().addListener(mxEvent.CHANGE, this.updateHandler);\n\tthis.outline.addMouseListener(this);\n\t\n\t// Adds listeners to keep the outline in sync with the source graph\n\tvar view = this.source.getView();\n\tview.addListener(mxEvent.SCALE, this.updateHandler);\n\tview.addListener(mxEvent.TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.SCALE_AND_TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.DOWN, this.updateHandler);\n\tview.addListener(mxEvent.UP, this.updateHandler);\n\n\t// Updates blue rectangle on scroll\n\tmxEvent.addListener(this.source.container, 'scroll', this.updateHandler);\n\t\n\tthis.panHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.updateOnPan)\n\t\t{\n\t\t\tthis.updateHandler.apply(this, arguments);\n\t\t}\n\t});\n\tthis.source.addListener(mxEvent.PAN, this.panHandler);\n\t\n\t// Refreshes the graph in the outline after a refresh of the main graph\n\tthis.refreshHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.outline.setStylesheet(this.source.getStylesheet());\n\t\tthis.outline.refresh();\n\t});\n\tthis.source.addListener(mxEvent.REFRESH, this.refreshHandler);\n\n\t// Creates the blue rectangle for the viewport\n\tthis.bounds = new mxRectangle(0, 0, 0, 0);\n\tthis.selectionBorder = new mxRectangleShape(this.bounds, null,\n\t\tmxConstants.OUTLINE_COLOR, mxConstants.OUTLINE_STROKEWIDTH);\n\tthis.selectionBorder.dialect = this.outline.dialect;\n\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.selectionBorder.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.selectionBorder.init(this.outline.getView().getOverlayPane());\n\n\t// Handles event by catching the initial pointer start and then listening to the\n\t// complete gesture on the event target. This is needed because all the events\n\t// are routed via the initial element even if that element is removed from the\n\t// DOM, which happens when we repaint the selection border and zoom handles.\n\tvar handler = mxUtils.bind(this, function(evt)\n\t{\n\t\tvar t = mxEvent.getSource(evt);\n\t\t\n\t\tvar redirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tvar redirect2 = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tmxEvent.removeGestureListeners(t, null, redirect, redirect2);\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(t, null, redirect, redirect2);\n\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t});\n\t\n\tmxEvent.addGestureListeners(this.selectionBorder.node, handler);\n\n\t// Creates a small blue rectangle for sizing (sizer handle)\n\tthis.sizer = this.createSizer();\n\t\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.sizer.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.sizer.init(this.outline.getView().getOverlayPane());\n\t\n\tif (this.enabled)\n\t{\n\t\tthis.sizer.node.style.cursor = 'nwse-resize';\n\t}\n\t\n\tmxEvent.addGestureListeners(this.sizer.node, handler);\n\n\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\tthis.sizer.node.style.display = this.selectionBorder.node.style.display;\n\tthis.selectionBorder.node.style.cursor = 'move';\n\n\tthis.update(false);\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxOutline.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: setZoomEnabled\n * \n * Enables or disables the zoom handling by showing or hiding the respective\n * handle.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setZoomEnabled = function(value)\n{\n\tthis.sizer.node.style.visibility = (value) ? 'visible' : 'hidden';\n};\n\n/**\n * Function: refresh\n * \n * Invokes <update> and revalidate the outline. This method is deprecated.\n */\nmxOutline.prototype.refresh = function()\n{\n\tthis.update(true);\n};\n\n/**\n * Function: createSizer\n * \n * Creates the shape used as the sizer.\n */\nmxOutline.prototype.createSizer = function()\n{\n\tif (this.sizerImage != null)\n\t{\n\t\tvar sizer = new mxImageShape(new mxRectangle(0, 0, this.sizerImage.width, this.sizerImage.height), this.sizerImage.src);\n\t\tsizer.dialect = this.outline.dialect;\n\t\t\n\t\treturn sizer;\n\t}\n\telse\n\t{\n\t\tvar sizer = new mxRectangleShape(new mxRectangle(0, 0, this.sizerSize, this.sizerSize),\n\t\t\tmxConstants.OUTLINE_HANDLE_FILLCOLOR, mxConstants.OUTLINE_HANDLE_STROKECOLOR);\n\t\tsizer.dialect = this.outline.dialect;\n\t\n\t\treturn sizer;\n\t}\n};\n\n/**\n * Function: getSourceContainerSize\n * \n * Returns the size of the source container.\n */\nmxOutline.prototype.getSourceContainerSize = function()\n{\n\treturn new mxRectangle(0, 0, this.source.container.scrollWidth, this.source.container.scrollHeight);\n};\n\n/**\n * Function: getOutlineOffset\n * \n * Returns the offset for drawing the outline graph.\n */\nmxOutline.prototype.getOutlineOffset = function(scale)\n{\n\treturn null;\n};\n\n/**\n * Function: getOutlineOffset\n * \n * Returns the offset for drawing the outline graph.\n */\nmxOutline.prototype.getSourceGraphBounds = function()\n{\n\treturn this.source.getGraphBounds();\n};\n\n/**\n * Function: update\n * \n * Updates the outline.\n */\nmxOutline.prototype.update = function(revalidate)\n{\n\tif (this.source != null && this.source.container != null &&\n\t\tthis.outline != null && this.outline.container != null)\n\t{\n\t\tvar sourceScale = this.source.view.scale;\n\t\tvar scaledGraphBounds = this.getSourceGraphBounds();\n\t\tvar unscaledGraphBounds = new mxRectangle(scaledGraphBounds.x / sourceScale + this.source.panDx,\n\t\t\t\tscaledGraphBounds.y / sourceScale + this.source.panDy, scaledGraphBounds.width / sourceScale,\n\t\t\t\tscaledGraphBounds.height / sourceScale);\n\n\t\tvar unscaledFinderBounds = new mxRectangle(0, 0,\n\t\t\tthis.source.container.clientWidth / sourceScale,\n\t\t\tthis.source.container.clientHeight / sourceScale);\n\t\t\n\t\tvar union = unscaledGraphBounds.clone();\n\t\tunion.add(unscaledFinderBounds);\n\t\n\t\t// Zooms to the scrollable area if that is bigger than the graph\n\t\tvar size = this.getSourceContainerSize();\n\t\tvar completeWidth = Math.max(size.width / sourceScale, union.width);\n\t\tvar completeHeight = Math.max(size.height / sourceScale, union.height);\n\t\n\t\tvar availableWidth = Math.max(0, this.outline.container.clientWidth - this.border);\n\t\tvar availableHeight = Math.max(0, this.outline.container.clientHeight - this.border);\n\t\t\n\t\tvar outlineScale = Math.min(availableWidth / completeWidth, availableHeight / completeHeight);\n\t\tvar scale = (isNaN(outlineScale)) ? this.minScale : Math.max(this.minScale, outlineScale);\n\n\t\tif (scale > 0)\n\t\t{\n\t\t\tif (this.outline.getView().scale != scale)\n\t\t\t{\n\t\t\t\tthis.outline.getView().scale = scale;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\tvar navView = this.outline.getView();\n\t\t\t\n\t\t\tif (navView.currentRoot != this.source.getView().currentRoot)\n\t\t\t{\n\t\t\t\tnavView.setCurrentRoot(this.source.getView().currentRoot);\n\t\t\t}\n\n\t\t\tvar t = this.source.view.translate;\n\t\t\tvar tx = t.x + this.source.panDx;\n\t\t\tvar ty = t.y + this.source.panDy;\n\t\t\t\n\t\t\tvar off = this.getOutlineOffset(scale);\n\t\t\t\n\t\t\tif (off != null)\n\t\t\t{\n\t\t\t\ttx += off.x;\n\t\t\t\tty += off.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (unscaledGraphBounds.x < 0)\n\t\t\t{\n\t\t\t\ttx = tx - unscaledGraphBounds.x;\n\t\t\t}\n\t\t\tif (unscaledGraphBounds.y < 0)\n\t\t\t{\n\t\t\t\tty = ty - unscaledGraphBounds.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (navView.translate.x != tx || navView.translate.y != ty)\n\t\t\t{\n\t\t\t\tnavView.translate.x = tx;\n\t\t\t\tnavView.translate.y = ty;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\t// Prepares local variables for computations\n\t\t\tvar t2 = navView.translate;\n\t\t\tscale = this.source.getView().scale;\n\t\t\tvar scale2 = scale / navView.scale;\n\t\t\tvar scale3 = 1.0 / navView.scale;\n\t\t\tvar container = this.source.container;\n\t\t\t\n\t\t\t// Updates the bounds of the viewrect in the navigation\n\t\t\tthis.bounds = new mxRectangle(\n\t\t\t\t(t2.x - t.x - this.source.panDx) / scale3,\n\t\t\t\t(t2.y - t.y - this.source.panDy) / scale3,\n\t\t\t\t(container.clientWidth / scale2),\n\t\t\t\t(container.clientHeight / scale2));\n\t\t\t\n\t\t\t// Adds the scrollbar offset to the finder\n\t\t\tthis.bounds.x += this.source.container.scrollLeft * navView.scale / scale;\n\t\t\tthis.bounds.y += this.source.container.scrollTop * navView.scale / scale;\n\t\t\t\n\t\t\tvar b = this.selectionBorder.bounds;\n\t\t\t\n\t\t\tif (b.x != this.bounds.x || b.y != this.bounds.y || b.width != this.bounds.width || b.height != this.bounds.height)\n\t\t\t{\n\t\t\t\tthis.selectionBorder.bounds = this.bounds;\n\t\t\t\tthis.selectionBorder.redraw();\n\t\t\t}\n\t\t\n\t\t\t// Updates the bounds of the zoom handle at the bottom right\n\t\t\tvar b = this.sizer.bounds;\n\t\t\tvar b2 = new mxRectangle(this.bounds.x + this.bounds.width - b.width / 2,\n\t\t\t\t\tthis.bounds.y + this.bounds.height - b.height / 2, b.width, b.height);\n\n\t\t\tif (b.x != b2.x || b.y != b2.y || b.width != b2.width || b.height != b2.height)\n\t\t\t{\n\t\t\t\tthis.sizer.bounds = b2;\n\t\t\t\t\n\t\t\t\t// Avoids update of visibility in redraw for VML\n\t\t\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t\t\t{\n\t\t\t\t\tthis.sizer.redraw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (revalidate)\n\t\t\t{\n\t\t\t\tthis.outline.view.revalidate();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by starting a translation or zoom.\n */\nmxOutline.prototype.mouseDown = function(sender, me)\n{\n\tif (this.enabled && this.showViewport)\n\t{\n\t\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.source.tolerance : 0;\n\t\tvar hit = (this.source.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\t\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\t\tthis.zoom = me.isSource(this.sizer) || (hit != null && mxUtils.intersects(shape.bounds, hit));\n\t\tthis.startX = me.getX();\n\t\tthis.startY = me.getY();\n\t\tthis.active = true;\n\n\t\tif (this.source.useScrollbarsForPanning && mxUtils.hasScrollbars(this.source.container))\n\t\t{\n\t\t\tthis.dx0 = this.source.container.scrollLeft;\n\t\t\tthis.dy0 = this.source.container.scrollTop;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dx0 = 0;\n\t\t\tthis.dy0 = 0;\n\t\t}\n\t}\n\n\tme.consume();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by previewing the viewrect in <graph> and updating the\n * rectangle that represents the viewrect in the outline.\n */\nmxOutline.prototype.mouseMove = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\t\tthis.sizer.node.style.display = this.selectionBorder.node.style.display; \n\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\tvar bounds = null;\n\t\t\n\t\tif (!this.zoom)\n\t\t{\n\t\t\t// Previews the panning on the source graph\n\t\t\tvar scale = this.outline.getView().scale;\n\t\t\tbounds = new mxRectangle(this.bounds.x + dx,\n\t\t\t\tthis.bounds.y + dy, this.bounds.width, this.bounds.height);\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t\tdx /= scale;\n\t\t\tdx *= this.source.getView().scale;\n\t\t\tdy /= scale;\n\t\t\tdy *= this.source.getView().scale;\n\t\t\tthis.source.panGraph(-dx - this.dx0, -dy - this.dy0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Does *not* preview zooming on the source graph\n\t\t\tvar container = this.source.container;\n\t\t\tvar viewRatio = container.clientWidth / container.clientHeight;\n\t\t\tdy = dx / viewRatio;\n\t\t\tbounds = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y,\n\t\t\t\tMath.max(1, this.bounds.width + dx),\n\t\t\t\tMath.max(1, this.bounds.height + dy));\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t}\n\t\t\n\t\t// Updates the zoom handle\n\t\tvar b = this.sizer.bounds;\n\t\tthis.sizer.bounds = new mxRectangle(\n\t\t\tbounds.x + bounds.width - b.width / 2,\n\t\t\tbounds.y + bounds.height - b.height / 2,\n\t\t\tb.width, b.height);\n\t\t\n\t\t// Avoids update of visibility in redraw for VML\n\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t{\n\t\t\tthis.sizer.redraw();\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: getTranslateForEvent\n * \n * Gets the translate for the given mouse event. Here is an example to limit\n * the outline to stay within positive coordinates:\n * \n * (code)\n * outline.getTranslateForEvent = function(me)\n * {\n *   var pt = new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n *   \n *   if (!this.zoom)\n *   {\n *     var tr = this.source.view.translate;\n *     pt.x = Math.max(tr.x * this.outline.view.scale, pt.x);\n *     pt.y = Math.max(tr.y * this.outline.view.scale, pt.y);\n *   }\n *   \n *   return pt;\n * };\n * (end)\n */\nmxOutline.prototype.getTranslateForEvent = function(me)\n{\n\treturn new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the translation or zoom to <graph>.\n */\nmxOutline.prototype.mouseUp = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\t\n\t\tif (Math.abs(dx) > 0 || Math.abs(dy) > 0)\n\t\t{\n\t\t\tif (!this.zoom)\n\t\t\t{\n\t\t\t\t// Applies the new translation if the source\n\t\t\t\t// has no scrollbars\n\t\t\t\tif (!this.source.useScrollbarsForPanning ||\n\t\t\t\t\t!mxUtils.hasScrollbars(this.source.container))\n\t\t\t\t{\n\t\t\t\t\tthis.source.panGraph(0, 0);\n\t\t\t\t\tdx /= this.outline.getView().scale;\n\t\t\t\t\tdy /= this.outline.getView().scale;\n\t\t\t\t\tvar t = this.source.getView().translate;\n\t\t\t\t\tthis.source.getView().setTranslate(t.x - dx, t.y - dy);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Applies the new zoom\n\t\t\t\tvar w = this.selectionBorder.bounds.width;\n\t\t\t\tvar scale = this.source.getView().scale;\n\t\t\t\tthis.source.zoomTo(Math.max(this.minScale, scale - (dx * scale) / w), false);\n\t\t\t}\n\n\t\t\tthis.update();\n\t\t\tme.consume();\n\t\t}\n\t\t\t\n\t\t// Resets the state of the handler\n\t\tthis.index = null;\n\t\tthis.active = false;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroy this outline and removes all listeners from <source>.\n */\nmxOutline.prototype.destroy = function()\n{\n\tif (this.source != null)\n\t{\n\t\tthis.source.removeListener(this.panHandler);\n\t\tthis.source.removeListener(this.refreshHandler);\n\t\tthis.source.getModel().removeListener(this.updateHandler);\n\t\tthis.source.getView().removeListener(this.updateHandler);\n\t\tmxEvent.addListener(this.source.container, 'scroll', this.updateHandler);\n\t\tthis.source = null;\n\t}\n\t\n\tif (this.outline != null)\n\t{\n\t\tthis.outline.removeMouseListener(this);\n\t\tthis.outline.destroy();\n\t\tthis.outline = null;\n\t}\n\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.destroy();\n\t\tthis.selectionBorder = null;\n\t}\n\t\n\tif (this.sizer != null)\n\t{\n\t\tthis.sizer.destroy();\n\t\tthis.sizer = null;\n\t}\n};\n\n__mxOutput.mxOutline = typeof mxOutline !== 'undefined' ? mxOutline : undefined;\n"]}