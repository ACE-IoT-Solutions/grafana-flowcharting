{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/view/mxEdgeStyle.js"],"names":["mxEdgeStyle","EntityRelation","state","source","target","points","result","view","graph","segment","mxUtils","getValue","style","mxConstants","STYLE_SEGMENT","ENTITY_SEGMENT","scale","pts","absolutePoints","p0","pe","length","isSourceLeft","mxCellState","x","y","constraint","getPortConstraints","DIRECTION_MASK_NONE","DIRECTION_MASK_WEST","DIRECTION_MASK_EAST","sourceGeometry","getCellGeometry","cell","relative","width","isTargetLeft","targetGeometry","x0","y0","getRoutingCenterY","xe","ye","seg","dx","dep","mxPoint","arr","Math","min","max","push","midY","Loop","i","pt","transformControlPoint","contains","dy","gridSize","dir","STYLE_DIRECTION","DIRECTION_WEST","DIRECTION_NORTH","DIRECTION_SOUTH","getRoutingCenterX","abs","height","DIRECTION_EAST","ElbowConnector","vertical","horizontal","left","right","top","bottom","STYLE_ELBOW","ELBOW_VERTICAL","TopToBottom","SideToSide","l","r","round","y1","y2","t","b","SegmentConnector","hints","tol","lastPushed","hint","pushPoint","clone","lastInx","newHints","tmp","currentTerm","currentPt","hozChan","vertChan","currentHint","fixedVertAlign","fixedHozAlign","inHozChan","inVertChan","slice","splice","orthBuffer","orthPointsFallback","dirVectors","wayPoints1","routePatterns","inlineRoutePatterns","vertexSeperations","limits","LEFT_MASK","TOP_MASK","RIGHT_MASK","BOTTOM_MASK","LEFT","TOP","RIGHT","BOTTOM","SIDE_MASK","CENTER_MASK","SOURCE_MASK","TARGET_MASK","VERTEX_MASK","getJettySize","isSource","value","STYLE_SOURCE_JETTY_SIZE","STYLE_TARGET_JETTY_SIZE","STYLE_JETTY_SIZE","type","STYLE_STARTARROW","STYLE_ENDARROW","NONE","size","getNumber","STYLE_STARTSIZE","STYLE_ENDSIZE","DEFAULT_MARKERSIZE","ceil","OrthConnector","sourceEdge","getModel","isEdge","targetEdge","sourceX","sourceY","sourceWidth","sourceHeight","targetX","targetY","targetWidth","targetHeight","scaledSourceBuffer","scaledTargetBuffer","totalBuffer","tooShort","portConstraint","DIRECTION_MASK_ALL","rotation","STYLE_ROTATION","newRect","getBoundingBox","mxRectangle","geo","buffer","sourceCenX","sourceCenY","targetCenX","targetCenY","quad","DIRECTION_MASK_NORTH","DIRECTION_MASK_SOUTH","sourceTopDist","sourceLeftDist","sourceBottomDist","sourceRightDist","dirPref","horPref","vertPref","reversePortConstraints","preferredHorizDist","preferredVertDist","prefOrdering","preferredOrderSet","sourceIndex","targetIndex","routePattern","currentIndex","lastOrientation","initialOrientation","currentOrientation","nextDirection","directionIndex","direction","tar","sou","side","center","limit","souTar","lastX","deltaX","lastY","deltaY","targetOrientation","sameOrient","index","getRoutePattern","__mxOutput","undefined"],"mappings":";;;;;;;;;AAIIA,c,GACJ;AACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FCC,oBAAgB,wBAAUC,KAAV,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyCC,MAAzC,EAChB;AACA,SAAIC,OAAOL,MAAMK,IAAjB;AACC,SAAIC,QAAQD,KAAKC,KAAjB;AACA,SAAIC,UAAUC,QAAQC,QAAR,CAAiBT,MAAMU,KAAvB,EACZC,YAAYC,aADA,EAEZD,YAAYE,cAFA,IAEkBR,KAAKS,KAFrC;;AAID,SAAIC,MAAMf,MAAMgB,cAAhB;AACA,SAAIC,KAAKF,IAAI,CAAJ,CAAT;AACA,SAAIG,KAAKH,IAAIA,IAAII,MAAJ,GAAW,CAAf,CAAT;;AAEC,SAAIC,eAAe,KAAnB;;AAED,SAAIH,MAAM,IAAV,EACA;AACChB,eAAS,IAAIoB,WAAJ,EAAT;AACApB,aAAOqB,CAAP,GAAWL,GAAGK,CAAd;AACArB,aAAOsB,CAAP,GAAWN,GAAGM,CAAd;AACA,MALD,MAMK,IAAItB,UAAU,IAAd,EACL;AACC,UAAIuB,aAAahB,QAAQiB,kBAAR,CAA2BxB,MAA3B,EAAmCD,KAAnC,EAA0C,IAA1C,EAAgDW,YAAYe,mBAA5D,CAAjB;;AAEA,UAAIF,cAAcb,YAAYe,mBAA1B,IAAiDF,cAAcb,YAAYgB,mBAAZ,GAClEhB,YAAYiB,mBADb,EAEA;AACCR,sBAAeI,cAAcb,YAAYgB,mBAAzC;AACA,OAJD,MAMA;AACE,WAAIE,iBAAiBvB,MAAMwB,eAAN,CAAsB7B,OAAO8B,IAA7B,CAArB;;AAEA,WAAIF,eAAeG,QAAnB,EACA;AACCZ,uBAAeS,eAAeP,CAAf,IAAoB,GAAnC;AACA,QAHD,MAIK,IAAIpB,UAAU,IAAd,EACL;AACCkB,uBAAelB,OAAOoB,CAAP,GAAWpB,OAAO+B,KAAlB,GAA0BhC,OAAOqB,CAAhD;AACA;AACF;AACD,MAtBI,MAwBL;AACC;AACA;;AAEA,SAAIY,eAAe,IAAnB;;AAED,SAAIhB,MAAM,IAAV,EACA;AACChB,eAAS,IAAImB,WAAJ,EAAT;AACAnB,aAAOoB,CAAP,GAAWJ,GAAGI,CAAd;AACApB,aAAOqB,CAAP,GAAWL,GAAGK,CAAd;AACA,MALD,MAMK,IAAIrB,UAAU,IAAd,EACJ;AACA,UAAIsB,aAAahB,QAAQiB,kBAAR,CAA2BvB,MAA3B,EAAmCF,KAAnC,EAA0C,KAA1C,EAAiDW,YAAYe,mBAA7D,CAAjB;;AAEA,UAAIF,cAAcb,YAAYe,mBAA1B,IAAiDF,cAAcb,YAAYgB,mBAAZ,GAClEhB,YAAYiB,mBADb,EAEA;AACCM,sBAAeV,cAAcb,YAAYgB,mBAAzC;AACA,OAJD,MAMA;AACE,WAAIQ,iBAAiB7B,MAAMwB,eAAN,CAAsB5B,OAAO6B,IAA7B,CAArB;;AAEA,WAAII,eAAeH,QAAnB,EACA;AACCE,uBAAeC,eAAeb,CAAf,IAAoB,GAAnC;AACA,QAHD,MAIK,IAAIrB,UAAU,IAAd,EACL;AACCiC,uBAAejC,OAAOqB,CAAP,GAAWrB,OAAOgC,KAAlB,GAA0B/B,OAAOoB,CAAhD;AACA;AACF;AACA;;AAEF,SAAIrB,UAAU,IAAV,IAAkBC,UAAU,IAAhC,EACA;AACC,UAAIkC,KAAMhB,YAAD,GAAiBnB,OAAOqB,CAAxB,GAA4BrB,OAAOqB,CAAP,GAAWrB,OAAOgC,KAAvD;AACA,UAAII,KAAKhC,KAAKiC,iBAAL,CAAuBrC,MAAvB,CAAT;;AAEA,UAAIsC,KAAML,YAAD,GAAiBhC,OAAOoB,CAAxB,GAA4BpB,OAAOoB,CAAP,GAAWpB,OAAO+B,KAAvD;AACA,UAAIO,KAAKnC,KAAKiC,iBAAL,CAAuBpC,MAAvB,CAAT;;AAEA,UAAIuC,MAAMlC,OAAV;;AAEA,UAAImC,KAAMtB,YAAD,GAAiB,CAACqB,GAAlB,GAAwBA,GAAjC;AACA,UAAIE,MAAM,IAAIC,OAAJ,CAAYR,KAAKM,EAAjB,EAAqBL,EAArB,CAAV;;AAEAK,WAAMR,YAAD,GAAiB,CAACO,GAAlB,GAAwBA,GAA7B;AACA,UAAII,MAAM,IAAID,OAAJ,CAAYL,KAAKG,EAAjB,EAAqBF,EAArB,CAAV;;AAEA;AACA,UAAIpB,gBAAgBc,YAApB,EACA;AACC,WAAIZ,IAAKF,YAAD,GACP0B,KAAKC,GAAL,CAASX,EAAT,EAAaG,EAAb,IAAiBhC,OADV,GAEPuC,KAAKE,GAAL,CAASZ,EAAT,EAAaG,EAAb,IAAiBhC,OAFlB;;AAIAH,cAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYtB,CAAZ,EAAee,EAAf,CAAZ;AACAjC,cAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYtB,CAAZ,EAAekB,EAAf,CAAZ;AACA,OARD,MASK,IAAKG,IAAIrB,CAAJ,GAAQuB,IAAIvB,CAAb,IAAmBF,YAAvB,EACL;AACC,WAAI8B,OAAOb,KAAK,CAACG,KAAKH,EAAN,IAAY,CAA5B;;AAEAjC,cAAO6C,IAAP,CAAYN,GAAZ;AACAvC,cAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYD,IAAIrB,CAAhB,EAAmB4B,IAAnB,CAAZ;AACA9C,cAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYC,IAAIvB,CAAhB,EAAmB4B,IAAnB,CAAZ;AACA9C,cAAO6C,IAAP,CAAYJ,GAAZ;AACA,OARI,MAUL;AACCzC,cAAO6C,IAAP,CAAYN,GAAZ;AACAvC,cAAO6C,IAAP,CAAYJ,GAAZ;AACA;AACD;AACA,KArNH;;AAuNE;;;;;AAKDM,UAAM,cAAUnD,KAAV,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyCC,MAAzC,EACN;AACC,SAAIW,MAAMf,MAAMgB,cAAhB;;AAEA,SAAIC,KAAKF,IAAI,CAAJ,CAAT;AACA,SAAIG,KAAKH,IAAIA,IAAII,MAAJ,GAAW,CAAf,CAAT;;AAEA,SAAIF,MAAM,IAAN,IAAcC,MAAM,IAAxB,EACA;AACC,UAAIf,UAAU,IAAV,IAAkBA,OAAOgB,MAAP,GAAgB,CAAtC,EACA;AACC,YAAK,IAAIiC,IAAI,CAAb,EAAgBA,IAAIjD,OAAOgB,MAA3B,EAAmCiC,GAAnC,EACA;AACC,YAAIC,KAAKlD,OAAOiD,CAAP,CAAT;AACAC,aAAKrD,MAAMK,IAAN,CAAWiD,qBAAX,CAAiCtD,KAAjC,EAAwCqD,EAAxC,CAAL;AACAjD,eAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYS,GAAG/B,CAAf,EAAkB+B,GAAG9B,CAArB,CAAZ;AACA;AACD;;AAED;AACA;;AAED,SAAItB,UAAU,IAAd,EACA;AACC,UAAII,OAAOL,MAAMK,IAAjB;AACA,UAAIC,QAAQD,KAAKC,KAAjB;AACA,UAAI+C,KAAMlD,UAAU,IAAV,IAAkBA,OAAOgB,MAAP,GAAgB,CAAnC,GAAwChB,OAAO,CAAP,CAAxC,GAAoD,IAA7D;;AAEA,UAAIkD,MAAM,IAAV,EACA;AACCA,YAAKhD,KAAKiD,qBAAL,CAA2BtD,KAA3B,EAAkCqD,EAAlC,CAAL;;AAEA,WAAI7C,QAAQ+C,QAAR,CAAiBtD,MAAjB,EAAyBoD,GAAG/B,CAA5B,EAA+B+B,GAAG9B,CAAlC,CAAJ,EACA;AACC8B,aAAK,IAAL;AACA;AACD;;AAED,UAAI/B,IAAI,CAAR;AACA,UAAIoB,KAAK,CAAT;AACA,UAAInB,IAAI,CAAR;AACA,UAAIiC,KAAK,CAAT;;AAEC,UAAIf,MAAMjC,QAAQC,QAAR,CAAiBT,MAAMU,KAAvB,EAA8BC,YAAYC,aAA1C,EACTN,MAAMmD,QADG,IACSpD,KAAKS,KADxB;AAED,UAAI4C,MAAMlD,QAAQC,QAAR,CAAiBT,MAAMU,KAAvB,EAA8BC,YAAYgD,eAA1C,EACThD,YAAYiD,cADH,CAAV;;AAGA,UAAIF,OAAO/C,YAAYkD,eAAnB,IACHH,OAAO/C,YAAYmD,eADpB,EAEA;AACCxC,WAAIjB,KAAK0D,iBAAL,CAAuB9D,MAAvB,CAAJ;AACAyC,YAAKD,GAAL;AACA,OALD,MAOA;AACClB,WAAIlB,KAAKiC,iBAAL,CAAuBrC,MAAvB,CAAJ;AACAuD,YAAKf,GAAL;AACA;;AAED,UAAIY,MAAM,IAAN,IACHA,GAAG/B,CAAH,GAAOrB,OAAOqB,CADX,IAEH+B,GAAG/B,CAAH,GAAOrB,OAAOqB,CAAP,GAAWrB,OAAOgC,KAF1B,EAGA;AACC,WAAIoB,MAAM,IAAV,EACA;AACC/B,YAAI+B,GAAG/B,CAAP;AACAkC,aAAKV,KAAKE,GAAL,CAASF,KAAKkB,GAAL,CAASzC,IAAI8B,GAAG9B,CAAhB,CAAT,EAA6BiC,EAA7B,CAAL;AACA,QAJD,MAMA;AACC,YAAIE,OAAO/C,YAAYkD,eAAvB,EACA;AACCtC,aAAItB,OAAOsB,CAAP,GAAW,IAAImB,EAAnB;AACA,SAHD,MAIK,IAAIgB,OAAO/C,YAAYmD,eAAvB,EACL;AACCvC,aAAItB,OAAOsB,CAAP,GAAWtB,OAAOgE,MAAlB,GAA2B,IAAIvB,EAAnC;AACA,SAHI,MAIA,IAAIgB,OAAO/C,YAAYuD,cAAvB,EACL;AACC5C,aAAIrB,OAAOqB,CAAP,GAAW,IAAIkC,EAAnB;AACA,SAHI,MAKL;AACClC,aAAIrB,OAAOqB,CAAP,GAAWrB,OAAOgC,KAAlB,GAA0B,IAAIuB,EAAlC;AACA;AACD;AACD,OA5BD,MA6BK,IAAIH,MAAM,IAAV,EACL;AACC/B,WAAIjB,KAAK0D,iBAAL,CAAuB9D,MAAvB,CAAJ;AACAyC,YAAKI,KAAKE,GAAL,CAASF,KAAKkB,GAAL,CAAS1C,IAAI+B,GAAG/B,CAAhB,CAAT,EAA6BkC,EAA7B,CAAL;AACAjC,WAAI8B,GAAG9B,CAAP;AACAiC,YAAK,CAAL;AACA;;AAEDpD,aAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYtB,IAAIoB,EAAhB,EAAoBnB,IAAIiC,EAAxB,CAAZ;AACApD,aAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYtB,IAAIoB,EAAhB,EAAoBnB,IAAIiC,EAAxB,CAAZ;AACA;AACD,KAhUF;;AAkUC;;;;;;;;AAQAW,oBAAgB,wBAAUnE,KAAV,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyCC,MAAzC,EAChB;AACC,SAAIiD,KAAMlD,UAAU,IAAV,IAAkBA,OAAOgB,MAAP,GAAgB,CAAnC,GAAwChB,OAAO,CAAP,CAAxC,GAAoD,IAA7D;;AAEA,SAAIiE,WAAW,KAAf;AACA,SAAIC,aAAa,KAAjB;;AAEA,SAAIpE,UAAU,IAAV,IAAkBC,UAAU,IAAhC,EACA;AACC,UAAImD,MAAM,IAAV,EACA;AACC,WAAIiB,OAAOxB,KAAKC,GAAL,CAAS9C,OAAOqB,CAAhB,EAAmBpB,OAAOoB,CAA1B,CAAX;AACA,WAAIiD,QAAQzB,KAAKE,GAAL,CAAS/C,OAAOqB,CAAP,GAAWrB,OAAOgC,KAA3B,EACX/B,OAAOoB,CAAP,GAAWpB,OAAO+B,KADP,CAAZ;;AAGA,WAAIuC,MAAM1B,KAAKC,GAAL,CAAS9C,OAAOsB,CAAhB,EAAmBrB,OAAOqB,CAA1B,CAAV;AACA,WAAIkD,SAAS3B,KAAKE,GAAL,CAAS/C,OAAOsB,CAAP,GAAWtB,OAAOgE,MAA3B,EACZ/D,OAAOqB,CAAP,GAAWrB,OAAO+D,MADN,CAAb;;AAGAZ,YAAKrD,MAAMK,IAAN,CAAWiD,qBAAX,CAAiCtD,KAAjC,EAAwCqD,EAAxC,CAAL;;AAEAe,kBAAWf,GAAG9B,CAAH,GAAOiD,GAAP,IAAcnB,GAAG9B,CAAH,GAAOkD,MAAhC;AACAJ,oBAAahB,GAAG/B,CAAH,GAAOgD,IAAP,IAAejB,GAAG/B,CAAH,GAAOiD,KAAnC;AACA,OAdD,MAgBA;AACC,WAAID,OAAOxB,KAAKE,GAAL,CAAS/C,OAAOqB,CAAhB,EAAmBpB,OAAOoB,CAA1B,CAAX;AACA,WAAIiD,QAAQzB,KAAKC,GAAL,CAAS9C,OAAOqB,CAAP,GAAWrB,OAAOgC,KAA3B,EACX/B,OAAOoB,CAAP,GAAWpB,OAAO+B,KADP,CAAZ;;AAGAmC,kBAAWE,QAAQC,KAAnB;;AAEA,WAAI,CAACH,QAAL,EACA;AACC,YAAII,MAAM1B,KAAKE,GAAL,CAAS/C,OAAOsB,CAAhB,EAAmBrB,OAAOqB,CAA1B,CAAV;AACA,YAAIkD,SAAS3B,KAAKC,GAAL,CAAS9C,OAAOsB,CAAP,GAAWtB,OAAOgE,MAA3B,EACZ/D,OAAOqB,CAAP,GAAWrB,OAAO+D,MADN,CAAb;;AAGAI,qBAAaG,OAAOC,MAApB;AACA;AACD;AACD;;AAED,SAAI,CAACJ,UAAD,KAAgBD,YACnBpE,MAAMU,KAAN,CAAYC,YAAY+D,WAAxB,KAAwC/D,YAAYgE,cADjD,CAAJ,EAEA;AACC7E,kBAAY8E,WAAZ,CAAwB5E,KAAxB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+CC,MAA/C,EAAuDC,MAAvD;AACA,MAJD,MAMA;AACCN,kBAAY+E,UAAZ,CAAuB7E,KAAvB,EAA8BC,MAA9B,EAAsCC,MAAtC,EAA8CC,MAA9C,EAAsDC,MAAtD;AACA;AACD,KA9XF;;AAgYC;;;;;;AAMAyE,gBAAY,oBAAU7E,KAAV,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyCC,MAAzC,EACZ;AACC,SAAIC,OAAOL,MAAMK,IAAjB;AACA,SAAIgD,KAAMlD,UAAU,IAAV,IAAkBA,OAAOgB,MAAP,GAAgB,CAAnC,GAAwChB,OAAO,CAAP,CAAxC,GAAoD,IAA7D;AACA,SAAIY,MAAMf,MAAMgB,cAAhB;AACA,SAAIC,KAAKF,IAAI,CAAJ,CAAT;AACA,SAAIG,KAAKH,IAAIA,IAAII,MAAJ,GAAW,CAAf,CAAT;;AAEA,SAAIkC,MAAM,IAAV,EACA;AACCA,WAAKhD,KAAKiD,qBAAL,CAA2BtD,KAA3B,EAAkCqD,EAAlC,CAAL;AACA;;AAED,SAAIpC,MAAM,IAAV,EACA;AACChB,eAAS,IAAIoB,WAAJ,EAAT;AACApB,aAAOqB,CAAP,GAAWL,GAAGK,CAAd;AACArB,aAAOsB,CAAP,GAAWN,GAAGM,CAAd;AACA;;AAED,SAAIL,MAAM,IAAV,EACA;AACChB,eAAS,IAAImB,WAAJ,EAAT;AACAnB,aAAOoB,CAAP,GAAWJ,GAAGI,CAAd;AACApB,aAAOqB,CAAP,GAAWL,GAAGK,CAAd;AACA;;AAED,SAAItB,UAAU,IAAV,IAAkBC,UAAU,IAAhC,EACA;AACC,UAAI4E,IAAIhC,KAAKE,GAAL,CAAS/C,OAAOqB,CAAhB,EAAmBpB,OAAOoB,CAA1B,CAAR;AACA,UAAIyD,IAAIjC,KAAKC,GAAL,CAAS9C,OAAOqB,CAAP,GAAWrB,OAAOgC,KAA3B,EACH/B,OAAOoB,CAAP,GAAWpB,OAAO+B,KADf,CAAR;;AAGA,UAAIX,IAAK+B,MAAM,IAAP,GAAeA,GAAG/B,CAAlB,GAAsBwB,KAAKkC,KAAL,CAAWD,IAAI,CAACD,IAAIC,CAAL,IAAU,CAAzB,CAA9B;;AAEA,UAAIE,KAAK5E,KAAKiC,iBAAL,CAAuBrC,MAAvB,CAAT;AACA,UAAIiF,KAAK7E,KAAKiC,iBAAL,CAAuBpC,MAAvB,CAAT;;AAEA,UAAImD,MAAM,IAAV,EACA;AACC,WAAIA,GAAG9B,CAAH,IAAQtB,OAAOsB,CAAf,IAAoB8B,GAAG9B,CAAH,IAAQtB,OAAOsB,CAAP,GAAWtB,OAAOgE,MAAlD,EACA;AACCgB,aAAK5B,GAAG9B,CAAR;AACA;;AAED,WAAI8B,GAAG9B,CAAH,IAAQrB,OAAOqB,CAAf,IAAoB8B,GAAG9B,CAAH,IAAQrB,OAAOqB,CAAP,GAAWrB,OAAO+D,MAAlD,EACA;AACCiB,aAAK7B,GAAG9B,CAAR;AACA;AACD;;AAED,UAAI,CAACf,QAAQ+C,QAAR,CAAiBrD,MAAjB,EAAyBoB,CAAzB,EAA4B2D,EAA5B,CAAD,IACH,CAACzE,QAAQ+C,QAAR,CAAiBtD,MAAjB,EAAyBqB,CAAzB,EAA4B2D,EAA5B,CADF,EAEA;AACC7E,cAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYtB,CAAZ,EAAgB2D,EAAhB,CAAZ;AACA;;AAED,UAAI,CAACzE,QAAQ+C,QAAR,CAAiBrD,MAAjB,EAAyBoB,CAAzB,EAA4B4D,EAA5B,CAAD,IACH,CAAC1E,QAAQ+C,QAAR,CAAiBtD,MAAjB,EAAyBqB,CAAzB,EAA4B4D,EAA5B,CADF,EAEA;AACC9E,cAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYtB,CAAZ,EAAe4D,EAAf,CAAZ;AACA;;AAED,UAAI9E,OAAOe,MAAP,IAAiB,CAArB,EACA;AACC,WAAIkC,MAAM,IAAV,EACA;AACC,YAAI,CAAC7C,QAAQ+C,QAAR,CAAiBrD,MAAjB,EAAyBoB,CAAzB,EAA4B+B,GAAG9B,CAA/B,CAAD,IACH,CAACf,QAAQ+C,QAAR,CAAiBtD,MAAjB,EAAyBqB,CAAzB,EAA4B+B,GAAG9B,CAA/B,CADF,EAEA;AACCnB,gBAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYtB,CAAZ,EAAe+B,GAAG9B,CAAlB,CAAZ;AACA;AACD,QAPD,MASA;AACC,YAAI4D,IAAIrC,KAAKE,GAAL,CAAS/C,OAAOsB,CAAhB,EAAmBrB,OAAOqB,CAA1B,CAAR;AACA,YAAI6D,IAAItC,KAAKC,GAAL,CAAS9C,OAAOsB,CAAP,GAAWtB,OAAOgE,MAA3B,EACL/D,OAAOqB,CAAP,GAAWrB,OAAO+D,MADb,CAAR;;AAGA7D,eAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYtB,CAAZ,EAAe6D,IAAI,CAACC,IAAID,CAAL,IAAU,CAA7B,CAAZ;AACA;AACD;AACD;AACD,KAzdF;;AA2dC;;;;;;AAMAP,iBAAa,qBAAS5E,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,MAAxC,EACb;AACC,SAAIC,OAAOL,MAAMK,IAAjB;AACA,SAAIgD,KAAMlD,UAAU,IAAV,IAAkBA,OAAOgB,MAAP,GAAgB,CAAnC,GAAwChB,OAAO,CAAP,CAAxC,GAAoD,IAA7D;AACA,SAAIY,MAAMf,MAAMgB,cAAhB;AACA,SAAIC,KAAKF,IAAI,CAAJ,CAAT;AACA,SAAIG,KAAKH,IAAIA,IAAII,MAAJ,GAAW,CAAf,CAAT;;AAEA,SAAIkC,MAAM,IAAV,EACA;AACCA,WAAKhD,KAAKiD,qBAAL,CAA2BtD,KAA3B,EAAkCqD,EAAlC,CAAL;AACA;;AAED,SAAIpC,MAAM,IAAV,EACA;AACChB,eAAS,IAAIoB,WAAJ,EAAT;AACApB,aAAOqB,CAAP,GAAWL,GAAGK,CAAd;AACArB,aAAOsB,CAAP,GAAWN,GAAGM,CAAd;AACA;;AAED,SAAIL,MAAM,IAAV,EACA;AACChB,eAAS,IAAImB,WAAJ,EAAT;AACAnB,aAAOoB,CAAP,GAAWJ,GAAGI,CAAd;AACApB,aAAOqB,CAAP,GAAWL,GAAGK,CAAd;AACA;;AAED,SAAItB,UAAU,IAAV,IAAkBC,UAAU,IAAhC,EACA;AACC,UAAIiF,IAAIrC,KAAKE,GAAL,CAAS/C,OAAOsB,CAAhB,EAAmBrB,OAAOqB,CAA1B,CAAR;AACA,UAAI6D,IAAItC,KAAKC,GAAL,CAAS9C,OAAOsB,CAAP,GAAWtB,OAAOgE,MAA3B,EACH/D,OAAOqB,CAAP,GAAWrB,OAAO+D,MADf,CAAR;;AAGA,UAAI3C,IAAIjB,KAAK0D,iBAAL,CAAuB9D,MAAvB,CAAR;;AAEA,UAAIoD,MAAM,IAAN,IACHA,GAAG/B,CAAH,IAAQrB,OAAOqB,CADZ,IAEH+B,GAAG/B,CAAH,IAAQrB,OAAOqB,CAAP,GAAWrB,OAAOgC,KAF3B,EAGA;AACCX,WAAI+B,GAAG/B,CAAP;AACA;;AAED,UAAIC,IAAK8B,MAAM,IAAP,GAAeA,GAAG9B,CAAlB,GAAsBuB,KAAKkC,KAAL,CAAWI,IAAI,CAACD,IAAIC,CAAL,IAAU,CAAzB,CAA9B;;AAEA,UAAI,CAAC5E,QAAQ+C,QAAR,CAAiBrD,MAAjB,EAAyBoB,CAAzB,EAA4BC,CAA5B,CAAD,IACH,CAACf,QAAQ+C,QAAR,CAAiBtD,MAAjB,EAAyBqB,CAAzB,EAA4BC,CAA5B,CADF,EAEA;AACCnB,cAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYtB,CAAZ,EAAeC,CAAf,CAAZ;AACA;;AAED,UAAI8B,MAAM,IAAN,IACHA,GAAG/B,CAAH,IAAQpB,OAAOoB,CADZ,IAEH+B,GAAG/B,CAAH,IAAQpB,OAAOoB,CAAP,GAAWpB,OAAO+B,KAF3B,EAGA;AACCX,WAAI+B,GAAG/B,CAAP;AACA,OALD,MAOA;AACCA,WAAIjB,KAAK0D,iBAAL,CAAuB7D,MAAvB,CAAJ;AACA;;AAED,UAAI,CAACM,QAAQ+C,QAAR,CAAiBrD,MAAjB,EAAyBoB,CAAzB,EAA4BC,CAA5B,CAAD,IACH,CAACf,QAAQ+C,QAAR,CAAiBtD,MAAjB,EAAyBqB,CAAzB,EAA4BC,CAA5B,CADF,EAEA;AACCnB,cAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYtB,CAAZ,EAAeC,CAAf,CAAZ;AACA;;AAED,UAAInB,OAAOe,MAAP,IAAiB,CAArB,EACA;AACC,WAAIkC,MAAM,IAAN,IAAcjD,OAAOe,MAAP,IAAiB,CAAnC,EACA;AACC,YAAI,CAACX,QAAQ+C,QAAR,CAAiBrD,MAAjB,EAAyBmD,GAAG/B,CAA5B,EAA+BC,CAA/B,CAAD,IACH,CAACf,QAAQ+C,QAAR,CAAiBtD,MAAjB,EAAyBoD,GAAG/B,CAA5B,EAA+BC,CAA/B,CADF,EAEA;AACCnB,gBAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYS,GAAG/B,CAAf,EAAkBC,CAAlB,CAAZ;AACA;AACD,QAPD,MASA;AACC,YAAIuD,IAAIhC,KAAKE,GAAL,CAAS/C,OAAOqB,CAAhB,EAAmBpB,OAAOoB,CAA1B,CAAR;AACA,YAAIyD,IAAIjC,KAAKC,GAAL,CAAS9C,OAAOqB,CAAP,GAAWrB,OAAOgC,KAA3B,EACL/B,OAAOoB,CAAP,GAAWpB,OAAO+B,KADb,CAAR;;AAGA7B,eAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYkC,IAAI,CAACC,IAAID,CAAL,IAAU,CAA1B,EAA6BvD,CAA7B,CAAZ;AACA;AACD;AACD;AACD,KAxjBF;;AA0jBC;;;;;;AAMA8D,sBAAkB,0BAASrF,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCoF,KAAhC,EAAuClF,MAAvC,EAClB;AACC;AACA,SAAIW,MAAMf,MAAMgB,cAAhB;AACA,SAAIuE,MAAMzC,KAAKE,GAAL,CAAS,CAAT,EAAYhD,MAAMK,IAAN,CAAWS,KAAvB,CAAV;;AAEA;AACA,SAAI0E,aAAcpF,OAAOe,MAAP,GAAgB,CAAjB,GAAsBf,OAAO,CAAP,CAAtB,GAAkC,IAAnD;AACA,SAAIiE,aAAa,IAAjB;AACA,SAAIoB,OAAO,IAAX;;AAEA;AACA,cAASC,SAAT,CAAmBrC,EAAnB,EACA;AACC,UAAImC,cAAc,IAAd,IAAsB1C,KAAKkB,GAAL,CAASwB,WAAWlE,CAAX,GAAe+B,GAAG/B,CAA3B,KAAiCiE,GAAvD,IAA8DzC,KAAKkB,GAAL,CAASwB,WAAWjE,CAAX,GAAe8B,GAAG9B,CAA3B,KAAiCgE,GAAnG,EACA;AACCnF,cAAO6C,IAAP,CAAYI,EAAZ;AACAmC,oBAAanC,EAAb;AACA;;AAED,aAAOmC,UAAP;AACA;;AAED;AACA,SAAInC,KAAKtC,IAAI,CAAJ,CAAT;;AAEA,SAAIsC,MAAM,IAAN,IAAcpD,UAAU,IAA5B,EACA;AACCoD,WAAK,IAAIT,OAAJ,CAAY5C,MAAMK,IAAN,CAAW0D,iBAAX,CAA6B9D,MAA7B,CAAZ,EAAkDD,MAAMK,IAAN,CAAWiC,iBAAX,CAA6BrC,MAA7B,CAAlD,CAAL;AACA,MAHD,MAIK,IAAIoD,MAAM,IAAV,EACL;AACCA,WAAKA,GAAGsC,KAAH,EAAL;AACA;;AAEDtC,QAAG/B,CAAH,GAAOwB,KAAKkC,KAAL,CAAW3B,GAAG/B,CAAd,CAAP;AACA+B,QAAG9B,CAAH,GAAOuB,KAAKkC,KAAL,CAAW3B,GAAG9B,CAAd,CAAP;;AAEA,SAAIqE,UAAU7E,IAAII,MAAJ,GAAa,CAA3B;;AAEA;AACA,SAAImE,SAAS,IAAT,IAAiBA,MAAMnE,MAAN,GAAe,CAApC,EACA;AACC;AACA,UAAI0E,WAAW,EAAf;;AAEA,WAAK,IAAIzC,IAAI,CAAb,EAAgBA,IAAIkC,MAAMnE,MAA1B,EAAkCiC,GAAlC,EACA;AACC,WAAI0C,MAAM9F,MAAMK,IAAN,CAAWiD,qBAAX,CAAiCtD,KAAjC,EAAwCsF,MAAMlC,CAAN,CAAxC,CAAV;;AAEA,WAAI0C,OAAO,IAAX,EACA;AACCA,YAAIxE,CAAJ,GAAQwB,KAAKkC,KAAL,CAAWc,IAAIxE,CAAf,CAAR;AACAwE,YAAIvE,CAAJ,GAAQuB,KAAKkC,KAAL,CAAWc,IAAIvE,CAAf,CAAR;AACAsE,iBAAS5C,IAAT,CAAc6C,GAAd;AACA;AACD;;AAED,UAAID,SAAS1E,MAAT,IAAmB,CAAvB,EACA;AACC;AACA;;AAEDmE,cAAQO,QAAR;;AAEA;AACA,UAAIxC,MAAM,IAAN,IAAciC,MAAM,CAAN,KAAY,IAA9B,EACA;AACC,WAAIxC,KAAKkB,GAAL,CAASsB,MAAM,CAAN,EAAShE,CAAT,GAAa+B,GAAG/B,CAAzB,IAA8BiE,GAAlC,EACA;AACCD,cAAM,CAAN,EAAShE,CAAT,GAAa+B,GAAG/B,CAAhB;AACA;;AAED,WAAIwB,KAAKkB,GAAL,CAASsB,MAAM,CAAN,EAAS/D,CAAT,GAAa8B,GAAG9B,CAAzB,IAA8BgE,GAAlC,EACA;AACCD,cAAM,CAAN,EAAS/D,CAAT,GAAa8B,GAAG9B,CAAhB;AACA;AACD;;AAED,UAAIL,KAAKH,IAAI6E,OAAJ,CAAT;;AAEA,UAAI1E,MAAM,IAAN,IAAcoE,MAAMA,MAAMnE,MAAN,GAAe,CAArB,KAA2B,IAA7C,EACA;AACC,WAAI2B,KAAKkB,GAAL,CAASsB,MAAMA,MAAMnE,MAAN,GAAe,CAArB,EAAwBG,CAAxB,GAA4BJ,GAAGI,CAAxC,IAA6CiE,GAAjD,EACA;AACCD,cAAMA,MAAMnE,MAAN,GAAe,CAArB,EAAwBG,CAAxB,GAA4BJ,GAAGI,CAA/B;AACA;;AAED,WAAIwB,KAAKkB,GAAL,CAASsB,MAAMA,MAAMnE,MAAN,GAAe,CAArB,EAAwBI,CAAxB,GAA4BL,GAAGK,CAAxC,IAA6CgE,GAAjD,EACA;AACCD,cAAMA,MAAMnE,MAAN,GAAe,CAArB,EAAwBI,CAAxB,GAA4BL,GAAGK,CAA/B;AACA;AACD;;AAEDkE,aAAOH,MAAM,CAAN,CAAP;;AAEA,UAAIS,cAAc9F,MAAlB;AACA,UAAI+F,YAAYjF,IAAI,CAAJ,CAAhB;AACA,UAAIkF,UAAU,KAAd;AACA,UAAIC,WAAW,KAAf;AACA,UAAIC,cAAcV,IAAlB;;AAEA,UAAIO,aAAa,IAAjB,EACA;AACCA,iBAAU1E,CAAV,GAAcwB,KAAKkC,KAAL,CAAWgB,UAAU1E,CAArB,CAAd;AACA0E,iBAAUzE,CAAV,GAAcuB,KAAKkC,KAAL,CAAWgB,UAAUzE,CAArB,CAAd;AACAwE,qBAAc,IAAd;AACA;;AAED;AACA;AACA,WAAK,IAAI3C,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EACA;AACC,WAAIgD,iBAAiBJ,aAAa,IAAb,IAAqBA,UAAU1E,CAAV,IAAe6E,YAAY7E,CAArE;AACA,WAAI+E,gBAAgBL,aAAa,IAAb,IAAqBA,UAAUzE,CAAV,IAAe4E,YAAY5E,CAApE;;AAEA,WAAI+E,YAAYP,eAAe,IAAf,IAAwBI,YAAY5E,CAAZ,IAAiBwE,YAAYxE,CAA7B,IACtC4E,YAAY5E,CAAZ,IAAiBwE,YAAYxE,CAAZ,GAAgBwE,YAAY9B,MAD/C;AAEA,WAAIsC,aAAaR,eAAe,IAAf,IAAwBI,YAAY7E,CAAZ,IAAiByE,YAAYzE,CAA7B,IACvC6E,YAAY7E,CAAZ,IAAiByE,YAAYzE,CAAZ,GAAgByE,YAAY9D,KAD/C;;AAGAgE,iBAAUI,iBAAkBL,aAAa,IAAb,IAAqBM,SAAjD;AACAJ,kBAAWE,kBAAmBJ,aAAa,IAAb,IAAqBO,UAAnD;;AAEA;AACA;AACA;AACA;AACA,WAAInD,KAAG,CAAH,KAAU6C,WAAWC,QAAZ,IAA0BE,kBAAkBC,aAArD,CAAJ,EACA,CACC,CAFD,MAIA;AACC,YAAIL,aAAa,IAAb,IAAsB,CAACK,aAAD,IAAkB,CAACD,cAAzC,KAA6DE,aAAaC,UAA1E,CAAJ,EACA;AACClC,sBAAaiC,YAAY,KAAZ,GAAoB,IAAjC;AACA;AACA;;AAED,YAAIJ,YAAYD,OAAhB,EACA;AACC5B,sBAAa4B,OAAb;;AAEA,aAAI7C,KAAK,CAAT,EACA;AACC;AACAiB,uBAAaiB,MAAMnE,MAAN,GAAe,CAAf,IAAoB,CAApB,GAAwB8E,OAAxB,GAAkCC,QAA/C;AACA;;AAED;AACA;AACD;;AAEDH,qBAAc7F,MAAd;AACA8F,mBAAYjF,IAAI6E,OAAJ,CAAZ;;AAEA,WAAII,aAAa,IAAjB,EACA;AACCA,kBAAU1E,CAAV,GAAcwB,KAAKkC,KAAL,CAAWgB,UAAU1E,CAArB,CAAd;AACA0E,kBAAUzE,CAAV,GAAcuB,KAAKkC,KAAL,CAAWgB,UAAUzE,CAArB,CAAd;AACAwE,sBAAc,IAAd;AACA;;AAEDI,qBAAcb,MAAMA,MAAMnE,MAAN,GAAe,CAArB,CAAd;;AAEA,WAAIiF,kBAAkBC,aAAtB,EACA;AACCf,gBAAQA,MAAMkB,KAAN,CAAY,CAAZ,CAAR;AACA;AACD;;AAED,UAAInC,eAAgBtD,IAAI,CAAJ,KAAU,IAAV,IAAkBA,IAAI,CAAJ,EAAOQ,CAAP,IAAYkE,KAAKlE,CAApC,IACjBR,IAAI,CAAJ,KAAU,IAAV,IAAkBd,UAAU,IAA5B,KACAwF,KAAKlE,CAAL,GAAStB,OAAOsB,CAAhB,IAAqBkE,KAAKlE,CAAL,GAAStB,OAAOsB,CAAP,GAAWtB,OAAOgE,MADhD,CADE,CAAJ,EAGA;AACCyB,iBAAU,IAAI9C,OAAJ,CAAYS,GAAG/B,CAAf,EAAkBmE,KAAKlE,CAAvB,CAAV;AACA,OALD,MAMK,IAAI,CAAC8C,UAAD,KAAiBtD,IAAI,CAAJ,KAAU,IAAV,IAAkBA,IAAI,CAAJ,EAAOO,CAAP,IAAYmE,KAAKnE,CAApC,IACtBP,IAAI,CAAJ,KAAU,IAAV,IAAkBd,UAAU,IAA5B,KACAwF,KAAKnE,CAAL,GAASrB,OAAOqB,CAAhB,IAAqBmE,KAAKnE,CAAL,GAASrB,OAAOqB,CAAP,GAAWrB,OAAOgC,KADhD,CADM,CAAJ,EAGL;AACCyD,iBAAU,IAAI9C,OAAJ,CAAY6C,KAAKnE,CAAjB,EAAoB+B,GAAG9B,CAAvB,CAAV;AACA;;AAED,UAAI8C,UAAJ,EACA;AACChB,UAAG9B,CAAH,GAAOkE,KAAKlE,CAAZ;AACA,OAHD,MAKA;AACC8B,UAAG/B,CAAH,GAAOmE,KAAKnE,CAAZ;AACA;;AAED,WAAK,IAAI8B,IAAI,CAAb,EAAgBA,IAAIkC,MAAMnE,MAA1B,EAAkCiC,GAAlC,EACA;AACCiB,oBAAa,CAACA,UAAd;AACAoB,cAAOH,MAAMlC,CAAN,CAAP;;AAEJ;AACA;;AAEI,WAAIiB,UAAJ,EACA;AACChB,WAAG9B,CAAH,GAAOkE,KAAKlE,CAAZ;AACA,QAHD,MAKA;AACC8B,WAAG/B,CAAH,GAAOmE,KAAKnE,CAAZ;AACA;;AAEDoE,iBAAUrC,GAAGsC,KAAH,EAAV;AACA;AACD,MA3KD,MA6KA;AACCF,aAAOpC,EAAP;AACA;AACAgB,mBAAa,IAAb;AACA;;AAED;AACAhB,UAAKtC,IAAI6E,OAAJ,CAAL;;AAEA,SAAIvC,MAAM,IAAN,IAAcnD,UAAU,IAA5B,EACA;AACCmD,WAAK,IAAIT,OAAJ,CAAY5C,MAAMK,IAAN,CAAW0D,iBAAX,CAA6B7D,MAA7B,CAAZ,EAAkDF,MAAMK,IAAN,CAAWiC,iBAAX,CAA6BpC,MAA7B,CAAlD,CAAL;AACA;;AAED,SAAImD,MAAM,IAAV,EACA;AACCA,SAAG/B,CAAH,GAAOwB,KAAKkC,KAAL,CAAW3B,GAAG/B,CAAd,CAAP;AACA+B,SAAG9B,CAAH,GAAOuB,KAAKkC,KAAL,CAAW3B,GAAG9B,CAAd,CAAP;;AAEA,UAAIkE,QAAQ,IAAZ,EACA;AACC,WAAIpB,eAAgBtD,IAAI6E,OAAJ,KAAgB,IAAhB,IAAwB7E,IAAI6E,OAAJ,EAAarE,CAAb,IAAkBkE,KAAKlE,CAAhD,IACjBR,IAAI6E,OAAJ,KAAgB,IAAhB,IAAwB1F,UAAU,IAAlC,KACAuF,KAAKlE,CAAL,GAASrB,OAAOqB,CAAhB,IAAqBkE,KAAKlE,CAAL,GAASrB,OAAOqB,CAAP,GAAWrB,OAAO+D,MADhD,CADE,CAAJ,EAGA;AACCyB,kBAAU,IAAI9C,OAAJ,CAAYS,GAAG/B,CAAf,EAAkBmE,KAAKlE,CAAvB,CAAV;AACA,QALD,MAMK,IAAI,CAAC8C,UAAD,KAAiBtD,IAAI6E,OAAJ,KAAgB,IAAhB,IAAwB7E,IAAI6E,OAAJ,EAAatE,CAAb,IAAkBmE,KAAKnE,CAAhD,IACtBP,IAAI6E,OAAJ,KAAgB,IAAhB,IAAwB1F,UAAU,IAAlC,KACAuF,KAAKnE,CAAL,GAASpB,OAAOoB,CAAhB,IAAqBmE,KAAKnE,CAAL,GAASpB,OAAOoB,CAAP,GAAWpB,OAAO+B,KADhD,CADM,CAAJ,EAGL;AACCyD,kBAAU,IAAI9C,OAAJ,CAAY6C,KAAKnE,CAAjB,EAAoB+B,GAAG9B,CAAvB,CAAV;AACA;AACD;AACD;;AAED;AACA,SAAIR,IAAI,CAAJ,KAAU,IAAV,IAAkBd,UAAU,IAAhC,EACA;AACC,aAAOG,OAAOe,MAAP,GAAgB,CAAhB,IAAqBf,OAAO,CAAP,KAAa,IAAlC,IACNI,QAAQ+C,QAAR,CAAiBtD,MAAjB,EAAyBG,OAAO,CAAP,EAAUkB,CAAnC,EAAsClB,OAAO,CAAP,EAAUmB,CAAhD,CADD,EAEA;AACCnB,cAAOqG,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACA;AACD;;AAED;AACA,SAAI1F,IAAI6E,OAAJ,KAAgB,IAAhB,IAAwB1F,UAAU,IAAtC,EACA;AACC,aAAOE,OAAOe,MAAP,GAAgB,CAAhB,IAAqBf,OAAOA,OAAOe,MAAP,GAAgB,CAAvB,KAA6B,IAAlD,IACNX,QAAQ+C,QAAR,CAAiBrD,MAAjB,EAAyBE,OAAOA,OAAOe,MAAP,GAAgB,CAAvB,EAA0BG,CAAnD,EAAsDlB,OAAOA,OAAOe,MAAP,GAAgB,CAAvB,EAA0BI,CAAhF,CADD,EAEA;AACCnB,cAAOqG,MAAP,CAAcrG,OAAOe,MAAP,GAAgB,CAA9B,EAAiC,CAAjC;AACA;AACD;;AAED;AACA,SAAID,MAAM,IAAN,IAAcd,OAAOA,OAAOe,MAAP,GAAgB,CAAvB,KAA6B,IAA3C,IACH2B,KAAKkB,GAAL,CAAS9C,GAAGI,CAAH,GAAOlB,OAAOA,OAAOe,MAAP,GAAgB,CAAvB,EAA0BG,CAA1C,IAA+CiE,GAD5C,IAEHzC,KAAKkB,GAAL,CAAS9C,GAAGK,CAAH,GAAOnB,OAAOA,OAAOe,MAAP,GAAgB,CAAvB,EAA0BI,CAA1C,IAA+CgE,GAFhD,EAGA;AACCnF,aAAOqG,MAAP,CAAcrG,OAAOe,MAAP,GAAgB,CAA9B,EAAiC,CAAjC;;AAEA;AACA,UAAIf,OAAOA,OAAOe,MAAP,GAAgB,CAAvB,KAA6B,IAAjC,EACA;AACC,WAAI2B,KAAKkB,GAAL,CAAS5D,OAAOA,OAAOe,MAAP,GAAgB,CAAvB,EAA0BG,CAA1B,GAA8BJ,GAAGI,CAA1C,IAA+CiE,GAAnD,EACA;AACCnF,eAAOA,OAAOe,MAAP,GAAgB,CAAvB,EAA0BG,CAA1B,GAA8BJ,GAAGI,CAAjC;AACA;;AAED,WAAIwB,KAAKkB,GAAL,CAAS5D,OAAOA,OAAOe,MAAP,GAAgB,CAAvB,EAA0BI,CAA1B,GAA8BL,GAAGK,CAA1C,IAA+CgE,GAAnD,EACA;AACCnF,eAAOA,OAAOe,MAAP,GAAgB,CAAvB,EAA0BI,CAA1B,GAA8BL,GAAGK,CAAjC;AACA;AACD;AACD;AACD,KAn2BF;;AAq2BCmF,gBAAY,EAr2Bb;;AAu2BCC,wBAAoB,IAv2BrB;;AAy2BCC,gBAAY,CAAE,CAAE,CAAC,CAAH,EAAM,CAAN,CAAF,EACV,CAAE,CAAF,EAAK,CAAC,CAAN,CADU,EACC,CAAE,CAAF,EAAK,CAAL,CADD,EACW,CAAE,CAAF,EAAK,CAAL,CADX,EACqB,CAAE,CAAC,CAAH,EAAM,CAAN,CADrB,EACgC,CAAE,CAAF,EAAK,CAAC,CAAN,CADhC,EAC2C,CAAE,CAAF,EAAK,CAAL,CAD3C,CAz2Bb;;AA42BCC,gBAAY,CAAE,CAAE,CAAF,EAAK,CAAL,CAAF,EAAW,CAAE,CAAF,EAAK,CAAL,CAAX,EAAqB,CAAE,CAAF,EAAK,CAAL,CAArB,EAA8B,CAAE,CAAF,EAAK,CAAL,CAA9B,EAAuC,CAAE,CAAF,EAAK,CAAL,CAAvC,EAAiD,CAAE,CAAF,EAAK,CAAL,CAAjD,EACE,CAAE,CAAF,EAAK,CAAL,CADF,EACY,CAAE,CAAF,EAAK,CAAL,CADZ,EACqB,CAAE,CAAF,EAAK,CAAL,CADrB,EAC+B,CAAE,CAAF,EAAK,CAAL,CAD/B,EACwC,CAAE,CAAF,EAAK,CAAL,CADxC,EACkD,CAAE,CAAF,EAAK,CAAL,CADlD,CA52Bb;;AA+2BCC,mBAAe,CACd,CAAE,CAAE,GAAF,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAF,EAA6B,CAAE,GAAF,EAAO,IAAP,EAAa,GAAb,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAA7B,EACC,CAAE,GAAF,EAAO,IAAP,EAAa,GAAb,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CADD,EAEC,CAAE,GAAF,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,GAAzB,EAA8B,IAA9B,EAAoC,IAApC,CAFD,CADc,EAIf,CAAE,CAAE,GAAF,EAAO,IAAP,EAAa,GAAb,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAF,EAAwC,CAAE,GAAF,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAxC,EACE,CAAE,GAAF,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,GAAzB,EAA8B,IAA9B,EAAoC,IAApC,CADF,EAEE,CAAE,GAAF,EAAO,IAAP,EAAa,GAAb,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAFF,CAJe,EAOf,CAAE,CAAE,IAAF,EAAQ,GAAR,EAAa,IAAb,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,CAAF,EAA8C,CAAE,IAAF,EAAQ,IAAR,CAA9C,EACE,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,EAAoB,GAApB,EAAyB,IAAzB,EAA+B,IAA/B,CADF,EAEE,CAAE,IAAF,EAAQ,GAAR,EAAa,IAAb,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,CAFF,CAPe,EAUf,CAAE,CAAE,IAAF,EAAQ,IAAR,CAAF,EAAkB,CAAE,IAAF,EAAQ,GAAR,EAAa,IAAb,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,CAAlB,EACE,CAAE,IAAF,EAAQ,GAAR,EAAa,IAAb,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,CADF,EAEE,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,EAAoB,GAApB,EAAyB,IAAzB,EAA+B,IAA/B,CAFF,CAVe,CA/2BhB;;AA63BCC,yBAAqB,CACnB,CAAE,IAAF,EAAQ,CAAE,IAAF,EAAQ,IAAR,CAAR,EAAwB,IAAxB,EAA8B,IAA9B,CADmB,EAEnB,CAAE,IAAF,EAAQ,CAAE,GAAF,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAR,EAAoC,IAApC,EAA0C,IAA1C,CAFmB,EAGnB,CAAE,IAAF,EAAQ,CAAE,IAAF,EAAQ,IAAR,CAAR,EAAwB,IAAxB,EAA8B,IAA9B,CAHmB,EAInB,CAAE,CAAE,IAAF,EAAQ,IAAR,CAAF,EAAkB,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,CAAlB,EACE,CAAE,IAAF,EAAQ,IAAR,CADF,EAEE,IAFF,CAJmB,CA73BtB;AAo4BCC,uBAAmB,EAp4BpB;;AAs4BCC,YAAQ,CACD,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CADC,EAED,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAFC,CAt4BT;;AA04BCC,eAAW,EA14BZ;;AA44BCC,cAAU,EA54BX;;AA84BCC,gBAAY,GA94Bb;;AAg5BCC,iBAAa,GAh5Bd;;AAk5BCC,UAAM,CAl5BP;;AAo5BCC,SAAK,CAp5BN;;AAs5BCC,WAAO,CAt5BR;;AAw5BCC,YAAQ,CAx5BT;;AA05BC;AACAC,eAAW,GA35BZ;AA45BC;AACA;;AAEAC,iBAAa,GA/5Bd;;AAi6BCC,iBAAa,IAj6Bd;;AAm6BCC,iBAAa,IAn6Bd;;AAq6BCC,iBAAa,IAr6Bd;AAs6BC;;AAEAC,kBAAc,sBAAS/H,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwC6H,QAAxC,EACd;AACC,SAAIC,QAAQzH,QAAQC,QAAR,CAAiBT,MAAMU,KAAvB,EAA+BsH,QAAD,GAAarH,YAAYuH,uBAAzB,GACzCvH,YAAYwH,uBADD,EAC0B3H,QAAQC,QAAR,CAAiBT,MAAMU,KAAvB,EACnCC,YAAYyH,gBADuB,EACLtI,YAAY4G,UADP,CAD1B,CAAZ;;AAIA,SAAIuB,SAAS,MAAb,EACA;AACC;AACA,UAAII,OAAO7H,QAAQC,QAAR,CAAiBT,MAAMU,KAAvB,EAA+BsH,QAAD,GAAarH,YAAY2H,gBAAzB,GAA4C3H,YAAY4H,cAAtF,EAAsG5H,YAAY6H,IAAlH,CAAX;;AAEA,UAAIH,QAAQ1H,YAAY6H,IAAxB,EACA;AACC,WAAIC,OAAOjI,QAAQkI,SAAR,CAAkB1I,MAAMU,KAAxB,EAAgCsH,QAAD,GAAarH,YAAYgI,eAAzB,GAA2ChI,YAAYiI,aAAtF,EAAqGjI,YAAYkI,kBAAjH,CAAX;AACAZ,eAAQnF,KAAKE,GAAL,CAAS,CAAT,EAAYF,KAAKgG,IAAL,CAAU,CAACL,OAAO3I,YAAY4G,UAApB,IAAkC5G,YAAY4G,UAAxD,CAAZ,IAAmF5G,YAAY4G,UAAvG;AACA,OAJD,MAMA;AACCuB,eAAQ,IAAInI,YAAY4G,UAAxB;AACA;AACD;;AAED,YAAOuB,KAAP;AACA,KA/7BF;;AAi8BC;;;;;;;;;;;;;;;;AAgBAc,mBAAe,uBAAS/I,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,MAAxC,EACf;AACC,SAAIE,QAAQN,MAAMK,IAAN,CAAWC,KAAvB;AACA,SAAI0I,aAAa/I,UAAU,IAAV,GAAiB,KAAjB,GAAyBK,MAAM2I,QAAN,GAAiBC,MAAjB,CAAwBjJ,OAAO8B,IAA/B,CAA1C;AACA,SAAIoH,aAAajJ,UAAU,IAAV,GAAiB,KAAjB,GAAyBI,MAAM2I,QAAN,GAAiBC,MAAjB,CAAwBhJ,OAAO6B,IAA/B,CAA1C;;AAEA,SAAIhB,MAAMf,MAAMgB,cAAhB;AACA,SAAIC,KAAKF,IAAI,CAAJ,CAAT;AACA,SAAIG,KAAKH,IAAIA,IAAII,MAAJ,GAAW,CAAf,CAAT;;AAEA,SAAIiI,UAAUnJ,UAAU,IAAV,GAAiBA,OAAOqB,CAAxB,GAA4BL,GAAGK,CAA7C;AACA,SAAI+H,UAAUpJ,UAAU,IAAV,GAAiBA,OAAOsB,CAAxB,GAA4BN,GAAGM,CAA7C;AACA,SAAI+H,cAAcrJ,UAAU,IAAV,GAAiBA,OAAOgC,KAAxB,GAAgC,CAAlD;AACA,SAAIsH,eAAetJ,UAAU,IAAV,GAAiBA,OAAOgE,MAAxB,GAAiC,CAApD;;AAEA,SAAIuF,UAAUtJ,UAAU,IAAV,GAAiBA,OAAOoB,CAAxB,GAA4BJ,GAAGI,CAA7C;AACA,SAAImI,UAAUvJ,UAAU,IAAV,GAAiBA,OAAOqB,CAAxB,GAA4BL,GAAGK,CAA7C;AACA,SAAImI,cAAcxJ,UAAU,IAAV,GAAiBA,OAAO+B,KAAxB,GAAgC,CAAlD;AACA,SAAI0H,eAAezJ,UAAU,IAAV,GAAiBA,OAAO+D,MAAxB,GAAiC,CAApD;;AAEA,SAAI2F,qBAAqB5J,MAAMK,IAAN,CAAWS,KAAX,GAAmBhB,YAAYiI,YAAZ,CAAyB/H,KAAzB,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgDC,MAAhD,EAAwD,IAAxD,CAA5C;AACA,SAAI0J,qBAAqB7J,MAAMK,IAAN,CAAWS,KAAX,GAAmBhB,YAAYiI,YAAZ,CAAyB/H,KAAzB,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgDC,MAAhD,EAAwD,KAAxD,CAA5C;;AAEA;AACA,SAAIF,UAAU,IAAV,IAAkBC,UAAUD,MAAhC,EACA;AACC4J,2BAAqB/G,KAAKE,GAAL,CAAS4G,kBAAT,EAA6BC,kBAA7B,CAArB;AACAD,2BAAqBC,kBAArB;AACA;;AAED,SAAIC,cAAcD,qBAAqBD,kBAAvC;AACA,SAAIG,WAAW,KAAf;;AAEA;AACA,SAAI9I,MAAM,IAAN,IAAcC,MAAM,IAAxB,EACA;AACC,UAAIwB,KAAKxB,GAAGI,CAAH,GAAOL,GAAGK,CAAnB;AACA,UAAIkC,KAAKtC,GAAGK,CAAH,GAAON,GAAGM,CAAnB;;AAEAwI,iBAAWrH,KAAKA,EAAL,GAAUc,KAAKA,EAAf,GAAoBsG,cAAcA,WAA7C;AACA;;AAED,SAAIC,YAAajK,YAAY6G,kBAAZ,IAAmCxG,UAAU,IAAV,IACnDA,OAAOgB,MAAP,GAAgB,CADb,IACoB6H,UADpB,IACkCG,UADtC,EAEA;AACCrJ,kBAAYuF,gBAAZ,CAA6BrF,KAA7B,EAAoCC,MAApC,EAA4CC,MAA5C,EAAoDC,MAApD,EAA4DC,MAA5D;;AAEA;AACA;;AAED;AACA;AACA;AACA,SAAI4J,iBAAiB,CAACrJ,YAAYsJ,kBAAb,EAAiCtJ,YAAYsJ,kBAA7C,CAArB;AACA,SAAIC,WAAW,CAAf;;AAEA,SAAIjK,UAAU,IAAd,EACA;AACC+J,qBAAe,CAAf,IAAoBxJ,QAAQiB,kBAAR,CAA2BxB,MAA3B,EAAmCD,KAAnC,EAA0C,IAA1C,EAClBW,YAAYsJ,kBADM,CAApB;AAEAC,iBAAW1J,QAAQC,QAAR,CAAiBR,OAAOS,KAAxB,EAA+BC,YAAYwJ,cAA3C,EAA2D,CAA3D,CAAX;;AAEA,UAAID,YAAY,CAAhB,EACA;AACC,WAAIE,UAAU5J,QAAQ6J,cAAR,CAAuB,IAAIC,WAAJ,CAAgBlB,OAAhB,EAAyBC,OAAzB,EAAkCC,WAAlC,EAA+CC,YAA/C,CAAvB,EAAqFW,QAArF,CAAd;AACAd,iBAAUgB,QAAQ9I,CAAlB;AACA+H,iBAAUe,QAAQ7I,CAAlB;AACA+H,qBAAcc,QAAQnI,KAAtB;AACAsH,sBAAea,QAAQnG,MAAvB;AACA;AACD;;AAED,SAAI/D,UAAU,IAAd,EACA;AACC8J,qBAAe,CAAf,IAAoBxJ,QAAQiB,kBAAR,CAA2BvB,MAA3B,EAAmCF,KAAnC,EAA0C,KAA1C,EACnBW,YAAYsJ,kBADO,CAApB;AAEAC,iBAAW1J,QAAQC,QAAR,CAAiBP,OAAOQ,KAAxB,EAA+BC,YAAYwJ,cAA3C,EAA2D,CAA3D,CAAX;;AAEA,UAAID,YAAY,CAAhB,EACA;AACC,WAAIE,UAAU5J,QAAQ6J,cAAR,CAAuB,IAAIC,WAAJ,CAAgBd,OAAhB,EAAyBC,OAAzB,EAAkCC,WAAlC,EAA+CC,YAA/C,CAAvB,EAAqFO,QAArF,CAAd;AACAV,iBAAUY,QAAQ9I,CAAlB;AACAmI,iBAAUW,QAAQ7I,CAAlB;AACAmI,qBAAcU,QAAQnI,KAAtB;AACA0H,sBAAeS,QAAQnG,MAAvB;AACA;AACD;;AAED;AACAmF,eAAUtG,KAAKkC,KAAL,CAAWoE,UAAU,EAArB,IAA2B,EAArC;AACAC,eAAUvG,KAAKkC,KAAL,CAAWqE,UAAU,EAArB,IAA2B,EAArC;AACAC,mBAAcxG,KAAKkC,KAAL,CAAWsE,cAAc,EAAzB,IAA+B,EAA7C;AACAC,oBAAezG,KAAKkC,KAAL,CAAWuE,eAAe,EAA1B,IAAgC,EAA/C;;AAEAC,eAAU1G,KAAKkC,KAAL,CAAWwE,UAAU,EAArB,IAA2B,EAArC;AACAC,eAAU3G,KAAKkC,KAAL,CAAWyE,UAAU,EAArB,IAA2B,EAArC;AACAC,mBAAc5G,KAAKkC,KAAL,CAAW0E,cAAc,EAAzB,IAA+B,EAA7C;AACAC,oBAAe7G,KAAKkC,KAAL,CAAW2E,eAAe,EAA1B,IAAgC,EAA/C;;AAEA,SAAIjG,MAAM,CAAC,CAAD,EAAI,CAAJ,CAAV;;AAEA;AACA;AACA;AACA;AACA,SAAI6G,MAAM,CAAE,CAACnB,OAAD,EAAUC,OAAV,EAAmBC,WAAnB,EAAgCC,YAAhC,CAAF,EACE,CAACC,OAAD,EAAUC,OAAV,EAAmBC,WAAnB,EAAgCC,YAAhC,CADF,CAAV;AAEA,SAAIa,SAAS,CAACZ,kBAAD,EAAqBC,kBAArB,CAAb;;AAEA,UAAK,IAAIzG,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EACA;AACCtD,kBAAYmH,MAAZ,CAAmB7D,CAAnB,EAAsB,CAAtB,IAA2BmH,IAAInH,CAAJ,EAAO,CAAP,IAAYoH,OAAOpH,CAAP,CAAvC;AACAtD,kBAAYmH,MAAZ,CAAmB7D,CAAnB,EAAsB,CAAtB,IAA2BmH,IAAInH,CAAJ,EAAO,CAAP,IAAYoH,OAAOpH,CAAP,CAAvC;AACAtD,kBAAYmH,MAAZ,CAAmB7D,CAAnB,EAAsB,CAAtB,IAA2BmH,IAAInH,CAAJ,EAAO,CAAP,IAAYmH,IAAInH,CAAJ,EAAO,CAAP,CAAZ,GAAwBoH,OAAOpH,CAAP,CAAnD;AACAtD,kBAAYmH,MAAZ,CAAmB7D,CAAnB,EAAsB,CAAtB,IAA2BmH,IAAInH,CAAJ,EAAO,CAAP,IAAYmH,IAAInH,CAAJ,EAAO,CAAP,CAAZ,GAAwBoH,OAAOpH,CAAP,CAAnD;AACA;;AAED;AACA,SAAIqH,aAAaF,IAAI,CAAJ,EAAO,CAAP,IAAYA,IAAI,CAAJ,EAAO,CAAP,IAAY,GAAzC;AACA,SAAIG,aAAaH,IAAI,CAAJ,EAAO,CAAP,IAAYA,IAAI,CAAJ,EAAO,CAAP,IAAY,GAAzC;AACA,SAAII,aAAaJ,IAAI,CAAJ,EAAO,CAAP,IAAYA,IAAI,CAAJ,EAAO,CAAP,IAAY,GAAzC;AACA,SAAIK,aAAaL,IAAI,CAAJ,EAAO,CAAP,IAAYA,IAAI,CAAJ,EAAO,CAAP,IAAY,GAAzC;;AAEA,SAAI7H,KAAK+H,aAAaE,UAAtB;AACA,SAAInH,KAAKkH,aAAaE,UAAtB;;AAEA,SAAIC,OAAO,CAAX;;AAEA,SAAInI,KAAK,CAAT,EACA;AACC,UAAIc,KAAK,CAAT,EACA;AACCqH,cAAO,CAAP;AACA,OAHD,MAKA;AACCA,cAAO,CAAP;AACA;AACD,MAVD,MAYA;AACC,UAAIrH,MAAM,CAAV,EACA;AACCqH,cAAO,CAAP;;AAEA;AACA,WAAInI,MAAM,CAAV,EACA;AACCmI,eAAO,CAAP;AACA;AACD;AACD;;AAED;AACA,SAAI9E,cAAc,IAAlB;;AAEA,SAAI9F,UAAU,IAAd,EACA;AACC8F,oBAAc9E,EAAd;AACA;;AAED,SAAIO,aAAa,CAAE,CAAC,GAAD,EAAM,GAAN,CAAF,EAAe,CAAC,GAAD,EAAM,GAAN,CAAf,CAAjB;;AAEA,UAAK,IAAI4B,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EACA;AACC,UAAI2C,eAAe,IAAnB,EACA;AACCvE,kBAAW4B,CAAX,EAAc,CAAd,IAAmB,CAAC2C,YAAYzE,CAAZ,GAAgBiJ,IAAInH,CAAJ,EAAO,CAAP,CAAjB,IAA8BmH,IAAInH,CAAJ,EAAO,CAAP,CAAjD;;AAEA,WAAIN,KAAKkB,GAAL,CAAS+B,YAAYzE,CAAZ,GAAgBiJ,IAAInH,CAAJ,EAAO,CAAP,CAAzB,KAAuC,CAA3C,EACA;AACCM,YAAIN,CAAJ,IAASzC,YAAYgB,mBAArB;AACA,QAHD,MAIK,IAAImB,KAAKkB,GAAL,CAAS+B,YAAYzE,CAAZ,GAAgBiJ,IAAInH,CAAJ,EAAO,CAAP,CAAhB,GAA4BmH,IAAInH,CAAJ,EAAO,CAAP,CAArC,KAAmD,CAAvD,EACL;AACCM,YAAIN,CAAJ,IAASzC,YAAYiB,mBAArB;AACA;;AAEDJ,kBAAW4B,CAAX,EAAc,CAAd,IAAmB,CAAC2C,YAAYxE,CAAZ,GAAgBgJ,IAAInH,CAAJ,EAAO,CAAP,CAAjB,IAA8BmH,IAAInH,CAAJ,EAAO,CAAP,CAAjD;;AAEA,WAAIN,KAAKkB,GAAL,CAAS+B,YAAYxE,CAAZ,GAAgBgJ,IAAInH,CAAJ,EAAO,CAAP,CAAzB,KAAuC,CAA3C,EACA;AACCM,YAAIN,CAAJ,IAASzC,YAAYmK,oBAArB;AACA,QAHD,MAIK,IAAIhI,KAAKkB,GAAL,CAAS+B,YAAYxE,CAAZ,GAAgBgJ,IAAInH,CAAJ,EAAO,CAAP,CAAhB,GAA4BmH,IAAInH,CAAJ,EAAO,CAAP,CAArC,KAAmD,CAAvD,EACL;AACCM,YAAIN,CAAJ,IAASzC,YAAYoK,oBAArB;AACA;AACD;;AAEDhF,oBAAc,IAAd;;AAEA,UAAI7F,UAAU,IAAd,EACA;AACC6F,qBAAc7E,EAAd;AACA;AACD;;AAED,SAAI8J,gBAAgBT,IAAI,CAAJ,EAAO,CAAP,KAAaA,IAAI,CAAJ,EAAO,CAAP,IAAYA,IAAI,CAAJ,EAAO,CAAP,CAAzB,CAApB;AACA,SAAIU,iBAAiBV,IAAI,CAAJ,EAAO,CAAP,KAAaA,IAAI,CAAJ,EAAO,CAAP,IAAYA,IAAI,CAAJ,EAAO,CAAP,CAAzB,CAArB;AACA,SAAIW,mBAAmBX,IAAI,CAAJ,EAAO,CAAP,KAAaA,IAAI,CAAJ,EAAO,CAAP,IAAYA,IAAI,CAAJ,EAAO,CAAP,CAAzB,CAAvB;AACA,SAAIY,kBAAkBZ,IAAI,CAAJ,EAAO,CAAP,KAAaA,IAAI,CAAJ,EAAO,CAAP,IAAYA,IAAI,CAAJ,EAAO,CAAP,CAAzB,CAAtB;;AAEAzK,iBAAYkH,iBAAZ,CAA8B,CAA9B,IAAmClE,KAAKE,GAAL,CAASiI,iBAAiBnB,WAA1B,EAAuC,CAAvC,CAAnC;AACAhK,iBAAYkH,iBAAZ,CAA8B,CAA9B,IAAmClE,KAAKE,GAAL,CAASgI,gBAAgBlB,WAAzB,EAAsC,CAAtC,CAAnC;AACAhK,iBAAYkH,iBAAZ,CAA8B,CAA9B,IAAmClE,KAAKE,GAAL,CAASkI,mBAAmBpB,WAA5B,EAAyC,CAAzC,CAAnC;AACAhK,iBAAYkH,iBAAZ,CAA8B,CAA9B,IAAmClE,KAAKE,GAAL,CAASmI,kBAAkBrB,WAA3B,EAAwC,CAAxC,CAAnC;;AAEA;AACA;;AAEA;AACA;;AAEA,SAAIsB,UAAU,EAAd;AACA,SAAIC,UAAU,EAAd;AACA,SAAIC,WAAW,EAAf;;AAEAD,aAAQ,CAAR,IAAcJ,kBAAkBE,eAAnB,GAAsCxK,YAAYgB,mBAAlD,GACThB,YAAYiB,mBADhB;AAEA0J,cAAS,CAAT,IAAeN,iBAAiBE,gBAAlB,GAAsCvK,YAAYmK,oBAAlD,GACVnK,YAAYoK,oBADhB;;AAGAM,aAAQ,CAAR,IAAa7K,QAAQ+K,sBAAR,CAA+BF,QAAQ,CAAR,CAA/B,CAAb;AACAC,cAAS,CAAT,IAAc9K,QAAQ+K,sBAAR,CAA+BD,SAAS,CAAT,CAA/B,CAAd;;AAEA,SAAIE,qBAAqBP,kBAAkBE,eAAlB,GAAoCF,cAApC,GACrBE,eADJ;AAEA,SAAIM,oBAAoBT,iBAAiBE,gBAAjB,GAAoCF,aAApC,GACpBE,gBADJ;;AAGA,SAAIQ,eAAe,CAAE,CAAC,CAAD,EAAI,CAAJ,CAAF,EAAW,CAAC,CAAD,EAAI,CAAJ,CAAX,CAAnB;AACA,SAAIC,oBAAoB,KAAxB;;AAEA;AACA,UAAK,IAAIvI,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EACA;AACC,UAAIM,IAAIN,CAAJ,KAAU,GAAd,EACA;AACC;AACA;;AAED,UAAI,CAACiI,QAAQjI,CAAR,IAAa4G,eAAe5G,CAAf,CAAd,KAAoC,CAAxC,EACA;AACCiI,eAAQjI,CAAR,IAAa5C,QAAQ+K,sBAAR,CAA+BF,QAAQjI,CAAR,CAA/B,CAAb;AACA;;AAED,UAAI,CAACkI,SAASlI,CAAT,IAAc4G,eAAe5G,CAAf,CAAf,KAAqC,CAAzC,EACA;AACCkI,gBAASlI,CAAT,IAAc5C,QACX+K,sBADW,CACYD,SAASlI,CAAT,CADZ,CAAd;AAEA;;AAEDsI,mBAAatI,CAAb,EAAgB,CAAhB,IAAqBkI,SAASlI,CAAT,CAArB;AACAsI,mBAAatI,CAAb,EAAgB,CAAhB,IAAqBiI,QAAQjI,CAAR,CAArB;AACA;;AAED,SAAIqI,oBAAoB,CAApB,IACCD,qBAAqB,CAD1B,EAEA;AACC;AACA,UAAK,CAACH,QAAQ,CAAR,IAAarB,eAAe,CAAf,CAAd,IAAmC,CAApC,IACE,CAACsB,SAAS,CAAT,IAActB,eAAe,CAAf,CAAf,IAAoC,CAD1C,EAEA;AACC0B,oBAAa,CAAb,EAAgB,CAAhB,IAAqBL,QAAQ,CAAR,CAArB;AACAK,oBAAa,CAAb,EAAgB,CAAhB,IAAqBJ,SAAS,CAAT,CAArB;AACAI,oBAAa,CAAb,EAAgB,CAAhB,IAAqBJ,SAAS,CAAT,CAArB;AACAI,oBAAa,CAAb,EAAgB,CAAhB,IAAqBL,QAAQ,CAAR,CAArB;AACAM,2BAAoB,IAApB;AACA,OARD,MASK,IAAK,CAACL,SAAS,CAAT,IAActB,eAAe,CAAf,CAAf,IAAoC,CAArC,IACH,CAACqB,QAAQ,CAAR,IAAarB,eAAe,CAAf,CAAd,IAAmC,CADpC,EAEL;AACC0B,oBAAa,CAAb,EAAgB,CAAhB,IAAqBJ,SAAS,CAAT,CAArB;AACAI,oBAAa,CAAb,EAAgB,CAAhB,IAAqBL,QAAQ,CAAR,CAArB;AACAK,oBAAa,CAAb,EAAgB,CAAhB,IAAqBL,QAAQ,CAAR,CAArB;AACAK,oBAAa,CAAb,EAAgB,CAAhB,IAAqBJ,SAAS,CAAT,CAArB;AACAK,2BAAoB,IAApB;AACA;AACD;;AAED,SAAIF,oBAAoB,CAApB,IAAyB,CAACE,iBAA9B,EACA;AACCD,mBAAa,CAAb,EAAgB,CAAhB,IAAqBJ,SAAS,CAAT,CAArB;AACAI,mBAAa,CAAb,EAAgB,CAAhB,IAAqBL,QAAQ,CAAR,CAArB;AACAK,mBAAa,CAAb,EAAgB,CAAhB,IAAqBJ,SAAS,CAAT,CAArB;AACAI,mBAAa,CAAb,EAAgB,CAAhB,IAAqBL,QAAQ,CAAR,CAArB;AACAM,0BAAoB,IAApB;AAEA;;AAED,SAAIH,qBAAqB,CAArB,IAA0B,CAACG,iBAA/B,EACA;AACCD,mBAAa,CAAb,EAAgB,CAAhB,IAAqBL,QAAQ,CAAR,CAArB;AACAK,mBAAa,CAAb,EAAgB,CAAhB,IAAqBJ,SAAS,CAAT,CAArB;AACAI,mBAAa,CAAb,EAAgB,CAAhB,IAAqBL,QAAQ,CAAR,CAArB;AACAK,mBAAa,CAAb,EAAgB,CAAhB,IAAqBJ,SAAS,CAAT,CAArB;AACAK,0BAAoB,IAApB;AACA;;AAED;AACA;AACA;;AAEA,UAAK,IAAIvI,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EACA;AACC,UAAIM,IAAIN,CAAJ,KAAU,GAAd,EACA;AACC;AACA;;AAED,UAAI,CAACsI,aAAatI,CAAb,EAAgB,CAAhB,IAAqB4G,eAAe5G,CAAf,CAAtB,KAA4C,CAAhD,EACA;AACCsI,oBAAatI,CAAb,EAAgB,CAAhB,IAAqBsI,aAAatI,CAAb,EAAgB,CAAhB,CAArB;AACA;;AAEDgI,cAAQhI,CAAR,IAAasI,aAAatI,CAAb,EAAgB,CAAhB,IAAqB4G,eAAe5G,CAAf,CAAlC;AACAgI,cAAQhI,CAAR,KAAc,CAACsI,aAAatI,CAAb,EAAgB,CAAhB,IAAqB4G,eAAe5G,CAAf,CAAtB,KAA4C,CAA1D;AACAgI,cAAQhI,CAAR,KAAc,CAACsI,aAAa,IAAItI,CAAjB,EAAoBA,CAApB,IAAyB4G,eAAe5G,CAAf,CAA1B,KAAgD,EAA9D;AACAgI,cAAQhI,CAAR,KAAc,CAACsI,aAAa,IAAItI,CAAjB,EAAoB,IAAIA,CAAxB,IAA6B4G,eAAe5G,CAAf,CAA9B,KAAoD,EAAlE;;AAEA,UAAI,CAACgI,QAAQhI,CAAR,IAAa,GAAd,KAAsB,CAA1B,EACA;AACCgI,eAAQhI,CAAR,IAAagI,QAAQhI,CAAR,KAAc,CAA3B;AACA;;AAED,UAAI,CAACgI,QAAQhI,CAAR,IAAa,KAAd,KAAwB,CAA5B,EACA;AACCgI,eAAQhI,CAAR,IAAcgI,QAAQhI,CAAR,IAAa,GAAd,GAAqBgI,QAAQhI,CAAR,KAAc,CAAhD;AACA;;AAED,UAAI,CAACgI,QAAQhI,CAAR,IAAa,OAAd,KAA0B,CAA9B,EACA;AACCgI,eAAQhI,CAAR,IAAcgI,QAAQhI,CAAR,IAAa,MAAd,GACR,CAACgI,QAAQhI,CAAR,IAAa,SAAd,KAA4B,CADjC;AAEA;;AAEDM,UAAIN,CAAJ,IAASgI,QAAQhI,CAAR,IAAa,GAAtB;;AAEA,UAAI4G,eAAe5G,CAAf,KAAqBzC,YAAYgB,mBAAjC,IACCqI,eAAe5G,CAAf,KAAqBzC,YAAYmK,oBADlC,IAECd,eAAe5G,CAAf,KAAqBzC,YAAYiB,mBAFlC,IAGCoI,eAAe5G,CAAf,KAAqBzC,YAAYoK,oBAHtC,EAIA;AACCrH,WAAIN,CAAJ,IAAS4G,eAAe5G,CAAf,CAAT;AACA;AACD;;AAED;AACA;;AAEA,SAAIwI,cAAclI,IAAI,CAAJ,KAAU/C,YAAYiB,mBAAtB,GAA4C,CAA5C,GACd8B,IAAI,CAAJ,CADJ;AAEA,SAAImI,cAAcnI,IAAI,CAAJ,KAAU/C,YAAYiB,mBAAtB,GAA4C,CAA5C,GACd8B,IAAI,CAAJ,CADJ;;AAGAkI,oBAAef,IAAf;AACAgB,oBAAehB,IAAf;;AAEA,SAAIe,cAAc,CAAlB,EACA;AACCA,qBAAe,CAAf;AACA;;AAED,SAAIC,cAAc,CAAlB,EACA;AACCA,qBAAe,CAAf;AACA;;AAED,SAAIC,eAAehM,YAAYgH,aAAZ,CAA0B8E,cAAc,CAAxC,EAA2CC,cAAc,CAAzD,CAAnB;;AAEA/L,iBAAY+G,UAAZ,CAAuB,CAAvB,EAA0B,CAA1B,IAA+B0D,IAAI,CAAJ,EAAO,CAAP,CAA/B;AACAzK,iBAAY+G,UAAZ,CAAuB,CAAvB,EAA0B,CAA1B,IAA+B0D,IAAI,CAAJ,EAAO,CAAP,CAA/B;;AAEA,aAAQ7G,IAAI,CAAJ,CAAR;AAEC,WAAK/C,YAAYgB,mBAAjB;AACC7B,mBAAY+G,UAAZ,CAAuB,CAAvB,EAA0B,CAA1B,KAAgC+C,kBAAhC;AACA9J,mBAAY+G,UAAZ,CAAuB,CAAvB,EAA0B,CAA1B,KAAgCrF,WAAW,CAAX,EAAc,CAAd,IAAmB+I,IAAI,CAAJ,EAAO,CAAP,CAAnD;AACA;AACD,WAAK5J,YAAYoK,oBAAjB;AACCjL,mBAAY+G,UAAZ,CAAuB,CAAvB,EAA0B,CAA1B,KAAgCrF,WAAW,CAAX,EAAc,CAAd,IAAmB+I,IAAI,CAAJ,EAAO,CAAP,CAAnD;AACAzK,mBAAY+G,UAAZ,CAAuB,CAAvB,EAA0B,CAA1B,KAAgC0D,IAAI,CAAJ,EAAO,CAAP,IAAYX,kBAA5C;AACA;AACD,WAAKjJ,YAAYiB,mBAAjB;AACC9B,mBAAY+G,UAAZ,CAAuB,CAAvB,EAA0B,CAA1B,KAAgC0D,IAAI,CAAJ,EAAO,CAAP,IAAYX,kBAA5C;AACA9J,mBAAY+G,UAAZ,CAAuB,CAAvB,EAA0B,CAA1B,KAAgCrF,WAAW,CAAX,EAAc,CAAd,IAAmB+I,IAAI,CAAJ,EAAO,CAAP,CAAnD;AACA;AACD,WAAK5J,YAAYmK,oBAAjB;AACChL,mBAAY+G,UAAZ,CAAuB,CAAvB,EAA0B,CAA1B,KAAgCrF,WAAW,CAAX,EAAc,CAAd,IAAmB+I,IAAI,CAAJ,EAAO,CAAP,CAAnD;AACAzK,mBAAY+G,UAAZ,CAAuB,CAAvB,EAA0B,CAA1B,KAAgC+C,kBAAhC;AACA;AAjBF;;AAoBA,SAAImC,eAAe,CAAnB;;AAEA;AACA,SAAIC,kBAAkB,CAACtI,IAAI,CAAJ,KAAU/C,YAAYiB,mBAAZ,GAAkCjB,YAAYgB,mBAAxD,CAAD,IAAiF,CAAjF,GAAqF,CAArF,GAClB,CADJ;AAEA,SAAIsK,qBAAqBD,eAAzB;AACA,SAAIE,qBAAqB,CAAzB;;AAEA,UAAK,IAAI9I,IAAI,CAAb,EAAgBA,IAAI0I,aAAa3K,MAAjC,EAAyCiC,GAAzC,EACA;AACC,UAAI+I,gBAAgBL,aAAa1I,CAAb,IAAkB,GAAtC;;AAEA;AACA;AACA,UAAIgJ,iBAAiBD,iBAAiBxL,YAAYiB,mBAA7B,GAAmD,CAAnD,GACjBuK,aADJ;;AAGAC,wBAAkBvB,IAAlB;;AAEA,UAAIuB,iBAAiB,CAArB,EACA;AACCA,yBAAkB,CAAlB;AACA;;AAED,UAAIC,YAAYvM,YAAY8G,UAAZ,CAAuBwF,iBAAiB,CAAxC,CAAhB;;AAEAF,2BAAsBE,iBAAiB,CAAjB,GAAqB,CAAtB,GAA2B,CAA3B,GAA+B,CAApD;AACA;AACA;AACA;AACA;AACA,UAAIF,sBAAsBF,eAA1B,EACA;AACCD;AACA;AACA;AACA;AACA;AACAjM,mBAAY+G,UAAZ,CAAuBkF,YAAvB,EAAqC,CAArC,IAA0CjM,YAAY+G,UAAZ,CAAuBkF,eAAe,CAAtC,EAAyC,CAAzC,CAA1C;AACAjM,mBAAY+G,UAAZ,CAAuBkF,YAAvB,EAAqC,CAArC,IAA0CjM,YAAY+G,UAAZ,CAAuBkF,eAAe,CAAtC,EAAyC,CAAzC,CAA1C;AACA;;AAED,UAAIO,MAAM,CAACR,aAAa1I,CAAb,IAAkBtD,YAAY+H,WAA/B,IAA8C,CAAxD;AACA,UAAI0E,MAAM,CAACT,aAAa1I,CAAb,IAAkBtD,YAAY8H,WAA/B,IAA8C,CAAxD;AACA,UAAI4E,OAAO,CAACV,aAAa1I,CAAb,IAAkBtD,YAAY4H,SAA/B,KAA6C,CAAxD;AACA8E,aAAOA,QAAQ3B,IAAf;;AAEA,UAAI2B,OAAO,GAAX,EACA;AACCA,cAAOA,QAAQ,CAAf;AACA;;AAED,UAAIC,SAAS,CAACX,aAAa1I,CAAb,IAAkBtD,YAAY6H,WAA/B,IAA8C,CAA3D;;AAEA,UAAI,CAAC4E,OAAOD,GAAR,KAAgBE,OAAO,CAA3B,EACA;AACC,WAAIE,QAAQ,CAAZ;AACA,WAAIC,SAASJ,MAAM,CAAN,GAAU,CAAvB;;AAEA,WAAIE,UAAUP,sBAAsB,CAApC,EACA;AACCQ,gBAAQnC,IAAIoC,MAAJ,EAAY,CAAZ,IAAiBnL,WAAWmL,MAAX,EAAmB,CAAnB,IAAwBpC,IAAIoC,MAAJ,EAAY,CAAZ,CAAjD;AACA,QAHD,MAIK,IAAIF,MAAJ,EACL;AACCC,gBAAQnC,IAAIoC,MAAJ,EAAY,CAAZ,IAAiBnL,WAAWmL,MAAX,EAAmB,CAAnB,IAAwBpC,IAAIoC,MAAJ,EAAY,CAAZ,CAAjD;AACA,QAHI,MAKL;AACCD,gBAAQ5M,YAAYmH,MAAZ,CAAmB0F,MAAnB,EAA2BH,IAA3B,CAAR;AACA;;AAED,WAAIN,sBAAsB,CAA1B,EACA;AACC,YAAIU,QAAQ9M,YAAY+G,UAAZ,CAAuBkF,YAAvB,EAAqC,CAArC,CAAZ;AACA,YAAIc,SAAS,CAACH,QAAQE,KAAT,IAAkBP,UAAU,CAAV,CAA/B;;AAEA,YAAIQ,SAAS,CAAb,EACA;AACC/M,qBAAY+G,UAAZ,CAAuBkF,YAAvB,EAAqC,CAArC,KAA2CM,UAAU,CAAV,IACvCQ,MADJ;AAEA;AACD,QAVD,MAYA;AACC,YAAIC,QAAQhN,YAAY+G,UAAZ,CAAuBkF,YAAvB,EAAqC,CAArC,CAAZ;AACA,YAAIgB,SAAS,CAACL,QAAQI,KAAT,IAAkBT,UAAU,CAAV,CAA/B;;AAEA,YAAIU,SAAS,CAAb,EACA;AACCjN,qBAAY+G,UAAZ,CAAuBkF,YAAvB,EAAqC,CAArC,KAA2CM,UAAU,CAAV,IACvCU,MADJ;AAEA;AACD;AACD,OAxCD,MA0CK,IAAIN,MAAJ,EACL;AACC;AACA3M,mBAAY+G,UAAZ,CAAuBkF,YAAvB,EAAqC,CAArC,KAA2CM,UAAU,CAAV,IACvCvJ,KAAKkB,GAAL,CAASlE,YAAYkH,iBAAZ,CAA8BoF,cAA9B,IAAgD,CAAzD,CADJ;AAEAtM,mBAAY+G,UAAZ,CAAuBkF,YAAvB,EAAqC,CAArC,KAA2CM,UAAU,CAAV,IACvCvJ,KAAKkB,GAAL,CAASlE,YAAYkH,iBAAZ,CAA8BoF,cAA9B,IAAgD,CAAzD,CADJ;AAEA;;AAED,UAAIL,eAAe,CAAf,IACCjM,YAAY+G,UAAZ,CAAuBkF,YAAvB,EAAqCG,kBAArC,KAA4DpM,YAAY+G,UAAZ,CAAuBkF,eAAe,CAAtC,EAAyCG,kBAAzC,CADjE,EAEA;AACCH;AACA,OAJD,MAMA;AACCC,yBAAkBE,kBAAlB;AACA;AACD;;AAED,UAAK,IAAI9I,IAAI,CAAb,EAAgBA,KAAK2I,YAArB,EAAmC3I,GAAnC,EACA;AACC,UAAIA,KAAK2I,YAAT,EACA;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAIiB,oBAAoB,CAACtJ,IAAI,CAAJ,KAAU/C,YAAYiB,mBAAZ,GAAkCjB,YAAYgB,mBAAxD,CAAD,IAAiF,CAAjF,GAAqF,CAArF,GACpB,CADJ;AAEA,WAAIsL,aAAaD,qBAAqBf,kBAArB,GAA0C,CAA1C,GAA8C,CAA/D;;AAEA;AACA;AACA,WAAIgB,cAAc,CAAClB,eAAe,CAAhB,IAAqB,CAAvC,EACA;AACC;AACA;AACA;AACD;;AAED3L,aAAO6C,IAAP,CAAY,IAAIL,OAAJ,CAAYE,KAAKkC,KAAL,CAAWlF,YAAY+G,UAAZ,CAAuBzD,CAAvB,EAA0B,CAA1B,CAAX,CAAZ,EAAsDN,KAAKkC,KAAL,CAAWlF,YAAY+G,UAAZ,CAAuBzD,CAAvB,EAA0B,CAA1B,CAAX,CAAtD,CAAZ;AACA;;AAED;AACA,SAAI8J,QAAQ,CAAZ;;AAEA,YAAOA,QAAQ9M,OAAOe,MAAtB,EACA;AACC,UAAIf,OAAO8M,QAAQ,CAAf,KAAqB,IAArB,IAA6B9M,OAAO8M,KAAP,KAAiB,IAA9C,IACH9M,OAAO8M,QAAQ,CAAf,EAAkB5L,CAAlB,IAAuBlB,OAAO8M,KAAP,EAAc5L,CADlC,IAEHlB,OAAO8M,QAAQ,CAAf,EAAkB3L,CAAlB,IAAuBnB,OAAO8M,KAAP,EAAc3L,CAFtC,EAGA;AACC2L;AACA,OALD,MAOA;AACC9M,cAAOqG,MAAP,CAAcyG,KAAd,EAAqB,CAArB;AACA;AACD;AACD,KA1/CF;;AA4/CCC,qBAAiB,yBAASzJ,GAAT,EAAcmH,IAAd,EAAoBnI,EAApB,EAAwBc,EAAxB,EACjB;AACC,SAAIoI,cAAclI,IAAI,CAAJ,KAAU/C,YAAYiB,mBAAtB,GAA4C,CAA5C,GACd8B,IAAI,CAAJ,CADJ;AAEA,SAAImI,cAAcnI,IAAI,CAAJ,KAAU/C,YAAYiB,mBAAtB,GAA4C,CAA5C,GACd8B,IAAI,CAAJ,CADJ;;AAGAkI,oBAAef,IAAf;AACAgB,oBAAehB,IAAf;;AAEA,SAAIe,cAAc,CAAlB,EACA;AACCA,qBAAe,CAAf;AACA;AACD,SAAIC,cAAc,CAAlB,EACA;AACCA,qBAAe,CAAf;AACA;;AAED,SAAIzL,SAAS0G,cAAc8E,cAAc,CAA5B,EAA+BC,cAAc,CAA7C,CAAb;;AAEA,SAAInJ,MAAM,CAAN,IAAWc,MAAM,CAArB,EACA;AACC,UAAIuD,oBAAoB6E,cAAc,CAAlC,EAAqCC,cAAc,CAAnD,KAAyD,IAA7D,EACA;AACCzL,gBAAS2G,oBAAoB6E,cAAc,CAAlC,EAAqCC,cAAc,CAAnD,CAAT;AACA;AACD;;AAED,YAAOzL,MAAP;AACA;AA1hDF,I;;;AA6hDAgN,cAAWtN,WAAX,GAAyB,OAAOA,WAAP,KAAuB,WAAvB,GAAqCA,WAArC,GAAmDuN,SAA5E","file":"mxEdgeStyle.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEdgeStyle =\n{\n\t/**\n\t * Class: mxEdgeStyle\n\t * \n\t * Provides various edge styles to be used as the values for\n\t * <mxConstants.STYLE_EDGE> in a cell style.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * var style = stylesheet.getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.ElbowConnector;\n\t * (end)\n\t * \n\t * Sets the default edge style to <ElbowConnector>.\n\t * \n\t * Custom edge style:\n\t * \n\t * To write a custom edge style, a function must be added to the mxEdgeStyle\n\t * object as follows:\n\t * \n\t * (code)\n\t * mxEdgeStyle.MyStyle = function(state, source, target, points, result)\n\t * {\n\t *   if (source != null && target != null)\n\t *   {\n\t *     var pt = new mxPoint(target.getCenterX(), source.getCenterY());\n\t * \n\t *     if (mxUtils.contains(source, pt.x, pt.y))\n\t *     {\n\t *       pt.y = source.y + source.height;\n\t *     }\n\t * \n\t *     result.push(pt);\n\t *   }\n\t * };\n\t * (end)\n\t * \n\t * In the above example, a right angle is created using a point on the\n\t * horizontal center of the target vertex and the vertical center of the source\n\t * vertex. The code checks if that point intersects the source vertex and makes\n\t * the edge straight if it does. The point is then added into the result array,\n\t * which acts as the return value of the function.\n\t *\n\t * The new edge style should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('myEdgeStyle', mxEdgeStyle.MyStyle);\n\t * (end)\n\t * \n\t * The custom edge style above can now be used in a specific edge as follows:\n\t * \n\t * (code)\n\t * model.setStyle(edge, 'edgeStyle=myEdgeStyle');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxEdgeStyle.MyStyle for the value in the\n\t * cell style above.\n\t * \n\t * Or it can be used for all edges in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.MyStyle;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * Function: EntityRelation\n\t * \n\t * Implements an entity relation style for edges (as used in database\n\t * schema diagrams). At the time the function is called, the result\n\t * array contains a placeholder (null) for the first absolute point,\n\t * that is, the point where the edge and source terminal are connected.\n\t * The implementation of the style then adds all intermediate waypoints\n\t * except for the last point, that is, the connection point between the\n\t * edge and the target terminal. The first ant the last point in the\n\t * result array are then replaced with mxPoints that take into account\n\t * the terminal's perimeter and next point on the edge.\n\t *\n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * source - <mxCellState> that represents the source terminal.\n\t * target - <mxCellState> that represents the target terminal.\n\t * points - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t */\n\t EntityRelation: function (state, source, target, points, result)\n\t {\n\t\tvar view = state.view;\n\t \tvar graph = view.graph;\n\t \tvar segment = mxUtils.getValue(state.style,\n\t \t\t\tmxConstants.STYLE_SEGMENT,\n\t \t\t\tmxConstants.ENTITY_SEGMENT) * view.scale;\n\t \t\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t \tvar isSourceLeft = false;\n\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\telse if (source != null)\n\t\t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(source, state, true, mxConstants.DIRECTION_MASK_NONE);\n\t\t\t\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisSourceLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t \tvar sourceGeometry = graph.getCellGeometry(source.cell);\n\t\t\n\t\t\t \tif (sourceGeometry.relative)\n\t\t\t \t{\n\t\t\t \t\tisSourceLeft = sourceGeometry.x <= 0.5;\n\t\t\t \t}\n\t\t\t \telse if (target != null)\n\t\t\t \t{\n\t\t\t \t\tisSourceLeft = target.x + target.width < source.x;\n\t\t\t \t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn;\n\t\t}\n\t \t\n\t \tvar isTargetLeft = true;\n\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\telse if (target != null)\n\t \t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(target, state, false, mxConstants.DIRECTION_MASK_NONE);\n\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisTargetLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t \tvar targetGeometry = graph.getCellGeometry(target.cell);\n\t\n\t\t\t \tif (targetGeometry.relative)\n\t\t\t \t{\n\t\t\t \t\tisTargetLeft = targetGeometry.x <= 0.5;\n\t\t\t \t}\n\t\t\t \telse if (source != null)\n\t\t\t \t{\n\t\t\t \t\tisTargetLeft = source.x + source.width < target.x;\n\t\t\t \t}\n\t\t\t}\n\t \t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar x0 = (isSourceLeft) ? source.x : source.x + source.width;\n\t\t\tvar y0 = view.getRoutingCenterY(source);\n\t\t\t\n\t\t\tvar xe = (isTargetLeft) ? target.x : target.x + target.width;\n\t\t\tvar ye = view.getRoutingCenterY(target);\n\t\n\t\t\tvar seg = segment;\n\t\n\t\t\tvar dx = (isSourceLeft) ? -seg : seg;\n\t\t\tvar dep = new mxPoint(x0 + dx, y0);\n\t\t\t\t\t\n\t\t\tdx = (isTargetLeft) ? -seg : seg;\n\t\t\tvar arr = new mxPoint(xe + dx, ye);\n\t\n\t\t\t// Adds intermediate points if both go out on same side\n\t\t\tif (isSourceLeft == isTargetLeft)\n\t\t\t{\n\t\t\t\tvar x = (isSourceLeft) ?\n\t\t\t\t\tMath.min(x0, xe)-segment :\n\t\t\t\t\tMath.max(x0, xe)+segment;\n\t\n\t\t\t\tresult.push(new mxPoint(x, y0));\n\t\t\t\tresult.push(new mxPoint(x, ye));\n\t\t\t}\n\t\t\telse if ((dep.x < arr.x) == isSourceLeft)\n\t\t\t{\n\t\t\t\tvar midY = y0 + (ye - y0) / 2;\n\t\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(new mxPoint(dep.x, midY));\n\t\t\t\tresult.push(new mxPoint(arr.x, midY));\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t}\n\t },\n\n\t /**\n\t * Function: Loop\n\t * \n\t * Implements a self-reference, aka. loop.\n\t */\n\tLoop: function (state, source, target, points, result)\n\t{\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tif (points != null && points.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar pt = points[i];\n\t\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\tresult.push(new mxPoint(pt.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tvar view = state.view;\n\t\t\tvar graph = view.graph;\n\t\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tif (mxUtils.contains(source, pt.x, pt.y))\n\t\t\t\t{\n\t\t\t\t\tpt = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = 0;\n\t\t\tvar dx = 0;\n\t\t\tvar y = 0;\n\t\t\tvar dy = 0;\n\t\t\t\n\t\t \tvar seg = mxUtils.getValue(state.style, mxConstants.STYLE_SEGMENT,\n\t\t \t\tgraph.gridSize) * view.scale;\n\t\t\tvar dir = mxUtils.getValue(state.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_WEST);\n\t\t\t\n\t\t\tif (dir == mxConstants.DIRECTION_NORTH ||\n\t\t\t\tdir == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = seg;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ty = view.getRoutingCenterY(source);\n\t\t\t\tdy = seg;\n\t\t\t}\n\t\t\t\n\t\t\tif (pt == null ||\n\t\t\t\tpt.x < source.x ||\n\t\t\t\tpt.x > source.x + source.width)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tx = pt.x;\n\t\t\t\t\tdy = Math.max(Math.abs(y - pt.y), dy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (dir == mxConstants.DIRECTION_NORTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y - 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y + source.height + 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_EAST)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x - 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x + source.width + 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pt != null)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = Math.max(Math.abs(x - pt.x), dy);\n\t\t\t\ty = pt.y;\n\t\t\t\tdy = 0;\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(x - dx, y - dy));\n\t\t\tresult.push(new mxPoint(x + dx, y + dy));\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: ElbowConnector\n\t * \n\t * Uses either <SideToSide> or <TopToBottom> depending on the horizontal\n\t * flag in the cell style. <SideToSide> is used if horizontal is true or\n\t * unspecified. See <EntityRelation> for a description of the\n\t * parameters.\n\t */\n\tElbowConnector: function (state, source, target, points, result)\n\t{\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\tvar vertical = false;\n\t\tvar horizontal = false;\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar left = Math.min(source.x, target.x);\n\t\t\t\tvar right = Math.max(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\n\t\t\t\tvar top = Math.min(source.y, target.y);\n\t\t\t\tvar bottom = Math.max(source.y + source.height,\n\t\t\t\t\ttarget.y + target.height);\n\n\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tvertical = pt.y < top || pt.y > bottom;\n\t\t\t\thorizontal = pt.x < left || pt.x > right;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar left = Math.max(source.x, target.x);\n\t\t\t\tvar right = Math.min(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\t\t\t\t\n\t\t\t\tvertical = left == right;\n\t\t\t\t\n\t\t\t\tif (!vertical)\n\t\t\t\t{\n\t\t\t\t\tvar top = Math.max(source.y, target.y);\n\t\t\t\t\tvar bottom = Math.min(source.y + source.height,\n\t\t\t\t\t\ttarget.y + target.height);\n\t\t\t\t\t\t\n\t\t\t\t\thorizontal = top == bottom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!horizontal && (vertical ||\n\t\t\tstate.style[mxConstants.STYLE_ELBOW] == mxConstants.ELBOW_VERTICAL))\n\t\t{\n\t\t\tmxEdgeStyle.TopToBottom(state, source, target, points, result);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxEdgeStyle.SideToSide(state, source, target, points, result);\n\t\t}\n\t},\n\n\t/**\n\t * Function: SideToSide\n\t * \n\t * Implements a vertical elbow edge. See <EntityRelation> for a description\n\t * of the parameters.\n\t */\n\tSideToSide: function (state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\n\t\t\tvar x = (pt != null) ? pt.x : Math.round(r + (l - r) / 2);\n\t\n\t\t\tvar y1 = view.getRoutingCenterY(source);\n\t\t\tvar y2 = view.getRoutingCenterY(target);\n\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tif (pt.y >= source.y && pt.y <= source.y + source.height)\n\t\t\t\t{\n\t\t\t\t\ty1 = pt.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (pt.y >= target.y && pt.y <= target.y + target.height)\n\t\t\t\t{\n\t\t\t\t\ty2 = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y1) &&\n\t\t\t\t!mxUtils.contains(source, x, y1))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x,  y1));\n\t\t\t}\n\t\n\t\t\tif (!mxUtils.contains(target, x, y2) &&\n\t\t\t\t!mxUtils.contains(source, x, y2))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y2));\n\t\t\t}\n\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, x, pt.y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, x, pt.y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(x, pt.y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\t\n\t\t\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(x, t + (b - t) / 2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: TopToBottom\n\t * \n\t * Implements a horizontal elbow edge. See <EntityRelation> for a\n\t * description of the parameters.\n\t */\n\tTopToBottom: function(state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\n\t\t\tvar x = view.getRoutingCenterX(source);\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= source.x &&\n\t\t\t\tpt.x <= source.x + source.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\t\n\t\t\tvar y = (pt != null) ? pt.y : Math.round(b + (t - b) / 2);\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= target.x &&\n\t\t\t\tpt.x <= target.x + target.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(target);\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null && result.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, pt.x, y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, pt.x, y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(pt.x, y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(l + (r - l) / 2, y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: SegmentConnector\n\t * \n\t * Implements an orthogonal edge style. Use <mxEdgeSegmentHandler>\n\t * as an interactive handler for this style.\n\t */\n\tSegmentConnector: function(state, source, target, hints, result)\n\t{\n\t\t// Creates array of all way- and terminalpoints\n\t\tvar pts = state.absolutePoints;\n\t\tvar tol = Math.max(1, state.view.scale);\n\t\t\n\t\t// Whether the first segment outgoing from the source end is horizontal\n\t\tvar lastPushed = (result.length > 0) ? result[0] : null;\n\t\tvar horizontal = true;\n\t\tvar hint = null;\n\t\t\n\t\t// Adds waypoints only if outside of tolerance\n\t\tfunction pushPoint(pt)\n\t\t{\n\t\t\tif (lastPushed == null || Math.abs(lastPushed.x - pt.x) >= tol || Math.abs(lastPushed.y - pt.y) >= tol)\n\t\t\t{\n\t\t\t\tresult.push(pt);\n\t\t\t\tlastPushed = pt;\n\t\t\t}\n\t\t\t\n\t\t\treturn lastPushed;\n\t\t};\n\n\t\t// Adds the first point\n\t\tvar pt = pts[0];\n\t\t\n\t\tif (pt == null && source != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(source), state.view.getRoutingCenterY(source));\n\t\t}\n\t\telse if (pt != null)\n\t\t{\n\t\t\tpt = pt.clone();\n\t\t}\n\t\t\n\t\tpt.x = Math.round(pt.x);\n\t\tpt.y = Math.round(pt.y);\n\t\t\n\t\tvar lastInx = pts.length - 1;\n\n\t\t// Adds the waypoints\n\t\tif (hints != null && hints.length > 0)\n\t\t{\n\t\t\t// Converts all hints and removes nulls\n\t\t\tvar newHints = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < hints.length; i++)\n\t\t\t{\n\t\t\t\tvar tmp = state.view.transformControlPoint(state, hints[i]);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\ttmp.x = Math.round(tmp.x);\n\t\t\t\t\ttmp.y = Math.round(tmp.y);\n\t\t\t\t\tnewHints.push(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (newHints.length == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\thints = newHints;\n\t\t\t\n\t\t\t// Aligns source and target hint to fixed points\n\t\t\tif (pt != null && hints[0] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[0].x - pt.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].x = pt.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[0].y - pt.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].y = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pe = pts[lastInx];\n\t\t\t\n\t\t\tif (pe != null && hints[hints.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[hints.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[hints.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\thint = hints[0];\n\n\t\t\tvar currentTerm = source;\n\t\t\tvar currentPt = pts[0];\n\t\t\tvar hozChan = false;\n\t\t\tvar vertChan = false;\n\t\t\tvar currentHint = hint;\n\t\t\t\n\t\t\tif (currentPt != null)\n\t\t\t{\n\t\t\t\tcurrentPt.x = Math.round(currentPt.x);\n\t\t\t\tcurrentPt.y = Math.round(currentPt.y);\n\t\t\t\tcurrentTerm = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Check for alignment with fixed points and with channels\n\t\t\t// at source and target segments only\n\t\t\tfor (var i = 0; i < 2; i++)\n\t\t\t{\n\t\t\t\tvar fixedVertAlign = currentPt != null && currentPt.x == currentHint.x;\n\t\t\t\tvar fixedHozAlign = currentPt != null && currentPt.y == currentHint.y;\n\t\t\t\t\n\t\t\t\tvar inHozChan = currentTerm != null && (currentHint.y >= currentTerm.y &&\n\t\t\t\t\t\tcurrentHint.y <= currentTerm.y + currentTerm.height);\n\t\t\t\tvar inVertChan = currentTerm != null && (currentHint.x >= currentTerm.x &&\n\t\t\t\t\t\tcurrentHint.x <= currentTerm.x + currentTerm.width);\n\n\t\t\t\thozChan = fixedHozAlign || (currentPt == null && inHozChan);\n\t\t\t\tvertChan = fixedVertAlign || (currentPt == null && inVertChan);\n\t\t\t\t\n\t\t\t\t// If the current hint falls in both the hor and vert channels in the case\n\t\t\t\t// of a floating port, or if the hint is exactly co-incident with a \n\t\t\t\t// fixed point, ignore the source and try to work out the orientation\n\t\t\t\t// from the target end\n\t\t\t\tif (i==0 && ((hozChan && vertChan) || (fixedVertAlign && fixedHozAlign)))\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (currentPt != null && (!fixedHozAlign && !fixedVertAlign) && (inHozChan || inVertChan)) \n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = inHozChan ? false : true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tif (vertChan || hozChan)\n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = hozChan;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (i == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Work back from target end\n\t\t\t\t\t\t\thorizontal = hints.length % 2 == 0 ? hozChan : vertChan;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentTerm = target;\n\t\t\t\tcurrentPt = pts[lastInx];\n\t\t\t\t\n\t\t\t\tif (currentPt != null)\n\t\t\t\t{\n\t\t\t\t\tcurrentPt.x = Math.round(currentPt.x);\n\t\t\t\t\tcurrentPt.y = Math.round(currentPt.y);\n\t\t\t\t\tcurrentTerm = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentHint = hints[hints.length - 1];\n\t\t\t\t\n\t\t\t\tif (fixedVertAlign && fixedHozAlign)\n\t\t\t\t{\n\t\t\t\t\thints = hints.slice(1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (horizontal && ((pts[0] != null && pts[0].y != hint.y) ||\n\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t(hint.y < source.y || hint.y > source.y + source.height))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t}\n\t\t\telse if (!horizontal && ((pts[0] != null && pts[0].x != hint.x) ||\n\t\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t\t(hint.x < source.x || hint.x > source.x + source.width))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\tif (horizontal)\n\t\t\t{\n\t\t\t\tpt.y = hint.y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpt.x = hint.x;\n\t\t\t}\n\t\t\n\t\t\tfor (var i = 0; i < hints.length; i++)\n\t\t\t{\n\t\t\t\thorizontal = !horizontal;\n\t\t\t\thint = hints[i];\n\t\t\t\t\n//\t\t\t\tmxLog.show();\n//\t\t\t\tmxLog.debug('hint', i, hint.x, hint.y);\n\t\t\t\t\n\t\t\t\tif (horizontal)\n\t\t\t\t{\n\t\t\t\t\tpt.y = hint.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpt.x = hint.x;\n\t\t\t\t}\n\t\t\n\t\t\t\tpushPoint(pt.clone());\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\thint = pt;\n\t\t\t// FIXME: First click in connect preview toggles orientation\n\t\t\thorizontal = true;\n\t\t}\n\n\t\t// Adds the last point\n\t\tpt = pts[lastInx];\n\n\t\tif (pt == null && target != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(target), state.view.getRoutingCenterY(target));\n\t\t}\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt.x = Math.round(pt.x);\n\t\t\tpt.y = Math.round(pt.y);\n\t\t\t\n\t\t\tif (hint != null)\n\t\t\t{\n\t\t\t\tif (horizontal && ((pts[lastInx] != null && pts[lastInx].y != hint.y) ||\n\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t(hint.y < target.y || hint.y > target.y + target.height))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t\t}\n\t\t\t\telse if (!horizontal && ((pts[lastInx] != null && pts[lastInx].x != hint.x) ||\n\t\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t\t(hint.x < target.x || hint.x > target.x + target.width))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the source terminal for floating ports\n\t\tif (pts[0] == null && source != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[1] != null &&\n\t\t\t\tmxUtils.contains(source, result[1].x, result[1].y))\n\t\t\t{\n\t\t\t\tresult.splice(1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the target terminal\n\t\tif (pts[lastInx] == null && target != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[result.length - 1] != null &&\n\t\t\t\tmxUtils.contains(target, result[result.length - 1].x, result[result.length - 1].y))\n\t\t\t{\n\t\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes last point if inside tolerance with end point\n\t\tif (pe != null && result[result.length - 1] != null &&\n\t\t\tMath.abs(pe.x - result[result.length - 1].x) < tol &&\n\t\t\tMath.abs(pe.y - result[result.length - 1].y) < tol)\n\t\t{\n\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t\n\t\t\t// Lines up second last point in result with end point\n\t\t\tif (result[result.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(result[result.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(result[result.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\torthBuffer: 10,\n\t\n\torthPointsFallback: true,\n\n\tdirVectors: [ [ -1, 0 ],\n\t\t\t[ 0, -1 ], [ 1, 0 ], [ 0, 1 ], [ -1, 0 ], [ 0, -1 ], [ 1, 0 ] ],\n\n\twayPoints1: [ [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0], [ 0, 0],  [ 0, 0],\n\t              [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0] ],\n\n\troutePatterns: [\n\t\t[ [ 513, 2308, 2081, 2562 ], [ 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 513, 1090, 514, 2564, 2184, 2562 ],\n\t\t\t[ 513, 2308, 2561, 1090, 514, 2568, 2308 ] ],\n\t[ [ 514, 1057, 513, 2308, 2081, 2562 ], [ 514, 2184, 2114, 2561 ],\n\t\t\t[ 514, 2184, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 514, 1057, 513, 2568, 2308, 2561 ] ],\n\t[ [ 1090, 514, 1057, 513, 2308, 2081, 2562 ], [ 2114, 2561 ],\n\t\t\t[ 1090, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 1090, 514, 1057, 513, 2308, 2561, 2568 ] ],\n\t[ [ 2081, 2562 ], [ 1057, 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 1057, 513, 1090, 514, 2184, 2562, 2564 ],\n\t\t\t[ 1057, 2561, 1090, 514, 2568, 2308 ] ] ],\n\t\n\tinlineRoutePatterns: [\n\t\t\t[ null, [ 2114, 2568 ], null, null ],\n\t\t\t[ null, [ 514, 2081, 2114, 2568 ] , null, null ],\n\t\t\t[ null, [ 2114, 2561 ], null, null ],\n\t\t\t[ [ 2081, 2562 ], [ 1057, 2114, 2568 ],\n\t\t\t\t\t[ 2184, 2562 ],\n\t\t\t\t\tnull ] ],\n\tvertexSeperations: [],\n\n\tlimits: [\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ],\n\n\tLEFT_MASK: 32,\n\n\tTOP_MASK: 64,\n\n\tRIGHT_MASK: 128,\n\n\tBOTTOM_MASK: 256,\n\n\tLEFT: 1,\n\n\tTOP: 2,\n\n\tRIGHT: 4,\n\n\tBOTTOM: 8,\n\n\t// TODO remove magic numbers\n\tSIDE_MASK: 480,\n\t//mxEdgeStyle.LEFT_MASK | mxEdgeStyle.TOP_MASK | mxEdgeStyle.RIGHT_MASK\n\t//| mxEdgeStyle.BOTTOM_MASK,\n\n\tCENTER_MASK: 512,\n\n\tSOURCE_MASK: 1024,\n\n\tTARGET_MASK: 2048,\n\n\tVERTEX_MASK: 3072,\n\t// mxEdgeStyle.SOURCE_MASK | mxEdgeStyle.TARGET_MASK,\n\t\n\tgetJettySize: function(state, source, target, points, isSource)\n\t{\n\t\tvar value = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_SOURCE_JETTY_SIZE :\n\t\t\tmxConstants.STYLE_TARGET_JETTY_SIZE, mxUtils.getValue(state.style,\n\t\t\t\t\tmxConstants.STYLE_JETTY_SIZE, mxEdgeStyle.orthBuffer));\n\t\t\n\t\tif (value == 'auto')\n\t\t{\n\t\t\t// Computes the automatic jetty size\n\t\t\tvar type = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW, mxConstants.NONE);\n\t\t\t\n\t\t\tif (type != mxConstants.NONE)\n\t\t\t{\n\t\t\t\tvar size = mxUtils.getNumber(state.style, (isSource) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE);\n\t\t\t\tvalue = Math.max(2, Math.ceil((size + mxEdgeStyle.orthBuffer) / mxEdgeStyle.orthBuffer)) * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvalue = 2 * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: OrthConnector\n\t * \n\t * Implements a local orthogonal router between the given\n\t * cells.\n\t * \n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * source - <mxCellState> that represents the source terminal.\n\t * target - <mxCellState> that represents the target terminal.\n\t * points - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t * \n\t */\n\tOrthConnector: function(state, source, target, points, result)\n\t{\n\t\tvar graph = state.view.graph;\n\t\tvar sourceEdge = source == null ? false : graph.getModel().isEdge(source.cell);\n\t\tvar targetEdge = target == null ? false : graph.getModel().isEdge(target.cell);\n\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t\tvar sourceX = source != null ? source.x : p0.x;\n\t\tvar sourceY = source != null ? source.y : p0.y;\n\t\tvar sourceWidth = source != null ? source.width : 0;\n\t\tvar sourceHeight = source != null ? source.height : 0;\n\t\t\n\t\tvar targetX = target != null ? target.x : pe.x;\n\t\tvar targetY = target != null ? target.y : pe.y;\n\t\tvar targetWidth = target != null ? target.width : 0;\n\t\tvar targetHeight = target != null ? target.height : 0;\n\n\t\tvar scaledSourceBuffer = state.view.scale * mxEdgeStyle.getJettySize(state, source, target, points, true);\n\t\tvar scaledTargetBuffer = state.view.scale * mxEdgeStyle.getJettySize(state, source, target, points, false);\n\t\t\n\t\t// Workaround for loop routing within buffer zone\n\t\tif (source != null && target == source)\n\t\t{\n\t\t\tscaledTargetBuffer = Math.max(scaledSourceBuffer, scaledTargetBuffer);\n\t\t\tscaledSourceBuffer = scaledTargetBuffer;\n\t\t}\n\t\t\n\t\tvar totalBuffer = scaledTargetBuffer + scaledSourceBuffer;\n\t\tvar tooShort = false;\n\t\t\n\t\t// Checks minimum distance for fixed points and falls back to segment connector\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tvar dx = pe.x - p0.x;\n\t\t\tvar dy = pe.y - p0.y;\n\t\t\t\n\t\t\ttooShort = dx * dx + dy * dy < totalBuffer * totalBuffer;\n\t\t}\n\n\t\tif (tooShort || (mxEdgeStyle.orthPointsFallback && (points != null &&\n\t\t\tpoints.length > 0)) || sourceEdge || targetEdge)\n\t\t{\n\t\t\tmxEdgeStyle.SegmentConnector(state, source, target, points, result);\n\t\t\t\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine the side(s) of the source and target vertices\n\t\t// that the edge may connect to\n\t\t// portConstraint [source, target]\n\t\tvar portConstraint = [mxConstants.DIRECTION_MASK_ALL, mxConstants.DIRECTION_MASK_ALL];\n\t\tvar rotation = 0;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tportConstraint[0] = mxUtils.getPortConstraints(source, state, true, \n\t\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(source.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(sourceX, sourceY, sourceWidth, sourceHeight), rotation);\n\t\t\t\tsourceX = newRect.x; \n\t\t\t\tsourceY = newRect.y;\n\t\t\t\tsourceWidth = newRect.width;\n\t\t\t\tsourceHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\tif (target != null)\n\t\t{\n\t\t\tportConstraint[1] = mxUtils.getPortConstraints(target, state, false,\n\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(target.style, mxConstants.STYLE_ROTATION, 0);\n\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(targetX, targetY, targetWidth, targetHeight), rotation);\n\t\t\t\ttargetX = newRect.x;\n\t\t\t\ttargetY = newRect.y;\n\t\t\t\ttargetWidth = newRect.width;\n\t\t\t\ttargetHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\t// Avoids floating point number errors\n\t\tsourceX = Math.round(sourceX * 10) / 10;\n\t\tsourceY = Math.round(sourceY * 10) / 10;\n\t\tsourceWidth = Math.round(sourceWidth * 10) / 10;\n\t\tsourceHeight = Math.round(sourceHeight * 10) / 10;\n\t\t\n\t\ttargetX = Math.round(targetX * 10) / 10;\n\t\ttargetY = Math.round(targetY * 10) / 10;\n\t\ttargetWidth = Math.round(targetWidth * 10) / 10;\n\t\ttargetHeight = Math.round(targetHeight * 10) / 10;\n\t\t\n\t\tvar dir = [0, 0];\n\n\t\t// Work out which faces of the vertices present against each other\n\t\t// in a way that would allow a 3-segment connection if port constraints\n\t\t// permitted.\n\t\t// geo -> [source, target] [x, y, width, height]\n\t\tvar geo = [ [sourceX, sourceY, sourceWidth, sourceHeight] ,\n\t\t            [targetX, targetY, targetWidth, targetHeight] ];\n\t\tvar buffer = [scaledSourceBuffer, scaledTargetBuffer];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tmxEdgeStyle.limits[i][1] = geo[i][0] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][2] = geo[i][1] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][4] = geo[i][0] + geo[i][2] + buffer[i];\n\t\t\tmxEdgeStyle.limits[i][8] = geo[i][1] + geo[i][3] + buffer[i];\n\t\t}\n\t\t\n\t\t// Work out which quad the target is in\n\t\tvar sourceCenX = geo[0][0] + geo[0][2] / 2.0;\n\t\tvar sourceCenY = geo[0][1] + geo[0][3] / 2.0;\n\t\tvar targetCenX = geo[1][0] + geo[1][2] / 2.0;\n\t\tvar targetCenY = geo[1][1] + geo[1][3] / 2.0;\n\t\t\n\t\tvar dx = sourceCenX - targetCenX;\n\t\tvar dy = sourceCenY - targetCenY;\n\n\t\tvar quad = 0;\n\n\t\tif (dx < 0)\n\t\t{\n\t\t\tif (dy < 0)\n\t\t\t{\n\t\t\t\tquad = 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (dy <= 0)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\t// Special case on x = 0 and negative y\n\t\t\t\tif (dx == 0)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for connection constraints\n\t\tvar currentTerm = null;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tcurrentTerm = p0;\n\t\t}\n\n\t\tvar constraint = [ [0.5, 0.5] , [0.5, 0.5] ];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (currentTerm != null)\n\t\t\t{\n\t\t\t\tconstraint[i][0] = (currentTerm.x - geo[i][0]) / geo[i][2];\n\t\t\t\t\n\t\t\t\tif (Math.abs(currentTerm.x - geo[i][0]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.x - geo[i][0] - geo[i][2]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t}\n\n\t\t\t\tconstraint[i][1] = (currentTerm.y - geo[i][1]) / geo[i][3];\n\n\t\t\t\tif (Math.abs(currentTerm.y - geo[i][1]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.y - geo[i][1] - geo[i][3]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentTerm = null;\n\t\t\t\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tcurrentTerm = pe;\n\t\t\t}\n\t\t}\n\n\t\tvar sourceTopDist = geo[0][1] - (geo[1][1] + geo[1][3]);\n\t\tvar sourceLeftDist = geo[0][0] - (geo[1][0] + geo[1][2]);\n\t\tvar sourceBottomDist = geo[1][1] - (geo[0][1] + geo[0][3]);\n\t\tvar sourceRightDist = geo[1][0] - (geo[0][0] + geo[0][2]);\n\n\t\tmxEdgeStyle.vertexSeperations[1] = Math.max(sourceLeftDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[2] = Math.max(sourceTopDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[4] = Math.max(sourceBottomDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[3] = Math.max(sourceRightDist - totalBuffer, 0);\n\t\t\t\t\n\t\t//==============================================================\n\t\t// Start of source and target direction determination\n\n\t\t// Work through the preferred orientations by relative positioning\n\t\t// of the vertices and list them in preferred and available order\n\t\t\n\t\tvar dirPref = [];\n\t\tvar horPref = [];\n\t\tvar vertPref = [];\n\n\t\thorPref[0] = (sourceLeftDist >= sourceRightDist) ? mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t: mxConstants.DIRECTION_MASK_EAST;\n\t\tvertPref[0] = (sourceTopDist >= sourceBottomDist) ? mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t: mxConstants.DIRECTION_MASK_SOUTH;\n\n\t\thorPref[1] = mxUtils.reversePortConstraints(horPref[0]);\n\t\tvertPref[1] = mxUtils.reversePortConstraints(vertPref[0]);\n\t\t\n\t\tvar preferredHorizDist = sourceLeftDist >= sourceRightDist ? sourceLeftDist\n\t\t\t\t: sourceRightDist;\n\t\tvar preferredVertDist = sourceTopDist >= sourceBottomDist ? sourceTopDist\n\t\t\t\t: sourceBottomDist;\n\n\t\tvar prefOrdering = [ [0, 0] , [0, 0] ];\n\t\tvar preferredOrderSet = false;\n\n\t\t// If the preferred port isn't available, switch it\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((horPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\thorPref[i] = mxUtils.reversePortConstraints(horPref[i]);\n\t\t\t}\n\n\t\t\tif ((vertPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tvertPref[i] = mxUtils\n\t\t\t\t\t\t.reversePortConstraints(vertPref[i]);\n\t\t\t}\n\n\t\t\tprefOrdering[i][0] = vertPref[i];\n\t\t\tprefOrdering[i][1] = horPref[i];\n\t\t}\n\n\t\tif (preferredVertDist > 0\n\t\t\t\t&& preferredHorizDist > 0)\n\t\t{\n\t\t\t// Possibility of two segment edge connection\n\t\t\tif (((horPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((vertPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t\telse if (((vertPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((horPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (preferredVertDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\tpreferredOrderSet = true;\n\n\t\t}\n\t\t\n\t\tif (preferredHorizDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\tpreferredOrderSet = true;\n\t\t}\n\n\t\t// The source and target prefs are now an ordered list of\n\t\t// the preferred port selections\n\t\t// It the list can contain gaps, compact it\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((prefOrdering[i][0] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tprefOrdering[i][0] = prefOrdering[i][1];\n\t\t\t}\n\n\t\t\tdirPref[i] = prefOrdering[i][0] & portConstraint[i];\n\t\t\tdirPref[i] |= (prefOrdering[i][1] & portConstraint[i]) << 8;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][i] & portConstraint[i]) << 16;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][1 - i] & portConstraint[i]) << 24;\n\n\t\t\tif ((dirPref[i] & 0xF) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = dirPref[i] << 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF00) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xF) | dirPref[i] >> 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF0000) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xFFFF)\n\t\t\t\t\t\t| ((dirPref[i] & 0xF000000) >> 8);\n\t\t\t}\n\n\t\t\tdir[i] = dirPref[i] & 0xF;\n\n\t\t\tif (portConstraint[i] == mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_EAST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_SOUTH)\n\t\t\t{\n\t\t\t\tdir[i] = portConstraint[i];\n\t\t\t}\n\t\t}\n\n\t\t//==============================================================\n\t\t// End of source and target direction determination\n\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\t\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar routePattern = mxEdgeStyle.routePatterns[sourceIndex - 1][targetIndex - 1];\n\n\t\tmxEdgeStyle.wayPoints1[0][0] = geo[0][0];\n\t\tmxEdgeStyle.wayPoints1[0][1] = geo[0][1];\n\n\t\tswitch (dir[0])\n\t\t{\n\t\t\tcase mxConstants.DIRECTION_MASK_WEST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] -= scaledSourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_SOUTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += geo[0][3] + scaledSourceBuffer;\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_EAST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += geo[0][2] + scaledSourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_NORTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] -= scaledSourceBuffer;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar currentIndex = 0;\n\n\t\t// Orientation, 0 horizontal, 1 vertical\n\t\tvar lastOrientation = (dir[0] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t: 1;\n\t\tvar initialOrientation = lastOrientation;\n\t\tvar currentOrientation = 0;\n\n\t\tfor (var i = 0; i < routePattern.length; i++)\n\t\t{\n\t\t\tvar nextDirection = routePattern[i] & 0xF;\n\n\t\t\t// Rotate the index of this direction by the quad\n\t\t\t// to get the real direction\n\t\t\tvar directionIndex = nextDirection == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t\t: nextDirection;\n\n\t\t\tdirectionIndex += quad;\n\n\t\t\tif (directionIndex > 4)\n\t\t\t{\n\t\t\t\tdirectionIndex -= 4;\n\t\t\t}\n\n\t\t\tvar direction = mxEdgeStyle.dirVectors[directionIndex - 1];\n\n\t\t\tcurrentOrientation = (directionIndex % 2 > 0) ? 0 : 1;\n\t\t\t// Only update the current index if the point moved\n\t\t\t// in the direction of the current segment move,\n\t\t\t// otherwise the same point is moved until there is \n\t\t\t// a segment direction change\n\t\t\tif (currentOrientation != lastOrientation)\n\t\t\t{\n\t\t\t\tcurrentIndex++;\n\t\t\t\t// Copy the previous way point into the new one\n\t\t\t\t// We can't base the new position on index - 1\n\t\t\t\t// because sometime elbows turn out not to exist,\n\t\t\t\t// then we'd have to rewind.\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] = mxEdgeStyle.wayPoints1[currentIndex - 1][0];\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] = mxEdgeStyle.wayPoints1[currentIndex - 1][1];\n\t\t\t}\n\n\t\t\tvar tar = (routePattern[i] & mxEdgeStyle.TARGET_MASK) > 0;\n\t\t\tvar sou = (routePattern[i] & mxEdgeStyle.SOURCE_MASK) > 0;\n\t\t\tvar side = (routePattern[i] & mxEdgeStyle.SIDE_MASK) >> 5;\n\t\t\tside = side << quad;\n\n\t\t\tif (side > 0xF)\n\t\t\t{\n\t\t\t\tside = side >> 4;\n\t\t\t}\n\n\t\t\tvar center = (routePattern[i] & mxEdgeStyle.CENTER_MASK) > 0;\n\n\t\t\tif ((sou || tar) && side < 9)\n\t\t\t{\n\t\t\t\tvar limit = 0;\n\t\t\t\tvar souTar = sou ? 0 : 1;\n\n\t\t\t\tif (center && currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][0] + constraint[souTar][0] * geo[souTar][2];\n\t\t\t\t}\n\t\t\t\telse if (center)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][1] + constraint[souTar][1] * geo[souTar][3];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlimit = mxEdgeStyle.limits[souTar][side];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tvar lastX = mxEdgeStyle.wayPoints1[currentIndex][0];\n\t\t\t\t\tvar deltaX = (limit - lastX) * direction[0];\n\n\t\t\t\t\tif (deltaX > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t\t\t* deltaX;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar lastY = mxEdgeStyle.wayPoints1[currentIndex][1];\n\t\t\t\t\tvar deltaY = (limit - lastY) * direction[1];\n\n\t\t\t\t\tif (deltaY > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t\t\t* deltaY;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (center)\n\t\t\t{\n\t\t\t\t// Which center we're travelling to depend on the current direction\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t}\n\n\t\t\tif (currentIndex > 0\n\t\t\t\t\t&& mxEdgeStyle.wayPoints1[currentIndex][currentOrientation] == mxEdgeStyle.wayPoints1[currentIndex - 1][currentOrientation])\n\t\t\t{\n\t\t\t\tcurrentIndex--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlastOrientation = currentOrientation;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= currentIndex; i++)\n\t\t{\n\t\t\tif (i == currentIndex)\n\t\t\t{\n\t\t\t\t// Last point can cause last segment to be in\n\t\t\t\t// same direction as jetty/approach. If so,\n\t\t\t\t// check the number of points is consistent\n\t\t\t\t// with the relative orientation of source and target\n\t\t\t\t// jx. Same orientation requires an even\n\t\t\t\t// number of turns (points), different requires\n\t\t\t\t// odd.\n\t\t\t\tvar targetOrientation = (dir[1] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t\t\t: 1;\n\t\t\t\tvar sameOrient = targetOrientation == initialOrientation ? 0 : 1;\n\n\t\t\t\t// (currentIndex + 1) % 2 is 0 for even number of points,\n\t\t\t\t// 1 for odd\n\t\t\t\tif (sameOrient != (currentIndex + 1) % 2)\n\t\t\t\t{\n\t\t\t\t\t// The last point isn't required\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(Math.round(mxEdgeStyle.wayPoints1[i][0]), Math.round(mxEdgeStyle.wayPoints1[i][1])));\n\t\t}\n\t\t\n\t\t// Removes duplicates\n\t\tvar index = 1;\n\t\t\n\t\twhile (index < result.length)\n\t\t{\n\t\t\tif (result[index - 1] == null || result[index] == null ||\n\t\t\t\tresult[index - 1].x != result[index].x ||\n\t\t\t\tresult[index - 1].y != result[index].y)\n\t\t\t{\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.splice(index, 1);\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetRoutePattern: function(dir, quad, dx, dy)\n\t{\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar result = routePatterns[sourceIndex - 1][targetIndex - 1];\n\n\t\tif (dx == 0 || dy == 0)\n\t\t{\n\t\t\tif (inlineRoutePatterns[sourceIndex - 1][targetIndex - 1] != null)\n\t\t\t{\n\t\t\t\tresult = inlineRoutePatterns[sourceIndex - 1][targetIndex - 1];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\n__mxOutput.mxEdgeStyle = typeof mxEdgeStyle !== 'undefined' ? mxEdgeStyle : undefined;\n"]}