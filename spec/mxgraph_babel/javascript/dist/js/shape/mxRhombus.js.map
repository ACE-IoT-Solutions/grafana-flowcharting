{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/shape/mxRhombus.js"],"names":["mxRhombus","bounds","fill","stroke","strokewidth","mxShape","call","mxUtils","extend","prototype","isRoundable","paintVertexShape","c","x","y","w","h","hw","hh","arcSize","getValue","style","mxConstants","STYLE_ARCSIZE","LINE_ARCSIZE","begin","addPoints","mxPoint","isRounded","fillAndStroke","__mxOutput","undefined"],"mappings":";;;;;AAAA;;;;AAIA;;;;;;;;;;;;;;;;;;;;AAoBA,WAASA,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,MAAjC,EAAyCC,WAAzC,EACA;AACCC,YAAQC,IAAR,CAAa,IAAb;AACA,SAAKL,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAoBA,eAAe,IAAhB,GAAwBA,WAAxB,GAAsC,CAAzD;AACA,G;;;AAAA;;AAED;;;AAGAG,cAAQC,MAAR,CAAeR,SAAf,EAA0BK,OAA1B;;AAEA;;;;;AAKAL,gBAAUS,SAAV,CAAoBC,WAApB,GAAkC,YAClC;AACC,eAAO,IAAP;AACA,OAHD;;AAKA;;;;;AAKAV,gBAAUS,SAAV,CAAoBE,gBAApB,GAAuC,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EACvC;AACC,YAAIC,KAAKF,IAAI,CAAb;AACA,YAAIG,KAAKF,IAAI,CAAb;;AAEA,YAAIG,UAAUZ,QAAQa,QAAR,CAAiB,KAAKC,KAAtB,EAA6BC,YAAYC,aAAzC,EAAwDD,YAAYE,YAApE,IAAoF,CAAlG;AACAZ,UAAEa,KAAF;AACA,aAAKC,SAAL,CAAed,CAAf,EAAkB,CAAC,IAAIe,OAAJ,CAAYd,IAAII,EAAhB,EAAoBH,CAApB,CAAD,EAAyB,IAAIa,OAAJ,CAAYd,IAAIE,CAAhB,EAAmBD,IAAII,EAAvB,CAAzB,EAAqD,IAAIS,OAAJ,CAAYd,IAAII,EAAhB,EAAoBH,IAAIE,CAAxB,CAArD,EACb,IAAIW,OAAJ,CAAYd,CAAZ,EAAeC,IAAII,EAAnB,CADa,CAAlB,EAC8B,KAAKU,SADnC,EAC8CT,OAD9C,EACuD,IADvD;AAEAP,UAAEiB,aAAF;AACA,OAVD;;AAYAC,iBAAW9B,SAAX,GAAuB,OAAOA,SAAP,KAAqB,WAArB,GAAmCA,SAAnC,GAA+C+B,SAAtE","file":"mxRhombus.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRhombus\n *\n * Extends <mxShape> to implement a rhombus (aka diamond) shape.\n * This shape is registered under <mxConstants.SHAPE_RHOMBUS>\n * in <mxCellRenderer>.\n * \n * Constructor: mxRhombus\n *\n * Constructs a new rhombus shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxRhombus(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxRhombus, mxShape);\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxRhombus.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic painting implementation.\n */\nmxRhombus.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar hw = w / 2;\n\tvar hh = h / 2;\n\t\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tc.begin();\n\tthis.addPoints(c, [new mxPoint(x + hw, y), new mxPoint(x + w, y + hh), new mxPoint(x + hw, y + h),\n\t     new mxPoint(x, y + hh)], this.isRounded, arcSize, true);\n\tc.fillAndStroke();\n};\n\n__mxOutput.mxRhombus = typeof mxRhombus !== 'undefined' ? mxRhombus : undefined;\n"]}