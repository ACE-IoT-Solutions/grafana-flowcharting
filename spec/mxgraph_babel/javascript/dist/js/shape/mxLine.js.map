{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/shape/mxLine.js"],"names":["mxLine","bounds","stroke","strokewidth","mxShape","call","mxUtils","extend","prototype","paintVertexShape","c","x","y","w","h","mid","begin","moveTo","lineTo","__mxOutput","undefined"],"mappings":";;;;;AAAA;;;;AAIA;;;;;;;;;;;;;;;;;;;;AAoBA,WAASA,MAAT,CAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,WAAhC,EACA;AACCC,YAAQC,IAAR,CAAa,IAAb;AACA,SAAKJ,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAoBA,eAAe,IAAhB,GAAwBA,WAAxB,GAAsC,CAAzD;AACA,G;;;AAAA;;AAED;;;AAGAG,cAAQC,MAAR,CAAeP,MAAf,EAAuBI,OAAvB;;AAEA;;;;;AAKAJ,aAAOQ,SAAP,CAAiBC,gBAAjB,GAAoC,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EACpC;AACC,YAAIC,MAAMH,IAAIE,IAAI,CAAlB;;AAEAJ,UAAEM,KAAF;AACAN,UAAEO,MAAF,CAASN,CAAT,EAAYI,GAAZ;AACAL,UAAEQ,MAAF,CAASP,IAAIE,CAAb,EAAgBE,GAAhB;AACAL,UAAER,MAAF;AACA,OARD;;AAUAiB,iBAAWnB,MAAX,GAAoB,OAAOA,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCoB,SAA7D","file":"mxLine.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLine\n *\n * Extends <mxShape> to implement a horizontal line shape.\n * This shape is registered under <mxConstants.SHAPE_LINE> in\n * <mxCellRenderer>.\n * \n * Constructor: mxLine\n *\n * Constructs a new line shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * stroke - String that defines the stroke color. Default is 'black'. This is\n * stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxLine(bounds, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxLine, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxLine.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar mid = y + h / 2;\n\n\tc.begin();\n\tc.moveTo(x, mid);\n\tc.lineTo(x + w, mid);\n\tc.stroke();\n};\n\n__mxOutput.mxLine = typeof mxLine !== 'undefined' ? mxLine : undefined;\n"]}