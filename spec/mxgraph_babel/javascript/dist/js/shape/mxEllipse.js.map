{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/shape/mxEllipse.js"],"names":["mxEllipse","bounds","fill","stroke","strokewidth","mxShape","call","mxUtils","extend","prototype","paintVertexShape","c","x","y","w","h","ellipse","fillAndStroke","__mxOutput","undefined"],"mappings":";;;;;AAAA;;;;AAIA;;;;;;;;;;;;;;;;;;;;AAoBA,WAASA,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,MAAjC,EAAyCC,WAAzC,EACA;AACCC,YAAQC,IAAR,CAAa,IAAb;AACA,SAAKL,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAoBA,eAAe,IAAhB,GAAwBA,WAAxB,GAAsC,CAAzD;AACA,G;;;AAAA;;AAED;;;AAGAG,cAAQC,MAAR,CAAeR,SAAf,EAA0BK,OAA1B;;AAEA;;;;;AAKAL,gBAAUS,SAAV,CAAoBC,gBAApB,GAAuC,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EACvC;AACCJ,UAAEK,OAAF,CAAUJ,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB;AACAJ,UAAEM,aAAF;AACA,OAJD;;AAMAC,iBAAWlB,SAAX,GAAuB,OAAOA,SAAP,KAAqB,WAArB,GAAmCA,SAAnC,GAA+CmB,SAAtE","file":"mxEllipse.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEllipse\n *\n * Extends <mxShape> to implement an ellipse shape.\n * This shape is registered under <mxConstants.SHAPE_ELLIPSE>\n * in <mxCellRenderer>.\n * \n * Constructor: mxEllipse\n *\n * Constructs a new ellipse shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxEllipse(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxEllipse, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Paints the ellipse shape.\n */\nmxEllipse.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.ellipse(x, y, w, h);\n\tc.fillAndStroke();\n};\n\n__mxOutput.mxEllipse = typeof mxEllipse !== 'undefined' ? mxEllipse : undefined;\n"]}