{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/shape/mxImageShape.js"],"names":["mxImageShape","bounds","image","fill","stroke","strokewidth","mxShape","call","shadow","mxUtils","extend","mxRectangleShape","prototype","preserveImageAspect","getSvgScreenOffset","apply","state","arguments","gradient","style","getNumber","mxConstants","STYLE_IMAGE_ASPECT","flipH","getValue","flipV","isHtmlAllowed","createHtml","node","document","createElement","position","isRoundable","c","x","y","w","h","paintVertexShape","STYLE_IMAGE_BACKGROUND","STYLE_IMAGE_BORDER","setFillColor","setStrokeColor","rect","fillAndStroke","setShadow","paintBackground","redrawHtmlShape","left","Math","round","top","width","max","height","innerHTML","backgroundColor","borderColor","useVml","mxClient","IS_IE6","documentMode","rotation","img","VML_PREFIX","setAttribute","src","filter","opacity","nodeName","setPrefixedStyle","backgroundImage","appendChild","setTransparentBackgroundImage","__mxOutput","undefined"],"mappings":"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","file":"mxImageShape.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageShape\n *\n * Extends <mxShape> to implement an image shape. This shape is registered\n * under <mxConstants.SHAPE_IMAGE> in <mxCellRenderer>.\n * \n * Constructor: mxImageShape\n * \n * Constructs a new image shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * image - String that specifies the URL of the image. This is stored in\n * <image>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 0. This is stored in <strokewidth>.\n */\nfunction mxImageShape(bounds, image, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.image = image;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.shadow = false;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxImageShape, mxRectangleShape);\n\n/**\n * Variable: preserveImageAspect\n *\n * Switch to preserve image aspect. Default is true.\n */\nmxImageShape.prototype.preserveImageAspect = true;\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxImageShape.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: apply\n * \n * Overrides <mxShape.apply> to replace the fill and stroke colors with the\n * respective values from <mxConstants.STYLE_IMAGE_BACKGROUND> and\n * <mxConstants.STYLE_IMAGE_BORDER>.\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_IMAGE_BACKGROUND> => fill\n * - <mxConstants.STYLE_IMAGE_BORDER> => stroke\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxImageShape.prototype.apply = function(state)\n{\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tthis.fill = null;\n\tthis.stroke = null;\n\tthis.gradient = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.preserveImageAspect = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_ASPECT, 1) == 1;\n\t\t\n\t\t// Legacy support for imageFlipH/V\n\t\tthis.flipH = this.flipH || mxUtils.getValue(this.style, 'imageFlipH', 0) == 1;\n\t\tthis.flipV = this.flipV || mxUtils.getValue(this.style, 'imageFlipV', 0) == 1;\n\t}\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxImageShape.prototype.isHtmlAllowed = function()\n{\n\treturn !this.preserveImageAspect;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxImageShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\n\treturn node;\n};\n\n/**\n * Function: isRoundable\n * \n * Disables inherited roundable support.\n */\nmxImageShape.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn false;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic background painting implementation.\n */\nmxImageShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, null);\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (fill != null)\n\t\t{\n\t\t\t// Stroke rendering required for shadow\n\t\t\tc.setFillColor(fill);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.fillAndStroke();\n\t\t}\n\n\t\t// FlipH/V are implicit via mxShape.updateTransform\n\t\tc.image(x, y, w, h, this.image, this.preserveImageAspect, false, false);\n\t\t\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (stroke != null)\n\t\t{\n\t\t\tc.setShadow(false);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.stroke();\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxRectangleShape.prototype.paintBackground.apply(this, arguments);\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Overrides <mxShape.redraw> to preserve the aspect ratio of images.\n */\nmxImageShape.prototype.redrawHtmlShape = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = Math.max(0, Math.round(this.bounds.width)) + 'px';\n\tthis.node.style.height = Math.max(0, Math.round(this.bounds.height)) + 'px';\n\tthis.node.innerHTML = '';\n\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, '');\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, '');\n\t\tthis.node.style.backgroundColor = fill;\n\t\tthis.node.style.borderColor = stroke;\n\t\t\n\t\t// VML image supports PNG in IE6\n\t\tvar useVml = mxClient.IS_IE6 || ((document.documentMode == null || document.documentMode <= 8) && this.rotation != 0);\n\t\tvar img = document.createElement((useVml) ? mxClient.VML_PREFIX + ':image' : 'img');\n\t\timg.setAttribute('border', '0');\n\t\timg.style.position = 'absolute';\n\t\timg.src = this.image;\n\n\t\tvar filter = (this.opacity < 100) ? 'alpha(opacity=' + this.opacity + ')' : '';\n\t\tthis.node.style.filter = filter;\n\t\t\n\t\tif (this.flipH && this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2)';\n\t\t}\n\t\telse if (this.flipH)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(mirror=1)';\n\t\t}\n\t\telse if (this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)';\n\t\t}\n\n\t\tif (img.style.filter != filter)\n\t\t{\n\t\t\timg.style.filter = filter;\n\t\t}\n\n\t\tif (img.nodeName == 'image')\n\t\t{\n\t\t\timg.style.rotation = this.rotation;\n\t\t}\n\t\telse if (this.rotation != 0)\n\t\t{\n\t\t\t// LATER: Add flipV/H support\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', 'rotate(' + this.rotation + 'deg)');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', '');\n\t\t}\n\n\t\t// Known problem: IE clips top line of image for certain angles\n\t\timg.style.width = this.node.style.width;\n\t\timg.style.height = this.node.style.height;\n\t\t\n\t\tthis.node.style.backgroundImage = '';\n\t\tthis.node.appendChild(img);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(this.node);\n\t}\n};\n\n__mxOutput.mxImageShape = typeof mxImageShape !== 'undefined' ? mxImageShape : undefined;\n"]}