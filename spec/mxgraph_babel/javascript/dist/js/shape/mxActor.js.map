{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/shape/mxActor.js"],"names":["mxActor","bounds","fill","stroke","strokewidth","mxShape","call","mxUtils","extend","prototype","paintVertexShape","c","x","y","w","h","translate","begin","redrawPath","fillAndStroke","width","moveTo","curveTo","close","__mxOutput","undefined"],"mappings":";;;;;AAAA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,WAASA,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,WAAvC,EACA;AACCC,YAAQC,IAAR,CAAa,IAAb;AACA,SAAKL,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAoBA,eAAe,IAAhB,GAAwBA,WAAxB,GAAsC,CAAzD;AACA,G;;;AAAA;;AAED;;;AAGAG,cAAQC,MAAR,CAAeR,OAAf,EAAwBK,OAAxB;;AAEA;;;;;AAKAL,cAAQS,SAAR,CAAkBC,gBAAlB,GAAqC,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EACrC;AACCJ,UAAEK,SAAF,CAAYJ,CAAZ,EAAeC,CAAf;AACAF,UAAEM,KAAF;AACA,aAAKC,UAAL,CAAgBP,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4BC,CAA5B;AACAJ,UAAEQ,aAAF;AACA,OAND;;AAQA;;;;;AAKAnB,cAAQS,SAAR,CAAkBS,UAAlB,GAA+B,UAASP,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EAC/B;AACC,YAAIK,QAAQN,IAAE,CAAd;AACAH,UAAEU,MAAF,CAAS,CAAT,EAAYN,CAAZ;AACAJ,UAAEW,OAAF,CAAU,CAAV,EAAa,IAAIP,CAAJ,GAAQ,CAArB,EAAwB,CAAxB,EAA2B,IAAIA,CAAJ,GAAQ,CAAnC,EAAsCD,IAAI,CAA1C,EAA6C,IAAIC,CAAJ,GAAQ,CAArD;AACAJ,UAAEW,OAAF,CAAUR,IAAI,CAAJ,GAAQM,KAAlB,EAAyB,IAAIL,CAAJ,GAAQ,CAAjC,EAAoCD,IAAI,CAAJ,GAAQM,KAA5C,EAAmD,CAAnD,EAAsDN,IAAI,CAA1D,EAA6D,CAA7D;AACAH,UAAEW,OAAF,CAAUR,IAAI,CAAJ,GAAQM,KAAlB,EAAyB,CAAzB,EAA4BN,IAAI,CAAJ,GAAQM,KAApC,EAA2C,IAAIL,CAAJ,GAAQ,CAAnD,EAAsDD,IAAI,CAA1D,EAA6D,IAAIC,CAAJ,GAAQ,CAArE;AACAJ,UAAEW,OAAF,CAAUR,CAAV,EAAa,IAAIC,CAAJ,GAAQ,CAArB,EAAwBD,CAAxB,EAA2B,IAAIC,CAAJ,GAAQ,CAAnC,EAAsCD,CAAtC,EAAyCC,CAAzC;AACAJ,UAAEY,KAAF;AACA,OATD;;AAWAC,iBAAWxB,OAAX,GAAqB,OAAOA,OAAP,KAAmB,WAAnB,GAAiCA,OAAjC,GAA2CyB,SAAhE","file":"mxActor.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxActor\n *\n * Extends <mxShape> to implement an actor shape. If a custom shape with one\n * filled area is needed, then this shape's <redrawPath> should be overridden.\n * \n * Example:\n * \n * (code)\n * function SampleShape() { }\n * \n * SampleShape.prototype = new mxActor();\n * SampleShape.prototype.constructor = vsAseShape;\n * \n * mxCellRenderer.registerShape('sample', SampleShape);\n * SampleShape.prototype.redrawPath = function(path, x, y, w, h)\n * {\n *   path.moveTo(0, 0);\n *   path.lineTo(w, h);\n *   // ...\n *   path.close();\n * }\n * (end)\n * \n * This shape is registered under <mxConstants.SHAPE_ACTOR> in\n * <mxCellRenderer>.\n * \n * Constructor: mxActor\n *\n * Constructs a new actor shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxActor(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxActor, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxActor.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.translate(x, y);\n\tc.begin();\n\tthis.redrawPath(c, x, y, w, h);\n\tc.fillAndStroke();\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxActor.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar width = w/3;\n\tc.moveTo(0, h);\n\tc.curveTo(0, 3 * h / 5, 0, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w / 2 - width, 2 * h / 5, w / 2 - width, 0, w / 2, 0);\n\tc.curveTo(w / 2 + width, 0, w / 2 + width, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w, 2 * h / 5, w, 3 * h / 5, w, h);\n\tc.close();\n};\n\n__mxOutput.mxActor = typeof mxActor !== 'undefined' ? mxActor : undefined;\n"]}