{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/shape/mxShape.js"],"names":["mxShape","stencil","initStyles","prototype","dialect","scale","antiAlias","minSvgStrokeWidth","bounds","points","node","state","style","boundingBox","svgStrokeTolerance","pointerEvents","svgPointerEvents","shapePointerEvents","stencilPointerEvents","vmlScale","outline","visible","useSvgBoundingBox","init","container","create","appendChild","strokewidth","rotation","opacity","fillOpacity","strokeOpacity","flipH","flipV","isParseVml","isHtmlAllowed","getSvgScreenOffset","sw","Number","mxUtils","mod","Math","max","round","ownerSVGElement","createSvg","document","documentMode","mxClient","IS_VML","mxConstants","DIALECT_VML","createHtml","createVml","createElementNS","NS_SVG","createElement","VML_PREFIX","position","reconfigure","redraw","updateBoundsFromPoints","checkBounds","visibility","clear","nodeName","redrawHtmlShape","redrawShape","updateBoundingBox","lastChild","removeChild","cssText","cursor","innerHTML","pts","length","mxRectangle","x","y","i","add","getLabelBounds","rect","d","getValue","STYLE_DIRECTION","DIRECTION_EAST","DIRECTION_SOUTH","DIRECTION_NORTH","text","isPaintBoundsInverted","clone","tmp","width","height","m","getLabelMargins","STYLE_FLIPH","STYLE_FLIPV","getDirectedBounds","isNaN","isFinite","createVmlGroup","canvas","createCanvas","paint","root","insertAdjacentHTML","outerHTML","filter","addTransparentBackgroundFilter","destroyCanvas","createSvgCanvas","updateVmlContainer","createVmlCanvas","setStrokeWidth","setStrokeColor","stroke","isDashed","setDashed","setFillColor","setGradient","mxSvgCanvas2D","strokeTolerance","pointerEventsValue","blockImagePointerEvents","IS_FF","off","setAttribute","removeAttribute","minStrokeWidth","format","value","parseFloat","mxVmlCanvas2D","tagUrn","w","h","coordsize","s","translate","left","top","overflow","updateHtmlBounds","updateHtmlFilters","updateHtmlColors","f","isShadow","SHADOW_OFFSET_X","SHADOW_OFFSET_Y","VML_SHADOWCOLOR","fill","NONE","gradient","start","end","type","lookup","east","south","west","north","dir","direction","gradientDirection","color","borderColor","borderStyle","borderWidth","ceil","backgroundColor","backgroundImage","setTransparentBackgroundImage","compatMode","key","gradients","mxRefCount","releaseSvgGradients","oldGradients","c","strokeDrawn","apply","arguments","fillAndStroke","t","updateTransform","configureCanvas","bg","bb","createBoundingBox","DIALECT_SVG","createTransparentSvgRectangle","createRect","createTransparentFill","stroked","drawShape","push","mxPoint","paintEdgeShape","paintVertexShape","transform","dash","setAlpha","setFillAlpha","setStrokeAlpha","setShadow","STYLE_FIX_DASH","setDashPattern","b","getGradientBounds","rotate","getShapeRotation","paintBackground","STYLE_BACKGROUND_OUTLINE","paintForeground","getArcSize","r","STYLE_ABSOLUTE_ARCSIZE","min","STYLE_ARCSIZE","LINE_ARCSIZE","RECTANGLE_ROUNDING_FACTOR","paintGlassEffect","arc","size","begin","isRounded","moveTo","quadTo","lineTo","close","addPoints","rounded","arcSize","exclude","initialMove","pe","slice","p0","wp","splice","pt","dx","dy","indexOf","dist","sqrt","nx1","ny1","x1","y1","next","nx2","ny2","x2","y2","resetStyles","spacing","startSize","endSize","startArrow","endArrow","glass","STYLE_FILLCOLOR","STYLE_GRADIENTCOLOR","STYLE_GRADIENT_DIRECTION","STYLE_OPACITY","STYLE_FILL_OPACITY","STYLE_STROKE_OPACITY","STYLE_STROKECOLOR","getNumber","STYLE_STROKEWIDTH","STYLE_SPACING","STYLE_STARTSIZE","STYLE_ENDSIZE","STYLE_STARTARROW","STYLE_ENDARROW","STYLE_ROTATION","STYLE_SHADOW","STYLE_DASHED","STYLE_ROUNDED","STYLE_GLASS","setCursor","getCursor","isRoundable","getBBox","grow","e","bbox","augmentBoundingBox","rot","getBoundingBox","rotate90","getRotation","getTextRotation","STYLE_HORIZONTAL","mxText","verticalTextRotation","DIRECTION_WEST","imageBasePath","grads","parentNode","destroy","mxEvent","release","__mxOutput","undefined"],"mappings":"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","file":"mxShape.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxShape\n *\n * Base class for all shapes. A shape in mxGraph is a\n * separate implementation for SVG, VML and HTML. Which\n * implementation to use is controlled by the <dialect>\n * property which is assigned from within the <mxCellRenderer>\n * when the shape is created. The dialect must be assigned\n * for a shape, and it does normally depend on the browser and\n * the confiuration of the graph (see <mxGraph> rendering hint).\n *\n * For each supported shape in SVG and VML, a corresponding\n * shape exists in mxGraph, namely for text, image, rectangle,\n * rhombus, ellipse and polyline. The other shapes are a\n * combination of these shapes (eg. label and swimlane)\n * or they consist of one or more (filled) path objects\n * (eg. actor and cylinder). The HTML implementation is\n * optional but may be required for a HTML-only view of\n * the graph.\n *\n * Custom Shapes:\n *\n * To extend from this class, the basic code looks as follows.\n * In the special case where the custom shape consists only of\n * one filled region or one filled region and an additional stroke\n * the <mxActor> and <mxCylinder> should be subclassed,\n * respectively.\n *\n * (code)\n * function CustomShape() { }\n * \n * CustomShape.prototype = new mxShape();\n * CustomShape.prototype.constructor = CustomShape; \n * (end)\n *\n * To register a custom shape in an existing graph instance,\n * one must register the shape under a new name in the graph's\n * cell renderer as follows:\n *\n * (code)\n * mxCellRenderer.registerShape('customShape', CustomShape);\n * (end)\n *\n * The second argument is the name of the constructor.\n *\n * In order to use the shape you can refer to the given name above\n * in a stylesheet. For example, to change the shape for the default\n * vertex style, the following code is used:\n *\n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = 'customShape';\n * (end)\n * \n * Constructor: mxShape\n *\n * Constructs a new shape.\n */\nfunction mxShape(stencil)\n{\n\tthis.stencil = stencil;\n\tthis.initStyles();\n};\n\n/**\n * Variable: dialect\n *\n * Holds the dialect in which the shape is to be painted.\n * This can be one of the DIALECT constants in <mxConstants>.\n */\nmxShape.prototype.dialect = null;\n\n/**\n * Variable: scale\n *\n * Holds the scale in which the shape is being painted.\n */\nmxShape.prototype.scale = 1;\n\n/**\n * Variable: antiAlias\n * \n * Rendering hint for configuring the canvas.\n */\nmxShape.prototype.antiAlias = true;\n\n/**\n * Variable: minSvgStrokeWidth\n * \n * Minimum stroke width for SVG output.\n */\nmxShape.prototype.minSvgStrokeWidth = 1;\n\n/**\n * Variable: bounds\n *\n * Holds the <mxRectangle> that specifies the bounds of this shape.\n */\nmxShape.prototype.bounds = null;\n\n/**\n * Variable: points\n *\n * Holds the array of <mxPoints> that specify the points of this shape.\n */\nmxShape.prototype.points = null;\n\n/**\n * Variable: node\n *\n * Holds the outermost DOM node that represents this shape.\n */\nmxShape.prototype.node = null;\n \n/**\n * Variable: state\n * \n * Optional reference to the corresponding <mxCellState>.\n */\nmxShape.prototype.state = null;\n\n/**\n * Variable: style\n *\n * Optional reference to the style of the corresponding <mxCellState>.\n */\nmxShape.prototype.style = null;\n\n/**\n * Variable: boundingBox\n *\n * Contains the bounding box of the shape, that is, the smallest rectangle\n * that includes all pixels of the shape.\n */\nmxShape.prototype.boundingBox = null;\n\n/**\n * Variable: stencil\n *\n * Holds the <mxStencil> that defines the shape.\n */\nmxShape.prototype.stencil = null;\n\n/**\n * Variable: svgStrokeTolerance\n *\n * Event-tolerance for SVG strokes (in px). Default is 8. This is only passed\n * to the canvas in <createSvgCanvas> if <pointerEvents> is true.\n */\nmxShape.prototype.svgStrokeTolerance = 8;\n\n/**\n * Variable: pointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.pointerEvents = true;\n\n/**\n * Variable: svgPointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.svgPointerEvents = 'all';\n\n/**\n * Variable: shapePointerEvents\n * \n * Specifies if pointer events outside of shape should be handled. Default\n * is false.\n */\nmxShape.prototype.shapePointerEvents = false;\n\n/**\n * Variable: stencilPointerEvents\n * \n * Specifies if pointer events outside of stencils should be handled. Default\n * is false. Set this to true for backwards compatibility with the 1.x branch.\n */\nmxShape.prototype.stencilPointerEvents = false;\n\n/**\n * Variable: vmlScale\n * \n * Scale for improving the precision of VML rendering. Default is 1.\n */\nmxShape.prototype.vmlScale = 1;\n\n/**\n * Variable: outline\n * \n * Specifies if the shape should be drawn as an outline. This disables all\n * fill colors and can be used to disable other drawing states that should\n * not be painted for outlines. Default is false. This should be set before\n * calling <apply>.\n */\nmxShape.prototype.outline = false;\n\n/**\n * Variable: visible\n * \n * Specifies if the shape is visible. Default is true.\n */\nmxShape.prototype.visible = true;\n\n/**\n * Variable: useSvgBoundingBox\n * \n * Allows to use the SVG bounding box in SVG. Default is false for performance\n * reasons.\n */\nmxShape.prototype.useSvgBoundingBox = false;\n\n/**\n * Function: init\n *\n * Initializes the shape by creaing the DOM node using <create>\n * and adding it into the given container.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.init = function(container)\n{\n\tif (this.node == null)\n\t{\n\t\tthis.node = this.create(container);\n\t\t\n\t\tif (container != null)\n\t\t{\n\t\t\tcontainer.appendChild(this.node);\n\t\t}\n\t}\n};\n\n/**\n * Function: initStyles\n *\n * Sets the styles to their default values.\n */\nmxShape.prototype.initStyles = function(container)\n{\n\tthis.strokewidth = 1;\n\tthis.rotation = 0;\n\tthis.opacity = 100;\n\tthis.fillOpacity = 100;\n\tthis.strokeOpacity = 100;\n\tthis.flipH = false;\n\tthis.flipV = false;\n};\n\n/**\n * Function: isParseVml\n * \n * Specifies if any VML should be added via insertAdjacentHtml to the DOM. This\n * is only needed in IE8 and only if the shape contains VML markup. This method\n * returns true.\n */\nmxShape.prototype.isParseVml = function()\n{\n\treturn true;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxShape.prototype.isHtmlAllowed = function()\n{\n\treturn false;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Returns 0, or 0.5 if <strokewidth> % 2 == 1.\n */\nmxShape.prototype.getSvgScreenOffset = function()\n{\n\tvar sw = this.stencil && this.stencil.strokewidth != 'inherit' ? Number(this.stencil.strokewidth) : this.strokewidth;\n\t\n\treturn (mxUtils.mod(Math.max(1, Math.round(sw * this.scale)), 2) == 1) ? 0.5 : 0;\n};\n\n/**\n * Function: create\n *\n * Creates and returns the DOM node(s) for the shape in\n * the given container. This implementation invokes\n * <createSvg>, <createHtml> or <createVml> depending\n * on the <dialect> and style settings.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.create = function(container)\n{\n\tvar node = null;\n\t\n\tif (container != null && container.ownerSVGElement != null)\n\t{\n\t\tnode = this.createSvg(container);\n\t}\n\telse if (document.documentMode == 8 || !mxClient.IS_VML ||\n\t\t(this.dialect != mxConstants.DIALECT_VML && this.isHtmlAllowed()))\n\t{\n\t\tnode = this.createHtml(container);\n\t}\n\telse\n\t{\n\t\tnode = this.createVml(container);\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: createSvg\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.createSvg = function()\n{\n\treturn document.createElementNS(mxConstants.NS_SVG, 'g');\n};\n\n/**\n * Function: createVml\n *\n * Creates and returns the VML node to represent this shape.\n */\nmxShape.prototype.createVml = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: reconfigure\n *\n * Reconfigures this shape. This will update the colors etc in\n * addition to the bounds or points.\n */\nmxShape.prototype.reconfigure = function()\n{\n\tthis.redraw();\n};\n\n/**\n * Function: redraw\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.redraw = function()\n{\n\tthis.updateBoundsFromPoints();\n\t\n\tif (this.visible && this.checkBounds())\n\t{\n\t\tthis.node.style.visibility = 'visible';\n\t\tthis.clear();\n\t\t\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tthis.redrawHtmlShape();\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tthis.redrawShape();\n\t\t}\n\n\t\tthis.updateBoundingBox();\n\t}\n\telse\n\t{\n\t\tthis.node.style.visibility = 'hidden';\n\t\tthis.boundingBox = null;\n\t}\n};\n\n/**\n * Function: clear\n * \n * Removes all child nodes and resets all CSS.\n */\nmxShape.prototype.clear = function()\n{\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\twhile (this.node.lastChild != null)\n\t\t{\n\t\t\tthis.node.removeChild(this.node.lastChild);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.node.style.cssText = 'position:absolute;' + ((this.cursor != null) ?\n\t\t\t('cursor:' + this.cursor + ';') : '');\n\t\tthis.node.innerHTML = '';\n\t}\n};\n\n/**\n * Function: updateBoundsFromPoints\n * \n * Updates the bounds based on the points.\n */\nmxShape.prototype.updateBoundsFromPoints = function()\n{\n\tvar pts = this.points;\n\t\n\tif (pts != null && pts.length > 0 && pts[0] != null)\n\t{\n\t\tthis.bounds = new mxRectangle(Number(pts[0].x), Number(pts[0].y), 1, 1);\n\t\t\n\t\tfor (var i = 1; i < this.points.length; i++)\n\t\t{\n\t\t\tif (pts[i] != null)\n\t\t\t{\n\t\t\t\tthis.bounds.add(new mxRectangle(Number(pts[i].x), Number(pts[i].y), 1, 1));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the <mxRectangle> for the label bounds of this shape, based on the\n * given scaled and translated bounds of the shape. This method should not\n * change the rectangle in-place. This implementation returns the given rect.\n */\nmxShape.prototype.getLabelBounds = function(rect)\n{\n\tvar d = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\tvar bounds = rect;\n\t\n\t// Normalizes argument for getLabelMargins hook\n\tif (d != mxConstants.DIRECTION_SOUTH && d != mxConstants.DIRECTION_NORTH &&\n\t\tthis.state != null && this.state.text != null &&\n\t\tthis.state.text.isPaintBoundsInverted())\n\t{\n\t\tbounds = bounds.clone();\n\t\tvar tmp = bounds.width;\n\t\tbounds.width = bounds.height;\n\t\tbounds.height = tmp;\n\t}\n\t\t\n\tvar m = this.getLabelMargins(bounds);\n\t\n\tif (m != null)\n\t{\n\t\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, false) == '1';\n\t\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, false) == '1';\n\t\t\n\t\t// Handles special case for vertical labels\n\t\tif (this.state != null && this.state.text != null &&\n\t\t\tthis.state.text.isPaintBoundsInverted())\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.height;\n\t\t\tm.height = m.width;\n\t\t\tm.width = m.y;\n\t\t\tm.y = tmp;\n\n\t\t\ttmp = flipH;\n\t\t\tflipH = flipV;\n\t\t\tflipV = tmp;\n\t\t}\n\t\t\n\t\treturn mxUtils.getDirectedBounds(rect, m, this.style, flipH, flipV);\n\t}\n\t\n\treturn rect;\n};\n\n/**\n * Function: getLabelMargins\n * \n * Returns the scaled top, left, bottom and right margin to be used for\n * computing the label bounds as an <mxRectangle>, where the bottom and right\n * margin are defined in the width and height of the rectangle, respectively.\n */\nmxShape.prototype.getLabelMargins= function(rect)\n{\n\treturn null;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxShape.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height) &&\n\t\t\tthis.bounds.width > 0 && this.bounds.height > 0);\n};\n\n/**\n * Function: createVmlGroup\n *\n * Returns the temporary element used for rendering in IE8 standards mode.\n */\nmxShape.prototype.createVmlGroup = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\tnode.style.width = this.node.style.width;\n\tnode.style.height = this.node.style.height;\n\t\n\treturn node;\n};\n\n/**\n * Function: redrawShape\n *\n * Updates the SVG or VML shape.\n */\nmxShape.prototype.redrawShape = function()\n{\n\tvar canvas = this.createCanvas();\n\t\n\tif (canvas != null)\n\t{\n\t\t// Specifies if events should be handled\n\t\tcanvas.pointerEvents = this.pointerEvents;\n\t\n\t\tthis.paint(canvas);\n\t\n\t\tif (this.node != canvas.root)\n\t\t{\n\t\t\t// Forces parsing in IE8 standards mode - slow! avoid\n\t\t\tthis.node.insertAdjacentHTML('beforeend', canvas.root.outerHTML);\n\t\t}\n\t\n\t\tif (this.node.nodeName == 'DIV' && document.documentMode == 8)\n\t\t{\n\t\t\t// Makes DIV transparent to events for IE8 in IE8 standards\n\t\t\t// mode (Note: Does not work for IE9 in IE8 standards mode\n\t\t\t// and not for IE11 in enterprise mode)\n\t\t\tthis.node.style.filter = '';\n\t\t\t\n\t\t\t// Adds event transparency in IE8 standards\n\t\t\tmxUtils.addTransparentBackgroundFilter(this.node);\n\t\t}\n\t\t\n\t\tthis.destroyCanvas(canvas);\n\t}\n};\n\n/**\n * Function: createCanvas\n * \n * Creates a new canvas for drawing this shape. May return null.\n */\nmxShape.prototype.createCanvas = function()\n{\n\tvar canvas = null;\n\t\n\t// LATER: Check if reusing existing DOM nodes improves performance\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\tcanvas = this.createSvgCanvas();\n\t}\n\telse if (mxClient.IS_VML)\n\t{\n\t\tthis.updateVmlContainer();\n\t\tcanvas = this.createVmlCanvas();\n\t}\n\t\n\tif (canvas != null && this.outline)\n\t{\n\t\tcanvas.setStrokeWidth(this.strokewidth);\n\t\tcanvas.setStrokeColor(this.stroke);\n\t\t\n\t\tif (this.isDashed != null)\n\t\t{\n\t\t\tcanvas.setDashed(this.isDashed);\n\t\t}\n\t\t\n\t\tcanvas.setStrokeWidth = function() {};\n\t\tcanvas.setStrokeColor = function() {};\n\t\tcanvas.setFillColor = function() {};\n\t\tcanvas.setGradient = function() {};\n\t\tcanvas.setDashed = function() {};\n\t\tcanvas.text = function() {};\n\t}\n\n\treturn canvas;\n};\n\n/**\n * Function: createSvgCanvas\n * \n * Creates and returns an <mxSvgCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createSvgCanvas = function()\n{\n\tvar canvas = new mxSvgCanvas2D(this.node, false);\n\tcanvas.strokeTolerance = (this.pointerEvents) ? this.svgStrokeTolerance : 0;\n\tcanvas.pointerEventsValue = this.svgPointerEvents;\n\tcanvas.blockImagePointerEvents = mxClient.IS_FF;\n\tvar off = this.getSvgScreenOffset();\n\n\tif (off != 0)\n\t{\n\t\tthis.node.setAttribute('transform', 'translate(' + off + ',' + off + ')');\n\t}\n\telse\n\t{\n\t\tthis.node.removeAttribute('transform');\n\t}\n\n\tcanvas.minStrokeWidth = this.minSvgStrokeWidth;\n\t\n\tif (!this.antiAlias)\n\t{\n\t\t// Rounds all numbers in the SVG output to integers\n\t\tcanvas.format = function(value)\n\t\t{\n\t\t\treturn Math.round(parseFloat(value));\n\t\t};\n\t}\n\t\n\treturn canvas;\n};\n\n/**\n * Function: createVmlCanvas\n * \n * Creates and returns an <mxVmlCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createVmlCanvas = function()\n{\n\t// Workaround for VML rendering bug in IE8 standards mode\n\tvar node = (document.documentMode == 8 && this.isParseVml()) ? this.createVmlGroup() : this.node;\n\tvar canvas = new mxVmlCanvas2D(node, false);\n\t\n\tif (node.tagUrn != '')\n\t{\n\t\tvar w = Math.max(1, Math.round(this.bounds.width));\n\t\tvar h = Math.max(1, Math.round(this.bounds.height));\n\t\tnode.coordsize = (w * this.vmlScale) + ',' + (h * this.vmlScale);\n\t\tcanvas.scale(this.vmlScale);\n\t\tcanvas.vmlScale = this.vmlScale;\n\t}\n\n\t// Painting relative to top, left shape corner\n\tvar s = this.scale;\n\tcanvas.translate(-Math.round(this.bounds.x / s), -Math.round(this.bounds.y / s));\n\t\n\treturn canvas;\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Updates the bounds of the VML container.\n */\nmxShape.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tvar w = Math.max(1, Math.round(this.bounds.width));\n\tvar h = Math.max(1, Math.round(this.bounds.height));\n\tthis.node.style.width = w + 'px';\n\tthis.node.style.height = h + 'px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: redrawHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.redrawHtmlShape = function()\n{\n\t// LATER: Refactor methods\n\tthis.updateHtmlBounds(this.node);\n\tthis.updateHtmlFilters(this.node);\n\tthis.updateHtmlColors(this.node);\n};\n\n/**\n * Function: updateHtmlFilters\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlFilters = function(node)\n{\n\tvar f = '';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tf += 'alpha(opacity=' + (this.opacity) + ')';\n\t}\n\t\n\tif (this.isShadow)\n\t{\n\t\t// FIXME: Cannot implement shadow transparency with filter\n\t\tf += 'progid:DXImageTransform.Microsoft.dropShadow (' +\n\t\t\t'OffX=\\'' + Math.round(mxConstants.SHADOW_OFFSET_X * this.scale) + '\\', ' +\n\t\t\t'OffY=\\'' + Math.round(mxConstants.SHADOW_OFFSET_Y * this.scale) + '\\', ' +\n\t\t\t'Color=\\'' + mxConstants.VML_SHADOWCOLOR + '\\')';\n\t}\n\t\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar start = this.fill;\n\t\tvar end = this.gradient;\n\t\tvar type = '0';\n\t\t\n\t\tvar lookup = {east:0,south:1,west:2,north:3};\n\t\tvar dir = (this.direction != null) ? lookup[this.direction] : 0;\n\t\t\n\t\tif (this.gradientDirection != null)\n\t\t{\n\t\t\tdir = mxUtils.mod(dir + lookup[this.gradientDirection] - 1, 4);\n\t\t}\n\n\t\tif (dir == 1)\n\t\t{\n\t\t\ttype = '1';\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 2)\n\t\t{\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 3)\n\t\t{\n\t\t\ttype = '1';\n\t\t}\n\t\t\n\t\tf += 'progid:DXImageTransform.Microsoft.gradient(' +\n\t\t\t'startColorStr=\\'' + start + '\\', endColorStr=\\'' + end +\n\t\t\t'\\', gradientType=\\'' + type + '\\')';\n\t}\n\n\tnode.style.filter = f;\n};\n\n/**\n * Function: mixedModeHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlColors = function(node)\n{\n\tvar color = this.stroke;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.borderColor = color;\n\n\t\tif (this.isDashed)\n\t\t{\n\t\t\tnode.style.borderStyle = 'dashed';\n\t\t}\n\t\telse if (this.strokewidth > 0)\n\t\t{\n\t\t\tnode.style.borderStyle = 'solid';\n\t\t}\n\n\t\tnode.style.borderWidth = Math.max(1, Math.ceil(this.strokewidth * this.scale)) + 'px';\n\t}\n\telse\n\t{\n\t\tnode.style.borderWidth = '0px';\n\t}\n\n\tcolor = (this.outline) ? null : this.fill;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.backgroundColor = color;\n\t\tnode.style.backgroundImage = 'none';\n\t}\n\telse if (this.pointerEvents)\n\t{\n\t\t node.style.backgroundColor = 'transparent';\n\t}\n\telse if (document.documentMode == 8)\n\t{\n\t\tmxUtils.addTransparentBackgroundFilter(node);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(node);\n\t}\n};\n\n/**\n * Function: mixedModeHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlBounds = function(node)\n{\n\tvar sw = (document.documentMode >= 9) ? 0 : Math.ceil(this.strokewidth * this.scale);\n\tnode.style.borderWidth = Math.max(1, sw) + 'px';\n\tnode.style.overflow = 'hidden';\n\t\n\tnode.style.left = Math.round(this.bounds.x - sw / 2) + 'px';\n\tnode.style.top = Math.round(this.bounds.y - sw / 2) + 'px';\n\n\tif (document.compatMode == 'CSS1Compat')\n\t{\n\t\tsw = -sw;\n\t}\n\t\n\tnode.style.width = Math.round(Math.max(0, this.bounds.width + sw)) + 'px';\n\tnode.style.height = Math.round(Math.max(0, this.bounds.height + sw)) + 'px';\n};\n\n/**\n * Function: destroyCanvas\n * \n * Destroys the given canvas which was used for drawing. This implementation\n * increments the reference counts on all shared gradients used in the canvas.\n */\nmxShape.prototype.destroyCanvas = function(canvas)\n{\n\t// Manages reference counts\n\tif (canvas instanceof mxSvgCanvas2D)\n\t{\n\t\t// Increments ref counts\n\t\tfor (var key in canvas.gradients)\n\t\t{\n\t\t\tvar gradient = canvas.gradients[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) + 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.releaseSvgGradients(this.oldGradients);\n\t\tthis.oldGradients = canvas.gradients;\n\t}\n};\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxShape.prototype.paint = function(c)\n{\n\tvar strokeDrawn = false;\n\t\n\tif (c != null && this.outline)\n\t{\n\t\tvar stroke = c.stroke;\n\t\t\n\t\tc.stroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tstroke.apply(this, arguments);\n\t\t};\n\n\t\tvar fillAndStroke = c.fillAndStroke;\n\t\t\n\t\tc.fillAndStroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tfillAndStroke.apply(this, arguments);\n\t\t};\n\t}\n\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\tif (this.isPaintBoundsInverted())\n\t{\n\t\tvar t = (w - h) / 2;\n\t\tx += t;\n\t\ty -= t;\n\t\tvar tmp = w;\n\t\tw = h;\n\t\th = tmp;\n\t}\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\n\t// Adds background rectangle to capture events\n\tvar bg = null;\n\t\n\tif ((this.stencil == null && this.points == null && this.shapePointerEvents) ||\n\t\t(this.stencil != null && this.stencilPointerEvents))\n\t{\n\t\tvar bb = this.createBoundingBox();\n\t\t\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tbg = this.createTransparentSvgRectangle(bb.x, bb.y, bb.width, bb.height);\n\t\t\tthis.node.appendChild(bg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar rect = c.createRect('rect', bb.x / s, bb.y / s, bb.width / s, bb.height / s);\n\t\t\trect.appendChild(c.createTransparentFill());\n\t\t\trect.stroked = 'false';\n\t\t\tc.root.appendChild(rect);\n\t\t}\n\t}\n\n\tif (this.stencil != null)\n\t{\n\t\tthis.stencil.drawShape(c, this, x, y, w, h);\n\t}\n\telse\n\t{\n\t\t// Stencils have separate strokewidth\n\t\tc.setStrokeWidth(this.strokewidth);\n\t\t\n\t\tif (this.points != null)\n\t\t{\n\t\t\t// Paints edge shape\n\t\t\tvar pts = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t\t{\n\t\t\t\tif (this.points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tpts.push(new mxPoint(this.points[i].x / s, this.points[i].y / s));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.paintEdgeShape(c, pts);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Paints vertex shape\n\t\t\tthis.paintVertexShape(c, x, y, w, h);\n\t\t}\n\t}\n\t\n\tif (bg != null && c.state != null && c.state.transform != null)\n\t{\n\t\tbg.setAttribute('transform', c.state.transform);\n\t}\n\t\n\t// Draws highlight rectangle if no stroke was used\n\tif (c != null && this.outline && !strokeDrawn)\n\t{\n\t\tc.rect(x, y, w, h);\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxShape.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tvar dash = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tdash = this.style['dashPattern'];\t\t\n\t}\n\n\tc.setAlpha(this.opacity / 100);\n\tc.setFillAlpha(this.fillOpacity / 100);\n\tc.setStrokeAlpha(this.strokeOpacity / 100);\n\n\t// Sets alpha, colors and gradients\n\tif (this.isShadow != null)\n\t{\n\t\tc.setShadow(this.isShadow);\n\t}\n\t\n\t// Dash pattern\n\tif (this.isDashed != null)\n\t{\n\t\tc.setDashed(this.isDashed, (this.style != null) ?\n\t\t\tmxUtils.getValue(this.style, mxConstants.STYLE_FIX_DASH, false) == 1 : false);\n\t}\n\n\tif (dash != null)\n\t{\n\t\tc.setDashPattern(dash);\n\t}\n\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar b = this.getGradientBounds(c, x, y, w, h);\n\t\tc.setGradient(this.fill, this.gradient, b.x, b.y, b.width, b.height, this.gradientDirection);\n\t}\n\telse\n\t{\n\t\tc.setFillColor(this.fill);\n\t}\n\n\tc.setStrokeColor(this.stroke);\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxShape.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\treturn new mxRectangle(x, y, w, h);\n};\n\n/**\n * Function: updateTransform\n * \n * Sets the scale and rotation on the given canvas.\n */\nmxShape.prototype.updateTransform = function(c, x, y, w, h)\n{\n\t// NOTE: Currently, scale is implemented in state and canvas. This will\n\t// move to canvas in a later version, so that the states are unscaled\n\t// and untranslated and do not need an update after zooming or panning.\n\tc.scale(this.scale);\n\tc.rotate(this.getShapeRotation(), this.flipH, this.flipV, x + w / 2, y + h / 2);\n};\n\n/**\n * Function: paintVertexShape\n * \n * Paints the vertex shape.\n */\nmxShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tthis.paintBackground(c, x, y, w, h);\n\t\n\tif (!this.outline || this.style == null || mxUtils.getValue(\n\t\tthis.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintForeground(c, x, y, w, h);\n\t}\n};\n\n/**\n * Function: paintBackground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintBackground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintForeground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintForeground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintEdgeShape\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintEdgeShape = function(c, pts) { };\n\n/**\n * Function: getArcSize\n * \n * Returns the arc size for the given dimension.\n */\nmxShape.prototype.getArcSize = function(w, h)\n{\n\tvar r = 0;\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t{\n\t\tr = Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t}\n\telse\n\t{\n\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE,\n\t\t\tmxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\t\tr = Math.min(w * f, h * f);\n\t}\n\t\n\treturn r;\n};\n\n/**\n * Function: paintGlassEffect\n * \n * Paints the glass gradient effect.\n */\nmxShape.prototype.paintGlassEffect = function(c, x, y, w, h, arc)\n{\n\tvar sw = Math.ceil(this.strokewidth / 2);\n\tvar size = 0.4;\n\t\n\tc.setGradient('#ffffff', '#ffffff', x, y, w, h * 0.6, 'south', 0.9, 0.1);\n\tc.begin();\n\tarc += 2 * sw;\n\t\t\n\tif (this.isRounded)\n\t{\n\t\tc.moveTo(x - sw + arc, y - sw);\n\t\tc.quadTo(x - sw, y - sw, x - sw, y - sw + arc);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw + arc);\n\t\tc.quadTo(x + w + sw, y - sw, x + w + sw - arc, y - sw);\n\t}\n\telse\n\t{\n\t\tc.moveTo(x - sw, y - sw);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw);\n\t}\n\t\n\tc.close();\n\tc.fill();\n};\n\n/**\n * Function: addPoints\n * \n * Paints the given points with rounded corners.\n */\nmxShape.prototype.addPoints = function(c, pts, rounded, arcSize, close, exclude, initialMove)\n{\n\tif (pts != null && pts.length > 0)\n\t{\n\t\tinitialMove = (initialMove != null) ? initialMove : true;\n\t\tvar pe = pts[pts.length - 1];\n\t\t\n\t\t// Adds virtual waypoint in the center between start and end point\n\t\tif (close && rounded)\n\t\t{\n\t\t\tpts = pts.slice();\n\t\t\tvar p0 = pts[0];\n\t\t\tvar wp = new mxPoint(pe.x + (p0.x - pe.x) / 2, pe.y + (p0.y - pe.y) / 2);\n\t\t\tpts.splice(0, 0, wp);\n\t\t}\n\t\n\t\tvar pt = pts[0];\n\t\tvar i = 1;\n\t\n\t\t// Draws the line segments\n\t\tif (initialMove)\n\t\t{\n\t\t\tc.moveTo(pt.x, pt.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pt.x, pt.y);\n\t\t}\n\t\t\n\t\twhile (i < ((close) ? pts.length : pts.length - 1))\n\t\t{\n\t\t\tvar tmp = pts[mxUtils.mod(i, pts.length)];\n\t\t\tvar dx = pt.x - tmp.x;\n\t\t\tvar dy = pt.y - tmp.y;\n\t\n\t\t\tif (rounded && (dx != 0 || dy != 0) && (exclude == null || mxUtils.indexOf(exclude, i - 1) < 0))\n\t\t\t{\n\t\t\t\t// Draws a line from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the last point\n\t\t\t\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tvar nx1 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny1 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x1 = tmp.x + nx1;\n\t\t\t\tvar y1 = tmp.y + ny1;\n\t\t\t\tc.lineTo(x1, y1);\n\t\n\t\t\t\t// Draws a curve from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the next point\n\t\t\t\tvar next = pts[mxUtils.mod(i + 1, pts.length)];\n\t\t\t\t\n\t\t\t\t// Uses next non-overlapping point\n\t\t\t\twhile (i < pts.length - 2 && Math.round(next.x - tmp.x) == 0 && Math.round(next.y - tmp.y) == 0)\n\t\t\t\t{\n\t\t\t\t\tnext = pts[mxUtils.mod(i + 2, pts.length)];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdx = next.x - tmp.x;\n\t\t\t\tdy = next.y - tmp.y;\n\t\n\t\t\t\tdist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n\t\t\t\tvar nx2 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny2 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x2 = tmp.x + nx2;\n\t\t\t\tvar y2 = tmp.y + ny2;\n\t\n\t\t\t\tc.quadTo(tmp.x, tmp.y, x2, y2);\n\t\t\t\ttmp = new mxPoint(x2, y2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.lineTo(tmp.x, tmp.y);\n\t\t\t}\n\t\n\t\t\tpt = tmp;\n\t\t\ti++;\n\t\t}\n\t\n\t\tif (close)\n\t\t{\n\t\t\tc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pe.x, pe.y);\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxShape.prototype.resetStyles = function()\n{\n\tthis.initStyles();\n\n\tthis.spacing = 0;\n\t\n\tdelete this.fill;\n\tdelete this.gradient;\n\tdelete this.gradientDirection;\n\tdelete this.stroke;\n\tdelete this.startSize;\n\tdelete this.endSize;\n\tdelete this.startArrow;\n\tdelete this.endArrow;\n\tdelete this.direction;\n\tdelete this.isShadow;\n\tdelete this.isDashed;\n\tdelete this.isRounded;\n\tdelete this.glass;\n};\n\n/**\n * Function: apply\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_FILLCOLOR> => fill\n * - <mxConstants.STYLE_GRADIENTCOLOR> => gradient\n * - <mxConstants.STYLE_GRADIENT_DIRECTION> => gradientDirection\n * - <mxConstants.STYLE_OPACITY> => opacity\n * - <mxConstants.STYLE_FILL_OPACITY> => fillOpacity\n * - <mxConstants.STYLE_STROKE_OPACITY> => strokeOpacity\n * - <mxConstants.STYLE_STROKECOLOR> => stroke\n * - <mxConstants.STYLE_STROKEWIDTH> => strokewidth\n * - <mxConstants.STYLE_SHADOW> => isShadow\n * - <mxConstants.STYLE_DASHED> => isDashed\n * - <mxConstants.STYLE_SPACING> => spacing\n * - <mxConstants.STYLE_STARTSIZE> => startSize\n * - <mxConstants.STYLE_ENDSIZE> => endSize\n * - <mxConstants.STYLE_ROUNDED> => isRounded\n * - <mxConstants.STYLE_STARTARROW> => startArrow\n * - <mxConstants.STYLE_ENDARROW> => endArrow\n * - <mxConstants.STYLE_ROTATION> => rotation\n * - <mxConstants.STYLE_DIRECTION> => direction\n * - <mxConstants.STYLE_GLASS> => glass\n *\n * This keeps a reference to the <style>. If you need to keep a reference to\n * the cell, you can override this method and store a local reference to\n * state.cell or the <mxCellState> itself. If <outline> should be true, make\n * sure to set it before calling this method.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxShape.prototype.apply = function(state)\n{\n\tthis.state = state;\n\tthis.style = state.style;\n\n\tif (this.style != null)\n\t{\n\t\tthis.fill = mxUtils.getValue(this.style, mxConstants.STYLE_FILLCOLOR, this.fill);\n\t\tthis.gradient = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENTCOLOR, this.gradient);\n\t\tthis.gradientDirection = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENT_DIRECTION, this.gradientDirection);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_OPACITY, this.opacity);\n\t\tthis.fillOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_FILL_OPACITY, this.fillOpacity);\n\t\tthis.strokeOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_STROKE_OPACITY, this.strokeOpacity);\n\t\tthis.stroke = mxUtils.getValue(this.style, mxConstants.STYLE_STROKECOLOR, this.stroke);\n\t\tthis.strokewidth = mxUtils.getNumber(this.style, mxConstants.STYLE_STROKEWIDTH, this.strokewidth);\n\t\tthis.spacing = mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing);\n\t\tthis.startSize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, this.startSize);\n\t\tthis.endSize = mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, this.endSize);\n\t\tthis.startArrow = mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, this.startArrow);\n\t\tthis.endArrow = mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, this.endArrow);\n\t\tthis.rotation = mxUtils.getValue(this.style, mxConstants.STYLE_ROTATION, this.rotation);\n\t\tthis.direction = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, this.direction);\n\t\tthis.flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\tthis.flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\t\n\t\t// Legacy support for stencilFlipH/V\n\t\tif (this.stencil != null)\n\t\t{\n\t\t\tthis.flipH = mxUtils.getValue(this.style, 'stencilFlipH', 0) == 1 || this.flipH;\n\t\t\tthis.flipV = mxUtils.getValue(this.style, 'stencilFlipV', 0) == 1 || this.flipV;\n\t\t}\n\t\t\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH || this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tvar tmp = this.flipH;\n\t\t\tthis.flipH = this.flipV;\n\t\t\tthis.flipV = tmp;\n\t\t}\n\n\t\tthis.isShadow = mxUtils.getValue(this.style, mxConstants.STYLE_SHADOW, this.isShadow) == 1;\n\t\tthis.isDashed = mxUtils.getValue(this.style, mxConstants.STYLE_DASHED, this.isDashed) == 1;\n\t\tthis.isRounded = mxUtils.getValue(this.style, mxConstants.STYLE_ROUNDED, this.isRounded) == 1;\n\t\tthis.glass = mxUtils.getValue(this.style, mxConstants.STYLE_GLASS, this.glass) == 1;\n\t\t\n\t\tif (this.fill == mxConstants.NONE)\n\t\t{\n\t\t\tthis.fill = null;\n\t\t}\n\n\t\tif (this.gradient == mxConstants.NONE)\n\t\t{\n\t\t\tthis.gradient = null;\n\t\t}\n\n\t\tif (this.stroke == mxConstants.NONE)\n\t\t{\n\t\t\tthis.stroke = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: setCursor\n * \n * Sets the cursor on the given shape.\n *\n * Parameters:\n *\n * cursor - The cursor to be used.\n */\nmxShape.prototype.setCursor = function(cursor)\n{\n\tif (cursor == null)\n\t{\n\t\tcursor = '';\n\t}\n\t\n\tthis.cursor = cursor;\n\n\tif (this.node != null)\n\t{\n\t\tthis.node.style.cursor = cursor;\n\t}\n};\n\n/**\n * Function: getCursor\n * \n * Returns the current cursor.\n */\nmxShape.prototype.getCursor = function()\n{\n\treturn this.cursor;\n};\n\n/**\n * Function: isRoundable\n * \n * Hook for subclassers.\n */\nmxShape.prototype.isRoundable = function()\n{\n\treturn false;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using <createBoundingBox> and\n * <augmentBoundingBox> and stores the result in <boundingBox>.\n */\nmxShape.prototype.updateBoundingBox = function()\n{\n\t// Tries to get bounding box from SVG subsystem\n\t// LATER: Use getBoundingClientRect for fallback in VML\n\tif (this.useSvgBoundingBox && this.node != null && this.node.ownerSVGElement != null)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar b = this.node.getBBox();\n\t\n\t\t\tif (b.width > 0 && b.height > 0)\n\t\t\t{\n\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\n\t\t\t\t// Adds strokeWidth\n\t\t\t\tthis.boundingBox.grow(this.strokewidth * this.scale / 2);\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tcatch(e)\n\t\t{\n\t\t\t// fallback to code below\n\t\t}\n\t}\n\n\tif (this.bounds != null)\n\t{\n\t\tvar bbox = this.createBoundingBox();\n\t\t\n\t\tif (bbox != null)\n\t\t{\n\t\t\tthis.augmentBoundingBox(bbox);\n\t\t\tvar rot = this.getShapeRotation();\n\t\t\t\n\t\t\tif (rot != 0)\n\t\t\t{\n\t\t\t\tbbox = mxUtils.getBoundingBox(bbox, rot);\n\t\t\t}\n\t\t}\n\n\t\tthis.boundingBox = bbox;\n\t}\n};\n\n/**\n * Function: createBoundingBox\n *\n * Returns a new rectangle that represents the bounding box of the bare shape\n * with no shadows or strokewidths.\n */\nmxShape.prototype.createBoundingBox = function()\n{\n\tvar bb = this.bounds.clone();\n\n\tif ((this.stencil != null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\tthis.direction == mxConstants.DIRECTION_SOUTH)) || this.isPaintBoundsInverted())\n\t{\n\t\tbb.rotate90();\n\t}\n\t\n\treturn bb;\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the strokewidth and shadow offsets.\n */\nmxShape.prototype.augmentBoundingBox = function(bbox)\n{\n\tif (this.isShadow)\n\t{\n\t\tbbox.width += Math.ceil(mxConstants.SHADOW_OFFSET_X * this.scale);\n\t\tbbox.height += Math.ceil(mxConstants.SHADOW_OFFSET_Y * this.scale);\n\t}\n\t\n\t// Adds strokeWidth\n\tbbox.grow(this.strokewidth * this.scale / 2);\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Returns true if the bounds should be inverted.\n */\nmxShape.prototype.isPaintBoundsInverted = function()\n{\n\t// Stencil implements inversion via aspect\n\treturn this.stencil == null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation from the style.\n */\nmxShape.prototype.getRotation = function()\n{\n\treturn (this.rotation != null) ? this.rotation : 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label.\n */\nmxShape.prototype.getTextRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) != 1)\n\t{\n\t\trot += mxText.prototype.verticalTextRotation;\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns the actual rotation of the shape.\n */\nmxShape.prototype.getShapeRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (this.direction != null)\n\t{\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\trot += 270;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\trot += 180;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\trot += 90;\n\t\t}\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: createTransparentSvgRectangle\n * \n * Adds a transparent rectangle that catches all events.\n */\nmxShape.prototype.createTransparentSvgRectangle = function(x, y, w, h)\n{\n\tvar rect = document.createElementNS(mxConstants.NS_SVG, 'rect');\n\trect.setAttribute('x', x);\n\trect.setAttribute('y', y);\n\trect.setAttribute('width', w);\n\trect.setAttribute('height', h);\n\trect.setAttribute('fill', 'none');\n\trect.setAttribute('stroke', 'none');\n\trect.setAttribute('pointer-events', 'all');\n\t\n\treturn rect;\n};\n\n/**\n * Function: setTransparentBackgroundImage\n * \n * Sets a transparent background CSS style to catch all events.\n * \n * Paints the line shape.\n */\nmxShape.prototype.setTransparentBackgroundImage = function(node)\n{\n\tnode.style.backgroundImage = 'url(\\'' + mxClient.imageBasePath + '/transparent.gif\\')';\n};\n\n/**\n * Function: releaseSvgGradients\n * \n * Paints the line shape.\n */\nmxShape.prototype.releaseSvgGradients = function(grads)\n{\n\tif (grads != null)\n\t{\n\t\tfor (var key in grads)\n\t\t{\n\t\t\tvar gradient = grads[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) - 1;\n\t\t\t\t\n\t\t\t\tif (gradient.mxRefCount == 0 && gradient.parentNode != null)\n\t\t\t\t{\n\t\t\t\t\tgradient.parentNode.removeChild(gradient);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n *\n * Destroys the shape by removing it from the DOM and releasing the DOM\n * node associated with the shape using <mxEvent.release>.\n */\nmxShape.prototype.destroy = function()\n{\n\tif (this.node != null)\n\t{\n\t\tmxEvent.release(this.node);\n\t\t\n\t\tif (this.node.parentNode != null)\n\t\t{\n\t\t\tthis.node.parentNode.removeChild(this.node);\n\t\t}\n\t\t\n\t\tthis.node = null;\n\t}\n\t\n\t// Decrements refCount and removes unused\n\tthis.releaseSvgGradients(this.oldGradients);\n\tthis.oldGradients = null;\n};\n\n__mxOutput.mxShape = typeof mxShape !== 'undefined' ? mxShape : undefined;\n"]}