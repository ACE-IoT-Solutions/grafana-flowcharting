{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/shape/mxSwimlane.js"],"names":["mxSwimlane","bounds","fill","stroke","strokewidth","mxShape","call","mxUtils","extend","prototype","imageSize","isRoundable","c","x","y","w","h","getTitleSize","Math","max","getValue","style","mxConstants","STYLE_STARTSIZE","DEFAULT_STARTSIZE","getLabelBounds","rect","start","mxRectangle","width","height","horizontal","isHorizontal","flipH","STYLE_FLIPH","flipV","STYLE_FLIPV","shapeVertical","direction","DIRECTION_NORTH","DIRECTION_SOUTH","realHorizontal","realFlipH","DIRECTION_WEST","realFlipV","tmp","min","scale","getGradientBounds","getArcSize","f","STYLE_ARCSIZE","RECTANGLE_ROUNDING_FACTOR","STYLE_HORIZONTAL","paintVertexShape","STYLE_SWIMLANE_FILLCOLOR","NONE","swimlaneLine","STYLE_SWIMLANE_LINE","r","translate","isRounded","paintSwimlane","paintRoundedSwimlane","sep","STYLE_SEPARATORCOLOR","paintSeparator","image","getImageBounds","glass","setShadow","paintGlassEffect","begin","moveTo","lineTo","fillAndStroke","pointerEvents","setFillColor","paintDivider","quadTo","shadow","color","setStrokeColor","setDashed","__mxOutput","undefined"],"mappings":"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","file":"mxSwimlane.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlane\n *\n * Extends <mxShape> to implement a swimlane shape. This shape is registered\n * under <mxConstants.SHAPE_SWIMLANE> in <mxCellRenderer>. Use the\n * <mxConstants.STYLE_STYLE_STARTSIZE> to define the size of the title\n * region, <mxConstants.STYLE_SWIMLANE_FILLCOLOR> for the content area fill,\n * <mxConstants.STYLE_SEPARATORCOLOR> to draw an additional vertical separator\n * and <mxConstants.STYLE_SWIMLANE_LINE> to hide the line between the title\n * region and the content area. The <mxConstants.STYLE_HORIZONTAL> affects\n * the orientation of this shape, not only its label.\n * \n * Constructor: mxSwimlane\n *\n * Constructs a new swimlane shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxSwimlane(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxSwimlane, mxShape);\n\n/**\n * Variable: imageSize\n *\n * Default imagewidth and imageheight if an image but no imagewidth\n * and imageheight are defined in the style. Value is 16.\n */\nmxSwimlane.prototype.imageSize = 16;\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxSwimlane.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn true;\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getTitleSize = function()\n{\n\treturn Math.max(0, mxUtils.getValue(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE));\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getLabelBounds = function(rect)\n{\n\tvar start = this.getTitleSize();\n\tvar bounds = new mxRectangle(rect.x, rect.y, rect.width, rect.height);\n\tvar horizontal = this.isHorizontal();\n\t\n\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\n\t// East is default\n\tvar shapeVertical = (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n\tvar realHorizontal = horizontal == !shapeVertical;\n\t\n\tvar realFlipH = !realHorizontal && flipH != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\tvar realFlipV = realHorizontal && flipV != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\n\t// Shape is horizontal\n\tif (!shapeVertical)\n\t{\n\t\tvar tmp = Math.min(bounds.height, start * this.scale);\n\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.y += bounds.height - tmp;\n\t\t}\n\n\t\tbounds.height = tmp;\n\t}\n\telse\n\t{\n\t\tvar tmp = Math.min(bounds.width, start * this.scale);\n\t\t\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.x += bounds.width - tmp;\t\n\t\t}\n\n\t\tbounds.width = tmp;\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t\treturn new mxRectangle(x, y, w, start);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t\treturn new mxRectangle(x, y, start, h);\n\t}\n};\n\n/**\n * Function: getArcSize\n * \n * Returns the arcsize for the swimlane.\n */\nmxSwimlane.prototype.getArcSize = function(w, h, start)\n{\n\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\n\treturn start * f * 3; \n};\n\n/**\n * Function: paintVertexShape\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.isHorizontal = function()\n{\n\treturn mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) == 1;\n};\n\n/**\n * Function: paintVertexShape\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_FILLCOLOR, mxConstants.NONE);\n\tvar swimlaneLine = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_LINE, 1) == 1;\n\tvar r = 0;\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t}\n\t\n\tc.translate(x, y);\n\t\n\tif (!this.isRounded)\n\t{\n\t\tthis.paintSwimlane(c, x, y, w, h, start, fill, swimlaneLine);\n\t}\n\telse\n\t{\n\t\tr = this.getArcSize(w, h, start);\n\t\tr = Math.min(((this.isHorizontal()) ? h : w) - start, Math.min(start, r));\n\t\tthis.paintRoundedSwimlane(c, x, y, w, h, start, r, fill, swimlaneLine);\n\t}\n\t\n\tvar sep = mxUtils.getValue(this.style, mxConstants.STYLE_SEPARATORCOLOR, mxConstants.NONE);\n\tthis.paintSeparator(c, x, y, w, h, start, sep);\n\n\tif (this.image != null)\n\t{\n\t\tvar bounds = this.getImageBounds(x, y, w, h);\n\t\tc.image(bounds.x - x, bounds.y - y, bounds.width, bounds.height,\n\t\t\t\tthis.image, false, false, false);\n\t}\n\t\n\tif (this.glass)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintGlassEffect(c, 0, 0, w, start, r);\n\t}\n};\n\n/**\n * Function: paintSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintSwimlane = function(c, x, y, w, h, start, fill, swimlaneLine)\n{\n\tc.begin();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(w, 0);\n\t\tc.lineTo(w, start);\n\t\tc.fillAndStroke();\n\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(0, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(start, h);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintRoundedSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintRoundedSwimlane = function(c, x, y, w, h, start, r, fill, swimlaneLine)\n{\n\tc.begin();\n\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(w, start);\n\t\tc.lineTo(w, r);\n\t\tc.quadTo(w, 0, w - Math.min(w / 2, r), 0);\n\t\tc.lineTo(Math.min(w / 2, r), 0);\n\t\tc.quadTo(0, 0, 0, r);\n\t\tc.lineTo(0, start);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h - r);\n\t\t\tc.quadTo(0, h, Math.min(w / 2, r), h);\n\t\t\tc.lineTo(w - Math.min(w / 2, r), h);\n\t\t\tc.quadTo(w, h, w, h - r);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(r, 0);\n\t\tc.quadTo(0, 0, 0, Math.min(h / 2, r));\n\t\tc.lineTo(0, h - Math.min(h / 2, r));\n\t\tc.quadTo(0, h, r, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, h);\n\t\t\tc.lineTo(w - r, h);\n\t\t\tc.quadTo(w, h, w, h - Math.min(h / 2, r));\n\t\t\tc.lineTo(w, Math.min(h / 2, r));\n\t\t\tc.quadTo(w, 0, w - r, 0);\n\t\t\tc.lineTo(start, 0);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintDivider\n *\n * Paints the divider between swimlane title and content area.\n */\nmxSwimlane.prototype.paintDivider = function(c, x, y, w, h, start, shadow)\n{\n\tif (!shadow)\n\t{\n\t\tc.setShadow(false);\n\t}\n\n\tc.begin();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(w, start);\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(start, h);\n\t}\n\n\tc.stroke();\n};\n\n/**\n * Function: paintSeparator\n *\n * Paints the vertical or horizontal separator line between swimlanes.\n */\nmxSwimlane.prototype.paintSeparator = function(c, x, y, w, h, start, color)\n{\n\tif (color != mxConstants.NONE)\n\t{\n\t\tc.setStrokeColor(color);\n\t\tc.setDashed(true);\n\t\tc.begin();\n\t\t\n\t\tif (this.isHorizontal())\n\t\t{\n\t\t\tc.moveTo(w, start);\n\t\t\tc.lineTo(w, h);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t}\n\t\t\n\t\tc.stroke();\n\t\tc.setDashed(false);\n\t}\n};\n\n/**\n * Function: getImageBounds\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.getImageBounds = function(x, y, w, h)\n{\n\tif (this.isHorizontal())\n\t{\n\t\treturn new mxRectangle(x + w - this.imageSize, y, this.imageSize, this.imageSize);\n\t}\n\telse\n\t{\n\t\treturn new mxRectangle(x, y, this.imageSize, this.imageSize);\n\t}\n};\n\n__mxOutput.mxSwimlane = typeof mxSwimlane !== 'undefined' ? mxSwimlane : undefined;\n"]}