{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/shape/mxText.js"],"names":["mxText","value","bounds","align","valign","color","family","size","fontStyle","spacing","spacingTop","spacingRight","spacingBottom","spacingLeft","horizontal","background","border","wrap","clipped","overflow","labelPadding","textDirection","mxShape","call","mxConstants","ALIGN_CENTER","ALIGN_MIDDLE","DEFAULT_FONTFAMILY","DEFAULT_FONTSIZE","DEFAULT_FONTSTYLE","parseInt","rotation","updateMargin","mxUtils","extend","prototype","baseSpacingTop","baseSpacingBottom","baseSpacingLeft","baseSpacingRight","replaceLinefeeds","verticalTextRotation","ignoreClippedStringSize","ignoreStringSize","textWidthPadding","document","documentMode","mxClient","IS_EM","lastValue","cacheEnabled","isParseVml","isHtmlAllowed","getSvgScreenOffset","checkBounds","isNaN","scale","isFinite","x","y","width","height","paint","c","update","s","w","h","updateTransform","configureCanvas","unscaledWidth","state","node","firstChild","lastUnscaledWidth","invalidateCachedOffsetSize","updateText","getTextRotation","realHtml","isNode","dialect","DIALECT_STRICTHTML","fmt","mxVmlCanvas2D","val","htmlEntities","replaceTrailingNewlines","replace","dir","TEXT_DIRECTION_AUTO","getAutoDirection","TEXT_DIRECTION_LTR","TEXT_DIRECTION_RTL","text","redraw","visible","nodeName","IS_VML","updateSize","view","textDiv","IS_IE","updateHtmlFilter","updateHtmlTransform","updateBoundingBox","canvas","createCanvas","destroyCanvas","apply","arguments","resetStyles","DEFAULT_TEXT_DIRECTION","margin","old","style","getValue","STYLE_FONTSTYLE","STYLE_FONTFAMILY","STYLE_FONTSIZE","STYLE_FONTCOLOR","STYLE_ALIGN","STYLE_VERTICAL_ALIGN","STYLE_SPACING","STYLE_SPACING_TOP","STYLE_SPACING_RIGHT","STYLE_SPACING_BOTTOM","STYLE_SPACING_LEFT","STYLE_HORIZONTAL","STYLE_LABEL_BACKGROUNDCOLOR","STYLE_LABEL_BORDERCOLOR","STYLE_TEXT_DIRECTION","opacity","STYLE_TEXT_OPACITY","flipV","flipH","tmp","exec","length","boundingBox","clone","rot","STYLE_LABEL_POSITION","v","STYLE_VERTICAL_LABEL_POSITION","ow","oh","ownerSVGElement","getAttribute","b","getBBox","trim","mxRectangle","e","td","offsetWidth","offsetHeight","updateFont","updateInnerHtml","sizeDiv","Math","round","wordWrap","WORD_WRAP","whiteSpace","divs","getElementsByTagName","min","bbox","getBoundingBox","mxPoint","unrotatedBoundingBox","fromRectangle","getShapeRotation","shape","isPaintBoundsInverted","graph","model","isVertex","cell","setFontColor","setFontBackgroundColor","setFontBorderColor","setFontFamily","setFontSize","setFontStyle","updateVmlContainer","left","top","redrawHtmlShape","updateValue","theta","dx","dy","setPrefixedStyle","ceil","elt","innerHTML","outerHTML","setOpacity","IS_QUIRKS","NONE","scrollHeight","rad","PI","real_cos","parseFloat","cos","toFixed","real_sin","sin","tx","ty","top_fix","left_fix","f","filter","ALIGN_TOP","ALIGN_BOTTOM","zoom","appendChild","bg","bd","backgroundColor","css","lh","ABSOLUTE_LINE_HEIGHT","LINE_HEIGHT","setAttribute","removeAttribute","lineHeight","fontSize","fontFamily","verticalAlign","FONT_BOLD","fontWeight","FONT_ITALIC","FONT_UNDERLINE","textDecoration","textAlign","ALIGN_RIGHT","enableWrap","max","maxHeight","maxWidth","prev","parentNode","visibility","body","getAlignmentAsPoint","getSpacing","__mxOutput","undefined"],"mappings":";;;;;AAAA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,UAASA,MAAT,CAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8CC,KAA9C,EACCC,MADD,EACSC,IADT,EACeC,SADf,EAC0BC,OAD1B,EACmCC,UADnC,EAC+CC,YAD/C,EAECC,aAFD,EAEgBC,WAFhB,EAE6BC,UAF7B,EAEyCC,UAFzC,EAEqDC,MAFrD,EAGCC,IAHD,EAGOC,OAHP,EAGgBC,QAHhB,EAG0BC,YAH1B,EAGwCC,aAHxC,EAIA;AACCC,UAAQC,IAAR,CAAa,IAAb;AACA,OAAKtB,KAAL,GAAaA,KAAb;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKG,KAAL,GAAcA,SAAS,IAAV,GAAkBA,KAAlB,GAA0B,OAAvC;AACA,OAAKF,KAAL,GAAcA,SAAS,IAAV,GAAkBA,KAAlB,GAA0BqB,YAAYC,YAAnD;AACA,OAAKrB,MAAL,GAAeA,UAAU,IAAX,GAAmBA,MAAnB,GAA4BoB,YAAYE,YAAtD;AACA,OAAKpB,MAAL,GAAeA,UAAU,IAAX,GAAmBA,MAAnB,GAA4BkB,YAAYG,kBAAtD;AACA,OAAKpB,IAAL,GAAaA,QAAQ,IAAT,GAAiBA,IAAjB,GAAwBiB,YAAYI,gBAAhD;AACA,OAAKpB,SAAL,GAAkBA,aAAa,IAAd,GAAsBA,SAAtB,GAAkCgB,YAAYK,iBAA/D;AACA,OAAKpB,OAAL,GAAeqB,SAASrB,WAAW,CAApB,CAAf;AACA,OAAKC,UAAL,GAAkB,KAAKD,OAAL,GAAeqB,SAASpB,cAAc,CAAvB,CAAjC;AACA,OAAKC,YAAL,GAAoB,KAAKF,OAAL,GAAeqB,SAASnB,gBAAgB,CAAzB,CAAnC;AACA,OAAKC,aAAL,GAAqB,KAAKH,OAAL,GAAeqB,SAASlB,iBAAiB,CAA1B,CAApC;AACA,OAAKC,WAAL,GAAmB,KAAKJ,OAAL,GAAeqB,SAASjB,eAAe,CAAxB,CAAlC;AACA,OAAKC,UAAL,GAAmBA,cAAc,IAAf,GAAuBA,UAAvB,GAAoC,IAAtD;AACA,OAAKC,UAAL,GAAkBA,UAAlB;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKC,IAAL,GAAaA,QAAQ,IAAT,GAAiBA,IAAjB,GAAwB,KAApC;AACA,OAAKC,OAAL,GAAgBA,WAAW,IAAZ,GAAoBA,OAApB,GAA8B,KAA7C;AACA,OAAKC,QAAL,GAAiBA,YAAY,IAAb,GAAqBA,QAArB,GAAgC,SAAhD;AACA,OAAKC,YAAL,GAAqBA,gBAAgB,IAAjB,GAAyBA,YAAzB,GAAwC,CAA5D;AACA,OAAKC,aAAL,GAAqBA,aAArB;AACA,OAAKU,QAAL,GAAgB,CAAhB;AACA,OAAKC,YAAL;AACA,E;;;AAAA;;AAED;;;AAGAC,WAAQC,MAAR,CAAelC,MAAf,EAAuBsB,OAAvB;;AAEA;;;;;;AAMAtB,UAAOmC,SAAP,CAAiBC,cAAjB,GAAkC,CAAlC;;AAEA;;;;;;AAMApC,UAAOmC,SAAP,CAAiBE,iBAAjB,GAAqC,CAArC;;AAEA;;;;;AAKArC,UAAOmC,SAAP,CAAiBG,eAAjB,GAAmC,CAAnC;;AAEA;;;;;AAKAtC,UAAOmC,SAAP,CAAiBI,gBAAjB,GAAoC,CAApC;;AAEA;;;;;;AAMAvC,UAAOmC,SAAP,CAAiBK,gBAAjB,GAAoC,IAApC;;AAEA;;;;;AAKAxC,UAAOmC,SAAP,CAAiBM,oBAAjB,GAAwC,CAAC,EAAzC;;AAEA;;;;;;;;AAQAzC,UAAOmC,SAAP,CAAiBO,uBAAjB,GAA2C,IAA3C;;AAEA;;;;;;;AAOA1C,UAAOmC,SAAP,CAAiBQ,gBAAjB,GAAoC,KAApC;;AAEA;;;;;;;AAOA3C,UAAOmC,SAAP,CAAiBS,gBAAjB,GAAqCC,SAASC,YAAT,IAAyB,CAAzB,IAA8B,CAACC,SAASC,KAAzC,GAAkD,CAAlD,GAAsD,CAA1F;;AAEA;;;;;AAKAhD,UAAOmC,SAAP,CAAiBc,SAAjB,GAA6B,IAA7B;;AAEA;;;;;AAKAjD,UAAOmC,SAAP,CAAiBe,YAAjB,GAAgC,IAAhC;;AAEA;;;;;;AAMAlD,UAAOmC,SAAP,CAAiBgB,UAAjB,GAA8B,YAC9B;AACC,WAAO,KAAP;AACA,IAHD;;AAKA;;;;;;AAMAnD,UAAOmC,SAAP,CAAiBiB,aAAjB,GAAiC,YACjC;AACC,WAAOP,SAASC,YAAT,IAAyB,CAAzB,IAA8BC,SAASC,KAA9C;AACA,IAHD;;AAKA;;;;;AAKAhD,UAAOmC,SAAP,CAAiBkB,kBAAjB,GAAsC,YACtC;AACC,WAAO,CAAP;AACA,IAHD;;AAKA;;;;;AAKArD,UAAOmC,SAAP,CAAiBmB,WAAjB,GAA+B,YAC/B;AACC,WAAQ,CAACC,MAAM,KAAKC,KAAX,CAAD,IAAsBC,SAAS,KAAKD,KAAd,CAAtB,IAA8C,KAAKA,KAAL,GAAa,CAA3D,IACN,KAAKtD,MAAL,IAAe,IADT,IACiB,CAACqD,MAAM,KAAKrD,MAAL,CAAYwD,CAAlB,CADlB,IAC0C,CAACH,MAAM,KAAKrD,MAAL,CAAYyD,CAAlB,CAD3C,IAEN,CAACJ,MAAM,KAAKrD,MAAL,CAAY0D,KAAlB,CAFK,IAEuB,CAACL,MAAM,KAAKrD,MAAL,CAAY2D,MAAlB,CAFhC;AAGA,IALD;;AAOA;;;;;AAKA7D,UAAOmC,SAAP,CAAiB2B,KAAjB,GAAyB,UAASC,CAAT,EAAYC,MAAZ,EACzB;AACC;AACA,QAAIC,IAAI,KAAKT,KAAb;AACA,QAAIE,IAAI,KAAKxD,MAAL,CAAYwD,CAAZ,GAAgBO,CAAxB;AACA,QAAIN,IAAI,KAAKzD,MAAL,CAAYyD,CAAZ,GAAgBM,CAAxB;AACA,QAAIC,IAAI,KAAKhE,MAAL,CAAY0D,KAAZ,GAAoBK,CAA5B;AACA,QAAIE,IAAI,KAAKjE,MAAL,CAAY2D,MAAZ,GAAqBI,CAA7B;;AAEA,SAAKG,eAAL,CAAqBL,CAArB,EAAwBL,CAAxB,EAA2BC,CAA3B,EAA8BO,CAA9B,EAAiCC,CAAjC;AACA,SAAKE,eAAL,CAAqBN,CAArB,EAAwBL,CAAxB,EAA2BC,CAA3B,EAA8BO,CAA9B,EAAiCC,CAAjC;;AAEA,QAAIG,gBAAiB,KAAKC,KAAL,IAAc,IAAf,GAAuB,KAAKA,KAAL,CAAWD,aAAlC,GAAkD,IAAtE;;AAEA,QAAIN,MAAJ,EACA;AACC,SAAI,KAAKQ,IAAL,CAAUC,UAAV,IAAwB,IAAxB,KAAiCH,iBAAiB,IAAjB,IACpC,KAAKI,iBAAL,IAA0BJ,aADvB,CAAJ,EAEA;AACCP,QAAEY,0BAAF,CAA6B,KAAKH,IAAlC;AACA;;AAEDT,OAAEa,UAAF,CAAalB,CAAb,EAAgBC,CAAhB,EAAmBO,CAAnB,EAAsBC,CAAtB,EAAyB,KAAKhE,KAA9B,EAAqC,KAAKC,MAA1C,EAAkD,KAAKa,IAAvD,EAA6D,KAAKE,QAAlE,EACE,KAAKD,OADP,EACgB,KAAK2D,eAAL,EADhB,EACwC,KAAKL,IAD7C;AAEA,KAVD,MAYA;AACC;AACA,SAAIM,WAAW7C,QAAQ8C,MAAR,CAAe,KAAK9E,KAApB,KAA8B,KAAK+E,OAAL,IAAgBxD,YAAYyD,kBAAzE;;AAEA;AACA,SAAIC,MAAOJ,YAAYf,aAAaoB,aAA1B,GAA2C,MAA3C,GAAoD,EAA9D;AACA,SAAIC,MAAM,KAAKnF,KAAf;;AAEA,SAAI,CAAC6E,QAAD,IAAaI,OAAO,MAAxB,EACA;AACCE,YAAOnD,QAAQoD,YAAR,CAAqBD,GAArB,EAA0B,KAA1B,CAAP;AACA;;AAED,SAAIF,OAAO,MAAP,IAAiB,CAACjD,QAAQ8C,MAAR,CAAe,KAAK9E,KAApB,CAAtB,EACA;AACCmF,YAAMnD,QAAQqD,uBAAR,CAAgCF,GAAhC,EAAqC,iBAArC,CAAN;AACA;;AAED;AACAA,WAAO,CAACnD,QAAQ8C,MAAR,CAAe,KAAK9E,KAApB,CAAD,IAA+B,KAAKuC,gBAApC,IAAwD0C,OAAO,MAAhE,GACLE,IAAIG,OAAJ,CAAY,KAAZ,EAAmB,OAAnB,CADK,GACyBH,GAD/B;;AAGA,SAAII,MAAM,KAAKnE,aAAf;;AAEA,SAAImE,OAAOhE,YAAYiE,mBAAnB,IAA0C,CAACX,QAA/C,EACA;AACCU,YAAM,KAAKE,gBAAL,EAAN;AACA;;AAED,SAAIF,OAAOhE,YAAYmE,kBAAnB,IAAyCH,OAAOhE,YAAYoE,kBAAhE,EACA;AACCJ,YAAM,IAAN;AACA;;AAEDzB,OAAE8B,IAAF,CAAOnC,CAAP,EAAUC,CAAV,EAAaO,CAAb,EAAgBC,CAAhB,EAAmBiB,GAAnB,EAAwB,KAAKjF,KAA7B,EAAoC,KAAKC,MAAzC,EAAiD,KAAKa,IAAtD,EAA4DiE,GAA5D,EAAiE,KAAK/D,QAAtE,EACC,KAAKD,OADN,EACe,KAAK2D,eAAL,EADf,EACuCW,GADvC;AAEA;;AAED;AACA,SAAKd,iBAAL,GAAyBJ,aAAzB;AACA,IAlED;;AAoEA;;;;;AAKAtE,UAAOmC,SAAP,CAAiB2D,MAAjB,GAA0B,YAC1B;AACC,QAAI,KAAKC,OAAL,IAAgB,KAAKzC,WAAL,EAAhB,IAAsC,KAAKJ,YAA3C,IAA2D,KAAKD,SAAL,IAAkB,KAAKhD,KAAlF,KACFgC,QAAQ8C,MAAR,CAAe,KAAK9E,KAApB,KAA8B,KAAK+E,OAAL,IAAgBxD,YAAYyD,kBADxD,CAAJ,EAEA;AACC,SAAI,KAAKT,IAAL,CAAUwB,QAAV,IAAsB,KAAtB,KAAgC,KAAK5C,aAAL,MAAwB,CAACL,SAASkD,MAAlE,CAAJ,EACA;AACC,WAAKC,UAAL,CAAgB,KAAK1B,IAArB,EAA4B,KAAKD,KAAL,IAAc,IAAd,IAAsB,KAAKA,KAAL,CAAW4B,IAAX,CAAgBC,OAAhB,IAA2B,IAA7E;;AAEA,UAAIrD,SAASsD,KAAT,KAAmBxD,SAASC,YAAT,IAAyB,IAAzB,IAAiCD,SAASC,YAAT,IAAyB,CAA7E,CAAJ,EACA;AACC,YAAKwD,gBAAL;AACA,OAHD,MAKA;AACC,YAAKC,mBAAL;AACA;;AAED,WAAKC,iBAAL;AACA,MAdD,MAgBA;AACC,UAAIC,SAAS,KAAKC,YAAL,EAAb;;AAEA,UAAID,UAAU,IAAV,IAAkBA,OAAO7B,UAAP,IAAqB,IAAvC,IACH6B,OAAO9B,0BAAP,IAAqC,IADtC,EAEA;AACC,YAAKb,KAAL,CAAW2C,MAAX,EAAmB,IAAnB;AACA,YAAKE,aAAL,CAAmBF,MAAnB;AACA,YAAKD,iBAAL;AACA,OAND,MAQA;AACC;AACAlF,eAAQa,SAAR,CAAkB2D,MAAlB,CAAyBc,KAAzB,CAA+B,IAA/B,EAAqCC,SAArC;AACA;AACD;AACD,KAnCD,MAqCA;AACCvF,aAAQa,SAAR,CAAkB2D,MAAlB,CAAyBc,KAAzB,CAA+B,IAA/B,EAAqCC,SAArC;;AAEA,SAAI5E,QAAQ8C,MAAR,CAAe,KAAK9E,KAApB,KAA8B,KAAK+E,OAAL,IAAgBxD,YAAYyD,kBAA9D,EACA;AACC,WAAKhC,SAAL,GAAiB,KAAKhD,KAAtB;AACA,MAHD,MAKA;AACC,WAAKgD,SAAL,GAAiB,IAAjB;AACA;AACD;AACD,IAnDD;;AAqDA;;;;;AAKAjD,UAAOmC,SAAP,CAAiB2E,WAAjB,GAA+B,YAC/B;AACCxF,YAAQa,SAAR,CAAkB2E,WAAlB,CAA8BF,KAA9B,CAAoC,IAApC,EAA0CC,SAA1C;;AAEA,SAAKxG,KAAL,GAAa,OAAb;AACA,SAAKF,KAAL,GAAaqB,YAAYC,YAAzB;AACA,SAAKrB,MAAL,GAAcoB,YAAYE,YAA1B;AACA,SAAKpB,MAAL,GAAckB,YAAYG,kBAA1B;AACA,SAAKpB,IAAL,GAAYiB,YAAYI,gBAAxB;AACA,SAAKpB,SAAL,GAAiBgB,YAAYK,iBAA7B;AACA,SAAKpB,OAAL,GAAe,CAAf;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKC,aAAL,GAAqB,CAArB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,WAAO,KAAKC,UAAZ;AACA,WAAO,KAAKC,MAAZ;AACA,SAAKK,aAAL,GAAqBG,YAAYuF,sBAAjC;AACA,WAAO,KAAKC,MAAZ;AACA,IApBD;;AAsBA;;;;;;;;;AASAhH,UAAOmC,SAAP,CAAiByE,KAAjB,GAAyB,UAASrC,KAAT,EACzB;AACC,QAAI0C,MAAM,KAAKxG,OAAf;AACAa,YAAQa,SAAR,CAAkByE,KAAlB,CAAwBA,KAAxB,CAA8B,IAA9B,EAAoCC,SAApC;;AAEA,QAAI,KAAKK,KAAL,IAAc,IAAlB,EACA;AACC,UAAK1G,SAAL,GAAiByB,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAY4F,eAAzC,EAA0D,KAAK5G,SAA/D,CAAjB;AACA,UAAKF,MAAL,GAAc2B,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAY6F,gBAAzC,EAA2D,KAAK/G,MAAhE,CAAd;AACA,UAAKC,IAAL,GAAY0B,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAY8F,cAAzC,EAAyD,KAAK/G,IAA9D,CAAZ;AACA,UAAKF,KAAL,GAAa4B,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAY+F,eAAzC,EAA0D,KAAKlH,KAA/D,CAAb;AACA,UAAKF,KAAL,GAAa8B,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYgG,WAAzC,EAAsD,KAAKrH,KAA3D,CAAb;AACA,UAAKC,MAAL,GAAc6B,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYiG,oBAAzC,EAA+D,KAAKrH,MAApE,CAAd;AACA,UAAKK,OAAL,GAAeqB,SAASG,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYkG,aAAzC,EAAwD,KAAKjH,OAA7D,CAAT,CAAf;AACA,UAAKC,UAAL,GAAkBoB,SAASG,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYmG,iBAAzC,EAA4D,KAAKjH,UAAL,GAAkBuG,GAA9E,CAAT,IAA+F,KAAKxG,OAAtH;AACA,UAAKE,YAAL,GAAoBmB,SAASG,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYoG,mBAAzC,EAA8D,KAAKjH,YAAL,GAAoBsG,GAAlF,CAAT,IAAmG,KAAKxG,OAA5H;AACA,UAAKG,aAAL,GAAqBkB,SAASG,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYqG,oBAAzC,EAA+D,KAAKjH,aAAL,GAAqBqG,GAApF,CAAT,IAAqG,KAAKxG,OAA/H;AACA,UAAKI,WAAL,GAAmBiB,SAASG,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYsG,kBAAzC,EAA6D,KAAKjH,WAAL,GAAmBoG,GAAhF,CAAT,IAAiG,KAAKxG,OAAzH;AACA,UAAKK,UAAL,GAAkBmB,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYuG,gBAAzC,EAA2D,KAAKjH,UAAhE,CAAlB;AACA,UAAKC,UAAL,GAAkBkB,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYwG,2BAAzC,EAAsE,KAAKjH,UAA3E,CAAlB;AACA,UAAKC,MAAL,GAAciB,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYyG,uBAAzC,EAAkE,KAAKjH,MAAvE,CAAd;AACA,UAAKK,aAAL,GAAqBY,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAY0G,oBAAzC,EAA+D1G,YAAYuF,sBAA3E,CAArB;AACA,UAAKoB,OAAL,GAAelG,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAY4G,kBAAzC,EAA6D,GAA7D,CAAf;AACA,UAAKpG,YAAL;AACA;;AAED,SAAKqG,KAAL,GAAa,IAAb;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,IA5BD;;AA8BA;;;;;;;;AAQAtI,UAAOmC,SAAP,CAAiBuD,gBAAjB,GAAoC,YACpC;AACC;AACA,QAAI6C,MAAM,4EAA4EC,IAA5E,CAAiF,KAAKvI,KAAtF,CAAV;;AAEA;AACA,WAAQsI,OAAO,IAAP,IAAeA,IAAIE,MAAJ,GAAa,CAA5B,IAAiCF,IAAI,CAAJ,IAAS,GAA3C,GACN/G,YAAYoE,kBADN,GAC2BpE,YAAYmE,kBAD9C;AAEA,IARD;;AAUA;;;;;AAKA3F,UAAOmC,SAAP,CAAiBqE,iBAAjB,GAAqC,YACrC;AACC,QAAIhC,OAAO,KAAKA,IAAhB;AACA,SAAKkE,WAAL,GAAmB,KAAKxI,MAAL,CAAYyI,KAAZ,EAAnB;AACA,QAAIC,MAAM,KAAK/D,eAAL,EAAV;;AAEA,QAAIV,IAAK,KAAK+C,KAAL,IAAc,IAAf,GAAuBjF,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYqH,oBAAzC,EAA+DrH,YAAYC,YAA3E,CAAvB,GAAkH,IAA1H;AACA,QAAIqH,IAAK,KAAK5B,KAAL,IAAc,IAAf,GAAuBjF,QAAQkF,QAAR,CAAiB,KAAKD,KAAtB,EAA6B1F,YAAYuH,6BAAzC,EAAwEvH,YAAYE,YAApF,CAAvB,GAA2H,IAAnI;;AAEA,QAAI,CAAC,KAAKiB,gBAAN,IAA0B6B,QAAQ,IAAlC,IAA0C,KAAKrD,QAAL,IAAiB,MAA3D,KAAsE,CAAC,KAAKD,OAAN,IACzE,CAAC,KAAKwB,uBADmE,IACxCyB,KAAK3C,YAAYC,YADuB,IACPqH,KAAKtH,YAAYE,YADhF,CAAJ,EAEA;AACC,SAAIsH,KAAK,IAAT;AACA,SAAIC,KAAK,IAAT;;AAEA,SAAIzE,KAAK0E,eAAL,IAAwB,IAA5B,EACA;AACC,UAAI1E,KAAKC,UAAL,IAAmB,IAAnB,IAA2BD,KAAKC,UAAL,CAAgBA,UAAhB,IAA8B,IAAzD,IACHD,KAAKC,UAAL,CAAgBA,UAAhB,CAA2BuB,QAA3B,IAAuC,eADxC,EAEA;AACCxB,cAAOA,KAAKC,UAAL,CAAgBA,UAAvB;AACAuE,YAAKlH,SAAS0C,KAAK2E,YAAL,CAAkB,OAAlB,CAAT,IAAuC,KAAK3F,KAAjD;AACAyF,YAAKnH,SAAS0C,KAAK2E,YAAL,CAAkB,QAAlB,CAAT,IAAwC,KAAK3F,KAAlD;AACA,OAND,MAQA;AACC,WACA;AACC,YAAI4F,IAAI5E,KAAK6E,OAAL,EAAR;;AAEA;AACA,YAAI,OAAO,KAAKpJ,KAAZ,IAAsB,QAAtB,IAAkCgC,QAAQqH,IAAR,CAAa,KAAKrJ,KAAlB,KAA4B,CAAlE,EACA;AACC,cAAKyI,WAAL,GAAmB,IAAnB;AACA,SAHD,MAIK,IAAIU,EAAExF,KAAF,IAAW,CAAX,IAAgBwF,EAAEvF,MAAF,IAAY,CAAhC,EACL;AACC,cAAK6E,WAAL,GAAmB,IAAnB;AACA,SAHI,MAKL;AACC,cAAKA,WAAL,GAAmB,IAAIa,WAAJ,CAAgBH,EAAE1F,CAAlB,EAAqB0F,EAAEzF,CAAvB,EAA0ByF,EAAExF,KAA5B,EAAmCwF,EAAEvF,MAArC,CAAnB;AACA;;AAED;AACA,QAnBD,CAoBA,OAAO2F,CAAP,EACA;AACC;AACA;AACD;AACD,MApCD,MAsCA;AACC,UAAIC,KAAM,KAAKlF,KAAL,IAAc,IAAf,GAAuB,KAAKA,KAAL,CAAW4B,IAAX,CAAgBC,OAAvC,GAAiD,IAA1D;;AAEA;AACA,UAAI,KAAKsD,WAAL,IAAoB,IAApB,IAA4B,KAAKC,YAAL,IAAqB,IAArD,EACA;AACCX,YAAK,KAAKU,WAAL,GAAmB,KAAKlG,KAA7B;AACAyF,YAAK,KAAKU,YAAL,GAAoB,KAAKnG,KAA9B;AACA,OAJD,MAMA;AACC;AACA;AACA,WAAIiG,MAAM,IAAV,EACA;AACC,aAAKG,UAAL,CAAgBH,EAAhB;AACA,aAAKvD,UAAL,CAAgBuD,EAAhB,EAAoB,KAApB;AACA,aAAKI,eAAL,CAAqBJ,EAArB;;AAEAjF,eAAOiF,EAAP;AACA;;AAED,WAAIK,UAAUtF,IAAd;;AAEA,WAAI3B,SAASC,YAAT,IAAyB,CAAzB,IAA8B,CAACC,SAASC,KAA5C,EACA;AACC,YAAIkB,IAAI6F,KAAKC,KAAL,CAAW,KAAK9J,MAAL,CAAY0D,KAAZ,GAAoB,KAAKJ,KAApC,CAAR;;AAEA,YAAI,KAAKvC,IAAL,IAAaiD,IAAI,CAArB,EACA;AACCM,cAAK0C,KAAL,CAAW+C,QAAX,GAAsBzI,YAAY0I,SAAlC;AACA1F,cAAK0C,KAAL,CAAWiD,UAAX,GAAwB,QAAxB;;AAEA,aAAI3F,KAAK0C,KAAL,CAAW+C,QAAX,IAAuB,YAA3B,EACA;AACC;AACA,cAAIG,OAAON,QAAQO,oBAAR,CAA6B,KAA7B,CAAX;;AAEA,cAAID,KAAK3B,MAAL,GAAc,CAAlB,EACA;AACCqB,qBAAUM,KAAKA,KAAK3B,MAAL,GAAc,CAAnB,CAAV;AACA;;AAEDO,eAAKc,QAAQJ,WAAR,GAAsB,CAA3B;AACAU,iBAAO,KAAK5F,IAAL,CAAU6F,oBAAV,CAA+B,KAA/B,CAAP;;AAEA,cAAI,KAAKnJ,OAAT,EACA;AACC8H,gBAAKe,KAAKO,GAAL,CAASpG,CAAT,EAAY8E,EAAZ,CAAL;AACA;;AAED;AACA,cAAIoB,KAAK3B,MAAL,GAAc,CAAlB,EACA;AACC2B,gBAAKA,KAAK3B,MAAL,GAAc,CAAnB,EAAsBvB,KAAtB,CAA4BtD,KAA5B,GAAoCoF,KAAK,IAAzC;AACA;AACD;AACD,SA7BD,MA+BA;AACCxE,cAAK0C,KAAL,CAAWiD,UAAX,GAAwB,QAAxB;AACA;AACD,QAtCD,MAuCK,IAAIL,QAAQrF,UAAR,IAAsB,IAAtB,IAA8BqF,QAAQrF,UAAR,CAAmBuB,QAAnB,IAA+B,KAAjE,EACL;AACC8D,kBAAUA,QAAQrF,UAAlB;AACA;;AAED,YAAKiF,WAAL,GAAmBI,QAAQJ,WAAR,GAAsB,KAAK9G,gBAA9C;AACA,YAAK+G,YAAL,GAAoBG,QAAQH,YAA5B;;AAEAX,YAAK,KAAKU,WAAL,GAAmB,KAAKlG,KAA7B;AACAyF,YAAK,KAAKU,YAAL,GAAoB,KAAKnG,KAA9B;AACA;AACD;;AAED,SAAIwF,MAAM,IAAN,IAAcC,MAAM,IAAxB,EACA;AACC,WAAKP,WAAL,GAAmB,IAAIa,WAAJ,CAAgB,KAAKrJ,MAAL,CAAYwD,CAA5B,EAClB,KAAKxD,MAAL,CAAYyD,CADM,EACHqF,EADG,EACCC,EADD,CAAnB;AAEA;AACD;;AAED,QAAI,KAAKP,WAAL,IAAoB,IAAxB,EACA;AACC,SAAIE,OAAO,CAAX,EACA;AACC;AACA,UAAI2B,OAAOtI,QAAQuI,cAAR,CAAuB,IAAIjB,WAAJ,CACjC,KAAKvC,MAAL,CAAYtD,CAAZ,GAAgB,KAAKgF,WAAL,CAAiB9E,KADA,EAEjC,KAAKoD,MAAL,CAAYrD,CAAZ,GAAgB,KAAK+E,WAAL,CAAiB7E,MAFA,EAGjC,KAAK6E,WAAL,CAAiB9E,KAHgB,EAGT,KAAK8E,WAAL,CAAiB7E,MAHR,CAAvB,EAIV+E,GAJU,EAIL,IAAI6B,OAAJ,CAAY,CAAZ,EAAe,CAAf,CAJK,CAAX;;AAMA,WAAKC,oBAAL,GAA4BnB,YAAYoB,aAAZ,CAA0B,KAAKjC,WAA/B,CAA5B;AACA,WAAKgC,oBAAL,CAA0BhH,CAA1B,IAA+B,KAAKsD,MAAL,CAAYtD,CAAZ,GAAgB,KAAKgH,oBAAL,CAA0B9G,KAAzE;AACA,WAAK8G,oBAAL,CAA0B/G,CAA1B,IAA+B,KAAKqD,MAAL,CAAYrD,CAAZ,GAAgB,KAAK+G,oBAAL,CAA0B7G,MAAzE;;AAEA,WAAK6E,WAAL,CAAiBhF,CAAjB,IAAsB6G,KAAK7G,CAA3B;AACA,WAAKgF,WAAL,CAAiB/E,CAAjB,IAAsB4G,KAAK5G,CAA3B;AACA,WAAK+E,WAAL,CAAiB9E,KAAjB,GAAyB2G,KAAK3G,KAA9B;AACA,WAAK8E,WAAL,CAAiB7E,MAAjB,GAA0B0G,KAAK1G,MAA/B;AACA,MAjBD,MAmBA;AACC,WAAK6E,WAAL,CAAiBhF,CAAjB,IAAsB,KAAKsD,MAAL,CAAYtD,CAAZ,GAAgB,KAAKgF,WAAL,CAAiB9E,KAAvD;AACA,WAAK8E,WAAL,CAAiB/E,CAAjB,IAAsB,KAAKqD,MAAL,CAAYrD,CAAZ,GAAgB,KAAK+E,WAAL,CAAiB7E,MAAvD;AACA,WAAK6G,oBAAL,GAA4B,IAA5B;AACA;AACD;AACD,IAnKD;;AAqKA;;;;;AAKA1K,UAAOmC,SAAP,CAAiByI,gBAAjB,GAAoC,YACpC;AACC,WAAO,CAAP;AACA,IAHD;;AAKA;;;;;AAKA5K,UAAOmC,SAAP,CAAiB0C,eAAjB,GAAmC,YACnC;AACC,WAAQ,KAAKN,KAAL,IAAc,IAAd,IAAsB,KAAKA,KAAL,CAAWsG,KAAX,IAAoB,IAA3C,GAAmD,KAAKtG,KAAL,CAAWsG,KAAX,CAAiBhG,eAAjB,EAAnD,GAAwF,CAA/F;AACA,IAHD;;AAKA;;;;;;AAMA7E,UAAOmC,SAAP,CAAiB2I,qBAAjB,GAAyC,YACzC;AACC,WAAO,CAAC,KAAKhK,UAAN,IAAoB,KAAKyD,KAAL,IAAc,IAAlC,IAA0C,KAAKA,KAAL,CAAW4B,IAAX,CAAgB4E,KAAhB,CAAsBC,KAAtB,CAA4BC,QAA5B,CAAqC,KAAK1G,KAAL,CAAW2G,IAAhD,CAAjD;AACA,IAHD;;AAKA;;;;;AAKAlL,UAAOmC,SAAP,CAAiBkC,eAAjB,GAAmC,UAASN,CAAT,EAAYL,CAAZ,EAAeC,CAAf,EAAkBO,CAAlB,EAAqBC,CAArB,EACnC;AACC7C,YAAQa,SAAR,CAAkBkC,eAAlB,CAAkCuC,KAAlC,CAAwC,IAAxC,EAA8CC,SAA9C;;AAEA9C,MAAEoH,YAAF,CAAe,KAAK9K,KAApB;AACA0D,MAAEqH,sBAAF,CAAyB,KAAKrK,UAA9B;AACAgD,MAAEsH,kBAAF,CAAqB,KAAKrK,MAA1B;AACA+C,MAAEuH,aAAF,CAAgB,KAAKhL,MAArB;AACAyD,MAAEwH,WAAF,CAAc,KAAKhL,IAAnB;AACAwD,MAAEyH,YAAF,CAAe,KAAKhL,SAApB;AACA,IAVD;;AAYA;;;;;AAKAR,UAAOmC,SAAP,CAAiBsJ,kBAAjB,GAAsC,YACtC;AACC,SAAKjH,IAAL,CAAU0C,KAAV,CAAgBwE,IAAhB,GAAuB3B,KAAKC,KAAL,CAAW,KAAK9J,MAAL,CAAYwD,CAAvB,IAA4B,IAAnD;AACA,SAAKc,IAAL,CAAU0C,KAAV,CAAgByE,GAAhB,GAAsB5B,KAAKC,KAAL,CAAW,KAAK9J,MAAL,CAAYyD,CAAvB,IAA4B,IAAlD;AACA,SAAKa,IAAL,CAAU0C,KAAV,CAAgBtD,KAAhB,GAAwB,KAAxB;AACA,SAAKY,IAAL,CAAU0C,KAAV,CAAgBrD,MAAhB,GAAyB,KAAzB;AACA,SAAKW,IAAL,CAAU0C,KAAV,CAAgB/F,QAAhB,GAA2B,SAA3B;AACA,IAPD;;AASA;;;;;AAKAnB,UAAOmC,SAAP,CAAiByJ,eAAjB,GAAmC,YACnC;AACC,QAAI1E,QAAQ,KAAK1C,IAAL,CAAU0C,KAAtB;;AAEA;AACAA,UAAMiD,UAAN,GAAmB,QAAnB;AACAjD,UAAM/F,QAAN,GAAiB,EAAjB;AACA+F,UAAMtD,KAAN,GAAc,EAAd;AACAsD,UAAMrD,MAAN,GAAe,EAAf;;AAEA,SAAKgI,WAAL;AACA,SAAKjC,UAAL,CAAgB,KAAKpF,IAArB;AACA,SAAK0B,UAAL,CAAgB,KAAK1B,IAArB,EAA4B,KAAKD,KAAL,IAAc,IAAd,IAAsB,KAAKA,KAAL,CAAW4B,IAAX,CAAgBC,OAAhB,IAA2B,IAA7E;;AAEA,SAAKsD,WAAL,GAAmB,IAAnB;AACA,SAAKC,YAAL,GAAoB,IAApB;;AAEA,QAAI5G,SAASsD,KAAT,KAAmBxD,SAASC,YAAT,IAAyB,IAAzB,IAAiCD,SAASC,YAAT,IAAyB,CAA7E,CAAJ,EACA;AACC,UAAKwD,gBAAL;AACA,KAHD,MAKA;AACC,UAAKC,mBAAL;AACA;AACD,IAzBD;;AA2BA;;;;;AAKAvG,UAAOmC,SAAP,CAAiBoE,mBAAjB,GAAuC,YACvC;AACC,QAAIuF,QAAQ,KAAKjH,eAAL,EAAZ;AACA,QAAIqC,QAAQ,KAAK1C,IAAL,CAAU0C,KAAtB;AACA,QAAI6E,KAAK,KAAK/E,MAAL,CAAYtD,CAArB;AACA,QAAIsI,KAAK,KAAKhF,MAAL,CAAYrD,CAArB;;AAEA,QAAImI,SAAS,CAAb,EACA;AACC7J,aAAQgK,gBAAR,CAAyB/E,KAAzB,EAAgC,iBAAhC,EAAoD,CAAC6E,EAAD,GAAM,GAAP,GAAc,GAAd,GAAoB,GAApB,GAA2B,CAACC,EAAD,GAAM,GAAjC,GAAwC,GAA3F;AACA/J,aAAQgK,gBAAR,CAAyB/E,KAAzB,EAAgC,WAAhC,EAA6C,eAAgB6E,KAAK,GAArB,GAA4B,GAA5B,GAAkC,GAAlC,GAAyCC,KAAK,GAA9C,GAAqD,IAArD,GAC5C,QAD4C,GACjC,KAAKxI,KAD4B,GACpB,WADoB,GACNsI,KADM,GACE,MAD/C;AAEA,KALD,MAOA;AACC7J,aAAQgK,gBAAR,CAAyB/E,KAAzB,EAAgC,iBAAhC,EAAmD,OAAnD;AACAjF,aAAQgK,gBAAR,CAAyB/E,KAAzB,EAAgC,WAAhC,EAA6C,WAAW,KAAK1D,KAAhB,GAAwB,GAAxB,GAC5C,YAD4C,GAC5BuI,KAAK,GADuB,GAChB,GADgB,GACV,GADU,GACHC,KAAK,GADF,GACS,IADtD;AAEA;;AAED9E,UAAMwE,IAAN,GAAa3B,KAAKC,KAAL,CAAW,KAAK9J,MAAL,CAAYwD,CAAZ,GAAgBqG,KAAKmC,IAAL,CAAUH,MAAO,KAAK5K,QAAL,IAAiB,MAAjB,IACxD,KAAKA,QAAL,IAAiB,OADsC,GAC3B,CAD2B,GACvB,CADiB,CAAV,CAA3B,IAC2B,IADxC;AAEA+F,UAAMyE,GAAN,GAAY5B,KAAKC,KAAL,CAAW,KAAK9J,MAAL,CAAYyD,CAAZ,GAAgBqI,MAAO,KAAK7K,QAAL,IAAiB,MAAlB,GAA4B,CAA5B,GAAgC,CAAtC,CAA3B,IAAuE,IAAnF;;AAEA,QAAI,KAAKgH,OAAL,GAAe,GAAnB,EACA;AACCjB,WAAMiB,OAAN,GAAgB,KAAKA,OAAL,GAAe,GAA/B;AACA,KAHD,MAKA;AACCjB,WAAMiB,OAAN,GAAgB,EAAhB;AACA;AACD,IAhCD;;AAkCA;;;;;AAKAnI,UAAOmC,SAAP,CAAiB0H,eAAjB,GAAmC,UAASsC,GAAT,EACnC;AACC,QAAIlK,QAAQ8C,MAAR,CAAe,KAAK9E,KAApB,CAAJ,EACA;AACCkM,SAAIC,SAAJ,GAAgB,KAAKnM,KAAL,CAAWoM,SAA3B;AACA,KAHD,MAKA;AACC,SAAIjH,MAAM,KAAKnF,KAAf;;AAEA,SAAI,KAAK+E,OAAL,IAAgBxD,YAAYyD,kBAAhC,EACA;AACC;AACAG,YAAMnD,QAAQoD,YAAR,CAAqBD,GAArB,EAA0B,KAA1B,CAAN;AACA;;AAED;AACAA,WAAMnD,QAAQqD,uBAAR,CAAgCF,GAAhC,EAAqC,mBAArC,CAAN;AACAA,WAAO,KAAK5C,gBAAN,GAA0B4C,IAAIG,OAAJ,CAAY,KAAZ,EAAmB,OAAnB,CAA1B,GAAwDH,GAA9D;AACAA,WAAM,wDAAwDA,GAAxD,GAA8D,QAApE;;AAEA+G,SAAIC,SAAJ,GAAgBhH,GAAhB;AACA;AACD,IAvBD;;AAyBA;;;;;AAKApF,UAAOmC,SAAP,CAAiBmE,gBAAjB,GAAoC,YACpC;AACC,QAAIY,QAAQ,KAAK1C,IAAL,CAAU0C,KAAtB;AACA,QAAI6E,KAAK,KAAK/E,MAAL,CAAYtD,CAArB;AACA,QAAIsI,KAAK,KAAKhF,MAAL,CAAYrD,CAArB;AACA,QAAIM,IAAI,KAAKT,KAAb;;AAEA;AACAvB,YAAQqK,UAAR,CAAmB,KAAK9H,IAAxB,EAA8B,KAAK2D,OAAnC;;AAEA;AACA,QAAIa,KAAK,CAAT;AACA,QAAIC,KAAK,CAAT;AACA,QAAIQ,KAAM,KAAKlF,KAAL,IAAc,IAAf,GAAuB,KAAKA,KAAL,CAAW4B,IAAX,CAAgBC,OAAvC,GAAiD,IAA1D;AACA,QAAI0D,UAAU,KAAKtF,IAAnB;;AAEA;AACA,QAAIiF,MAAM,IAAV,EACA;AACCA,QAAGvC,KAAH,CAAS/F,QAAT,GAAoB,EAApB;AACAsI,QAAGvC,KAAH,CAASrD,MAAT,GAAkB,EAAlB;AACA4F,QAAGvC,KAAH,CAAStD,KAAT,GAAiB,EAAjB;;AAEA,UAAKgG,UAAL,CAAgBH,EAAhB;AACA,UAAKvD,UAAL,CAAgBuD,EAAhB,EAAoB,KAApB;AACA,UAAKI,eAAL,CAAqBJ,EAArB;;AAEA,SAAIvF,IAAI6F,KAAKC,KAAL,CAAW,KAAK9J,MAAL,CAAY0D,KAAZ,GAAoB,KAAKJ,KAApC,CAAR;;AAEA,SAAI,KAAKvC,IAAL,IAAaiD,IAAI,CAArB,EACA;AACCuF,SAAGvC,KAAH,CAASiD,UAAT,GAAsB,QAAtB;AACAV,SAAGvC,KAAH,CAAS+C,QAAT,GAAoBzI,YAAY0I,SAAhC;AACAlB,WAAK9E,CAAL;;AAEA,UAAI,KAAKhD,OAAT,EACA;AACC8H,YAAKe,KAAKO,GAAL,CAAStB,EAAT,EAAa,KAAK9I,MAAL,CAAY0D,KAAzB,CAAL;AACA;;AAED6F,SAAGvC,KAAH,CAAStD,KAAT,GAAiBoF,KAAK,IAAtB;AACA,MAZD,MAcA;AACCS,SAAGvC,KAAH,CAASiD,UAAT,GAAsB,QAAtB;AACA;;AAEDL,eAAUL,EAAV;;AAEA,SAAIK,QAAQrF,UAAR,IAAsB,IAAtB,IAA8BqF,QAAQrF,UAAR,CAAmBuB,QAAnB,IAA+B,KAAjE,EACA;AACC8D,gBAAUA,QAAQrF,UAAlB;;AAEA,UAAI,KAAKxD,IAAL,IAAawI,GAAGvC,KAAH,CAAS+C,QAAT,IAAqB,YAAtC,EACA;AACCH,eAAQ5C,KAAR,CAActD,KAAd,GAAsB,MAAtB;AACA;AACD;;AAED;AACA,SAAI,CAAC,KAAK1C,OAAN,IAAiB,KAAKD,IAAtB,IAA8BiD,IAAI,CAAtC,EACA;AACC8E,WAAKc,QAAQJ,WAAR,GAAsB,KAAK9G,gBAAhC;AACA6G,SAAGvC,KAAH,CAAStD,KAAT,GAAiBoF,KAAK,IAAtB;AACA;;AAEDC,UAAKa,QAAQH,YAAR,GAAuB,CAA5B;;AAEA,SAAI5G,SAASwJ,SAAT,IAAsB,KAAKvL,MAAL,IAAe,IAArC,IAA6C,KAAKA,MAAL,IAAeQ,YAAYgL,IAA5E,EACA;AACCvD,YAAM,CAAN;AACA;AACD,KAvDD,MAwDK,IAAIa,QAAQrF,UAAR,IAAsB,IAAtB,IAA8BqF,QAAQrF,UAAR,CAAmBuB,QAAnB,IAA+B,KAAjE,EACL;AACC8D,eAAUA,QAAQrF,UAAlB;AACAwE,UAAKa,QAAQH,YAAb;AACA;;AAEDX,SAAKc,QAAQJ,WAAR,GAAsB,KAAK9G,gBAAhC;;AAEA,QAAI,KAAK1B,OAAT,EACA;AACC+H,UAAKc,KAAKO,GAAL,CAASrB,EAAT,EAAa,KAAK/I,MAAL,CAAY2D,MAAzB,CAAL;AACA;;AAED,QAAIK,IAAI,KAAKhE,MAAL,CAAY0D,KAAZ,GAAoBK,CAA5B;AACA,QAAIE,IAAI,KAAKjE,MAAL,CAAY2D,MAAZ,GAAqBI,CAA7B;;AAEA;AACA,QAAI,KAAK9C,QAAL,IAAiB,MAArB,EACA;AACC8H,UAAK9E,CAAL;AACA6E,UAAK9E,CAAL;AACA,KAJD,MAKK,IAAI,KAAK/C,QAAL,IAAiB,OAArB,EACL;AACC8H,UAAKa,QAAQ2C,YAAb;AACAzD,UAAK9E,CAAL;AACA;;AAED;AACA,SAAKwF,WAAL,GAAmBV,EAAnB;AACA,SAAKW,YAAL,GAAoBV,EAApB;;AAEA;AACA,QAAIlG,SAASwJ,SAAT,KAAuB,KAAKrL,OAAL,IAAiB,KAAKC,QAAL,IAAiB,OAAjB,IAA4BgD,IAAI,CAAxE,CAAJ,EACA;AACCA,SAAI4F,KAAKO,GAAL,CAASnG,CAAT,EAAY8E,EAAZ,CAAJ;AACA/B,WAAMrD,MAAN,GAAekG,KAAKC,KAAL,CAAW7F,CAAX,IAAgB,IAA/B;AACA,KAJD,MAMA;AACCA,SAAI8E,EAAJ;AACA;;AAED,QAAI,KAAK9H,QAAL,IAAiB,MAAjB,IAA2B,KAAKA,QAAL,IAAiB,OAAhD,EACA;AACC,SAAI,KAAKD,OAAT,EACA;AACC8H,WAAKe,KAAKO,GAAL,CAASpG,CAAT,EAAY8E,EAAZ,CAAL;AACA;;AAED9E,SAAI8E,EAAJ;;AAEA;AACA,SAAKjG,SAASwJ,SAAT,IAAsB,KAAKrL,OAA5B,IAAwC,KAAKD,IAAjD,EACA;AACCiG,YAAMtD,KAAN,GAAcmG,KAAKC,KAAL,CAAW9F,CAAX,IAAgB,IAA9B;AACA;AACD;;AAEDC,SAAKF,CAAL;AACAC,SAAKD,CAAL;;AAEA;AACA,QAAIyI,MAAM,KAAK7H,eAAL,MAA0BkF,KAAK4C,EAAL,GAAU,GAApC,CAAV;;AAEA;AACA,QAAIC,WAAWC,WAAWA,WAAW9C,KAAK+C,GAAL,CAASJ,GAAT,CAAX,EAA0BK,OAA1B,CAAkC,CAAlC,CAAX,CAAf;AACA,QAAIC,WAAWH,WAAWA,WAAW9C,KAAKkD,GAAL,CAAS,CAACP,GAAV,CAAX,EAA2BK,OAA3B,CAAmC,CAAnC,CAAX,CAAf;;AAEAL,WAAO,IAAI3C,KAAK4C,EAAhB;;AAEA,QAAID,MAAM,CAAV,EACA;AACCA,YAAO,IAAI3C,KAAK4C,EAAhB;AACA;;AAEDD,WAAO3C,KAAK4C,EAAZ;;AAEA,QAAID,MAAM3C,KAAK4C,EAAL,GAAU,CAApB,EACA;AACCD,WAAM3C,KAAK4C,EAAL,GAAUD,GAAhB;AACA;;AAED,QAAII,MAAM/C,KAAK+C,GAAL,CAASJ,GAAT,CAAV;AACA,QAAIO,MAAMlD,KAAKkD,GAAL,CAAS,CAACP,GAAV,CAAV;;AAEA,QAAIQ,KAAKhJ,IAAI,EAAE6H,KAAK,GAAP,CAAb;AACA,QAAIoB,KAAKhJ,IAAI,EAAE6H,KAAK,GAAP,CAAb;;AAEA,QAAIoB,UAAU,CAACjJ,IAAIA,IAAI2I,GAAR,GAAc5I,IAAI+I,GAAnB,IAA0B,CAA1B,GAA8BD,WAAWE,EAAzC,GAA8CN,WAAWO,EAAvE;AACA,QAAIE,WAAW,CAACnJ,IAAIA,IAAI4I,GAAR,GAAc3I,IAAI8I,GAAnB,IAA0B,CAA1B,GAA8BL,WAAWM,EAAzC,GAA8CF,WAAWG,EAAxE;;AAEA,QAAIT,OAAO,CAAX,EACA;AACC,SAAIY,IAAI,kDAAkDV,QAAlD,GAA6D,QAA7D,GACPI,QADO,GACI,QADJ,GACgB,CAACA,QADjB,GAC6B,QAD7B,GACwCJ,QADxC,GACmD,iCAD3D;;AAGA,SAAI1F,MAAMqG,MAAN,IAAgB,IAAhB,IAAwBrG,MAAMqG,MAAN,CAAa9E,MAAb,GAAsB,CAAlD,EACA;AACCvB,YAAMqG,MAAN,IAAgB,MAAMD,CAAtB;AACA,MAHD,MAKA;AACCpG,YAAMqG,MAAN,GAAeD,CAAf;AACA;AACD;;AAED;AACA,QAAItB,KAAK,CAAT;;AAEA,QAAI,KAAK7K,QAAL,IAAiB,MAAjB,IAA2B4B,SAASwJ,SAAxC,EACA;AACC,SAAI,KAAKnM,MAAL,IAAeoB,YAAYgM,SAA/B,EACA;AACCxB,YAAM,CAAN;AACA,MAHD,MAIK,IAAI,KAAK5L,MAAL,IAAeoB,YAAYiM,YAA/B,EACL;AACCzB,YAAM,CAAN;AACA,MAHI,MAKL;AACCA,YAAM,CAAN;AACA;AACD;;AAED9E,UAAMwG,IAAN,GAAazJ,CAAb;AACAiD,UAAMwE,IAAN,GAAa3B,KAAKC,KAAL,CAAW,KAAK9J,MAAL,CAAYwD,CAAZ,GAAgB2J,QAAhB,GAA2BnJ,IAAI,CAA1C,IAA+C,IAA5D;AACAgD,UAAMyE,GAAN,GAAY5B,KAAKC,KAAL,CAAW,KAAK9J,MAAL,CAAYyD,CAAZ,GAAgByJ,OAAhB,GAA0BjJ,IAAI,CAA9B,GAAkC6H,EAA7C,IAAmD,IAA/D;AACA,IA1MD;;AA4MA;;;;;AAKAhM,UAAOmC,SAAP,CAAiB0J,WAAjB,GAA+B,YAC/B;AACC,QAAI5J,QAAQ8C,MAAR,CAAe,KAAK9E,KAApB,CAAJ,EACA;AACC,UAAKuE,IAAL,CAAU4H,SAAV,GAAsB,EAAtB;AACA,UAAK5H,IAAL,CAAUmJ,WAAV,CAAsB,KAAK1N,KAA3B;AACA,KAJD,MAMA;AACC,SAAImF,MAAM,KAAKnF,KAAf;;AAEA,SAAI,KAAK+E,OAAL,IAAgBxD,YAAYyD,kBAAhC,EACA;AACCG,YAAMnD,QAAQoD,YAAR,CAAqBD,GAArB,EAA0B,KAA1B,CAAN;AACA;;AAED;AACAA,WAAMnD,QAAQqD,uBAAR,CAAgCF,GAAhC,EAAqC,iBAArC,CAAN;AACAA,WAAO,KAAK5C,gBAAN,GAA0B4C,IAAIG,OAAJ,CAAY,KAAZ,EAAmB,OAAnB,CAA1B,GAAwDH,GAA9D;AACA,SAAIwI,KAAM,KAAK7M,UAAL,IAAmB,IAAnB,IAA2B,KAAKA,UAAL,IAAmBS,YAAYgL,IAA3D,GAAmE,KAAKzL,UAAxE,GAAqF,IAA9F;AACA,SAAI8M,KAAM,KAAK7M,MAAL,IAAe,IAAf,IAAuB,KAAKA,MAAL,IAAeQ,YAAYgL,IAAnD,GAA2D,KAAKxL,MAAhE,GAAyE,IAAlF;;AAEA,SAAI,KAAKG,QAAL,IAAiB,MAAjB,IAA2B,KAAKA,QAAL,IAAiB,OAAhD,EACA;AACC,UAAIyM,MAAM,IAAV,EACA;AACC,YAAKpJ,IAAL,CAAU0C,KAAV,CAAgB4G,eAAhB,GAAkCF,EAAlC;AACA;;AAED,UAAIC,MAAM,IAAV,EACA;AACC,YAAKrJ,IAAL,CAAU0C,KAAV,CAAgBlG,MAAhB,GAAyB,eAAe6M,EAAxC;AACA;AACD,MAXD,MAaA;AACC,UAAIE,MAAM,EAAV;;AAEA,UAAIH,MAAM,IAAV,EACA;AACCG,cAAO,sBAAsBH,EAAtB,GAA2B,GAAlC;AACA;;AAED,UAAIC,MAAM,IAAV,EACA;AACCE,cAAO,sBAAsBF,EAAtB,GAA2B,GAAlC;AACA;;AAED;AACA;AACA;AACA,UAAIG,KAAMxM,YAAYyM,oBAAb,GAAsC,KAAK1N,IAAL,GAAYiB,YAAY0M,WAAzB,GAAwC,IAA7E,GACR1M,YAAY0M,WADb;AAEA9I,YAAM,wBAAwB2I,GAAxB,GAA8B,+DAA9B,GACL,mDADK,GACiDC,EADjD,GACsD,IADtD,GAC6D5I,GAD7D,GACmE,QADzE;AAEA;;AAED,UAAKZ,IAAL,CAAU4H,SAAV,GAAsBhH,GAAtB;;AAEA;AACA,SAAIgF,OAAO,KAAK5F,IAAL,CAAU6F,oBAAV,CAA+B,KAA/B,CAAX;;AAEA,SAAID,KAAK3B,MAAL,GAAc,CAAlB,EACA;AACC,UAAIjD,MAAM,KAAKnE,aAAf;;AAEA,UAAImE,OAAOhE,YAAYiE,mBAAnB,IAA0C,KAAKT,OAAL,IAAgBxD,YAAYyD,kBAA1E,EACA;AACCO,aAAM,KAAKE,gBAAL,EAAN;AACA;;AAED,UAAIF,OAAOhE,YAAYmE,kBAAnB,IAAyCH,OAAOhE,YAAYoE,kBAAhE,EACA;AACCwE,YAAKA,KAAK3B,MAAL,GAAc,CAAnB,EAAsB0F,YAAtB,CAAmC,KAAnC,EAA0C3I,GAA1C;AACA,OAHD,MAKA;AACC4E,YAAKA,KAAK3B,MAAL,GAAc,CAAnB,EAAsB2F,eAAtB,CAAsC,KAAtC;AACA;AACD;AACD;AACD,IAjFD;;AAmFA;;;;;AAKApO,UAAOmC,SAAP,CAAiByH,UAAjB,GAA8B,UAASpF,IAAT,EAC9B;AACC,QAAI0C,QAAQ1C,KAAK0C,KAAjB;;AAEAA,UAAMmH,UAAN,GAAoB7M,YAAYyM,oBAAb,GAAsC,KAAK1N,IAAL,GAAYiB,YAAY0M,WAAzB,GAAwC,IAA7E,GAAoF1M,YAAY0M,WAAnH;AACAhH,UAAMoH,QAAN,GAAiB,KAAK/N,IAAL,GAAY,IAA7B;AACA2G,UAAMqH,UAAN,GAAmB,KAAKjO,MAAxB;AACA4G,UAAMsH,aAAN,GAAsB,KAAtB;AACAtH,UAAM7G,KAAN,GAAc,KAAKA,KAAnB;;AAEA,QAAI,CAAC,KAAKG,SAAL,GAAiBgB,YAAYiN,SAA9B,KAA4CjN,YAAYiN,SAA5D,EACA;AACCvH,WAAMwH,UAAN,GAAmB,MAAnB;AACA,KAHD,MAKA;AACCxH,WAAMwH,UAAN,GAAmB,EAAnB;AACA;;AAED,QAAI,CAAC,KAAKlO,SAAL,GAAiBgB,YAAYmN,WAA9B,KAA8CnN,YAAYmN,WAA9D,EACA;AACCzH,WAAM1G,SAAN,GAAkB,QAAlB;AACA,KAHD,MAKA;AACC0G,WAAM1G,SAAN,GAAkB,EAAlB;AACA;;AAED,QAAI,CAAC,KAAKA,SAAL,GAAiBgB,YAAYoN,cAA9B,KAAiDpN,YAAYoN,cAAjE,EACA;AACC1H,WAAM2H,cAAN,GAAuB,WAAvB;AACA,KAHD,MAKA;AACC3H,WAAM2H,cAAN,GAAuB,EAAvB;AACA;;AAED,QAAI,KAAK1O,KAAL,IAAcqB,YAAYC,YAA9B,EACA;AACCyF,WAAM4H,SAAN,GAAkB,QAAlB;AACA,KAHD,MAIK,IAAI,KAAK3O,KAAL,IAAcqB,YAAYuN,WAA9B,EACL;AACC7H,WAAM4H,SAAN,GAAkB,OAAlB;AACA,KAHI,MAKL;AACC5H,WAAM4H,SAAN,GAAkB,MAAlB;AACA;AACD,IAjDD;;AAmDA;;;;;AAKA9O,UAAOmC,SAAP,CAAiB+D,UAAjB,GAA8B,UAAS1B,IAAT,EAAewK,UAAf,EAC9B;AACC,QAAI9K,IAAI6F,KAAKkF,GAAL,CAAS,CAAT,EAAYlF,KAAKC,KAAL,CAAW,KAAK9J,MAAL,CAAY0D,KAAZ,GAAoB,KAAKJ,KAApC,CAAZ,CAAR;AACA,QAAIW,IAAI4F,KAAKkF,GAAL,CAAS,CAAT,EAAYlF,KAAKC,KAAL,CAAW,KAAK9J,MAAL,CAAY2D,MAAZ,GAAqB,KAAKL,KAArC,CAAZ,CAAR;AACA,QAAI0D,QAAQ1C,KAAK0C,KAAjB;;AAEA;AACA;AACA,QAAI,KAAKhG,OAAT,EACA;AACCgG,WAAM/F,QAAN,GAAiB,QAAjB;;AAEA,SAAI,CAAC4B,SAASwJ,SAAd,EACA;AACCrF,YAAMgI,SAAN,GAAkB/K,IAAI,IAAtB;AACA+C,YAAMiI,QAAN,GAAiBjL,IAAI,IAArB;AACA,MAJD,MAMA;AACCgD,YAAMtD,KAAN,GAAcM,IAAI,IAAlB;AACA;AACD,KAbD,MAcK,IAAI,KAAK/C,QAAL,IAAiB,MAArB,EACL;AACC+F,WAAMtD,KAAN,GAAeM,IAAI,CAAL,GAAU,IAAxB;AACAgD,WAAMrD,MAAN,GAAgBM,IAAI,CAAL,GAAU,IAAzB;AACA+C,WAAM/F,QAAN,GAAiB,QAAjB;AACA,KALI,MAMA,IAAI,KAAKA,QAAL,IAAiB,OAArB,EACL;AACC+F,WAAMtD,KAAN,GAAeM,IAAI,CAAL,GAAU,IAAxB;AACAgD,WAAMgI,SAAN,GAAmB/K,IAAI,CAAL,GAAU,IAA5B;AACA+C,WAAM/F,QAAN,GAAiB,QAAjB;AACA;;AAED,QAAI,KAAKF,IAAL,IAAaiD,IAAI,CAArB,EACA;AACCgD,WAAM+C,QAAN,GAAiBzI,YAAY0I,SAA7B;AACAhD,WAAMiD,UAAN,GAAmB,QAAnB;AACAjD,WAAMtD,KAAN,GAAcM,IAAI,IAAlB;;AAEA,SAAI8K,cAAc,KAAK7N,QAAL,IAAiB,MAA/B,IAAyC,KAAKA,QAAL,IAAiB,OAA9D,EACA;AACC,UAAI2I,UAAUtF,IAAd;;AAEA,UAAIsF,QAAQrF,UAAR,IAAsB,IAAtB,IAA8BqF,QAAQrF,UAAR,CAAmBuB,QAAnB,IAA+B,KAAjE,EACA;AACC8D,iBAAUA,QAAQrF,UAAlB;;AAEA,WAAID,KAAK0C,KAAL,CAAW+C,QAAX,IAAuB,YAA3B,EACA;AACCH,gBAAQ5C,KAAR,CAActD,KAAd,GAAsB,MAAtB;AACA;AACD;;AAED,UAAI2E,MAAMuB,QAAQJ,WAAlB;;AAEA;AACA,UAAInB,OAAO,CAAX,EACA;AACC,WAAI6G,OAAO5K,KAAK6K,UAAhB;AACA7K,YAAK0C,KAAL,CAAWoI,UAAX,GAAwB,QAAxB;AACAzM,gBAAS0M,IAAT,CAAc5B,WAAd,CAA0BnJ,IAA1B;AACA+D,aAAMuB,QAAQJ,WAAd;AACAlF,YAAK0C,KAAL,CAAWoI,UAAX,GAAwB,EAAxB;AACAF,YAAKzB,WAAL,CAAiBnJ,IAAjB;AACA;;AAED+D,aAAO,CAAP;;AAEA,UAAI,KAAKrH,OAAT,EACA;AACCqH,aAAMwB,KAAKO,GAAL,CAAS/B,GAAT,EAAcrE,CAAd,CAAN;AACA;;AAEDgD,YAAMtD,KAAN,GAAc2E,MAAM,IAApB;AACA;AACD,KA1CD,MA4CA;AACCrB,WAAMiD,UAAN,GAAmB,QAAnB;AACA;AACD,IAlFD;;AAoFA;;;;;AAKAnK,UAAOmC,SAAP,CAAiBH,YAAjB,GAAgC,YAChC;AACC,SAAKgF,MAAL,GAAc/E,QAAQuN,mBAAR,CAA4B,KAAKrP,KAAjC,EAAwC,KAAKC,MAA7C,CAAd;AACA,IAHD;;AAKA;;;;;AAKAJ,UAAOmC,SAAP,CAAiBsN,UAAjB,GAA8B,YAC9B;AACC,QAAI1D,KAAK,CAAT;AACA,QAAIC,KAAK,CAAT;;AAEA,QAAI,KAAK7L,KAAL,IAAcqB,YAAYC,YAA9B,EACA;AACCsK,UAAK,CAAC,KAAKlL,WAAL,GAAmB,KAAKF,YAAzB,IAAyC,CAA9C;AACA,KAHD,MAIK,IAAI,KAAKR,KAAL,IAAcqB,YAAYuN,WAA9B,EACL;AACChD,UAAK,CAAC,KAAKpL,YAAN,GAAqB,KAAK4B,gBAA/B;AACA,KAHI,MAKL;AACCwJ,UAAK,KAAKlL,WAAL,GAAmB,KAAKyB,eAA7B;AACA;;AAED,QAAI,KAAKlC,MAAL,IAAeoB,YAAYE,YAA/B,EACA;AACCsK,UAAK,CAAC,KAAKtL,UAAL,GAAkB,KAAKE,aAAxB,IAAyC,CAA9C;AACA,KAHD,MAIK,IAAI,KAAKR,MAAL,IAAeoB,YAAYiM,YAA/B,EACL;AACCzB,UAAK,CAAC,KAAKpL,aAAN,GAAsB,KAAKyB,iBAAhC,CAAkD;AAClD,KAHI,MAKL;AACC2J,UAAK,KAAKtL,UAAL,GAAkB,KAAK0B,cAA5B;AACA;;AAED,WAAO,IAAIqI,OAAJ,CAAYsB,EAAZ,EAAgBC,EAAhB,CAAP;AACA,IAhCD;;AAkCA0D,cAAW1P,MAAX,GAAoB,OAAOA,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC2P,SAA7D","file":"mxText.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxText\n *\n * Extends <mxShape> to implement a text shape. To change vertical text from\n * bottom to top to top to bottom, the following code can be used:\n * \n * (code)\n * mxText.prototype.verticalTextRotation = 90;\n * (end)\n * \n * Constructor: mxText\n *\n * Constructs a new text shape.\n * \n * Parameters:\n * \n * value - String that represents the text to be displayed. This is stored in\n * <value>.\n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * align - Specifies the horizontal alignment. Default is ''. This is stored in\n * <align>.\n * valign - Specifies the vertical alignment. Default is ''. This is stored in\n * <valign>.\n * color - String that specifies the text color. Default is 'black'. This is\n * stored in <color>.\n * family - String that specifies the font family. Default is\n * <mxConstants.DEFAULT_FONTFAMILY>. This is stored in <family>.\n * size - Integer that specifies the font size. Default is\n * <mxConstants.DEFAULT_FONTSIZE>. This is stored in <size>.\n * fontStyle - Specifies the font style. Default is 0. This is stored in\n * <fontStyle>.\n * spacing - Integer that specifies the global spacing. Default is 2. This is\n * stored in <spacing>.\n * spacingTop - Integer that specifies the top spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingTop>.\n * spacingRight - Integer that specifies the right spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingRight>.\n * spacingBottom - Integer that specifies the bottom spacing. Default is 0.The\n * sum of the spacing and this is stored in <spacingBottom>.\n * spacingLeft - Integer that specifies the left spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingLeft>.\n * horizontal - Boolean that specifies if the label is horizontal. Default is\n * true. This is stored in <horizontal>.\n * background - String that specifies the background color. Default is null.\n * This is stored in <background>.\n * border - String that specifies the label border color. Default is null.\n * This is stored in <border>.\n * wrap - Specifies if word-wrapping should be enabled. Default is false.\n * This is stored in <wrap>.\n * clipped - Specifies if the label should be clipped. Default is false.\n * This is stored in <clipped>.\n * overflow - Value of the overflow style. Default is 'visible'.\n */\nfunction mxText(value, bounds, align, valign, color,\n\tfamily,\tsize, fontStyle, spacing, spacingTop, spacingRight,\n\tspacingBottom, spacingLeft, horizontal, background, border,\n\twrap, clipped, overflow, labelPadding, textDirection)\n{\n\tmxShape.call(this);\n\tthis.value = value;\n\tthis.bounds = bounds;\n\tthis.color = (color != null) ? color : 'black';\n\tthis.align = (align != null) ? align : mxConstants.ALIGN_CENTER;\n\tthis.valign = (valign != null) ? valign : mxConstants.ALIGN_MIDDLE;\n\tthis.family = (family != null) ? family : mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = (size != null) ? size : mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = (fontStyle != null) ? fontStyle : mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = parseInt(spacing || 2);\n\tthis.spacingTop = this.spacing + parseInt(spacingTop || 0);\n\tthis.spacingRight = this.spacing + parseInt(spacingRight || 0);\n\tthis.spacingBottom = this.spacing + parseInt(spacingBottom || 0);\n\tthis.spacingLeft = this.spacing + parseInt(spacingLeft || 0);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.background = background;\n\tthis.border = border;\n\tthis.wrap = (wrap != null) ? wrap : false;\n\tthis.clipped = (clipped != null) ? clipped : false;\n\tthis.overflow = (overflow != null) ? overflow : 'visible';\n\tthis.labelPadding = (labelPadding != null) ? labelPadding : 0;\n\tthis.textDirection = textDirection;\n\tthis.rotation = 0;\n\tthis.updateMargin();\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxText, mxShape);\n\n/**\n * Variable: baseSpacingTop\n * \n * Specifies the spacing to be added to the top spacing. Default is 0. Use the\n * value 5 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingTop = 0;\n\n/**\n * Variable: baseSpacingBottom\n * \n * Specifies the spacing to be added to the bottom spacing. Default is 0. Use the\n * value 1 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingBottom = 0;\n\n/**\n * Variable: baseSpacingLeft\n * \n * Specifies the spacing to be added to the left spacing. Default is 0.\n */\nmxText.prototype.baseSpacingLeft = 0;\n\n/**\n * Variable: baseSpacingRight\n * \n * Specifies the spacing to be added to the right spacing. Default is 0.\n */\nmxText.prototype.baseSpacingRight = 0;\n\n/**\n * Variable: replaceLinefeeds\n * \n * Specifies if linefeeds in HTML labels should be replaced with BR tags.\n * Default is true.\n */\nmxText.prototype.replaceLinefeeds = true;\n\n/**\n * Variable: verticalTextRotation\n * \n * Rotation for vertical text. Default is -90 (bottom to top).\n */\nmxText.prototype.verticalTextRotation = -90;\n\n/**\n * Variable: ignoreClippedStringSize\n * \n * Specifies if the string size should be measured in <updateBoundingBox> if\n * the label is clipped and the label position is center and middle. If this is\n * true, then the bounding box will be set to <bounds>. Default is true.\n * <ignoreStringSize> has precedence over this switch.\n */\nmxText.prototype.ignoreClippedStringSize = true;\n\n/**\n * Variable: ignoreStringSize\n * \n * Specifies if the actual string size should be measured. If disabled the\n * boundingBox will not ignore the actual size of the string, otherwise\n * <bounds> will be used instead. Default is false.\n */\nmxText.prototype.ignoreStringSize = false;\n\n/**\n * Variable: textWidthPadding\n * \n * Specifies the padding to be added to the text width for the bounding box.\n * This is needed to make sure no clipping is applied to borders. Default is 4\n * for IE 8 standards mode and 3 for all others.\n */\nmxText.prototype.textWidthPadding = (document.documentMode == 8 && !mxClient.IS_EM) ? 4 : 3;\n\n/**\n * Variable: lastValue\n * \n * Contains the last rendered text value. Used for caching.\n */\nmxText.prototype.lastValue = null;\n\n/**\n * Variable: cacheEnabled\n * \n * Specifies if caching for HTML labels should be enabled. Default is true.\n */\nmxText.prototype.cacheEnabled = true;\n\n/**\n * Function: isParseVml\n * \n * Text shapes do not contain VML markup and do not need to be parsed. This\n * method returns false to speed up rendering in IE8.\n */\nmxText.prototype.isParseVml = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation returns\n * true if the browser is not in IE8 standards mode.\n */\nmxText.prototype.isHtmlAllowed = function()\n{\n\treturn document.documentMode != 8 || mxClient.IS_EM;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxText.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxText.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height));\n};\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxText.prototype.paint = function(c, update)\n{\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\n\tvar unscaledWidth = (this.state != null) ? this.state.unscaledWidth : null;\n\n\tif (update)\n\t{\n\t\tif (this.node.firstChild != null && (unscaledWidth == null ||\n\t\t\tthis.lastUnscaledWidth != unscaledWidth))\n\t\t{\n\t\t\tc.invalidateCachedOffsetSize(this.node);\n\t\t}\n\n\t\tc.updateText(x, y, w, h, this.align, this.valign, this.wrap, this.overflow,\n\t\t\t\tthis.clipped, this.getTextRotation(), this.node);\n\t}\n\telse\n\t{\n\t\t// Checks if text contains HTML markup\n\t\tvar realHtml = mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML;\n\t\t\n\t\t// Always renders labels as HTML in VML\n\t\tvar fmt = (realHtml || c instanceof mxVmlCanvas2D) ? 'html' : '';\n\t\tvar val = this.value;\n\t\t\n\t\tif (!realHtml && fmt == 'html')\n\t\t{\n\t\t\tval =  mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\tif (fmt == 'html' && !mxUtils.isNode(this.value))\n\t\t{\n\t\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\t\t\t\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = (!mxUtils.isNode(this.value) && this.replaceLinefeeds && fmt == 'html') ?\n\t\t\tval.replace(/\\n/g, '<br/>') : val;\n\t\t\t\n\t\tvar dir = this.textDirection;\n\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && !realHtml)\n\t\t{\n\t\t\tdir = this.getAutoDirection();\n\t\t}\n\t\t\n\t\tif (dir != mxConstants.TEXT_DIRECTION_LTR && dir != mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tdir = null;\n\t\t}\n\t\n\t\tc.text(x, y, w, h, val, this.align, this.valign, this.wrap, fmt, this.overflow,\n\t\t\tthis.clipped, this.getTextRotation(), dir);\n\t}\n\t\n\t// Needs to invalidate the cached offset widths if the geometry changes\n\tthis.lastUnscaledWidth = unscaledWidth;\n};\n\n/**\n * Function: redraw\n * \n * Renders the text using the given DOM nodes.\n */\nmxText.prototype.redraw = function()\n{\n\tif (this.visible && this.checkBounds() && this.cacheEnabled && this.lastValue == this.value &&\n\t\t(mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML))\n\t{\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\n\t\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t\t\t{\n\t\t\t\tthis.updateHtmlFilter();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.updateHtmlTransform();\n\t\t\t}\n\t\t\t\n\t\t\tthis.updateBoundingBox();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar canvas = this.createCanvas();\n\n\t\t\tif (canvas != null && canvas.updateText != null &&\n\t\t\t\tcanvas.invalidateCachedOffsetSize != null)\n\t\t\t{\n\t\t\t\tthis.paint(canvas, true);\n\t\t\t\tthis.destroyCanvas(canvas);\n\t\t\t\tthis.updateBoundingBox();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Fallback if canvas does not support updateText (VML)\n\t\t\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\n\t\tif (mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tthis.lastValue = this.value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.lastValue = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxText.prototype.resetStyles = function()\n{\n\tmxShape.prototype.resetStyles.apply(this, arguments);\n\t\n\tthis.color = 'black';\n\tthis.align = mxConstants.ALIGN_CENTER;\n\tthis.valign = mxConstants.ALIGN_MIDDLE;\n\tthis.family = mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = 2;\n\tthis.spacingTop = 2;\n\tthis.spacingRight = 2;\n\tthis.spacingBottom = 2;\n\tthis.spacingLeft = 2;\n\tthis.horizontal = true;\n\tdelete this.background;\n\tdelete this.border;\n\tthis.textDirection = mxConstants.DEFAULT_TEXT_DIRECTION;\n\tdelete this.margin;\n};\n\n/**\n * Function: apply\n * \n * Extends mxShape to update the text styles.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxText.prototype.apply = function(state)\n{\n\tvar old = this.spacing;\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.fontStyle = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSTYLE, this.fontStyle);\n\t\tthis.family = mxUtils.getValue(this.style, mxConstants.STYLE_FONTFAMILY, this.family);\n\t\tthis.size = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSIZE, this.size);\n\t\tthis.color = mxUtils.getValue(this.style, mxConstants.STYLE_FONTCOLOR, this.color);\n\t\tthis.align = mxUtils.getValue(this.style, mxConstants.STYLE_ALIGN, this.align);\n\t\tthis.valign = mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_ALIGN, this.valign);\n\t\tthis.spacing = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing));\n\t\tthis.spacingTop = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_TOP, this.spacingTop - old)) + this.spacing;\n\t\tthis.spacingRight = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_RIGHT, this.spacingRight - old)) + this.spacing;\n\t\tthis.spacingBottom = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_BOTTOM, this.spacingBottom - old)) + this.spacing;\n\t\tthis.spacingLeft = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_LEFT, this.spacingLeft - old)) + this.spacing;\n\t\tthis.horizontal = mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, this.horizontal);\n\t\tthis.background = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BACKGROUNDCOLOR, this.background);\n\t\tthis.border = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BORDERCOLOR, this.border);\n\t\tthis.textDirection = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_OPACITY, 100);\n\t\tthis.updateMargin();\n\t}\n\t\n\tthis.flipV = null;\n\tthis.flipH = null;\n};\n\n/**\n * Function: getAutoDirection\n * \n * Used to determine the automatic text direction. Returns\n * <mxConstants.TEXT_DIRECTION_LTR> or <mxConstants.TEXT_DIRECTION_RTL>\n * depending on the contents of <value>. This is not invoked for HTML, wrapped\n * content or if <value> is a DOM node.\n */\nmxText.prototype.getAutoDirection = function()\n{\n\t// Looks for strong (directional) characters\n\tvar tmp = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(this.value);\n\t\n\t// Returns the direction defined by the character\n\treturn (tmp != null && tmp.length > 0 && tmp[0] > 'z') ?\n\t\tmxConstants.TEXT_DIRECTION_RTL : mxConstants.TEXT_DIRECTION_LTR;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using the given node and position.\n */\nmxText.prototype.updateBoundingBox = function()\n{\n\tvar node = this.node;\n\tthis.boundingBox = this.bounds.clone();\n\tvar rot = this.getTextRotation();\n\t\n\tvar h = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER) : null;\n\tvar v = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE) : null;\n\n\tif (!this.ignoreStringSize && node != null && this.overflow != 'fill' && (!this.clipped ||\n\t\t!this.ignoreClippedStringSize || h != mxConstants.ALIGN_CENTER || v != mxConstants.ALIGN_MIDDLE))\n\t{\n\t\tvar ow = null;\n\t\tvar oh = null;\n\t\t\n\t\tif (node.ownerSVGElement != null)\n\t\t{\n\t\t\tif (node.firstChild != null && node.firstChild.firstChild != null &&\n\t\t\t\tnode.firstChild.firstChild.nodeName == 'foreignObject')\n\t\t\t{\n\t\t\t\tnode = node.firstChild.firstChild;\n\t\t\t\tow = parseInt(node.getAttribute('width')) * this.scale;\n\t\t\t\toh = parseInt(node.getAttribute('height')) * this.scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tvar b = node.getBBox();\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for bounding box of empty string\n\t\t\t\t\tif (typeof(this.value) == 'string' && mxUtils.trim(this.value) == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse if (b.width == 0 && b.height == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// Ignores NS_ERROR_FAILURE in FF if container display is none.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\n\t\t\t// Use cached offset size\n\t\t\tif (this.offsetWidth != null && this.offsetHeight != null)\n\t\t\t{\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Cannot get node size while container hidden so a\n\t\t\t\t// shared temporary DIV is used for text measuring\n\t\t\t\tif (td != null)\n\t\t\t\t{\n\t\t\t\t\tthis.updateFont(td);\n\t\t\t\t\tthis.updateSize(td, false);\n\t\t\t\t\tthis.updateInnerHtml(td);\n\n\t\t\t\t\tnode = td;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar sizeDiv = node;\n\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t\t{\n\t\t\t\t\tvar w = Math.round(this.bounds.width / this.scale);\n\t\n\t\t\t\t\tif (this.wrap && w > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\t\t\tnode.style.whiteSpace = 'normal';\n\n\t\t\t\t\t\tif (node.style.wordWrap != 'break-word')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Innermost DIV is used for measuring text\n\t\t\t\t\t\t\tvar divs = sizeDiv.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (divs.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsizeDiv = divs[divs.length - 1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tow = sizeDiv.offsetWidth + 2;\n\t\t\t\t\t\t\tdivs = this.node.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.clipped)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tow = Math.min(w, ow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Second last DIV width must be updated in DOM tree\n\t\t\t\t\t\t\tif (divs.length > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdivs[divs.length - 2].style.width = ow + 'px';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.whiteSpace = 'nowrap';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t}\n\n\t\t\t\tthis.offsetWidth = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\t\tthis.offsetHeight = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t}\n\n\t\tif (ow != null && oh != null)\n\t\t{\t\n\t\t\tthis.boundingBox = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y, ow, oh);\n\t\t}\n\t}\n\n\tif (this.boundingBox != null)\n\t{\n\t\tif (rot != 0)\n\t\t{\n\t\t\t// Accounts for pre-rotated x and y\n\t\t\tvar bbox = mxUtils.getBoundingBox(new mxRectangle(\n\t\t\t\tthis.margin.x * this.boundingBox.width,\n\t\t\t\tthis.margin.y * this.boundingBox.height,\n\t\t\t\tthis.boundingBox.width, this.boundingBox.height),\n\t\t\t\trot, new mxPoint(0, 0));\n\t\t\t\n\t\t\tthis.unrotatedBoundingBox = mxRectangle.fromRectangle(this.boundingBox);\n\t\t\tthis.unrotatedBoundingBox.x += this.margin.x * this.unrotatedBoundingBox.width;\n\t\t\tthis.unrotatedBoundingBox.y += this.margin.y * this.unrotatedBoundingBox.height;\n\t\t\t\n\t\t\tthis.boundingBox.x += bbox.x;\n\t\t\tthis.boundingBox.y += bbox.y;\n\t\t\tthis.boundingBox.width = bbox.width;\n\t\t\tthis.boundingBox.height = bbox.height;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.boundingBox.x += this.margin.x * this.boundingBox.width;\n\t\t\tthis.boundingBox.y += this.margin.y * this.boundingBox.height;\n\t\t\tthis.unrotatedBoundingBox = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns 0 to avoid using rotation in the canvas via updateTransform.\n */\nmxText.prototype.getShapeRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label of the corresponding shape.\n */\nmxText.prototype.getTextRotation = function()\n{\n\treturn (this.state != null && this.state.shape != null) ? this.state.shape.getTextRotation() : 0;\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Inverts the bounds if <mxShape.isBoundsInverted> returns true or if the\n * horizontal style is false.\n */\nmxText.prototype.isPaintBoundsInverted = function()\n{\n\treturn !this.horizontal && this.state != null && this.state.view.graph.model.isVertex(this.state.cell);\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxText.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tmxShape.prototype.configureCanvas.apply(this, arguments);\n\t\n\tc.setFontColor(this.color);\n\tc.setFontBackgroundColor(this.background);\n\tc.setFontBorderColor(this.border);\n\tc.setFontFamily(this.family);\n\tc.setFontSize(this.size);\n\tc.setFontStyle(this.fontStyle);\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Sets the width and height of the container to 1px.\n */\nmxText.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = '1px';\n\tthis.node.style.height = '1px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: redrawHtmlShape\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.redrawHtmlShape = function()\n{\n\tvar style = this.node.style;\n\n\t// Resets CSS styles\n\tstyle.whiteSpace = 'normal';\n\tstyle.overflow = '';\n\tstyle.width = '';\n\tstyle.height = '';\n\t\n\tthis.updateValue();\n\tthis.updateFont(this.node);\n\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\t\n\tthis.offsetWidth = null;\n\tthis.offsetHeight = null;\n\n\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t{\n\t\tthis.updateHtmlFilter();\n\t}\n\telse\n\t{\n\t\tthis.updateHtmlTransform();\n\t}\n};\n\n/**\n * Function: updateHtmlTransform\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateHtmlTransform = function()\n{\n\tvar theta = this.getTextRotation();\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\t\n\tif (theta != 0)\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', (-dx * 100) + '%' + ' ' + (-dy * 100) + '%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%)' +\n\t\t\t'scale(' + this.scale + ') rotate(' + theta + 'deg)');\n\t}\n\telse\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', '0% 0%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'scale(' + this.scale + ')' +\n\t\t\t'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%)');\n\t}\n\n\tstyle.left = Math.round(this.bounds.x - Math.ceil(dx * ((this.overflow != 'fill' &&\n\t\tthis.overflow != 'width') ? 3 : 1))) + 'px';\n\tstyle.top = Math.round(this.bounds.y - dy * ((this.overflow != 'fill') ? 3 : 1)) + 'px';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tstyle.opacity = this.opacity / 100;\n\t}\n\telse\n\t{\n\t\tstyle.opacity = '';\n\t}\n};\n\n/**\n * Function: setInnerHtml\n * \n * Sets the inner HTML of the given element to the <value>.\n */\nmxText.prototype.updateInnerHtml = function(elt)\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\telt.innerHTML = this.value.outerHTML;\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\t// LATER: Can be cached in updateValue\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div>&nbsp;</div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tval = '<div style=\"display:inline-block;_display:inline;\">' + val + '</div>';\n\t\t\n\t\telt.innerHTML = val;\n\t}\n};\n\n/**\n * Function: updateHtmlFilter\n *\n * Rotated text rendering quality is bad for IE9 quirks/IE8 standards\n */\nmxText.prototype.updateHtmlFilter = function()\n{\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\tvar s = this.scale;\n\t\n\t// Resets filter before getting offsetWidth\n\tmxUtils.setOpacity(this.node, this.opacity);\n\t\n\t// Adds 1 to match table height in 1.x\n\tvar ow = 0;\n\tvar oh = 0;\n\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\tvar sizeDiv = this.node;\n\t\n\t// Fallback for hidden text rendering in IE quirks mode\n\tif (td != null)\n\t{\n\t\ttd.style.overflow = '';\n\t\ttd.style.height = '';\n\t\ttd.style.width = '';\n\t\t\n\t\tthis.updateFont(td);\n\t\tthis.updateSize(td, false);\n\t\tthis.updateInnerHtml(td);\n\t\t\n\t\tvar w = Math.round(this.bounds.width / this.scale);\n\n\t\tif (this.wrap && w > 0)\n\t\t{\n\t\t\ttd.style.whiteSpace = 'normal';\n\t\t\ttd.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\tow = w;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\tow = Math.min(ow, this.bounds.width);\n\t\t\t}\n\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttd.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\tsizeDiv = td;\n\t\t\n\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t{\n\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\n\t\t\tif (this.wrap && td.style.wordWrap == 'break-word')\n\t\t\t{\n\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t}\n\t\t}\n\n\t\t// Required to update the height of the text box after wrapping width is known \n\t\tif (!this.clipped && this.wrap && w > 0)\n\t\t{\n\t\t\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\t\n\t\toh = sizeDiv.offsetHeight + 2;\n\t\t\n\t\tif (mxClient.IS_QUIRKS && this.border != null && this.border != mxConstants.NONE)\n\t\t{\n\t\t\toh += 3;\n\t\t}\n\t}\n\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t{\n\t\tsizeDiv = sizeDiv.firstChild;\n\t\toh = sizeDiv.offsetHeight;\n\t}\n\n\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\n\tif (this.clipped)\n\t{\n\t\toh = Math.min(oh, this.bounds.height);\n\t}\n\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\t// Handles special case for live preview with no wrapper DIV and no textDiv\n\tif (this.overflow == 'fill')\n\t{\n\t\toh = h;\n\t\tow = w;\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\toh = sizeDiv.scrollHeight;\n\t\tow = w;\n\t}\n\t\n\t// Stores for later use\n\tthis.offsetWidth = ow;\n\tthis.offsetHeight = oh;\n\t\n\t// Simulates max-height CSS in quirks mode\n\tif (mxClient.IS_QUIRKS && (this.clipped || (this.overflow == 'width' && h > 0)))\n\t{\n\t\th = Math.min(h, oh);\n\t\tstyle.height = Math.round(h) + 'px';\n\t}\n\telse\n\t{\n\t\th = oh;\n\t}\n\n\tif (this.overflow != 'fill' && this.overflow != 'width')\n\t{\n\t\tif (this.clipped)\n\t\t{\n\t\t\tow = Math.min(w, ow);\n\t\t}\n\t\t\n\t\tw = ow;\n\n\t\t// Simulates max-width CSS in quirks mode\n\t\tif ((mxClient.IS_QUIRKS && this.clipped) || this.wrap)\n\t\t{\n\t\t\tstyle.width = Math.round(w) + 'px';\n\t\t}\n\t}\n\n\th *= s;\n\tw *= s;\n\t\n\t// Rotation case is handled via VML canvas\n\tvar rad = this.getTextRotation() * (Math.PI / 180);\n\t\n\t// Precalculate cos and sin for the rotation\n\tvar real_cos = parseFloat(parseFloat(Math.cos(rad)).toFixed(8));\n\tvar real_sin = parseFloat(parseFloat(Math.sin(-rad)).toFixed(8));\n\n\trad %= 2 * Math.PI;\n\t\n\tif (rad < 0)\n\t{\n\t\trad += 2 * Math.PI;\n\t}\n\t\n\trad %= Math.PI;\n\t\n\tif (rad > Math.PI / 2)\n\t{\n\t\trad = Math.PI - rad;\n\t}\n\t\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(-rad);\n\n\tvar tx = w * -(dx + 0.5);\n\tvar ty = h * -(dy + 0.5);\n\n\tvar top_fix = (h - h * cos + w * sin) / 2 + real_sin * tx - real_cos * ty;\n\tvar left_fix = (w - w * cos + h * sin) / 2 - real_cos * tx - real_sin * ty;\n\t\n\tif (rad != 0)\n\t{\n\t\tvar f = 'progid:DXImageTransform.Microsoft.Matrix(M11=' + real_cos + ', M12='+\n\t\t\treal_sin + ', M21=' + (-real_sin) + ', M22=' + real_cos + ', sizingMethod=\\'auto expand\\')';\n\t\t\n\t\tif (style.filter != null && style.filter.length > 0)\n\t\t{\n\t\t\tstyle.filter += ' ' + f;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.filter = f;\n\t\t}\n\t}\n\t\n\t// Workaround for rendering offsets\n\tvar dy = 0;\n\t\n\tif (this.overflow != 'fill' && mxClient.IS_QUIRKS)\n\t{\n\t\tif (this.valign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tdy -= 1;\n\t\t}\n\t\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy += 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdy += 1;\n\t\t}\n\t}\n\n\tstyle.zoom = s;\n\tstyle.left = Math.round(this.bounds.x + left_fix - w / 2) + 'px';\n\tstyle.top = Math.round(this.bounds.y + top_fix - h / 2 + dy) + 'px';\n};\n\n/**\n * Function: updateValue\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateValue = function()\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\tthis.node.innerHTML = '';\n\t\tthis.node.appendChild(this.value);\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tvar bg = (this.background != null && this.background != mxConstants.NONE) ? this.background : null;\n\t\tvar bd = (this.border != null && this.border != mxConstants.NONE) ? this.border : null;\n\n\t\tif (this.overflow == 'fill' || this.overflow == 'width')\n\t\t{\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tthis.node.style.backgroundColor = bg;\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tthis.node.style.border = '1px solid ' + bd;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar css = '';\n\t\t\t\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tcss += 'background-color:' + bg + ';';\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tcss += 'border:1px solid ' + bd + ';';\n\t\t\t}\n\t\t\t\n\t\t\t// Wrapper DIV for background, zoom needed for inline in quirks\n\t\t\t// and to measure wrapped font sizes in all browsers\n\t\t\t// FIXME: Background size in quirks mode for wrapped text\n\t\t\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' :\n\t\t\t\tmxConstants.LINE_HEIGHT;\n\t\t\tval = '<div style=\"zoom:1;' + css + 'display:inline-block;_display:inline;text-decoration:inherit;' +\n\t\t\t\t'padding-bottom:1px;padding-right:1px;line-height:' + lh + '\">' + val + '</div>';\n\t\t}\n\n\t\tthis.node.innerHTML = val;\n\t\t\n\t\t// Sets text direction\n\t\tvar divs = this.node.getElementsByTagName('div');\n\t\t\n\t\tif (divs.length > 0)\n\t\t{\n\t\t\tvar dir = this.textDirection;\n\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t\t{\n\t\t\t\tdir = this.getAutoDirection();\n\t\t\t}\n\t\t\t\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].setAttribute('dir', dir);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].removeAttribute('dir');\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: updateFont\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateFont = function(node)\n{\n\tvar style = node.style;\n\t\n\tstyle.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\tstyle.fontSize = this.size + 'px';\n\tstyle.fontFamily = this.family;\n\tstyle.verticalAlign = 'top';\n\tstyle.color = this.color;\n\t\n\tif ((this.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle.fontWeight = 'bold';\n\t}\n\telse\n\t{\n\t\tstyle.fontWeight = '';\n\t}\n\n\tif ((this.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle.fontStyle = 'italic';\n\t}\n\telse\n\t{\n\t\tstyle.fontStyle = '';\n\t}\n\t\n\tif ((this.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle.textDecoration = 'underline';\n\t}\n\telse\n\t{\n\t\tstyle.textDecoration = '';\n\t}\n\t\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tstyle.textAlign = 'center';\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstyle.textAlign = 'right';\n\t}\n\telse\n\t{\n\t\tstyle.textAlign = 'left';\n\t}\n};\n\n/**\n * Function: updateSize\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateSize = function(node, enableWrap)\n{\n\tvar w = Math.max(0, Math.round(this.bounds.width / this.scale));\n\tvar h = Math.max(0, Math.round(this.bounds.height / this.scale));\n\tvar style = node.style;\n\t\n\t// NOTE: Do not use maxWidth here because wrapping will\n\t// go wrong if the cell is outside of the viewable area\n\tif (this.clipped)\n\t{\n\t\tstyle.overflow = 'hidden';\n\t\t\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tstyle.maxHeight = h + 'px';\n\t\t\tstyle.maxWidth = w + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.width = w + 'px';\n\t\t}\n\t}\n\telse if (this.overflow == 'fill')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.height = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.maxHeight = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\t\n\tif (this.wrap && w > 0)\n\t{\n\t\tstyle.wordWrap = mxConstants.WORD_WRAP;\n\t\tstyle.whiteSpace = 'normal';\n\t\tstyle.width = w + 'px';\n\n\t\tif (enableWrap && this.overflow != 'fill' && this.overflow != 'width')\n\t\t{\n\t\t\tvar sizeDiv = node;\n\t\t\t\n\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t{\n\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t\n\t\t\t\tif (node.style.wordWrap == 'break-word')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar tmp = sizeDiv.offsetWidth;\n\t\t\t\n\t\t\t// Workaround for text measuring in hidden containers\n\t\t\tif (tmp == 0)\n\t\t\t{\n\t\t\t\tvar prev = node.parentNode;\n\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\tdocument.body.appendChild(node);\n\t\t\t\ttmp = sizeDiv.offsetWidth;\n\t\t\t\tnode.style.visibility = '';\n\t\t\t\tprev.appendChild(node);\n\t\t\t}\n\n\t\t\ttmp += 3;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\ttmp = Math.min(tmp, w);\n\t\t\t}\n\t\t\t\n\t\t\tstyle.width = tmp + 'px';\n\t\t}\n\t}\n\telse\n\t{\n\t\tstyle.whiteSpace = 'nowrap';\n\t}\n};\n\n/**\n * Function: getMargin\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateMargin = function()\n{\n\tthis.margin = mxUtils.getAlignmentAsPoint(this.align, this.valign);\n};\n\n/**\n * Function: getSpacing\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.getSpacing = function()\n{\n\tvar dx = 0;\n\tvar dy = 0;\n\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tdx = (this.spacingLeft - this.spacingRight) / 2;\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tdx = -this.spacingRight - this.baseSpacingRight;\n\t}\n\telse\n\t{\n\t\tdx = this.spacingLeft + this.baseSpacingLeft;\n\t}\n\n\tif (this.valign == mxConstants.ALIGN_MIDDLE)\n\t{\n\t\tdy = (this.spacingTop - this.spacingBottom) / 2;\n\t}\n\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tdy = -this.spacingBottom - this.baseSpacingBottom;;\n\t}\n\telse\n\t{\n\t\tdy = this.spacingTop + this.baseSpacingTop;\n\t}\n\t\n\treturn new mxPoint(dx, dy);\n};\n\n__mxOutput.mxText = typeof mxText !== 'undefined' ? mxText : undefined;\n"]}