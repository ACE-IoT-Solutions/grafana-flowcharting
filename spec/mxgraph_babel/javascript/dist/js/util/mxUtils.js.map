{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/util/mxUtils.js"],"names":["mxUtils","errorResource","mxClient","language","closeResource","errorImage","imageBasePath","removeCursors","element","style","cursor","children","childNodes","childCount","length","i","getCurrentStyle","IS_IE","document","documentMode","currentStyle","window","getComputedStyle","parseCssNumber","value","parseFloat","isNaN","setPrefixedStyle","prefix","IS_OT","IS_SF","IS_GC","IS_MT","name","substring","toUpperCase","hasScrollbars","node","overflow","bind","scope","funct","apply","arguments","eval","expr","result","indexOf","_mxJavaScriptExpression","e","mxLog","warn","message","findNode","attr","nodeType","mxConstants","NODETYPE_ELEMENT","tmp","getAttribute","firstChild","nextSibling","getFunctionName","f","str","trim","toString","test","ltrim","idx2","array","obj","forEach","fn","remove","index","splice","key","isNode","nodeName","attributeName","attributeValue","toLowerCase","isAncestorNode","ancestor","child","parent","parentNode","getChildNodes","push","importNode","doc","allChildren","newNode","createElement","attributes","setAttribute","appendChild","createTextNode","createXmlDocument","implementation","createDocument","ActiveXObject","parseXml","DOMParser","xml","parser","parseFromString","async","validateOnParse","resolveExternals","loadXML","clearSelection","selection","empty","getSelection","removeAllRanges","getPrettyXml","tab","indent","NODETYPE_TEXT","getTextContent","htmlEntities","attrs","val","join","removeWhitespace","before","previousSibling","next","text","removeChild","s","newline","String","replace","isVml","tagUrn","getXml","linefeed","XMLSerializer","xmlSerializer","serializeToString","extractTextWithWhitespace","elems","blocks","ret","doExtract","elts","innerHTML","elem","nodeValue","replaceTrailingNewlines","pattern","postfix","charAt","innerText","undefined","textContent","setTextContent","getInnerHtml","serializer","getOuterHtml","outerHTML","write","ownerDocument","writeln","br","count","button","label","mxEvent","addListener","evt","para","p","addTransparentBackgroundFilter","filter","linkAction","editor","action","pad","link","execute","linkInvoke","functName","arg","a","color","textDecoration","paddingLeft","fit","left","parseInt","offsetLeft","width","offsetWidth","offset","getDocumentScrollOrigin","sl","x","st","y","b","body","d","documentElement","right","clientWidth","Math","max","top","offsetTop","height","offsetHeight","bottom","clientHeight","load","url","req","mxXmlRequest","send","get","onload","onerror","binary","timeout","ontimeout","setBinary","getAll","urls","remain","errors","err","status","getStatus","post","params","submit","target","simulate","loadInto","onreadystatechange","readyState","addEventListener","getValue","defaultValue","getNumber","Number","getColor","NONE","clone","transients","shallow","constructor","mxObjectIdentity","FIELD_NAME","equalPoints","equals","equalEntries","removeDuplicates","arr","dict","mxDictionary","put","extend","ctor","superCtor","prototype","output","toRadians","deg","PI","toDegree","rad","arcToCurves","x0","y0","r1","r2","angle","largeArcFlag","sweepFlag","fS","psai","abs","ctx","cty","cpsi","cos","spsi","sin","rxd","ryd","rxdd","rydd","r1x","r2y","lamda","sds","sqrt","seif","txd","tyd","tx","ty","atan2","s1","dr","sse","seg","ceil","segr","t","cpsir1","cpsir2","spsir1","spsir2","mc","ms","x2","y2","x3","y3","n","dx","dy","getBoundingBox","rect","rotation","cx","mxPoint","p1","p2","p3","p4","getRotatedPoint","mxRectangle","add","pt","c","x1","y1","getPortConstraints","terminal","edge","source","STYLE_PORT_CONSTRAINT","STYLE_SOURCE_PORT_CONSTRAINT","STYLE_TARGET_PORT_CONSTRAINT","directions","returnValue","DIRECTION_MASK_NONE","constraintRotationEnabled","STYLE_PORT_CONSTRAINT_ROTATION","STYLE_ROTATION","quad","DIRECTION_NORTH","DIRECTION_MASK_NORTH","DIRECTION_MASK_EAST","DIRECTION_MASK_SOUTH","DIRECTION_MASK_WEST","DIRECTION_WEST","DIRECTION_SOUTH","DIRECTION_EAST","reversePortConstraints","constraint","findNearestSegment","state","absolutePoints","last","min","current","dist","ptSegDistSq","getDirectedBounds","m","flipH","flipV","STYLE_DIRECTION","STYLE_FLIPH","STYLE_FLIPV","round","m2","fromRectangle","getPerimeterPoint","pts","center","point","intersection","ip","distSq","rectangleIntersectsSegment","bounds","minX","maxX","minY","maxY","contains","intersects","tw","th","rw","rh","rx","ry","intersectsHotspot","hotspot","getCenterX","cy","getCenterY","w","h","start","STYLE_STARTSIZE","view","scale","STYLE_HORIZONTAL","alpha","getOffset","container","scrollOffset","fixed","position","r","getBoundingClientRect","IS_QUIRKS","scrollLeft","scrollTop","wnd","defaultView","parentWindow","pageXOffset","pageYOffset","getScrollOrigin","includeAncestors","includeDocument","origin","convertPoint","chars","RegExp","rtrim","isNumeric","isFinite","isInteger","mod","denom","nume_a","nume_b","ua","ub","px","py","dotprod","projlenSq","lenSq","ptLineDist","relativeCcw","ccw","animateChanges","graph","changes","mxEffects","cascadeOpacity","cell","opacity","fadeOut","from","step","delay","isEnabled","setOpacity","createImage","src","imageNode","IS_IE6","compatMode","VML_PREFIX","borderStyle","sortCells","cells","ascending","lookup","sort","o1","o2","mxCellPath","create","split","PATH_SEPARATOR","comp","compare","getStylename","pairs","stylename","getStylenames","indexOfStylename","tokens","pos","addStylename","removeStylename","removeAllStylenames","setCellStyles","model","beginUpdate","setStyle","getStyle","endUpdate","isValue","sep","setCellStyleFlags","flag","setStyleFlag","cont","getAlignmentAsPoint","align","valign","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_MIDDLE","ALIGN_BOTTOM","getSizeForString","fontSize","fontFamily","textWidth","DEFAULT_FONTSIZE","DEFAULT_FONTFAMILY","div","lineHeight","LINE_HEIGHT","visibility","display","zoom","whiteSpace","size","getViewXml","getModel","getRoot","getView","eventsEnabled","isEventsEnabled","setEventsEnabled","drawPane","overlayPane","dialect","DIALECT_SVG","createElementNS","NS_SVG","canvas","cloneNode","translate","getTranslate","temp","mxTemporaryCellStates","enc","mxCodec","encode","destroy","getScaleForPageCount","pageCount","pageFormat","border","PAGE_FORMAT_A4_PORTRAIT","availablePageWidth","availablePageHeight","graphBounds","getGraphBounds","sc","getScale","graphWidth","graphHeight","pageFormatAspectRatio","graphAspectRatio","pagesAspectRatio","pageRoot","pagesAspectRatioSqrt","numRowPages","numColumnPages","scaleChange","currentTotalPages","numLoops","roundRowDownProportion","floor","roundColumnDownProportion","posterWidth","show","open","html","base","getElementsByTagName","styleSheets","cssText","close","links","styles","outer","svg","ownerSVGElement","minWidth","minHeight","printScreen","print","focus","setTimeout","popup","content","isInternalWindow","pre","mxWindow","setClosable","setVisible","IS_NS","alert","prompt","confirm","error","icon","padding","img","verticalAlign","mxResources","makeDraggable","graphF","dragElement","autoscroll","scalePreview","highlightDropTargets","getDropTarget","dragSource","mxDragSource","dragOffset","TOOLTIP_VERTICAL_OFFSET","setGuidesEnabled","getGraphForEvent","createDragElement","createPreviewElement","elt","__mxOutput"],"mappings":"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","file":"mxUtils.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxUtils =\n{\n\t/**\n\t * Class: mxUtils\n\t * \n\t * A singleton class that provides cross-browser helper methods.\n\t * This is a global functionality. To access the functions in this\n\t * class, use the global classname appended by the functionname.\n\t * You may have to load chrome://global/content/contentAreaUtils.js\n\t * to disable certain security restrictions in Mozilla for the <open>,\n\t * <save>, <saveAs> and <copy> function.\n\t * \n\t * For example, the following code displays an error message:\n\t * \n\t * (code)\n\t * mxUtils.error('Browser is not supported!', 200, false);\n\t * (end)\n\t * \n\t * Variable: errorResource\n\t * \n\t * Specifies the resource key for the title of the error window. If the\n\t * resource for this key does not exist then the value is used as\n\t * the title. Default is 'error'.\n\t */\n\terrorResource: (mxClient.language != 'none') ? 'error' : '',\n\t\n\t/**\n\t * Variable: closeResource\n\t * \n\t * Specifies the resource key for the label of the close button. If the\n\t * resource for this key does not exist then the value is used as\n\t * the label. Default is 'close'.\n\t */\n\tcloseResource: (mxClient.language != 'none') ? 'close' : '',\n\n\t/**\n\t * Variable: errorImage\n\t * \n\t * Defines the image used for error dialogs.\n\t */\n\terrorImage: mxClient.imageBasePath + '/error.gif',\n\t\n\t/**\n\t * Function: removeCursors\n\t * \n\t * Removes the cursors from the style of the given DOM node and its\n\t * descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the cursor style from.\n\t */\n\tremoveCursors: function(element)\n\t{\n\t\tif (element.style != null)\n\t\t{\n\t\t\telement.style.cursor = '';\n\t\t}\n\t\t\n\t\tvar children = element.childNodes;\n\t\t\n\t\tif (children != null)\n\t\t{\n\t        var childCount = children.length;\n\t        \n\t        for (var i = 0; i < childCount; i += 1)\n\t        {\n\t            mxUtils.removeCursors(children[i]);\n\t        }\n\t    }\n\t},\n\n\t/**\n\t * Function: getCurrentStyle\n\t * \n\t * Returns the current style of the specified element.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node whose current style should be returned.\n\t */\n\tgetCurrentStyle: function()\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 9))\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ? element.currentStyle : null;\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ?\n\t\t\t\t\twindow.getComputedStyle(element, '') :\n\t\t\t\t\tnull;\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: parseCssNumber\n\t * \n\t * Parses the given CSS numeric value adding handling for the values thin,\n\t * medium and thick (2, 4 and 6).\n\t */\n\tparseCssNumber: function(value)\n\t{\n\t\tif (value == 'thin')\n\t\t{\n\t\t\tvalue = '2';\n\t\t}\n\t\telse if (value == 'medium')\n\t\t{\n\t\t\tvalue = '4';\n\t\t}\n\t\telse if (value == 'thick')\n\t\t{\n\t\t\tvalue = '6';\n\t\t}\n\t\t\n\t\tvalue = parseFloat(value);\n\t\t\n\t\tif (isNaN(value))\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: setPrefixedStyle\n\t * \n\t * Adds the given style with the standard name and an optional vendor prefix for the current\n\t * browser.\n\t * \n\t * (code)\n\t * mxUtils.setPrefixedStyle(node.style, 'transformOrigin', '0% 0%');\n\t * (end)\n\t */\n\tsetPrefixedStyle: function()\n\t{\n\t\tvar prefix = null;\n\t\t\n\t\tif (mxClient.IS_OT)\n\t\t{\n\t\t\tprefix = 'O';\n\t\t}\n\t\telse if (mxClient.IS_SF || mxClient.IS_GC)\n\t\t{\n\t\t\tprefix = 'Webkit';\n\t\t}\n\t\telse if (mxClient.IS_MT)\n\t\t{\n\t\t\tprefix = 'Moz';\n\t\t}\n\t\telse if (mxClient.IS_IE && document.documentMode >= 9 && document.documentMode < 10)\n\t\t{\n\t\t\tprefix = 'ms';\n\t\t}\n\n\t\treturn function(style, name, value)\n\t\t{\n\t\t\tstyle[name] = value;\n\t\t\t\n\t\t\tif (prefix != null && name.length > 0)\n\t\t\t{\n\t\t\t\tname = prefix + name.substring(0, 1).toUpperCase() + name.substring(1);\n\t\t\t\tstyle[name] = value;\n\t\t\t}\n\t\t};\n\t}(),\n\t\n\t/**\n\t * Function: hasScrollbars\n\t * \n\t * Returns true if the overflow CSS property of the given node is either\n\t * scroll or auto.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose style should be checked for scrollbars.\n\t */\n\thasScrollbars: function(node)\n\t{\n\t\tvar style = mxUtils.getCurrentStyle(node);\n\n\t\treturn style != null && (style.overflow == 'scroll' || style.overflow == 'auto');\n\t},\n\t\n\t/**\n\t * Function: bind\n\t * \n\t * Returns a wrapper function that locks the execution scope of the given\n\t * function to the specified scope. Inside funct, the \"this\" keyword\n\t * becomes a reference to that scope.\n\t */\n\tbind: function(scope, funct)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\treturn funct.apply(scope, arguments);\n\t\t};\n\t},\n\t\n\t/**\n\t * Function: eval\n\t * \n\t * Evaluates the given expression using eval and returns the JavaScript\n\t * object that represents the expression result. Supports evaluation of\n\t * expressions that define functions and returns the function object for\n\t * these expressions.\n\t * \n\t * Parameters:\n\t * \n\t * expr - A string that represents a JavaScript expression.\n\t */\n\teval: function(expr)\n\t{\n\t\tvar result = null;\n\n\t\tif (expr.indexOf('function') >= 0)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\teval('var _mxJavaScriptExpression='+expr);\n\t\t\t\tresult = _mxJavaScriptExpression;\n\t\t\t\t// TODO: Use delete here?\n\t\t\t\t_mxJavaScriptExpression = null;\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tresult = eval(expr);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNode\n\t * \n\t * Returns the first node where attr equals value.\n\t * This implementation does not use XPath.\n\t */\n\tfindNode: function(node, attr, value)\n\t{\n\t\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\tvar tmp = node.getAttribute(attr);\n\t\n\t\t\tif (tmp != null && tmp == value)\n\t\t\t{\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t\n\t\tnode = node.firstChild;\n\t\t\n\t\twhile (node != null)\n\t\t{\n\t\t\tvar result = mxUtils.findNode(node, attr, value);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\t\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: getFunctionName\n\t * \n\t * Returns the name for the given function.\n\t * \n\t * Parameters:\n\t * \n\t * f - JavaScript object that represents a function.\n\t */\n\tgetFunctionName: function(f)\n\t{\n\t\tvar str = null;\n\n\t\tif (f != null)\n\t\t{\n\t\t\tif (f.name != null)\n\t\t\t{\n\t\t\t\tstr = f.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr = mxUtils.trim(f.toString());\n\t\t\t\t\n\t\t\t\tif (/^function\\s/.test(str))\n\t\t\t\t{\n\t\t\t\t\tstr = mxUtils.ltrim(str.substring(9));\n\t\t\t\t\tvar idx2 = str.indexOf('(');\n\t\t\t\t\t\n\t\t\t\t\tif (idx2 > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tstr = str.substring(0, idx2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn str;\n\t},\n\n\t/**\n\t * Function: indexOf\n\t * \n\t * Returns the index of obj in array or -1 if the array does not contain\n\t * the given object.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array to check for the given obj.\n\t * obj - Object to find in the given array.\n\t */\n\tindexOf: function(array, obj)\n\t{\n\t\tif (array != null && obj != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tif (array[i] == obj)\n\t\t\t\t{\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn -1;\n\t},\n\n\t/**\n\t * Function: forEach\n\t * \n\t * Calls the given function for each element of the given array and returns\n\t * the array.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array that contains the elements.\n\t * fn - Function to be called for each object.\n\t */\n\tforEach: function(array, fn)\n\t{\n\t\tif (array != null && fn != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tfn(array[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn array;\n\t},\n\n\t/**\n\t * Function: remove\n\t * \n\t * Removes all occurrences of the given object in the given array or\n\t * object. If there are multiple occurrences of the object, be they\n\t * associative or as an array entry, all occurrences are removed from\n\t * the array or deleted from the object. By removing the object from\n\t * the array, all elements following the removed element are shifted\n\t * by one step towards the beginning of the array.\n\t * \n\t * The length of arrays is not modified inside this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to find in the given array.\n\t * array - Array to check for the given obj.\n\t */\n\tremove: function(obj, array)\n\t{\n\t\tvar result = null;\n\t\t\n\t\tif (typeof(array) == 'object')\n\t\t{\n\t\t\tvar index = mxUtils.indexOf(array, obj);\n\t\t\t\n\t\t\twhile (index >= 0)\n\t\t\t{\n\t\t\t\tarray.splice(index, 1);\n\t\t\t\tresult = obj;\n\t\t\t\tindex = mxUtils.indexOf(array, obj);\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in array)\n\t\t{\n\t\t\tif (array[key] == obj)\n\t\t\t{\n\t\t\t\tdelete array[key];\n\t\t\t\tresult = obj;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNode\n\t * \n\t * Returns true if the given value is an XML node with the node name\n\t * and if the optional attribute has the specified value.\n\t * \n\t * This implementation assumes that the given value is a DOM node if the\n\t * nodeType property is numeric, that is, if isNaN returns false for\n\t * value.nodeType.\n\t * \n\t * Parameters:\n\t * \n\t * value - Object that should be examined as a node.\n\t * nodeName - String that specifies the node name.\n\t * attributeName - Optional attribute name to check.\n\t * attributeValue - Optional attribute value to check.\n\t */\n\t isNode: function(value, nodeName, attributeName, attributeValue)\n\t {\n\t \tif (value != null && !isNaN(value.nodeType) && (nodeName == null ||\n\t \t\tvalue.nodeName.toLowerCase() == nodeName.toLowerCase()))\n \t\t{\n \t\t\treturn attributeName == null ||\n \t\t\t\tvalue.getAttribute(attributeName) == attributeValue;\n \t\t}\n\t \t\n\t \treturn false;\n\t },\n\t\n\t/**\n\t * Function: isAncestorNode\n\t * \n\t * Returns true if the given ancestor is an ancestor of the\n\t * given DOM node in the DOM. This also returns true if the\n\t * child is the ancestor.\n\t * \n\t * Parameters:\n\t * \n\t * ancestor - DOM node that represents the ancestor.\n\t * child - DOM node that represents the child.\n\t */\n\t isAncestorNode: function(ancestor, child)\n\t {\n\t \tvar parent = child;\n\t \t\n\t \twhile (parent != null)\n\t \t{\n\t \t\tif (parent == ancestor)\n\t \t\t{\n\t \t\t\treturn true;\n\t \t\t}\n\n\t \t\tparent = parent.parentNode;\n\t \t}\n\t \t\n\t \treturn false;\n\t },\n\n\t/**\n\t * Function: getChildNodes\n\t * \n\t * Returns an array of child nodes that are of the given node type.\n\t * \n\t * Parameters:\n\t * \n\t * node - Parent DOM node to return the children from.\n\t * nodeType - Optional node type to return. Default is\n\t * <mxConstants.NODETYPE_ELEMENT>.\n\t */\n\tgetChildNodes: function(node, nodeType)\n\t{\n\t\tnodeType = nodeType || mxConstants.NODETYPE_ELEMENT;\n\t\t\n\t\tvar children = [];\n\t\tvar tmp = node.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeType == nodeType)\n\t\t\t{\n\t\t\t\tchildren.push(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\t\t\n\t\treturn children;\n\t},\n\n\t/**\n\t * Function: importNode\n\t * \n\t * Cross browser implementation for document.importNode. Uses document.importNode\n\t * in all browsers but IE, where the node is cloned by creating a new node and\n\t * copying all attributes and children into it using importNode, recursively.\n\t * \n\t * Parameters:\n\t * \n\t * doc - Document to import the node into.\n\t * node - Node to be imported.\n\t * allChildren - If all children should be imported.\n\t */\n\timportNode: function(doc, node, allChildren)\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 10))\n\t\t{\n\t\t\tswitch (node.nodeType)\n\t\t\t{\n\t\t\t\tcase 1: /* element */\n\t\t\t\t{\n\t\t\t\t\tvar newNode = doc.createElement(node.nodeName);\n\t\t\t\t\t\n\t\t\t\t\tif (node.attributes && node.attributes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < node.attributes.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewNode.setAttribute(node.attributes[i].nodeName,\n\t\t\t\t\t\t\t\tnode.getAttribute(node.attributes[i].nodeName));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (allChildren && node.childNodes && node.childNodes.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tnewNode.appendChild(mxUtils.importNode(doc, node.childNodes[i], allChildren));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn newNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 3: /* text */\n\t\t\t    case 4: /* cdata-section */\n\t\t\t    case 8: /* comment */\n\t\t\t    {\n\t\t\t      return doc.createTextNode(node.value);\n\t\t\t      break;\n\t\t\t    }\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn doc.importNode(node, allChildren);\n\t\t}\n\t},\n\n\t/**\n\t * Function: createXmlDocument\n\t * \n\t * Returns a new, empty XML document.\n\t */\n\tcreateXmlDocument: function()\n\t{\n\t\tvar doc = null;\n\t\t\n\t\tif (document.implementation && document.implementation.createDocument)\n\t\t{\n\t\t\tdoc = document.implementation.createDocument('', '', null);\n\t\t}\n\t\telse if (window.ActiveXObject)\n\t\t{\n\t\t\tdoc = new ActiveXObject('Microsoft.XMLDOM');\n\t \t}\n\t \t\n\t \treturn doc;\n\t},\n\n\t/**\n\t * Function: parseXml\n\t * \n\t * Parses the specified XML string into a new XML document and returns the\n\t * new document.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var doc = mxUtils.parseXml(\n\t *   '<mxGraphModel><root><MyDiagram id=\"0\"><mxCell/></MyDiagram>'+\n\t *   '<MyLayer id=\"1\"><mxCell parent=\"0\" /></MyLayer><MyObject id=\"2\">'+\n\t *   '<mxCell style=\"strokeColor=blue;fillColor=red\" parent=\"1\" vertex=\"1\">'+\n\t *   '<mxGeometry x=\"10\" y=\"10\" width=\"80\" height=\"30\" as=\"geometry\"/>'+\n\t *   '</mxCell></MyObject></root></mxGraphModel>');\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * xml - String that contains the XML data.\n\t */\n\tparseXml: function()\n\t{\n\t\tif (window.DOMParser)\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\n\t\t\t\treturn parser.parseFromString(xml, 'text/xml');\n\t\t\t};\n\t\t}\n\t\telse // IE<=9\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar result = mxUtils.createXmlDocument();\n\t\t\t\tresult.async = false;\n\t\t\t\t// Workaround for parsing errors with SVG DTD\n\t\t\t\tresult.validateOnParse = false;\n\t\t\t\tresult.resolveExternals = false;\n\t\t\t\tresult.loadXML(xml);\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: clearSelection\n\t * \n\t * Clears the current selection in the page.\n\t */\n\tclearSelection: function()\n\t{\n\t\tif (document.selection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tdocument.selection.empty();\n\t\t\t};\n\t\t}\n\t\telse if (window.getSelection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tif (window.getSelection().empty)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().empty();\n\t\t\t\t}\n\t\t\t\telse if (window.getSelection().removeAllRanges)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function() { };\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: getPrettyXML\n\t * \n\t * Returns a pretty printed string that represents the XML tree for the\n\t * given node. This method should only be used to print XML for reading,\n\t * use <getXml> instead to obtain a string for processing.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * tab - Optional string that specifies the indentation for one level.\n\t * Default is two spaces.\n\t * indent - Optional string that represents the current indentation.\n\t * Default is an empty string.\n\t */\n\tgetPrettyXml: function(node, tab, indent)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (node != null)\n\t\t{\n\t\t\ttab = tab || '  ';\n\t\t\tindent = indent || '';\n\t\t\t\n\t\t\tif (node.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t\t{\n\t\t\t\tvar value =  mxUtils.trim(mxUtils.getTextContent(node));\n\t\t\t\t\n\t\t\t\tif (value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(indent + mxUtils.htmlEntities(value) + '\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(indent + '<' + node.nodeName);\n\t\t\t\t\n\t\t\t\t// Creates the string with the node attributes\n\t\t\t\t// and converts all HTML entities in the values\n\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\n\t\t\t\tif (attrs != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar val = mxUtils.htmlEntities(attrs[i].value);\n\t\t\t\t\t\tresult.push(' ' + attrs[i].nodeName + '=\"' + val + '\"');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Recursively creates the XML string for each\n\t\t\t\t// child nodes and appends it here with an\n\t\t\t\t// indentation\n\t\t\t\tvar tmp = node.firstChild;\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tresult.push('>\\n');\n\t\t\t\t\t\n\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(mxUtils.getPrettyXml(tmp, tab, indent + tab));\n\t\t\t\t\t\ttmp = tmp.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tresult.push(indent + '</'+node.nodeName + '>\\n');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.push('/>\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join('');\n\t},\n\t\n\t/**\n\t * Function: removeWhitespace\n\t * \n\t * Removes the sibling text nodes for the given node that only consists\n\t * of tabs, newlines and spaces.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose siblings should be removed.\n\t * before - Optional boolean that specifies the direction of the traversal.\n\t */\n\tremoveWhitespace: function(node, before)\n\t{\n\t\tvar tmp = (before) ? node.previousSibling : node.nextSibling;\n\t\t\n\t\twhile (tmp != null && tmp.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t{\n\t\t\tvar next = (before) ? tmp.previousSibling : tmp.nextSibling;\n\t\t\tvar text = mxUtils.getTextContent(tmp);\n\t\t\t\n\t\t\tif (mxUtils.trim(text).length == 0)\n\t\t\t{\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = next;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: htmlEntities\n\t * \n\t * Replaces characters (less than, greater than, newlines and quotes) with\n\t * their HTML entities in the given string and returns the result.\n\t * \n\t * Parameters:\n\t * \n\t * s - String that contains the characters to be converted.\n\t * newline - If newlines should be replaced. Default is true.\n\t */\n\thtmlEntities: function(s, newline)\n\t{\n\t\ts = String(s || '');\n\t\t\n\t\ts = s.replace(/&/g,'&amp;'); // 38 26\n\t\ts = s.replace(/\"/g,'&quot;'); // 34 22\n\t\ts = s.replace(/\\'/g,'&#39;'); // 39 27\n\t\ts = s.replace(/</g,'&lt;'); // 60 3C\n\t\ts = s.replace(/>/g,'&gt;'); // 62 3E\n\n\t\tif (newline == null || newline)\n\t\t{\n\t\t\ts = s.replace(/\\n/g, '&#xa;');\n\t\t}\n\t\t\n\t\treturn s;\n\t},\n\t\n\t/**\n\t * Function: isVml\n\t * \n\t * Returns true if the given node is in the VML namespace.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose tag urn should be checked.\n\t */\n\tisVml: function(node)\n\t{\n\t\treturn node != null && node.tagUrn == 'urn:schemas-microsoft-com:vml';\n\t},\n\n\t/**\n\t * Function: getXml\n\t * \n\t * Returns the XML content of the specified node. For Internet Explorer,\n\t * all \\r\\n\\t[\\t]* are removed from the XML string and the remaining \\r\\n\n\t * are replaced by \\n. All \\n are then replaced with linefeed, or &#xa; if\n\t * no linefeed is defined.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * linefeed - Optional string that linefeeds are converted into. Default is\n\t * &#xa;\n\t */\n\tgetXml: function(node, linefeed)\n\t{\n\t\tvar xml = '';\n\n\t\tif (window.XMLSerializer != null)\n\t\t{\n\t\t\tvar xmlSerializer = new XMLSerializer();\n\t\t\txml = xmlSerializer.serializeToString(node);     \n\t\t}\n\t\telse if (node.xml != null)\n\t\t{\n\t\t\txml = node.xml.replace(/\\r\\n\\t[\\t]*/g, '').\n\t\t\t\treplace(/>\\r\\n/g, '>').\n\t\t\t\treplace(/\\r\\n/g, '\\n');\n\t\t}\n\n\t\t// Replaces linefeeds with HTML Entities.\n\t\tlinefeed = linefeed || '&#xa;';\n\t\txml = xml.replace(/\\n/g, linefeed);\n\t\t  \n\t\treturn xml;\n\t},\n\t\n\t/**\n\t * Function: extractTextWithWhitespace\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * elems - DOM nodes to return the text for.\n\t */\n\textractTextWithWhitespace: function(elems)\n\t{\n\t    // Known block elements for handling linefeeds (list is not complete)\n\t\tvar blocks = ['BLOCKQUOTE', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'OL', 'P', 'PRE', 'TABLE', 'UL'];\n\t\tvar ret = [];\n\t\t\n\t\tfunction doExtract(elts)\n\t\t{\n\t\t\t// Single break should be ignored\n\t\t\tif (elts.length == 1 && (elts[0].nodeName == 'BR' ||\n\t\t\t\telts[0].innerHTML == '\\n'))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t    for (var i = 0; i < elts.length; i++)\n\t\t    {\n\t\t        var elem = elts[i];\n\n\t\t\t\t// DIV with a br or linefeed forces a linefeed\n\t\t\t\tif (elem.nodeName == 'BR' || elem.innerHTML == '\\n' ||\n\t\t\t\t\t((elts.length == 1 || i == 0) && (elem.nodeName == 'DIV' &&\n\t\t\t\t\telem.innerHTML.toLowerCase() == '<br>')))\n\t\t    \t{\n\t    \t\t\tret.push('\\n');\n\t\t    \t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t        if (elem.nodeType === 3 || elem.nodeType === 4)\n\t\t\t        {\n\t\t\t        \tif (elem.nodeValue.length > 0)\n\t\t\t        \t{\n\t\t\t        \t\tret.push(elem.nodeValue);\n\t\t\t        \t}\n\t\t\t        }\n\t\t\t        else if (elem.nodeType !== 8 && elem.childNodes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoExtract(elem.childNodes);\n\t\t\t\t\t}\n\t\t\t        \n\t        \t\tif (i < elts.length - 1 && mxUtils.indexOf(blocks, elts[i + 1].nodeName) >= 0)\n\t        \t\t{\n\t        \t\t\tret.push('\\n');\t\t\n\t        \t\t}\n\t\t\t\t}\n\t\t    }\n\t\t};\n\t\t\n\t\tdoExtract(elems);\n\t    \n\t    return ret.join('');\n\t},\n\n\t/**\n\t * Function: replaceTrailingNewlines\n\t * \n\t * Replaces each trailing newline with the given pattern.\n\t */\n\treplaceTrailingNewlines: function(str, pattern)\n\t{\n\t\t// LATER: Check is this can be done with a regular expression\n\t\tvar postfix = '';\n\t\t\n\t\twhile (str.length > 0 && str.charAt(str.length - 1) == '\\n')\n\t\t{\n\t\t\tstr = str.substring(0, str.length - 1);\n\t\t\tpostfix += pattern;\n\t\t}\n\t\t\n\t\treturn str + postfix;\n\t},\n\n\t/**\n\t * Function: getTextContent\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the text content for.\n\t */\n\tgetTextContent: function(node)\n\t{\n\t\t// Only IE10-\n\t\tif (mxClient.IS_IE && node.innerText !== undefined)\n\t\t{\n\t\t\treturn node.innerText;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (node != null) ? node[(node.textContent === undefined) ? 'text' : 'textContent'] : '';\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setTextContent\n\t * \n\t * Sets the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the text content for.\n\t * text - String that represents the text content.\n\t */\n\tsetTextContent: function(node, text)\n\t{\n\t\tif (node.innerText !== undefined)\n\t\t{\n\t\t\tnode.innerText = text;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode[(node.textContent === undefined) ? 'text' : 'textContent'] = text;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getInnerHtml\n\t * \n\t * Returns the inner HTML for the given node as a string or an empty string\n\t * if no node was specified. The inner HTML is the text representing all\n\t * children of the node, but not the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the inner HTML for.\n\t */\n\tgetInnerHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\treturn node.innerHTML;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: getOuterHtml\n\t * \n\t * Returns the outer HTML for the given node as a string or an empty\n\t * string if no node was specified. The outer HTML is the text representing\n\t * all children of the node including the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the outer HTML for.\n\t */\n\tgetOuterHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tif (node.outerHTML != null)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn node.outerHTML;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = [];\n\t\t\t\t\t\ttmp.push('<'+node.nodeName);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (attrs != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar value = attrs[i].value;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (value != null && value.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp.push(' ');\n\t\t\t\t\t\t\t\t\ttmp.push(attrs[i].nodeName);\n\t\t\t\t\t\t\t\t\ttmp.push('=\"');\n\t\t\t\t\t\t\t\t\ttmp.push(value);\n\t\t\t\t\t\t\t\t\ttmp.push('\"');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (node.innerHTML.length == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('/>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('>');\n\t\t\t\t\t\t\ttmp.push(node.innerHTML);\n\t\t\t\t\t\t\ttmp.push('</'+node.nodeName+'>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn tmp.join('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: write\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twrite: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: writeln\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent with an additional linefeed. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twriteln: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t\tparent.appendChild(document.createElement('br'));\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: br\n\t * \n\t * Appends a linebreak to the given parent and returns the linebreak.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the linebreak to.\n\t */\n\tbr: function(parent, count)\n\t{\n\t\tcount = count || 1;\n\t\tvar br = null;\n\t\t\n\t\tfor (var i = 0; i < count; i++)\n\t\t{\n\t\t\tif (parent != null)\n\t\t\t{\n\t\t\t\tbr = parent.ownerDocument.createElement('br');\n\t\t\t\tparent.appendChild(br);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn br;\n\t},\n\t\t\n\t/**\n\t * Function: button\n\t * \n\t * Returns a new button with the given level and function as an onclick\n\t * event handler.\n\t * \n\t * (code)\n\t * document.body.appendChild(mxUtils.button('Test', function(evt)\n\t * {\n\t *   alert('Hello, World!');\n\t * }));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * label - String that represents the label of the button.\n\t * funct - Function to be called if the button is pressed.\n\t * doc - Optional document to be used for creating the button. Default is the\n\t * current document.\n\t */\n\tbutton: function(label, funct, doc)\n\t{\n\t\tdoc = (doc != null) ? doc : document;\n\t\t\n\t\tvar button = doc.createElement('button');\n\t\tmxUtils.write(button, label);\n\n\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t{\n\t\t\tfunct(evt);\n\t\t});\n\t\t\n\t\treturn button;\n\t},\n\t\n\t/**\n\t * Function: para\n\t * \n\t * Appends a new paragraph with the given text to the specified parent and\n\t * returns the paragraph.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text for the new paragraph.\n\t */\n\tpara: function(parent, text)\n\t{\n\t\tvar p = document.createElement('p');\n\t\tmxUtils.write(p, text);\n\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(p);\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: addTransparentBackgroundFilter\n\t * \n\t * Adds a transparent background to the filter of the given node. This\n\t * background can be used in IE8 standards mode (native IE8 only) to pass\n\t * events through the node.\n\t */\n\taddTransparentBackgroundFilter: function(node)\n\t{\n\t\tnode.style.filter += 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\\'' +\n\t\t\tmxClient.imageBasePath + '/transparent.gif\\', sizingMethod=\\'scale\\')';\n\t},\n\n\t/**\n\t * Function: linkAction\n\t * \n\t * Adds a hyperlink to the specified parent that invokes action on the\n\t * specified editor.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> that will execute the action.\n\t * action - String that defines the name of the action to be executed.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkAction: function(parent, text, editor, action, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor.execute(action);\n\t\t}, pad);\n\t},\n\n\t/**\n\t * Function: linkInvoke\n\t * \n\t * Adds a hyperlink to the specified parent that invokes the specified\n\t * function on the editor passing along the specified argument. The\n\t * function name is the name of a function of the editor instance,\n\t * not an action name.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> instance to execute the function on.\n\t * functName - String that represents the name of the function.\n\t * arg - Object that represents the argument to the function.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkInvoke: function(parent, text, editor, functName, arg, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor[functName](arg);\n\t\t}, pad);\n\t},\n\t\n\t/**\n\t * Function: link\n\t * \n\t * Adds a hyperlink to the specified parent and invokes the given function\n\t * when the link is clicked.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * funct - Function to execute when the link is clicked.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlink: function(parent, text, funct, pad)\n\t{\n\t\tvar a = document.createElement('span');\n\t\t\n\t\ta.style.color = 'blue';\n\t\ta.style.textDecoration = 'underline';\n\t\ta.style.cursor = 'pointer';\n\t\t\n\t\tif (pad != null)\n\t\t{\n\t\t\ta.style.paddingLeft = pad+'px';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(a, 'click', funct);\n\t\tmxUtils.write(a, text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(a);\n\t\t}\n\t\t\n\t\treturn a;\n\t},\n\n\t/**\n\t * Function: fit\n\t * \n\t * Makes sure the given node is inside the visible area of the window. This\n\t * is done by setting the left and top in the style. \n\t */\n\tfit: function(node)\n\t{\n\t\tvar left = parseInt(node.offsetLeft);\n\t\tvar width = parseInt(node.offsetWidth);\n\t\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(node.ownerDocument);\n\t\tvar sl = offset.x;\n\t\tvar st = offset.y;\n\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\tvar right = (sl) + (b.clientWidth || d.clientWidth);\n\t\t\n\t\tif (left + width > right)\n\t\t{\n\t\t\tnode.style.left = Math.max(sl, right - width) + 'px';\n\t\t}\n\t\t\n\t\tvar top = parseInt(node.offsetTop);\n\t\tvar height = parseInt(node.offsetHeight);\n\t\t\n\t\tvar bottom = st + Math.max(b.clientHeight || 0, d.clientHeight);\n\t\t\n\t\tif (top + height > bottom)\n\t\t{\n\t\t\tnode.style.top = Math.max(st, bottom - height) + 'px';\n\t\t}\n\t},\n\n\t/**\n\t * Function: load\n\t * \n\t * Loads the specified URL *synchronously* and returns the <mxXmlRequest>.\n\t * Throws an exception if the file cannot be loaded. See <mxUtils.get> for\n\t * an asynchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * try\n\t * {\n\t *   var req = mxUtils.load(filename);\n\t *   var root = req.getDocumentElement();\n\t *   // Process XML DOM...\n\t * }\n\t * catch (ex)\n\t * {\n\t *   mxUtils.alert('Cannot load '+filename+': '+ex);\n\t * }\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t */\n\tload: function(url)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET', false);\n\t\treq.send();\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: get\n\t * \n\t * Loads the specified URL *asynchronously* and invokes the given functions\n\t * depending on the request status. Returns the <mxXmlRequest> in use. Both\n\t * functions take the <mxXmlRequest> as the only parameter. See\n\t * <mxUtils.load> for a synchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *    var node = req.getDocumentElement();\n\t *    // Process XML DOM...\n\t * });\n\t * (end)\n\t * \n\t * So for example, to load a diagram into an existing graph model, the\n\t * following code is used.\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *   var node = req.getDocumentElement();\n\t *   var dec = new mxCodec(node.ownerDocument);\n\t *   dec.decode(node, graph.getModel());\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t * binary - Optional boolean parameter that specifies if the request is\n\t * binary.\n\t * timeout - Optional timeout in ms before calling ontimeout.\n\t * ontimeout - Optional function to execute on timeout.\n\t */\n\tget: function(url, onload, onerror, binary, timeout, ontimeout)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET');\n\t\t\n\t\tif (binary != null)\n\t\t{\n\t\t\treq.setBinary(binary);\n\t\t}\n\t\t\n\t\treq.send(onload, onerror, timeout, ontimeout);\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: getAll\n\t * \n\t * Loads the URLs in the given array *asynchronously* and invokes the given function\n\t * if all requests returned with a valid 2xx status. The error handler is invoked\n\t * once on the first error or invalid response.\n\t *\n\t * Parameters:\n\t * \n\t * urls - Array of URLs to be loaded.\n\t * onload - Callback with array of <mxXmlRequests>.\n\t * onerror - Optional function to execute on error.\n\t */\n\tgetAll: function(urls, onload, onerror)\n\t{\n\t\tvar remain = urls.length;\n\t\tvar result = [];\n\t\tvar errors = 0;\n\t\tvar err = function()\n\t\t{\n\t\t\tif (errors == 0 && onerror != null)\n\t\t\t{\n\t\t\t\tonerror();\n\t\t\t}\n\n\t\t\terrors++;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < urls.length; i++)\n\t\t{\n\t\t\t(function(url, index)\n\t\t\t{\n\t\t\t\tmxUtils.get(url, function(req)\n\t\t\t\t{\n\t\t\t\t\tvar status = req.getStatus();\n\t\t\t\t\t\n\t\t\t\t\tif (status < 200 || status > 299)\n\t\t\t\t\t{\n\t\t\t\t\t\terr();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult[index] = req;\n\t\t\t\t\t\tremain--;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (remain == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonload(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, err);\n\t\t\t})(urls[i], i);\n\t\t}\n\t\t\n\t\tif (remain == 0)\n\t\t{\n\t\t\tonload(result);\t\t\t\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: post\n\t * \n\t * Posts the specified params to the given URL *asynchronously* and invokes\n\t * the given functions depending on the request status. Returns the\n\t * <mxXmlRequest> in use. Both functions take the <mxXmlRequest> as the\n\t * only parameter. Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.post(url, 'key=value', function(req)\n\t * {\n\t * \tmxUtils.alert('Ready: '+req.isReady()+' Status: '+req.getStatus());\n\t *  // Process req.getDocumentElement() using DOM API if OK...\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the post request.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t */\n\tpost: function(url, params, onload, onerror)\n\t{\n\t\treturn new mxXmlRequest(url, params).send(onload, onerror);\n\t},\n\t\n\t/**\n\t * Function: submit\n\t * \n\t * Submits the given parameters to the specified URL using\n\t * <mxXmlRequest.simulate> and returns the <mxXmlRequest>.\n\t * Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the form.\n\t * doc - Document to create the form in.\n\t * target - Target to send the form result to.\n\t */\n\tsubmit: function(url, params, doc, target)\n\t{\n\t\treturn new mxXmlRequest(url, params).simulate(doc, target);\n\t},\n\t\n\t/**\n\t * Function: loadInto\n\t * \n\t * Loads the specified URL *asynchronously* into the specified document,\n\t * invoking onload after the document has been loaded. This implementation\n\t * does not use <mxXmlRequest>, but the document.load method.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * doc - The document to load the URL into.\n\t * onload - Function to execute when the URL has been loaded.\n\t */\n\tloadInto: function(url, doc, onload)\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tdoc.onreadystatechange = function ()\n\t\t\t{\n\t\t\t\tif (doc.readyState == 4)\n\t\t\t\t{\n\t\t\t\t\tonload();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.addEventListener('load', onload, false);\n\t\t}\n\t\t\n\t\tdoc.load(url);\n\t},\n\t\n\t/**\n\t * Function: getValue\n\t * \n\t * Returns the value for the given key in the given associative array or\n\t * the given default value if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null.\n\t */\n\tgetValue: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\t\n\t/**\n\t * Function: getNumber\n\t * \n\t * Returns the numeric value for the given key in the given associative\n\t * array or the given default value (or 0) if the value is null. The value\n\t * is converted to a numeric value using the Number function.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is 0.\n\t */\n\tgetNumber: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue || 0;\t\t\t\n\t\t}\n\t\t\n\t\treturn Number(value);\n\t},\n\t\n\t/**\n\t * Function: getColor\n\t * \n\t * Returns the color value for the given key in the given associative\n\t * array or the given default value if the value is null. If the value\n\t * is <mxConstants.NONE> then null is returned.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is null.\n\t */\n\tgetColor: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\telse if (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: clone\n\t * \n\t * Recursively clones the specified object ignoring all fieldnames in the\n\t * given array of transient fields. <mxObjectIdentity.FIELD_NAME> is always\n\t * ignored by this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to be cloned.\n\t * transients - Optional array of strings representing the fieldname to be\n\t * ignored.\n\t * shallow - Optional boolean argument to specify if a shallow clone should\n\t * be created, that is, one where all object references are not cloned or,\n\t * in other words, one where only atomic (strings, numbers) values are\n\t * cloned. Default is false.\n\t */\n\tclone: function(obj, transients, shallow)\n\t{\n\t\tshallow = (shallow != null) ? shallow : false;\n\t\tvar clone = null;\n\t\t\n\t\tif (obj != null && typeof(obj.constructor) == 'function')\n\t\t{\n\t\t\tclone = new obj.constructor();\n\t\t\t\n\t\t    for (var i in obj)\n\t\t    {\n\t\t    \tif (i != mxObjectIdentity.FIELD_NAME && (transients == null ||\n\t\t    \t\tmxUtils.indexOf(transients, i) < 0))\n\t\t    \t{\n\t\t\t    \tif (!shallow && typeof(obj[i]) == 'object')\n\t\t\t    \t{\n\t\t\t            clone[i] = mxUtils.clone(obj[i]);\n\t\t\t        }\n\t\t\t        else\n\t\t\t        {\n\t\t\t            clone[i] = obj[i];\n\t\t\t        }\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t    return clone;\n\t},\n\n\t/**\n\t * Function: equalPoints\n\t * \n\t * Compares all mxPoints in the given lists.\n\t * \n\t * Parameters:\n\t * \n\t * a - Array of <mxPoints> to be compared.\n\t * b - Array of <mxPoints> to be compared.\n\t */\n\tequalPoints: function(a, b)\n\t{\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\tfor (var i = 0; i < a.length; i++)\n\t\t\t{\n\t\t\t\tif (a[i] == b[i] || (a[i] != null && !a[i].equals(b[i])))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: equalEntries\n\t * \n\t * Returns true if all properties of the given objects are equal. Values\n\t * with NaN are equal to NaN and unequal to any other value.\n\t * \n\t * Parameters:\n\t * \n\t * a - First object to be compared.\n\t * b - Second object to be compared.\n\t */\n\tequalEntries: function(a, b)\n\t{\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\t// Counts keys in b to check if all values have been compared\n\t\t\tvar count = 0;\n\t\t\t\n\t\t\tfor (var key in b)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var key in a)\n\t\t\t{\n\t\t\t\tcount--\n\t\t\t\t\n\t\t\t\tif ((!mxUtils.isNaN(a[key]) || !mxUtils.isNaN(b[key])) && a[key] != b[key])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn count == 0;\n\t},\n\t\n\t/**\n\t * Function: removeDuplicates\n\t * \n\t * Removes all duplicates from the given array.\n\t */\n\tremoveDuplicates: function(arr)\n\t{\n\t\tvar dict = new mxDictionary();\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 0; i < arr.length; i++)\n\t\t{\n\t\t\tif (!dict.get(arr[i]))\n\t\t\t{\n\t\t\t\tresult.push(arr[i]);\n\t\t\t\tdict.put(arr[i], true);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNaN\n\t *\n\t * Returns true if the given value is of type number and isNaN returns true.\n\t */\n\tisNaN: function(value)\n\t{\n\t\treturn typeof(value) == 'number' && isNaN(value);\n\t},\n\t\n\t/**\n\t * Function: extend\n\t *\n\t * Assigns a copy of the superclass prototype to the subclass prototype.\n\t * Note that this does not call the constructor of the superclass at this\n\t * point, the superclass constructor should be called explicitely in the\n\t * subclass constructor. Below is an example.\n\t * \n\t * (code)\n\t * MyGraph = function(container, model, renderHint, stylesheet)\n\t * {\n\t *   mxGraph.call(this, container, model, renderHint, stylesheet);\n\t * }\n\t * \n\t * mxUtils.extend(MyGraph, mxGraph);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * ctor - Constructor of the subclass.\n\t * superCtor - Constructor of the superclass.\n\t */\n\textend: function(ctor, superCtor)\n\t{\n\t\tvar f = function() {};\n\t\tf.prototype = superCtor.prototype;\n\t\t\n\t\tctor.prototype = new f();\n\t\tctor.prototype.constructor = ctor;\n\t},\n\n\t/**\n\t * Function: toString\n\t * \n\t * Returns a textual representation of the specified object.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to return the string representation for.\n\t */\n\ttoString: function(obj)\n\t{\n\t    var output = '';\n\t    \n\t    for (var i in obj)\n\t    {\n\t    \ttry\n\t    \t{\n\t\t\t    if (obj[i] == null)\n\t\t\t    {\n\t\t            output += i + ' = [null]\\n';\n\t\t\t    }\n\t\t\t    else if (typeof(obj[i]) == 'function')\n\t\t\t    {\n\t\t            output += i + ' => [Function]\\n';\n\t\t        }\n\t\t        else if (typeof(obj[i]) == 'object')\n\t\t        {\n\t\t        \tvar ctor = mxUtils.getFunctionName(obj[i].constructor); \n\t\t            output += i + ' => [' + ctor + ']\\n';\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            output += i + ' = ' + obj[i] + '\\n';\n\t\t        }\n\t    \t}\n\t    \tcatch (e)\n\t    \t{\n\t    \t\toutput += i + '=' + e.message;\n\t    \t}\n\t    }\n\t    \n\t    return output;\n\t},\n\n\t/**\n\t * Function: toRadians\n\t * \n\t * Converts the given degree to radians.\n\t */\n\ttoRadians: function(deg)\n\t{\n\t\treturn Math.PI * deg / 180;\n\t},\n\n\t/**\n\t * Function: toDegree\n\t * \n\t * Converts the given radians to degree.\n\t */\n\ttoDegree: function(rad)\n\t{\n\t\treturn rad * 180 / Math.PI;\n\t},\n\t\n\t/**\n\t * Function: arcToCurves\n\t * \n\t * Converts the given arc to a series of curves.\n\t */\n\tarcToCurves: function(x0, y0, r1, r2, angle, largeArcFlag, sweepFlag, x, y)\n\t{\n\t\tx -= x0;\n\t\ty -= y0;\n\t\t\n        if (r1 === 0 || r2 === 0) \n        {\n        \treturn result;\n        }\n        \n        var fS = sweepFlag;\n        var psai = angle;\n        r1 = Math.abs(r1);\n        r2 = Math.abs(r2);\n        var ctx = -x / 2;\n        var cty = -y / 2;\n        var cpsi = Math.cos(psai * Math.PI / 180);\n        var spsi = Math.sin(psai * Math.PI / 180);\n        var rxd = cpsi * ctx + spsi * cty;\n        var ryd = -1 * spsi * ctx + cpsi * cty;\n        var rxdd = rxd * rxd;\n        var rydd = ryd * ryd;\n        var r1x = r1 * r1;\n        var r2y = r2 * r2;\n        var lamda = rxdd / r1x + rydd / r2y;\n        var sds;\n        \n        if (lamda > 1) \n        {\n        \tr1 = Math.sqrt(lamda) * r1;\n        \tr2 = Math.sqrt(lamda) * r2;\n        \tsds = 0;\n        }  \n        else\n        {\n        \tvar seif = 1;\n            \n        \tif (largeArcFlag === fS) \n        \t{\n        \t\tseif = -1;\n        \t}\n            \n        \tsds = seif * Math.sqrt((r1x * r2y - r1x * rydd - r2y * rxdd) / (r1x * rydd + r2y * rxdd));\n        }\n        \n        var txd = sds * r1 * ryd / r2;\n        var tyd = -1 * sds * r2 * rxd / r1;\n        var tx = cpsi * txd - spsi * tyd + x / 2;\n        var ty = spsi * txd + cpsi * tyd + y / 2;\n        var rad = Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1) - Math.atan2(0, 1);\n        var s1 = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        rad = Math.atan2((-ryd - tyd) / r2, (-rxd - txd) / r1) - Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1);\n        var dr = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        \n        if (fS == 0 && dr > 0) \n        {\n        \tdr -= 2 * Math.PI;\n        }\n        else if (fS != 0 && dr < 0) \n        {\n        \tdr += 2 * Math.PI;\n        }\n        \n        var sse = dr * 2 / Math.PI;\n        var seg = Math.ceil(sse < 0 ? -1 * sse : sse);\n        var segr = dr / seg;\n        var t = 8/3 * Math.sin(segr / 4) * Math.sin(segr / 4) / Math.sin(segr / 2);\n        var cpsir1 = cpsi * r1;\n        var cpsir2 = cpsi * r2;\n        var spsir1 = spsi * r1;\n        var spsir2 = spsi * r2;\n        var mc = Math.cos(s1);\n        var ms = Math.sin(s1);\n        var x2 = -t * (cpsir1 * ms + spsir2 * mc);\n        var y2 = -t * (spsir1 * ms - cpsir2 * mc);\n        var x3 = 0;\n        var y3 = 0;\n\n\t\tvar result = [];\n        \n        for (var n = 0; n < seg; ++n) \n        {\n            s1 += segr;\n            mc = Math.cos(s1);\n            ms = Math.sin(s1);\n            \n            x3 = cpsir1 * mc - spsir2 * ms + tx;\n            y3 = spsir1 * mc + cpsir2 * ms + ty;\n            var dx = -t * (cpsir1 * ms + spsir2 * mc);\n            var dy = -t * (spsir1 * ms - cpsir2 * mc);\n            \n            // CurveTo updates x0, y0 so need to restore it\n            var index = n * 6;\n            result[index] = Number(x2 + x0);\n            result[index + 1] = Number(y2 + y0);\n            result[index + 2] = Number(x3 - dx + x0);\n            result[index + 3] = Number(y3 - dy + y0);\n            result[index + 4] = Number(x3 + x0);\n            result[index + 5] = Number(y3 + y0);\n            \n\t\t\tx2 = x3 + dx;\n            y2 = y3 + dy;\n        }\n        \n        return result;\n\t},\n\n\t/**\n\t * Function: getBoundingBox\n\t * \n\t * Returns the bounding box for the rotated rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * rect - <mxRectangle> to be rotated.\n\t * angle - Number that represents the angle (in degrees).\n\t * cx - Optional <mxPoint> that represents the rotation center. If no\n\t * rotation center is given then the center of rect is used.\n\t */\n\tgetBoundingBox: function(rect, rotation, cx)\n\t{\n        var result = null;\n\n        if (rect != null && rotation != null && rotation != 0)\n        {\n            var rad = mxUtils.toRadians(rotation);\n            var cos = Math.cos(rad);\n            var sin = Math.sin(rad);\n\n            cx = (cx != null) ? cx : new mxPoint(rect.x + rect.width / 2, rect.y  + rect.height / 2);\n\n            var p1 = new mxPoint(rect.x, rect.y);\n            var p2 = new mxPoint(rect.x + rect.width, rect.y);\n            var p3 = new mxPoint(p2.x, rect.y + rect.height);\n            var p4 = new mxPoint(rect.x, p3.y);\n\n            p1 = mxUtils.getRotatedPoint(p1, cos, sin, cx);\n            p2 = mxUtils.getRotatedPoint(p2, cos, sin, cx);\n            p3 = mxUtils.getRotatedPoint(p3, cos, sin, cx);\n            p4 = mxUtils.getRotatedPoint(p4, cos, sin, cx);\n\n            result = new mxRectangle(p1.x, p1.y, 0, 0);\n            result.add(new mxRectangle(p2.x, p2.y, 0, 0));\n            result.add(new mxRectangle(p3.x, p3.y, 0, 0));\n            result.add(new mxRectangle(p4.x, p4.y, 0, 0));\n        }\n\n        return result;\n\t},\n\n\t/**\n\t * Function: getRotatedPoint\n\t * \n\t * Rotates the given point by the given cos and sin.\n\t */\n\tgetRotatedPoint: function(pt, cos, sin, c)\n\t{\n\t\tc = (c != null) ? c : new mxPoint();\n\t\tvar x = pt.x - c.x;\n\t\tvar y = pt.y - c.y;\n\n\t\tvar x1 = x * cos - y * sin;\n\t\tvar y1 = y * cos + x * sin;\n\n\t\treturn new mxPoint(x1 + c.x, y1 + c.y);\n\t},\n\t\n\t/**\n\t * Returns an integer mask of the port constraints of the given map\n\t * @param dict the style map to determine the port constraints for\n\t * @param defaultValue Default value to return if the key is undefined.\n\t * @return the mask of port constraint directions\n\t * \n\t * Parameters:\n\t * \n\t * terminal - <mxCelState> that represents the terminal.\n\t * edge - <mxCellState> that represents the edge.\n\t * source - Boolean that specifies if the terminal is the source terminal.\n\t * defaultValue - Default value to be returned.\n\t */\n\tgetPortConstraints: function(terminal, edge, source, defaultValue)\n\t{\n\t\tvar value = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT,\n\t\t\tmxUtils.getValue(edge.style, (source) ? mxConstants.STYLE_SOURCE_PORT_CONSTRAINT :\n\t\t\t\tmxConstants.STYLE_TARGET_PORT_CONSTRAINT, null));\n\t\t\n\t\tif (value == null)\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar directions = value.toString();\n\t\t\tvar returnValue = mxConstants.DIRECTION_MASK_NONE;\n\t\t\tvar constraintRotationEnabled = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT_ROTATION, 0);\n\t\t\tvar rotation = 0;\n\t\t\t\n\t\t\tif (constraintRotationEnabled == 1)\n\t\t\t{\n\t\t\t\trotation = mxUtils.getValue(terminal.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t}\n\t\t\t\n\t\t\tvar quad = 0;\n\n\t\t\tif (rotation > 45)\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t\t\n\t\t\t\tif (rotation >= 135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (rotation < -45)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\tif (rotation <= -135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_NORTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_WEST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_SOUTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_EAST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn returnValue;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: reversePortConstraints\n\t * \n\t * Reverse the port constraint bitmask. For example, north | east\n\t * becomes south | west\n\t */\n\treversePortConstraints: function(constraint)\n\t{\n\t\tvar result = 0;\n\t\t\n\t\tresult = (constraint & mxConstants.DIRECTION_MASK_WEST) << 3;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_NORTH) << 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_SOUTH) >> 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_EAST) >> 3;\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNearestSegment\n\t * \n\t * Finds the index of the nearest segment on the given cell state for\n\t * the specified coordinate pair.\n\t */\n\tfindNearestSegment: function(state, x, y)\n\t{\n\t\tvar index = -1;\n\t\t\n\t\tif (state.absolutePoints.length > 0)\n\t\t{\n\t\t\tvar last = state.absolutePoints[0];\n\t\t\tvar min = null;\n\t\t\t\n\t\t\tfor (var i = 1; i < state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tvar current = state.absolutePoints[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(last.x, last.y,\n\t\t\t\t\tcurrent.x, current.y, x, y);\n\t\t\t\t\n\t\t\t\tif (min == null || dist < min)\n\t\t\t\t{\n\t\t\t\t\tmin = dist;\n\t\t\t\t\tindex = i - 1;\n\t\t\t\t}\n\n\t\t\t\tlast = current;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn index;\n\t},\n\n\t/**\n\t * Function: getDirectedBounds\n\t * \n\t * Adds the given margins to the given rectangle and rotates and flips the\n\t * rectangle according to the respective styles in style.\n\t */\n\tgetDirectedBounds: function (rect, m, style, flipH, flipV)\n\t{\n\t\tvar d = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\t\tflipH = (flipH != null) ? flipH : mxUtils.getValue(style, mxConstants.STYLE_FLIPH, false);\n\t\tflipV = (flipV != null) ? flipV : mxUtils.getValue(style, mxConstants.STYLE_FLIPV, false);\n\n\t\tm.x = Math.round(Math.max(0, Math.min(rect.width, m.x)));\n\t\tm.y = Math.round(Math.max(0, Math.min(rect.height, m.y)));\n\t\tm.width = Math.round(Math.max(0, Math.min(rect.width, m.width)));\n\t\tm.height = Math.round(Math.max(0, Math.min(rect.height, m.height)));\n\t\t\n\t\tif ((flipV && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipH && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.width;\n\t\t\tm.width = tmp;\n\t\t}\n\t\t\t\n\t\tif ((flipH && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipV && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.y;\n\t\t\tm.y = m.height;\n\t\t\tm.height = tmp;\n\t\t}\n\t\t\n\t\tvar m2 = mxRectangle.fromRectangle(m);\n\t\t\n\t\tif (d == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tm2.y = m.x;\n\t\t\tm2.x = m.height;\n\t\t\tm2.width = m.y;\n\t\t\tm2.height = m.width;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tm2.y = m.height;\n\t\t\tm2.x = m.width;\n\t\t\tm2.width = m.x;\n\t\t\tm2.height = m.y;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tm2.y = m.width;\n\t\t\tm2.x = m.y;\n\t\t\tm2.width = m.height;\n\t\t\tm2.height = m.x;\n\t\t}\n\t\t\n\t\treturn new mxRectangle(rect.x + m2.x, rect.y + m2.y, rect.width - m2.width - m2.x, rect.height - m2.height - m2.y);\n\t},\n\n\t/**\n\t * Function: getPerimeterPoint\n\t * \n\t * Returns the intersection between the polygon defined by the array of\n\t * points and the line between center and point.\n\t */\n\tgetPerimeterPoint: function (pts, center, point)\n\t{\n\t\tvar min = null;\n\t\t\n\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t{\n\t\t\tvar pt = mxUtils.intersection(pts[i].x, pts[i].y, pts[i + 1].x, pts[i + 1].y,\n\t\t\t\tcenter.x, center.y, point.x, point.y);\n\t\t\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar dx = point.x - pt.x;\n\t\t\t\tvar dy = point.y - pt.y;\n\t\t\t\tvar ip = {p: pt, distSq: dy * dy + dx * dx};\n\t\t\t\t\n\t\t\t\tif (ip != null && (min == null || min.distSq > ip.distSq))\n\t\t\t\t{\n\t\t\t\t\tmin = ip;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (min != null) ? min.p : null;\n\t},\n\n\t/**\n\t * Function: rectangleIntersectsSegment\n\t * \n\t * Returns true if the given rectangle intersects the given segment.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the rectangle.\n\t * p1 - <mxPoint> that represents the first point of the segment.\n\t * p2 - <mxPoint> that represents the second point of the segment.\n\t */\n\trectangleIntersectsSegment: function(bounds, p1, p2)\n\t{\n\t\tvar top = bounds.y;\n\t\tvar left = bounds.x;\n\t\tvar bottom = top + bounds.height;\n\t\tvar right = left + bounds.width;\n\t\t\t\n\t\t// Find min and max X for the segment\n\t\tvar minX = p1.x;\n\t\tvar maxX = p2.x;\n\t\t\n\t\tif (p1.x > p2.x)\n\t\t{\n\t\t  minX = p2.x;\n\t\t  maxX = p1.x;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's x-projections\n\t\tif (maxX > right)\n\t\t{\n\t\t  maxX = right;\n\t\t}\n\t\t\n\t\tif (minX < left)\n\t\t{\n\t\t  minX = left;\n\t\t}\n\t\t\n\t\tif (minX > maxX) // If their projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\t// Find corresponding min and max Y for min and max X we found before\n\t\tvar minY = p1.y;\n\t\tvar maxY = p2.y;\n\t\tvar dx = p2.x - p1.x;\n\t\t\n\t\tif (Math.abs(dx) > 0.0000001)\n\t\t{\n\t\t  var a = (p2.y - p1.y) / dx;\n\t\t  var b = p1.y - a * p1.x;\n\t\t  minY = a * minX + b;\n\t\t  maxY = a * maxX + b;\n\t\t}\n\t\t\n\t\tif (minY > maxY)\n\t\t{\n\t\t  var tmp = maxY;\n\t\t  maxY = minY;\n\t\t  minY = tmp;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's y-projections\n\t\tif (maxY > bottom)\n\t\t{\n\t\t  maxY = bottom;\n\t\t}\n\t\t\n\t\tif (minY < top)\n\t\t{\n\t\t  minY = top;\n\t\t}\n\t\t\n\t\tif (minY > maxY) // If Y-projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\t\n\t/**\n\t * Function: contains\n\t * \n\t * Returns true if the specified point (x, y) is contained in the given rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the area.\n\t * x - X-coordinate of the point.\n\t * y - Y-coordinate of the point.\n\t */\n\tcontains: function(bounds, x, y)\n\t{\n\t\treturn (bounds.x <= x && bounds.x + bounds.width >= x &&\n\t\t\t\tbounds.y <= y && bounds.y + bounds.height >= y);\n\t},\n\n\t/**\n\t * Function: intersects\n\t * \n\t * Returns true if the two rectangles intersect.\n\t * \n\t * Parameters:\n\t * \n\t * a - <mxRectangle> to be checked for intersection.\n\t * b - <mxRectangle> to be checked for intersection.\n\t */\n\tintersects: function(a, b)\n\t{\n\t\tvar tw = a.width;\n\t\tvar th = a.height;\n\t\tvar rw = b.width;\n\t\tvar rh = b.height;\n\t\t\n\t\tif (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0)\n\t\t{\n\t\t    return false;\n\t\t}\n\t\t\n\t\tvar tx = a.x;\n\t\tvar ty = a.y;\n\t\tvar rx = b.x;\n\t\tvar ry = b.y;\n\t\t\n\t\trw += rx;\n\t\trh += ry;\n\t\ttw += tx;\n\t\tth += ty;\n\n\t\treturn ((rw < rx || rw > tx) &&\n\t\t\t(rh < ry || rh > ty) &&\n\t\t\t(tw < tx || tw > rx) &&\n\t\t\t(th < ty || th > ry));\n\t},\n\n\t/**\n\t * Function: intersects\n\t * \n\t * Returns true if the two rectangles intersect.\n\t * \n\t * Parameters:\n\t * \n\t * a - <mxRectangle> to be checked for intersection.\n\t * b - <mxRectangle> to be checked for intersection.\n\t */\n\tintersectsHotspot: function(state, x, y, hotspot, min, max)\n\t{\n\t\thotspot = (hotspot != null) ? hotspot : 1;\n\t\tmin = (min != null) ? min : 0;\n\t\tmax = (max != null) ? max : 0;\n\t\t\n\t\tif (hotspot > 0)\n\t\t{\n\t\t\tvar cx = state.getCenterX();\n\t\t\tvar cy = state.getCenterY();\n\t\t\tvar w = state.width;\n\t\t\tvar h = state.height;\n\t\t\t\n\t\t\tvar start = mxUtils.getValue(state.style, mxConstants.STYLE_STARTSIZE) * state.view.scale;\n\n\t\t\tif (start > 0)\n\t\t\t{\n\t\t\t\tif (mxUtils.getValue(state.style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t{\n\t\t\t\t\tcy = state.y + start / 2;\n\t\t\t\t\th = start;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcx = state.x + start / 2;\n\t\t\t\t\tw = start;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tw = Math.max(min, w * hotspot);\n\t\t\th = Math.max(min, h * hotspot);\n\t\t\t\n\t\t\tif (max > 0)\n\t\t\t{\n\t\t\t\tw = Math.min(w, max);\n\t\t\t\th = Math.min(h, max);\n\t\t\t}\n\t\t\t\n\t\t\tvar rect = new mxRectangle(cx - w / 2, cy - h / 2, w, h);\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(x, y), cos, sin, cx);\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\treturn mxUtils.contains(rect, x, y);\t\t\t\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: getOffset\n\t * \n\t * Returns the offset for the specified container as an <mxPoint>. The\n\t * offset is the distance from the top left corner of the container to the\n\t * top left corner of the document.\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to return the offset for.\n\t * scollOffset - Optional boolean to add the scroll offset of the document.\n\t * Default is false.\n\t */\n\tgetOffset: function(container, scrollOffset)\n\t{\n\t\tvar offsetLeft = 0;\n\t\tvar offsetTop = 0;\n\t\t\n\t\t// Ignores document scroll origin for fixed elements\n\t\tvar fixed = false;\n\t\tvar node = container;\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\n\t\twhile (node != null && node != b && node != d && !fixed)\n\t\t{\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\t\n\t\tif (!scrollOffset && !fixed)\n\t\t{\n\t\t\tvar offset = mxUtils.getDocumentScrollOrigin(container.ownerDocument);\n\t\t\toffsetLeft += offset.x;\n\t\t\toffsetTop += offset.y;\n\t\t}\n\t\t\n\t\tvar r = container.getBoundingClientRect();\n\t\t\n\t\tif (r != null)\n\t\t{\n\t\t\toffsetLeft += r.left;\n\t\t\toffsetTop += r.top;\n\t\t}\n\t\t\n\t\treturn new mxPoint(offsetLeft, offsetTop);\n\t},\n\n\t/**\n\t * Function: getDocumentScrollOrigin\n\t * \n\t * Returns the scroll origin of the given document or the current document\n\t * if no document is given.\n\t */\n\tgetDocumentScrollOrigin: function(doc)\n\t{\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\treturn new mxPoint(doc.body.scrollLeft, doc.body.scrollTop);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar wnd = doc.defaultView || doc.parentWindow;\n\t\t\t\n\t\t\tvar x = (wnd != null && window.pageXOffset !== undefined) ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft;\n\t\t\tvar y = (wnd != null && window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getScrollOrigin\n\t * \n\t * Returns the top, left corner of the viewrect as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose scroll origin should be returned.\n\t * includeAncestors - Whether the scroll origin of the ancestors should be\n\t * included. Default is false.\n\t * includeDocument - Whether the scroll origin of the document should be\n\t * included. Default is true.\n\t */\n\tgetScrollOrigin: function(node, includeAncestors, includeDocument)\n\t{\n\t\tincludeAncestors = (includeAncestors != null) ? includeAncestors : false;\n\t\tincludeDocument = (includeDocument != null) ? includeDocument : true;\n\t\t\n\t\tvar doc = (node != null) ? node.ownerDocument : document;\n\t\tvar b = doc.body;\n\t\tvar d = doc.documentElement;\n\t\tvar result = new mxPoint();\n\t\tvar fixed = false;\n\n\t\twhile (node != null && node != b && node != d)\n\t\t{\n\t\t\tif (!isNaN(node.scrollLeft) && !isNaN(node.scrollTop))\n\t\t\t{\n\t\t\t\tresult.x += node.scrollLeft;\n\t\t\t\tresult.y += node.scrollTop;\n\t\t\t}\n\t\t\t\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\n\t\t\tnode = (includeAncestors) ? node.parentNode : null;\n\t\t}\n\n\t\tif (!fixed && includeDocument)\n\t\t{\n\t\t\tvar origin = mxUtils.getDocumentScrollOrigin(doc);\n\n\t\t\tresult.x += origin.x;\n\t\t\tresult.y += origin.y;\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: convertPoint\n\t * \n\t * Converts the specified point (x, y) using the offset of the specified\n\t * container and returns a new <mxPoint> with the result.\n\t * \n\t * (code)\n\t * var pt = mxUtils.convertPoint(graph.container,\n\t *   mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to use for the offset.\n\t * x - X-coordinate of the point to be converted.\n\t * y - Y-coordinate of the point to be converted.\n\t */\n\tconvertPoint: function(container, x, y)\n\t{\n\t\tvar origin = mxUtils.getScrollOrigin(container, false);\n\t\tvar offset = mxUtils.getOffset(container);\n\n\t\toffset.x -= origin.x;\n\t\toffset.y -= origin.y;\n\t\t\n\t\treturn new mxPoint(x - offset.x, y - offset.y);\n\t},\n\t\n\t/**\n\t * Function: ltrim\n\t * \n\t * Strips all whitespaces from the beginning of the string. Without the\n\t * second parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\tltrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"^[\" + chars + \"]+\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: rtrim\n\t * \n\t * Strips all whitespaces from the end of the string. Without the second\n\t * parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\trtrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"[\" + chars + \"]+$\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: trim\n\t * \n\t * Strips all whitespaces from both end of the string.\n\t * Without the second parameter, Javascript function will trim these\n\t * characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\ttrim: function(str, chars)\n\t{\n\t\treturn mxUtils.ltrim(mxUtils.rtrim(str, chars), chars);\n\t},\n\t\n\t/**\n\t * Function: isNumeric\n\t * \n\t * Returns true if the specified value is numeric, that is, if it is not\n\t * null, not an empty string, not a HEX number and isNaN returns false.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisNumeric: function(n)\n\t{\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n) && (typeof(n) != 'string' || n.toLowerCase().indexOf('0x') < 0);\n\t},\n\n\t/**\n\t * Function: isInteger\n\t * \n\t * Returns true if the given value is an valid integer number.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisInteger: function(n)\n\t{\n\t\treturn String(parseInt(n)) === String(n);\n\t},\n\n\t/**\n\t * Function: mod\n\t * \n\t * Returns the remainder of division of n by m. You should use this instead\n\t * of the built-in operation as the built-in operation does not properly\n\t * handle negative numbers.\n\t */\n\tmod: function(n, m)\n\t{\n\t\treturn ((n % m) + m) % m;\n\t},\n\n\t/**\n\t * Function: intersection\n\t * \n\t * Returns the intersection of two lines as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * x0 - X-coordinate of the first line's startpoint.\n\t * y0 - X-coordinate of the first line's startpoint.\n\t * x1 - X-coordinate of the first line's endpoint.\n\t * y1 - Y-coordinate of the first line's endpoint.\n\t * x2 - X-coordinate of the second line's startpoint.\n\t * y2 - Y-coordinate of the second line's startpoint.\n\t * x3 - X-coordinate of the second line's endpoint.\n\t * y3 - Y-coordinate of the second line's endpoint.\n\t */\n\tintersection: function (x0, y0, x1, y1, x2, y2, x3, y3)\n\t{\n\t\tvar denom = ((y3 - y2) * (x1 - x0)) - ((x3 - x2) * (y1 - y0));\n\t\tvar nume_a = ((x3 - x2) * (y0 - y2)) - ((y3 - y2) * (x0 - x2));\n\t\tvar nume_b = ((x1 - x0) * (y0 - y2)) - ((y1 - y0) * (x0 - x2));\n\n\t\tvar ua = nume_a / denom;\n\t\tvar ub = nume_b / denom;\n\t\t\n\t\tif(ua >= 0.0 && ua <= 1.0 && ub >= 0.0 && ub <= 1.0)\n\t\t{\n\t\t\t// Get the intersection point\n\t\t\tvar x = x0 + ua * (x1 - x0);\n\t\t\tvar y = y0 + ua * (y1 - y0);\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t\t\n\t\t// No intersection\n\t\treturn null;\n\t},\n\t\n\t/**\n\t * Function: ptSegDistSq\n\t * \n\t * Returns the square distance between a segment and a point. To get the\n\t * distance between a point and a line (with infinite length) use\n\t * <mxUtils.ptLineDist>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\tptSegDistSq: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\n\t\tpx -= x1;\n\t\tpy -= y1;\n\n\t\tvar dotprod = px * x2 + py * y2;\n\t\tvar projlenSq;\n\n\t\tif (dotprod <= 0.0)\n\t\t{\n\t\t    projlenSq = 0.0;\n\t\t}\n\t\telse\n\t\t{\n\t\t    px = x2 - px;\n\t\t    py = y2 - py;\n\t\t    dotprod = px * x2 + py * y2;\n\n\t\t    if (dotprod <= 0.0)\n\t\t    {\n\t\t\t\tprojlenSq = 0.0;\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t\t\tprojlenSq = dotprod * dotprod / (x2 * x2 + y2 * y2);\n\t\t    }\n\t\t}\n\n\t\tvar lenSq = px * px + py * py - projlenSq;\n\t\t\n\t\tif (lenSq < 0)\n\t\t{\n\t\t    lenSq = 0;\n\t\t}\n\t\t\n\t\treturn lenSq;\n    },\n\t\n\t/**\n\t * Function: ptLineDist\n\t * \n\t * Returns the distance between a line defined by two points and a point.\n\t * To get the distance between a point and a segment (with a specific\n\t * length) use <mxUtils.ptSeqDistSq>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of point 1 of the line.\n\t * y1 - Y-coordinate of point 1 of the line.\n\t * x2 - X-coordinate of point 1 of the line.\n\t * y2 - Y-coordinate of point 1 of the line.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n    ptLineDist: function(x1, y1, x2, y2, px, py)\n    {\n\t\treturn Math.abs((y2 - y1) * px - (x2 - x1) * py + x2 * y1 - y2 * x1) /\n\t\t\tMath.sqrt((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n    },\n    \t\n\t/**\n\t * Function: relativeCcw\n\t * \n\t * Returns 1 if the given point on the right side of the segment, 0 if its\n\t * on the segment, and -1 if the point is on the left side of the segment.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\trelativeCcw: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\t\tpx -= x1;\n\t\tpy -= y1;\n\t\tvar ccw = px * y2 - py * x2;\n\t\t\n\t\tif (ccw == 0.0)\n\t\t{\n\t\t    ccw = px * x2 + py * y2;\n\t\t    \n\t\t    if (ccw > 0.0)\n\t\t    {\n\t\t\t\tpx -= x2;\n\t\t\t\tpy -= y2;\n\t\t\t\tccw = px * x2 + py * y2;\n\t\t\t\t\n\t\t\t\tif (ccw < 0.0)\n\t\t\t\t{\n\t\t\t\t    ccw = 0.0;\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t\treturn (ccw < 0.0) ? -1 : ((ccw > 0.0) ? 1 : 0);\n    },\n    \n\t/**\n\t * Function: animateChanges\n\t * \n\t * See <mxEffects.animateChanges>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tanimateChanges: function(graph, changes)\n\t{\n\t\t// LATER: Deprecated, remove this function\n    \tmxEffects.animateChanges.apply(this, arguments);\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * See <mxEffects.cascadeOpacity>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\tmxEffects.cascadeOpacity.apply(this, arguments);\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * See <mxEffects.fadeOut>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tmxEffects.fadeOut.apply(this, arguments);\n\t},\n\t\n\t/**\n\t * Function: setOpacity\n\t * \n\t * Sets the opacity of the specified DOM node to the given value in %.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the opacity for.\n\t * value - Opacity in %. Possible values are between 0 and 100.\n\t */\n\tsetOpacity: function(node, value)\n\t{\n\t\tif (mxUtils.isVml(node))\n\t\t{\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t    \t\t// TODO: Why is the division by 5 needed in VML?\n\t\t\t    node.style.filter = 'alpha(opacity=' + (value/5) + ')';\n\t    \t}\n\t\t}\n\t\telse if (mxClient.IS_IE && (typeof(document.documentMode) === 'undefined' || document.documentMode < 9))\n\t    {\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t\t\t    node.style.filter = 'alpha(opacity=' + value + ')';\n\t    \t}\n\t\t}\n\t\telse\n\t\t{\n\t\t    node.style.opacity = (value / 100);\n\t\t}\n\t},\n\n\t/**\n\t * Function: createImage\n\t * \n\t * Creates and returns an image (IMG node) or VML image (v:image) in IE6 in\n\t * quirks mode.\n\t * \n\t * Parameters:\n\t * \n\t * src - URL that points to the image to be displayed.\n\t */\n\tcreateImage: function(src)\n\t{\n        var imageNode = null;\n        \n\t\tif (mxClient.IS_IE6 && document.compatMode != 'CSS1Compat')\n\t\t{\n        \timageNode = document.createElement(mxClient.VML_PREFIX + ':image');\n        \timageNode.setAttribute('src', src);\n        \timageNode.style.borderStyle = 'none';\n        }\n\t\telse\n\t\t{\n\t\t\timageNode = document.createElement('img');\n\t\t\timageNode.setAttribute('src', src);\n\t\t\timageNode.setAttribute('border', '0');\n\t\t}\n\t\t\n\t\treturn imageNode;\n\t},\n\n\t/**\n\t * Function: sortCells\n\t * \n\t * Sorts the given cells according to the order in the cell hierarchy.\n\t * Ascending is optional and defaults to true.\n\t */\n\tsortCells: function(cells, ascending)\n\t{\n\t\tascending = (ascending != null) ? ascending : true;\n\t\tvar lookup = new mxDictionary();\n\t\tcells.sort(function(o1, o2)\n\t\t{\n\t\t\tvar p1 = lookup.get(o1);\n\t\t\t\n\t\t\tif (p1 == null)\n\t\t\t{\n\t\t\t\tp1 = mxCellPath.create(o1).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o1, p1);\n\t\t\t}\n\t\t\t\n\t\t\tvar p2 = lookup.get(o2);\n\t\t\t\n\t\t\tif (p2 == null)\n\t\t\t{\n\t\t\t\tp2 = mxCellPath.create(o2).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o2, p2);\n\t\t\t}\n\t\t\t\n\t\t\tvar comp = mxCellPath.compare(p1, p2);\n\t\t\t\n\t\t\treturn (comp == 0) ? 0 : (((comp > 0) == ascending) ? 1 : -1);\n\t\t});\n\t\t\n\t\treturn cells;\n\t},\n\n\t/**\n\t * Function: getStylename\n\t * \n\t * Returns the stylename in a style of the form [(stylename|key=value);] or\n\t * an empty string if the given style does not contain a stylename.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylename: function(style)\n\t{\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\tvar stylename = pairs[0];\n\t\t\t\n\t\t\tif (stylename.indexOf('=') < 0)\n\t\t\t{\n\t\t\t\treturn stylename;\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn '';\n\t},\n\n\t/**\n\t * Function: getStylenames\n\t * \n\t * Returns the stylenames in a style of the form [(stylename|key=value);]\n\t * or an empty array if the given style does not contain any stylenames.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < pairs.length; i++)\n\t\t\t{\n\t\t\t\tif (pairs[i].indexOf('=') < 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(pairs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: indexOfStylename\n\t * \n\t * Returns the index of the given stylename in the given style. This\n\t * returns -1 if the given stylename does not occur (as a stylename) in the\n\t * given style, otherwise it returns the index of the first character.\n\t */\n\tindexOfStylename: function(style, stylename)\n\t{\n\t\tif (style != null && stylename != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\tvar pos = 0;\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] == stylename)\n\t\t\t\t{\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpos += tokens[i].length + 1;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\t\n\t/**\n\t * Function: addStylename\n\t * \n\t * Adds the specified stylename to the given style if it does not already\n\t * contain the stylename.\n\t */\n\taddStylename: function(style, stylename)\n\t{\n\t\tif (mxUtils.indexOfStylename(style, stylename) < 0)\n\t\t{\n\t\t\tif (style == null)\n\t\t\t{\n\t\t\t\tstyle = '';\n\t\t\t}\n\t\t\telse if (style.length > 0 && style.charAt(style.length - 1) != ';')\n\t\t\t{\n\t\t\t\tstyle += ';';\n\t\t\t}\n\t\t\t\n\t\t\tstyle += stylename;\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: removeStylename\n\t * \n\t * Removes all occurrences of the specified stylename in the given style\n\t * and returns the updated style. Trailing semicolons are not preserved.\n\t */\n\tremoveStylename: function(style, stylename)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] != stylename)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\t\n\t/**\n\t * Function: removeAllStylenames\n\t * \n\t * Removes all stylenames from the given style and returns the updated\n\t * style.\n\t */\n\tremoveAllStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\t// Keeps the key, value assignments\n\t\t\t\tif (tokens[i].indexOf('=') >= 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\n\t/**\n\t * Function: setCellStyles\n\t * \n\t * Assigns the value for the given key in the styles of the given cells, or\n\t * removes the key from the styles if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> to execute the transaction in.\n\t * cells - Array of <mxCells> to be updated.\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetCellStyles: function(model, cells, key, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyle(model.getStyle(cells[i]), key, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyle\n\t * \n\t * Adds or removes the given key, value pair to the style and returns the\n\t * new style. If value is null or zero length then the key is removed from\n\t * the style. This is for cell styles, not for CSS styles.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetStyle: function(style, key, value)\n\t{\n\t\tvar isValue = value != null && (typeof(value.length) == 'undefined' || value.length > 0);\n\t\t\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (isValue)\n\t\t\t{\n\t\t\t\tstyle = key + '=' + value + ';';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (style.substring(0, key.length + 1) == key + '=')\n\t\t\t{\n\t\t\t\tvar next = style.indexOf(';');\n\t\t\t\t\n\t\t\t\tif (isValue)\n\t\t\t\t{\n\t\t\t\t\tstyle = key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = (next < 0 || next == style.length - 1) ? '' : style.substring(next + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar index = style.indexOf(';' + key + '=');\n\t\t\t\t\n\t\t\t\tif (index < 0)\n\t\t\t\t{\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sep = (style.charAt(style.length - 1) == ';') ? '' : ';';\n\t\t\t\t\t\tstyle = style + sep + key + '=' + value + ';';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar next = style.indexOf(';', index + 1);\n\t\t\t\t\t\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index + 1) + key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index) + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\n\t/**\n\t * Function: setCellStyleFlags\n\t * \n\t * Sets or toggles the flag bit for the given key in the cell's styles.\n\t * If value is null then the flag is toggled.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var cells = graph.getSelectionCells();\n\t * mxUtils.setCellStyleFlags(graph.model,\n\t * \t\t\tcells,\n\t * \t\t\tmxConstants.STYLE_FONTSTYLE,\n\t * \t\t\tmxConstants.FONT_BOLD);\n\t * (end)\n\t * \n\t * Toggles the bold font style.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> that contains the cells.\n\t * cells - Array of <mxCells> to change the style for.\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the flag.\n\t */\n\tsetCellStyleFlags: function(model, cells, key, flag, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyleFlag(\n\t\t\t\t\t\t\tmodel.getStyle(cells[i]),\n\t\t\t\t\t\t\tkey, flag, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyleFlag\n\t * \n\t * Sets or removes the given key from the specified style and returns the\n\t * new style. If value is null then the flag is toggled.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the given flag.\n\t */\n\tsetStyleFlag: function(style, key, flag, value)\n\t{\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (value || value == null)\n\t\t\t{\n\t\t\t\tstyle = key+'='+flag;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstyle = key+'=0';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar index = style.indexOf(key+'=');\n\t\t\t\n\t\t\tif (index < 0)\n\t\t\t{\n\t\t\t\tvar sep = (style.charAt(style.length-1) == ';') ? '' : ';';\n\n\t\t\t\tif (value || value == null)\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=' + flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=0';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar cont = style.indexOf(';', index);\n\t\t\t\tvar tmp = '';\n\t\t\t\t\n\t\t\t\tif (cont < 0)\n\t\t\t\t{\n\t\t\t\t\ttmp  = style.substring(index+key.length+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = style.substring(index+key.length+1, cont);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (value == null)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) ^ flag;\n\t\t\t\t}\n\t\t\t\telse if (value)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) | flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) & ~flag;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstyle = style.substring(0, index) + key + '=' + tmp +\n\t\t\t\t\t((cont >= 0) ? style.substring(cont) : '');\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: getAlignmentAsPoint\n\t * \n\t * Returns an <mxPoint> that represents the horizontal and vertical alignment\n\t * for numeric computations. X is -0.5 for center, -1 for right and 0 for\n\t * left alignment. Y is -0.5 for middle, -1 for bottom and 0 for top\n\t * alignment. Default values for missing arguments is top, left.\n\t */\n\tgetAlignmentAsPoint: function(align, valign)\n\t{\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\t// Horizontal alignment\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tdx = -0.5;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tdx = -1;\n\t\t}\n\n\t\t// Vertical alignment\n\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tdy = -0.5;\n\t\t}\n\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy = -1;\n\t\t}\n\t\t\n\t\treturn new mxPoint(dx, dy);\n\t},\n\t\n\t/**\n\t * Function: getSizeForString\n\t * \n\t * Returns an <mxRectangle> with the size (width and height in pixels) of\n\t * the given string. The string may contain HTML markup. Newlines should be\n\t * converted to <br> before calling this method. The caller is responsible\n\t * for sanitizing the HTML markup.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var label = graph.getLabel(cell).replace(/\\n/g, \"<br>\");\n\t * var size = graph.getSizeForString(label);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * text - String whose size should be returned.\n\t * fontSize - Integer that specifies the font size in pixels. Default is\n\t * <mxConstants.DEFAULT_FONTSIZE>.\n\t * fontFamily - String that specifies the name of the font family. Default\n\t * is <mxConstants.DEFAULT_FONTFAMILY>.\n\t * textWidth - Optional width for text wrapping.\n\t */\n\tgetSizeForString: function(text, fontSize, fontFamily, textWidth)\n\t{\n\t\tfontSize = (fontSize != null) ? fontSize : mxConstants.DEFAULT_FONTSIZE;\n\t\tfontFamily = (fontFamily != null) ? fontFamily : mxConstants.DEFAULT_FONTFAMILY;\n\t\tvar div = document.createElement('div');\n\t\t\n\t\t// Sets the font size and family\n\t\tdiv.style.fontFamily = fontFamily;\n\t\tdiv.style.fontSize = Math.round(fontSize) + 'px';\n\t\tdiv.style.lineHeight = Math.round(fontSize * mxConstants.LINE_HEIGHT) + 'px';\n\t\t\n\t\t// Disables block layout and outside wrapping and hides the div\n\t\tdiv.style.position = 'absolute';\n\t\tdiv.style.visibility = 'hidden';\n\t\tdiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\tdiv.style.zoom = '1';\n\t\t\n\t\tif (textWidth != null)\n\t\t{\n\t\t\tdiv.style.width = textWidth + 'px';\n\t\t\tdiv.style.whiteSpace = 'normal';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\t// Adds the text and inserts into DOM for updating of size\n\t\tdiv.innerHTML = text;\n\t\tdocument.body.appendChild(div);\n\t\t\n\t\t// Gets the size and removes from DOM\n\t\tvar size = new mxRectangle(0, 0, div.offsetWidth, div.offsetHeight);\n\t\tdocument.body.removeChild(div);\n\t\t\n\t\treturn size;\n\t},\n\t\n\t/**\n\t * Function: getViewXml\n\t */\n\tgetViewXml: function(graph, scale, cells, x0, y0)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\tscale = (scale != null) ? scale : 1;\n\n\t\tif (cells == null)\n\t\t{\n\t\t\tvar model = graph.getModel();\n\t\t\tcells = [model.getRoot()];\n\t\t}\n\t\t\n\t\tvar view = graph.getView();\n\t\tvar result = null;\n\n\t\t// Disables events on the view\n\t\tvar eventsEnabled = view.isEventsEnabled();\n\t\tview.setEventsEnabled(false);\n\n\t\t// Workaround for label bounds not taken into account for image export.\n\t\t// Creates a temporary draw pane which is used for rendering the text.\n\t\t// Text rendering is required for finding the bounds of the labels.\n\t\tvar drawPane = view.drawPane;\n\t\tvar overlayPane = view.overlayPane;\n\n\t\tif (graph.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tview.drawPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.drawPane);\n\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tview.drawPane = view.drawPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.drawPane);\n\t\t\t\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = view.overlayPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\n\t\t// Resets the translation\n\t\tvar translate = view.getTranslate();\n\t\tview.translate = new mxPoint(x0, y0);\n\n\t\t// Creates the temporary cell states in the view\n\t\tvar temp = new mxTemporaryCellStates(graph.getView(), scale, cells);\n\n\t\ttry\n\t\t{\n\t\t\tvar enc = new mxCodec();\n\t\t\tresult = enc.encode(graph.getView());\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\ttemp.destroy();\n\t\t\tview.translate = translate;\n\t\t\tview.canvas.removeChild(view.drawPane);\n\t\t\tview.canvas.removeChild(view.overlayPane);\n\t\t\tview.drawPane = drawPane;\n\t\t\tview.overlayPane = overlayPane;\n\t\t\tview.setEventsEnabled(eventsEnabled);\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: getScaleForPageCount\n\t * \n\t * Returns the scale to be used for printing the graph with the given\n\t * bounds across the specifies number of pages with the given format. The\n\t * scale is always computed such that it given the given amount or fewer\n\t * pages in the print output. See <mxPrintPreview> for an example.\n\t * \n\t * Parameters:\n\t * \n\t * pageCount - Specifies the number of pages in the print output.\n\t * graph - <mxGraph> that should be printed.\n\t * pageFormat - Optional <mxRectangle> that specifies the page format.\n\t * Default is <mxConstants.PAGE_FORMAT_A4_PORTRAIT>.\n\t * border - The border along each side of every page.\n\t */\n\tgetScaleForPageCount: function(pageCount, graph, pageFormat, border)\n\t{\n\t\tif (pageCount < 1)\n\t\t{\n\t\t\t// We can't work with less than 1 page, return no scale\n\t\t\t// change\n\t\t\treturn 1;\n\t\t}\n\t\t\n\t\tpageFormat = (pageFormat != null) ? pageFormat : mxConstants.PAGE_FORMAT_A4_PORTRAIT;\n\t\tborder = (border != null) ? border : 0;\n\t\t\n\t\tvar availablePageWidth = pageFormat.width - (border * 2);\n\t\tvar availablePageHeight = pageFormat.height - (border * 2);\n\n\t\t// Work out the number of pages required if the\n\t\t// graph is not scaled.\n\t\tvar graphBounds = graph.getGraphBounds().clone();\n\t\tvar sc = graph.getView().getScale();\n\t\tgraphBounds.width /= sc;\n\t\tgraphBounds.height /= sc;\n\t\tvar graphWidth = graphBounds.width;\n\t\tvar graphHeight = graphBounds.height;\n\n\t\tvar scale = 1;\n\t\t\n\t\t// The ratio of the width/height for each printer page\n\t\tvar pageFormatAspectRatio = availablePageWidth / availablePageHeight;\n\t\t// The ratio of the width/height for the graph to be printer\n\t\tvar graphAspectRatio = graphWidth / graphHeight;\n\t\t\n\t\t// The ratio of horizontal pages / vertical pages for this \n\t\t// graph to maintain its aspect ratio on this page format\n\t\tvar pagesAspectRatio = graphAspectRatio / pageFormatAspectRatio;\n\t\t\n\t\t// Factor the square root of the page count up and down \n\t\t// by the pages aspect ratio to obtain a horizontal and \n\t\t// vertical page count that adds up to the page count\n\t\t// and has the correct aspect ratio\n\t\tvar pageRoot = Math.sqrt(pageCount);\n\t\tvar pagesAspectRatioSqrt = Math.sqrt(pagesAspectRatio);\n\t\tvar numRowPages = pageRoot * pagesAspectRatioSqrt;\n\t\tvar numColumnPages = pageRoot / pagesAspectRatioSqrt;\n\n\t\t// These value are rarely more than 2 rounding downs away from\n\t\t// a total that meets the page count. In cases of one being less \n\t\t// than 1 page, the other value can be too high and take more iterations \n\t\t// In this case, just change that value to be the page count, since \n\t\t// we know the other value is 1\n\t\tif (numRowPages < 1 && numColumnPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numColumnPages / pageCount;\n\t\t\tnumColumnPages = pageCount;\n\t\t\tnumRowPages /= scaleChange;\n\t\t}\n\t\t\n\t\tif (numColumnPages < 1 && numRowPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numRowPages / pageCount;\n\t\t\tnumRowPages = pageCount;\n\t\t\tnumColumnPages /= scaleChange;\n\t\t}\t\t\n\n\t\tvar currentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\n\t\tvar numLoops = 0;\n\t\t\n\t\t// Iterate through while the rounded up number of pages comes to\n\t\t// a total greater than the required number\n\t\twhile (currentTotalPages > pageCount)\n\t\t{\n\t\t\t// Round down the page count (rows or columns) that is\n\t\t\t// closest to its next integer down in percentage terms.\n\t\t\t// i.e. Reduce the page total by reducing the total\n\t\t\t// page area by the least possible amount\n\n\t\t\tvar roundRowDownProportion = Math.floor(numRowPages) / numRowPages;\n\t\t\tvar roundColumnDownProportion = Math.floor(numColumnPages) / numColumnPages;\n\t\t\t\n\t\t\t// If the round down proportion is, work out the proportion to\n\t\t\t// round down to 1 page less\n\t\t\tif (roundRowDownProportion == 1)\n\t\t\t{\n\t\t\t\troundRowDownProportion = Math.floor(numRowPages-1) / numRowPages;\n\t\t\t}\n\t\t\tif (roundColumnDownProportion == 1)\n\t\t\t{\n\t\t\t\troundColumnDownProportion = Math.floor(numColumnPages-1) / numColumnPages;\n\t\t\t}\n\t\t\t\n\t\t\t// Check which rounding down is smaller, but in the case of very small roundings\n\t\t\t// try the other dimension instead\n\t\t\tvar scaleChange = 1;\n\t\t\t\n\t\t\t// Use the higher of the two values\n\t\t\tif (roundRowDownProportion > roundColumnDownProportion)\n\t\t\t{\n\t\t\t\tscaleChange = roundRowDownProportion;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tscaleChange = roundColumnDownProportion;\n\t\t\t}\n\n\t\t\tnumRowPages = numRowPages * scaleChange;\n\t\t\tnumColumnPages = numColumnPages * scaleChange;\n\t\t\tcurrentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\t\t\t\n\t\t\tnumLoops++;\n\t\t\t\n\t\t\tif (numLoops > 10)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Work out the scale from the number of row pages required\n\t\t// The column pages will give the same value\n\t\tvar posterWidth = availablePageWidth * numRowPages;\n\t\tscale = posterWidth / graphWidth;\n\t\t\n\t\t// Allow for rounding errors\n\t\treturn scale * 0.99999;\n\t},\n\t\n\t/**\n\t * Function: show\n\t * \n\t * Copies the styles and the markup from the graph's container into the\n\t * given document and removes all cursor styles. The document is returned.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * If you experience problems with missing stylesheets in IE then try adding\n\t * the domain to the trusted sites.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be copied.\n\t * doc - Document where the new graph is created.\n\t * x0 - X-coordinate of the graph view origin. Default is 0.\n\t * y0 - Y-coordinate of the graph view origin. Default is 0.\n\t * w - Optional width of the graph view.\n\t * h - Optional height of the graph view.\n\t */\n\tshow: function(graph, doc, x0, y0, w, h)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\t\n\t\tif (doc == null)\n\t\t{\n\t\t\tvar wnd = window.open();\n\t\t\tdoc = wnd.document;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.open();\n\t\t}\n\n\t\t// Workaround for missing print output in IE9 standards\n\t\tif (document.documentMode == 9)\n\t\t{\n\t\t\tdoc.writeln('<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\"><![endif]-->');\n\t\t}\n\t\t\n\t\tvar bounds = graph.getGraphBounds();\n\t\tvar dx = Math.ceil(x0 - bounds.x);\n\t\tvar dy = Math.ceil(y0 - bounds.y);\n\t\t\n\t\tif (w == null)\n\t\t{\n\t\t\tw = Math.ceil(bounds.width + x0) + Math.ceil(Math.ceil(bounds.x) - bounds.x);\n\t\t}\n\t\t\n\t\tif (h == null)\n\t\t{\n\t\t\th = Math.ceil(bounds.height + y0) + Math.ceil(Math.ceil(bounds.y) - bounds.y);\n\t\t}\n\t\t\n\t\t// Needs a special way of creating the page so that no click is required\n\t\t// to refresh the contents after the external CSS styles have been loaded.\n\t\t// To avoid a click or programmatic refresh, the styleSheets[].cssText\n\t\t// property is copied over from the original document.\n\t\tif (mxClient.IS_IE || document.documentMode == 11)\n\t\t{\n\t\t\tvar html = '<html><head>';\n\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\thtml += base[i].outerHTML;\n\t\t\t}\n\n\t\t\thtml += '<style>';\n\n\t\t\t// Copies the stylesheets without having to load them again\n\t\t\tfor (var i = 0; i < document.styleSheets.length; i++)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\thtml += document.styleSheets[i].cssText;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// ignore security exception\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</style></head><body style=\"margin:0px;\">';\n\t\t\t\n\t\t\t// Copies the contents of the graph container\n\t\t\thtml += '<div style=\"position:absolute;overflow:hidden;width:' + w + 'px;height:' + h + 'px;\"><div style=\"position:relative;left:' + dx + 'px;top:' + dy + 'px;\">';\n\t\t\thtml += graph.container.innerHTML;\n\t\t\thtml += '</div></div></body><html>';\n\n\t\t\tdoc.writeln(html);\n\t\t\tdoc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.writeln('<html><head>');\n\t\t\t\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(base[i]));\n\t\t\t}\n\t\t\t\n\t\t\tvar links = document.getElementsByTagName('link');\n\t\t\t\n\t\t\tfor (var i = 0; i < links.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(links[i]));\n\t\t\t}\n\t\n\t\t\tvar styles = document.getElementsByTagName('style');\n\t\t\t\n\t\t\tfor (var i = 0; i < styles.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(styles[i]));\n\t\t\t}\n\n\t\t\tdoc.writeln('</head><body style=\"margin:0px;\"></body></html>');\n\t\t\tdoc.close();\n\n\t\t\tvar outer = doc.createElement('div');\n\t\t\touter.position = 'absolute';\n\t\t\touter.overflow = 'hidden';\n\t\t\touter.style.width = w + 'px';\n\t\t\touter.style.height = h + 'px';\n\n\t\t\t// Required for HTML labels if foreignObjects are disabled\n\t\t\tvar div = doc.createElement('div');\n\t\t\tdiv.style.position = 'absolute';\n\t\t\tdiv.style.left = dx + 'px';\n\t\t\tdiv.style.top = dy + 'px';\n\n\t\t\tvar node = graph.container.firstChild;\n\t\t\tvar svg = null;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tvar clone = node.cloneNode(true);\n\t\t\t\t\n\t\t\t\tif (node == graph.view.drawPane.ownerSVGElement)\n\t\t\t\t{\n\t\t\t\t\touter.appendChild(clone);\n\t\t\t\t\tsvg = clone;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdiv.appendChild(clone);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\n\t\t\tdoc.body.appendChild(outer);\n\t\t\t\n\t\t\tif (div.firstChild != null)\n\t\t\t{\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tif (svg != null)\n\t\t\t{\n\t\t\t\tsvg.style.minWidth = '';\n\t\t\t\tsvg.style.minHeight = '';\n\t\t\t\tsvg.firstChild.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t}\n\t\t}\n\t\t\n\t\tmxUtils.removeCursors(doc.body);\n\t\n\t\treturn doc;\n\t},\n\t\n\t/**\n\t * Function: printScreen\n\t * \n\t * Prints the specified graph using a new window and the built-in print\n\t * dialog.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be printed.\n\t */\n\tprintScreen: function(graph)\n\t{\n\t\tvar wnd = window.open();\n\t\tvar bounds = graph.getGraphBounds();\n\t\tmxUtils.show(graph, wnd.document);\n\t\t\n\t\tvar print = function()\n\t\t{\n\t\t\twnd.focus();\n\t\t\twnd.print();\n\t\t\twnd.close();\n\t\t};\n\t\t\n\t\t// Workaround for Google Chrome which needs a bit of a\n\t\t// delay in order to render the SVG contents\n\t\tif (mxClient.IS_GC)\n\t\t{\n\t\t\twnd.setTimeout(print, 500);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint();\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: popup\n\t * \n\t * Shows the specified text content in a new <mxWindow> or a new browser\n\t * window if isInternalWindow is false.\n\t * \n\t * Parameters:\n\t * \n\t * content - String that specifies the text to be displayed.\n\t * isInternalWindow - Optional boolean indicating if an mxWindow should be\n\t * used instead of a new browser window. Default is false.\n\t */\n\tpopup: function(content, isInternalWindow)\n\t{\n\t   \tif (isInternalWindow)\n\t   \t{\n\t\t\tvar div = document.createElement('div');\n\t\t\t\n\t\t\tdiv.style.overflow = 'scroll';\n\t\t\tdiv.style.width = '636px';\n\t\t\tdiv.style.height = '460px';\n\t\t\t\n\t\t\tvar pre = document.createElement('pre');\n\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t\n\t\t\tdiv.appendChild(pre);\n\t\t\t\n\t\t\tvar w = document.body.clientWidth;\n\t\t\tvar h = Math.max(document.body.clientHeight || 0, document.documentElement.clientHeight)\n\t\t\tvar wnd = new mxWindow('Popup Window', div,\n\t\t\t\tw/2-320, h/2-240, 640, 480, false, true);\n\n\t\t\twnd.setClosable(true);\n\t\t\twnd.setVisible(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Wraps up the XML content in a textarea\n\t\t\tif (mxClient.IS_NS)\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t\twnd.document.writeln('<pre>'+mxUtils.htmlEntities(content)+'</pre');\n\t\t\t   \twnd.document.close();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t    var pre = wnd.document.createElement('pre');\n\t\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t   \twnd.document.body.appendChild(pre);\n\t\t\t}\n\t   \t}\n\t},\n\t\n\t/**\n\t * Function: alert\n\t * \n\t * Displayss the given alert in a new dialog. This implementation uses the\n\t * built-in alert function. This is used to display validation errors when\n\t * connections cannot be changed or created.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\talert: function(message)\n\t{\n\t\talert(message);\n\t},\n\t\n\t/**\n\t * Function: prompt\n\t * \n\t * Displays the given message in a prompt dialog. This implementation uses\n\t * the built-in prompt function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * defaultValue - Optional string specifying the default value.\n\t */\n\tprompt: function(message, defaultValue)\n\t{\n\t\treturn prompt(message, (defaultValue != null) ? defaultValue : '');\n\t},\n\t\n\t/**\n\t * Function: confirm\n\t * \n\t * Displays the given message in a confirm dialog. This implementation uses\n\t * the built-in confirm function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\tconfirm: function(message)\n\t{\n\t\treturn confirm(message);\n\t},\n\n\t/**\n\t * Function: error\n\t * \n\t * Displays the given error message in a new <mxWindow> of the given width.\n\t * If close is true then an additional close button is added to the window.\n\t * The optional icon specifies the icon to be used for the window. Default\n\t * is <mxUtils.errorImage>.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * width - Integer specifying the width of the window.\n\t * close - Optional boolean indicating whether to add a close button.\n\t * icon - Optional icon for the window decoration.\n\t */\n\terror: function(message, width, close, icon)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.padding = '20px';\n\n\t\tvar img = document.createElement('img');\n\t\timg.setAttribute('src', icon || mxUtils.errorImage);\n\t\timg.setAttribute('valign', 'bottom');\n\t\timg.style.verticalAlign = 'middle';\n\t\tdiv.appendChild(img);\n\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tmxUtils.write(div, message);\n\n\t\tvar w = document.body.clientWidth;\n\t\tvar h = (document.body.clientHeight || document.documentElement.clientHeight);\n\t\tvar warn = new mxWindow(mxResources.get(mxUtils.errorResource) ||\n\t\t\tmxUtils.errorResource, div, (w-width)/2, h/4, width, null,\n\t\t\tfalse, true);\n\n\t\tif (close)\n\t\t{\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\tvar tmp = document.createElement('p');\n\t\t\tvar button = document.createElement('button');\n\n\t\t\tif (mxClient.IS_IE)\n\t\t\t{\n\t\t\t\tbutton.style.cssText = 'float:right';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbutton.setAttribute('style', 'float:right');\n\t\t\t}\n\n\t\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t\t{\n\t\t\t\twarn.destroy();\n\t\t\t});\n\n\t\t\tmxUtils.write(button, mxResources.get(mxUtils.closeResource) ||\n\t\t\t\tmxUtils.closeResource);\n\t\t\t\n\t\t\ttmp.appendChild(button);\n\t\t\tdiv.appendChild(tmp);\n\t\t\t\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\twarn.setClosable(true);\n\t\t}\n\t\t\n\t\twarn.setVisible(true);\n\t\t\n\t\treturn warn;\n\t},\n\n\t/**\n\t * Function: makeDraggable\n\t * \n\t * Configures the given DOM element to act as a drag source for the\n\t * specified graph. Returns a a new <mxDragSource>. If\n\t * <mxDragSource.guideEnabled> is enabled then the x and y arguments must\n\t * be used in funct to match the preview location.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var funct = function(graph, evt, cell, x, y)\n\t * {\n\t *   if (graph.canImportCell(cell))\n\t *   {\n\t *     var parent = graph.getDefaultParent();\n\t *     var vertex = null;\n\t *     \n\t *     graph.getModel().beginUpdate();\n\t *     try\n\t *     {\n\t * \t     vertex = graph.insertVertex(parent, null, 'Hello', x, y, 80, 30);\n\t *     }\n\t *     finally\n\t *     {\n\t *       graph.getModel().endUpdate();\n\t *     }\n\t *\n\t *     graph.setSelectionCell(vertex);\n\t *   }\n\t * }\n\t * \n\t * var img = document.createElement('img');\n\t * img.setAttribute('src', 'editors/images/rectangle.gif');\n\t * img.style.position = 'absolute';\n\t * img.style.left = '0px';\n\t * img.style.top = '0px';\n\t * img.style.width = '16px';\n\t * img.style.height = '16px';\n\t * \n\t * var dragImage = img.cloneNode(true);\n\t * dragImage.style.width = '32px';\n\t * dragImage.style.height = '32px';\n\t * mxUtils.makeDraggable(img, graph, funct, dragImage);\n\t * document.body.appendChild(img);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM element to make draggable.\n\t * graphF - <mxGraph> that acts as the drop target or a function that takes a\n\t * mouse event and returns the current <mxGraph>.\n\t * funct - Function to execute on a successful drop.\n\t * dragElement - Optional DOM node to be used for the drag preview.\n\t * dx - Optional horizontal offset between the cursor and the drag\n\t * preview.\n\t * dy - Optional vertical offset between the cursor and the drag\n\t * preview.\n\t * autoscroll - Optional boolean that specifies if autoscroll should be\n\t * used. Default is mxGraph.autoscroll.\n\t * scalePreview - Optional boolean that specifies if the preview element\n\t * should be scaled according to the graph scale. If this is true, then\n\t * the offsets will also be scaled. Default is false.\n\t * highlightDropTargets - Optional boolean that specifies if dropTargets\n\t * should be highlighted. Default is true.\n\t * getDropTarget - Optional function to return the drop target for a given\n\t * location (x, y). Default is mxGraph.getCellAt.\n\t */\n\tmakeDraggable: function(element, graphF, funct, dragElement, dx, dy, autoscroll,\n\t\t\tscalePreview, highlightDropTargets, getDropTarget)\n\t{\n\t\tvar dragSource = new mxDragSource(element, funct);\n\t\tdragSource.dragOffset = new mxPoint((dx != null) ? dx : 0,\n\t\t\t(dy != null) ? dy : mxConstants.TOOLTIP_VERTICAL_OFFSET);\n\t\tdragSource.autoscroll = autoscroll;\n\t\t\n\t\t// Cannot enable this by default. This needs to be enabled in the caller\n\t\t// if the funct argument uses the new x- and y-arguments.\n\t\tdragSource.setGuidesEnabled(false);\n\t\t\n\t\tif (highlightDropTargets != null)\n\t\t{\n\t\t\tdragSource.highlightDropTargets = highlightDropTargets;\n\t\t}\n\t\t\n\t\t// Overrides function to find drop target cell\n\t\tif (getDropTarget != null)\n\t\t{\n\t\t\tdragSource.getDropTarget = getDropTarget;\n\t\t}\n\t\t\n\t\t// Overrides function to get current graph\n\t\tdragSource.getGraphForEvent = function(evt)\n\t\t{\n\t\t\treturn (typeof(graphF) == 'function') ? graphF(evt) : graphF;\n\t\t};\n\t\t\n\t\t// Translates switches into dragSource customizations\n\t\tif (dragElement != null)\n\t\t{\n\t\t\tdragSource.createDragElement = function()\n\t\t\t{\n\t\t\t\treturn dragElement.cloneNode(true);\n\t\t\t};\n\t\t\t\n\t\t\tif (scalePreview)\n\t\t\t{\n\t\t\t\tdragSource.createPreviewElement = function(graph)\n\t\t\t\t{\n\t\t\t\t\tvar elt = dragElement.cloneNode(true);\n\n\t\t\t\t\tvar w = parseInt(elt.style.width);\n\t\t\t\t\tvar h = parseInt(elt.style.height);\n\t\t\t\t\telt.style.width = Math.round(w * graph.view.scale) + 'px';\n\t\t\t\t\telt.style.height = Math.round(h * graph.view.scale) + 'px';\n\t\t\t\t\t\n\t\t\t\t\treturn elt;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn dragSource;\n\t}\n\n};\n\n__mxOutput.mxUtils = typeof mxUtils !== 'undefined' ? mxUtils : undefined;\n"]}