{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/util/mxDragSource.js"],"names":["mxDragSource","element","dropHandler","mxEvent","addGestureListeners","mxUtils","bind","evt","mouseDown","addListener","consume","eventConsumer","sender","evtName","getProperty","me","MOUSE_DOWN","prototype","dragOffset","dragElement","previewElement","enabled","currentGraph","currentDropTarget","currentPoint","currentGuide","currentHighlight","autoscroll","guidesEnabled","gridEnabled","highlightDropTargets","dragElementZIndex","dragElementOpacity","checkEventSource","isEnabled","setEnabled","value","isGuidesEnabled","setGuidesEnabled","isGridEnabled","setGridEnabled","getGraphForEvent","getDropTarget","graph","x","y","getCellAt","createDragElement","cloneNode","createPreviewElement","isActive","mouseMoveHandler","reset","dragExit","removeDragElement","removeListeners","stopDrag","isConsumed","startDrag","mouseMove","mouseUpHandler","mouseUp","document","mxClient","IS_TOUCH","isMouseEvent","eventSource","getSource","style","position","zIndex","setOpacity","IS_SVG","pointerEvents","parentNode","removeChild","getElementForEvent","isTouchEvent","isPenEvent","elementFromPoint","getClientX","getClientY","graphContainsEvent","offset","getOffset","container","origin","getScrollOrigin","elt","offsetWidth","offsetHeight","dragEnter","dragOver","visibility","body","appendChild","getDocumentScrollOrigin","left","top","scale","view","tr","translate","drop","removeGestureListeners","isMouseDown","isMouseTrigger","mxGuide","graphHandler","getGuideStates","mxCellHighlight","mxConstants","DROP_TARGET_COLOR","FIRE_MOUSE_EVENT","removeListener","destroy","panDx","panDy","autoScroll","scrollPointToVisible","autoExtend","isDropEnabled","state","getView","getState","highlight","isGridEnabledEvent","hideGuide","isEnabledForEvent","w","parseInt","width","h","height","bounds","mxRectangle","delta","mxPoint","move","off","gridSize","snap","hide","previewOffset","Math","round","dropTarget","apply","arguments","focus","__mxOutput","undefined"],"mappings":"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","file":"mxDragSource.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDragSource\n * \n * Wrapper to create a drag source from a DOM element so that the element can\n * be dragged over a graph and dropped into the graph as a new cell.\n * \n * Problem is that in the dropHandler the current preview location is not\n * available, so the preview and the dropHandler must match.\n * \n * Constructor: mxDragSource\n * \n * Constructs a new drag source for the given element.\n */\nfunction mxDragSource(element, dropHandler)\n{\n\tthis.element = element;\n\tthis.dropHandler = dropHandler;\n\t\n\t// Handles a drag gesture on the element\n\tmxEvent.addGestureListeners(element, mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseDown(evt);\n\t}));\n\t\n\t// Prevents native drag and drop\n\tmxEvent.addListener(element, 'dragstart', function(evt)\n\t{\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tthis.eventConsumer = function(sender, evt)\n\t{\n\t\tvar evtName = evt.getProperty('eventName');\n\t\tvar me = evt.getProperty('event');\n\t\t\n\t\tif (evtName != mxEvent.MOUSE_DOWN)\n\t\t{\n\t\t\tme.consume();\n\t\t}\n\t};\n};\n\n/**\n * Variable: element\n *\n * Reference to the DOM node which was made draggable.\n */\nmxDragSource.prototype.element = null;\n\n/**\n * Variable: dropHandler\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dropHandler = null;\n\n/**\n * Variable: dragOffset\n *\n * <mxPoint> that specifies the offset of the <dragElement>. Default is null.\n */\nmxDragSource.prototype.dragOffset = null;\n\n/**\n * Variable: dragElement\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dragElement = null;\n\n/**\n * Variable: previewElement\n *\n * Optional <mxRectangle> that specifies the unscaled size of the preview.\n */\nmxDragSource.prototype.previewElement = null;\n\n/**\n * Variable: enabled\n *\n * Specifies if this drag source is enabled. Default is true.\n */\nmxDragSource.prototype.enabled = true;\n\n/**\n * Variable: currentGraph\n *\n * Reference to the <mxGraph> that is the current drop target.\n */\nmxDragSource.prototype.currentGraph = null;\n\n/**\n * Variable: currentDropTarget\n *\n * Holds the current drop target under the mouse.\n */\nmxDragSource.prototype.currentDropTarget = null;\n\n/**\n * Variable: currentPoint\n *\n * Holds the current drop location.\n */\nmxDragSource.prototype.currentPoint = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentGuide = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentHighlight = null;\n\n/**\n * Variable: autoscroll\n *\n * Specifies if the graph should scroll automatically. Default is true.\n */\nmxDragSource.prototype.autoscroll = true;\n\n/**\n * Variable: guidesEnabled\n *\n * Specifies if <mxGuide> should be enabled. Default is true.\n */\nmxDragSource.prototype.guidesEnabled = true;\n\n/**\n * Variable: gridEnabled\n *\n * Specifies if the grid should be allowed. Default is true.\n */\nmxDragSource.prototype.gridEnabled = true;\n\n/**\n * Variable: highlightDropTargets\n *\n * Specifies if drop targets should be highlighted. Default is true.\n */\nmxDragSource.prototype.highlightDropTargets = true;\n\n/**\n * Variable: dragElementZIndex\n * \n * ZIndex for the drag element. Default is 100.\n */\nmxDragSource.prototype.dragElementZIndex = 100;\n\n/**\n * Variable: dragElementOpacity\n * \n * Opacity of the drag element in %. Default is 70.\n */\nmxDragSource.prototype.dragElementOpacity = 70;\n\n/**\n * Variable: checkEventSource\n * \n * Whether the event source should be checked in <graphContainerEvent>. Default\n * is true.\n */\nmxDragSource.prototype.checkEventSource = true;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxDragSource.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxDragSource.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isGuidesEnabled\n * \n * Returns <guidesEnabled>.\n */\nmxDragSource.prototype.isGuidesEnabled = function()\n{\n\treturn this.guidesEnabled;\n};\n\n/**\n * Function: setGuidesEnabled\n * \n * Sets <guidesEnabled>.\n */\nmxDragSource.prototype.setGuidesEnabled = function(value)\n{\n\tthis.guidesEnabled = value;\n};\n\n/**\n * Function: isGridEnabled\n * \n * Returns <gridEnabled>.\n */\nmxDragSource.prototype.isGridEnabled = function()\n{\n\treturn this.gridEnabled;\n};\n\n/**\n * Function: setGridEnabled\n * \n * Sets <gridEnabled>.\n */\nmxDragSource.prototype.setGridEnabled = function(value)\n{\n\tthis.gridEnabled = value;\n};\n\n/**\n * Function: getGraphForEvent\n * \n * Returns the graph for the given mouse event. This implementation returns\n * null.\n */\nmxDragSource.prototype.getGraphForEvent = function(evt)\n{\n\treturn null;\n};\n\n/**\n * Function: getDropTarget\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.getDropTarget = function(graph, x, y, evt)\n{\n\treturn graph.getCellAt(x, y);\n};\n\n/**\n * Function: createDragElement\n * \n * Creates and returns a clone of the <dragElementPrototype> or the <element>\n * if the former is not defined.\n */\nmxDragSource.prototype.createDragElement = function(evt)\n{\n\treturn this.element.cloneNode(true);\n};\n\n/**\n * Function: createPreviewElement\n * \n * Creates and returns an element which can be used as a preview in the given\n * graph.\n */\nmxDragSource.prototype.createPreviewElement = function(graph)\n{\n\treturn null;\n};\n\n/**\n * Function: isActive\n * \n * Returns true if this drag source is active.\n */\nmxDragSource.prototype.isActive = function()\n{\n\treturn this.mouseMoveHandler != null;\n};\n\n/**\n * Function: reset\n * \n * Stops and removes everything and restores the state of the object.\n */\nmxDragSource.prototype.reset = function()\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\t\n\tthis.removeDragElement();\n\tthis.removeListeners();\n\tthis.stopDrag();\n};\n\n/**\n * Function: mouseDown\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n * \n * To ignore popup menu events for a drag source, this function can be\n * overridden as follows.\n * \n * (code)\n * var mouseDown = dragSource.mouseDown;\n * \n * dragSource.mouseDown = function(evt)\n * {\n *   if (!mxEvent.isPopupTrigger(evt))\n *   {\n *     mouseDown.apply(this, arguments);\n *   }\n * };\n * (end)\n */\nmxDragSource.prototype.mouseDown = function(evt)\n{\n\tif (this.enabled && !mxEvent.isConsumed(evt) && this.mouseMoveHandler == null)\n\t{\n\t\tthis.startDrag(evt);\n\t\tthis.mouseMoveHandler = mxUtils.bind(this, this.mouseMove);\n\t\tthis.mouseUpHandler = mxUtils.bind(this, this.mouseUp);\t\t\n\t\tmxEvent.addGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t\n\t\tif (mxClient.IS_TOUCH && !mxEvent.isMouseEvent(evt))\n\t\t{\n\t\t\tthis.eventSource = mxEvent.getSource(evt);\n\t\t\tmxEvent.addGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t}\n\t}\n};\n\n/**\n * Function: startDrag\n * \n * Creates the <dragElement> using <createDragElement>.\n */\nmxDragSource.prototype.startDrag = function(evt)\n{\n\tthis.dragElement = this.createDragElement(evt);\n\tthis.dragElement.style.position = 'absolute';\n\tthis.dragElement.style.zIndex = this.dragElementZIndex;\n\tmxUtils.setOpacity(this.dragElement, this.dragElementOpacity);\n\n\tif (this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.dragElement.style.pointerEvents = 'none';\n\t}\n};\n\n/**\n * Function: stopDrag\n * \n * Invokes <removeDragElement>.\n */\nmxDragSource.prototype.stopDrag = function()\n{\n\t// LATER: This used to have a mouse event. If that is still needed we need to add another\n\t// final call to the DnD protocol to add a cleanup step in the case of escape press, which\n\t// is not associated with a mouse event and which currently calles this method.\n\tthis.removeDragElement();\n};\n\n/**\n * Function: removeDragElement\n * \n * Removes and destroys the <dragElement>.\n */\nmxDragSource.prototype.removeDragElement = function()\n{\n\tif (this.dragElement != null)\n\t{\n\t\tif (this.dragElement.parentNode != null)\n\t\t{\n\t\t\tthis.dragElement.parentNode.removeChild(this.dragElement);\n\t\t}\n\t\t\n\t\tthis.dragElement = null;\n\t}\n};\n\n/**\n * Function: getElementForEvent\n * \n * Returns the topmost element under the given event.\n */\nmxDragSource.prototype.getElementForEvent = function(evt)\n{\n\treturn ((mxEvent.isTouchEvent(evt) || mxEvent.isPenEvent(evt)) ?\n\t\t\tdocument.elementFromPoint(mxEvent.getClientX(evt), mxEvent.getClientY(evt)) :\n\t\t\t\tmxEvent.getSource(evt));\n};\n\n/**\n * Function: graphContainsEvent\n * \n * Returns true if the given graph contains the given event.\n */\nmxDragSource.prototype.graphContainsEvent = function(graph, evt)\n{\n\tvar x = mxEvent.getClientX(evt);\n\tvar y = mxEvent.getClientY(evt);\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin();\n\tvar elt = this.getElementForEvent(evt);\n\t\n\tif (this.checkEventSource)\n\t{\n\t\twhile (elt != null && elt != graph.container)\n\t\t{\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\n\t// Checks if event is inside the bounds of the graph container\n\treturn elt != null && x >= offset.x - origin.x && y >= offset.y - origin.y &&\n\t\tx <= offset.x - origin.x + graph.container.offsetWidth &&\n\t\ty <= offset.y - origin.y + graph.container.offsetHeight;\n};\n\n/**\n * Function: mouseMove\n * \n * Gets the graph for the given event using <getGraphForEvent>, updates the\n * <currentGraph>, calling <dragEnter> and <dragExit> on the new and old graph,\n * respectively, and invokes <dragOver> if <currentGraph> is not null.\n */\nmxDragSource.prototype.mouseMove = function(evt)\n{\n\tvar graph = this.getGraphForEvent(evt);\n\t\n\t// Checks if event is inside the bounds of the graph container\n\tif (graph != null && !this.graphContainsEvent(graph, evt))\n\t{\n\t\tgraph = null;\n\t}\n\n\tif (graph != this.currentGraph)\n\t{\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragExit(this.currentGraph, evt);\n\t\t}\n\t\t\n\t\tthis.currentGraph = graph;\n\t\t\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragEnter(this.currentGraph, evt);\n\t\t}\n\t}\n\t\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragOver(this.currentGraph, evt);\n\t}\n\n\tif (this.dragElement != null && (this.previewElement == null || this.previewElement.style.visibility != 'visible'))\n\t{\n\t\tvar x = mxEvent.getClientX(evt);\n\t\tvar y = mxEvent.getClientY(evt);\n\t\t\n\t\tif (this.dragElement.parentNode == null)\n\t\t{\n\t\t\tdocument.body.appendChild(this.dragElement);\n\t\t}\n\n\t\tthis.dragElement.style.visibility = 'visible';\n\t\t\n\t\tif (this.dragOffset != null)\n\t\t{\n\t\t\tx += this.dragOffset.x;\n\t\t\ty += this.dragOffset.y;\n\t\t}\n\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(document);\n\t\t\n\t\tthis.dragElement.style.left = (x + offset.x) + 'px';\n\t\tthis.dragElement.style.top = (y + offset.y) + 'px';\n\t}\n\telse if (this.dragElement != null)\n\t{\n\t\tthis.dragElement.style.visibility = 'hidden';\n\t}\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: mouseUp\n * \n * Processes the mouse up event and invokes <drop>, <dragExit> and <stopDrag>\n * as required.\n */\nmxDragSource.prototype.mouseUp = function(evt)\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tif (this.currentPoint != null && (this.previewElement == null ||\n\t\t\tthis.previewElement.style.visibility != 'hidden'))\n\t\t{\n\t\t\tvar scale = this.currentGraph.view.scale;\n\t\t\tvar tr = this.currentGraph.view.translate;\n\t\t\tvar x = this.currentPoint.x / scale - tr.x;\n\t\t\tvar y = this.currentPoint.y / scale - tr.y;\n\t\t\t\n\t\t\tthis.drop(this.currentGraph, evt, this.currentDropTarget, x, y);\n\t\t}\n\t\t\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\n\tthis.stopDrag();\n\tthis.removeListeners();\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: removeListeners\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.removeListeners = function()\n{\n\tif (this.eventSource != null)\n\t{\n\t\tmxEvent.removeGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\tthis.eventSource = null;\n\t}\n\t\n\tmxEvent.removeGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\tthis.mouseMoveHandler = null;\n\tthis.mouseUpHandler = null;\n};\n\n/**\n * Function: dragEnter\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.dragEnter = function(graph, evt)\n{\n\tgraph.isMouseDown = true;\n\tgraph.isMouseTrigger = mxEvent.isMouseEvent(evt);\n\tthis.previewElement = this.createPreviewElement(graph);\n\t\n\tif (this.previewElement != null && this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.previewElement.style.pointerEvents = 'none';\n\t}\n\t\n\t// Guide is only needed if preview element is used\n\tif (this.isGuidesEnabled() && this.previewElement != null)\n\t{\n\t\tthis.currentGuide = new mxGuide(graph, graph.graphHandler.getGuideStates());\n\t}\n\t\n\tif (this.highlightDropTargets)\n\t{\n\t\tthis.currentHighlight = new mxCellHighlight(graph, mxConstants.DROP_TARGET_COLOR);\n\t}\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.eventConsumer);\n};\n\n/**\n * Function: dragExit\n * \n * Deactivates the given graph as a drop target.\n */\nmxDragSource.prototype.dragExit = function(graph, evt)\n{\n\tthis.currentDropTarget = null;\n\tthis.currentPoint = null;\n\tgraph.isMouseDown = false;\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.removeListener(this.eventConsumer);\n\t\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode != null)\n\t\t{\n\t\t\tthis.previewElement.parentNode.removeChild(this.previewElement);\n\t\t}\n\t\t\n\t\tthis.previewElement = null;\n\t}\n\t\n\tif (this.currentGuide != null)\n\t{\n\t\tthis.currentGuide.destroy();\n\t\tthis.currentGuide = null;\n\t}\n\t\n\tif (this.currentHighlight != null)\n\t{\n\t\tthis.currentHighlight.destroy();\n\t\tthis.currentHighlight = null;\n\t}\n};\n\n/**\n * Function: dragOver\n * \n * Implements autoscroll, updates the <currentPoint>, highlights any drop\n * targets and updates the preview.\n */\nmxDragSource.prototype.dragOver = function(graph, evt)\n{\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin(graph.container);\n\tvar x = mxEvent.getClientX(evt) - offset.x + origin.x - graph.panDx;\n\tvar y = mxEvent.getClientY(evt) - offset.y + origin.y - graph.panDy;\n\n\tif (graph.autoScroll && (this.autoscroll == null || this.autoscroll))\n\t{\n\t\tgraph.scrollPointToVisible(x, y, graph.autoExtend);\n\t}\n\n\t// Highlights the drop target under the mouse\n\tif (this.currentHighlight != null && graph.isDropEnabled())\n\t{\n\t\tthis.currentDropTarget = this.getDropTarget(graph, x, y, evt);\n\t\tvar state = graph.getView().getState(this.currentDropTarget);\n\t\tthis.currentHighlight.highlight(state);\n\t}\n\n\t// Updates the location of the preview\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode == null)\n\t\t{\n\t\t\tgraph.container.appendChild(this.previewElement);\n\t\t\t\n\t\t\tthis.previewElement.style.zIndex = '3';\n\t\t\tthis.previewElement.style.position = 'absolute';\n\t\t}\n\t\t\n\t\tvar gridEnabled = this.isGridEnabled() && graph.isGridEnabledEvent(evt);\n\t\tvar hideGuide = true;\n\n\t\t// Grid and guides\n\t\tif (this.currentGuide != null && this.currentGuide.isEnabledForEvent(evt))\n\t\t{\n\t\t\t// LATER: HTML preview appears smaller than SVG preview\n\t\t\tvar w = parseInt(this.previewElement.style.width);\n\t\t\tvar h = parseInt(this.previewElement.style.height);\n\t\t\tvar bounds = new mxRectangle(0, 0, w, h);\n\t\t\tvar delta = new mxPoint(x, y);\n\t\t\tdelta = this.currentGuide.move(bounds, delta, gridEnabled, true);\n\t\t\thideGuide = false;\n\t\t\tx = delta.x;\n\t\t\ty = delta.y;\n\t\t}\n\t\telse if (gridEnabled)\n\t\t{\n\t\t\tvar scale = graph.view.scale;\n\t\t\tvar tr = graph.view.translate;\n\t\t\tvar off = graph.gridSize / 2;\n\t\t\tx = (graph.snap(x / scale - tr.x - off) + tr.x) * scale;\n\t\t\ty = (graph.snap(y / scale - tr.y - off) + tr.y) * scale;\n\t\t}\n\t\t\n\t\tif (this.currentGuide != null && hideGuide)\n\t\t{\n\t\t\tthis.currentGuide.hide();\n\t\t}\n\t\t\n\t\tif (this.previewOffset != null)\n\t\t{\n\t\t\tx += this.previewOffset.x;\n\t\t\ty += this.previewOffset.y;\n\t\t}\n\n\t\tthis.previewElement.style.left = Math.round(x) + 'px';\n\t\tthis.previewElement.style.top = Math.round(y) + 'px';\n\t\tthis.previewElement.style.visibility = 'visible';\n\t}\n\t\n\tthis.currentPoint = new mxPoint(x, y);\n};\n\n/**\n * Function: drop\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.drop = function(graph, evt, dropTarget, x, y)\n{\n\tthis.dropHandler.apply(this, arguments);\n\t\n\t// Had to move this to after the insert because it will\n\t// affect the scrollbars of the window in IE to try and\n\t// make the complete container visible.\n\t// LATER: Should be made optional.\n\tif (graph.container.style.visibility != 'hidden')\n\t{\n\t\tgraph.container.focus();\n\t}\n};\n\n__mxOutput.mxDragSource = typeof mxDragSource !== 'undefined' ? mxDragSource : undefined;\n"]}