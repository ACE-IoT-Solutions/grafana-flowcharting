{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/util/mxEffects.js"],"names":["mxEffects","animateChanges","graph","changes","done","maxStep","step","animate","isRequired","i","length","change","mxGeometryChange","mxTerminalChange","mxValueChange","mxChildChange","mxStyleChange","state","getView","getState","cell","child","constructor","model","isEdge","mxUtils","setOpacity","shape","node","scale","dx","geometry","x","previous","dy","y","sx","width","sy","height","cellRenderer","redraw","cascadeOpacity","window","setTimeout","delay","opacity","childCount","getChildCount","getChildAt","childState","edges","getEdges","edgeState","fadeOut","from","remove","isEnabled","f","Math","max","style","visibility","parentNode","removeChild","__mxOutput","undefined"],"mappings":"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","file":"mxEffects.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEffects =\n{\n\n\t/**\n\t * Class: mxEffects\n\t * \n\t * Provides animation effects.\n\t */\n\n\t/**\n\t * Function: animateChanges\n\t * \n\t * Asynchronous animated move operation. See also: <mxMorphing>.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n\t * {\n\t *   var changes = evt.getProperty('edit').changes;\n\t * \n\t *   if (changes.length < 10)\n\t *   {\n\t *     mxEffects.animateChanges(graph, changes);\n\t *   }\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that received the changes.\n\t * changes - Array of changes to be animated.\n\t * done - Optional function argument that is invoked after the\n\t * last step of the animation.\n\t */\n\tanimateChanges: function(graph, changes, done)\n\t{\n\t\tvar maxStep = 10;\n\t\tvar step = 0;\n\n\t\tvar animate = function() \n\t\t{\n\t\t\tvar isRequired = false;\n\t\t\t\n\t\t\tfor (var i = 0; i < changes.length; i++)\n\t\t\t{\n\t\t\t\tvar change = changes[i];\n\t\t\t\t\n\t\t\t\tif (change instanceof mxGeometryChange ||\n\t\t\t\t\tchange instanceof mxTerminalChange ||\n\t\t\t\t\tchange instanceof mxValueChange ||\n\t\t\t\t\tchange instanceof mxChildChange ||\n\t\t\t\t\tchange instanceof mxStyleChange)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.getView().getState(change.cell || change.child, false);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tisRequired = true;\n\t\t\t\t\t\n\t\t\t\t\t\tif (change.constructor != mxGeometryChange || graph.model.isEdge(change.cell))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxUtils.setOpacity(state.shape.node, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar scale = graph.getView().scale;\t\t\t\t\t\n\n\t\t\t\t\t\t\tvar dx = (change.geometry.x - change.previous.x) * scale;\n\t\t\t\t\t\t\tvar dy = (change.geometry.y - change.previous.y) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar sx = (change.geometry.width - change.previous.width) * scale;\n\t\t\t\t\t\t\tvar sy = (change.geometry.height - change.previous.height) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (step == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x -= dx;\n\t\t\t\t\t\t\t\tstate.y -= dy;\n\t\t\t\t\t\t\t\tstate.width -= sx;\n\t\t\t\t\t\t\t\tstate.height -= sy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x += dx / maxStep;\n\t\t\t\t\t\t\t\tstate.y += dy / maxStep;\n\t\t\t\t\t\t\t\tstate.width += sx / maxStep;\n\t\t\t\t\t\t\t\tstate.height += sy / maxStep;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgraph.cellRenderer.redraw(state);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Fades all connected edges and children\n\t\t\t\t\t\t\tmxEffects.cascadeOpacity(graph, change.cell, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (step < maxStep && isRequired)\n\t\t\t{\n\t\t\t\tstep++;\n\t\t\t\twindow.setTimeout(animate, delay);\n\t\t\t}\n\t\t\telse if (done != null)\n\t\t\t{\n\t\t\t\tdone();\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar delay = 30;\n\t\tanimate();\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * Sets the opacity on the given cell and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells.\n\t * cell - <mxCell> to set the opacity for.\n\t * opacity - New value for the opacity in %.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\t// Fades all children\n\t\tvar childCount = graph.model.getChildCount(cell);\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tvar child = graph.model.getChildAt(cell, i);\n\t\t\tvar childState = graph.getView().getState(child);\n\t\t\t\n\t\t\tif (childState != null)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(childState.shape.node, opacity);\n\t\t\t\tmxEffects.cascadeOpacity(graph, child, opacity);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Fades all connected edges\n\t\tvar edges = graph.model.getEdges(cell);\n\t\t\n\t\tif (edges != null)\n\t\t{\n\t\t\tfor (var i=0; i<edges.length; i++)\n\t\t\t{\n\t\t\t\tvar edgeState = graph.getView().getState(edges[i]);\n\t\t\t\t\n\t\t\t\tif (edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.setOpacity(edgeState.shape.node, opacity);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * Asynchronous fade-out operation.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tstep = step || 40;\n\t\tdelay = delay || 30;\n\t\t\n\t\tvar opacity = from || 100;\n\t\t\n\t\tmxUtils.setOpacity(node, opacity);\n\t\t\n\t\tif (isEnabled || isEnabled == null)\n\t\t{\n\t\t\tvar f = function()\n\t\t\t{\n\t\t\t    opacity = Math.max(opacity-step, 0);\n\t\t\t\tmxUtils.setOpacity(node, opacity);\n\t\t\t\t\n\t\t\t\tif (opacity > 0)\n\t\t\t\t{\n\t\t\t\t\twindow.setTimeout(f, delay);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\t\t\n\t\t\t\t\tif (remove && node.parentNode)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\twindow.setTimeout(f, delay);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\n\t\t\tif (remove && node.parentNode)\n\t\t\t{\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t}\n\t\t}\n\t}\n\n};\n\n__mxOutput.mxEffects = typeof mxEffects !== 'undefined' ? mxEffects : undefined;\n"]}