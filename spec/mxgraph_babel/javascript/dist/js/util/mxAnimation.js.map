{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/util/mxAnimation.js"],"names":["mxAnimation","delay","prototype","mxEventSource","constructor","thread","isRunning","startAnimation","window","setInterval","mxUtils","bind","updateAnimation","fireEvent","mxEventObject","mxEvent","EXECUTE","stopAnimation","clearInterval","DONE","__mxOutput","undefined"],"mappings":";;;;;AAAA;;;;AAIA;;;;;;;;;;;;;;AAcA,WAASA,WAAT,CAAqBC,KAArB,EACA;AACC,SAAKA,KAAL,GAAcA,SAAS,IAAV,GAAkBA,KAAlB,GAA0B,EAAvC;AACA,G;;;AAAA;;AAED;;;AAGAD,kBAAYE,SAAZ,GAAwB,IAAIC,aAAJ,EAAxB;AACAH,kBAAYE,SAAZ,CAAsBE,WAAtB,GAAoCJ,WAApC;;AAEA;;;;;AAKAA,kBAAYE,SAAZ,CAAsBD,KAAtB,GAA8B,IAA9B;;AAEA;;;;;AAKAD,kBAAYE,SAAZ,CAAsBG,MAAtB,GAA+B,IAA/B;;AAEA;;;;;AAKAL,kBAAYE,SAAZ,CAAsBI,SAAtB,GAAkC,YAClC;AACC,eAAO,KAAKD,MAAL,IAAe,IAAtB;AACA,OAHD;;AAKA;;;;;AAKAL,kBAAYE,SAAZ,CAAsBK,cAAtB,GAAuC,YACvC;AACC,YAAI,KAAKF,MAAL,IAAe,IAAnB,EACA;AACC,eAAKA,MAAL,GAAcG,OAAOC,WAAP,CAAmBC,QAAQC,IAAR,CAAa,IAAb,EAAmB,KAAKC,eAAxB,CAAnB,EAA6D,KAAKX,KAAlE,CAAd;AACA;AACD,OAND;;AAQA;;;;;;;AAOAD,kBAAYE,SAAZ,CAAsBU,eAAtB,GAAwC,YACxC;AACC,aAAKC,SAAL,CAAe,IAAIC,aAAJ,CAAkBC,QAAQC,OAA1B,CAAf;AACA,OAHD;;AAKA;;;;;AAKAhB,kBAAYE,SAAZ,CAAsBe,aAAtB,GAAsC,YACtC;AACC,YAAI,KAAKZ,MAAL,IAAe,IAAnB,EACA;AACCG,iBAAOU,aAAP,CAAqB,KAAKb,MAA1B;AACA,eAAKA,MAAL,GAAc,IAAd;AACA,eAAKQ,SAAL,CAAe,IAAIC,aAAJ,CAAkBC,QAAQI,IAA1B,CAAf;AACA;AACD,OARD;;AAUAC,iBAAWpB,WAAX,GAAyB,OAAOA,WAAP,KAAuB,WAAvB,GAAqCA,WAArC,GAAmDqB,SAA5E","file":"mxAnimation.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxAnimation\n * \n * Implements a basic animation in JavaScript.\n * \n * Constructor: mxAnimation\n * \n * Constructs an animation.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxAnimation(delay)\n{\n\tthis.delay = (delay != null) ? delay : 20;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxAnimation.prototype = new mxEventSource();\nmxAnimation.prototype.constructor = mxAnimation;\n\n/**\n * Variable: delay\n * \n * Specifies the delay between the animation steps. Defaul is 30ms.\n */\nmxAnimation.prototype.delay = null;\n\n/**\n * Variable: thread\n * \n * Reference to the thread while the animation is running.\n */\nmxAnimation.prototype.thread = null;\n\n/**\n * Function: isRunning\n * \n * Returns true if the animation is running.\n */\nmxAnimation.prototype.isRunning = function()\n{\n\treturn this.thread != null;\n};\n\n/**\n * Function: startAnimation\n *\n * Starts the animation by repeatedly invoking updateAnimation.\n */\nmxAnimation.prototype.startAnimation = function()\n{\n\tif (this.thread == null)\n\t{\n\t\tthis.thread = window.setInterval(mxUtils.bind(this, this.updateAnimation), this.delay);\n\t}\n};\n\n/**\n * Function: updateAnimation\n *\n * Hook for subclassers to implement the animation. Invoke stopAnimation\n * when finished, startAnimation to resume. This is called whenever the\n * timer fires and fires an mxEvent.EXECUTE event with no properties.\n */\nmxAnimation.prototype.updateAnimation = function()\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTE));\n};\n\n/**\n * Function: stopAnimation\n *\n * Stops the animation by deleting the timer and fires an <mxEvent.DONE>.\n */\nmxAnimation.prototype.stopAnimation = function()\n{\n\tif (this.thread != null)\n\t{\n\t\twindow.clearInterval(this.thread);\n\t\tthis.thread = null;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.DONE));\n\t}\n};\n\n__mxOutput.mxAnimation = typeof mxAnimation !== 'undefined' ? mxAnimation : undefined;\n"]}