{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/util/mxGuide.js"],"names":["mxGuide","graph","states","setStates","prototype","horizontal","vertical","guideX","guideY","isEnabledForEvent","evt","getGuideTolerance","gridSize","createGuideShape","guide","mxPolyline","mxConstants","GUIDE_COLOR","GUIDE_STROKEWIDTH","isDashed","move","bounds","delta","gridEnabled","clone","snapX","x","state","panDx","override","Math","abs","center","ttX","dx","getCenterX","left","right","width","stateX","valueX","round","dialect","DIALECT_SVG","DIALECT_VML","pointerEvents","init","getView","getOverlayPane","overrideX","snapY","y","panDy","middle","ttY","dy","getCenterY","top","bottom","height","stateY","valueY","overrideY","trx","translate","scale","tt","b","i","length","call","tx","snap","ty","c","container","node","style","visibility","minY","min","maxY","max","points","mxPoint","scrollHeight","stroke","getGuideColor","redraw","minX","maxX","scrollWidth","hide","setVisible","visible","destroy","__mxOutput","undefined"],"mappings":"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","file":"mxGuide.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGuide\n *\n * Implements the alignment of selection cells to other cells in the graph.\n * \n * Constructor: mxGuide\n * \n * Constructs a new guide object.\n */\nfunction mxGuide(graph, states)\n{\n\tthis.graph = graph;\n\tthis.setStates(states);\n};\n\n/**\n * Variable: graph\n *\n * Reference to the enclosing <mxGraph> instance.\n */\nmxGuide.prototype.graph = null;\n\n/**\n * Variable: states\n * \n * Contains the <mxCellStates> that are used for alignment.\n */\nmxGuide.prototype.states = null;\n\n/**\n * Variable: horizontal\n *\n * Specifies if horizontal guides are enabled. Default is true.\n */\nmxGuide.prototype.horizontal = true;\n\n/**\n * Variable: vertical\n *\n * Specifies if vertical guides are enabled. Default is true.\n */\nmxGuide.prototype.vertical = true;\n\n/**\n * Variable: vertical\n *\n * Holds the <mxShape> for the horizontal guide.\n */\nmxGuide.prototype.guideX = null;\n\n/**\n * Variable: vertical\n *\n * Holds the <mxShape> for the vertical guide.\n */\nmxGuide.prototype.guideY = null;\n\n/**\n * Function: setStates\n * \n * Sets the <mxCellStates> that should be used for alignment.\n */\nmxGuide.prototype.setStates = function(states)\n{\n\tthis.states = states;\n};\n\n/**\n * Function: isEnabledForEvent\n * \n * Returns true if the guide should be enabled for the given native event. This\n * implementation always returns true.\n */\nmxGuide.prototype.isEnabledForEvent = function(evt)\n{\n\treturn true;\n};\n\n/**\n * Function: getGuideTolerance\n * \n * Returns the tolerance for the guides. Default value is gridSize / 2.\n */\nmxGuide.prototype.getGuideTolerance = function()\n{\n\treturn this.graph.gridSize / 2;\n};\n\n/**\n * Function: createGuideShape\n * \n * Returns the mxShape to be used for painting the respective guide. This\n * implementation returns a new, dashed and crisp <mxPolyline> using\n * <mxConstants.GUIDE_COLOR> and <mxConstants.GUIDE_STROKEWIDTH> as the format.\n * \n * Parameters:\n * \n * horizontal - Boolean that specifies which guide should be created.\n */\nmxGuide.prototype.createGuideShape = function(horizontal)\n{\n\tvar guide = new mxPolyline([], mxConstants.GUIDE_COLOR, mxConstants.GUIDE_STROKEWIDTH);\n\tguide.isDashed = true;\n\t\n\treturn guide;\n};\n\n/**\n * Function: move\n * \n * Moves the <bounds> by the given <mxPoint> and returnt the snapped point.\n */\nmxGuide.prototype.move = function(bounds, delta, gridEnabled, clone)\n{\n\tif (this.states != null && (this.horizontal || this.vertical) && bounds != null && delta != null)\n\t{\n\t\tvar trx = this.graph.getView().translate;\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\t\n\t\tvar overrideX = false;\n\t\tvar stateX = null;\n\t\tvar valueX = null;\n\t\tvar overrideY = false;\n\t\tvar stateY = null;\n\t\tvar valueY = null;\n\t\t\n\t\tvar tt = this.getGuideTolerance();\n\t\tvar ttX = tt;\n\t\tvar ttY = tt;\n\t\t\n\t\tvar b = bounds.clone();\n\t\tb.x += delta.x;\n\t\tb.y += delta.y;\n\t\t\n\t\tvar left = b.x;\n\t\tvar right = b.x + b.width;\n\t\tvar center = b.getCenterX();\n\t\tvar top = b.y;\n\t\tvar bottom = b.y + b.height;\n\t\tvar middle = b.getCenterY();\n\t\n\t\t// Snaps the left, center and right to the given x-coordinate\n\t\tfunction snapX(x, state)\n\t\t{\n\t\t\tx += this.graph.panDx;\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (Math.abs(x - center) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.getCenterX();\n\t\t\t\tttX = Math.abs(x - center);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(x - left) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.x;\n\t\t\t\tttX = Math.abs(x - left);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(x - right) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.x - bounds.width;\n\t\t\t\tttX = Math.abs(x - right);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateX = state;\n\t\t\t\tvalueX = Math.round(x - this.graph.panDx);\n\t\t\t\t\n\t\t\t\tif (this.guideX == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideX = this.createGuideShape(true);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideX.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideX.pointerEvents = false;\n\t\t\t\t\tthis.guideX.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideX = overrideX || override;\n\t\t};\n\t\t\n\t\t// Snaps the top, middle or bottom to the given y-coordinate\n\t\tfunction snapY(y)\n\t\t{\n\t\t\ty += this.graph.panDy;\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (Math.abs(y - middle) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.getCenterY();\n\t\t\t\tttY = Math.abs(y -  middle);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(y - top) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.y;\n\t\t\t\tttY = Math.abs(y - top);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(y - bottom) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.y - bounds.height;\n\t\t\t\tttY = Math.abs(y - bottom);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateY = state;\n\t\t\t\tvalueY = Math.round(y - this.graph.panDy);\n\t\t\t\t\n\t\t\t\tif (this.guideY == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideY = this.createGuideShape(false);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideY.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideY.pointerEvents = false;\n\t\t\t\t\tthis.guideY.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideY = overrideY || override;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < this.states.length; i++)\n\t\t{\n\t\t\tvar state =  this.states[i];\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\t// Align x\n\t\t\t\tif (this.horizontal)\n\t\t\t\t{\n\t\t\t\t\tsnapX.call(this, state.getCenterX(), state);\n\t\t\t\t\tsnapX.call(this, state.x, state);\n\t\t\t\t\tsnapX.call(this, state.x + state.width, state);\n\t\t\t\t}\n\t\n\t\t\t\t// Align y\n\t\t\t\tif (this.vertical)\n\t\t\t\t{\n\t\t\t\t\tsnapY.call(this, state.getCenterY(), state);\n\t\t\t\t\tsnapY.call(this, state.y, state);\n\t\t\t\t\tsnapY.call(this, state.y + state.height, state);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Moves cells that are off-grid back to the grid on move\n\t\tif (gridEnabled)\n\t\t{\n\t\t\tif (!overrideX)\n\t\t\t{\n\t\t\t\tvar tx = bounds.x - (this.graph.snap(bounds.x /\n\t\t\t\t\tscale - trx.x) + trx.x) * scale;\n\t\t\t\tdx = this.graph.snap(dx / scale) * scale - tx;\n\t\t\t}\n\t\t\t\n\t\t\tif (!overrideY)\n\t\t\t{\n\t\t\t\tvar ty = bounds.y - (this.graph.snap(bounds.y /\n\t\t\t\t\tscale - trx.y) + trx.y) * scale;\n\t\t\t\tdy = this.graph.snap(dy / scale) * scale - ty;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Redraws the guides\n\t\tvar c = this.graph.container;\n\t\t\n\t\tif (!overrideX && this.guideX != null)\n\t\t{\n\t\t\tthis.guideX.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideX != null)\n\t\t{\n\t\t\tif (stateX != null && bounds != null)\n\t\t\t{\n\t\t\t\tminY = Math.min(bounds.y + dy - this.graph.panDy, stateX.y);\n\t\t\t\tmaxY = Math.max(bounds.y + bounds.height + dy - this.graph.panDy, stateX.y + stateX.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (minY != null && maxY != null)\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, minY), new mxPoint(valueX, maxY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, -this.graph.panDy), new mxPoint(valueX, c.scrollHeight - 3 - this.graph.panDy)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideX.stroke = this.getGuideColor(stateX, true);\n\t\t\tthis.guideX.node.style.visibility = 'visible';\n\t\t\tthis.guideX.redraw();\n\t\t}\n\t\t\n\t\tif (!overrideY && this.guideY != null)\n\t\t{\n\t\t\tthis.guideY.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideY != null)\n\t\t{\n\t\t\tif (stateY != null && bounds != null)\n\t\t\t{\n\t\t\t\tminX = Math.min(bounds.x + dx - this.graph.panDx, stateY.x);\n\t\t\t\tmaxX = Math.max(bounds.x + bounds.width + dx - this.graph.panDx, stateY.x + stateY.width);\n\t\t\t}\n\t\t\t\n\t\t\tif (minX != null && maxX != null)\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(minX, valueY), new mxPoint(maxX, valueY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(-this.graph.panDx, valueY), new mxPoint(c.scrollWidth - 3 - this.graph.panDx, valueY)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideY.stroke = this.getGuideColor(stateY, false);\n\t\t\tthis.guideY.node.style.visibility = 'visible';\n\t\t\tthis.guideY.redraw();\n\t\t}\n\t\t\n\t\tdelta = new mxPoint(dx, dy);\n\t}\n\t\n\treturn delta;\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.getGuideColor = function(state, horizontal)\n{\n\treturn mxConstants.GUIDE_COLOR;\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.hide = function()\n{\n\tthis.setVisible(false);\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides the current guides.\n */\nmxGuide.prototype.setVisible = function(visible)\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys all resources that this object uses.\n */\nmxGuide.prototype.destroy = function()\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.destroy();\n\t\tthis.guideX = null;\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.destroy();\n\t\tthis.guideY = null;\n\t}\n};\n\n__mxOutput.mxGuide = typeof mxGuide !== 'undefined' ? mxGuide : undefined;\n"]}