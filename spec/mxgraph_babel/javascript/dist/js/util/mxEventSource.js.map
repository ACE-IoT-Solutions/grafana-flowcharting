{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/util/mxEventSource.js"],"names":["mxEventSource","eventSource","setEventSource","prototype","eventListeners","eventsEnabled","isEventsEnabled","setEventsEnabled","value","getEventSource","addListener","name","funct","push","removeListener","i","length","splice","fireEvent","evt","sender","mxEventObject","args","listen","getName","apply","__mxOutput","undefined"],"mappings":";;;;;AAAA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;AAsBA,WAASA,aAAT,CAAuBC,WAAvB,EACA;AACC,SAAKC,cAAL,CAAoBD,WAApB;AACA,G;;;AAAA;;AAED;;;;;;;AAOAD,oBAAcG,SAAd,CAAwBC,cAAxB,GAAyC,IAAzC;;AAEA;;;;;AAKAJ,oBAAcG,SAAd,CAAwBE,aAAxB,GAAwC,IAAxC;;AAEA;;;;;AAKAL,oBAAcG,SAAd,CAAwBF,WAAxB,GAAsC,IAAtC;;AAEA;;;;;AAKAD,oBAAcG,SAAd,CAAwBG,eAAxB,GAA0C,YAC1C;AACC,eAAO,KAAKD,aAAZ;AACA,OAHD;;AAKA;;;;;AAKAL,oBAAcG,SAAd,CAAwBI,gBAAxB,GAA2C,UAASC,KAAT,EAC3C;AACC,aAAKH,aAAL,GAAqBG,KAArB;AACA,OAHD;;AAKA;;;;;AAKAR,oBAAcG,SAAd,CAAwBM,cAAxB,GAAyC,YACzC;AACC,eAAO,KAAKR,WAAZ;AACA,OAHD;;AAKA;;;;;AAKAD,oBAAcG,SAAd,CAAwBD,cAAxB,GAAyC,UAASM,KAAT,EACzC;AACC,aAAKP,WAAL,GAAmBO,KAAnB;AACA,OAHD;;AAKA;;;;;;;;AAQAR,oBAAcG,SAAd,CAAwBO,WAAxB,GAAsC,UAASC,IAAT,EAAeC,KAAf,EACtC;AACC,YAAI,KAAKR,cAAL,IAAuB,IAA3B,EACA;AACC,eAAKA,cAAL,GAAsB,EAAtB;AACA;;AAED,aAAKA,cAAL,CAAoBS,IAApB,CAAyBF,IAAzB;AACA,aAAKP,cAAL,CAAoBS,IAApB,CAAyBD,KAAzB;AACA,OATD;;AAWA;;;;;AAKAZ,oBAAcG,SAAd,CAAwBW,cAAxB,GAAyC,UAASF,KAAT,EACzC;AACC,YAAI,KAAKR,cAAL,IAAuB,IAA3B,EACA;AACC,cAAIW,IAAI,CAAR;;AAEA,iBAAOA,IAAI,KAAKX,cAAL,CAAoBY,MAA/B,EACA;AACC,gBAAI,KAAKZ,cAAL,CAAoBW,IAAE,CAAtB,KAA4BH,KAAhC,EACA;AACC,mBAAKR,cAAL,CAAoBa,MAApB,CAA2BF,CAA3B,EAA8B,CAA9B;AACA,aAHD,MAKA;AACCA,mBAAK,CAAL;AACA;AACD;AACD;AACD,OAlBD;;AAoBA;;;;;;;;;;;;;;;;;;;AAmBAf,oBAAcG,SAAd,CAAwBe,SAAxB,GAAoC,UAASC,GAAT,EAAcC,MAAd,EACpC;AACC,YAAI,KAAKhB,cAAL,IAAuB,IAAvB,IAA+B,KAAKE,eAAL,EAAnC,EACA;AACC,cAAIa,OAAO,IAAX,EACA;AACCA,kBAAM,IAAIE,aAAJ,EAAN;AACA;;AAED,cAAID,UAAU,IAAd,EACA;AACCA,qBAAS,KAAKX,cAAL,EAAT;AACA;;AAED,cAAIW,UAAU,IAAd,EACA;AACCA,qBAAS,IAAT;AACA;;AAED,cAAIE,OAAO,CAACF,MAAD,EAASD,GAAT,CAAX;;AAEA,eAAK,IAAIJ,IAAI,CAAb,EAAgBA,IAAI,KAAKX,cAAL,CAAoBY,MAAxC,EAAgDD,KAAK,CAArD,EACA;AACC,gBAAIQ,SAAS,KAAKnB,cAAL,CAAoBW,CAApB,CAAb;;AAEA,gBAAIQ,UAAU,IAAV,IAAkBA,UAAUJ,IAAIK,OAAJ,EAAhC,EACA;AACC,mBAAKpB,cAAL,CAAoBW,IAAE,CAAtB,EAAyBU,KAAzB,CAA+B,IAA/B,EAAqCH,IAArC;AACA;AACD;AACD;AACD,OA/BD;;AAiCAI,iBAAW1B,aAAX,GAA2B,OAAOA,aAAP,KAAyB,WAAzB,GAAuCA,aAAvC,GAAuD2B,SAAlF","file":"mxEventSource.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEventSource\n *\n * Base class for objects that dispatch named events. To create a subclass that\n * inherits from mxEventSource, the following code is used.\n *\n * (code)\n * function MyClass() { };\n *\n * MyClass.prototype = new mxEventSource();\n * MyClass.prototype.constructor = MyClass;\n * (end)\n *\n * Known Subclasses:\n *\n * <mxGraphModel>, <mxGraph>, <mxGraphView>, <mxEditor>, <mxCellOverlay>,\n * <mxToolbar>, <mxWindow>\n * \n * Constructor: mxEventSource\n *\n * Constructs a new event source.\n */\nfunction mxEventSource(eventSource)\n{\n\tthis.setEventSource(eventSource);\n};\n\n/**\n * Variable: eventListeners\n *\n * Holds the event names and associated listeners in an array. The array\n * contains the event name followed by the respective listener for each\n * registered listener.\n */\nmxEventSource.prototype.eventListeners = null;\n\n/**\n * Variable: eventsEnabled\n *\n * Specifies if events can be fired. Default is true.\n */\nmxEventSource.prototype.eventsEnabled = true;\n\n/**\n * Variable: eventSource\n *\n * Optional source for events. Default is null.\n */\nmxEventSource.prototype.eventSource = null;\n\n/**\n * Function: isEventsEnabled\n * \n * Returns <eventsEnabled>.\n */\nmxEventSource.prototype.isEventsEnabled = function()\n{\n\treturn this.eventsEnabled;\n};\n\n/**\n * Function: setEventsEnabled\n * \n * Sets <eventsEnabled>.\n */\nmxEventSource.prototype.setEventsEnabled = function(value)\n{\n\tthis.eventsEnabled = value;\n};\n\n/**\n * Function: getEventSource\n * \n * Returns <eventSource>.\n */\nmxEventSource.prototype.getEventSource = function()\n{\n\treturn this.eventSource;\n};\n\n/**\n * Function: setEventSource\n * \n * Sets <eventSource>.\n */\nmxEventSource.prototype.setEventSource = function(value)\n{\n\tthis.eventSource = value;\n};\n\n/**\n * Function: addListener\n *\n * Binds the specified function to the given event name. If no event name\n * is given, then the listener is registered for all events.\n * \n * The parameters of the listener are the sender and an <mxEventObject>.\n */\nmxEventSource.prototype.addListener = function(name, funct)\n{\n\tif (this.eventListeners == null)\n\t{\n\t\tthis.eventListeners = [];\n\t}\n\t\n\tthis.eventListeners.push(name);\n\tthis.eventListeners.push(funct);\n};\n\n/**\n * Function: removeListener\n *\n * Removes all occurrences of the given listener from <eventListeners>.\n */\nmxEventSource.prototype.removeListener = function(funct)\n{\n\tif (this.eventListeners != null)\n\t{\n\t\tvar i = 0;\n\t\t\n\t\twhile (i < this.eventListeners.length)\n\t\t{\n\t\t\tif (this.eventListeners[i+1] == funct)\n\t\t\t{\n\t\t\t\tthis.eventListeners.splice(i, 2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: fireEvent\n *\n * Dispatches the given event to the listeners which are registered for\n * the event. The sender argument is optional. The current execution scope\n * (\"this\") is used for the listener invocation (see <mxUtils.bind>).\n *\n * Example:\n *\n * (code)\n * fireEvent(new mxEventObject(\"eventName\", key1, val1, .., keyN, valN))\n * (end)\n * \n * Parameters:\n *\n * evt - <mxEventObject> that represents the event.\n * sender - Optional sender to be passed to the listener. Default value is\n * the return value of <getEventSource>.\n */\nmxEventSource.prototype.fireEvent = function(evt, sender)\n{\n\tif (this.eventListeners != null && this.isEventsEnabled())\n\t{\n\t\tif (evt == null)\n\t\t{\n\t\t\tevt = new mxEventObject();\n\t\t}\n\t\t\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this.getEventSource();\n\t\t}\n\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this;\n\t\t}\n\n\t\tvar args = [sender, evt];\n\t\t\n\t\tfor (var i = 0; i < this.eventListeners.length; i += 2)\n\t\t{\n\t\t\tvar listen = this.eventListeners[i];\n\t\t\t\n\t\t\tif (listen == null || listen == evt.getName())\n\t\t\t{\n\t\t\t\tthis.eventListeners[i+1].apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n};\n\n__mxOutput.mxEventSource = typeof mxEventSource !== 'undefined' ? mxEventSource : undefined;\n"]}