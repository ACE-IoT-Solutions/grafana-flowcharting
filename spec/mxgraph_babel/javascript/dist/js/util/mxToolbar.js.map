{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/util/mxToolbar.js"],"names":["mxToolbar","container","prototype","mxEventSource","constructor","enabled","noReset","updateDefaultMode","addItem","title","icon","funct","pressedIcon","style","factoryMethod","img","document","createElement","initialClassName","className","setAttribute","mxUtils","write","appendChild","mxEvent","addListener","mxClient","IS_TOUCH","mouseHandler","bind","evt","backgroundColor","addGestureListeners","menu","mxPopupMenu","init","last","currentImg","isMenuShowing","hideMenu","point","mxPoint","offsetLeft","offsetTop","offsetHeight","popup","x","y","apply","addCombo","div","display","select","addActionCombo","addOption","value","options","selectedIndex","combo","option","writeln","addSwitchMode","altIcon","tmp","selectedMode","getAttribute","defaultMode","fireEvent","mxEventObject","SELECT","selectMode","addMode","toggle","defaultFunction","domNode","resetMode","forced","addSeparator","addBreak","br","addLine","hr","marginRight","destroy","release","__mxOutput","undefined"],"mappings":"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","file":"mxToolbar.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxToolbar\n * \n * Creates a toolbar inside a given DOM node. The toolbar may contain icons,\n * buttons and combo boxes.\n * \n * Event: mxEvent.SELECT\n * \n * Fires when an item was selected in the toolbar. The <code>function</code>\n * property contains the function that was selected in <selectMode>.\n * \n * Constructor: mxToolbar\n * \n * Constructs a toolbar in the specified container.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n */\nfunction mxToolbar(container)\n{\n\tthis.container = container;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxToolbar.prototype = new mxEventSource();\nmxToolbar.prototype.constructor = mxToolbar;\n\n/**\n * Variable: container\n * \n * Reference to the DOM nodes that contains the toolbar.\n */\nmxToolbar.prototype.container = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxToolbar.prototype.enabled = true;\n\n/**\n * Variable: noReset\n * \n * Specifies if <resetMode> requires a forced flag of true for resetting\n * the current mode in the toolbar. Default is false. This is set to true\n * if the toolbar item is double clicked to avoid a reset after a single\n * use of the item.\n */\nmxToolbar.prototype.noReset = false;\n\n/**\n * Variable: updateDefaultMode\n * \n * Boolean indicating if the default mode should be the last selected\n * switch mode or the first inserted switch mode. Default is true, that\n * is the last selected switch mode is the default mode. The default mode\n * is the mode to be selected after a reset of the toolbar. If this is\n * false, then the default mode is the first inserted mode item regardless\n * of what was last selected. Otherwise, the selected item after a reset is\n * the previously selected item.\n */\nmxToolbar.prototype.updateDefaultMode = true;\n\n/**\n * Function: addItem\n * \n * Adds the given function as an image with the specified title and icon\n * and returns the new image node.\n * \n * Parameters:\n * \n * title - Optional string that is used as the tooltip.\n * icon - Optional URL of the image to be used. If no URL is given, then a\n * button is created.\n * funct - Function to execute on a mouse click.\n * pressedIcon - Optional URL of the pressed image. Default is a gray\n * background.\n * style - Optional style classname. Default is mxToolbarItem.\n * factoryMethod - Optional factory method for popup menu, eg.\n * function(menu, evt, cell) { menu.addItem('Hello, World!'); }\n */\nmxToolbar.prototype.addItem = function(title, icon, funct, pressedIcon, style, factoryMethod)\n{\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\tvar initialClassName = style || ((factoryMethod != null) ?\n\t\t\t'mxToolbarMode' : 'mxToolbarItem');\n\timg.className = initialClassName;\n\timg.setAttribute('src', icon);\n\t\n\tif (title != null)\n\t{\n\t\tif (icon != null)\n\t\t{\n\t\t\timg.setAttribute('title', title);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.write(img, title);\n\t\t}\n\t}\n\t\n\tthis.container.appendChild(img);\n\n\t// Invokes the function on a click on the toolbar item\n\tif (funct != null)\n\t{\n\t\tmxEvent.addListener(img, 'click', funct);\n\t\t\n\t\tif (mxClient.IS_TOUCH)\n\t\t{\n\t\t\tmxEvent.addListener(img, 'touchend', funct);\n\t\t}\n\t}\n\n\tvar mouseHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', icon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = '';\n\t\t}\n\t});\n\n\t// Highlights the toolbar item with a gray background\n\t// while it is being clicked with the mouse\n\tmxEvent.addGestureListeners(img, mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', pressedIcon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = 'gray';\n\t\t}\n\t\t\n\t\t// Popup Menu\n\t\tif (factoryMethod != null)\n\t\t{\n\t\t\tif (this.menu == null)\n\t\t\t{\n\t\t\t\tthis.menu = new mxPopupMenu();\n\t\t\t\tthis.menu.init();\n\t\t\t}\n\t\t\t\n\t\t\tvar last = this.currentImg;\n\t\t\t\n\t\t\tif (this.menu.isMenuShowing())\n\t\t\t{\n\t\t\t\tthis.menu.hideMenu();\n\t\t\t}\n\t\t\t\n\t\t\tif (last != img)\n\t\t\t{\n\t\t\t\t// Redirects factory method to local factory method\n\t\t\t\tthis.currentImg = img;\n\t\t\t\tthis.menu.factoryMethod = factoryMethod;\n\t\t\t\t\n\t\t\t\tvar point = new mxPoint(\n\t\t\t\t\timg.offsetLeft,\n\t\t\t\t\timg.offsetTop + img.offsetHeight);\n\t\t\t\tthis.menu.popup(point.x, point.y, null, evt);\n\n\t\t\t\t// Sets and overrides to restore classname\n\t\t\t\tif (this.menu.isMenuShowing())\n\t\t\t\t{\n\t\t\t\t\timg.className = initialClassName + 'Selected';\n\t\t\t\t\t\n\t\t\t\t\tthis.menu.hideMenu = function()\n\t\t\t\t\t{\n\t\t\t\t\t\tmxPopupMenu.prototype.hideMenu.apply(this);\n\t\t\t\t\t\timg.className = initialClassName;\n\t\t\t\t\t\tthis.currentImg = null;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}), null, mouseHandler);\n\n\tmxEvent.addListener(img, 'mouseout', mouseHandler);\n\t\n\treturn img;\n};\n\n/**\n * Function: addCombo\n * \n * Adds and returns a new SELECT element using the given style. The element\n * is placed inside a DIV with the mxToolbarComboContainer style classname.\n * \n * Parameters:\n * \n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addCombo = function(style)\n{\n\tvar div = document.createElement('div');\n\tdiv.style.display = 'inline';\n\tdiv.className = 'mxToolbarComboContainer';\n\t\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tdiv.appendChild(select);\n\t\n\tthis.container.appendChild(div);\n\t\n\treturn select;\n};\n\n/**\n * Function: addCombo\n * \n * Adds and returns a new SELECT element using the given title as the\n * default element. The selection is reset to this element after each\n * change.\n * \n * Parameters:\n * \n * title - String that specifies the title of the default element.\n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addActionCombo = function(title, style)\n{\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tthis.addOption(select, title, null);\n\t\n\tmxEvent.addListener(select, 'change', function(evt)\n\t{\n\t\tvar value = select.options[select.selectedIndex];\n\t\tselect.selectedIndex = 0;\n\t\t\n\t\tif (value.funct != null)\n\t\t{\n\t\t\tvalue.funct(evt);\n\t\t}\n\t});\n\t\n\tthis.container.appendChild(select);\n\t\n\treturn select;\n};\n\n/**\n * Function: addOption\n * \n * Adds and returns a new OPTION element inside the given SELECT element.\n * If the given value is a function then it is stored in the option's funct\n * field.\n * \n * Parameters:\n * \n * combo - SELECT element that will contain the new entry.\n * title - String that specifies the title of the option.\n * value - Specifies the value associated with this option.\n */\nmxToolbar.prototype.addOption = function(combo, title, value)\n{\n\tvar option = document.createElement('option');\n\tmxUtils.writeln(option, title);\n\t\n\tif (typeof(value) == 'function')\n\t{\n\t\toption.funct = value;\n\t}\n\telse\n\t{\n\t\toption.setAttribute('value', value);\n\t}\n\t\n\tcombo.appendChild(option);\n\t\n\treturn option;\n};\n\n/**\n * Function: addSwitchMode\n * \n * Adds a new selectable item to the toolbar. Only one switch mode item may\n * be selected at a time. The currently selected item is the default item\n * after a reset of the toolbar.\n */\nmxToolbar.prototype.addSwitchMode = function(title, icon, funct, pressedIcon, style)\n{\n\tvar img = document.createElement('img');\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\t\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t{\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t}\n\t\t\n\t\tif (this.updateDefaultMode)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t}\n\t\t\n\t\tthis.selectedMode = img;\n\t\t\n\t\tvar tmp = img.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\timg.altIcon = img.getAttribute('src');\n\t\t\timg.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.className = img.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT));\n\t\tfunct();\n\t}));\n\t\n\tthis.container.appendChild(img);\n\t\n\tif (this.defaultMode == null)\n\t{\n\t\tthis.defaultMode = img;\n\t\t\n\t\t// Function should fire only once so\n\t\t// do not pass it with the select event\n\t\tthis.selectMode(img);\n\t\tfunct();\n\t}\n\t\n\treturn img;\n};\n\n/**\n * Function: addMode\n * \n * Adds a new item to the toolbar. The selection is typically reset after\n * the item has been consumed, for example by adding a new vertex to the\n * graph. The reset is not carried out if the item is double clicked.\n * \n * The function argument uses the following signature: funct(evt, cell) where\n * evt is the native mouse event and cell is the cell under the mouse.\n */\nmxToolbar.prototype.addMode = function(title, icon, funct, pressedIcon, style, toggle)\n{\n\ttoggle = (toggle != null) ? toggle : true;\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\t\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tif (this.enabled && toggle)\n\t{\n\t\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = false;\n\t\t}));\n\t\t\n\t\tmxEvent.addListener(img, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = true;\n\t\t}));\n\t\t\n\t\tif (this.defaultMode == null)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t\tthis.defaultFunction = funct;\n\t\t\tthis.selectMode(img, funct);\n\t\t}\n\t}\n\n\tthis.container.appendChild(img);\t\t\t\t\t\n\n\treturn img;\n};\n\n/**\n * Function: selectMode\n * \n * Resets the state of the previously selected mode and displays the given\n * DOM node as selected. This function fires a select event with the given\n * function as a parameter.\n */\nmxToolbar.prototype.selectMode = function(domNode, funct)\n{\n\tif (this.selectedMode != domNode)\n\t{\n\t\tif (this.selectedMode != null)\n\t\t{\n\t\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.selectedMode = domNode;\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT, \"function\", funct));\n\t}\n};\n\n/**\n * Function: resetMode\n * \n * Selects the default mode and resets the state of the previously selected\n * mode.\n */\nmxToolbar.prototype.resetMode = function(forced)\n{\n\tif ((forced || !this.noReset) && this.selectedMode != this.defaultMode)\n\t{\n\t\t// The last selected switch mode will be activated\n\t\t// so the function was already executed and is\n\t\t// no longer required here\n\t\tthis.selectMode(this.defaultMode, this.defaultFunction);\n\t}\n};\n\n/**\n * Function: addSeparator\n * \n * Adds the specifies image as a separator.\n * \n * Parameters:\n * \n * icon - URL of the separator icon.\n */\nmxToolbar.prototype.addSeparator = function(icon)\n{\n\treturn this.addItem(null, icon, null);\n};\n\n/**\n * Function: addBreak\n * \n * Adds a break to the container.\n */\nmxToolbar.prototype.addBreak = function()\n{\n\tmxUtils.br(this.container);\n};\n\n/**\n * Function: addLine\n * \n * Adds a horizontal line to the container.\n */\nmxToolbar.prototype.addLine = function()\n{\n\tvar hr = document.createElement('hr');\n\t\n\thr.style.marginRight = '6px';\n\thr.setAttribute('size', '1');\n\t\n\tthis.container.appendChild(hr);\n};\n\n/**\n * Function: destroy\n * \n * Removes the toolbar and all its associated resources.\n */\nmxToolbar.prototype.destroy = function ()\n{\n\tmxEvent.release(this.container);\n\tthis.container = null;\n\tthis.defaultMode = null;\n\tthis.defaultFunction = null;\n\tthis.selectedMode = null;\n\t\n\tif (this.menu != null)\n\t{\n\t\tthis.menu.destroy();\n\t}\n};\n\n__mxOutput.mxToolbar = typeof mxToolbar !== 'undefined' ? mxToolbar : undefined;\n"]}