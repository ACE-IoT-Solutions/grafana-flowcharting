{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/util/mxAbstractCanvas2D.js"],"names":["mxAbstractCanvas2D","converter","createUrlConverter","reset","prototype","state","states","path","rotateHtml","lastX","lastY","moveOp","lineOp","quadOp","curveOp","closeOp","pointerEvents","mxUrlConverter","createState","dx","dy","scale","alpha","fillAlpha","strokeAlpha","fillColor","gradientFillAlpha","gradientColor","gradientAlpha","gradientDirection","strokeColor","strokeWidth","dashed","dashPattern","fixDash","lineCap","lineJoin","miterLimit","fontColor","fontBackgroundColor","fontBorderColor","fontSize","mxConstants","DEFAULT_FONTSIZE","fontFamily","DEFAULT_FONTFAMILY","fontStyle","shadow","shadowColor","SHADOWCOLOR","shadowAlpha","SHADOW_OPACITY","shadowDx","SHADOW_OFFSET_X","shadowDy","SHADOW_OFFSET_Y","rotation","rotationCx","rotationCy","format","value","Math","round","parseFloat","addOp","push","arguments","length","s","i","rotatePoint","x","y","theta","cx","cy","rad","PI","mxUtils","getRotatedPoint","mxPoint","cos","sin","save","clone","restore","pop","setLink","link","translate","rotate","flipH","flipV","setAlpha","setFillAlpha","setStrokeAlpha","setFillColor","NONE","setGradient","color1","color2","w","h","direction","alpha1","alpha2","setStrokeColor","setStrokeWidth","setDashed","setDashPattern","setLineCap","setLineJoin","setMiterLimit","setFontColor","setFontBackgroundColor","setFontBorderColor","setFontSize","setFontFamily","setFontStyle","setShadow","enabled","setShadowColor","setShadowAlpha","setShadowOffset","begin","moveTo","lineTo","quadTo","x1","y1","x2","y2","curveTo","x3","y3","arcTo","rx","ry","angle","largeArcFlag","sweepFlag","curves","arcToCurves","close","end","__mxOutput","undefined"],"mappings":"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","file":"mxAbstractCanvas2D.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxAbstractCanvas2D\n *\n * Base class for all canvases. A description of the public API is available in <mxXmlCanvas2D>.\n * All color values of <mxConstants.NONE> will be converted to null in the state.\n * \n * Constructor: mxAbstractCanvas2D\n *\n * Constructs a new abstract canvas.\n */\nfunction mxAbstractCanvas2D()\n{\n\t/**\n\t * Variable: converter\n\t * \n\t * Holds the <mxUrlConverter> to convert image URLs.\n\t */\n\tthis.converter = this.createUrlConverter();\n\t\n\tthis.reset();\n};\n\n/**\n * Variable: state\n * \n * Holds the current state.\n */\nmxAbstractCanvas2D.prototype.state = null;\n\n/**\n * Variable: states\n * \n * Stack of states.\n */\nmxAbstractCanvas2D.prototype.states = null;\n\n/**\n * Variable: path\n * \n * Holds the current path as an array.\n */\nmxAbstractCanvas2D.prototype.path = null;\n\n/**\n * Variable: rotateHtml\n * \n * Switch for rotation of HTML. Default is false.\n */\nmxAbstractCanvas2D.prototype.rotateHtml = true;\n\n/**\n * Variable: lastX\n * \n * Holds the last x coordinate.\n */\nmxAbstractCanvas2D.prototype.lastX = 0;\n\n/**\n * Variable: lastY\n * \n * Holds the last y coordinate.\n */\nmxAbstractCanvas2D.prototype.lastY = 0;\n\n/**\n * Variable: moveOp\n * \n * Contains the string used for moving in paths. Default is 'M'.\n */\nmxAbstractCanvas2D.prototype.moveOp = 'M';\n\n/**\n * Variable: lineOp\n * \n * Contains the string used for moving in paths. Default is 'L'.\n */\nmxAbstractCanvas2D.prototype.lineOp = 'L';\n\n/**\n * Variable: quadOp\n * \n * Contains the string used for quadratic paths. Default is 'Q'.\n */\nmxAbstractCanvas2D.prototype.quadOp = 'Q';\n\n/**\n * Variable: curveOp\n * \n * Contains the string used for bezier curves. Default is 'C'.\n */\nmxAbstractCanvas2D.prototype.curveOp = 'C';\n\n/**\n * Variable: closeOp\n * \n * Holds the operator for closing curves. Default is 'Z'.\n */\nmxAbstractCanvas2D.prototype.closeOp = 'Z';\n\n/**\n * Variable: pointerEvents\n * \n * Boolean value that specifies if events should be handled. Default is false.\n */\nmxAbstractCanvas2D.prototype.pointerEvents = false;\n\n/**\n * Function: createUrlConverter\n * \n * Create a new <mxUrlConverter> and returns it.\n */\nmxAbstractCanvas2D.prototype.createUrlConverter = function()\n{\n\treturn new mxUrlConverter();\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this canvas.\n */\nmxAbstractCanvas2D.prototype.reset = function()\n{\n\tthis.state = this.createState();\n\tthis.states = [];\n};\n\n/**\n * Function: createState\n * \n * Creates the state of the this canvas.\n */\nmxAbstractCanvas2D.prototype.createState = function()\n{\n\treturn {\n\t\tdx: 0,\n\t\tdy: 0,\n\t\tscale: 1,\n\t\talpha: 1,\n\t\tfillAlpha: 1,\n\t\tstrokeAlpha: 1,\n\t\tfillColor: null,\n\t\tgradientFillAlpha: 1,\n\t\tgradientColor: null,\n\t\tgradientAlpha: 1,\n\t\tgradientDirection: null,\n\t\tstrokeColor: null,\n\t\tstrokeWidth: 1,\n\t\tdashed: false,\n\t\tdashPattern: '3 3',\n\t\tfixDash: false,\n\t\tlineCap: 'flat',\n\t\tlineJoin: 'miter',\n\t\tmiterLimit: 10,\n\t\tfontColor: '#000000',\n\t\tfontBackgroundColor: null,\n\t\tfontBorderColor: null,\n\t\tfontSize: mxConstants.DEFAULT_FONTSIZE,\n\t\tfontFamily: mxConstants.DEFAULT_FONTFAMILY,\n\t\tfontStyle: 0,\n\t\tshadow: false,\n\t\tshadowColor: mxConstants.SHADOWCOLOR,\n\t\tshadowAlpha: mxConstants.SHADOW_OPACITY,\n\t\tshadowDx: mxConstants.SHADOW_OFFSET_X,\n\t\tshadowDy: mxConstants.SHADOW_OFFSET_Y,\n\t\trotation: 0,\n\t\trotationCx: 0,\n\t\trotationCy: 0\n\t};\n};\n\n/**\n * Function: format\n * \n * Rounds all numbers to integers.\n */\nmxAbstractCanvas2D.prototype.format = function(value)\n{\n\treturn Math.round(parseFloat(value));\n};\n\n/**\n * Function: addOp\n * \n * Adds the given operation to the path.\n */\nmxAbstractCanvas2D.prototype.addOp = function()\n{\n\tif (this.path != null)\n\t{\n\t\tthis.path.push(arguments[0]);\n\t\t\n\t\tif (arguments.length > 2)\n\t\t{\n\t\t\tvar s = this.state;\n\n\t\t\tfor (var i = 2; i < arguments.length; i += 2)\n\t\t\t{\n\t\t\t\tthis.lastX = arguments[i - 1];\n\t\t\t\tthis.lastY = arguments[i];\n\t\t\t\t\n\t\t\t\tthis.path.push(this.format((this.lastX + s.dx) * s.scale));\n\t\t\t\tthis.path.push(this.format((this.lastY + s.dy) * s.scale));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the given point and returns the result as an <mxPoint>.\n */\nmxAbstractCanvas2D.prototype.rotatePoint = function(x, y, theta, cx, cy)\n{\n\tvar rad = theta * (Math.PI / 180);\n\t\n\treturn mxUtils.getRotatedPoint(new mxPoint(x, y), Math.cos(rad),\n\t\tMath.sin(rad), new mxPoint(cx, cy));\n};\n\n/**\n * Function: save\n * \n * Saves the current state.\n */\nmxAbstractCanvas2D.prototype.save = function()\n{\n\tthis.states.push(this.state);\n\tthis.state = mxUtils.clone(this.state);\n};\n\n/**\n * Function: restore\n * \n * Restores the current state.\n */\nmxAbstractCanvas2D.prototype.restore = function()\n{\n\tif (this.states.length > 0)\n\t{\n\t\tthis.state = this.states.pop();\n\t}\n};\n\n/**\n * Function: setLink\n * \n * Sets the current link. Hook for subclassers.\n */\nmxAbstractCanvas2D.prototype.setLink = function(link)\n{\n\t// nop\n};\n\n/**\n * Function: scale\n * \n * Scales the current state.\n */\nmxAbstractCanvas2D.prototype.scale = function(value)\n{\n\tthis.state.scale *= value;\n\tthis.state.strokeWidth *= value;\n};\n\n/**\n * Function: translate\n * \n * Translates the current state.\n */\nmxAbstractCanvas2D.prototype.translate = function(dx, dy)\n{\n\tthis.state.dx += dx;\n\tthis.state.dy += dy;\n};\n\n/**\n * Function: rotate\n * \n * Rotates the current state.\n */\nmxAbstractCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\t// nop\n};\n\n/**\n * Function: setAlpha\n * \n * Sets the current alpha.\n */\nmxAbstractCanvas2D.prototype.setAlpha = function(value)\n{\n\tthis.state.alpha = value;\n};\n\n/**\n * Function: setFillAlpha\n * \n * Sets the current solid fill alpha.\n */\nmxAbstractCanvas2D.prototype.setFillAlpha = function(value)\n{\n\tthis.state.fillAlpha = value;\n};\n\n/**\n * Function: setStrokeAlpha\n * \n * Sets the current stroke alpha.\n */\nmxAbstractCanvas2D.prototype.setStrokeAlpha = function(value)\n{\n\tthis.state.strokeAlpha = value;\n};\n\n/**\n * Function: setFillColor\n * \n * Sets the current fill color.\n */\nmxAbstractCanvas2D.prototype.setFillColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fillColor = value;\n\tthis.state.gradientColor = null;\n};\n\n/**\n * Function: setGradient\n * \n * Sets the current gradient.\n */\nmxAbstractCanvas2D.prototype.setGradient = function(color1, color2, x, y, w, h, direction, alpha1, alpha2)\n{\n\tvar s = this.state;\n\ts.fillColor = color1;\n\ts.gradientFillAlpha = (alpha1 != null) ? alpha1 : 1;\n\ts.gradientColor = color2;\n\ts.gradientAlpha = (alpha2 != null) ? alpha2 : 1;\n\ts.gradientDirection = direction;\n};\n\n/**\n * Function: setStrokeColor\n * \n * Sets the current stroke color.\n */\nmxAbstractCanvas2D.prototype.setStrokeColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.strokeColor = value;\n};\n\n/**\n * Function: setStrokeWidth\n * \n * Sets the current stroke width.\n */\nmxAbstractCanvas2D.prototype.setStrokeWidth = function(value)\n{\n\tthis.state.strokeWidth = value;\n};\n\n/**\n * Function: setDashed\n * \n * Enables or disables dashed lines.\n */\nmxAbstractCanvas2D.prototype.setDashed = function(value, fixDash)\n{\n\tthis.state.dashed = value;\n\tthis.state.fixDash = fixDash;\n};\n\n/**\n * Function: setDashPattern\n * \n * Sets the current dash pattern.\n */\nmxAbstractCanvas2D.prototype.setDashPattern = function(value)\n{\n\tthis.state.dashPattern = value;\n};\n\n/**\n * Function: setLineCap\n * \n * Sets the current line cap.\n */\nmxAbstractCanvas2D.prototype.setLineCap = function(value)\n{\n\tthis.state.lineCap = value;\n};\n\n/**\n * Function: setLineJoin\n * \n * Sets the current line join.\n */\nmxAbstractCanvas2D.prototype.setLineJoin = function(value)\n{\n\tthis.state.lineJoin = value;\n};\n\n/**\n * Function: setMiterLimit\n * \n * Sets the current miter limit.\n */\nmxAbstractCanvas2D.prototype.setMiterLimit = function(value)\n{\n\tthis.state.miterLimit = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontColor = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontBackgroundColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBackgroundColor = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontBorderColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBorderColor = value;\n};\n\n/**\n * Function: setFontSize\n * \n * Sets the current font size.\n */\nmxAbstractCanvas2D.prototype.setFontSize = function(value)\n{\n\tthis.state.fontSize = parseFloat(value);\n};\n\n/**\n * Function: setFontFamily\n * \n * Sets the current font family.\n */\nmxAbstractCanvas2D.prototype.setFontFamily = function(value)\n{\n\tthis.state.fontFamily = value;\n};\n\n/**\n * Function: setFontStyle\n * \n * Sets the current font style.\n */\nmxAbstractCanvas2D.prototype.setFontStyle = function(value)\n{\n\tif (value == null)\n\t{\n\t\tvalue = 0;\n\t}\n\t\n\tthis.state.fontStyle = value;\n};\n\n/**\n * Function: setShadow\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadow = function(enabled)\n{\n\tthis.state.shadow = enabled;\n};\n\n/**\n * Function: setShadowColor\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.shadowColor = value;\n};\n\n/**\n * Function: setShadowAlpha\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowAlpha = function(value)\n{\n\tthis.state.shadowAlpha = value;\n};\n\n/**\n * Function: setShadowOffset\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowOffset = function(dx, dy)\n{\n\tthis.state.shadowDx = dx;\n\tthis.state.shadowDy = dy;\n};\n\n/**\n * Function: begin\n * \n * Starts a new path.\n */\nmxAbstractCanvas2D.prototype.begin = function()\n{\n\tthis.lastX = 0;\n\tthis.lastY = 0;\n\tthis.path = [];\n};\n\n/**\n * Function: moveTo\n * \n *  Moves the current path the given coordinates.\n */\nmxAbstractCanvas2D.prototype.moveTo = function(x, y)\n{\n\tthis.addOp(this.moveOp, x, y);\n};\n\n/**\n * Function: lineTo\n * \n * Draws a line to the given coordinates. Uses moveTo with the op argument.\n */\nmxAbstractCanvas2D.prototype.lineTo = function(x, y)\n{\n\tthis.addOp(this.lineOp, x, y);\n};\n\n/**\n * Function: quadTo\n * \n * Adds a quadratic curve to the current path.\n */\nmxAbstractCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tthis.addOp(this.quadOp, x1, y1, x2, y2);\n};\n\n/**\n * Function: curveTo\n * \n * Adds a bezier curve to the current path.\n */\nmxAbstractCanvas2D.prototype.curveTo = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.curveOp, x1, y1, x2, y2, x3, y3);\n};\n\n/**\n * Function: arcTo\n * \n * Adds the given arc to the current path. This is a synthetic operation that\n * is broken down into curves.\n */\nmxAbstractCanvas2D.prototype.arcTo = function(rx, ry, angle, largeArcFlag, sweepFlag, x, y)\n{\n\tvar curves = mxUtils.arcToCurves(this.lastX, this.lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y);\n\t\n\tif (curves != null)\n\t{\n\t\tfor (var i = 0; i < curves.length; i += 6) \n\t\t{\n\t\t\tthis.curveTo(curves[i], curves[i + 1], curves[i + 2],\n\t\t\t\tcurves[i + 3], curves[i + 4], curves[i + 5]);\n\t\t}\n\t}\n};\n\n/**\n * Function: close\n * \n * Closes the current path.\n */\nmxAbstractCanvas2D.prototype.close = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.closeOp);\n};\n\n/**\n * Function: end\n * \n * Empty implementation for backwards compatibility. This will be removed.\n */\nmxAbstractCanvas2D.prototype.end = function() { };\n\n__mxOutput.mxAbstractCanvas2D = typeof mxAbstractCanvas2D !== 'undefined' ? mxAbstractCanvas2D : undefined;\n"]}