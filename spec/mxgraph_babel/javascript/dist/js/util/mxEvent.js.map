{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/util/mxEvent.js"],"names":["mxEvent","addListener","updateListenerList","element","eventName","funct","mxListenerList","entry","name","f","push","window","addEventListener","attachEvent","removeListener","updateListener","listenerCount","length","i","splice","removeEventListener","detachEvent","removeAllListeners","list","addGestureListeners","node","startListener","moveListener","endListener","mxClient","IS_POINTER","IS_TOUCH","removeGestureListeners","redirectMouseEvents","graph","state","down","move","up","dblClick","getState","evt","isConsumed","fireMouseEvent","MOUSE_DOWN","mxMouseEvent","MOUSE_MOVE","MOUSE_UP","tmp","cell","release","children","childNodes","childCount","e","addMouseWheelListener","wheelHandler","event","delta","IS_FF","detail","wheelDelta","IS_NS","document","documentMode","IS_SF","IS_GC","disableContextMenu","preventDefault","getSource","srcElement","target","isTouchEvent","pointerType","MSPOINTER_TYPE_TOUCH","mozInputSource","type","indexOf","isPenEvent","MSPOINTER_TYPE_PEN","isMultiTouchEvent","touches","isMouseEvent","MSPOINTER_TYPE_MOUSE","isLeftMouseButton","buttons","which","button","isMiddleMouseButton","isRightMouseButton","isPopupTrigger","IS_MAC","isControlDown","isShiftDown","isMetaDown","isAltDown","shiftKey","altKey","ctrlKey","metaKey","getMainEvent","changedTouches","getClientX","clientX","getClientY","clientY","consume","stopPropagation","cancelBubble","returnValue","LABEL_HANDLE","ROTATION_HANDLE","CUSTOM_HANDLE","VIRTUAL_HANDLE","ACTIVATE","RESIZE_START","RESIZE","RESIZE_END","MOVE_START","MOVE","MOVE_END","PAN_START","PAN","PAN_END","MINIMIZE","NORMALIZE","MAXIMIZE","HIDE","SHOW","CLOSE","DESTROY","REFRESH","SIZE","SELECT","FIRED","FIRE_MOUSE_EVENT","GESTURE","TAP_AND_HOLD","GET","RECEIVE","CONNECT","DISCONNECT","SUSPEND","RESUME","MARK","ROOT","POST","OPEN","SAVE","BEFORE_ADD_VERTEX","ADD_VERTEX","AFTER_ADD_VERTEX","DONE","EXECUTE","EXECUTED","BEGIN_UPDATE","START_EDIT","END_UPDATE","END_EDIT","BEFORE_UNDO","UNDO","REDO","CHANGE","NOTIFY","LAYOUT_CELLS","CLICK","SCALE","TRANSLATE","SCALE_AND_TRANSLATE","UP","DOWN","ADD","REMOVE","CLEAR","ADD_CELLS","CELLS_ADDED","MOVE_CELLS","CELLS_MOVED","RESIZE_CELLS","CELLS_RESIZED","TOGGLE_CELLS","CELLS_TOGGLED","ORDER_CELLS","CELLS_ORDERED","REMOVE_CELLS","CELLS_REMOVED","GROUP_CELLS","UNGROUP_CELLS","REMOVE_CELLS_FROM_PARENT","FOLD_CELLS","CELLS_FOLDED","ALIGN_CELLS","LABEL_CHANGED","CONNECT_CELL","CELL_CONNECTED","SPLIT_EDGE","FLIP_EDGE","START_EDITING","EDITING_STARTED","EDITING_STOPPED","ADD_OVERLAY","REMOVE_OVERLAY","UPDATE_CELL_SIZE","ESCAPE","DOUBLE_CLICK","START","RESET","__mxOutput","undefined"],"mappings":"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","file":"mxEvent.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEvent =\n{\n\n\t/**\n\t * Class: mxEvent\n\t * \n\t * Cross-browser DOM event support. For internal event handling,\n\t * <mxEventSource> and the graph event dispatch loop in <mxGraph> are used.\n\t * \n\t * Memory Leaks:\n\t * \n\t * Use this class for adding and removing listeners to/from DOM nodes. The\n\t * <removeAllListeners> function is provided to remove all listeners that\n\t * have been added using <addListener>. The function should be invoked when\n\t * the last reference is removed in the JavaScript code, typically when the\n\t * referenced DOM node is removed from the DOM.\n\t *\n\t * Function: addListener\n\t * \n\t * Binds the function to the specified event on the given element. Use\n\t * <mxUtils.bind> in order to bind the \"this\" keyword inside the function\n\t * to a given execution scope.\n\t */\n\taddListener: function()\n\t{\n\t\tvar updateListenerList = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList == null)\n\t\t\t{\n\t\t\t\telement.mxListenerList = [];\n\t\t\t}\n\t\t\t\n\t\t\tvar entry = {name: eventName, f: funct};\n\t\t\telement.mxListenerList.push(entry);\n\t\t};\n\t\t\n\t\tif (window.addEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.addEventListener(eventName, funct, false);\n\t\t\t\tupdateListenerList(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.attachEvent('on' + eventName, funct);\n\t\t\t\tupdateListenerList(element, eventName, funct);\t\t\t\t\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeListener\n\t *\n\t * Removes the specified listener from the given element.\n\t */\n\tremoveListener: function()\n\t{\n\t\tvar updateListener = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList != null)\n\t\t\t{\n\t\t\t\tvar listenerCount = element.mxListenerList.length;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < listenerCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar entry = element.mxListenerList[i];\n\t\t\t\t\t\n\t\t\t\t\tif (entry.f == funct)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.mxListenerList.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (element.mxListenerList.length == 0)\n\t\t\t\t{\n\t\t\t\t\telement.mxListenerList = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tif (window.removeEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.removeEventListener(eventName, funct, false);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.detachEvent('on' + eventName, funct);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeAllListeners\n\t * \n\t * Removes all listeners from the given element.\n\t */\n\tremoveAllListeners: function(element)\n\t{\n\t\tvar list = element.mxListenerList;\n\n\t\tif (list != null)\n\t\t{\n\t\t\twhile (list.length > 0)\n\t\t\t{\n\t\t\t\tvar entry = list[0];\n\t\t\t\tmxEvent.removeListener(element, entry.name, entry.f);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: addGestureListeners\n\t * \n\t * Adds the given listeners for touch, mouse and/or pointer events. If\n\t * <mxClient.IS_POINTER> is true then pointer events will be registered,\n\t * else the respective mouse events will be registered. If <mxClient.IS_POINTER>\n\t * is false and <mxClient.IS_TOUCH> is true then the respective touch events\n\t * will be registered as well as the mouse events.\n\t */\n\taddGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: removeGestureListeners\n\t * \n\t * Removes the given listeners from mousedown, mousemove, mouseup and the\n\t * respective touch events if <mxClient.IS_TOUCH> is true.\n\t */\n\tremoveGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: redirectMouseEvents\n\t *\n\t * Redirects the mouse events from the given DOM node to the graph dispatch\n\t * loop using the event and given state as event arguments. State can\n\t * either be an instance of <mxCellState> or a function that returns an\n\t * <mxCellState>. The down, move, up and dblClick arguments are optional\n\t * functions that take the trigger event as arguments and replace the\n\t * default behaviour.\n\t */\n\tredirectMouseEvents: function(node, graph, state, down, move, up, dblClick)\n\t{\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\treturn (typeof(state) == 'function') ? state(evt) : state;\n\t\t};\n\t\t\n\t\tmxEvent.addGestureListeners(node, function (evt)\n\t\t{\n\t\t\tif (down != null)\n\t\t\t{\n\t\t\t\tdown(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (move != null)\n\t\t\t{\n\t\t\t\tmove(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (up != null)\n\t\t\t{\n\t\t\t\tup(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t});\n\n\t\tmxEvent.addListener(node, 'dblclick', function (evt)\n\t\t{\n\t\t\tif (dblClick != null)\n\t\t\t{\n\t\t\t\tdblClick(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tvar tmp = getState(evt);\n\t\t\t\tgraph.dblClick(evt, (tmp != null) ? tmp.cell : null);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Function: release\n\t * \n\t * Removes the known listeners from the given DOM node and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the listeners from.\n\t */\n\trelease: function(element)\n\t{\n\t\ttry\n\t\t{\n\t\t\tif (element != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeAllListeners(element);\n\t\t\t\t\n\t\t\t\tvar children = element.childNodes;\n\t\t\t\t\n\t\t\t\tif (children != null)\n\t\t\t\t{\n\t\t\t        var childCount = children.length;\n\t\t\t        \n\t\t\t        for (var i = 0; i < childCount; i += 1)\n\t\t\t        {\n\t\t\t        \tmxEvent.release(children[i]);\n\t\t\t        }\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignores errors as this is typically called in cleanup code\n\t\t}\n\t},\n\n\t/**\n\t * Function: addMouseWheelListener\n\t * \n\t * Installs the given function as a handler for mouse wheel events. The\n\t * function has two arguments: the mouse event and a boolean that specifies\n\t * if the wheel was moved up or down.\n\t * \n\t * This has been tested with IE 6 and 7, Firefox (all versions), Opera and\n\t * Safari. It does currently not work on Safari for Mac.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * mxEvent.addMouseWheelListener(function (evt, up)\n\t * {\n\t *   mxLog.show();\n\t *   mxLog.debug('mouseWheel: up='+up);\n\t * });\n\t *(end)\n\t * \n\t * Parameters:\n\t * \n\t * funct - Handler function that takes the event argument and a boolean up\n\t * argument for the mousewheel direction.\n\t */\n\taddMouseWheelListener: function(funct)\n\t{\n\t\tif (funct != null)\n\t\t{\n\t\t\tvar wheelHandler = function(evt)\n\t\t\t{\n\t\t\t\t// IE does not give an event object but the\n\t\t\t\t// global event object is the mousewheel event\n\t\t\t\t// at this point in time.\n\t\t\t\tif (evt == null)\n\t\t\t\t{\n\t\t\t\t\tevt = window.event;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar delta = 0;\n\t\t\t\t\n\t\t\t\tif (mxClient.IS_FF)\n\t\t\t\t{\n\t\t\t\t\tdelta = -evt.detail / 2;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelta = evt.wheelDelta / 120;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Handles the event using the given function\n\t\t\t\tif (delta != 0)\n\t\t\t\t{\n\t\t\t\t\tfunct(evt, delta > 0);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\t// Webkit has NS event API, but IE event name and details \n\t\t\tif (mxClient.IS_NS && document.documentMode == null)\n\t\t\t{\n\t\t\t\tvar eventName = (mxClient.IS_SF || \tmxClient.IS_GC) ? 'mousewheel' : 'DOMMouseScroll';\n\t\t\t\tmxEvent.addListener(window, eventName, wheelHandler);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.addListener(document, 'mousewheel', wheelHandler);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: disableContextMenu\n\t *\n\t * Disables the context menu for the given element.\n\t */\n\tdisableContextMenu: function(element)\n\t{\n\t\tmxEvent.addListener(element, 'contextmenu', function(evt)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t},\n\t\n\t/**\n\t * Function: getSource\n\t * \n\t * Returns the event's target or srcElement depending on the browser.\n\t */\n\tgetSource: function(evt)\n\t{\n\t\treturn (evt.srcElement != null) ? evt.srcElement : evt.target;\n\t},\n\n\t/**\n\t * Function: isConsumed\n\t * \n\t * Returns true if the event has been consumed using <consume>.\n\t */\n\tisConsumed: function(evt)\n\t{\n\t\treturn evt.isConsumed != null && evt.isConsumed;\n\t},\n\n\t/**\n\t * Function: isTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisTouchEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'touch' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_TOUCH) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 5 : evt.type.indexOf('touch') == 0);\n\t},\n\n\t/**\n\t * Function: isPenEvent\n\t * \n\t * Returns true if the event was generated using a pen (not a touch device or mouse).\n\t */\n\tisPenEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'pen' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_PEN) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 2 : evt.type.indexOf('pen') == 0);\n\t},\n\n\t/**\n\t * Function: isMultiTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisMultiTouchEvent: function(evt)\n\t{\n\t\treturn (evt.type != null && evt.type.indexOf('touch') == 0 && evt.touches != null && evt.touches.length > 1);\n\t},\n\n\t/**\n\t * Function: isMouseEvent\n\t * \n\t * Returns true if the event was generated using a mouse (not a pen or touch device).\n\t */\n\tisMouseEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'mouse' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_MOUSE) : ((evt.mozInputSource != null) ?\n\t\t\t\tevt.mozInputSource == 1 : evt.type.indexOf('mouse') == 0);\n\t},\n\t\n\t/**\n\t * Function: isLeftMouseButton\n\t * \n\t * Returns true if the left mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property. Note that this returns true in Firefox\n\t * for control+left-click on the Mac.\n\t */\n\tisLeftMouseButton: function(evt)\n\t{\n\t\t// Special case for mousemove and mousedown we check the buttons\n\t\t// if it exists because which is 0 even if no button is pressed\n\t\tif ('buttons' in evt && (evt.type == 'mousedown' || evt.type == 'mousemove'))\n\t\t{\n\t\t\treturn evt.buttons == 1;\n\t\t}\n\t\telse if ('which' in evt)\n\t\t{\n\t        return evt.which === 1;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 1;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isMiddleMouseButton\n\t * \n\t * Returns true if the middle mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property.\n\t */\n\tisMiddleMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 2;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 4;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isRightMouseButton\n\t * \n\t * Returns true if the right mouse button was pressed. Note that this\n\t * button might not be available on some systems. For handling a popup\n\t * trigger <isPopupTrigger> should be used.\n\t */\n\tisRightMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 3;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 2;\n\t    }\n\t},\n\n\t/**\n\t * Function: isPopupTrigger\n\t * \n\t * Returns true if the event is a popup trigger. This implementation\n\t * returns true if the right button or the left button and control was\n\t * pressed on a Mac.\n\t */\n\tisPopupTrigger: function(evt)\n\t{\n\t\treturn mxEvent.isRightMouseButton(evt) || (mxClient.IS_MAC && mxEvent.isControlDown(evt) &&\n\t\t\t!mxEvent.isShiftDown(evt) && !mxEvent.isMetaDown(evt) && !mxEvent.isAltDown(evt));\n\t},\n\n\t/**\n\t * Function: isShiftDown\n\t * \n\t * Returns true if the shift key is pressed for the given event.\n\t */\n\tisShiftDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.shiftKey : false;\n\t},\n\n\t/**\n\t * Function: isAltDown\n\t * \n\t * Returns true if the alt key is pressed for the given event.\n\t */\n\tisAltDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.altKey : false;\n\t},\n\n\t/**\n\t * Function: isControlDown\n\t * \n\t * Returns true if the control key is pressed for the given event.\n\t */\n\tisControlDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.ctrlKey : false;\n\t},\n\n\t/**\n\t * Function: isMetaDown\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tisMetaDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.metaKey : false;\n\t},\n\n\t/**\n\t * Function: getMainEvent\n\t * \n\t * Returns the touch or mouse event that contains the mouse coordinates.\n\t */\n\tgetMainEvent: function(e)\n\t{\n\t\tif ((e.type == 'touchstart' || e.type == 'touchmove') && e.touches != null && e.touches[0] != null)\n\t\t{\n\t\t\te = e.touches[0];\n\t\t}\n\t\telse if (e.type == 'touchend' && e.changedTouches != null && e.changedTouches[0] != null)\n\t\t{\n\t\t\te = e.changedTouches[0];\n\t\t}\n\t\t\n\t\treturn e;\n\t},\n\t\n\t/**\n\t * Function: getClientX\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientX: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientX;\n\t},\n\n\t/**\n\t * Function: getClientY\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientY: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientY;\n\t},\n\n\t/**\n\t * Function: consume\n\t * \n\t * Consumes the given event.\n\t * \n\t * Parameters:\n\t * \n\t * evt - Native event to be consumed.\n\t * preventDefault - Optional boolean to prevent the default for the event.\n\t * Default is true.\n\t * stopPropagation - Option boolean to stop event propagation. Default is\n\t * true.\n\t */\n\tconsume: function(evt, preventDefault, stopPropagation)\n\t{\n\t\tpreventDefault = (preventDefault != null) ? preventDefault : true;\n\t\tstopPropagation = (stopPropagation != null) ? stopPropagation : true;\n\t\t\n\t\tif (preventDefault)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tif (stopPropagation)\n\t\t\t\t{\n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\telse if (stopPropagation)\n\t\t\t{\n\t\t\t\tevt.cancelBubble = true;\n\t\t\t}\n\t\t}\n\n\t\t// Opera\n\t\tevt.isConsumed = true;\n\n\t\t// Other browsers\n\t\tif (!evt.preventDefault)\n\t\t{\n\t\t\tevt.returnValue = false;\n\t\t}\n\t},\n\t\n\t//\n\t// Special handles in mouse events\n\t//\n\t\n\t/**\n\t * Variable: LABEL_HANDLE\n\t * \n\t * Index for the label handle in an mxMouseEvent. This should be a negative\n\t * value that does not interfere with any possible handle indices. Default\n\t * is -1.\n\t */\n\tLABEL_HANDLE: -1,\n\t\n\t/**\n\t * Variable: ROTATION_HANDLE\n\t * \n\t * Index for the rotation handle in an mxMouseEvent. This should be a\n\t * negative value that does not interfere with any possible handle indices.\n\t * Default is -2.\n\t */\n\tROTATION_HANDLE: -2,\n\t\n\t/**\n\t * Variable: CUSTOM_HANDLE\n\t * \n\t * Start index for the custom handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * custom handle. Default is -100.\n\t */\n\tCUSTOM_HANDLE: -100,\n\t\n\t/**\n\t * Variable: VIRTUAL_HANDLE\n\t * \n\t * Start index for the virtual handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * virtual handle. Default is -100000. This assumes that there are no more\n\t * than VIRTUAL_HANDLE - CUSTOM_HANDLE custom handles.\n\t * \n\t */\n\tVIRTUAL_HANDLE: -100000,\n\t\n\t//\n\t// Event names\n\t//\n\t\n\t/**\n\t * Variable: MOUSE_DOWN\n\t *\n\t * Specifies the event name for mouseDown.\n\t */\n\tMOUSE_DOWN: 'mouseDown',\n\t\n\t/**\n\t * Variable: MOUSE_MOVE\n\t *\n\t * Specifies the event name for mouseMove. \n\t */\n\tMOUSE_MOVE: 'mouseMove',\n\t\n\t/**\n\t * Variable: MOUSE_UP\n\t *\n\t * Specifies the event name for mouseUp. \n\t */\n\tMOUSE_UP: 'mouseUp',\n\n\t/**\n\t * Variable: ACTIVATE\n\t *\n\t * Specifies the event name for activate.\n\t */\n\tACTIVATE: 'activate',\n\n\t/**\n\t * Variable: RESIZE_START\n\t *\n\t * Specifies the event name for resizeStart.\n\t */\n\tRESIZE_START: 'resizeStart',\n\n\t/**\n\t * Variable: RESIZE\n\t *\n\t * Specifies the event name for resize.\n\t */\n\tRESIZE: 'resize',\n\n\t/**\n\t * Variable: RESIZE_END\n\t *\n\t * Specifies the event name for resizeEnd.\n\t */\n\tRESIZE_END: 'resizeEnd',\n\n\t/**\n\t * Variable: MOVE_START\n\t *\n\t * Specifies the event name for moveStart.\n\t */\n\tMOVE_START: 'moveStart',\n\n\t/**\n\t * Variable: MOVE\n\t *\n\t * Specifies the event name for move.\n\t */\n\tMOVE: 'move',\n\n\t/**\n\t * Variable: MOVE_END\n\t *\n\t * Specifies the event name for moveEnd.\n\t */\n\tMOVE_END: 'moveEnd',\n\n\t/**\n\t * Variable: PAN_START\n\t *\n\t * Specifies the event name for panStart.\n\t */\n\tPAN_START: 'panStart',\n\n\t/**\n\t * Variable: PAN\n\t *\n\t * Specifies the event name for pan.\n\t */\n\tPAN: 'pan',\n\n\t/**\n\t * Variable: PAN_END\n\t *\n\t * Specifies the event name for panEnd.\n\t */\n\tPAN_END: 'panEnd',\n\n\t/**\n\t * Variable: MINIMIZE\n\t *\n\t * Specifies the event name for minimize.\n\t */\n\tMINIMIZE: 'minimize',\n\n\t/**\n\t * Variable: NORMALIZE\n\t *\n\t * Specifies the event name for normalize.\n\t */\n\tNORMALIZE: 'normalize',\n\n\t/**\n\t * Variable: MAXIMIZE\n\t *\n\t * Specifies the event name for maximize.\n\t */\n\tMAXIMIZE: 'maximize',\n\n\t/**\n\t * Variable: HIDE\n\t *\n\t * Specifies the event name for hide.\n\t */\n\tHIDE: 'hide',\n\n\t/**\n\t * Variable: SHOW\n\t *\n\t * Specifies the event name for show.\n\t */\n\tSHOW: 'show',\n\n\t/**\n\t * Variable: CLOSE\n\t *\n\t * Specifies the event name for close.\n\t */\n\tCLOSE: 'close',\n\n\t/**\n\t * Variable: DESTROY\n\t *\n\t * Specifies the event name for destroy.\n\t */\n\tDESTROY: 'destroy',\n\n\t/**\n\t * Variable: REFRESH\n\t *\n\t * Specifies the event name for refresh.\n\t */\n\tREFRESH: 'refresh',\n\n\t/**\n\t * Variable: SIZE\n\t *\n\t * Specifies the event name for size.\n\t */\n\tSIZE: 'size',\n\t\n\t/**\n\t * Variable: SELECT\n\t *\n\t * Specifies the event name for select.\n\t */\n\tSELECT: 'select',\n\n\t/**\n\t * Variable: FIRED\n\t *\n\t * Specifies the event name for fired.\n\t */\n\tFIRED: 'fired',\n\n\t/**\n\t * Variable: FIRE_MOUSE_EVENT\n\t *\n\t * Specifies the event name for fireMouseEvent.\n\t */\n\tFIRE_MOUSE_EVENT: 'fireMouseEvent',\n\n\t/**\n\t * Variable: GESTURE\n\t *\n\t * Specifies the event name for gesture.\n\t */\n\tGESTURE: 'gesture',\n\n\t/**\n\t * Variable: TAP_AND_HOLD\n\t *\n\t * Specifies the event name for tapAndHold.\n\t */\n\tTAP_AND_HOLD: 'tapAndHold',\n\n\t/**\n\t * Variable: GET\n\t *\n\t * Specifies the event name for get.\n\t */\n\tGET: 'get',\n\n\t/**\n\t * Variable: RECEIVE\n\t *\n\t * Specifies the event name for receive.\n\t */\n\tRECEIVE: 'receive',\n\n\t/**\n\t * Variable: CONNECT\n\t *\n\t * Specifies the event name for connect.\n\t */\n\tCONNECT: 'connect',\n\n\t/**\n\t * Variable: DISCONNECT\n\t *\n\t * Specifies the event name for disconnect.\n\t */\n\tDISCONNECT: 'disconnect',\n\n\t/**\n\t * Variable: SUSPEND\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tSUSPEND: 'suspend',\n\n\t/**\n\t * Variable: RESUME\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tRESUME: 'resume',\n\n\t/**\n\t * Variable: MARK\n\t *\n\t * Specifies the event name for mark.\n\t */\n\tMARK: 'mark',\n\n\t/**\n\t * Variable: ROOT\n\t *\n\t * Specifies the event name for root.\n\t */\n\tROOT: 'root',\n\n\t/**\n\t * Variable: POST\n\t *\n\t * Specifies the event name for post.\n\t */\n\tPOST: 'post',\n\n\t/**\n\t * Variable: OPEN\n\t *\n\t * Specifies the event name for open.\n\t */\n\tOPEN: 'open',\n\n\t/**\n\t * Variable: SAVE\n\t *\n\t * Specifies the event name for open.\n\t */\n\tSAVE: 'save',\n\n\t/**\n\t * Variable: BEFORE_ADD_VERTEX\n\t *\n\t * Specifies the event name for beforeAddVertex.\n\t */\n\tBEFORE_ADD_VERTEX: 'beforeAddVertex',\n\n\t/**\n\t * Variable: ADD_VERTEX\n\t *\n\t * Specifies the event name for addVertex.\n\t */\n\tADD_VERTEX: 'addVertex',\n\n\t/**\n\t * Variable: AFTER_ADD_VERTEX\n\t *\n\t * Specifies the event name for afterAddVertex.\n\t */\n\tAFTER_ADD_VERTEX: 'afterAddVertex',\n\n\t/**\n\t * Variable: DONE\n\t *\n\t * Specifies the event name for done.\n\t */\n\tDONE: 'done',\n\n\t/**\n\t * Variable: EXECUTE\n\t *\n\t * Specifies the event name for execute.\n\t */\n\tEXECUTE: 'execute',\n\n\t/**\n\t * Variable: EXECUTED\n\t *\n\t * Specifies the event name for executed.\n\t */\n\tEXECUTED: 'executed',\n\n\t/**\n\t * Variable: BEGIN_UPDATE\n\t *\n\t * Specifies the event name for beginUpdate.\n\t */\n\tBEGIN_UPDATE: 'beginUpdate',\n\n\t/**\n\t * Variable: START_EDIT\n\t *\n\t * Specifies the event name for startEdit.\n\t */\n\tSTART_EDIT: 'startEdit',\n\n\t/**\n\t * Variable: END_UPDATE\n\t *\n\t * Specifies the event name for endUpdate.\n\t */\n\tEND_UPDATE: 'endUpdate',\n\n\t/**\n\t * Variable: END_EDIT\n\t *\n\t * Specifies the event name for endEdit.\n\t */\n\tEND_EDIT: 'endEdit',\n\n\t/**\n\t * Variable: BEFORE_UNDO\n\t *\n\t * Specifies the event name for beforeUndo.\n\t */\n\tBEFORE_UNDO: 'beforeUndo',\n\n\t/**\n\t * Variable: UNDO\n\t *\n\t * Specifies the event name for undo.\n\t */\n\tUNDO: 'undo',\n\n\t/**\n\t * Variable: REDO\n\t *\n\t * Specifies the event name for redo.\n\t */\n\tREDO: 'redo',\n\n\t/**\n\t * Variable: CHANGE\n\t *\n\t * Specifies the event name for change.\n\t */\n\tCHANGE: 'change',\n\n\t/**\n\t * Variable: NOTIFY\n\t *\n\t * Specifies the event name for notify.\n\t */\n\tNOTIFY: 'notify',\n\n\t/**\n\t * Variable: LAYOUT_CELLS\n\t *\n\t * Specifies the event name for layoutCells.\n\t */\n\tLAYOUT_CELLS: 'layoutCells',\n\n\t/**\n\t * Variable: CLICK\n\t *\n\t * Specifies the event name for click.\n\t */\n\tCLICK: 'click',\n\n\t/**\n\t * Variable: SCALE\n\t *\n\t * Specifies the event name for scale.\n\t */\n\tSCALE: 'scale',\n\n\t/**\n\t * Variable: TRANSLATE\n\t *\n\t * Specifies the event name for translate.\n\t */\n\tTRANSLATE: 'translate',\n\n\t/**\n\t * Variable: SCALE_AND_TRANSLATE\n\t *\n\t * Specifies the event name for scaleAndTranslate.\n\t */\n\tSCALE_AND_TRANSLATE: 'scaleAndTranslate',\n\n\t/**\n\t * Variable: UP\n\t *\n\t * Specifies the event name for up.\n\t */\n\tUP: 'up',\n\n\t/**\n\t * Variable: DOWN\n\t *\n\t * Specifies the event name for down.\n\t */\n\tDOWN: 'down',\n\n\t/**\n\t * Variable: ADD\n\t *\n\t * Specifies the event name for add.\n\t */\n\tADD: 'add',\n\n\t/**\n\t * Variable: REMOVE\n\t *\n\t * Specifies the event name for remove.\n\t */\n\tREMOVE: 'remove',\n\t\n\t/**\n\t * Variable: CLEAR\n\t *\n\t * Specifies the event name for clear.\n\t */\n\tCLEAR: 'clear',\n\n\t/**\n\t * Variable: ADD_CELLS\n\t *\n\t * Specifies the event name for addCells.\n\t */\n\tADD_CELLS: 'addCells',\n\n\t/**\n\t * Variable: CELLS_ADDED\n\t *\n\t * Specifies the event name for cellsAdded.\n\t */\n\tCELLS_ADDED: 'cellsAdded',\n\n\t/**\n\t * Variable: MOVE_CELLS\n\t *\n\t * Specifies the event name for moveCells.\n\t */\n\tMOVE_CELLS: 'moveCells',\n\n\t/**\n\t * Variable: CELLS_MOVED\n\t *\n\t * Specifies the event name for cellsMoved.\n\t */\n\tCELLS_MOVED: 'cellsMoved',\n\n\t/**\n\t * Variable: RESIZE_CELLS\n\t *\n\t * Specifies the event name for resizeCells.\n\t */\n\tRESIZE_CELLS: 'resizeCells',\n\n\t/**\n\t * Variable: CELLS_RESIZED\n\t *\n\t * Specifies the event name for cellsResized.\n\t */\n\tCELLS_RESIZED: 'cellsResized',\n\n\t/**\n\t * Variable: TOGGLE_CELLS\n\t *\n\t * Specifies the event name for toggleCells.\n\t */\n\tTOGGLE_CELLS: 'toggleCells',\n\n\t/**\n\t * Variable: CELLS_TOGGLED\n\t *\n\t * Specifies the event name for cellsToggled.\n\t */\n\tCELLS_TOGGLED: 'cellsToggled',\n\n\t/**\n\t * Variable: ORDER_CELLS\n\t *\n\t * Specifies the event name for orderCells.\n\t */\n\tORDER_CELLS: 'orderCells',\n\n\t/**\n\t * Variable: CELLS_ORDERED\n\t *\n\t * Specifies the event name for cellsOrdered.\n\t */\n\tCELLS_ORDERED: 'cellsOrdered',\n\n\t/**\n\t * Variable: REMOVE_CELLS\n\t *\n\t * Specifies the event name for removeCells.\n\t */\n\tREMOVE_CELLS: 'removeCells',\n\n\t/**\n\t * Variable: CELLS_REMOVED\n\t *\n\t * Specifies the event name for cellsRemoved.\n\t */\n\tCELLS_REMOVED: 'cellsRemoved',\n\n\t/**\n\t * Variable: GROUP_CELLS\n\t *\n\t * Specifies the event name for groupCells.\n\t */\n\tGROUP_CELLS: 'groupCells',\n\n\t/**\n\t * Variable: UNGROUP_CELLS\n\t *\n\t * Specifies the event name for ungroupCells.\n\t */\n\tUNGROUP_CELLS: 'ungroupCells',\n\n\t/**\n\t * Variable: REMOVE_CELLS_FROM_PARENT\n\t *\n\t * Specifies the event name for removeCellsFromParent.\n\t */\n\tREMOVE_CELLS_FROM_PARENT: 'removeCellsFromParent',\n\n\t/**\n\t * Variable: FOLD_CELLS\n\t *\n\t * Specifies the event name for foldCells.\n\t */\n\tFOLD_CELLS: 'foldCells',\n\n\t/**\n\t * Variable: CELLS_FOLDED\n\t *\n\t * Specifies the event name for cellsFolded.\n\t */\n\tCELLS_FOLDED: 'cellsFolded',\n\n\t/**\n\t * Variable: ALIGN_CELLS\n\t *\n\t * Specifies the event name for alignCells.\n\t */\n\tALIGN_CELLS: 'alignCells',\n\n\t/**\n\t * Variable: LABEL_CHANGED\n\t *\n\t * Specifies the event name for labelChanged.\n\t */\n\tLABEL_CHANGED: 'labelChanged',\n\n\t/**\n\t * Variable: CONNECT_CELL\n\t *\n\t * Specifies the event name for connectCell.\n\t */\n\tCONNECT_CELL: 'connectCell',\n\n\t/**\n\t * Variable: CELL_CONNECTED\n\t *\n\t * Specifies the event name for cellConnected.\n\t */\n\tCELL_CONNECTED: 'cellConnected',\n\n\t/**\n\t * Variable: SPLIT_EDGE\n\t *\n\t * Specifies the event name for splitEdge.\n\t */\n\tSPLIT_EDGE: 'splitEdge',\n\n\t/**\n\t * Variable: FLIP_EDGE\n\t *\n\t * Specifies the event name for flipEdge.\n\t */\n\tFLIP_EDGE: 'flipEdge',\n\n\t/**\n\t * Variable: START_EDITING\n\t *\n\t * Specifies the event name for startEditing.\n\t */\n\tSTART_EDITING: 'startEditing',\n\n\t/**\n\t * Variable: EDITING_STARTED\n\t *\n\t * Specifies the event name for editingStarted.\n\t */\n\tEDITING_STARTED: 'editingStarted',\n\n\t/**\n\t * Variable: EDITING_STOPPED\n\t *\n\t * Specifies the event name for editingStopped.\n\t */\n\tEDITING_STOPPED: 'editingStopped',\n\n\t/**\n\t * Variable: ADD_OVERLAY\n\t *\n\t * Specifies the event name for addOverlay.\n\t */\n\tADD_OVERLAY: 'addOverlay',\n\n\t/**\n\t * Variable: REMOVE_OVERLAY\n\t *\n\t * Specifies the event name for removeOverlay.\n\t */\n\tREMOVE_OVERLAY: 'removeOverlay',\n\n\t/**\n\t * Variable: UPDATE_CELL_SIZE\n\t *\n\t * Specifies the event name for updateCellSize.\n\t */\n\tUPDATE_CELL_SIZE: 'updateCellSize',\n\n\t/**\n\t * Variable: ESCAPE\n\t *\n\t * Specifies the event name for escape.\n\t */\n\tESCAPE: 'escape',\n\n\t/**\n\t * Variable: DOUBLE_CLICK\n\t *\n\t * Specifies the event name for doubleClick.\n\t */\n\tDOUBLE_CLICK: 'doubleClick',\n\n\t/**\n\t * Variable: START\n\t *\n\t * Specifies the event name for start.\n\t */\n\tSTART: 'start',\n\n\t/**\n\t * Variable: RESET\n\t *\n\t * Specifies the event name for reset.\n\t */\n\tRESET: 'reset'\n\n};\n\n__mxOutput.mxEvent = typeof mxEvent !== 'undefined' ? mxEvent : undefined;\n"]}