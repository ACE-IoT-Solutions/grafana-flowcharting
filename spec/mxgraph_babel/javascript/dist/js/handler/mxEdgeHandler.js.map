{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/handler/mxEdgeHandler.js"],"names":["mxEdgeHandler","state","init","escapeHandler","mxUtils","bind","sender","evt","dirty","index","reset","graph","cellRenderer","redraw","view","isRendering","addListener","mxEvent","ESCAPE","prototype","marker","constraintHandler","error","shape","bends","labelShape","cloneEnabled","addEnabled","removeEnabled","dblClickRemoveEnabled","mergeRemoveEnabled","straightRemoveEnabled","virtualBendsEnabled","virtualBendOpacity","parentHighlightEnabled","preferHtml","allowHandleBoundsCheck","snapToTerminals","handleImage","tolerance","outlineConnect","manageLabelHandle","createMarker","mxConstraintHandler","points","abspoints","getSelectionPoints","createSelectionShape","dialect","mxConstants","DIALECT_SVG","DIALECT_MIXEDHTML","getView","getOverlayPane","pointerEvents","setCursor","CURSOR_MOVABLE_EDGE","redirectMouseEvents","node","text","parentNode","container","sourceState","getVisibleTerminalState","targetState","parent","model","getParent","cell","isVertex","pstate","getState","parentHighlight","createParentHighlightShape","DIALECT_VML","rotation","Number","style","STYLE_ROTATION","getSelectionCount","mxGraphHandler","maxCells","createBends","isVirtualBendsEnabled","virtualBends","createVirtualBends","label","mxPoint","absoluteOffset","x","y","createLabelHandleShape","initBend","CURSOR_LABEL_HANDLE","customHandles","createCustomHandles","STYLE_EDGE","NONE","STYLE_NOEDGESTYLE","getValue","STYLE_SHAPE","isAddPointEvent","isShiftDown","isRemovePointEvent","absolutePoints","bounds","mxRectangleShape","getSelectionColor","strokewidth","getSelectionStrokeWidth","isDashed","isSelectionDashed","constructor","outline","apply","stroke","isShadow","EDGE_SELECTION_COLOR","EDGE_SELECTION_STROKEWIDTH","EDGE_SELECTION_DASHED","isConnectableCell","getCellAt","mxCellMarker","self","getCell","me","arguments","currentPoint","isCellConnectable","getModel","isSwimlane","hitsSwimlaneContent","connectableEdges","isEdge","isAncestor","isValidState","other","getTerminalPort","getTerminal","isSource","otherCell","source","target","validateConnection","getEdgeValidationError","i","length","isHandleVisible","terminal","isCellBendable","bend","createHandleShape","removePoint","isHandleEnabled","CURSOR_TERMINAL_HANDLE","CURSOR_BEND_HANDLE","push","visibility","last","CURSOR_VIRTUAL_BEND_HANDLE","geo","getCellGeometry","edgeStyle","getEdgeStyle","mxEdgeStyle","EntityRelation","mxImageShape","mxRectangle","width","height","src","preserveImageAspect","s","HANDLE_SIZE","HANDLE_FILLCOLOR","HANDLE_STROKECOLOR","labelHandleImage","LABEL_HANDLE_SIZE","LABEL_HANDLE_FILLCOLOR","dblClick","DIALECT_STRICTHTML","mxClient","IS_QUIRKS","document","documentMode","consume","IS_TOUCH","setAttribute","getHandleForEvent","tol","isMouseEvent","getEvent","hit","IS_IE","getGraphX","getGraphY","minDistSq","result","checkShape","display","intersects","dx","getCenterX","dy","getCenterY","tmp","isCustomHandleEvent","CUSTOM_HANDLE","LABEL_HANDLE","isAddVirtualBendEvent","VIRTUAL_HANDLE","mouseDown","handle","b","snapPoint","addPoint","isConsumed","isEnabled","isLabelMovable","setOpacity","start","getX","getY","startX","startY","isTarget","isLabel","isTerminalPointMovable","isCellDisconnectable","setVisible","clonePreviewState","point","clone","getSnapToTerminalTolerance","gridSize","scale","updateHint","removeHint","roundLength","Math","round","isSnapToTerminalsEvent","isAltDown","getPointForEvent","tt","overrideX","overrideY","snapToPoint","pt","abs","snapToTerminal","call","getRoutingCenterX","getRoutingCenterY","isGridEnabledEvent","tr","translate","snap","getPreviewTerminalState","update","highlight","currentFocus","currentConstraint","repaint","markCell","isIgnoreTerminalEvent","process","getValidState","isCellLocked","getPreviewPoints","geometry","slice","convertPoint","splice","contains","checkRemove","idx","ptSegDistSq","c","getConnectionConstraint","getConnectionPoint","trg","resetEdgesOnConnect","isOutlineConnectEvent","offset","getOffset","clientX","getClientX","clientY","getClientY","doc","documentElement","left","window","pageXOffset","scrollLeft","clientLeft","top","pageYOffset","scrollTop","clientTop","gridX","gridY","isHighlightAt","updatePreviewState","edge","terminalState","sourceConstraint","targetConstraint","constraint","getOutlineConstraint","setFocus","mxConnectionConstraint","OUTLINE_HIGHLIGHT_COLOR","OUTLINE_HIGHLIGHT_STROKEWIDTH","hasValidState","DEFAULT_VALID_COLOR","HIGHLIGHT_STROKEWIDTH","STYLE_EXIT_X","STYLE_ENTRY_X","STYLE_EXIT_Y","STYLE_ENTRY_Y","setVisibleTerminalState","updateFixedTerminalPoint","setAbsoluteTerminalPoint","getMarkedState","allowDanglingEdges","updatePoints","updateFloatingTerminalPoints","mouseMove","processEvent","color","validColor","invalidColor","setPreviewColor","active","drawPreview","mouseUp","isCloneEvent","isCellsCloneable","validationAlert","beginUpdate","execute","endUpdate","moveLabel","validState","getGeometry","cloneCell","add","getChildCount","setGeometry","connectCell","connect","isAllowDanglingEdges","origin","panDx","panDy","changeTerminalPoint","changePoints","invalidate","validate","setSelectionCell","refresh","livePreview","sizers","gridEnabled","getScale","getTranslate","edgeState","relative","getRelativePoint","getPoint","p0","pe","cx","cy","isClone","setTerminal","setTerminalPoint","addPointAt","t","pState","findNearestSegment","getHandleFillColor","LOCKED_HANDLE_FILLCOLOR","CONNECT_HANDLE_FILLCOLOR","redrawHandles","g","pts","lab","getLabel","visible","n","x0","y0","floor","fill","checkLabelHandle","xn","yn","bn","redrawInnerBends","setHandlesVisible","w","h","destroy","b2","destroyBends","appendChild","removeListener","__mxOutput","undefined"],"mappings":"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","file":"mxEdgeHandler.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEdgeHandler\n *\n * Graph event handler that reconnects edges and modifies control points and\n * the edge label location. Uses <mxTerminalMarker> for finding and\n * highlighting new source and target vertices. This handler is automatically\n * created in <mxGraph.createHandler> for each selected edge.\n * \n * To enable adding/removing control points, the following code can be used:\n * \n * (code)\n * mxEdgeHandler.prototype.addEnabled = true;\n * mxEdgeHandler.prototype.removeEnabled = true;\n * (end)\n * \n * Note: This experimental feature is not recommended for production use.\n * \n * Constructor: mxEdgeHandler\n *\n * Constructs an edge handler for the specified <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxEdgeHandler(state)\n{\n\tif (state != null)\n\t{\n\t\tthis.state = state;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar dirty = this.index != null;\n\t\t\tthis.reset();\n\t\t\t\n\t\t\tif (dirty)\n\t\t\t{\n\t\t\t\tthis.graph.cellRenderer.redraw(this.state, false, state.view.isRendering());\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.state.view.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxEdgeHandler.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState> being modified.\n */\nmxEdgeHandler.prototype.state = null;\n\n/**\n * Variable: marker\n * \n * Holds the <mxTerminalMarker> which is used for highlighting terminals.\n */\nmxEdgeHandler.prototype.marker = null;\n\n/**\n * Variable: constraintHandler\n * \n * Holds the <mxConstraintHandler> used for drawing and highlighting\n * constraints.\n */\nmxEdgeHandler.prototype.constraintHandler = null;\n\n/**\n * Variable: error\n * \n * Holds the current validation error while a connection is being changed.\n */\nmxEdgeHandler.prototype.error = null;\n\n/**\n * Variable: shape\n * \n * Holds the <mxShape> that represents the preview edge.\n */\nmxEdgeHandler.prototype.shape = null;\n\n/**\n * Variable: bends\n * \n * Holds the <mxShapes> that represent the points.\n */\nmxEdgeHandler.prototype.bends = null;\n\n/**\n * Variable: labelShape\n * \n * Holds the <mxShape> that represents the label position.\n */\nmxEdgeHandler.prototype.labelShape = null;\n\n/**\n * Variable: cloneEnabled\n * \n * Specifies if cloning by control-drag is enabled. Default is true.\n */\nmxEdgeHandler.prototype.cloneEnabled = true;\n\n/**\n * Variable: addEnabled\n * \n * Specifies if adding bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.addEnabled = false;\n\n/**\n * Variable: removeEnabled\n * \n * Specifies if removing bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.removeEnabled = false;\n\n/**\n * Variable: dblClickRemoveEnabled\n * \n * Specifies if removing bends by double click is enabled. Default is false.\n */\nmxEdgeHandler.prototype.dblClickRemoveEnabled = false;\n\n/**\n * Variable: mergeRemoveEnabled\n * \n * Specifies if removing bends by dropping them on other bends is enabled.\n * Default is false.\n */\nmxEdgeHandler.prototype.mergeRemoveEnabled = false;\n\n/**\n * Variable: straightRemoveEnabled\n * \n * Specifies if removing bends by creating straight segments should be enabled.\n * If enabled, this can be overridden by holding down the alt key while moving.\n * Default is false.\n */\nmxEdgeHandler.prototype.straightRemoveEnabled = false;\n\n/**\n * Variable: virtualBendsEnabled\n * \n * Specifies if virtual bends should be added in the center of each\n * segments. These bends can then be used to add new waypoints.\n * Default is false.\n */\nmxEdgeHandler.prototype.virtualBendsEnabled = false;\n\n/**\n * Variable: virtualBendOpacity\n * \n * Opacity to be used for virtual bends (see <virtualBendsEnabled>).\n * Default is 20.\n */\nmxEdgeHandler.prototype.virtualBendOpacity = 20;\n\n/**\n * Variable: parentHighlightEnabled\n * \n * Specifies if the parent should be highlighted if a child cell is selected.\n * Default is false.\n */\nmxEdgeHandler.prototype.parentHighlightEnabled = false;\n\n/**\n * Variable: preferHtml\n * \n * Specifies if bends should be added to the graph container. This is updated\n * in <init> based on whether the edge or one of its terminals has an HTML\n * label in the container.\n */\nmxEdgeHandler.prototype.preferHtml = false;\n\n/**\n * Variable: allowHandleBoundsCheck\n * \n * Specifies if the bounds of handles should be used for hit-detection in IE\n * Default is true.\n */\nmxEdgeHandler.prototype.allowHandleBoundsCheck = true;\n\n/**\n * Variable: snapToTerminals\n * \n * Specifies if waypoints should snap to the routing centers of terminals.\n * Default is false.\n */\nmxEdgeHandler.prototype.snapToTerminals = false;\n\n/**\n * Variable: handleImage\n * \n * Optional <mxImage> to be used as handles. Default is null.\n */\nmxEdgeHandler.prototype.handleImage = null;\n\n/**\n * Variable: tolerance\n * \n * Optional tolerance for hit-detection in <getHandleForEvent>. Default is 0.\n */\nmxEdgeHandler.prototype.tolerance = 0;\n\n/**\n * Variable: outlineConnect\n * \n * Specifies if connections to the outline of a highlighted target should be\n * enabled. This will allow to place the connection point along the outline of\n * the highlighted target. Default is false.\n */\nmxEdgeHandler.prototype.outlineConnect = false;\n\n/**\n * Variable: manageLabelHandle\n * \n * Specifies if the label handle should be moved if it intersects with another\n * handle. Uses <checkLabelHandle> for checking and moving. Default is false.\n */\nmxEdgeHandler.prototype.manageLabelHandle = false;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this edge handler.\n */\nmxEdgeHandler.prototype.init = function()\n{\n\tthis.graph = this.state.view.graph;\n\tthis.marker = this.createMarker();\n\tthis.constraintHandler = new mxConstraintHandler(this.graph);\n\t\n\t// Clones the original points from the cell\n\t// and makes sure at least one point exists\n\tthis.points = [];\n\t\n\t// Uses the absolute points of the state\n\t// for the initial configuration and preview\n\tthis.abspoints = this.getSelectionPoints(this.state);\n\tthis.shape = this.createSelectionShape(this.abspoints);\n\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\tthis.shape.init(this.graph.getView().getOverlayPane());\n\tthis.shape.pointerEvents = false;\n\tthis.shape.setCursor(mxConstants.CURSOR_MOVABLE_EDGE);\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\n\t// Updates preferHtml\n\tthis.preferHtml = this.state.text != null &&\n\t\tthis.state.text.node.parentNode == this.graph.container;\n\t\n\tif (!this.preferHtml)\n\t{\n\t\t// Checks source terminal\n\t\tvar sourceState = this.state.getVisibleTerminalState(true);\n\t\t\n\t\tif (sourceState != null)\n\t\t{\n\t\t\tthis.preferHtml = sourceState.text != null &&\n\t\t\t\tsourceState.text.node.parentNode == this.graph.container;\n\t\t}\n\t\t\n\t\tif (!this.preferHtml)\n\t\t{\n\t\t\t// Checks target terminal\n\t\t\tvar targetState = this.state.getVisibleTerminalState(false);\n\t\t\t\n\t\t\tif (targetState != null)\n\t\t\t{\n\t\t\t\tthis.preferHtml = targetState.text != null &&\n\t\t\t\ttargetState.text.node.parentNode == this.graph.container;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Adds highlight for parent group\n\tif (this.parentHighlightEnabled)\n\t{\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\n\t\tif (this.graph.model.isVertex(parent))\n\t\t{\n\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\n\t\t\tif (pstate != null)\n\t\t\t{\n\t\t\t\tthis.parentHighlight = this.createParentHighlightShape(pstate);\n\t\t\t\t// VML dialect required here for event transparency in IE\n\t\t\t\tthis.parentHighlight.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\tthis.parentHighlight.pointerEvents = false;\n\t\t\t\tthis.parentHighlight.rotation = Number(pstate.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tthis.parentHighlight.init(this.graph.getView().getOverlayPane());\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Creates bends for the non-routed absolute points\n\t// or bends that don't correspond to points\n\tif (this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells ||\n\t\tmxGraphHandler.prototype.maxCells <= 0)\n\t{\n\t\tthis.bends = this.createBends();\n\n\t\tif (this.isVirtualBendsEnabled())\n\t\t{\n\t\t\tthis.virtualBends = this.createVirtualBends();\n\t\t}\n\t}\n\n\t// Adds a rectangular handle for the label position\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape = this.createLabelHandleShape();\n\tthis.initBend(this.labelShape);\n\tthis.labelShape.setCursor(mxConstants.CURSOR_LABEL_HANDLE);\n\t\n\tthis.customHandles = this.createCustomHandles();\n\t\n\tthis.redraw();\n};\n\n/**\n * Function: createCustomHandles\n * \n * Returns an array of custom handles. This implementation returns null.\n */\nmxEdgeHandler.prototype.createCustomHandles = function()\n{\n\treturn null;\n};\n\n/**\n * Function: isVirtualBendsEnabled\n * \n * Returns true if virtual bends should be added. This returns true if\n * <virtualBendsEnabled> is true and the current style allows and\n * renders custom waypoints.\n */\nmxEdgeHandler.prototype.isVirtualBendsEnabled = function(evt)\n{\n\treturn this.virtualBendsEnabled && (this.state.style[mxConstants.STYLE_EDGE] == null ||\n\t\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.NONE ||\n\t\t\tthis.state.style[mxConstants.STYLE_NOEDGESTYLE] == 1)  &&\n\t\t\tmxUtils.getValue(this.state.style, mxConstants.STYLE_SHAPE, null) != 'arrow';\n};\n\n/**\n * Function: isAddPointEvent\n * \n * Returns true if the given event is a trigger to add a new point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isAddPointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: isRemovePointEvent\n * \n * Returns true if the given event is a trigger to remove a point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isRemovePointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: getSelectionPoints\n * \n * Returns the list of points that defines the selection stroke.\n */\nmxEdgeHandler.prototype.getSelectionPoints = function(state)\n{\n\treturn state.absolutePoints;\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createParentHighlightShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.getSelectionColor());\n\tshape.strokewidth = this.getSelectionStrokeWidth();\n\tshape.isDashed = this.isSelectionDashed();\n\t\n\treturn shape;\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createSelectionShape = function(points)\n{\n\tvar shape = new this.state.shape.constructor();\n\tshape.outline = true;\n\tshape.apply(this.state);\n\t\n\tshape.isDashed = this.isSelectionDashed();\n\tshape.stroke = this.getSelectionColor();\n\tshape.isShadow = false;\n\t\n\treturn shape;\n};\n\n/**\n * Function: getSelectionColor\n * \n * Returns <mxConstants.EDGE_SELECTION_COLOR>.\n */\nmxEdgeHandler.prototype.getSelectionColor = function()\n{\n\treturn mxConstants.EDGE_SELECTION_COLOR;\n};\n\n/**\n * Function: getSelectionStrokeWidth\n * \n * Returns <mxConstants.EDGE_SELECTION_STROKEWIDTH>.\n */\nmxEdgeHandler.prototype.getSelectionStrokeWidth = function()\n{\n\treturn mxConstants.EDGE_SELECTION_STROKEWIDTH;\n};\n\n/**\n * Function: isSelectionDashed\n * \n * Returns <mxConstants.EDGE_SELECTION_DASHED>.\n */\nmxEdgeHandler.prototype.isSelectionDashed = function()\n{\n\treturn mxConstants.EDGE_SELECTION_DASHED;\n};\n\n/**\n * Function: isConnectableCell\n * \n * Returns true if the given cell is connectable. This is a hook to\n * disable floating connections. This implementation returns true.\n */\nmxEdgeHandler.prototype.isConnectableCell = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: getCellAt\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.getCellAt = function(x, y)\n{\n\treturn (!this.outlineConnect) ? this.graph.getCellAt(x, y) : null;\n};\n\n/**\n * Function: createMarker\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.createMarker = function()\n{\n\tvar marker = new mxCellMarker(this.graph);\n\tvar self = this; // closure\n\n\t// Only returns edges if they are connectable and never returns\n\t// the edge that is currently being modified\n\tmarker.getCell = function(me)\n\t{\n\t\tvar cell = mxCellMarker.prototype.getCell.apply(this, arguments);\n\n\t\t// Checks for cell at preview point (with grid)\n\t\tif ((cell == self.state.cell || cell == null) && self.currentPoint != null)\n\t\t{\n\t\t\tcell = self.graph.getCellAt(self.currentPoint.x, self.currentPoint.y);\n\t\t}\n\t\t\n\t\t// Uses connectable parent vertex if one exists\n\t\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\t\n\t\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t\t{\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar model = self.graph.getModel();\n\t\t\n\t\tif ((this.graph.isSwimlane(cell) && self.currentPoint != null &&\n\t\t\tthis.graph.hitsSwimlaneContent(cell, self.currentPoint.x, self.currentPoint.y)) ||\n\t\t\t(!self.isConnectableCell(cell)) || (cell == self.state.cell ||\n\t\t\t(cell != null && !self.graph.connectableEdges && model.isEdge(cell))) ||\n\t\t\tmodel.isAncestor(self.state.cell, cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\tif (!this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\treturn cell;\n\t};\n\n\t// Sets the highlight color according to validateConnection\n\tmarker.isValidState = function(state)\n\t{\n\t\tvar model = self.graph.getModel();\n\t\tvar other = self.graph.view.getTerminalPort(state,\n\t\t\tself.graph.view.getState(model.getTerminal(self.state.cell,\n\t\t\t!self.isSource)), !self.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (self.isSource) ? state.cell : otherCell;\n\t\tvar target = (self.isSource) ? otherCell : state.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tself.error = self.validateConnection(source, target);\n\n\t\treturn self.error == null;\n\t};\n\t\n\treturn marker;\n};\n\n/**\n * Function: validateConnection\n * \n * Returns the error message or an empty string if the connection for the\n * given source, target pair is not valid. Otherwise it returns null. This\n * implementation uses <mxGraph.getEdgeValidationError>.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxEdgeHandler.prototype.validateConnection = function(source, target)\n{\n\treturn this.graph.getEdgeValidationError(this.state.cell, source, target);\n};\n\n/**\n * Function: createBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar bends = [];\n\n\tfor (var i = 0; i < this.abspoints.length; i++)\n\t{\n\t\tif (this.isHandleVisible(i))\n\t\t{\n\t\t\tvar source = i == 0;\n\t\t\tvar target = i == this.abspoints.length - 1;\n\t\t\tvar terminal = source || target;\n\n\t\t\tif (terminal || this.graph.isCellBendable(cell))\n\t\t\t{\n\t\t\t\t(mxUtils.bind(this, function(index)\n\t\t\t\t{\n\t\t\t\t\tvar bend = this.createHandleShape(index);\n\t\t\t\t\tthis.initBend(bend, mxUtils.bind(this, mxUtils.bind(this, function()\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.dblClickRemoveEnabled)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.removePoint(this.state, index);\n\t\t\t\t\t\t}\n\t\t\t\t\t})));\n\t\n\t\t\t\t\tif (this.isHandleEnabled(i))\n\t\t\t\t\t{\n\t\t\t\t\t\tbend.setCursor((terminal) ? mxConstants.CURSOR_TERMINAL_HANDLE : mxConstants.CURSOR_BEND_HANDLE);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbends.push(bend);\n\t\t\t\t\n\t\t\t\t\tif (!terminal)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.points.push(new mxPoint(0,0));\n\t\t\t\t\t\tbend.node.style.visibility = 'hidden';\n\t\t\t\t\t}\n\t\t\t\t}))(i);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: createVirtualBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createVirtualBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar last = this.abspoints[0];\n\tvar bends = [];\n\n\tif (this.graph.isCellBendable(cell))\n\t{\n\t\tfor (var i = 1; i < this.abspoints.length; i++)\n\t\t{\n\t\t\t(mxUtils.bind(this, function(bend)\n\t\t\t{\n\t\t\t\tthis.initBend(bend);\n\t\t\t\tbend.setCursor(mxConstants.CURSOR_VIRTUAL_BEND_HANDLE);\n\t\t\t\tbends.push(bend);\n\t\t\t}))(this.createHandleShape());\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: isHandleEnabled\n * \n * Creates the shape used to display the given bend.\n */\nmxEdgeHandler.prototype.isHandleEnabled = function(index)\n{\n\treturn true;\n};\n\n/**\n * Function: isHandleVisible\n * \n * Returns true if the handle at the given index is visible.\n */\nmxEdgeHandler.prototype.isHandleVisible = function(index)\n{\n\tvar source = this.state.getVisibleTerminalState(true);\n\tvar target = this.state.getVisibleTerminalState(false);\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\tvar edgeStyle = (geo != null) ? this.graph.view.getEdgeStyle(this.state, geo.points, source, target) : null;\n\n\treturn edgeStyle != mxEdgeStyle.EntityRelation || index == 0 || index == this.abspoints.length - 1;\n};\n\n/**\n * Function: createHandleShape\n * \n * Creates the shape used to display the given bend. Note that the index may be\n * null for special cases, such as when called from\n * <mxElbowEdgeHandler.createVirtualBend>. Only images and rectangles should be\n * returned if support for HTML labels with not foreign objects is required.\n * Index if null for virtual handles.\n */\nmxEdgeHandler.prototype.createHandleShape = function(index)\n{\n\tif (this.handleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.handleImage.width, this.handleImage.height), this.handleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.HANDLE_SIZE;\n\t\t\n\t\tif (this.preferHtml)\n\t\t{\n\t\t\ts -= 1;\n\t\t}\n\t\t\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: createLabelHandleShape\n * \n * Creates the shape used to display the the label handle.\n */\nmxEdgeHandler.prototype.createLabelHandleShape = function()\n{\n\tif (this.labelHandleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.labelHandleImage.width, this.labelHandleImage.height), this.labelHandleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.LABEL_HANDLE_SIZE;\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.LABEL_HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: initBend\n * \n * Helper method to initialize the given bend.\n * \n * Parameters:\n * \n * bend - <mxShape> that represents the bend to be initialized.\n */\nmxEdgeHandler.prototype.initBend = function(bend, dblClick)\n{\n\tif (this.preferHtml)\n\t{\n\t\tbend.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tbend.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tbend.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\tbend.init(this.graph.getView().getOverlayPane());\n\t}\n\n\tmxEvent.redirectMouseEvents(bend.node, this.graph, this.state,\n\t\t\tnull, null, null, dblClick);\n\t\n\t// Fixes lost event tracking for images in quirks / IE8 standards\n\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t{\n\t\tmxEvent.addListener(bend.node, 'dragstart', function(evt)\n\t\t{\n\t\t\tmxEvent.consume(evt);\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t}\n\t\n\tif (mxClient.IS_TOUCH)\n\t{\n\t\tbend.node.setAttribute('pointer-events', 'none');\n\t}\n};\n\n/**\n * Function: getHandleForEvent\n * \n * Returns the index of the handle for the given event.\n */\nmxEdgeHandler.prototype.getHandleForEvent = function(me)\n{\n\t// Connection highlight may consume events before they reach sizer handle\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 1;\n\tvar hit = (this.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\tvar minDistSq = null;\n\tvar result = null;\n\n\tfunction checkShape(shape)\n\t{\n\t\tif (shape != null && shape.node.style.display != 'none' && shape.node.style.visibility != 'hidden' &&\n\t\t\t(me.isSource(shape) || (hit != null && mxUtils.intersects(shape.bounds, hit))))\n\t\t{\n\t\t\tvar dx = me.getGraphX() - shape.bounds.getCenterX();\n\t\t\tvar dy = me.getGraphY() - shape.bounds.getCenterY();\n\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\n\t\t\tif (minDistSq == null || tmp <= minDistSq)\n\t\t\t{\n\t\t\t\tminDistSq = tmp;\n\t\t\t\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tif (this.customHandles != null && this.isCustomHandleEvent(me))\n\t{\n\t\t// Inverse loop order to match display order\n\t\tfor (var i = this.customHandles.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (checkShape(this.customHandles[i].shape))\n\t\t\t{\n\t\t\t\t// LATER: Return reference to active shape\n\t\t\t\treturn mxEvent.CUSTOM_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (me.isSource(this.state.text) || checkShape(this.labelShape))\n\t{\n\t\tresult = mxEvent.LABEL_HANDLE;\n\t}\n\t\n\tif (this.bends != null)\n\t{\n\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.bends[i]))\n\t\t\t{\n\t\t\t\tresult = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.virtualBends != null && this.isAddVirtualBendEvent(me))\n\t{\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.virtualBends[i]))\n\t\t\t{\n\t\t\t\tresult = mxEvent.VIRTUAL_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isAddVirtualBendEvent\n * \n * Returns true if the given event allows virtual bends to be added. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isAddVirtualBendEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: isCustomHandleEvent\n * \n * Returns true if the given event allows custom handles to be changed. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isCustomHandleEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by checking if a special element of the handler\n * was clicked, in which case the index parameter is non-null. The\n * indices may be one of <LABEL_HANDLE> or the number of the respective\n * control point. The source and target points are used for reconnecting\n * the edge.\n */\nmxEdgeHandler.prototype.mouseDown = function(sender, me)\n{\n\tvar handle = this.getHandleForEvent(me);\n\t\n\tif (this.bends != null && this.bends[handle] != null)\n\t{\n\t\tvar b = this.bends[handle].bounds;\n\t\tthis.snapPoint = new mxPoint(b.getCenterX(), b.getCenterY());\n\t}\n\t\n\tif (this.addEnabled && handle == null && this.isAddPointEvent(me.getEvent()))\n\t{\n\t\tthis.addPoint(this.state, me.getEvent());\n\t\tme.consume();\n\t}\n\telse if (handle != null && !me.isConsumed() && this.graph.isEnabled())\n\t{\n\t\tif (this.removeEnabled && this.isRemovePointEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.removePoint(this.state, handle);\n\t\t}\n\t\telse if (handle != mxEvent.LABEL_HANDLE || this.graph.isLabelMovable(me.getCell()))\n\t\t{\n\t\t\tif (handle <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(this.virtualBends[mxEvent.VIRTUAL_HANDLE - handle].node, 100);\n\t\t\t}\n\t\t\t\n\t\t\tthis.start(me.getX(), me.getY(), handle);\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxEdgeHandler.prototype.start = function(x, y, index)\n{\n\tthis.startX = x;\n\tthis.startY = y;\n\n\tthis.isSource = (this.bends == null) ? false : index == 0;\n\tthis.isTarget = (this.bends == null) ? false : index == this.bends.length - 1;\n\tthis.isLabel = index == mxEvent.LABEL_HANDLE;\n\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tvar cell = this.state.cell;\n\t\tvar terminal = this.graph.model.getTerminal(cell, this.isSource);\n\n\t\tif ((terminal == null && this.graph.isTerminalPointMovable(cell, this.isSource)) ||\n\t\t\t(terminal != null && this.graph.isCellDisconnectable(cell, terminal, this.isSource)))\n\t\t{\n\t\t\tthis.index = index;\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.index = index;\n\t}\n\t\n\t// Hides other custom handles\n\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t{\n\t\tif (this.customHandles != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t\t{\n\t\t\t\tif (i != mxEvent.CUSTOM_HANDLE - this.index)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[i].setVisible(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: clonePreviewState\n * \n * Returns a clone of the current preview state for the given point and terminal.\n */\nmxEdgeHandler.prototype.clonePreviewState = function(point, terminal)\n{\n\treturn this.state.clone();\n};\n\n/**\n * Function: getSnapToTerminalTolerance\n * \n * Returns the tolerance for the guides. Default value is\n * gridSize * scale / 2.\n */\nmxEdgeHandler.prototype.getSnapToTerminalTolerance = function()\n{\n\treturn this.graph.gridSize * this.graph.view.scale / 2;\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxEdgeHandler.prototype.updateHint = function(me, point) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxEdgeHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled width or height. This uses Math.round.\n */\nmxEdgeHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length);\n};\n\n/**\n * Function: isSnapToTerminalsEvent\n * \n * Returns true if <snapToTerminals> is true and if alt is not pressed.\n */\nmxEdgeHandler.prototype.isSnapToTerminalsEvent = function(me)\n{\n\treturn this.snapToTerminals && !mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: getPointForEvent\n * \n * Returns the point for the given event.\n */\nmxEdgeHandler.prototype.getPointForEvent = function(me)\n{\n\tvar view = this.graph.getView();\n\tvar scale = view.scale;\n\tvar point = new mxPoint(this.roundLength(me.getGraphX() / scale) * scale,\n\t\tthis.roundLength(me.getGraphY() / scale) * scale);\n\t\n\tvar tt = this.getSnapToTerminalTolerance();\n\tvar overrideX = false;\n\tvar overrideY = false;\t\t\n\t\n\tif (tt > 0 && this.isSnapToTerminalsEvent(me))\n\t{\n\t\tfunction snapToPoint(pt)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar x = pt.x;\n\n\t\t\t\tif (Math.abs(point.x - x) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.x = x;\n\t\t\t\t\toverrideX = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar y = pt.y;\n\n\t\t\t\tif (Math.abs(point.y - y) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.y = y;\n\t\t\t\t\toverrideY = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Temporary function\n\t\tfunction snapToTerminal(terminal)\n\t\t{\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, new mxPoint(view.getRoutingCenterX(terminal),\n\t\t\t\t\t\tview.getRoutingCenterY(terminal)));\n\t\t\t}\n\t\t};\n\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(true));\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(false));\n\n\t\tif (this.state.absolutePoints != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, this.state.absolutePoints[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tvar tr = view.translate;\n\t\t\n\t\tif (!overrideX)\n\t\t{\n\t\t\tpoint.x = (this.graph.snap(point.x / scale - tr.x) + tr.x) * scale;\n\t\t}\n\t\t\n\t\tif (!overrideY)\n\t\t{\n\t\t\tpoint.y = (this.graph.snap(point.y / scale - tr.y) + tr.y) * scale;\n\t\t}\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getPreviewTerminalState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.getPreviewTerminalState = function(me)\n{\n\tthis.constraintHandler.update(me, this.isSource, true, me.isSource(this.marker.highlight.shape) ? null : this.currentPoint);\n\t\n\tif (this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null)\n\t{\n\t\t// Handles special case where grid is large and connection point is at actual point in which\n\t\t// case the outline is not followed as long as we're < gridSize / 2 away from that point\n\t\tif (this.marker.highlight != null && this.marker.highlight.state != null &&\n\t\t\tthis.marker.highlight.state.cell == this.constraintHandler.currentFocus.cell)\n\t\t{\n\t\t\t// Direct repaint needed if cell already highlighted\n\t\t\tif (this.marker.highlight.shape.stroke != 'transparent')\n\t\t\t{\n\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.markCell(this.constraintHandler.currentFocus.cell, 'transparent');\n\t\t}\n\t\t\n\t\tvar model = this.graph.getModel();\n\t\tvar other = this.graph.view.getTerminalPort(this.state,\n\t\t\t\tthis.graph.view.getState(model.getTerminal(this.state.cell,\n\t\t\t!this.isSource)), !this.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (this.isSource) ? this.constraintHandler.currentFocus.cell : otherCell;\n\t\tvar target = (this.isSource) ? otherCell : this.constraintHandler.currentFocus.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tthis.error = this.validateConnection(source, target);\n\t\tvar result = null;\n\t\t\n\t\tif (this.error == null)\n\t\t{\n\t\t\tresult = this.constraintHandler.currentFocus;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\telse if (!this.graph.isIgnoreTerminalEvent(me.getEvent()))\n\t{\n\t\tthis.marker.process(me);\n\t\tvar state = this.marker.getValidState();\n\t\t\n\t\tif (state != null && this.graph.isCellLocked(state.cell))\n\t\t{\n\t\t\tthis.marker.reset();\n\t\t}\n\t\t\n\t\treturn this.marker.getValidState();\n\t}\n\telse\n\t{\n\t\tthis.marker.reset();\n\t\t\n\t\treturn null;\n\t}\n};\n\n/**\n * Function: getPreviewPoints\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n * \n * Parameters:\n * \n * pt - <mxPoint> that contains the current pointer position.\n * me - Optional <mxMouseEvent> that contains the current event.\n */\nmxEdgeHandler.prototype.getPreviewPoints = function(pt, me)\n{\n\tvar geometry = this.graph.getCellGeometry(this.state.cell);\n\tvar points = (geometry.points != null) ? geometry.points.slice() : null;\n\tvar point = new mxPoint(pt.x, pt.y);\n\tvar result = null;\n\t\n\tif (!this.isSource && !this.isTarget)\n\t{\n\t\tthis.convertPoint(point, false);\n\t\t\n\t\tif (points == null)\n\t\t{\n\t\t\tpoints = [point];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Adds point from virtual bend\n\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 0, point);\n\t\t\t}\n\n\t\t\t// Removes point if dragged on terminal point\n\t\t\tif (!this.isSource && !this.isTarget)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i != this.index)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar bend = this.bends[i];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bend != null && mxUtils.contains(bend.bounds, pt.x, pt.y))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(this.index - 1, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Removes point if user tries to straighten a segment\n\t\t\t\tif (result == null && this.straightRemoveEnabled && (me == null || !mxEvent.isAltDown(me.getEvent())))\n\t\t\t\t{\n\t\t\t\t\tvar tol = this.graph.tolerance * this.graph.tolerance;\n\t\t\t\t\tvar abs = this.state.absolutePoints.slice();\n\t\t\t\t\tabs[this.index] = pt;\n\t\t\t\t\t\n\t\t\t\t\t// Handes special case where removing waypoint affects tolerance (flickering)\n\t\t\t\t\tvar src = this.state.getVisibleTerminalState(true);\n\t\t\t\t\t\n\t\t\t\t\tif (src != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, src, true);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(src, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[0] = new mxPoint(src.view.getRoutingCenterX(src), src.view.getRoutingCenterY(src));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar trg = this.state.getVisibleTerminalState(false);\n\t\t\t\t\t\n\t\t\t\t\tif (trg != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, trg, false);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(trg, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[abs.length - 1] = new mxPoint(trg.view.getRoutingCenterX(trg), trg.view.getRoutingCenterY(trg));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction checkRemove(idx, tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (idx > 0 && idx < abs.length - 1 &&\n\t\t\t\t\t\t\tmxUtils.ptSegDistSq(abs[idx - 1].x, abs[idx - 1].y,\n\t\t\t\t\t\t\t\tabs[idx + 1].x, abs[idx + 1].y, tmp.x, tmp.y) < tol)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpoints.splice(idx - 1, 1);\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// LATER: Check if other points can be removed if a segment is made straight\n\t\t\t\t\tcheckRemove(this.index, pt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Updates existing point\n\t\t\tif (result == null && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints[this.index - 1] = point;\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.graph.resetEdgesOnConnect)\n\t{\n\t\tpoints = null;\n\t}\n\t\n\treturn (result != null) ? result : points;\n};\n\n/**\n * Function: isOutlineConnectEvent\n * \n * Returns true if <outlineConnect> is true and the source of the event is the outline shape\n * or shift is pressed.\n */\nmxEdgeHandler.prototype.isOutlineConnectEvent = function(me)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar evt = me.getEvent();\n\t\n\tvar clientX = mxEvent.getClientX(evt);\n\tvar clientY = mxEvent.getClientY(evt);\n\t\n\tvar doc = document.documentElement;\n\tvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n\tvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\t\n\tvar gridX = this.currentPoint.x - this.graph.container.scrollLeft + offset.x - left;\n\tvar gridY = this.currentPoint.y - this.graph.container.scrollTop + offset.y - top;\n\n\treturn this.outlineConnect && !mxEvent.isShiftDown(me.getEvent()) &&\n\t\t(me.isSource(this.marker.highlight.shape) ||\n\t\t(mxEvent.isAltDown(me.getEvent()) && me.getState() != null) ||\n\t\tthis.marker.highlight.isHighlightAt(clientX, clientY) ||\n\t\t((gridX != clientX || gridY != clientY) && me.getState() == null &&\n\t\tthis.marker.highlight.isHighlightAt(gridX, gridY)));\n};\n\n/**\n * Function: updatePreviewState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.updatePreviewState = function(edge, point, terminalState, me, outline)\n{\n\t// Computes the points for the edge style and terminals\n\tvar sourceState = (this.isSource) ? terminalState : this.state.getVisibleTerminalState(true);\n\tvar targetState = (this.isTarget) ? terminalState : this.state.getVisibleTerminalState(false);\n\t\n\tvar sourceConstraint = this.graph.getConnectionConstraint(edge, sourceState, true);\n\tvar targetConstraint = this.graph.getConnectionConstraint(edge, targetState, false);\n\n\tvar constraint = this.constraintHandler.currentConstraint;\n\n\tif (constraint == null && outline)\n\t{\n\t\tif (terminalState != null)\n\t\t{\n\t\t\t// Handles special case where mouse is on outline away from actual end point\n\t\t\t// in which case the grid is ignored and mouse point is used instead\n\t\t\tif (me.isSource(this.marker.highlight.shape))\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\t\t\t\n\t\t\tconstraint = this.graph.getOutlineConstraint(point, terminalState, me);\n\t\t\tthis.constraintHandler.setFocus(me, terminalState, this.isSource);\n\t\t\tthis.constraintHandler.currentConstraint = constraint;\n\t\t\tthis.constraintHandler.currentPoint = point;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\t}\n\t\n\tif (this.outlineConnect && this.marker.highlight != null && this.marker.highlight.shape != null)\n\t{\n\t\tvar s = this.graph.view.scale;\n\t\t\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (outline) ? mxConstants.OUTLINE_HIGHLIGHT_COLOR : 'transparent';\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.OUTLINE_HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t\telse if (this.marker.hasValidState())\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (this.marker.getValidState() == me.getState()) ?\n\t\t\t\tmxConstants.DEFAULT_VALID_COLOR : 'transparent';\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t}\n\t\n\tif (this.isSource)\n\t{\n\t\tsourceConstraint = constraint;\n\t}\n\telse if (this.isTarget)\n\t{\n\t\ttargetConstraint = constraint;\n\t}\n\t\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tif (constraint != null && constraint.point != null)\n\t\t{\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X] = constraint.point.x;\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y] = constraint.point.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X];\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y];\n\t\t}\n\t}\n\t\n\tedge.setVisibleTerminalState(sourceState, true);\n\tedge.setVisibleTerminalState(targetState, false);\n\t\n\tif (!this.isSource || sourceState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, sourceState, true, sourceConstraint);\n\t}\n\t\n\tif (!this.isTarget || targetState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, targetState, false, targetConstraint);\n\t}\n\t\n\tif ((this.isSource || this.isTarget) && terminalState == null)\n\t{\n\t\tedge.setAbsoluteTerminalPoint(point, this.isSource);\n\n\t\tif (this.marker.getMarkedState() == null)\n\t\t{\n\t\t\tthis.error = (this.graph.allowDanglingEdges) ? null : '';\n\t\t}\n\t}\n\t\n\tedge.view.updatePoints(edge, this.points, sourceState, targetState);\n\tedge.view.updateFloatingTerminalPoints(edge, sourceState, targetState);\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview.\n */\nmxEdgeHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tthis.currentPoint = this.getPointForEvent(me);\n\t\tthis.error = null;\n\t\t\n\t\t// Uses the current point from the constraint handler if available\n\t\tif (!this.graph.isIgnoreTerminalEvent(me.getEvent()) && mxEvent.isShiftDown(me.getEvent()) && this.snapPoint != null)\n\t\t{\n\t\t\tif (Math.abs(this.snapPoint.x - this.currentPoint.x) < Math.abs(this.snapPoint.y - this.currentPoint.y))\n\t\t\t{\n\t\t\t\tthis.currentPoint.x = this.snapPoint.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.currentPoint.y = this.snapPoint.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t{\n\t\t\tif (this.customHandles != null)\n\t\t\t{\n\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].processEvent(me);\n\t\t\t}\n\t\t}\n\t\telse if (this.isLabel)\n\t\t{\n\t\t\tthis.label.x = this.currentPoint.x;\n\t\t\tthis.label.y = this.currentPoint.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.points = this.getPreviewPoints(this.currentPoint, me);\n\t\t\tvar terminalState = (this.isSource || this.isTarget) ? this.getPreviewTerminalState(me) : null;\n\n\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t\t{\n\t\t\t\tthis.currentPoint = this.constraintHandler.currentPoint.clone();\n\t\t\t}\n\t\t\telse if (this.outlineConnect)\n\t\t\t{\n\t\t\t\t// Need to check outline before cloning terminal state\n\t\t\t\tvar outline = (this.isSource || this.isTarget) ? this.isOutlineConnectEvent(me) : false\n\t\t\t\t\t\t\n\t\t\t\tif (outline)\n\t\t\t\t{\n\t\t\t\t\tterminalState = this.marker.highlight.state;\n\t\t\t\t}\n\t\t\t\telse if (terminalState != null && terminalState != me.getState() && this.marker.highlight.shape != null)\n\t\t\t\t{\n\t\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t\tterminalState = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (terminalState != null && this.graph.isCellLocked(terminalState.cell))\n\t\t\t{\n\t\t\t\tterminalState = null;\n\t\t\t\tthis.marker.reset();\n\t\t\t}\n\t\t\t\n\t\t\tvar clone = this.clonePreviewState(this.currentPoint, (terminalState != null) ? terminalState.cell : null);\n\t\t\tthis.updatePreviewState(clone, this.currentPoint, terminalState, me, outline);\n\n\t\t\t// Sets the color of the preview to valid or invalid, updates the\n\t\t\t// points of the preview and redraws\n\t\t\tvar color = (this.error == null) ? this.marker.validColor : this.marker.invalidColor;\n\t\t\tthis.setPreviewColor(color);\n\t\t\tthis.abspoints = clone.absolutePoints;\n\t\t\tthis.active = true;\n\t\t}\n\n\t\t// This should go before calling isOutlineConnectEvent above. As a workaround\n\t\t// we add an offset of gridSize to the hint to avoid problem with hit detection\n\t\t// in highlight.isHighlightAt (which uses comonentFromPoint)\n\t\tthis.updateHint(me, this.currentPoint);\n\t\tthis.drawPreview();\n\t\tmxEvent.consume(me.getEvent());\n\t\tme.consume();\n\t}\n\t// Workaround for disabling the connect highlight when over handle\n\telse if (mxClient.IS_IE && this.getHandleForEvent(me) != null)\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event to applying the previewed changes on the edge by\n * using <moveLabel>, <connect> or <changePoints>.\n */\nmxEdgeHandler.prototype.mouseUp = function(sender, me)\n{\n\t// Workaround for wrong event source in Webkit\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tvar edge = this.state.cell;\n\t\t\n\t\t// Ignores event if mouse has not been moved\n\t\tif (me.getX() != this.startX || me.getY() != this.startY)\n\t\t{\n\t\t\tvar clone = !this.graph.isIgnoreTerminalEvent(me.getEvent()) && this.graph.isCloneEvent(me.getEvent()) &&\n\t\t\t\tthis.cloneEnabled && this.graph.isCellsCloneable();\n\t\t\t\n\t\t\t// Displays the reason for not carriying out the change\n\t\t\t// if there is an error message with non-zero length\n\t\t\tif (this.error != null)\n\t\t\t{\n\t\t\t\tif (this.error.length > 0)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.validationAlert(this.error);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].execute();\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.isLabel)\n\t\t\t{\n\t\t\t\tthis.moveLabel(this.state, this.label.x, this.label.y);\n\t\t\t}\n\t\t\telse if (this.isSource || this.isTarget)\n\t\t\t{\n\t\t\t\tvar terminal = null;\n\t\t\t\t\n\t\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t\t\t{\n\t\t\t\t\tterminal = this.constraintHandler.currentFocus.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal == null && this.marker.hasValidState() && this.marker.highlight != null &&\n\t\t\t\t\tthis.marker.highlight.shape != null &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'transparent' &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'white')\n\t\t\t\t{\n\t\t\t\t\tterminal = this.marker.validState.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\tvar parent = model.getParent(edge);\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Clones and adds the cell\n\t\t\t\t\t\tif (clone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar geo = model.getGeometry(edge);\n\t\t\t\t\t\t\tvar clone = this.graph.cloneCell(edge);\n\t\t\t\t\t\t\tmodel.add(parent, clone, model.getChildCount(parent));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\tmodel.setGeometry(clone, geo);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar other = model.getTerminal(edge, !this.isSource);\n\t\t\t\t\t\t\tthis.graph.connectCell(clone, other, !this.isSource);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tedge = clone;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tedge = this.connect(edge, terminal, this.isSource, clone, me);\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.graph.isAllowDanglingEdges())\n\t\t\t\t{\n\t\t\t\t\tvar pt = this.abspoints[(this.isSource) ? 0 : this.abspoints.length - 1];\n\t\t\t\t\tpt.x = this.roundLength(pt.x / this.graph.view.scale - this.graph.view.translate.x);\n\t\t\t\t\tpt.y = this.roundLength(pt.y / this.graph.view.scale - this.graph.view.translate.y);\n\n\t\t\t\t\tvar pstate = this.graph.getView().getState(\n\t\t\t\t\t\t\tthis.graph.getModel().getParent(edge));\n\t\t\t\t\t\t\t\n\t\t\t\t\tif (pstate != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt.x -= pstate.origin.x;\n\t\t\t\t\t\tpt.y -= pstate.origin.y;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpt.x -= this.graph.panDx / this.graph.view.scale;\n\t\t\t\t\tpt.y -= this.graph.panDy / this.graph.view.scale;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t// Destroys and recreates this handler\n\t\t\t\t\tedge = this.changeTerminalPoint(edge, pt, this.isSource, clone);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.active)\n\t\t\t{\n\t\t\t\tedge = this.changePoints(edge, this.points, clone);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.graph.getView().invalidate(this.state.cell);\n\t\t\t\tthis.graph.getView().validate(this.state.cell);\t\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Resets the preview color the state of the handler if this\n\t\t// handler has not been recreated\n\t\tif (this.marker != null)\n\t\t{\n\t\t\tthis.reset();\n\n\t\t\t// Updates the selection if the edge has been cloned\n\t\t\tif (edge != this.state.cell)\n\t\t\t{\n\t\t\t\tthis.graph.setSelectionCell(edge);\n\t\t\t}\n\t\t}\n\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxEdgeHandler.prototype.reset = function()\n{\n\tif (this.active)\n\t{\n\t\tthis.refresh();\n\t}\n\t\n\tthis.error = null;\n\tthis.index = null;\n\tthis.label = null;\n\tthis.points = null;\n\tthis.snapPoint = null;\n\tthis.isLabel = false;\n\tthis.isSource = false;\n\tthis.isTarget = false;\n\tthis.active = false;\n\t\n\tif (this.livePreview && this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (this.sizers[i] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[i].node.style.display = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.reset();\n\t}\n\t\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.reset();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].reset();\n\t\t}\n\t}\n\n\tthis.setPreviewColor(mxConstants.EDGE_SELECTION_COLOR);\n\tthis.removeHint();\n\tthis.redraw();\n};\n\n/**\n * Function: setPreviewColor\n * \n * Sets the color of the preview to the given value.\n */\nmxEdgeHandler.prototype.setPreviewColor = function(color)\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n\n/**\n * Function: convertPoint\n * \n * Converts the given point in-place from screen to unscaled, untranslated\n * graph coordinates and applies the grid. Returns the given, modified\n * point instance.\n * \n * Parameters:\n * \n * point - <mxPoint> to be converted.\n * gridEnabled - Boolean that specifies if the grid should be applied.\n */\nmxEdgeHandler.prototype.convertPoint = function(point, gridEnabled)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\t\t\n\tif (gridEnabled)\n\t{\n\t\tpoint.x = this.graph.snap(point.x);\n\t\tpoint.y = this.graph.snap(point.y);\n\t}\n\t\n\tpoint.x = Math.round(point.x / scale - tr.x);\n\tpoint.y = Math.round(point.y / scale - tr.y);\n\n\tvar pstate = this.graph.getView().getState(\n\t\tthis.graph.getModel().getParent(this.state.cell));\n\n\tif (pstate != null)\n\t{\n\t\tpoint.x -= pstate.origin.x;\n\t\tpoint.y -= pstate.origin.y;\n\t}\n\n\treturn point;\n};\n\n/**\n * Function: moveLabel\n * \n * Changes the coordinates for the label of the given edge.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge.\n * x - Integer that specifies the x-coordinate of the new location.\n * y - Integer that specifies the y-coordinate of the new location.\n */\nmxEdgeHandler.prototype.moveLabel = function(edgeState, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(edgeState.cell);\n\t\n\tif (geometry != null)\n\t{\n\t\tvar scale = this.graph.getView().scale;\n\t\tgeometry = geometry.clone();\n\t\t\n\t\tif (geometry.relative)\n\t\t{\n\t\t\t// Resets the relative location stored inside the geometry\n\t\t\tvar pt = this.graph.getView().getRelativePoint(edgeState, x, y);\n\t\t\tgeometry.x = Math.round(pt.x * 10000) / 10000;\n\t\t\tgeometry.y = Math.round(pt.y);\n\t\t\t\n\t\t\t// Resets the offset inside the geometry to find the offset\n\t\t\t// from the resulting point\n\t\t\tgeometry.offset = new mxPoint(0, 0);\n\t\t\tvar pt = this.graph.view.getPoint(edgeState, geometry);\n\t\t\tgeometry.offset = new mxPoint(Math.round((x - pt.x) / scale), Math.round((y - pt.y) / scale));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar points = edgeState.absolutePoints;\n\t\t\tvar p0 = points[0];\n\t\t\tvar pe = points[points.length - 1];\n\t\t\t\n\t\t\tif (p0 != null && pe != null)\n\t\t\t{\n\t\t\t\tvar cx = p0.x + (pe.x - p0.x) / 2;\n\t\t\t\tvar cy = p0.y + (pe.y - p0.y) / 2;\n\t\t\t\t\n\t\t\t\tgeometry.offset = new mxPoint(Math.round((x - cx) / scale), Math.round((y - cy) / scale));\n\t\t\t\tgeometry.x = 0;\n\t\t\t\tgeometry.y = 0;\n\t\t\t}\n\t\t}\n\n\t\tmodel.setGeometry(edgeState.cell, geometry);\n\t}\n};\n\n/**\n * Function: connect\n * \n * Changes the terminal or terminal point of the given edge in the graph\n * model.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be reconnected.\n * terminal - <mxCell> that represents the new terminal.\n * isSource - Boolean indicating if the new terminal is the source or\n * target terminal.\n * isClone - Boolean indicating if the new connection should be a clone of\n * the old edge.\n * me - <mxMouseEvent> that contains the mouse up event.\n */\nmxEdgeHandler.prototype.connect = function(edge, terminal, isSource, isClone, me)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(edge);\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvar constraint = this.constraintHandler.currentConstraint;\n\t\t\n\t\tif (constraint == null)\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\n\t\tthis.graph.connectCell(edge, terminal, isSource, constraint);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changeTerminalPoint\n * \n * Changes the terminal point of the given edge.\n */\nmxEdgeHandler.prototype.changeTerminalPoint = function(edge, point, isSource, clone)\n{\n\tvar model = this.graph.getModel();\n\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar terminal = model.getTerminal(edge, !isSource);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, terminal, !isSource);\n\t\t}\n\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.setTerminalPoint(point, isSource);\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t\tthis.graph.connectCell(edge, null, isSource, new mxConnectionConstraint());\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changePoints\n * \n * Changes the control points of the given edge in the graph model.\n */\nmxEdgeHandler.prototype.changePoints = function(edge, points, clone)\n{\n\tvar model = this.graph.getModel();\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar source = model.getTerminal(edge, true);\n\t\t\tvar target = model.getTerminal(edge, false);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, source, true);\n\t\t\tmodel.setTerminal(edge, target, false);\n\t\t}\n\t\t\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points = points;\n\t\t\t\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: addPoint\n * \n * Adds a control point for the given state and event.\n */\nmxEdgeHandler.prototype.addPoint = function(state, evt)\n{\n\tvar pt = mxUtils.convertPoint(this.graph.container, mxEvent.getClientX(evt),\n\t\t\tmxEvent.getClientY(evt));\n\tvar gridEnabled = this.graph.isGridEnabledEvent(evt);\n\tthis.convertPoint(pt, gridEnabled);\n\tthis.addPointAt(state, pt.x, pt.y);\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: addPointAt\n * \n * Adds a control point at the given point.\n */\nmxEdgeHandler.prototype.addPointAt = function(state, x, y)\n{\n\tvar geo = this.graph.getCellGeometry(state.cell);\n\tvar pt = new mxPoint(x, y);\n\t\n\tif (geo != null)\n\t{\n\t\tgeo = geo.clone();\n\t\tvar t = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\tvar offset = new mxPoint(t.x * s, t.y * s);\n\t\t\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\n\t\tif (this.graph.model.isVertex(parent))\n\t\t{\n\t\t\tvar pState = this.graph.view.getState(parent);\n\t\t\toffset = new mxPoint(pState.x, pState.y);\n\t\t}\n\t\t\n\t\tvar index = mxUtils.findNearestSegment(state, pt.x * s + offset.x, pt.y * s + offset.y);\n\n\t\tif (geo.points == null)\n\t\t{\n\t\t\tgeo.points = [pt];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeo.points.splice(index, 0, pt);\n\t\t}\n\t\t\n\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\tthis.refresh();\t\n\t\tthis.redraw();\n\t}\n};\n\n/**\n * Function: removePoint\n * \n * Removes the control point at the given index from the given state.\n */\nmxEdgeHandler.prototype.removePoint = function(state, index)\n{\n\tif (index > 0 && index < this.abspoints.length - 1)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\t\t\n\t\tif (geo != null && geo.points != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points.splice(index - 1, 1);\n\t\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\t\tthis.refresh();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getHandleFillColor\n * \n * Returns the fillcolor for the handle at the given index.\n */\nmxEdgeHandler.prototype.getHandleFillColor = function(index)\n{\n\tvar isSource = index == 0;\n\tvar cell = this.state.cell;\n\tvar terminal = this.graph.getModel().getTerminal(cell, isSource);\n\tvar color = mxConstants.HANDLE_FILLCOLOR;\n\t\n\tif ((terminal != null && !this.graph.isCellDisconnectable(cell, terminal, isSource)) ||\n\t\t(terminal == null && !this.graph.isTerminalPointMovable(cell, isSource)))\n\t{\n\t\tcolor = mxConstants.LOCKED_HANDLE_FILLCOLOR;\n\t}\n\telse if (terminal != null && this.graph.isCellDisconnectable(cell, terminal, isSource))\n\t{\n\t\tcolor = mxConstants.CONNECT_HANDLE_FILLCOLOR;\n\t}\n\t\n\treturn color;\n};\n\n/**\n * Function: redraw\n * \n * Redraws the preview, and the bends- and label control points.\n */\nmxEdgeHandler.prototype.redraw = function()\n{\n\tthis.abspoints = this.state.absolutePoints.slice();\n\tthis.redrawHandles();\n\t\n\tvar g = this.graph.getModel().getGeometry(this.state.cell);\n\tvar pts = g.points;\n\n\tif (this.bends != null && this.bends.length > 0)\n\t{\n\t\tif (pts != null)\n\t\t{\n\t\t\tif (this.points == null)\n\t\t\t{\n\t\t\t\tthis.points = [];\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t\t\t{\n\t\t\t\tif (this.bends[i] != null && this.abspoints[i] != null)\n\t\t\t\t{\n\t\t\t\t\tthis.points[i - 1] = pts[i - 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.drawPreview();\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the handles.\n */\nmxEdgeHandler.prototype.redrawHandles = function()\n{\n\tvar cell = this.state.cell;\n\n\t// Updates the handle for the label position\n\tvar b = this.labelShape.bounds;\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape.bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\n\t// Shows or hides the label handle depending on the label\n\tvar lab = this.graph.getLabel(cell);\n\tthis.labelShape.visible = (lab != null && lab.length > 0 && this.graph.isLabelMovable(cell));\n\t\n\tif (this.bends != null && this.bends.length > 0)\n\t{\n\t\tvar n = this.abspoints.length - 1;\n\t\t\n\t\tvar p0 = this.abspoints[0];\n\t\tvar x0 = p0.x;\n\t\tvar y0 = p0.y;\n\t\t\n\t\tb = this.bends[0].bounds;\n\t\tthis.bends[0].bounds = new mxRectangle(Math.floor(x0 - b.width / 2),\n\t\t\t\tMath.floor(y0 - b.height / 2), b.width, b.height);\n\t\tthis.bends[0].fill = this.getHandleFillColor(0);\n\t\tthis.bends[0].redraw();\n\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[0].bounds);\n\t\t}\n\t\t\t\t\n\t\tvar pe = this.abspoints[n];\n\t\tvar xn = pe.x;\n\t\tvar yn = pe.y;\n\t\t\n\t\tvar bn = this.bends.length - 1;\n\t\tb = this.bends[bn].bounds;\n\t\tthis.bends[bn].bounds = new mxRectangle(Math.floor(xn - b.width / 2),\n\t\t\t\tMath.floor(yn - b.height / 2), b.width, b.height);\n\t\tthis.bends[bn].fill = this.getHandleFillColor(bn);\n\t\tthis.bends[bn].redraw();\n\t\t\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[bn].bounds);\n\t\t}\n\t\t\n\t\tthis.redrawInnerBends(p0, pe);\n\t}\n\n\tif (this.abspoints != null && this.virtualBends != null && this.virtualBends.length > 0)\n\t{\n\t\tvar last = this.abspoints[0];\n\t\t\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tif (this.virtualBends[i] != null && this.abspoints[i + 1] != null)\n\t\t\t{\n\t\t\t\tvar pt = this.abspoints[i + 1];\n\t\t\t\tvar b = this.virtualBends[i];\n\t\t\t\tvar x = last.x + (pt.x - last.x) / 2;\n\t\t\t\tvar y = last.y + (pt.y - last.y) / 2;\n\t\t\t\tb.bounds = new mxRectangle(Math.floor(x - b.bounds.width / 2),\n\t\t\t\t\t\tMath.floor(y - b.bounds.height / 2), b.bounds.width, b.bounds.height);\n\t\t\t\tb.redraw();\n\t\t\t\tmxUtils.setOpacity(b.node, this.virtualBendOpacity);\n\t\t\t\tlast = pt;\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(b.bounds);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.redraw();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: hideHandles\n * \n * Shortcut to <hideSizers>.\n */\nmxEdgeHandler.prototype.setHandlesVisible = function(visible)\n{\n\tif (this.bends != null)\n\t{\n\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t{\n\t\t\tthis.bends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\t\n\tif (this.virtualBends != null)\n\t{\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tthis.virtualBends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.node.style.display = (visible) ? '' : 'none';\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].setVisible(visible);\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates and redraws the inner bends.\n * \n * Parameters:\n * \n * p0 - <mxPoint> that represents the location of the first point.\n * pe - <mxPoint> that represents the location of the last point.\n */\nmxEdgeHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t{\n\t\tif (this.bends[i] != null)\n\t\t{\n\t\t\tif (this.abspoints[i] != null)\n\t\t\t{\n\t\t\t\tvar x = this.abspoints[i].x;\n\t\t\t\tvar y = this.abspoints[i].y;\n\t\t\t\t\n\t\t\t\tvar b = this.bends[i].bounds;\n\t\t\t\tthis.bends[i].node.style.visibility = 'visible';\n\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - b.width / 2),\n\t\t\t\t\t\tMath.round(y - b.height / 2), b.width, b.height);\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(this.bends[i].bounds);\n\t\t\t\t}\n\t\t\t\telse if (this.handleImage == null && this.labelShape.visible && mxUtils.intersects(this.bends[i].bounds, this.labelShape.bounds))\n\t\t\t\t{\n\t\t\t\t\tw = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\th = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - w / 2), Math.round(y - h / 2), w, h);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.bends[i].redraw();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.bends[i].destroy();\n\t\t\t\tthis.bends[i] = null;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: checkLabelHandle\n * \n * Checks if the label handle intersects the given bounds and moves it if it\n * intersects.\n */\nmxEdgeHandler.prototype.checkLabelHandle = function(b)\n{\n\tif (this.labelShape != null)\n\t{\n\t\tvar b2 = this.labelShape.bounds;\n\t\t\n\t\tif (mxUtils.intersects(b, b2))\n\t\t{\n\t\t\tif (b.getCenterY() < b2.getCenterY())\n\t\t\t{\n\t\t\t\tb2.y = b.y + b.height;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb2.y = b.y - b2.height;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview.\n */\nmxEdgeHandler.prototype.drawPreview = function()\n{\n\tif (this.isLabel)\n\t{\n\t\tvar b = this.labelShape.bounds;\n\t\tvar bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\t\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\t\tthis.labelShape.bounds = bounds;\n\t\tthis.labelShape.redraw();\n\t}\n\telse if (this.shape != null)\n\t{\n\t\tthis.shape.apply(this.state);\n\t\tthis.shape.points = this.abspoints;\n\t\tthis.shape.scale = this.state.view.scale;\n\t\tthis.shape.isDashed = this.isSelectionDashed();\n\t\tthis.shape.stroke = this.getSelectionColor();\n\t\tthis.shape.strokewidth = this.getSelectionStrokeWidth() / this.shape.scale / this.shape.scale;\n\t\tthis.shape.isShadow = false;\n\t\tthis.shape.redraw();\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.redraw();\n\t}\n};\n\n/**\n * Function: refresh\n * \n * Refreshes the bends of this handler.\n */\nmxEdgeHandler.prototype.refresh = function()\n{\n\tthis.abspoints = this.getSelectionPoints(this.state);\n\tthis.points = [];\n\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.points = this.abspoints;\n\t}\n\t\n\tif (this.bends != null)\n\t{\n\t\tthis.destroyBends(this.bends);\n\t\tthis.bends = this.createBends();\n\t}\n\t\n\tif (this.virtualBends != null)\n\t{\n\t\tthis.destroyBends(this.virtualBends);\n\t\tthis.virtualBends = this.createVirtualBends();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tthis.destroyBends(this.customHandles);\n\t\tthis.customHandles = this.createCustomHandles();\n\t}\n\t\n\t// Puts label node on top of bends\n\tif (this.labelShape != null && this.labelShape.node != null && this.labelShape.node.parentNode != null)\n\t{\n\t\tthis.labelShape.node.parentNode.appendChild(this.labelShape.node);\n\t}\n};\n\n/**\n * Function: destroyBends\n * \n * Destroys all elements in <bends>.\n */\nmxEdgeHandler.prototype.destroyBends = function(bends)\n{\n\tif (bends != null)\n\t{\n\t\tfor (var i = 0; i < bends.length; i++)\n\t\t{\n\t\t\tif (bends[i] != null)\n\t\t\t{\n\t\t\t\tbends[i].destroy();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This does\n * normally not need to be called as handlers are destroyed automatically\n * when the corresponding cell is deselected.\n */\nmxEdgeHandler.prototype.destroy = function()\n{\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.state.view.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.destroy();\n\t\tthis.marker = null;\n\t}\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.destroy();\n\t\tthis.parentHighlight = null;\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.destroy();\n\t\tthis.labelShape = null;\n\t}\n\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.destroy();\n\t\tthis.constraintHandler = null;\n\t}\n\t\n\tthis.destroyBends(this.virtualBends);\n\tthis.virtualBends = null;\n\t\n\tthis.destroyBends(this.customHandles);\n\tthis.customHandles = null;\n\n\tthis.destroyBends(this.bends);\n\tthis.bends = null;\n\t\n\tthis.removeHint();\n};\n\n__mxOutput.mxEdgeHandler = typeof mxEdgeHandler !== 'undefined' ? mxEdgeHandler : undefined;\n"]}