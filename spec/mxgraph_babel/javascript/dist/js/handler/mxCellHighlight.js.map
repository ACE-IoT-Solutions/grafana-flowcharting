{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/handler/mxCellHighlight.js"],"names":["mxCellHighlight","graph","highlightColor","strokeWidth","dashed","mxConstants","DEFAULT_VALID_COLOR","HIGHLIGHT_STROKEWIDTH","opacity","HIGHLIGHT_OPACITY","repaintHandler","mxUtils","bind","state","tmp","view","getState","cell","hide","repaint","getView","addListener","mxEvent","SCALE","TRANSLATE","SCALE_AND_TRANSLATE","getModel","CHANGE","resetHandler","DOWN","UP","prototype","keepOnTop","spacing","setHighlightColor","color","shape","stroke","drawHighlight","createShape","node","parentNode","firstChild","insertBefore","cellRenderer","svgStrokeTolerance","tolerance","points","absolutePoints","apply","isDashed","isShadow","dialect","DIALECT_SVG","DIALECT_VML","init","getOverlayPane","redirectMouseEvents","pointerEvents","svgPointerEvents","getStrokeWidth","scale","model","isEdge","strokewidth","outline","bounds","mxRectangle","x","y","width","height","rotation","Number","style","STYLE_ROTATION","setCursor","getCursor","mxClient","IS_QUIRKS","document","documentMode","redraw","highlight","destroy","isHighlightAt","hit","elementFromPoint","elt","removeListener","__mxOutput","undefined"],"mappings":";;;;;AAAA;;;;AAIA;;;;;;;;;;;;;;AAcA,UAASA,eAAT,CAAyBC,KAAzB,EAAgCC,cAAhC,EAAgDC,WAAhD,EAA6DC,MAA7D,EACA;AACC,MAAIH,SAAS,IAAb,EACA;AACC,QAAKA,KAAL,GAAaA,KAAb;AACA,QAAKC,cAAL,GAAuBA,kBAAkB,IAAnB,GAA2BA,cAA3B,GAA4CG,YAAYC,mBAA9E;AACA,QAAKH,WAAL,GAAoBA,eAAe,IAAhB,GAAwBA,WAAxB,GAAsCE,YAAYE,qBAArE;AACA,QAAKH,MAAL,GAAeA,UAAU,IAAX,GAAmBA,MAAnB,GAA4B,KAA1C;AACA,QAAKI,OAAL,GAAeH,YAAYI,iBAA3B;;AAEA;AACA,QAAKC,cAAL,GAAsBC,QAAQC,IAAR,CAAa,IAAb,EAAmB,YACzC;AACC;AACA,QAAI,KAAKC,KAAL,IAAc,IAAlB,EACA;AACC,SAAIC,MAAM,KAAKb,KAAL,CAAWc,IAAX,CAAgBC,QAAhB,CAAyB,KAAKH,KAAL,CAAWI,IAApC,CAAV;;AAEA,SAAIH,OAAO,IAAX,EACA;AACC,WAAKI,IAAL;AACA,MAHD,MAKA;AACC,WAAKL,KAAL,GAAaC,GAAb;AACA,WAAKK,OAAL;AACA;AACD;AACD,IAjBqB,CAAtB;;AAmBA,QAAKlB,KAAL,CAAWmB,OAAX,GAAqBC,WAArB,CAAiCC,QAAQC,KAAzC,EAAgD,KAAKb,cAArD;AACA,QAAKT,KAAL,CAAWmB,OAAX,GAAqBC,WAArB,CAAiCC,QAAQE,SAAzC,EAAoD,KAAKd,cAAzD;AACA,QAAKT,KAAL,CAAWmB,OAAX,GAAqBC,WAArB,CAAiCC,QAAQG,mBAAzC,EAA8D,KAAKf,cAAnE;AACA,QAAKT,KAAL,CAAWyB,QAAX,GAAsBL,WAAtB,CAAkCC,QAAQK,MAA1C,EAAkD,KAAKjB,cAAvD;;AAEA;AACA,QAAKkB,YAAL,GAAoBjB,QAAQC,IAAR,CAAa,IAAb,EAAmB,YACvC;AACC,SAAKM,IAAL;AACA,IAHmB,CAApB;;AAKA,QAAKjB,KAAL,CAAWmB,OAAX,GAAqBC,WAArB,CAAiCC,QAAQO,IAAzC,EAA+C,KAAKD,YAApD;AACA,QAAK3B,KAAL,CAAWmB,OAAX,GAAqBC,WAArB,CAAiCC,QAAQQ,EAAzC,EAA6C,KAAKF,YAAlD;AACA;AACD,E;;;AAAA;;AAED;;;;;;AAMA5B,mBAAgB+B,SAAhB,CAA0BC,SAA1B,GAAsC,KAAtC;;AAEA;;;;;AAKAhC,mBAAgB+B,SAAhB,CAA0B9B,KAA1B,GAAkC,IAAlC;;AAEA;;;;;AAKAD,mBAAgB+B,SAAhB,CAA0BlB,KAA1B,GAAkC,IAAlC;;AAEA;;;;;;AAMAb,mBAAgB+B,SAAhB,CAA0BE,OAA1B,GAAoC,CAApC;;AAEA;;;;;;AAMAjC,mBAAgB+B,SAAhB,CAA0BH,YAA1B,GAAyC,IAAzC;;AAEA;;;;;;;;;AASA5B,mBAAgB+B,SAAhB,CAA0BG,iBAA1B,GAA8C,UAASC,KAAT,EAC9C;AACC,SAAKjC,cAAL,GAAsBiC,KAAtB;;AAEA,QAAI,KAAKC,KAAL,IAAc,IAAlB,EACA;AACC,UAAKA,KAAL,CAAWC,MAAX,GAAoBF,KAApB;AACA;AACD,IARD;;AAUA;;;;;AAKAnC,mBAAgB+B,SAAhB,CAA0BO,aAA1B,GAA0C,YAC1C;AACC,SAAKF,KAAL,GAAa,KAAKG,WAAL,EAAb;AACA,SAAKpB,OAAL;;AAEA,QAAI,CAAC,KAAKa,SAAN,IAAmB,KAAKI,KAAL,CAAWI,IAAX,CAAgBC,UAAhB,CAA2BC,UAA3B,IAAyC,KAAKN,KAAL,CAAWI,IAA3E,EACA;AACC,UAAKJ,KAAL,CAAWI,IAAX,CAAgBC,UAAhB,CAA2BE,YAA3B,CAAwC,KAAKP,KAAL,CAAWI,IAAnD,EAAyD,KAAKJ,KAAL,CAAWI,IAAX,CAAgBC,UAAhB,CAA2BC,UAApF;AACA;AACD,IATD;;AAWA;;;;;AAKA1C,mBAAgB+B,SAAhB,CAA0BQ,WAA1B,GAAwC,YACxC;AACC,QAAIH,QAAQ,KAAKnC,KAAL,CAAW2C,YAAX,CAAwBL,WAAxB,CAAoC,KAAK1B,KAAzC,CAAZ;;AAEAuB,UAAMS,kBAAN,GAA2B,KAAK5C,KAAL,CAAW6C,SAAtC;AACAV,UAAMW,MAAN,GAAe,KAAKlC,KAAL,CAAWmC,cAA1B;AACAZ,UAAMa,KAAN,CAAY,KAAKpC,KAAjB;AACAuB,UAAMC,MAAN,GAAe,KAAKnC,cAApB;AACAkC,UAAM5B,OAAN,GAAgB,KAAKA,OAArB;AACA4B,UAAMc,QAAN,GAAiB,KAAK9C,MAAtB;AACAgC,UAAMe,QAAN,GAAiB,KAAjB;;AAEAf,UAAMgB,OAAN,GAAiB,KAAKnD,KAAL,CAAWmD,OAAX,IAAsB/C,YAAYgD,WAAnC,GAAkDhD,YAAYiD,WAA9D,GAA4EjD,YAAYgD,WAAxG;AACAjB,UAAMmB,IAAN,CAAW,KAAKtD,KAAL,CAAWmB,OAAX,GAAqBoC,cAArB,EAAX;AACAlC,YAAQmC,mBAAR,CAA4BrB,MAAMI,IAAlC,EAAwC,KAAKvC,KAA7C,EAAoD,KAAKY,KAAzD;;AAEA,QAAI,KAAKZ,KAAL,CAAWmD,OAAX,IAAsB/C,YAAYgD,WAAtC,EACA;AACCjB,WAAMsB,aAAN,GAAsB,KAAtB;AACA,KAHD,MAKA;AACCtB,WAAMuB,gBAAN,GAAyB,QAAzB;AACA;;AAED,WAAOvB,KAAP;AACA,IA1BD;;AA4BA;;;;;AAKApC,mBAAgB+B,SAAhB,CAA0B6B,cAA1B,GAA2C,UAAS/C,KAAT,EAC3C;AACC,WAAO,KAAKV,WAAZ;AACA,IAHD;;AAKA;;;;;AAKAH,mBAAgB+B,SAAhB,CAA0BZ,OAA1B,GAAoC,YACpC;AACC,QAAI,KAAKN,KAAL,IAAc,IAAd,IAAsB,KAAKuB,KAAL,IAAc,IAAxC,EACA;AACC,UAAKA,KAAL,CAAWyB,KAAX,GAAmB,KAAKhD,KAAL,CAAWE,IAAX,CAAgB8C,KAAnC;;AAEA,SAAI,KAAK5D,KAAL,CAAW6D,KAAX,CAAiBC,MAAjB,CAAwB,KAAKlD,KAAL,CAAWI,IAAnC,CAAJ,EACA;AACC,WAAKmB,KAAL,CAAW4B,WAAX,GAAyB,KAAKJ,cAAL,EAAzB;AACA,WAAKxB,KAAL,CAAWW,MAAX,GAAoB,KAAKlC,KAAL,CAAWmC,cAA/B;AACA,WAAKZ,KAAL,CAAW6B,OAAX,GAAqB,KAArB;AACA,MALD,MAOA;AACC,WAAK7B,KAAL,CAAW8B,MAAX,GAAoB,IAAIC,WAAJ,CAAgB,KAAKtD,KAAL,CAAWuD,CAAX,GAAe,KAAKnC,OAApC,EAA6C,KAAKpB,KAAL,CAAWwD,CAAX,GAAe,KAAKpC,OAAjE,EAClB,KAAKpB,KAAL,CAAWyD,KAAX,GAAmB,IAAI,KAAKrC,OADV,EACmB,KAAKpB,KAAL,CAAW0D,MAAX,GAAoB,IAAI,KAAKtC,OADhD,CAApB;AAEA,WAAKG,KAAL,CAAWoC,QAAX,GAAsBC,OAAO,KAAK5D,KAAL,CAAW6D,KAAX,CAAiBrE,YAAYsE,cAA7B,KAAgD,GAAvD,CAAtB;AACA,WAAKvC,KAAL,CAAW4B,WAAX,GAAyB,KAAKJ,cAAL,KAAwB,KAAK/C,KAAL,CAAWE,IAAX,CAAgB8C,KAAjE;AACA,WAAKzB,KAAL,CAAW6B,OAAX,GAAqB,IAArB;AACA;;AAED;AACA,SAAI,KAAKpD,KAAL,CAAWuB,KAAX,IAAoB,IAAxB,EACA;AACC,WAAKA,KAAL,CAAWwC,SAAX,CAAqB,KAAK/D,KAAL,CAAWuB,KAAX,CAAiByC,SAAjB,EAArB;AACA;;AAED;AACA;AACA,SAAIC,SAASC,SAAT,IAAsBC,SAASC,YAAT,IAAyB,CAAnD,EACA;AACC,UAAI,KAAK7C,KAAL,CAAWC,MAAX,IAAqB,aAAzB,EACA;AACC;AACA;AACA;AACA,YAAKD,KAAL,CAAWC,MAAX,GAAoB,OAApB;AACA,YAAKD,KAAL,CAAW5B,OAAX,GAAqB,CAArB;AACA,OAPD,MASA;AACC,YAAK4B,KAAL,CAAW5B,OAAX,GAAqB,KAAKA,OAA1B;AACA;AACD;;AAED,UAAK4B,KAAL,CAAW8C,MAAX;AACA;AACD,IA/CD;;AAiDA;;;;;AAKAlF,mBAAgB+B,SAAhB,CAA0Bb,IAA1B,GAAiC,YACjC;AACC,SAAKiE,SAAL,CAAe,IAAf;AACA,IAHD;;AAKA;;;;;AAKAnF,mBAAgB+B,SAAhB,CAA0BoD,SAA1B,GAAsC,UAAStE,KAAT,EACtC;AACC,QAAI,KAAKA,KAAL,IAAcA,KAAlB,EACA;AACC,SAAI,KAAKuB,KAAL,IAAc,IAAlB,EACA;AACC,WAAKA,KAAL,CAAWgD,OAAX;AACA,WAAKhD,KAAL,GAAa,IAAb;AACA;;AAED,UAAKvB,KAAL,GAAaA,KAAb;;AAEA,SAAI,KAAKA,KAAL,IAAc,IAAlB,EACA;AACC,WAAKyB,aAAL;AACA;AACD;AACD,IAjBD;;AAmBA;;;;;AAKAtC,mBAAgB+B,SAAhB,CAA0BsD,aAA1B,GAA0C,UAASjB,CAAT,EAAYC,CAAZ,EAC1C;AACC,QAAIiB,MAAM,KAAV;;AAEA;AACA,QAAI,KAAKlD,KAAL,IAAc,IAAd,IAAsB4C,SAASO,gBAAT,IAA6B,IAAnD,IAA2D,CAACT,SAASC,SAAzE,EACA;AACC,SAAIS,MAAMR,SAASO,gBAAT,CAA0BnB,CAA1B,EAA6BC,CAA7B,CAAV;;AAEA,YAAOmB,OAAO,IAAd,EACA;AACC,UAAIA,OAAO,KAAKpD,KAAL,CAAWI,IAAtB,EACA;AACC8C,aAAM,IAAN;AACA;AACA;;AAEDE,YAAMA,IAAI/C,UAAV;AACA;AACD;;AAED,WAAO6C,GAAP;AACA,IAtBD;;AAwBA;;;;;AAKAtF,mBAAgB+B,SAAhB,CAA0BqD,OAA1B,GAAoC,YACpC;AACC,SAAKnF,KAAL,CAAWmB,OAAX,GAAqBqE,cAArB,CAAoC,KAAK7D,YAAzC;AACA,SAAK3B,KAAL,CAAWmB,OAAX,GAAqBqE,cAArB,CAAoC,KAAK/E,cAAzC;AACA,SAAKT,KAAL,CAAWyB,QAAX,GAAsB+D,cAAtB,CAAqC,KAAK/E,cAA1C;;AAEA,QAAI,KAAK0B,KAAL,IAAc,IAAlB,EACA;AACC,UAAKA,KAAL,CAAWgD,OAAX;AACA,UAAKhD,KAAL,GAAa,IAAb;AACA;AACD,IAXD;;AAaAsD,cAAW1F,eAAX,GAA6B,OAAOA,eAAP,KAA2B,WAA3B,GAAyCA,eAAzC,GAA2D2F,SAAxF","file":"mxCellHighlight.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellHighlight\n * \n * A helper class to highlight cells. Here is an example for a given cell.\n * \n * (code)\n * var highlight = new mxCellHighlight(graph, '#ff0000', 2);\n * highlight.highlight(graph.view.getState(cell)));\n * (end)\n * \n * Constructor: mxCellHighlight\n * \n * Constructs a cell highlight.\n */\nfunction mxCellHighlight(graph, highlightColor, strokeWidth, dashed)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.highlightColor = (highlightColor != null) ? highlightColor : mxConstants.DEFAULT_VALID_COLOR;\n\t\tthis.strokeWidth = (strokeWidth != null) ? strokeWidth : mxConstants.HIGHLIGHT_STROKEWIDTH;\n\t\tthis.dashed = (dashed != null) ? dashed : false;\n\t\tthis.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\n\t\t// Updates the marker if the graph changes\n\t\tthis.repaintHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Updates reference to state\n\t\t\tif (this.state != null)\n\t\t\t{\n\t\t\t\tvar tmp = this.graph.view.getState(this.state.cell);\n\t\t\t\t\n\t\t\t\tif (tmp == null)\n\t\t\t\t{\n\t\t\t\t\tthis.hide();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.state = tmp;\n\t\t\t\t\tthis.repaint();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.SCALE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.repaintHandler);\n\t\t\n\t\t// Hides the marker if the current root changes\n\t\tthis.resetHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.hide();\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.DOWN, this.resetHandler);\n\t\tthis.graph.getView().addListener(mxEvent.UP, this.resetHandler);\n\t}\n};\n\n/**\n * Variable: keepOnTop\n * \n * Specifies if the highlights should appear on top of everything\n * else in the overlay pane. Default is false.\n */\nmxCellHighlight.prototype.keepOnTop = false;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellHighlight.prototype.graph = true;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState>.\n */\nmxCellHighlight.prototype.state = null;\n\n/**\n * Variable: spacing\n * \n * Specifies the spacing between the highlight for vertices and the vertex.\n * Default is 2.\n */\nmxCellHighlight.prototype.spacing = 2;\n\n/**\n * Variable: resetHandler\n * \n * Holds the handler that automatically invokes reset if the highlight\n * should be hidden.\n */\nmxCellHighlight.prototype.resetHandler = null;\n\n/**\n * Function: setHighlightColor\n * \n * Sets the color of the rectangle used to highlight drop targets.\n * \n * Parameters:\n * \n * color - String that represents the new highlight color.\n */\nmxCellHighlight.prototype.setHighlightColor = function(color)\n{\n\tthis.highlightColor = color;\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n/**\n * Function: drawHighlight\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.drawHighlight = function()\n{\n\tthis.shape = this.createShape();\n\tthis.repaint();\n\n\tif (!this.keepOnTop && this.shape.node.parentNode.firstChild != this.shape.node)\n\t{\n\t\tthis.shape.node.parentNode.insertBefore(this.shape.node, this.shape.node.parentNode.firstChild);\n\t}\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.createShape = function()\n{\n\tvar shape = this.graph.cellRenderer.createShape(this.state);\n\t\n\tshape.svgStrokeTolerance = this.graph.tolerance;\n\tshape.points = this.state.absolutePoints;\n\tshape.apply(this.state);\n\tshape.stroke = this.highlightColor;\n\tshape.opacity = this.opacity;\n\tshape.isDashed = this.dashed;\n\tshape.isShadow = false;\n\t\n\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tshape.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(shape.node, this.graph, this.state);\n\t\n\tif (this.graph.dialect != mxConstants.DIALECT_SVG)\n\t{\n\t\tshape.pointerEvents = false;\n\t}\n\telse\n\t{\n\t\tshape.svgPointerEvents = 'stroke';\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: repaint\n * \n * Updates the highlight after a change of the model or view.\n */\nmxCellHighlight.prototype.getStrokeWidth = function(state)\n{\n\treturn this.strokeWidth;\n};\n\n/**\n * Function: repaint\n * \n * Updates the highlight after a change of the model or view.\n */\nmxCellHighlight.prototype.repaint = function()\n{\n\tif (this.state != null && this.shape != null)\n\t{\n\t\tthis.shape.scale = this.state.view.scale;\n\t\t\n\t\tif (this.graph.model.isEdge(this.state.cell))\n\t\t{\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth();\n\t\t\tthis.shape.points = this.state.absolutePoints;\n\t\t\tthis.shape.outline = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.shape.bounds = new mxRectangle(this.state.x - this.spacing, this.state.y - this.spacing,\n\t\t\t\t\tthis.state.width + 2 * this.spacing, this.state.height + 2 * this.spacing);\n\t\t\tthis.shape.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth() / this.state.view.scale;\n\t\t\tthis.shape.outline = true;\n\t\t}\n\n\t\t// Uses cursor from shape in highlight\n\t\tif (this.state.shape != null)\n\t\t{\n\t\t\tthis.shape.setCursor(this.state.shape.getCursor());\n\t\t}\n\t\t\n\t\t// Workaround for event transparency in VML with transparent color\n\t\t// is to use a non-transparent color with near zero opacity\n\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t{\n\t\t\tif (this.shape.stroke == 'transparent')\n\t\t\t{\n\t\t\t\t// KNOWN: Quirks mode does not seem to catch events if\n\t\t\t\t// we do not force an update of the DOM via a change such\n\t\t\t\t// as mxLog.debug. Since IE6 is EOL we do not add a fix.\n\t\t\t\tthis.shape.stroke = 'white';\n\t\t\t\tthis.shape.opacity = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.shape.opacity = this.opacity;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.shape.redraw();\n\t}\n};\n\n/**\n * Function: hide\n * \n * Resets the state of the cell marker.\n */\nmxCellHighlight.prototype.hide = function()\n{\n\tthis.highlight(null);\n};\n\n/**\n * Function: mark\n * \n * Marks the <markedState> and fires a <mark> event.\n */\nmxCellHighlight.prototype.highlight = function(state)\n{\n\tif (this.state != state)\n\t{\n\t\tif (this.shape != null)\n\t\t{\n\t\t\tthis.shape.destroy();\n\t\t\tthis.shape = null;\n\t\t}\n\n\t\tthis.state = state;\n\t\t\n\t\tif (this.state != null)\n\t\t{\n\t\t\tthis.drawHighlight();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHighlightAt\n * \n * Returns true if this highlight is at the given position.\n */\nmxCellHighlight.prototype.isHighlightAt = function(x, y)\n{\n\tvar hit = false;\n\t\n\t// Quirks mode is currently not supported as it used a different coordinate system\n\tif (this.shape != null && document.elementFromPoint != null && !mxClient.IS_QUIRKS)\n\t{\n\t\tvar elt = document.elementFromPoint(x, y);\n\n\t\twhile (elt != null)\n\t\t{\n\t\t\tif (elt == this.shape.node)\n\t\t\t{\n\t\t\t\thit = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\t\n\treturn hit;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxCellHighlight.prototype.destroy = function()\n{\n\tthis.graph.getView().removeListener(this.resetHandler);\n\tthis.graph.getView().removeListener(this.repaintHandler);\n\tthis.graph.getModel().removeListener(this.repaintHandler);\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n\n__mxOutput.mxCellHighlight = typeof mxCellHighlight !== 'undefined' ? mxCellHighlight : undefined;\n"]}