{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/handler/mxHandle.js"],"names":["mxHandle","state","cursor","image","graph","view","init","prototype","ignoreGrid","getPosition","bounds","setPosition","pt","me","execute","copyStyle","key","setCellStyles","style","cell","processEvent","scale","tr","translate","mxPoint","getGraphX","x","getGraphY","y","shape","width","height","alpha1","mxUtils","toRadians","getRotation","alpha2","getTotalRotation","flipPoint","rotatePoint","snapPoint","isGridEnabledEvent","getEvent","getPaintBounds","positionChanged","redraw","text","apply","cellRenderer","getShapeRotation","html","isHtmlRequired","mxImageShape","mxRectangle","src","preserveImageAspect","createShape","initShape","mxConstants","HANDLE_SIZE","mxRectangleShape","HANDLE_FILLCOLOR","HANDLE_STROKECOLOR","isHtmlAllowed","dialect","DIALECT_STRICTHTML","container","DIALECT_SVG","DIALECT_MIXEDHTML","getView","getOverlayPane","mxEvent","redirectMouseEvents","node","alpha","Math","floor","parentNode","getCellBounds","cx","getCenterX","getCenterY","cos","sin","getRotatedPoint","flipH","flipV","ignore","snap","setVisible","visible","display","reset","getCellStyle","destroy","__mxOutput","undefined"],"mappings":"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","file":"mxHandle.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHandle\n * \n * Implements a single custom handle for vertices.\n * \n * Constructor: mxHandle\n * \n * Constructs a new handle for the given state.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxHandle(state, cursor, image)\n{\n\tthis.graph = state.view.graph;\n\tthis.state = state;\n\tthis.cursor = (cursor != null) ? cursor : this.cursor;\n\tthis.image = (image != null) ? image : this.image;\n\tthis.init();\n};\n\n/**\n * Variable: cursor\n * \n * Specifies the cursor to be used for this handle. Default is 'default'.\n */\nmxHandle.prototype.cursor = 'default';\n\n/**\n * Variable: image\n * \n * Specifies the <mxImage> to be used to render the handle. Default is null.\n */\nmxHandle.prototype.image = null;\n\n/**\n * Variable: image\n * \n * Specifies the <mxImage> to be used to render the handle. Default is null.\n */\nmxHandle.prototype.ignoreGrid = false;\n\n/**\n * Function: getPosition\n * \n * Hook for subclassers to return the current position of the handle.\n */\nmxHandle.prototype.getPosition = function(bounds) { };\n\n/**\n * Function: setPosition\n * \n * Hooks for subclassers to update the style in the <state>.\n */\nmxHandle.prototype.setPosition = function(bounds, pt, me) { };\n\n/**\n * Function: execute\n * \n * Hook for subclassers to execute the handle.\n */\nmxHandle.prototype.execute = function() { };\n\n/**\n * Function: copyStyle\n * \n * Sets the cell style with the given name to the corresponding value in <state>.\n */\nmxHandle.prototype.copyStyle = function(key)\n{\n\tthis.graph.setCellStyles(key, this.state.style[key], [this.state.cell]);\n};\n\n/**\n * Function: processEvent\n * \n * Processes the given <mxMouseEvent> and invokes <setPosition>.\n */\nmxHandle.prototype.processEvent = function(me)\n{\n\tvar scale = this.graph.view.scale;\n\tvar tr = this.graph.view.translate;\n\tvar pt = new mxPoint(me.getGraphX() / scale - tr.x, me.getGraphY() / scale - tr.y);\n\t\n\t// Center shape on mouse cursor\n\tif (this.shape != null && this.shape.bounds != null)\n\t{\n\t\tpt.x -= this.shape.bounds.width / scale / 4;\n\t\tpt.y -= this.shape.bounds.height / scale / 4;\n\t}\n\n\t// Snaps to grid for the rotated position then applies the rotation for the direction after that\n\tvar alpha1 = -mxUtils.toRadians(this.getRotation());\n\tvar alpha2 = -mxUtils.toRadians(this.getTotalRotation()) - alpha1;\n\tpt = this.flipPoint(this.rotatePoint(this.snapPoint(this.rotatePoint(pt, alpha1),\n\t\t\tthis.ignoreGrid || !this.graph.isGridEnabledEvent(me.getEvent())), alpha2));\n\tthis.setPosition(this.state.getPaintBounds(), pt, me);\n\tthis.positionChanged();\n\tthis.redraw();\n};\n\n/**\n * Function: positionChanged\n * \n * Called after <setPosition> has been called in <processEvent>. This repaints\n * the state using <mxCellRenderer>.\n */\nmxHandle.prototype.positionChanged = function()\n{\n\tif (this.state.text != null)\n\t{\n\t\tthis.state.text.apply(this.state);\n\t}\n\t\n\tif (this.state.shape != null)\n\t{\n\t\tthis.state.shape.apply(this.state);\n\t}\n\t\n\tthis.graph.cellRenderer.redraw(this.state, true);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation defined in the style of the cell.\n */\nmxHandle.prototype.getRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: getTotalRotation\n * \n * Returns the rotation from the style and the rotation from the direction of\n * the cell.\n */\nmxHandle.prototype.getTotalRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getShapeRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: init\n * \n * Creates and initializes the shapes required for this handle.\n */\nmxHandle.prototype.init = function()\n{\n\tvar html = this.isHtmlRequired();\n\t\n\tif (this.image != null)\n\t{\n\t\tthis.shape = new mxImageShape(new mxRectangle(0, 0, this.image.width, this.image.height), this.image.src);\n\t\tthis.shape.preserveImageAspect = false;\n\t}\n\telse\n\t{\n\t\tthis.shape = this.createShape(html);\n\t}\n\t\n\tthis.initShape(html);\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the shape for this handle.\n */\nmxHandle.prototype.createShape = function(html)\n{\n\tvar bounds = new mxRectangle(0, 0, mxConstants.HANDLE_SIZE, mxConstants.HANDLE_SIZE);\n\t\n\treturn new mxRectangleShape(bounds, mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n};\n\n/**\n * Function: initShape\n * \n * Initializes <shape> and sets its cursor.\n */\nmxHandle.prototype.initShape = function(html)\n{\n\tif (html && this.shape.isHtmlAllowed())\n\t{\n\t\tthis.shape.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tthis.shape.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\n\t\tif (this.cursor != null)\n\t\t{\n\t\t\tthis.shape.init(this.graph.getView().getOverlayPane());\n\t\t}\n\t}\n\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\tthis.shape.node.style.cursor = this.cursor;\n};\n\n/**\n * Function: redraw\n * \n * Renders the shape for this handle.\n */\nmxHandle.prototype.redraw = function()\n{\n\tif (this.shape != null && this.state.shape != null)\n\t{\n\t\tvar pt = this.getPosition(this.state.getPaintBounds());\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tvar alpha = mxUtils.toRadians(this.getTotalRotation());\n\t\t\tpt = this.rotatePoint(this.flipPoint(pt), alpha);\n\t\n\t\t\tvar scale = this.graph.view.scale;\n\t\t\tvar tr = this.graph.view.translate;\n\t\t\tthis.shape.bounds.x = Math.floor((pt.x + tr.x) * scale - this.shape.bounds.width / 2);\n\t\t\tthis.shape.bounds.y = Math.floor((pt.y + tr.y) * scale - this.shape.bounds.height / 2);\n\t\t\t\n\t\t\t// Needed to force update of text bounds\n\t\t\tthis.shape.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHtmlRequired\n * \n * Returns true if this handle should be rendered in HTML. This returns true if\n * the text node is in the graph container.\n */\nmxHandle.prototype.isHtmlRequired = function()\n{\n\treturn this.state.text != null && this.state.text.node.parentNode == this.graph.container;\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the point by the given angle.\n */\nmxHandle.prototype.rotatePoint = function(pt, alpha)\n{\n\tvar bounds = this.state.getCellBounds();\n\tvar cx = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\tvar cos = Math.cos(alpha);\n\tvar sin = Math.sin(alpha); \n\n\treturn mxUtils.getRotatedPoint(pt, cos, sin, cx);\n};\n\n/**\n * Function: flipPoint\n * \n * Flips the given point vertically and/or horizontally.\n */\nmxHandle.prototype.flipPoint = function(pt)\n{\n\tif (this.state.shape != null)\n\t{\n\t\tvar bounds = this.state.getCellBounds();\n\t\t\n\t\tif (this.state.shape.flipH)\n\t\t{\n\t\t\tpt.x = 2 * bounds.x + bounds.width - pt.x;\n\t\t}\n\t\t\n\t\tif (this.state.shape.flipV)\n\t\t{\n\t\t\tpt.y = 2 * bounds.y + bounds.height - pt.y;\n\t\t}\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: snapPoint\n * \n * Snaps the given point to the grid if ignore is false. This modifies\n * the given point in-place and also returns it.\n */\nmxHandle.prototype.snapPoint = function(pt, ignore)\n{\n\tif (!ignore)\n\t{\n\t\tpt.x = this.graph.snap(pt.x);\n\t\tpt.y = this.graph.snap(pt.y);\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides this handle.\n */\nmxHandle.prototype.setVisible = function(visible)\n{\n\tif (this.shape != null && this.shape.node != null)\n\t{\n\t\tthis.shape.node.style.display = (visible) ? '' : 'none';\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handle by setting its visibility to true.\n */\nmxHandle.prototype.reset = function()\n{\n\tthis.setVisible(true);\n\tthis.state.style = this.graph.getCellStyle(this.state.cell);\n\tthis.positionChanged();\n};\n\n/**\n * Function: destroy\n * \n * Destroys this handle.\n */\nmxHandle.prototype.destroy = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n\n__mxOutput.mxHandle = typeof mxHandle !== 'undefined' ? mxHandle : undefined;\n"]}