{"version":3,"sources":["../../../../../../src/mxgraph/javascript/dist/js/handler/mxConstraintHandler.js"],"names":["mxConstraintHandler","graph","resetHandler","mxUtils","bind","sender","evt","currentFocus","view","getState","cell","reset","redraw","model","addListener","mxEvent","CHANGE","SCALE_AND_TRANSLATE","TRANSLATE","SCALE","ROOT","prototype","pointImage","mxImage","mxClient","imageBasePath","enabled","highlightColor","mxConstants","DEFAULT_VALID_COLOR","isEnabled","setEnabled","focusIcons","i","length","destroy","focusHighlight","currentConstraint","currentFocusArea","currentPoint","focusPoints","getTolerance","me","getImageForConstraint","state","constraint","point","isEventIgnored","source","isStateIgnored","destroyIcons","destroyFocusHighlight","isKeepFocusEvent","isShiftDown","getEvent","getCellForEvent","getCell","getGraphX","x","getGraphY","y","getCellAt","isCellConnectable","parent","getModel","getParent","isVertex","isCellLocked","update","existingEdge","mouseleaveHandler","container","tol","grid","mxRectangle","mouse","intersects","setFocus","minDistSq","constraints","cx","getCenterX","cy","getCenterY","dx","bounds","dy","tmp","clone","grow","HIGHLIGHT_SIZE","width","height","hl","createHighlightShape","dialect","DIALECT_SVG","DIALECT_VML","pointerEvents","init","getView","getOverlayPane","redirectMouseEvents","node","cp","getConnectionPoint","img","Math","round","add","getAllConnectionConstraints","src","icon","mxImageShape","DIALECT_MIXEDHTML","preserveImageAspect","getDecoratorPane","IS_QUIRKS","document","documentMode","consume","previousSibling","parentNode","insertBefore","firstChild","push","mxRectangleShape","HIGHLIGHT_STROKEWIDTH","opacity","HIGHLIGHT_OPACITY","removeListener","__mxOutput","undefined"],"mappings":"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","file":"mxConstraintHandler.js","sourcesContent":["/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConstraintHandler\n *\n * Handles constraints on connection targets. This class is in charge of\n * showing fixed points when the mouse is over a vertex and handles constraints\n * to establish new connections.\n *\n * Constructor: mxConstraintHandler\n *\n * Constructs an new constraint handler.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * factoryMethod - Optional function to create the edge. The function takes\n * the source and target <mxCell> as the first and second argument and\n * returns the <mxCell> that represents the new edge.\n */\nfunction mxConstraintHandler(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Adds a graph model listener to update the current focus on changes\n\tthis.resetHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.currentFocus != null && this.graph.view.getState(this.currentFocus.cell) == null)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.redraw();\n\t\t}\n\t});\n\t\n\tthis.graph.model.addListener(mxEvent.CHANGE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE, this.resetHandler);\n\tthis.graph.addListener(mxEvent.ROOT, this.resetHandler);\n};\n\n/**\n * Variable: pointImage\n * \n * <mxImage> to be used as the image for fixed connection points.\n */\nmxConstraintHandler.prototype.pointImage = new mxImage(mxClient.imageBasePath + '/point.gif', 5, 5);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxConstraintHandler.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxConstraintHandler.prototype.enabled = true;\n\n/**\n * Variable: highlightColor\n * \n * Specifies the color for the highlight. Default is <mxConstants.DEFAULT_VALID_COLOR>.\n */\nmxConstraintHandler.prototype.highlightColor = mxConstants.DEFAULT_VALID_COLOR;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxConstraintHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxConstraintHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxConstraintHandler.prototype.reset = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t}\n\t\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n\t\n\tthis.currentConstraint = null;\n\tthis.currentFocusArea = null;\n\tthis.currentPoint = null;\n\tthis.currentFocus = null;\n\tthis.focusPoints = null;\n};\n\n/**\n * Function: getTolerance\n * \n * Returns the tolerance to be used for intersecting connection points. This\n * implementation returns <mxGraph.tolerance>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> whose tolerance should be returned.\n */\nmxConstraintHandler.prototype.getTolerance = function(me)\n{\n\treturn this.graph.getTolerance();\n};\n\n/**\n * Function: getImageForConstraint\n * \n * Returns the tolerance to be used for intersecting connection points.\n */\nmxConstraintHandler.prototype.getImageForConstraint = function(state, constraint, point)\n{\n\treturn this.pointImage;\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the given <mxMouseEvent> should be ignored in <update>. This\n * implementation always returns false.\n */\nmxConstraintHandler.prototype.isEventIgnored = function(me, source)\n{\n\treturn false;\n};\n\n/**\n * Function: isStateIgnored\n * \n * Returns true if the given state should be ignored. This always returns false.\n */\nmxConstraintHandler.prototype.isStateIgnored = function(state, source)\n{\n\treturn false;\n};\n\n/**\n * Function: destroyIcons\n * \n * Destroys the <focusIcons> if they exist.\n */\nmxConstraintHandler.prototype.destroyIcons = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t\tthis.focusPoints = null;\n\t}\n};\n\n/**\n * Function: destroyFocusHighlight\n * \n * Destroys the <focusHighlight> if one exists.\n */\nmxConstraintHandler.prototype.destroyFocusHighlight = function()\n{\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n};\n\n/**\n * Function: isKeepFocusEvent\n * \n * Returns true if the current focused state should not be changed for the given event.\n * This returns true if shift and alt are pressed.\n */\nmxConstraintHandler.prototype.isKeepFocusEvent = function(me)\n{\n\treturn mxEvent.isShiftDown(me.getEvent());\n};\n\n/**\n * Function: getCellForEvent\n * \n * Returns the cell for the given event.\n */\nmxConstraintHandler.prototype.getCellForEvent = function(me, point)\n{\n\tvar cell = me.getCell();\n\t\n\t// Gets cell under actual point if different from event location\n\tif (cell == null && point != null && (me.getGraphX() != point.x || me.getGraphY() != point.y))\n\t{\n\t\tcell = this.graph.getCellAt(point.x, point.y);\n\t}\n\t\n\t// Uses connectable parent vertex if one exists\n\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\n\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t{\n\t\t\tcell = parent;\n\t\t}\n\t}\n\t\n\treturn (this.graph.isCellLocked(cell)) ? null : cell;\n};\n\n/**\n * Function: update\n * \n * Updates the state of this handler based on the given <mxMouseEvent>.\n * Source is a boolean indicating if the cell is a source or target.\n */\nmxConstraintHandler.prototype.update = function(me, source, existingEdge, point)\n{\n\tif (this.isEnabled() && !this.isEventIgnored(me))\n\t{\n\t\t// Lazy installation of mouseleave handler\n\t\tif (this.mouseleaveHandler == null && this.graph.container != null)\n\t\t{\n\t\t\tthis.mouseleaveHandler = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.reset();\n\t\t\t});\n\n\t\t\tmxEvent.addListener(this.graph.container, 'mouseleave', this.resetHandler);\t\n\t\t}\n\t\t\n\t\tvar tol = this.getTolerance(me);\n\t\tvar x = (point != null) ? point.x : me.getGraphX();\n\t\tvar y = (point != null) ? point.y : me.getGraphY();\n\t\tvar grid = new mxRectangle(x - tol, y - tol, 2 * tol, 2 * tol);\n\t\tvar mouse = new mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol);\n\t\tvar state = this.graph.view.getState(this.getCellForEvent(me, point));\n\n\t\t// Keeps focus icons visible while over vertex bounds and no other cell under mouse or shift is pressed\n\t\tif (!this.isKeepFocusEvent(me) && (this.currentFocusArea == null || this.currentFocus == null ||\n\t\t\t(state != null) || !this.graph.getModel().isVertex(this.currentFocus.cell) ||\n\t\t\t!mxUtils.intersects(this.currentFocusArea, mouse)) && (state != this.currentFocus))\n\t\t{\n\t\t\tthis.currentFocusArea = null;\n\t\t\tthis.currentFocus = null;\n\t\t\tthis.setFocus(me, state, source);\n\t\t}\n\n\t\tthis.currentConstraint = null;\n\t\tthis.currentPoint = null;\n\t\tvar minDistSq = null;\n\t\t\n\t\tif (this.focusIcons != null && this.constraints != null &&\n\t\t\t(state == null || this.currentFocus == state))\n\t\t{\n\t\t\tvar cx = mouse.getCenterX();\n\t\t\tvar cy = mouse.getCenterY();\n\t\t\t\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tvar dx = cx - this.focusIcons[i].bounds.getCenterX();\n\t\t\t\tvar dy = cy - this.focusIcons[i].bounds.getCenterY();\n\t\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\t\n\t\t\t\tif ((this.intersects(this.focusIcons[i], mouse, source, existingEdge) || (point != null &&\n\t\t\t\t\tthis.intersects(this.focusIcons[i], grid, source, existingEdge))) &&\n\t\t\t\t\t(minDistSq == null || tmp < minDistSq))\n\t\t\t\t{\n\t\t\t\t\tthis.currentConstraint = this.constraints[i];\n\t\t\t\t\tthis.currentPoint = this.focusPoints[i];\n\t\t\t\t\tminDistSq = tmp;\n\t\t\t\t\t\n\t\t\t\t\tvar tmp = this.focusIcons[i].bounds.clone();\n\t\t\t\t\ttmp.grow(mxConstants.HIGHLIGHT_SIZE + 1);\n\t\t\t\t\ttmp.width -= 1;\n\t\t\t\t\ttmp.height -= 1;\n\t\t\t\t\t\n\t\t\t\t\tif (this.focusHighlight == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar hl = this.createHighlightShape();\n\t\t\t\t\t\thl.dialect = (this.graph.dialect == mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\t\t\tmxConstants.DIALECT_SVG : mxConstants.DIALECT_VML;\n\t\t\t\t\t\thl.pointerEvents = false;\n\n\t\t\t\t\t\thl.init(this.graph.getView().getOverlayPane());\n\t\t\t\t\t\tthis.focusHighlight = hl;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\tmxEvent.redirectMouseEvents(hl.node, this.graph, getState);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.focusHighlight.bounds = tmp;\n\t\t\t\t\tthis.focusHighlight.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.currentConstraint == null)\n\t\t{\n\t\t\tthis.destroyFocusHighlight();\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.currentConstraint = null;\n\t\tthis.currentFocus = null;\n\t\tthis.currentPoint = null;\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.redraw = function()\n{\n\tif (this.currentFocus != null && this.constraints != null && this.focusIcons != null)\n\t{\n\t\tvar state = this.graph.view.getState(this.currentFocus.cell);\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tthis.focusIcons[i].bounds = bounds;\n\t\t\tthis.focusIcons[i].redraw();\n\t\t\tthis.currentFocusArea.add(this.focusIcons[i].bounds);\n\t\t\tthis.focusPoints[i] = cp;\n\t\t}\n\t}\t\n};\n\n/**\n * Function: setFocus\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.setFocus = function(me, state, source)\n{\n\tthis.constraints = (state != null && !this.isStateIgnored(state, source) &&\n\t\tthis.graph.isCellConnectable(state.cell)) ? ((this.isEnabled()) ?\n\t\t(this.graph.getAllConnectionConstraints(state, source) || []) : []) : null;\n\n\t// Only uses cells which have constraints\n\tif (this.constraints != null)\n\t{\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tif (this.focusIcons != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tthis.focusIcons[i].destroy();\n\t\t\t}\n\t\t\t\n\t\t\tthis.focusIcons = null;\n\t\t\tthis.focusPoints = null;\n\t\t}\n\t\t\n\t\tthis.focusPoints = [];\n\t\tthis.focusIcons = [];\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar src = img.src;\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tvar icon = new mxImageShape(bounds, src);\n\t\t\ticon.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\ticon.preserveImageAspect = false;\n\t\t\ticon.init(this.graph.getView().getDecoratorPane());\n\t\t\t\n\t\t\t// Fixes lost event tracking for images in quirks / IE8 standards\n\t\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(icon.node, 'dragstart', function(evt)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// Move the icon behind all other overlays\n\t\t\tif (icon.node.previousSibling != null)\n\t\t\t{\n\t\t\t\ticon.node.parentNode.insertBefore(icon.node, icon.node.parentNode.firstChild);\n\t\t\t}\n\n\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t});\n\t\t\t\n\t\t\ticon.redraw();\n\n\t\t\tmxEvent.redirectMouseEvents(icon.node, this.graph, getState);\n\t\t\tthis.currentFocusArea.add(icon.bounds);\n\t\t\tthis.focusIcons.push(icon);\n\t\t\tthis.focusPoints.push(cp);\n\t\t}\n\t\t\n\t\tthis.currentFocusArea.grow(this.getTolerance(me));\n\t}\n\telse\n\t{\n\t\tthis.destroyIcons();\n\t\tthis.destroyFocusHighlight();\n\t}\n};\n\n/**\n * Function: createHighlightShape\n * \n * Create the shape used to paint the highlight.\n * \n * Returns true if the given icon intersects the given point.\n */\nmxConstraintHandler.prototype.createHighlightShape = function()\n{\n\tvar hl = new mxRectangleShape(null, this.highlightColor, this.highlightColor, mxConstants.HIGHLIGHT_STROKEWIDTH);\n\thl.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\t\n\treturn hl;\n};\n\n/**\n * Function: intersects\n * \n * Returns true if the given icon intersects the given rectangle.\n */\nmxConstraintHandler.prototype.intersects = function(icon, mouse, source, existingEdge)\n{\n\treturn mxUtils.intersects(icon.bounds, mouse);\n};\n\n/**\n * Function: destroy\n * \n * Destroy this handler.\n */\nmxConstraintHandler.prototype.destroy = function()\n{\n\tthis.reset();\n\t\n\tif (this.resetHandler != null)\n\t{\n\t\tthis.graph.model.removeListener(this.resetHandler);\n\t\tthis.graph.view.removeListener(this.resetHandler);\n\t\tthis.graph.removeListener(this.resetHandler);\n\t\tthis.resetHandler = null;\n\t}\n\t\n\tif (this.mouseleaveHandler != null && this.graph.container != null)\n\t{\n\t\tmxEvent.removeListener(this.graph.container, 'mouseleave', this.mouseleaveHandler);\n\t\tthis.mouseleaveHandler = null;\n\t}\n};\n\n__mxOutput.mxConstraintHandler = typeof mxConstraintHandler !== 'undefined' ? mxConstraintHandler : undefined;\n"]}