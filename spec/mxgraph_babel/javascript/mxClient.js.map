{"version":3,"sources":["../../../src/mxgraph/javascript/mxClient.js"],"names":["mxDictionary","clear","mxPoint","x","y","mxRectangle","width","height","call","mxEventObject","name","properties","i","arguments","length","mxMouseEvent","evt","state","sourceState","mxEventSource","eventSource","setEventSource","mxXmlRequest","url","params","method","async","username","password","mxWindow","title","content","minimizable","movable","replaceNode","style","init","installMaximizeHandler","installMinimizeHandler","installCloseHandler","setMinimizable","setTitle","installMoveHandler","parentNode","replaceChild","div","document","body","appendChild","mxForm","className","table","createElement","mxImage","src","mxDivResizer","container","nodeName","toLowerCase","window","mxUtils","getCurrentStyle","resizeWidth","resizeHeight","mxEvent","addListener","bind","handlingResize","resize","mxDragSource","element","dropHandler","addGestureListeners","mouseDown","consume","eventConsumer","sender","evtName","getProperty","me","MOUSE_DOWN","mxToolbar","mxUndoableEdit","source","significant","changes","mxUndoManager","size","mxPanningManager","graph","thread","active","tdx","tdy","t0x","t0y","dx","dy","scrollbars","scrollLeft","scrollTop","mouseListener","mouseMove","mouseUp","stop","addMouseListener","mouseUpListener","createThread","hasScrollbars","setInterval","left","Math","ceil","top","panGraph","panDx","panDy","fireEvent","PAN","getDx","getDy","delay","isActive","round","start","view","translate","panTo","w","h","c","clientWidth","abs","border","handleMouseOut","max","min","clientHeight","damper","clearInterval","px","py","setTranslate","scale","destroy","removeMouseListener","removeListener","mxPopupMenu","factoryMethod","mxAutoSaveManager","changeHandler","isEnabled","graphModelChanged","setGraph","mxAnimation","mxMorphing","steps","ease","mxImageBundle","alt","images","mxImageExport","mxAbstractCanvas2D","converter","createUrlConverter","reset","mxXmlCanvas2D","root","writeDefaults","mxSvgCanvas2D","styleEnabled","gradients","defs","svg","ownerDocument","node","tmp","getElementsByTagName","firstChild","insertBefore","createStyle","mxGuide","states","setStates","mxStencil","desc","parseDescription","parseConstraints","mxShape","stencil","initStyles","mxActor","bounds","fill","stroke","strokewidth","mxCloud","mxRectangleShape","mxEllipse","mxDoubleEllipse","mxRhombus","mxPolyline","points","mxArrow","arrowWidth","spacing","endSize","mxConstants","ARROW_WIDTH","ARROW_SPACING","ARROW_SIZE","mxArrowConnector","arrowSpacing","startSize","mxText","value","align","valign","color","family","fontStyle","spacingTop","spacingRight","spacingBottom","spacingLeft","horizontal","background","wrap","clipped","overflow","labelPadding","textDirection","ALIGN_CENTER","ALIGN_MIDDLE","DEFAULT_FONTFAMILY","DEFAULT_FONTSIZE","DEFAULT_FONTSTYLE","parseInt","rotation","updateMargin","mxTriangle","mxHexagon","mxLine","mxImageShape","image","shadow","mxLabel","mxCylinder","mxConnector","mxSwimlane","mxGraphLayout","WeightedCellSorter","cell","weightedValue","mxStackLayout","x0","y0","mxPartitionLayout","mxCompactTreeLayout","invert","mxRadialTreeLayout","mxFastOrganicLayout","mxCircleLayout","radius","mxParallelEdgeLayout","mxCompositeLayout","layouts","master","mxEdgeLabelLayout","mxGraphAbstractHierarchyCell","temp","mxGraphHierarchyNode","apply","id","mxObjectIdentity","get","connectsAsTarget","connectsAsSource","mxGraphHierarchyEdge","edges","ids","push","mxGraphHierarchyModel","layout","vertices","roots","parent","tightenToSource","getGraph","vertexMapper","edgeMapper","maxRank","internalVertices","getChildVertices","SOURCESCANSTARTRANK","createInternalCells","j","internalEdge","realEdges","realEdge","targetCell","getVisibleTerminal","internalTargetCell","target","indexOf","mxSwimlaneModel","mxHierarchicalLayoutStage","mxMedianHybridCrossingReduction","MedianCellSorter","mxMinimumCycleRemover","mxCoordinateAssignment","intraCellSpacing","interRankCellSpacing","orientation","initialX","parallelEdgeSpacing","mxSwimlaneOrdering","mxHierarchicalLayout","deterministic","DIRECTION_NORTH","mxSwimlaneLayout","mxGraphModel","currentEdit","createUndoableEdit","setRoot","mxRootChange","model","previous","mxChildChange","child","index","previousIndex","mxTerminalChange","terminal","mxValueChange","mxStyleChange","mxGeometryChange","geometry","mxCollapseChange","collapsed","mxVisibleChange","visible","mxCellAttributeChange","attribute","mxCell","setGeometry","setStyle","onInit","mxGeometry","mxPrintPreview","pageFormat","borderColor","pageSelector","pageScale","fromRectangle","mxStylesheet","styles","Object","putDefaultVertexStyle","createDefaultVertexStyle","putDefaultEdgeStyle","createDefaultEdgeStyle","mxCellState","origin","absoluteOffset","mxGraphSelectionModel","cells","mxSelectionChange","selectionModel","added","removed","slice","mxCellEditor","zoomHandler","isEditing","SCALE","SCALE_AND_TRANSLATE","editingCell","getView","getState","stopEditing","getModel","CHANGE","mxCellRenderer","mxGraphView","graphBounds","mxCurrentRootChange","isUp","currentRoot","getParent","mxGraph","renderHint","stylesheet","mouseListeners","mxClient","IS_SVG","dialect","DIALECT_SVG","RENDERING_HINT_EXACT","IS_VML","DIALECT_VML","RENDERING_HINT_FASTEST","DIALECT_STRICTHTML","RENDERING_HINT_FASTER","DIALECT_PREFERHTML","DIALECT_MIXEDHTML","multiplicities","imageBundles","cellRenderer","createCellRenderer","setSelectionModel","createSelectionModel","setStylesheet","createStylesheet","createGraphView","graphModelChangeListener","createHandlers","revalidate","mxCellOverlay","tooltip","verticalAlign","offset","cursor","mxOutline","mxMultiplicity","type","attr","validNeighbors","countError","typeError","validNeighborsAllowed","mxResources","mxLayoutManager","undoHandler","beforeUndo","moveHandler","cellsMoved","mxSwimlaneManager","addEnabled","resizeEnabled","addHandler","isAddEnabled","cellsAdded","resizeHandler","isResizeEnabled","cellsResized","mxTemporaryCellStates","isCellVisibleFn","getLinkForCellState","oldValidateCellState","validateCellState","oldBounds","getGraphBounds","oldStates","getStates","oldScale","getScale","oldDoRedrawShape","doRedrawShape","self","oldPaint","shape","paint","link","setLink","resurse","setScale","resetValidationState","bbox","getBoundingBox","validateCell","add","setGraphBounds","mxCellStatePreview","deltas","mxConnectionConstraint","point","perimeter","mxGraphHandler","panHandler","updatePreviewShape","updateHint","escapeHandler","ESCAPE","refreshHandler","first","getBounds","pBounds","getPreviewBounds","e","mxPanningHandler","forcePanningHandler","isForcePanningEvent","PAN_START","FIRE_MOUSE_EVENT","gestureHandler","eo","isPinchEnabled","isConsumed","initialScale","mouseDownEvent","minScale","maxScale","zoomTo","GESTURE","mxPopupMenuHandler","inTolerance","mxCellMarker","validColor","invalidColor","hotspot","DEFAULT_VALID_COLOR","DEFAULT_INVALID_COLOR","DEFAULT_HOTSPOT","highlight","mxCellHighlight","mxSelectionCellsHandler","handlers","refresh","getSelectionModel","TRANSLATE","DOWN","UP","mxConnectionHandler","mxConstraintHandler","resetHandler","currentFocus","redraw","ROOT","mxRubberband","forceRubberbandHandler","isForceRubberbandEvent","getOffset","getScrollOrigin","getX","getY","repaint","IS_IE","mxHandle","mxVertexHandler","livePreview","invalidate","invalid","validate","mxEdgeHandler","dirty","isRendering","mxElbowEdgeHandler","mxEdgeSegmentHandler","mxKeyHandler","documentElement","normalKeys","shiftKeys","controlKeys","controlShiftKeys","keydownHandler","keyDown","mxTooltipHandler","mxCellTracker","funct","getCell","highlightColor","strokeWidth","dashed","HIGHLIGHT_STROKEWIDTH","opacity","HIGHLIGHT_OPACITY","repaintHandler","hide","mxDefaultKeyHandler","editor","handler","old","escape","hideProperties","mxDefaultPopupMenu","config","mxDefaultToolbar","mxEditor","actions","addActions","cycleAttributeValues","popupHandler","undoManager","createGraph","toolbar","createToolbar","keyHandler","configure","swimlaneIndicatorColorAttribute","cycleAttributeName","mxCodec","createXmlDocument","objects","mxObjectCodec","template","exclude","idrefs","mapping","reverse","VERSION","navigator","userAgent","IS_IE6","IS_IE11","match","IS_EDGE","IS_QUIRKS","documentMode","IS_EM","VML_PREFIX","OFFICE_PREFIX","IS_NS","IS_OP","IS_OT","IS_SF","IS_IOS","IS_GC","IS_CHROMEAPP","chrome","app","runtime","IS_FF","IS_MT","NO_FO","createElementNS","appName","toUpperCase","IS_WIN","appVersion","IS_MAC","IS_TOUCH","IS_POINTER","PointerEvent","IS_LOCAL","location","href","defaultBundles","isBrowserSupported","rel","doc","write","setAttribute","head","loadResources","fn","lan","pending","callback","include","mxLoadResources","mxForceIncludes","mxResourceExtension","mxLoadStylesheets","mxBasePath","substring","basePath","mxImageBasePath","imageBasePath","mxLanguage","language","userLanguage","mxDefaultLanguage","defaultLanguage","mxLanguages","languages","namespaces","styleSheets","styleSheet","cssText","createStyleSheet","mxLog","consoleName","TRACE","DEBUG","WARN","buffer","tbody","tr","td","textarea","compatMode","addButton","info","getInnerHtml","debug","copy","err","alert","popup","innerWidth","innerHeight","setMaximizable","setScrollable","setResizable","setClosable","destroyOnClose","elt","getElement","offsetHeight","RESIZE_END","MAXIMIZE","NORMALIZE","writeln","toString","lab","button","isVisible","show","setVisible","enter","string","Date","getTime","leave","t0","dt","warn","visibility","scrollHeight","FIELD_NAME","counter","obj","ctor","getFunctionName","constructor","prototype","map","key","put","remove","getKeys","result","getValues","visit","visitor","resources","extension","resourcesEncoded","loadDefaultBundle","loadSpecialBundle","isLanguageSupported","getDefaultBundle","basename","getSpecialBundle","dash","NONE","defaultBundle","specialBundle","req","parse","getText","load","isReady","text","lines","split","charAt","idx","charCodeAt","replace","unescape","defaultValue","replacePlaceholders","join","equals","clone","setRect","getCenterX","getCenterY","rect","minX","minY","maxX","maxY","intersect","r1","r2","b1","b2","grow","amount","getPoint","rotate90","t","mxEffects","animateChanges","done","maxStep","step","animate","isRequired","change","isEdge","setOpacity","sx","sy","cascadeOpacity","setTimeout","childCount","getChildCount","getChildAt","childState","getEdges","edgeState","fadeOut","from","f","removeChild","errorResource","closeResource","errorImage","removeCursors","children","childNodes","currentStyle","getComputedStyle","parseCssNumber","parseFloat","isNaN","setPrefixedStyle","prefix","scope","eval","expr","_mxJavaScriptExpression","message","findNode","nodeType","NODETYPE_ELEMENT","getAttribute","nextSibling","str","trim","test","ltrim","idx2","array","forEach","splice","isNode","attributeName","attributeValue","isAncestorNode","ancestor","getChildNodes","importNode","allChildren","newNode","attributes","createTextNode","implementation","createDocument","ActiveXObject","parseXml","DOMParser","xml","parser","parseFromString","validateOnParse","resolveExternals","loadXML","clearSelection","selection","empty","getSelection","removeAllRanges","getPrettyXml","tab","indent","NODETYPE_TEXT","getTextContent","htmlEntities","attrs","val","removeWhitespace","before","previousSibling","next","s","newline","String","isVml","tagUrn","getXml","linefeed","XMLSerializer","xmlSerializer","serializeToString","extractTextWithWhitespace","elems","blocks","ret","doExtract","elts","innerHTML","elem","nodeValue","replaceTrailingNewlines","pattern","postfix","innerText","undefined","textContent","setTextContent","serializer","getOuterHtml","outerHTML","br","count","label","para","p","addTransparentBackgroundFilter","filter","linkAction","action","pad","execute","linkInvoke","functName","arg","a","textDecoration","paddingLeft","fit","offsetLeft","offsetWidth","getDocumentScrollOrigin","sl","st","b","d","right","offsetTop","bottom","send","onload","onerror","binary","timeout","ontimeout","setBinary","getAll","urls","remain","errors","status","getStatus","post","submit","simulate","loadInto","onreadystatechange","readyState","addEventListener","getValue","getNumber","Number","getColor","transients","shallow","equalPoints","equalEntries","removeDuplicates","arr","dict","extend","superCtor","output","toRadians","deg","PI","toDegree","rad","arcToCurves","angle","largeArcFlag","sweepFlag","fS","psai","ctx","cty","cpsi","cos","spsi","sin","rxd","ryd","rxdd","rydd","r1x","r2y","lamda","sds","sqrt","seif","txd","tyd","tx","ty","atan2","s1","dr","sse","seg","segr","cpsir1","cpsir2","spsir1","spsir2","mc","ms","x2","y2","x3","y3","n","cx","p1","p2","p3","p4","getRotatedPoint","pt","x1","y1","getPortConstraints","edge","STYLE_PORT_CONSTRAINT","STYLE_SOURCE_PORT_CONSTRAINT","STYLE_TARGET_PORT_CONSTRAINT","directions","returnValue","DIRECTION_MASK_NONE","constraintRotationEnabled","STYLE_PORT_CONSTRAINT_ROTATION","STYLE_ROTATION","quad","DIRECTION_MASK_NORTH","DIRECTION_MASK_EAST","DIRECTION_MASK_SOUTH","DIRECTION_MASK_WEST","DIRECTION_WEST","DIRECTION_SOUTH","DIRECTION_EAST","reversePortConstraints","constraint","findNearestSegment","absolutePoints","last","current","dist","ptSegDistSq","getDirectedBounds","m","flipH","flipV","STYLE_DIRECTION","STYLE_FLIPH","STYLE_FLIPV","m2","getPerimeterPoint","pts","center","intersection","ip","distSq","rectangleIntersectsSegment","contains","intersects","tw","th","rw","rh","rx","ry","intersectsHotspot","cy","STYLE_STARTSIZE","STYLE_HORIZONTAL","alpha","scrollOffset","fixed","position","r","getBoundingClientRect","wnd","defaultView","parentWindow","pageXOffset","pageYOffset","includeAncestors","includeDocument","convertPoint","chars","RegExp","rtrim","isNumeric","isFinite","isInteger","mod","denom","nume_a","nume_b","ua","ub","dotprod","projlenSq","lenSq","ptLineDist","relativeCcw","ccw","createImage","imageNode","borderStyle","sortCells","ascending","lookup","sort","o1","o2","mxCellPath","create","PATH_SEPARATOR","comp","compare","getStylename","pairs","stylename","getStylenames","indexOfStylename","tokens","pos","addStylename","removeStylename","removeAllStylenames","setCellStyles","beginUpdate","getStyle","endUpdate","isValue","sep","setCellStyleFlags","flag","setStyleFlag","cont","getAlignmentAsPoint","ALIGN_RIGHT","ALIGN_BOTTOM","getSizeForString","fontSize","fontFamily","textWidth","lineHeight","LINE_HEIGHT","display","zoom","whiteSpace","getViewXml","getRoot","eventsEnabled","isEventsEnabled","setEventsEnabled","drawPane","overlayPane","NS_SVG","canvas","cloneNode","getTranslate","enc","encode","getScaleForPageCount","pageCount","PAGE_FORMAT_A4_PORTRAIT","availablePageWidth","availablePageHeight","sc","graphWidth","graphHeight","pageFormatAspectRatio","graphAspectRatio","pagesAspectRatio","pageRoot","pagesAspectRatioSqrt","numRowPages","numColumnPages","scaleChange","currentTotalPages","numLoops","roundRowDownProportion","floor","roundColumnDownProportion","posterWidth","open","html","base","close","links","outer","ownerSVGElement","minWidth","minHeight","printScreen","print","focus","isInternalWindow","pre","prompt","confirm","error","icon","padding","img","makeDraggable","graphF","dragElement","autoscroll","scalePreview","highlightDropTargets","getDropTarget","dragSource","dragOffset","TOOLTIP_VERTICAL_OFFSET","setGuidesEnabled","getGraphForEvent","createDragElement","createPreviewElement","MIN_HOTSPOT_SIZE","MAX_HOTSPOT_SIZE","NS_XHTML","NS_XLINK","SHADOWCOLOR","VML_SHADOWCOLOR","SHADOW_OFFSET_X","SHADOW_OFFSET_Y","SHADOW_OPACITY","NODETYPE_ATTRIBUTE","NODETYPE_CDATA","NODETYPE_ENTITY_REFERENCE","NODETYPE_ENTITY","NODETYPE_PROCESSING_INSTRUCTION","NODETYPE_COMMENT","NODETYPE_DOCUMENT","NODETYPE_DOCUMENTTYPE","NODETYPE_DOCUMENT_FRAGMENT","NODETYPE_NOTATION","OUTLINE_HIGHLIGHT_COLOR","OUTLINE_HIGHLIGHT_STROKEWIDTH","HIGHLIGHT_SIZE","CURSOR_MOVABLE_VERTEX","CURSOR_MOVABLE_EDGE","CURSOR_LABEL_HANDLE","CURSOR_TERMINAL_HANDLE","CURSOR_BEND_HANDLE","CURSOR_VIRTUAL_BEND_HANDLE","CURSOR_CONNECT","HIGHLIGHT_COLOR","CONNECT_TARGET_COLOR","INVALID_CONNECT_TARGET_COLOR","DROP_TARGET_COLOR","VALID_COLOR","INVALID_COLOR","EDGE_SELECTION_COLOR","VERTEX_SELECTION_COLOR","VERTEX_SELECTION_STROKEWIDTH","EDGE_SELECTION_STROKEWIDTH","VERTEX_SELECTION_DASHED","EDGE_SELECTION_DASHED","GUIDE_COLOR","GUIDE_STROKEWIDTH","OUTLINE_COLOR","OUTLINE_STROKEWIDTH","HANDLE_SIZE","LABEL_HANDLE_SIZE","HANDLE_FILLCOLOR","HANDLE_STROKECOLOR","LABEL_HANDLE_FILLCOLOR","CONNECT_HANDLE_FILLCOLOR","LOCKED_HANDLE_FILLCOLOR","OUTLINE_HANDLE_FILLCOLOR","OUTLINE_HANDLE_STROKECOLOR","DEFAULT_TEXT_DIRECTION","WORD_WRAP","ABSOLUTE_LINE_HEIGHT","DEFAULT_STARTSIZE","DEFAULT_MARKERSIZE","DEFAULT_IMAGESIZE","ENTITY_SEGMENT","RECTANGLE_ROUNDING_FACTOR","LINE_ARCSIZE","PAGE_FORMAT_A4_LANDSCAPE","PAGE_FORMAT_LETTER_PORTRAIT","PAGE_FORMAT_LETTER_LANDSCAPE","STYLE_PERIMETER","STYLE_SOURCE_PORT","STYLE_TARGET_PORT","STYLE_OPACITY","STYLE_FILL_OPACITY","STYLE_STROKE_OPACITY","STYLE_TEXT_OPACITY","STYLE_TEXT_DIRECTION","STYLE_OVERFLOW","STYLE_ORTHOGONAL","STYLE_EXIT_X","STYLE_EXIT_Y","STYLE_EXIT_PERIMETER","STYLE_ENTRY_X","STYLE_ENTRY_Y","STYLE_ENTRY_PERIMETER","STYLE_WHITE_SPACE","STYLE_FILLCOLOR","STYLE_POINTER_EVENTS","STYLE_SWIMLANE_FILLCOLOR","STYLE_MARGIN","STYLE_GRADIENTCOLOR","STYLE_GRADIENT_DIRECTION","STYLE_STROKECOLOR","STYLE_SEPARATORCOLOR","STYLE_STROKEWIDTH","STYLE_ALIGN","STYLE_VERTICAL_ALIGN","STYLE_LABEL_WIDTH","STYLE_LABEL_POSITION","STYLE_VERTICAL_LABEL_POSITION","STYLE_IMAGE_ASPECT","STYLE_IMAGE_ALIGN","STYLE_IMAGE_VERTICAL_ALIGN","STYLE_GLASS","STYLE_IMAGE","STYLE_IMAGE_WIDTH","STYLE_IMAGE_HEIGHT","STYLE_IMAGE_BACKGROUND","STYLE_IMAGE_BORDER","STYLE_NOLABEL","STYLE_NOEDGESTYLE","STYLE_LABEL_BACKGROUNDCOLOR","STYLE_LABEL_BORDERCOLOR","STYLE_LABEL_PADDING","STYLE_INDICATOR_SHAPE","STYLE_INDICATOR_IMAGE","STYLE_INDICATOR_COLOR","STYLE_INDICATOR_STROKECOLOR","STYLE_INDICATOR_GRADIENTCOLOR","STYLE_INDICATOR_SPACING","STYLE_INDICATOR_WIDTH","STYLE_INDICATOR_HEIGHT","STYLE_INDICATOR_DIRECTION","STYLE_SHADOW","STYLE_SEGMENT","STYLE_ENDARROW","STYLE_STARTARROW","STYLE_ENDSIZE","STYLE_SWIMLANE_LINE","STYLE_ENDFILL","STYLE_STARTFILL","STYLE_DASHED","STYLE_DASH_PATTERN","STYLE_FIX_DASH","STYLE_ROUNDED","STYLE_CURVED","STYLE_ARCSIZE","STYLE_ABSOLUTE_ARCSIZE","STYLE_SOURCE_PERIMETER_SPACING","STYLE_TARGET_PERIMETER_SPACING","STYLE_PERIMETER_SPACING","STYLE_SPACING","STYLE_SPACING_TOP","STYLE_SPACING_LEFT","STYLE_SPACING_BOTTOM","STYLE_SPACING_RIGHT","STYLE_ANCHOR_POINT_DIRECTION","STYLE_ELBOW","STYLE_FONTCOLOR","STYLE_FONTFAMILY","STYLE_FONTSIZE","STYLE_FONTSTYLE","STYLE_ASPECT","STYLE_AUTOSIZE","STYLE_FOLDABLE","STYLE_EDITABLE","STYLE_BACKGROUND_OUTLINE","STYLE_BENDABLE","STYLE_MOVABLE","STYLE_RESIZABLE","STYLE_RESIZE_WIDTH","STYLE_RESIZE_HEIGHT","STYLE_ROTATABLE","STYLE_CLONEABLE","STYLE_DELETABLE","STYLE_SHAPE","STYLE_EDGE","STYLE_JETTY_SIZE","STYLE_SOURCE_JETTY_SIZE","STYLE_TARGET_JETTY_SIZE","STYLE_LOOP","STYLE_ORTHOGONAL_LOOP","STYLE_ROUTING_CENTER_X","STYLE_ROUTING_CENTER_Y","FONT_BOLD","FONT_ITALIC","FONT_UNDERLINE","SHAPE_RECTANGLE","SHAPE_ELLIPSE","SHAPE_DOUBLE_ELLIPSE","SHAPE_RHOMBUS","SHAPE_LINE","SHAPE_IMAGE","SHAPE_ARROW","SHAPE_ARROW_CONNECTOR","SHAPE_LABEL","SHAPE_CYLINDER","SHAPE_SWIMLANE","SHAPE_CONNECTOR","SHAPE_ACTOR","SHAPE_CLOUD","SHAPE_TRIANGLE","SHAPE_HEXAGON","ARROW_CLASSIC","ARROW_CLASSIC_THIN","ARROW_BLOCK","ARROW_BLOCK_THIN","ARROW_OPEN","ARROW_OPEN_THIN","ARROW_OVAL","ARROW_DIAMOND","ARROW_DIAMOND_THIN","ALIGN_LEFT","ALIGN_TOP","TEXT_DIRECTION_DEFAULT","TEXT_DIRECTION_AUTO","TEXT_DIRECTION_LTR","TEXT_DIRECTION_RTL","DIRECTION_MASK_ALL","ELBOW_VERTICAL","ELBOW_HORIZONTAL","EDGESTYLE_ELBOW","EDGESTYLE_ENTITY_RELATION","EDGESTYLE_LOOP","EDGESTYLE_SIDETOSIDE","EDGESTYLE_TOPTOBOTTOM","EDGESTYLE_ORTHOGONAL","EDGESTYLE_SEGMENT","PERIMETER_ELLIPSE","PERIMETER_RECTANGLE","PERIMETER_RHOMBUS","PERIMETER_HEXAGON","PERIMETER_TRIANGLE","consumed","getName","getProperties","graphX","graphY","getEvent","getSource","isSource","getClientX","getClientY","getGraphX","getGraphY","isPopupTrigger","preventDefault","eventListeners","getEventSource","args","listen","updateListenerList","eventName","mxListenerList","entry","attachEvent","updateListener","listenerCount","removeEventListener","detachEvent","removeAllListeners","list","startListener","moveListener","endListener","removeGestureListeners","redirectMouseEvents","down","move","up","dblClick","fireMouseEvent","MOUSE_MOVE","MOUSE_UP","release","addMouseWheelListener","wheelHandler","event","delta","detail","wheelDelta","disableContextMenu","srcElement","isTouchEvent","pointerType","MSPOINTER_TYPE_TOUCH","mozInputSource","isPenEvent","MSPOINTER_TYPE_PEN","isMultiTouchEvent","touches","isMouseEvent","MSPOINTER_TYPE_MOUSE","isLeftMouseButton","buttons","which","isMiddleMouseButton","isRightMouseButton","isControlDown","isShiftDown","isMetaDown","isAltDown","shiftKey","altKey","ctrlKey","metaKey","getMainEvent","changedTouches","clientX","clientY","stopPropagation","cancelBubble","LABEL_HANDLE","ROTATION_HANDLE","CUSTOM_HANDLE","VIRTUAL_HANDLE","ACTIVATE","RESIZE_START","RESIZE","MOVE_START","MOVE","MOVE_END","PAN_END","MINIMIZE","HIDE","SHOW","CLOSE","DESTROY","REFRESH","SIZE","SELECT","FIRED","TAP_AND_HOLD","GET","RECEIVE","CONNECT","DISCONNECT","SUSPEND","RESUME","MARK","POST","OPEN","SAVE","BEFORE_ADD_VERTEX","ADD_VERTEX","AFTER_ADD_VERTEX","DONE","EXECUTE","EXECUTED","BEGIN_UPDATE","START_EDIT","END_UPDATE","END_EDIT","BEFORE_UNDO","UNDO","REDO","NOTIFY","LAYOUT_CELLS","CLICK","ADD","REMOVE","CLEAR","ADD_CELLS","CELLS_ADDED","MOVE_CELLS","CELLS_MOVED","RESIZE_CELLS","CELLS_RESIZED","TOGGLE_CELLS","CELLS_TOGGLED","ORDER_CELLS","CELLS_ORDERED","REMOVE_CELLS","CELLS_REMOVED","GROUP_CELLS","UNGROUP_CELLS","REMOVE_CELLS_FROM_PARENT","FOLD_CELLS","CELLS_FOLDED","ALIGN_CELLS","LABEL_CHANGED","CONNECT_CELL","CELL_CONNECTED","SPLIT_EDGE","FLIP_EDGE","START_EDITING","EDITING_STARTED","EDITING_STOPPED","ADD_OVERLAY","REMOVE_OVERLAY","UPDATE_CELL_SIZE","DOUBLE_CLICK","START","RESET","withCredentials","request","decodeSimulateValues","isBinary","responseText","getDocumentElement","responseXML","XMLHttpRequest","overrideMimeType","onreadystatechaange","setRequestHeaders","setRequestHeader","onbeforeunload","form","pars","decodeURIComponent","mxClipboard","STEPSIZE","insertCount","setCells","getCells","isEmpty","cut","removeCells","getSelectionCells","getExportableCells","getTopmostCells","cloneCells","paste","getImportableCells","getDefaultParent","importCells","setSelectionCells","closeImage","minimizeImage","normalizeImage","maximizeImage","resizeImage","minimumSize","contentHeightCorrection","touchAction","contentWrapper","activator","activate","scrollable","activeWindow","zIndex","previousWindow","isResizable","resizable","startX","startY","dragHandler","setSize","minimize","getMinimumSize","marginLeft","minimized","maxDisplay","maximize","minSize","maximizable","maximized","minDisplay","docHeight","setLocation","closeImg","setImage","marginRight","marginTop","closable","getTable","addButtons","okFunct","cancelFunct","addText","input","addField","addCheckbox","checked","addTextarea","rows","addCombo","isMultiSelect","select","addOption","combo","isSelected","option","getDocumentWidth","getDocumentHeight","l","previewElement","enabled","currentGraph","currentDropTarget","currentPoint","currentGuide","currentHighlight","guidesEnabled","gridEnabled","dragElementZIndex","dragElementOpacity","checkEventSource","setEnabled","isGuidesEnabled","isGridEnabled","setGridEnabled","getCellAt","mouseMoveHandler","dragExit","removeDragElement","removeListeners","stopDrag","startDrag","mouseUpHandler","pointerEvents","getElementForEvent","elementFromPoint","graphContainsEvent","dragEnter","dragOver","drop","isMouseDown","isMouseTrigger","graphHandler","getGuideStates","autoScroll","scrollPointToVisible","autoExtend","isDropEnabled","isGridEnabledEvent","hideGuide","isEnabledForEvent","off","gridSize","snap","previewOffset","dropTarget","noReset","updateDefaultMode","addItem","pressedIcon","initialClassName","mouseHandler","backgroundColor","menu","currentImg","isMenuShowing","hideMenu","addActionCombo","options","selectedIndex","addSwitchMode","altIcon","selectedMode","defaultMode","selectMode","addMode","toggle","defaultFunction","domNode","resetMode","forced","addSeparator","addBreak","addLine","hr","undone","redone","isSignificant","notify","die","undo","redo","history","indexOfNextAdd","canUndo","edit","canRedo","undoableEditHappened","undoableEdit","shift","edits","mxUrlConverter","baseUrl","baseDomain","updateBaseUrl","protocol","host","pathname","lastIndexOf","getBaseUrl","setBaseUrl","getBaseDomain","setBaseDomain","isRelativeUrl","convert","submenuImage","useLeftButtonForPopup","itemCount","autoExpand","smartSeparators","labels","iconCls","willAddSeparator","containsItems","col1","col2","col3","paddingRight","textAlign","createSubmenu","currentSelection","eventReceiver","activeRow","hideSubmenu","showSubmenu","createRange","addCheckmark","item","backgroundImage","backgroundRepeat","backgroundPosition","row","force","showMenu","autoSaveDelay","autoSaveThrottle","autoSaveThreshold","ignoredChanges","lastSnapshot","save","now","isRunning","startAnimation","updateAnimation","stopAnimation","animateCell","recurse","getDelta","isVertex","moveState","stopRecursion","getOriginForCell","geo","getCellGeometry","relative","pgeo","putImage","fallback","getImage","includeOverlays","drawState","visitStatesRecursive","drawCellState","drawOverlays","drawShape","drawText","checkBounds","restore","overlays","path","rotateHtml","lastX","lastY","moveOp","lineOp","quadOp","curveOp","closeOp","createState","fillAlpha","strokeAlpha","fillColor","gradientFillAlpha","gradientColor","gradientAlpha","gradientDirection","strokeColor","dashPattern","fixDash","lineCap","lineJoin","miterLimit","fontColor","fontBackgroundColor","fontBorderColor","shadowColor","shadowAlpha","shadowDx","shadowDy","rotationCx","rotationCy","format","addOp","rotatePoint","theta","pop","rotate","setAlpha","setFillAlpha","setStrokeAlpha","setFillColor","setGradient","color1","color2","direction","alpha1","alpha2","setStrokeColor","setStrokeWidth","setDashed","setDashPattern","setLineCap","setLineJoin","setMiterLimit","setFontColor","setFontBackgroundColor","setFontBorderColor","setFontSize","setFontFamily","setFontStyle","setShadow","setShadowColor","setShadowAlpha","setShadowOffset","begin","moveTo","lineTo","quadTo","curveTo","arcTo","curves","end","textEnabled","compressed","toFixed","roundrect","ellipse","aspect","clip","dir","fillAndStroke","useDomParser","matchHtmlAlignment","foEnabled","foAltText","foOffset","textOffset","imageOffset","strokeTolerance","minStrokeWidth","refCount","blockImagePointerEvents","lineHeightCorrection","pointerEventsValue","fontMetricsPadding","cacheOffsetSize","hash","tagName","namespace","createAlternateContent","fo","createGradientId","getSvgGradient","gradient","tmpId","getElementById","createSvgGradient","op","addNode","filled","stroked","updateFill","updateStroke","transform","createShadow","createTolerance","originalRoot","IS_CHROME_APP","getCurrentStrokeWidth","sw","updateStrokeAttributes","createDashPattern","pat","tol","removeAttribute","setAttributeNS","convertHtml","xd","xb","adoptNode","ta","createDiv","lh","css","invalidateCachedOffsetSize","mxCachedOffsetWidth","mxCachedFinalOffsetWidth","mxCachedFinalOffsetHeight","updateText","group","maxHeight","maxWidth","ow","oh","padX","padY","sizeDiv","div2","wordWrap","padDx","ws","plainText","createClip","updateFont","anchor","textHeight","addTextBackground","getBBox","ie","fontWeight","mxVmlCanvas2D","rotatedHtmlBackground","vmlScale","createVmlElement","coordsize","strokeweight","strokecolor","createStroke","createFill","createTransparentFill","flip","endcap","joinstyle","miterlimit","dashstyle","getVmlDashStyle","tok","createShadowStroke","createShadowFill","cpx0","cpy0","qpx1","qpy1","cpx3","cpy3","cpx1","cpy1","cpx2","cpy2","createRect","box","margin","inner","rot","real_cos","real_sin","top_fix","left_fix","divParent","textpathok","v","tp","on","vertical","guideX","guideY","getGuideTolerance","createGuideShape","guide","isDashed","snapX","override","ttX","stateX","valueX","getOverlayPane","overrideX","snapY","middle","ttY","stateY","valueY","overrideY","trx","tt","getGuideColor","scrollWidth","defaultLocalized","allowEval","constraints","w0","h0","bgNode","fgNode","conns","parseConstraint","evaluateTextAttribute","evaluateAttribute","loc","computeAspect","drawChildren","outline","disableShadow","drawNode","inverse","childNode","arcsize","factor","mxStencilRegistry","getStencil","antiAlias","minSvgStrokeWidth","boundingBox","svgStrokeTolerance","svgPointerEvents","shapePointerEvents","stencilPointerEvents","useSvgBoundingBox","fillOpacity","strokeOpacity","isParseVml","isHtmlAllowed","getSvgScreenOffset","createSvg","createHtml","createVml","reconfigure","updateBoundsFromPoints","redrawHtmlShape","redrawShape","updateBoundingBox","lastChild","getLabelBounds","isPaintBoundsInverted","getLabelMargins","createVmlGroup","createCanvas","insertAdjacentHTML","destroyCanvas","createSvgCanvas","updateVmlContainer","createVmlCanvas","updateHtmlBounds","updateHtmlFilters","updateHtmlColors","isShadow","east","south","west","north","borderWidth","setTransparentBackgroundImage","mxRefCount","releaseSvgGradients","oldGradients","strokeDrawn","updateTransform","configureCanvas","bg","bb","createBoundingBox","createTransparentSvgRectangle","paintEdgeShape","paintVertexShape","getGradientBounds","getShapeRotation","paintBackground","paintForeground","getArcSize","paintGlassEffect","arc","isRounded","addPoints","rounded","arcSize","initialMove","pe","p0","wp","nx1","ny1","nx2","ny2","resetStyles","startArrow","endArrow","glass","setCursor","getCursor","isRoundable","augmentBoundingBox","getRotation","getTextRotation","verticalTextRotation","grads","stencils","addStencil","mxMarker","markers","addMarker","createMarker","unitX","unitY","createArrow","widthFactor","endOffsetX","endOffsetY","createOpenArrow","diamond","swFactor","tk","redrawPath","events","hw","hh","paintLine","paintCurvedLine","ix","iy","arrow","nx","ny","basex","basey","floorx","floory","p0x","p0y","p1x","p1y","p2x","p2y","p3x","p3y","p5x","p5y","getEdgeWidth","isMarkerStart","getStartArrowWidth","isMarkerEnd","getEndArrowWidth","startWidth","endWidth","edgeWidth","openEnded","isOpenEnded","markerStart","markerEnd","isArrowRounded","i0","orthx","orthy","fns","startNx","startNy","paintMarker","outStartX","outStartY","inEndX","inEndY","dx1","dy1","dist1","tmp1","dist2","strokeWidthFactor","angleFactor","outX","outY","inX","inY","c1x","c1y","c2x","c2y","inStartX","inStartY","ptX","ptY","widthArrowRatio","spaceX","spaceY","baseSpacingTop","baseSpacingBottom","baseSpacingLeft","baseSpacingRight","replaceLinefeeds","ignoreClippedStringSize","ignoreStringSize","textWidthPadding","lastValue","cacheEnabled","update","unscaledWidth","lastUnscaledWidth","realHtml","fmt","getAutoDirection","updateSize","textDiv","updateHtmlFilter","updateHtmlTransform","exec","updateInnerHtml","divs","unrotatedBoundingBox","updateValue","bd","enableWrap","prev","getSpacing","mid","preserveImageAspect","useVml","imageSize","indicatorSize","indicatorSpacing","indicatorShape","indicator","indicatorColor","indicatorStrokeColor","indicatorGradientColor","indicatorDirection","paintImage","paintIndicator","getImageBounds","getIndicatorBounds","indicatorImage","hasChildNodes","getCylinderSize","isForeground","sourceMarker","targetMarker","getTitleSize","isHorizontal","shapeVertical","realHorizontal","realFlipH","realFlipV","swimlaneLine","paintSwimlane","paintRoundedSwimlane","paintSeparator","paintDivider","useBoundingBox","moveCell","getConstraint","getCellStyle","traverse","vertex","directed","func","visited","edgeCount","getEdgeCount","getEdgeAt","getTerminal","isAncestor","traverseAncestors","isVertexMovable","isCellMovable","isVertexIgnored","isCellVisible","isEdgeIgnored","setEdgeStyleEnabled","setOrthogonalEdge","getParentOffset","parentGeo","getGeometry","setEdgePoints","setRelative","parentOffset","setVertexLocation","getVertexBounds","dx0","dy0","arrangeGroups","topBorder","rightBorder","bottomBorder","leftBorder","updateGroupBounds","nudge","rankIndex","marginBottom","keepFirstLocation","resizeParent","resizeParentMax","resizeLast","borderCollapse","pstate","getIndex","getParentSize","isLayer","fillValue","isSwimlane","horz","childStyle","setChildGeometry","isCellCollapsed","updateParentGeometry","geo2","pgeo2","resizeVertices","other","getStartSize","maintainParentLocation","groupPadding","groupPaddingTop","groupPaddingRight","groupPaddingBottom","groupPaddingLeft","parentsChanged","moveTree","levelDistance","nodeDistance","resetEdges","prefHozEdgeSep","prefVertEdgeOff","minEdgeJetty","channelBuffer","edgeRouting","sortEdges","alignRanks","maxRankHeight","getConnections","findTreeRoots","parentX","parentY","dfs","findRankHeights","setCellHeights","g","horizontalLayout","verticalLayout","moveNode","adjustParents","localEdgeProcessing","sortOutgoingEdges","e1","e2","end1","end2","rank","createNode","out","attachParent","layoutLeaf","offsetX","offsetY","siblingOffset","contour","upperHead","createLine","lowerHead","upperTail","lowerTail","sum","merge","total","upper","lower","bridge","a1","a2","line1","line2","line","processNodeOutgoing","parentCell","sortedCells","sortingCriterion","availableWidth","requiredWidth","edgeSpacing","currentXOffset","currentYOffset","maxYOffset","parentBounds","childCell","childBounds","getEdgesBetween","newPoints","angleOffset","rootx","rooty","autoRadius","rowMinX","rowMaxX","rowMinCenX","rowMaxCenX","rowRadi","rootBounds","centerX","centerY","vertexBounds","calcRowDims","maxLeftGrad","maxRightGrad","leftGrad","rightGrad","xLeftLimit","xRightLimit","fullWidth","xProportion","totalTheta","averTheta","nextTheta","lastTheta","rowNum","rowHasChildren","useInputOrigin","disableEdgeStyle","forceConstant","forceConstantSquared","minDistanceLimit","maxDistanceLimit","minDistanceLimitSquared","initialTemp","temperature","maxIterations","iteration","vertexArray","dispX","dispY","cellLocation","radiusSquared","isMoveable","neighbours","indices","allowedToRun","initialBounds","getBoundingBoxFromGeometry","getOpposites","resetEdge","calcRepulsion","calcAttraction","calcPositions","reduceTemperature","minx","miny","moveCells","deltaLength","newXDisp","newYDisp","k","xDelta","yDelta","deltaLengthSquared","displacementX","displacementY","vertexCount","random","deltaLengthWithRadius","moveCircle","getRadius","circle","phi","findParallels","parallels","getEdgeId","trg","route","scx","scy","tcx","tcy","len","placeLabels","avoid","labRect","dy2","dx2","minRank","nextLayerConnectedCells","previousLayerConnectedCells","getNextLayerConnectedCells","layer","getPreviousLayerConnectedCells","getGeneralPurposeVariable","setGeneralPurposeVariable","setX","setY","hashCode","getRankValue","otherNode","getCoreCell","isReversed","ranks","dfsCount","undirectedEdges","directedEdges","initialRank","startNodes","internalNode","internalNodes","startNodesCopy","layerDeterminingEdges","edgesToBeMarked","allEdgesScanned","minimumLayer","removedCell","currentMaxLayer","fixRanks","rankList","rootsArray","oldRootsArray","seen","parentToCellRankDifference","dfsRoots","trackAncestors","seenNodes","extendedDfs","connectingEdge","rootId","outgoingEdges","targetNode","ancestors","childHash","hashCodeLength","ranksPerGroup","swimlanes","swimlaneIndex","ii","maxChainDfs","lowerRank","upperRank","chainCount","slIndex","incomingEdges","nestedBestRanks","currentBestCrossings","iterationsWithoutImprovement","maxNoImprovementIterations","calculateCrossings","weightedMedian","transpose","candidateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","connectedCells","nodeIndices","connectedNode","otherCellRankPosition","concat","firstIndex","treeSize","tree","treeIndex","mainLoopIteration","improved","maxCount","orderedCells","tempRank","leftCellAboveConnections","leftCellBelowConnections","rightCellAboveConnections","rightCellBelowConnections","leftAbovePositions","leftBelowPositions","rightAbovePositions","rightBelowPositions","leftCell","rightCell","totalCurrentCrossings","totalSwitchedCrossings","ik","downwardSweep","medianRank","rankValue","numCellsForRank","medianValues","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","medianValue","arrayCount","medianPoint","leftMedian","rightMedian","unseenNodesArray","unseenNodes","modelRoots","seenNodesCopy","jettyPositions","limitX","currentXDelta","widestRank","rankTopY","rankBottomY","widestRankValue","rankWidths","rankY","fineTuning","nextLayerConnectedCache","previousLayerConnectedCache","printStatus","initialCoords","minNode","bestXDelta","medianPos","minPath","setCellLocations","nodeList","nodeWrapper","maxTries","tolerance","cellWrapper","numNextLayerConnected","numPreviousLayerConnected","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","currentPosition","cellMedian","positionChanged","leftLimit","rankSize","rightLimit","connectedCell","connectedCellWrapper","rankMedianPosition","weightedValues","cellMap","currentCell","calculatedWeightedValue","numConnectionsNextLevel","leftBuffer","rightBuffer","collection","totalWeight","facade","calculateWidestRank","rankCoordinates","localX","boundsWarning","numEdges","lastRankMaxCellHeight","maxCellHeight","distanceToNextRank","referenceX","edgeStraight","refSegCount","upSegCount","downSegCount","upXPositions","downXPositions","currentX","nextX","repositionValid","rankArray","MAX_VALUE","edgeStyle","mxHierarchicalEdgeStyle","ORTHOGONAL","POLYLINE","CURVE","setEdgePosition","cellIndex","currentCells","currentRank","sorter","connectedEdgeCount","connectedEdgeGroupCount","connectedEdges","innerCell","connections","connIndex","numActualEdges","parallelEdgeCount","jettys","layoutReversed","realSource","reversed","arrayOffset","jetty","modelSource","isPort","loopStart","loopLimit","loopDelta","positionX","topChannelY","bottomChannelY","modelTarget","realTarget","processReversedEdge","realCell","positionY","nodeId","reversedOverSwimlane","cellId","STRAIGHT","moveParent","parentBorder","interHierarchySpacing","edgesCache","edgeSourceTermCache","edgesTargetTermCache","Array","rootsCopy","run","findRoots","best","maxDiff","fanOut","fanIn","diff","cachedEdges","isCollapsed","terminalCache","term","hierarchyVertices","allVertexSet","filledVertexSet","filterDescendants","filledVertexSetEmpty","candidateRoots","vertexSet","cycleStage","layeringStage","crossingStage","placementStage","allVertices","currentComp","vertexID","edgeIsSource","netCount","isSource2","otherTerm","dummyVertices","dummyVertexWidth","getChildCells","insertVertex","layoutBounds","lane","childrenY","maxChildrenY","newGeo","leftGroupBorder","isValidAncestor","laneCounter","otherVertex","otherIndex","maintainEdgeParent","ignoreRelativeEdgeParent","createIds","nextId","updateLevel","endingUpdate","createRoot","isCreateIds","setCreateIds","insert","filterCells","getDescendants","rootChanged","oldRoot","cellAdded","isRoot","parentChanged","updateEdgeParents","getId","setId","createId","collision","updateEdgeParent","getNearestCommonAncestor","origin1","getOrigin","origin2","cell1","cell2","getParentPath","cellRemoved","parentForCellChanged","oldIndex","getChildren","getChildEdges","setTerminal","terminalChanged","setTerminals","terminalForCellChanged","insertEdge","removeEdge","getDirectedEdgeCount","outgoing","ignoredEdge","getIncomingEdges","getOutgoingEdges","incoming","includeLoops","tmp2","directedMatch","oppositeMatch","sources","targets","terminals","topmost","isConnectable","setValue","valueForCellChanged","valueChanged","geometryForCellChanged","styleForCellChanged","setCollapsed","collapsedStateForCellChanged","visibleStateForCellChanged","mergeChildren","to","cloneAllEdges","mergeChildrenImpl","getParents","parents","cloneCell","includeChildren","clones","cloneCellImpl","restoreClone","ident","cellCloned","cloneChild","connect","isConnect","connectable","mxTransient","newValue","setVertex","setEdge","setConnectable","setParent","removeFromParent","getEdgeIndex","isOutgoing","removeFromTerminal","hasAttribute","userObject","cloneValue","TRANSLATE_CONTROL_POINTS","alternateBounds","sourcePoint","targetPoint","swap","getTerminalPoint","setTerminalPoint","ct","fixedAspect","resolve","t1","t2","mxPerimeter","RectanglePerimeter","orthogonal","pi","pi2","beta","tan","EllipsePerimeter","det","xout1","xout2","yout1","yout2","pow","xout","yout","RhombusPerimeter","TrianglePerimeter","corner","HexagonPerimeter","autoOrigin","printOverlays","printControls","printBackgroundImage","targetWindow","clipping","getWindow","getDoctype","appendGraph","forcePageBreaks","keepOpen","previousInitializeOverlay","initializeOverlay","overlay","getDrawPane","initControl","control","handleEvents","clickHandler","isNewWindow","writeHead","currentScale","availableHeight","hpages","vpages","writePageSelector","createPageSelector","addPage","pageBreakAfter","addPageBreak","cov","getCoverPages","apx","getAppendices","pageNum","renderPage","addGraphFragment","insertBackgroundImage","closeDocument","writePostfix","js","pageNumber","pageBreakInside","innerDiv","viewport","previousContainer","getCanvas","backgroundPane","getBackgroundPane","graphEnabled","tempClip","rendering","orig","svgs","getLinkForCell","putCellStyle","getDefaultVertexStyle","getDefaultEdgeStyle","defaultStyle","tmpStyle","visibleSourceState","visibleTargetState","terminalDistance","segments","getPerimeterBounds","setAbsoluteTerminalPoint","getVisibleTerminalState","setVisibleTerminalState","terminalState","getCellBounds","cellBounds","getPaintBounds","paintBounds","updateCachedBounds","setState","doneResource","updatingSelectionResource","singleSelection","isSingleSelection","setSingleSelection","changeSelection","setCell","getFirstSelectableCell","isCellSelectable","addCell","addCells","removeCell","trigger","modified","autoSize","selectText","emptyLabelText","escapeCancelsEditing","textNode","minResize","wordWrapPadding","blurEnabled","initialValue","contentEditable","isLegacyEditor","installListeners","applyValue","labelChanged","getInitialValue","getEditingValue","getCurrentValue","isCancelEditingKeyEvent","focusLost","isStopEditingEvent","keyCode","keypressHandler","clearOnChange","getEmptyLabelText","keyupHandler","resizeThread","clearTimeout","isEnterStopsCellEditing","isEventSource","getEditorBounds","isWrapping","lw","bds","hpos","vpos","legacySpacing","isInvokesStopCellEditing","getBackgroundColor","absoluteRoot","startEditing","tooltipHandler","hideTooltip","bold","italic","uline","isHideLabel","isSelectText","execCommand","cancel","initial","blur","prepareTextarea","getEditingCell","defaultShapes","defaultEdgeShape","defaultVertexShape","defaultTextShape","legacyControlPosition","forceControlClickHandler","registerShape","initializeShape","configureShape","createShape","getShapeConstructor","createIndicatorShape","getShape","getIndicatorShape","getIndicatorColor","getIndicatorGradientColor","getIndicatorImage","postConfigureShape","resolveColor","checkPlaceholderStyles","values","field","referenced","getSwimlane","rstate","getLabelValue","getLabel","createLabel","isForceHtml","isHtmlLabel","getVerticalAlign","isLabelClipped","initializeLabel","forceGetCell","isLabelEvent","nativeDblClickEnabled","createCellOverlays","getCellOverlays","installCellOverlayListeners","createControl","getFoldingImage","foldingEnabled","createControlClickHandler","collapse","foldCells","innerNode","isShapeEvent","redrawLabel","wrapping","isTextShapeInvalid","nextScale","getTextScale","isClipping","vis","redrawLabelShape","check","property","dh","rotateLabelBounds","redrawCellOverlays","redrawControl","getControlBounds","insertStateAfter","htmlNode","shapes","getShapesForState","shapeChanged","selectionCellsHandler","updateHandler","isShapeInvalid","mxEdgeStyle","EntityRelation","segment","isSourceLeft","sourceGeometry","isTargetLeft","targetGeometry","getRoutingCenterY","xe","ye","dep","midY","Loop","transformControlPoint","getRoutingCenterX","ElbowConnector","TopToBottom","SideToSide","SegmentConnector","hints","lastPushed","hint","pushPoint","lastInx","newHints","currentTerm","currentPt","hozChan","vertChan","currentHint","fixedVertAlign","fixedHozAlign","inHozChan","inVertChan","orthBuffer","orthPointsFallback","dirVectors","wayPoints1","routePatterns","inlineRoutePatterns","vertexSeperations","limits","LEFT_MASK","TOP_MASK","RIGHT_MASK","BOTTOM_MASK","LEFT","TOP","RIGHT","BOTTOM","SIDE_MASK","CENTER_MASK","SOURCE_MASK","TARGET_MASK","VERTEX_MASK","getJettySize","OrthConnector","sourceEdge","targetEdge","sourceX","sourceY","sourceWidth","sourceHeight","targetX","targetY","targetWidth","targetHeight","scaledSourceBuffer","scaledTargetBuffer","totalBuffer","tooShort","portConstraint","newRect","sourceCenX","sourceCenY","targetCenX","targetCenY","sourceTopDist","sourceLeftDist","sourceBottomDist","sourceRightDist","dirPref","horPref","vertPref","preferredHorizDist","preferredVertDist","prefOrdering","preferredOrderSet","sourceIndex","targetIndex","routePattern","currentIndex","lastOrientation","initialOrientation","currentOrientation","nextDirection","directionIndex","tar","sou","side","limit","souTar","deltaX","deltaY","targetOrientation","sameOrient","getRoutePattern","mxStyleRegistry","putValue","EMPTY_POINT","updatingDocumentResource","captureDocumentGesture","optimizeVmlReflows","updateStyle","lastNode","lastHtmlNode","lastForegroundNode","lastForegroundHtmlNode","setCurrentRoot","sizeDidChange","scaleAndTranslate","previousScale","previousTranslate","viewStateChanged","removeState","includeEdges","invalidating","prevDisplay","placeholder","getEmptyBounds","validateBackground","createBackgroundPageShape","validateBackgroundImage","validateBackgroundPage","getBackgroundImage","redrawBackgroundImage","pageVisible","getBackgroundPageBounds","backgroundPageShape","isHideOnHover","ps","updateCellState","stateValidated","pState","getChildOffsetForCell","updateVertexState","updateEdgeState","updateVertexLabelOffset","updateFixedTerminalPoints","updatePoints","updateFloatingTerminalPoints","updateEdgeBounds","updateEdgeLabelOffset","fg","keepEdgesInForeground","keepEdgesInBackground","updateFixedTerminalPoint","getConnectionConstraint","getFixedTerminalPoint","getConnectionPoint","updateBoundsFromStencil","asp","getEdgeStyle","getTerminalPort","srcBounds","trgBounds","isLoopStyleEnabled","tc","defaultLoopStyle","isAllowEval","updateFloatingTerminalPoint","getFloatingTerminalPoint","getNextPoint","orth","isOrthogonal","getPerimeterFunction","opposite","markerSize","gx","pointCount","gy","getRelativePoint","totalLength","minDist","xSegment","ySegment","projlen","yDistance","setRendering","setAllowEval","getCellStates","getDecoratorPane","decoratorPane","isContainerEvent","isScrollEvent","outWidth","inWidth","outHeight","inHeight","fireGestureEvent","popupMenuHandler","endHandler","createHtmlPane","updateContainerStyle","onResize","updateHtmlCanvasSize","pane","createVmlPane","getTranslateForRoot","EMPTY_ARRAY","cellEditor","portsEnabled","doubleTapEnabled","doubleTapTimeout","doubleTapTolerance","lastTouchY","lastTouchTime","tapAndHoldEnabled","tapAndHoldDelay","tapAndHoldInProgress","tapAndHoldValid","initialTouchX","initialTouchY","defaultOverlap","defaultParent","alternateEdgeStyle","pageBreaksVisible","pageBreakColor","pageBreakDashed","minPageBreakDist","preferPageSize","escapeEnabled","invokesStopCellEditing","enterStopsCellEditing","useScrollbarsForPanning","exportEnabled","importEnabled","cellsLocked","cellsCloneable","cellsEditable","cellsDeletable","cellsMovable","edgeLabelsMovable","vertexLabelsMovable","dropEnabled","splitEnabled","cellsResizable","cellsBendable","cellsSelectable","cellsDisconnectable","autoSizeCells","autoSizeCellsOnAdd","ignoreScrollbars","translateToScrollPosition","timerAutoScroll","allowAutoPanning","maximumGraphBounds","minimumGraphSize","minimumContainerSize","maximumContainerSize","resizeContainer","allowNegativeCoordinates","constrainChildren","constrainRelativeChildren","extendParents","extendParentsOnAdd","extendParentsOnMove","recursiveResize","collapseToPreferredSize","zoomFactor","keepSelectionVisibleOnZoom","centerZoom","resetViewOnRootChange","resetEdgesOnResize","resetEdgesOnMove","resetEdgesOnConnect","allowLoops","multigraph","connectableEdges","allowDanglingEdges","cloneInvalidEdges","disconnectOnMove","labelsVisible","htmlLabels","swimlaneSelectionEnabled","swimlaneNesting","minFitScale","maxFitScale","collapsedImage","expandedImage","warningImage","alreadyConnectedResource","containsValidationErrorsResource","collapseExpandResource","createCellEditor","createTooltipHandler","createSelectionCellsHandler","connectionHandler","createConnectionHandler","createGraphHandler","panningHandler","createPanningHandler","panningEnabled","createPopupMenuHandler","getStylesheet","getSelectionCellsForChanges","processChange","removeSelectionCells","getRemovedCellsForChanges","setDefaultParent","removeStateForCell","newParent","home","addCellOverlay","removeCellOverlay","removeCellOverlays","clearCellOverlays","setCellWarning","warning","isSelect","setSelectionCell","startEditingAtCell","getSelectionCell","isCellEditable","convertValueToString","cellLabelChanged","isAutoSizeCell","cellSizeUpdated","click","mxe","isTransparentClickEvent","selected","isCellSelected","selectCellForEvent","swimlane","isSwimlaneSelectionEnabled","getSwimlaneAt","isToggleEvent","tapAndHold","panningTrigger","marker","currentColor","markedState","mark","createEdgeState","panningManager","createPanningManager","getBorderSizes","borderLeftStyle","borderLeftWidth","paddingTop","borderTopStyle","borderTopWidth","borderRightStyle","borderRightWidth","paddingBottom","borderBottomStyle","borderBottomWidth","getPreferredPageSize","page","hCount","vCount","keepOrigin","ignoreWidth","ignoreHeight","getBorder","cssBorder","w1","h1","w2","h2","s2","doResizeContainer","updatePageBreaks","gb","horizontalCount","verticalCount","horizontalPageBreaks","verticalPageBreaks","drawPageBreaks","breaks","pageBreak","postProcessCellStyle","getImageFromBundles","encodeURIComponent","comma","setCellStyle","toggleCellStyle","toggleCellStyles","toggleCellStyleFlags","alignCells","param","resizeCell","flipEdge","addImageBundle","bundle","removeImageBundle","orderCells","back","cellsOrdered","groupCells","getCellsForGroup","createGroupCell","getBoundsForGroup","ungroupCells","removeCellsAfterUngroup","cellsRemoved","addAllEdges","removeCellsFromParent","moveGroup","allowInvalidEdges","keepPosition","trans","getEdgeValidationError","createVertex","createEdge","addEdge","absolute","constrain","parentState","zero","oldState","isAllowNegativeCoordinates","autoSizeCell","isExtendParentsOnAdd","isExtendParent","extendParent","constrainChild","cellConnected","updateCellSize","getDeletableCells","getAllEdges","disconnectTerminal","connected","splitEdge","newEdge","toggleCells","cellsToggled","checkFoldable","getFoldableCells","cellsFolded","isCellFoldable","swapBounds","willCollapse","updateAlternateBounds","getPreferredSizeForCell","allCells","ignoreChildren","cellStyle","gs2","resizeCells","isRecursiveResize","cellResized","ignoreRelative","resizeChildCells","constrainChildCells","scaleCell","isCellResizable","isCloneInvalidEdges","setAllowNegativeCoordinates","isDisconnectOnMove","isAllowDanglingEdges","isExtendParentsOnMove","disconnect","disconnectGraph","translateCell","getCellContainmentArea","getMaximumGraphBounds","sizeFirst","isConstrainRelativeChildren","isConstrainChild","overlap","getOverlap","getOutlineConstraint","getAllConnectionConstraints","setConnectionConstraint","connectCell","isPortsEnabled","getTerminalForPort","isCellDisconnectable","getCurrentRoot","enterGroup","isValidRoot","exitGroup","includeDescendants","addPoint","shiftPreview1","shiftPreview2","zoomIn","zoomOut","zoomActual","cw","ch","sh","scrollRectToVisible","zoomToRect","scaleX","scaleY","aspectFactor","rectRight","rectBottom","newHeight","deltaHeightBuffer","upperBuffer","newWidth","deltaWidthBuffer","newScale","scrollCellToVisible","tr2","isChanged","widthLimit","heightLimit","ddx","ddy","isCellConnectable","isLoop","isCloneEvent","isConstrainedEvent","isIgnoreTerminalEvent","validationAlert","isEdgeValid","isValidConnection","sourceOut","targetIn","validateEdge","validateGraph","context","isValid","getCellValidationError","outCount","inCount","rule","setBackgroundImage","isHtmlLabels","setHtmlLabels","getTooltip","tip","getHandler","getTooltipForNode","getTooltipForCell","getCursorForMouseEvent","getCursorForCell","setBorder","isResizeContainer","setResizeContainer","isEscapeEnabled","setEscapeEnabled","setInvokesStopCellEditing","setEnterStopsCellEditing","isCellLocked","isCellsLocked","setCellsLocked","getCloneableCells","isCellCloneable","isCellsCloneable","setCellsCloneable","canExportCell","canImportCell","isCellsSelectable","setCellsSelectable","isCellDeletable","isCellsDeletable","setCellsDeletable","isLabelMovable","isCellRotatable","getMovableCells","isCellsMovable","setCellsMovable","setPortsEnabled","getGridSize","setGridSize","getTolerance","setTolerance","isVertexLabelsMovable","setVertexLabelsMovable","isEdgeLabelsMovable","setEdgeLabelsMovable","isSwimlaneNesting","setSwimlaneNesting","setSwimlaneSelectionEnabled","isMultigraph","setMultigraph","isAllowLoops","setAllowDanglingEdges","setConnectableEdges","isConnectableEdges","setCloneInvalidEdges","setAllowLoops","setDisconnectOnMove","setDropEnabled","isSplitEnabled","setSplitEnabled","isCellsResizable","setCellsResizable","isTerminalPointMovable","isCellBendable","isCellsBendable","setCellsBendable","isCellsEditable","setCellsEditable","isCellsDisconnectable","setCellsDisconnectable","isValidSource","isValidTarget","setTooltips","setPanning","isAutoSizeCells","setAutoSizeCells","isExtendParents","setExtendParents","setExtendParentsOnAdd","setExtendParentsOnMove","setRecursiveResize","isConstrainChildren","setConstrainChildren","setConstrainRelativeChildren","isAllowOverlapParent","isValidDropTarget","isSplitTarget","ignoreFn","hitsSwimlaneContent","getPointForEvent","addOffset","getCellsBeyond","rightHalfpane","bottomHalfpane","isolate","isSelectionEmpty","getSelectionCount","addSelectionCell","addSelectionCells","removeSelectionCell","selectRegion","selectCellsForEvent","selectNextCell","selectCell","selectPreviousCell","selectParentCell","selectChildCell","isNext","isParent","isChild","sel","selectAll","descendants","selectVertices","selectCells","selectEdges","createHandler","createEdgeHandler","createVertexHandler","createElbowEdgeHandler","createEdgeSegmentHandler","listener","updateMouseEvent","getStateForTouchEvent","isEventIgnored","mouseEvent","lastEvent","mouseMoveRedirect","mouseUpRedirect","isSyntheticEventIgnored","lastMouseX","lastMouseY","ignoreMouseEvents","isEventSourceIgnored","candidate","getEventState","currentTime","fireDoubleClick","lastTouchEvent","lastTouchX","doubleClickCounter","doubleClickFired","lastTouchCell","valid","tapAndHoldThread","consumeMouseEvent","destroyed","graphRenderHint","showViewport","sizerSize","updateOnPan","sizerImage","suspended","forceVmlHandles","outlineGraphModelChanged","selectionBorder","redirect","redirect2","sizer","createSizer","setZoomEnabled","getSourceContainerSize","getOutlineOffset","getSourceGraphBounds","sourceScale","scaledGraphBounds","unscaledGraphBounds","unscaledFinderBounds","union","completeWidth","completeHeight","outlineScale","navView","scale2","scale3","hit","allowHandleBoundsCheck","getTranslateForEvent","viewRatio","checkTerminal","checkNeighbors","sourceValue","targetValue","checkType","attrValue","bubbling","isBubbling","setBubbling","getLayout","getCellsForChanges","executeLayoutForCells","sorted","layoutCells","getCellsForChange","executeLayout","setHorizontal","setAddEnabled","setResizeEnabled","isSwimlaneIgnored","isCellHorizontal","swimlaneAdded","parentHorizontal","resizeSwimlane","addEdges","translateState","revalidateState","maxCells","highlightEnabled","cloneEnabled","moveEnabled","currentDx","currentDy","updateCursor","selectEnabled","connectOnDrop","scrollOnMove","previewColor","htmlPreview","scaleGrid","rotationEnabled","isCloneEnabled","setCloneEnabled","isMoveEnabled","setMoveEnabled","isSelectEnabled","setSelectEnabled","isRemoveCellsFromParent","setRemoveCellsFromParent","getInitialCellForEvent","isDelayedSelection","delayedSelection","cellWasClicked","initialCell","createPreviewShape","useGuidesForEvent","vector","roundLength","removeHint","setHighlightColor","selectDelayed","destroyShapes","guides","shouldRemoveCellsFromParent","useLeftButtonForPanning","usePopupTrigger","ignoreCell","previewEnabled","useGrid","pinchEnabled","isPanningEnabled","setPanningEnabled","setPinchEnabled","isPanningTrigger","consumePanningTrigger","selectOnPopup","clearSelectionOnBackground","triggerX","triggerY","screenX","screenY","isSelectOnPopup","popupTrigger","getCellForPopupEvent","hotspotEnabled","validState","setHotspot","getHotspot","setHotspotEnabled","isHotspotEnabled","hasValidState","getValidState","getMarkedState","unmark","process","setCurrentState","isValidState","getMarkerColor","markCell","getStateToMark","maxHandlers","oldHandlers","isHandlerActive","moveIconFront","moveIconBack","connectImage","targetConnectImage","createTarget","constraintHandler","waypointsEnabled","ignoreMouseDown","connectIconOffset","drillHandler","mouseDownCounter","movePreviewAway","outlineConnect","insertBeforeSource","isInsertBefore","isCreateTarget","setCreateTarget","iconState","redrawIcons","icons","isConnectableCell","isConnecting","validateConnection","getConnectImage","isMoveIconToFrontForState","createIcons","currentState","getIconPosition","destroyIcons","selectedIcon","isStartEvent","currentConstraint","sourceConstraint","waypoints","isImmediateConnectSource","isOutlineConnectEvent","clientLeft","clientTop","gridX","gridY","isHighlightAt","updateCurrentState","isCellEnabled","setFocus","convertWaypoint","snapToPreview","pt2","getTargetPerimeterPoint","getSourcePerimeterPoint","originalPoint","drawPreview","hitsIcon","updateIcons","realPoints","targetPerimeter","sourcePerimeter","isStopEvent","addWaypointForEvent","checkConstraints","c1","c2","updatePreview","getEdgeColor","terminalInserted","createTargetVertex","getAlignmentTolerance","pointImage","focusIcons","focusHighlight","currentFocusArea","focusPoints","getImageForConstraint","isStateIgnored","destroyFocusHighlight","isKeepFocusEvent","getCellForEvent","existingEdge","mouseleaveHandler","grid","mouse","minDistSq","hl","createHighlightShape","cp","defaultOpacity","sharedDiv","currentY","createMouseEvent","ignoreGrid","getPosition","setPosition","copyStyle","processEvent","getTotalRotation","flipPoint","snapPoint","isHtmlRequired","initShape","ignore","singleSizer","handleImage","parentHighlightEnabled","rotationRaster","rotationCursor","manageSizers","constrainGroupByChildren","rotationHandleVSpacing","horizontalOffset","verticalOffset","selectionBounds","getSelectionBounds","createSelectionShape","sizers","labelShape","isRotationHandleVisible","rotationShape","customHandles","createCustomHandles","updateMinBounds","isCenteredEvent","minBounds","createParentHighlightShape","getSelectionColor","getSelectionStrokeWidth","isSelectionDashed","createSizerShape","isSizerVisible","moveSizerTo","getHandleForEvent","checkShape","isCustomHandleEvent","handle","isLivePreviewBorder","childOffsetX","childOffsetY","preview","hideSizers","edgeHandlers","setHandlesVisible","checkTolerance","roundAngle","moveLabel","rotateVertex","resizeVertex","currentAlpha","atan","raster","redrawHandles","unscaledBounds","dx3","dy3","dx4","dy4","dx5","dy5","updateLivePreview","tempState","rotateCell","rotateClick","constrained","moveChildren","centered","cdx","cdy","getHandlePadding","crs","da","getRotationHandlePosition","updateParentHighlight","parentHighlight","bends","removeEnabled","dblClickRemoveEnabled","mergeRemoveEnabled","straightRemoveEnabled","virtualBendsEnabled","virtualBendOpacity","preferHtml","snapToTerminals","manageLabelHandle","abspoints","getSelectionPoints","targetState","createBends","isVirtualBendsEnabled","virtualBends","createVirtualBends","createLabelHandleShape","initBend","isAddPointEvent","isRemovePointEvent","otherCell","isHandleVisible","bend","createHandleShape","removePoint","isHandleEnabled","labelHandleImage","isAddVirtualBendEvent","isTarget","isLabel","clonePreviewState","getSnapToTerminalTolerance","isSnapToTerminalsEvent","snapToPoint","snapToTerminal","getPreviewTerminalState","getPreviewPoints","checkRemove","updatePreviewState","targetConstraint","setPreviewColor","changeTerminalPoint","changePoints","isClone","addPointAt","getHandleFillColor","checkLabelHandle","xn","yn","bn","redrawInnerBends","destroyBends","flipEnabled","doubleClickOrientationResource","createVirtualBend","dblClickHandler","getCursorForBend","getCurrentPoints","pt0","pt1","rpts","straight","bindKey","code","bindShiftKey","bindControlKey","bindControlShiftKey","getFunction","isGraphEvent","boundFunction","ignoreTouchEvents","hideOnHover","setHideOnHover","getStateForEvent","stateSource","resetTimer","restart","keepOnTop","drawHighlight","getStrokeWidth","bindAction","createMenu","conditions","createConditions","addItems","condition","as","enabledCond","addAction","isCell","condNodes","insertFunction","pressed","addActionOption","mode","setMode","addPrototype","ptype","factory","installDropHandler","addVertex","horizontalFlow","edgeGeometry","sprite","loader","askZoomResource","lastSavedResource","currentFileResource","propertiesResource","tasksResource","helpResource","outlineResource","dblClickAction","swimlaneRequired","forcedInserting","templates","defaultEdge","defaultEdgeStyle","defaultGroup","groupBorderSize","filename","postParameterName","escapePostData","urlPost","urlImage","layoutDiagram","swimlaneSpacing","maintainSwimlanes","layoutSwimlanes","cycleAttributeIndex","tasks","tasksWindowImage","tasksTop","help","helpWindowImage","urlHelp","helpWidth","helpHeight","propertiesWidth","propertiesHeight","movePropertiesDialog","validating","isModified","setModified","getUrlImage","showProperties","showTasks","showHelp","showOutline","dec","decode","resetHistory","resetFirstTime","cookie","actionname","addTemplate","getTemplate","installDblClickHandler","installUndoHandler","installDrillHandler","installChangeHandler","installInsertHandler","createPopupMenu","createSwimlaneManager","createLayoutManager","swimlaneMgr","layoutMgr","swimlaneLayout","createSwimlaneLayout","diagramLayout","createDiagramLayout","setGraphContainer","rubberband","insertHandler","gs","setToolbarContainer","setStatusContainer","tstamp","toLocaleString","setStatus","setTitleContainer","getTitle","treeLayout","getRootTitle","createGroup","readGraphModel","getUrlPost","data","writeGraphModel","postDiagram","swapStyles","second","createProperties","isPropertiesVisible","yField","xField","widthField","heightField","texts","okFunction","cancelFunction","createTasks","refreshTasks","frame","modename","consumeCycleAttribute","cycleAttribute","isConstrainedMoving","mxCodecRegistry","codecs","aliases","register","codec","classname","addAlias","codecname","getCodec","elements","encodeDefaults","putObject","getObject","addElement","reference","into","encodeCell","isCellCodec","decodeCell","restoreStructures","decoder","insertIntoGraph","cloneTemplate","getFieldName","attributename","mapped","getAttributeName","fieldname","isExcluded","isReference","beforeEncode","encodeObject","afterEncode","encodeValue","writeAttribute","writePrimitiveAttribute","writeComplexAttribute","convertAttributeToXml","isBooleanAttribute","convertAttributeFromXml","isNumericAttribute","beforeDecode","decodeNode","afterDecode","decodeAttributes","decodeChildren","decodeAttribute","isIgnoredAttribute","processInclude","decodeChild","getFieldTemplate","addObjectValue","isWrite","ref","object","rootNode","decodeRoot","rootCell","childRef","mxGenericChangeCodec","variable","mxStylesheetCodec","styleNode","getStringValue","mxDefaultToolbarCodec","act","inc","role","decodeTemplates","decodeUi","setMapContainer"],"mappings":"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","file":"mxClient.js","sourcesContent":["/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\nvar mxClient =\n{\n\t/**\n\t * Class: mxClient\n\t *\n\t * Bootstrapping mechanism for the mxGraph thin client. The production version\n\t * of this file contains all code required to run the mxGraph thin client, as\n\t * well as global constants to identify the browser and operating system in\n\t * use. You may have to load chrome://global/content/contentAreaUtils.js in\n\t * your page to disable certain security restrictions in Mozilla.\n\t * \n\t * Variable: VERSION\n\t *\n\t * Contains the current version of the mxGraph library. The strings that\n\t * communicate versions of mxGraph use the following format.\n\t * \n\t * versionMajor.versionMinor.buildNumber.revisionNumber\n\t * \n\t * Current version is 3.9.12.\n\t */\n\tVERSION: '3.9.12',\n\n\t/**\n\t * Variable: IS_IE\n\t *\n\t * True if the current browser is Internet Explorer 10 or below. Use <mxClient.IS_IE11>\n\t * to detect IE 11.\n\t */\n\tIS_IE: navigator.userAgent.indexOf('MSIE') >= 0,\n\n\t/**\n\t * Variable: IS_IE6\n\t *\n\t * True if the current browser is Internet Explorer 6.x.\n\t */\n\tIS_IE6: navigator.userAgent.indexOf('MSIE 6') >= 0,\n\n\t/**\n\t * Variable: IS_IE11\n\t *\n\t * True if the current browser is Internet Explorer 11.x.\n\t */\n\tIS_IE11: !!navigator.userAgent.match(/Trident\\/7\\./),\n\n\t/**\n\t * Variable: IS_EDGE\n\t *\n\t * True if the current browser is Microsoft Edge.\n\t */\n\tIS_EDGE: !!navigator.userAgent.match(/Edge\\//),\n\n\t/**\n\t * Variable: IS_QUIRKS\n\t *\n\t * True if the current browser is Internet Explorer and it is in quirks mode.\n\t */\n\tIS_QUIRKS: navigator.userAgent.indexOf('MSIE') >= 0 && (document.documentMode == null || document.documentMode == 5),\n\n\t/**\n\t * Variable: IS_EM\n\t * \n\t * True if the browser is IE11 in enterprise mode (IE8 standards mode).\n\t */\n\tIS_EM: 'spellcheck' in document.createElement('textarea') && document.documentMode == 8,\n\n\t/**\n\t * Variable: VML_PREFIX\n\t * \n\t * Prefix for VML namespace in node names. Default is 'v'.\n\t */\n\tVML_PREFIX: 'v',\n\n\t/**\n\t * Variable: OFFICE_PREFIX\n\t * \n\t * Prefix for VML office namespace in node names. Default is 'o'.\n\t */\n\tOFFICE_PREFIX: 'o',\n\n\t/**\n\t * Variable: IS_NS\n\t *\n\t * True if the current browser is Netscape (including Firefox).\n\t */\n  \tIS_NS: navigator.userAgent.indexOf('Mozilla/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('MSIE') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Edge/') < 0,\n\n\t/**\n\t * Variable: IS_OP\n\t *\n\t * True if the current browser is Opera.\n\t */\n  \tIS_OP: navigator.userAgent.indexOf('Opera/') >= 0 ||\n  \t\tnavigator.userAgent.indexOf('OPR/') >= 0,\n\n\t/**\n\t * Variable: IS_OT\n\t *\n\t * True if -o-transform is available as a CSS style, ie for Opera browsers\n\t * based on a Presto engine with version 2.5 or later.\n\t */\n  \tIS_OT: navigator.userAgent.indexOf('Presto/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.4.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.3.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.2.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.0.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/1.') < 0,\n  \t\n\t/**\n\t * Variable: IS_SF\n\t *\n\t * True if the current browser is Safari.\n\t */\n  \tIS_SF: navigator.userAgent.indexOf('AppleWebKit/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Chrome/') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Edge/') < 0,\n  \t\n\t/**\n\t * Variable: IS_IOS\n\t * \n\t * Returns true if the user agent is an iPad, iPhone or iPod.\n\t */\n  \tIS_IOS: (navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false),\n  \t\t\n\t/**\n\t * Variable: IS_GC\n\t *\n\t * True if the current browser is Google Chrome.\n\t */\n  \tIS_GC: navigator.userAgent.indexOf('Chrome/') >= 0 &&\n\t\tnavigator.userAgent.indexOf('Edge/') < 0,\n\t\n\t/**\n\t * Variable: IS_CHROMEAPP\n\t *\n\t * True if the this is running inside a Chrome App.\n\t */\n  \tIS_CHROMEAPP: window.chrome != null && chrome.app != null && chrome.app.runtime != null,\n\t\t\n\t/**\n\t * Variable: IS_FF\n\t *\n\t * True if the current browser is Firefox.\n\t */\n  \tIS_FF: navigator.userAgent.indexOf('Firefox/') >= 0,\n  \t\n\t/**\n\t * Variable: IS_MT\n\t *\n\t * True if -moz-transform is available as a CSS style. This is the case\n\t * for all Firefox-based browsers newer than or equal 3, such as Camino,\n\t * Iceweasel, Seamonkey and Iceape.\n\t */\n  \tIS_MT: (navigator.userAgent.indexOf('Firefox/') >= 0 &&\n\t\tnavigator.userAgent.indexOf('Firefox/1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Firefox/2.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('Iceweasel/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceweasel/1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceweasel/2.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('SeaMonkey/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('SeaMonkey/1.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('Iceape/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceape/1.') < 0),\n\n\t/**\n\t * Variable: IS_SVG\n\t *\n\t * True if the browser supports SVG.\n\t */\n  \tIS_SVG: navigator.userAgent.indexOf('Firefox/') >= 0 || // FF and Camino\n\t  \tnavigator.userAgent.indexOf('Iceweasel/') >= 0 || // Firefox on Debian\n\t  \tnavigator.userAgent.indexOf('Seamonkey/') >= 0 || // Firefox-based\n\t  \tnavigator.userAgent.indexOf('Iceape/') >= 0 || // Seamonkey on Debian\n\t  \tnavigator.userAgent.indexOf('Galeon/') >= 0 || // Gnome Browser (old)\n\t  \tnavigator.userAgent.indexOf('Epiphany/') >= 0 || // Gnome Browser (new)\n\t  \tnavigator.userAgent.indexOf('AppleWebKit/') >= 0 || // Safari/Google Chrome\n\t  \tnavigator.userAgent.indexOf('Gecko/') >= 0 || // Netscape/Gecko\n\t  \tnavigator.userAgent.indexOf('Opera/') >= 0 || // Opera\n\t  \t(document.documentMode != null && document.documentMode >= 9), // IE9+\n\n\t/**\n\t * Variable: NO_FO\n\t *\n\t * True if foreignObject support is not available. This is the case for\n\t * Opera, older SVG-based browsers and all versions of IE.\n\t */\n  \tNO_FO: !document.createElementNS || document.createElementNS('http://www.w3.org/2000/svg',\n  \t\t'foreignObject') != '[object SVGForeignObjectElement]' || navigator.userAgent.indexOf('Opera/') >= 0,\n\n\t/**\n\t * Variable: IS_VML\n\t *\n\t * True if the browser supports VML.\n\t */\n  \tIS_VML: navigator.appName.toUpperCase() == 'MICROSOFT INTERNET EXPLORER',\n\n\t/**\n\t * Variable: IS_WIN\n\t *\n\t * True if the client is a Windows.\n\t */\n  \tIS_WIN: navigator.appVersion.indexOf('Win') > 0,\n\n\t/**\n\t * Variable: IS_MAC\n\t *\n\t * True if the client is a Mac.\n\t */\n  \tIS_MAC: navigator.appVersion.indexOf('Mac') > 0,\n\n\t/**\n\t * Variable: IS_TOUCH\n\t * \n\t * True if this device supports touchstart/-move/-end events (Apple iOS,\n\t * Android, Chromebook and Chrome Browser on touch-enabled devices).\n\t */\n  \tIS_TOUCH: 'ontouchstart' in document.documentElement,\n\n\t/**\n\t * Variable: IS_POINTER\n\t * \n\t * True if this device supports Microsoft pointer events (always false on Macs).\n\t */\n  \tIS_POINTER: window.PointerEvent != null && !(navigator.appVersion.indexOf('Mac') > 0),\n\n\t/**\n\t * Variable: IS_LOCAL\n\t *\n\t * True if the documents location does not start with http:// or https://.\n\t */\n  \tIS_LOCAL: document.location.href.indexOf('http://') < 0 &&\n  \t\t\t  document.location.href.indexOf('https://') < 0,\n\n\t/**\n\t * Variable: defaultBundles\n\t * \n\t * Contains the base names of the default bundles if mxLoadResources is false.\n\t */\n  \tdefaultBundles: [],\n\n\t/**\n\t * Function: isBrowserSupported\n\t *\n\t * Returns true if the current browser is supported, that is, if\n\t * <mxClient.IS_VML> or <mxClient.IS_SVG> is true.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * if (!mxClient.isBrowserSupported())\n\t * {\n\t *   mxUtils.error('Browser is not supported!', 200, false);\n\t * }\n\t * (end)\n\t */\n\tisBrowserSupported: function()\n\t{\n\t\treturn mxClient.IS_VML || mxClient.IS_SVG;\n\t},\n\n\t/**\n\t * Function: link\n\t *\n\t * Adds a link node to the head of the document. Use this\n\t * to add a stylesheet to the page as follows:\n\t *\n\t * (code)\n\t * mxClient.link('stylesheet', filename);\n\t * (end)\n\t *\n\t * where filename is the (relative) URL of the stylesheet. The charset\n\t * is hardcoded to ISO-8859-1 and the type is text/css.\n\t * \n\t * Parameters:\n\t * \n\t * rel - String that represents the rel attribute of the link node.\n\t * href - String that represents the href attribute of the link node.\n\t * doc - Optional parent document of the link node.\n\t */\n\tlink: function(rel, href, doc)\n\t{\n\t\tdoc = doc || document;\n\n\t\t// Workaround for Operation Aborted in IE6 if base tag is used in head\n\t\tif (mxClient.IS_IE6)\n\t\t{\n\t\t\tdoc.write('<link rel=\"' + rel + '\" href=\"' + href + '\" charset=\"UTF-8\" type=\"text/css\"/>');\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tvar link = doc.createElement('link');\n\t\t\t\n\t\t\tlink.setAttribute('rel', rel);\n\t\t\tlink.setAttribute('href', href);\n\t\t\tlink.setAttribute('charset', 'UTF-8');\n\t\t\tlink.setAttribute('type', 'text/css');\n\t\t\t\n\t\t\tvar head = doc.getElementsByTagName('head')[0];\n\t   \t\thead.appendChild(link);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: loadResources\n\t * \n\t * Helper method to load the default bundles if mxLoadResources is false.\n\t * \n\t * Parameters:\n\t * \n\t * fn - Function to call after all resources have been loaded.\n\t * lan - Optional string to pass to <mxResources.add>.\n\t */\n\tloadResources: function(fn, lan)\n\t{\n\t\tvar pending = mxClient.defaultBundles.length;\n\t\t\n\t\tfunction callback()\n\t\t{\n\t\t\tif (--pending == 0)\n\t\t\t{\n\t\t\t\tfn();\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < mxClient.defaultBundles.length; i++)\n\t\t{\n\t\t\tmxResources.add(mxClient.defaultBundles[i], lan, callback);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: include\n\t *\n\t * Dynamically adds a script node to the document header.\n\t * \n\t * In production environments, the includes are resolved in the mxClient.js\n\t * file to reduce the number of requests required for client startup. This\n\t * function should only be used in development environments, but not in\n\t * production systems.\n\t */\n\tinclude: function(src)\n\t{\n\t\tdocument.write('<script src=\"'+src+'\"></script>');\n\t}\n};\n\n/**\n * Variable: mxLoadResources\n * \n * Optional global config variable to toggle loading of the two resource files\n * in <mxGraph> and <mxEditor>. Default is true. NOTE: This is a global variable,\n * not a variable of mxClient. If this is false, you can use <mxClient.loadResources>\n * with its callback to load the default bundles asynchronously.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadResources = false;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxLoadResources) == 'undefined')\n{\n\tmxLoadResources = true;\n}\n\n/**\n * Variable: mxForceIncludes\n * \n * Optional global config variable to force loading the JavaScript files in\n * development mode. Default is undefined. NOTE: This is a global variable,\n * not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadResources = true;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxForceIncludes) == 'undefined')\n{\n\tmxForceIncludes = false;\n}\n\n/**\n * Variable: mxResourceExtension\n * \n * Optional global config variable to specify the extension of resource files.\n * Default is true. NOTE: This is a global variable, not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxResourceExtension = '.txt';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxResourceExtension) == 'undefined')\n{\n\tmxResourceExtension = '.txt';\n}\n\n/**\n * Variable: mxLoadStylesheets\n * \n * Optional global config variable to toggle loading of the CSS files when\n * the library is initialized. Default is true. NOTE: This is a global variable,\n * not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadStylesheets = false;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxLoadStylesheets) == 'undefined')\n{\n\tmxLoadStylesheets = true;\n}\n\n/**\n * Variable: basePath\n *\n * Basepath for all URLs in the core without trailing slash. Default is '.'.\n * Set mxBasePath prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxBasePath = '/path/to/core/directory';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n * \n * When using a relative path, the path is relative to the URL of the page that\n * contains the assignment. Trailing slashes are automatically removed.\n */\nif (typeof(mxBasePath) != 'undefined' && mxBasePath.length > 0)\n{\n\t// Adds a trailing slash if required\n\tif (mxBasePath.substring(mxBasePath.length - 1) == '/')\n\t{\n\t\tmxBasePath = mxBasePath.substring(0, mxBasePath.length - 1);\n\t}\n\n\tmxClient.basePath = mxBasePath;\n}\nelse\n{\n\tmxClient.basePath = '.';\n}\n\n/**\n * Variable: imageBasePath\n *\n * Basepath for all images URLs in the core without trailing slash. Default is\n * <mxClient.basePath> + '/images'. Set mxImageBasePath prior to loading the\n * mxClient library as follows to override this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxImageBasePath = '/path/to/image/directory';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n * \n * When using a relative path, the path is relative to the URL of the page that\n * contains the assignment. Trailing slashes are automatically removed.\n */\nif (typeof(mxImageBasePath) != 'undefined' && mxImageBasePath.length > 0)\n{\n\t// Adds a trailing slash if required\n\tif (mxImageBasePath.substring(mxImageBasePath.length - 1) == '/')\n\t{\n\t\tmxImageBasePath = mxImageBasePath.substring(0, mxImageBasePath.length - 1);\n\t}\n\n\tmxClient.imageBasePath = mxImageBasePath;\n}\nelse\n{\n\tmxClient.imageBasePath = mxClient.basePath + '/images';\t\n}\n\n/**\n * Variable: language\n *\n * Defines the language of the client, eg. en for english, de for german etc.\n * The special value 'none' will disable all built-in internationalization and\n * resource loading. See <mxResources.getSpecialBundle> for handling identifiers\n * with and without a dash.\n * \n * Set mxLanguage prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxLanguage = 'en';\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n * \n * If internationalization is disabled, then the following variables should be\n * overridden to reflect the current language of the system. These variables are\n * cleared when i18n is disabled.\n * <mxEditor.askZoomResource>, <mxEditor.lastSavedResource>,\n * <mxEditor.currentFileResource>, <mxEditor.propertiesResource>,\n * <mxEditor.tasksResource>, <mxEditor.helpResource>, <mxEditor.outlineResource>,\n * <mxElbowEdgeHandler.doubleClickOrientationResource>, <mxUtils.errorResource>,\n * <mxUtils.closeResource>, <mxGraphSelectionModel.doneResource>,\n * <mxGraphSelectionModel.updatingSelectionResource>, <mxGraphView.doneResource>,\n * <mxGraphView.updatingDocumentResource>, <mxCellRenderer.collapseExpandResource>,\n * <mxGraph.containsValidationErrorsResource> and\n * <mxGraph.alreadyConnectedResource>.\n */\nif (typeof(mxLanguage) != 'undefined' && mxLanguage != null)\n{\n\tmxClient.language = mxLanguage;\n}\nelse\n{\n\tmxClient.language = (mxClient.IS_IE) ? navigator.userLanguage : navigator.language;\n}\n\n/**\n * Variable: defaultLanguage\n * \n * Defines the default language which is used in the common resource files. Any\n * resources for this language will only load the common resource file, but not\n * the language-specific resource file. Default is 'en'.\n * \n * Set mxDefaultLanguage prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxDefaultLanguage = 'de';\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxDefaultLanguage) != 'undefined' && mxDefaultLanguage != null)\n{\n\tmxClient.defaultLanguage = mxDefaultLanguage;\n}\nelse\n{\n\tmxClient.defaultLanguage = 'en';\n}\n\n// Adds all required stylesheets and namespaces\nif (mxLoadStylesheets)\n{\n\tmxClient.link('stylesheet', mxClient.basePath + '/css/common.css');\n}\n\n/**\n * Variable: languages\n *\n * Defines the optional array of all supported language extensions. The default\n * language does not have to be part of this list. See\n * <mxResources.isLanguageSupported>.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxLanguages = ['de', 'it', 'fr'];\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n * \n * This is used to avoid unnecessary requests to language files, ie. if a 404\n * will be returned.\n */\nif (typeof(mxLanguages) != 'undefined' && mxLanguages != null)\n{\n\tmxClient.languages = mxLanguages;\n}\n\n// Adds required namespaces, stylesheets and memory handling for older IE browsers\nif (mxClient.IS_VML)\n{\n\tif (mxClient.IS_SVG)\n\t{\n\t\tmxClient.IS_VML = false;\n\t}\n\telse\n\t{\n\t\t// Enables support for IE8 standards mode. Note that this requires all attributes for VML\n\t\t// elements to be set using direct notation, ie. node.attr = value. The use of setAttribute\n\t\t// is not possible.\n\t\tif (document.documentMode == 8)\n\t\t{\n\t\t\tdocument.namespaces.add(mxClient.VML_PREFIX, 'urn:schemas-microsoft-com:vml', '#default#VML');\n\t\t\tdocument.namespaces.add(mxClient.OFFICE_PREFIX, 'urn:schemas-microsoft-com:office:office', '#default#VML');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.namespaces.add(mxClient.VML_PREFIX, 'urn:schemas-microsoft-com:vml');\n\t\t\tdocument.namespaces.add(mxClient.OFFICE_PREFIX, 'urn:schemas-microsoft-com:office:office');\n\t\t}\n\n\t\t// Workaround for limited number of stylesheets in IE (does not work in standards mode)\n\t\tif (mxClient.IS_QUIRKS && document.styleSheets.length >= 30)\n\t\t{\n\t\t\t(function()\n\t\t\t{\n\t\t\t\tvar node = document.createElement('style');\n\t\t\t\tnode.type = 'text/css';\n\t\t\t\tnode.styleSheet.cssText = mxClient.VML_PREFIX + '\\\\:*{behavior:url(#default#VML)}' +\n\t\t        \tmxClient.OFFICE_PREFIX + '\\\\:*{behavior:url(#default#VML)}';\n\t\t        document.getElementsByTagName('head')[0].appendChild(node);\n\t\t\t})();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.createStyleSheet().cssText = mxClient.VML_PREFIX + '\\\\:*{behavior:url(#default#VML)}' +\n\t\t    \tmxClient.OFFICE_PREFIX + '\\\\:*{behavior:url(#default#VML)}';\n\t\t}\n\t    \n\t    if (mxLoadStylesheets)\n\t    {\n\t    \tmxClient.link('stylesheet', mxClient.basePath + '/css/explorer.css');\n\t    }\n\t}\n}\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxLog =\n{\n\t/**\n\t * Class: mxLog\n\t * \n\t * A singleton class that implements a simple console.\n\t * \n\t * Variable: consoleName\n\t * \n\t * Specifies the name of the console window. Default is 'Console'.\n\t */\n\tconsoleName: 'Console',\n\t\n\t/**\n\t * Variable: TRACE\n\t * \n\t * Specified if the output for <enter> and <leave> should be visible in the\n\t * console. Default is false.\n\t */\n\tTRACE: false,\n\n\t/**\n\t * Variable: DEBUG\n\t * \n\t * Specifies if the output for <debug> should be visible in the console.\n\t * Default is true.\n\t */\n\tDEBUG: true,\n\n\t/**\n\t * Variable: WARN\n\t * \n\t * Specifies if the output for <warn> should be visible in the console.\n\t * Default is true.\n\t */\n\tWARN: true,\n\n\t/**\n\t * Variable: buffer\n\t * \n\t * Buffer for pre-initialized content.\n\t */\n\tbuffer: '',\n\t\n\t/**\n\t * Function: init\n\t *\n\t * Initializes the DOM node for the console. This requires document.body to\n\t * point to a non-null value. This is called from within <setVisible> if the\n\t * log has not yet been initialized.\n\t */\n\tinit: function()\n\t{\n\t\tif (mxLog.window == null && document.body != null)\n\t\t{\n\t\t\tvar title = mxLog.consoleName + ' - mxGraph ' + mxClient.VERSION;\n\n\t\t\t// Creates a table that maintains the layout\n\t\t\tvar table = document.createElement('table');\n\t\t\ttable.setAttribute('width', '100%');\n\t\t\ttable.setAttribute('height', '100%');\n\n\t\t\tvar tbody = document.createElement('tbody');\n\t\t\tvar tr = document.createElement('tr');\n\t\t\tvar td = document.createElement('td');\n\t\t\ttd.style.verticalAlign = 'top';\n\t\t\t\t\n\t\t\t// Adds the actual console as a textarea\n\t\t\tmxLog.textarea = document.createElement('textarea');\n\t\t\tmxLog.textarea.setAttribute('wrap', 'off');\n\t\t\tmxLog.textarea.setAttribute('readOnly', 'true');\n\t\t\tmxLog.textarea.style.height = '100%';\n\t\t\tmxLog.textarea.style.resize = 'none';\n\t\t\tmxLog.textarea.value = mxLog.buffer;\n\n\t\t\t// Workaround for wrong width in standards mode\n\t\t\tif (mxClient.IS_NS && document.compatMode != 'BackCompat')\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.width = '99%';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.width = '100%';\n\t\t\t}\n\t\t\t\n\t\t\ttd.appendChild(mxLog.textarea);\n\t\t\ttr.appendChild(td);\n\t\t\ttbody.appendChild(tr);\n\n\t\t\t// Creates the container div\n\t\t\ttr = document.createElement('tr');\n\t\t\tmxLog.td = document.createElement('td');\n\t\t\tmxLog.td.style.verticalAlign = 'top';\n\t\t\tmxLog.td.setAttribute('height', '30px');\n\t\t\t\n\t\t\ttr.appendChild(mxLog.td);\n\t\t\ttbody.appendChild(tr);\n\t\t\ttable.appendChild(tbody);\n\n\t\t\t// Adds various debugging buttons\n\t\t\tmxLog.addButton('Info', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.info();\n\t\t\t});\n\t\t\n\t\t\tmxLog.addButton('DOM', function (evt)\n\t\t\t{\n\t\t\t\tvar content = mxUtils.getInnerHtml(document.body);\n\t\t\t\tmxLog.debug(content);\n\t\t\t});\n\t\n\t\t\tmxLog.addButton('Trace', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.TRACE = !mxLog.TRACE;\n\t\t\t\t\n\t\t\t\tif (mxLog.TRACE)\n\t\t\t\t{\n\t\t\t\t\tmxLog.debug('Tracing enabled');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmxLog.debug('Tracing disabled');\n\t\t\t\t}\n\t\t\t});\t\n\n\t\t\tmxLog.addButton('Copy', function (evt)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmxUtils.copy(mxLog.textarea.value);\n\t\t\t\t}\n\t\t\t\tcatch (err)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.alert(err);\n\t\t\t\t}\n\t\t\t});\t\t\t\n\n\t\t\tmxLog.addButton('Show', function (evt)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmxUtils.popup(mxLog.textarea.value);\n\t\t\t\t}\n\t\t\t\tcatch (err)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.alert(err);\n\t\t\t\t}\n\t\t\t});\t\n\t\t\t\n\t\t\tmxLog.addButton('Clear', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.textarea.value = '';\n\t\t\t});\n\n\t\t\t// Cross-browser code to get window size\n\t\t\tvar h = 0;\n\t\t\tvar w = 0;\n\t\t\t\n\t\t\tif (typeof(window.innerWidth) === 'number')\n\t\t\t{\n\t\t\t\th = window.innerHeight;\n\t\t\t\tw = window.innerWidth;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\th = (document.documentElement.clientHeight || document.body.clientHeight);\n\t\t\t\tw = document.body.clientWidth;\n\t\t\t}\n\n\t\t\tmxLog.window = new mxWindow(title, table, Math.max(0, w - 320), Math.max(0, h - 210), 300, 160);\n\t\t\tmxLog.window.setMaximizable(true);\n\t\t\tmxLog.window.setScrollable(false);\n\t\t\tmxLog.window.setResizable(true);\n\t\t\tmxLog.window.setClosable(true);\n\t\t\tmxLog.window.destroyOnClose = false;\n\t\t\t\n\t\t\t// Workaround for ignored textarea height in various setups\n\t\t\tif (((mxClient.IS_NS || mxClient.IS_IE) && !mxClient.IS_GC &&\n\t\t\t\t!mxClient.IS_SF && document.compatMode != 'BackCompat') ||\n\t\t\t\tdocument.documentMode == 11)\n\t\t\t{\n\t\t\t\tvar elt = mxLog.window.getElement();\n\t\t\t\t\n\t\t\t\tvar resizeHandler = function(sender, evt)\n\t\t\t\t{\n\t\t\t\t\tmxLog.textarea.style.height = Math.max(0, elt.offsetHeight - 70) + 'px';\n\t\t\t\t}; \n\t\t\t\t\n\t\t\t\tmxLog.window.addListener(mxEvent.RESIZE_END, resizeHandler);\n\t\t\t\tmxLog.window.addListener(mxEvent.MAXIMIZE, resizeHandler);\n\t\t\t\tmxLog.window.addListener(mxEvent.NORMALIZE, resizeHandler);\n\n\t\t\t\tmxLog.textarea.style.height = '92px';\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: info\n\t * \n\t * Writes the current navigator information to the console.\n\t */\n\tinfo: function()\n\t{\n\t\tmxLog.writeln(mxUtils.toString(navigator));\n\t},\n\t\t\t\n\t/**\n\t * Function: addButton\n\t * \n\t * Adds a button to the console using the given label and function.\n\t */\n\taddButton: function(lab, funct)\n\t{\n\t\tvar button = document.createElement('button');\n\t\tmxUtils.write(button, lab);\n\t\tmxEvent.addListener(button, 'click', funct);\n\t\tmxLog.td.appendChild(button);\n\t},\n\t\t\t\t\n\t/**\n\t * Function: isVisible\n\t * \n\t * Returns true if the console is visible.\n\t */\n\tisVisible: function()\n\t{\n\t\tif (mxLog.window != null)\n\t\t{\n\t\t\treturn mxLog.window.isVisible();\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\n\t/**\n\t * Function: show\n\t * \n\t * Shows the console.\n\t */\n\tshow: function()\n\t{\n\t\tmxLog.setVisible(true);\n\t},\n\n\t/**\n\t * Function: setVisible\n\t * \n\t * Shows or hides the console.\n\t */\n\tsetVisible: function(visible)\n\t{\n\t\tif (mxLog.window == null)\n\t\t{\n\t\t\tmxLog.init();\n\t\t}\n\n\t\tif (mxLog.window != null)\n\t\t{\n\t\t\tmxLog.window.setVisible(visible);\n\t\t}\n\t},\n\n\t/**\n\t * Function: enter\n\t * \n\t * Writes the specified string to the console\n\t * if <TRACE> is true and returns the current \n\t * time in milliseconds.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * var t0 = mxLog.enter('Hello');\n\t * // Do something\n\t * mxLog.leave('World!', t0);\n\t * (end)\n\t */\n\tenter: function(string)\n\t{\n\t\tif (mxLog.TRACE)\n\t\t{\n\t\t\tmxLog.writeln('Entering '+string);\n\t\t\t\n\t\t\treturn new Date().getTime();\n\t\t}\n\t},\n\n\t/**\n\t * Function: leave\n\t * \n\t * Writes the specified string to the console\n\t * if <TRACE> is true and computes the difference\n\t * between the current time and t0 in milliseconds.\n\t * See <enter> for an example.\n\t */\n\tleave: function(string, t0)\n\t{\n\t\tif (mxLog.TRACE)\n\t\t{\n\t\t\tvar dt = (t0 != 0) ? ' ('+(new Date().getTime() - t0)+' ms)' : '';\n\t\t\tmxLog.writeln('Leaving '+string+dt);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: debug\n\t * \n\t * Adds all arguments to the console if <DEBUG> is enabled.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * mxLog.debug('Hello, World!');\n\t * (end)\n\t */\n\tdebug: function()\n\t{\n\t\tif (mxLog.DEBUG)\n\t\t{\n\t\t\tmxLog.writeln.apply(this, arguments);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: warn\n\t * \n\t * Adds all arguments to the console if <WARN> is enabled.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * mxLog.warn('Hello, World!');\n\t * (end)\n\t */\n\twarn: function()\n\t{\n\t\tif (mxLog.WARN)\n\t\t{\n\t\t\tmxLog.writeln.apply(this, arguments);\n\t\t}\n\t},\n\n\t/**\n\t * Function: write\n\t * \n\t * Adds the specified strings to the console.\n\t */\n\twrite: function()\n\t{\n\t\tvar string = '';\n\t\t\n\t\tfor (var i = 0; i < arguments.length; i++)\n\t\t{\n\t\t\tstring += arguments[i];\n\t\t\t\n\t\t\tif (i < arguments.length - 1)\n\t\t\t{\n\t\t\t\tstring += ' ';\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (mxLog.textarea != null)\n\t\t{\n\t\t\tmxLog.textarea.value = mxLog.textarea.value + string;\n\n\t\t\t// Workaround for no update in Presto 2.5.22 (Opera 10.5)\n\t\t\tif (navigator.userAgent.indexOf('Presto/2.5') >= 0)\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.visibility = 'hidden';\n\t\t\t\tmxLog.textarea.style.visibility = 'visible';\n\t\t\t}\n\t\t\t\n\t\t\tmxLog.textarea.scrollTop = mxLog.textarea.scrollHeight;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxLog.buffer += string;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: writeln\n\t * \n\t * Adds the specified strings to the console, appending a linefeed at the\n\t * end of each string.\n\t */\n\twriteln: function()\n\t{\n\t\tvar string = '';\n\t\t\n\t\tfor (var i = 0; i < arguments.length; i++)\n\t\t{\n\t\t\tstring += arguments[i];\n\t\t\t\n\t\t\tif (i < arguments.length - 1)\n\t\t\t{\n\t\t\t\tstring += ' ';\n\t\t\t}\n\t\t}\n\n\t\tmxLog.write(string + '\\n');\n\t}\n\t\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxObjectIdentity =\n{\n\t/**\n\t * Class: mxObjectIdentity\n\t * \n\t * Identity for JavaScript objects and functions. This is implemented using\n\t * a simple incrementing counter which is stored in each object under\n\t * <FIELD_NAME>.\n\t * \n\t * The identity for an object does not change during its lifecycle.\n\t * \n\t * Variable: FIELD_NAME\n\t * \n\t * Name of the field to be used to store the object ID. Default is\n\t * <code>mxObjectId</code>.\n\t */\n\tFIELD_NAME: 'mxObjectId',\n\n\t/**\n\t * Variable: counter\n\t * \n\t * Current counter.\n\t */\n\tcounter: 0,\n\n\t/**\n\t * Function: get\n\t * \n\t * Returns the ID for the given object or function or null if no object\n\t * is specified.\n\t */\n\tget: function(obj)\n\t{\n\t\tif (obj != null)\n\t\t{\n\t\t\tif (obj[mxObjectIdentity.FIELD_NAME] == null)\n\t\t\t{\n\t\t\t\tif (typeof obj === 'object')\n\t\t\t\t{\n\t\t\t\t\tvar ctor = mxUtils.getFunctionName(obj.constructor);\n\t\t\t\t\tobj[mxObjectIdentity.FIELD_NAME] = ctor + '#' + mxObjectIdentity.counter++;\n\t\t\t\t}\n\t\t\t\telse if (typeof obj === 'function')\n\t\t\t\t{\n\t\t\t\t\tobj[mxObjectIdentity.FIELD_NAME] = 'Function#' + mxObjectIdentity.counter++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn obj[mxObjectIdentity.FIELD_NAME];\n\t\t}\n\t\t\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: clear\n\t * \n\t * Deletes the ID from the given object or function.\n\t */\n\tclear: function(obj)\n\t{\n\t\tif (typeof(obj) === 'object' || typeof obj === 'function')\n\t\t{\n\t\t\tdelete obj[mxObjectIdentity.FIELD_NAME];\n\t\t}\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDictionary\n *\n * A wrapper class for an associative array with object keys. Note: This\n * implementation uses <mxObjectIdentitiy> to turn object keys into strings.\n * \n * Constructor: mxEventSource\n *\n * Constructs a new dictionary which allows object to be used as keys.\n */\nfunction mxDictionary()\n{\n\tthis.clear();\n};\n\n/**\n * Function: map\n *\n * Stores the (key, value) pairs in this dictionary.\n */\nmxDictionary.prototype.map = null;\n\n/**\n * Function: clear\n *\n * Clears the dictionary.\n */\nmxDictionary.prototype.clear = function()\n{\n\tthis.map = {};\n};\n\n/**\n * Function: get\n *\n * Returns the value for the given key.\n */\nmxDictionary.prototype.get = function(key)\n{\n\tvar id = mxObjectIdentity.get(key);\n\t\n\treturn this.map[id];\n};\n\n/**\n * Function: put\n *\n * Stores the value under the given key and returns the previous\n * value for that key.\n */\nmxDictionary.prototype.put = function(key, value)\n{\n\tvar id = mxObjectIdentity.get(key);\n\tvar previous = this.map[id];\n\tthis.map[id] = value;\n\t\n\treturn previous;\n};\n\n/**\n * Function: remove\n *\n * Removes the value for the given key and returns the value that\n * has been removed.\n */\nmxDictionary.prototype.remove = function(key)\n{\n\tvar id = mxObjectIdentity.get(key);\n\tvar previous = this.map[id];\n\tdelete this.map[id];\n\t\n\treturn previous;\n};\n\n/**\n * Function: getKeys\n *\n * Returns all keys as an array.\n */\nmxDictionary.prototype.getKeys = function()\n{\n\tvar result = [];\n\t\n\tfor (var key in this.map)\n\t{\n\t\tresult.push(key);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getValues\n *\n * Returns all values as an array.\n */\nmxDictionary.prototype.getValues = function()\n{\n\tvar result = [];\n\t\n\tfor (var key in this.map)\n\t{\n\t\tresult.push(this.map[key]);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: visit\n *\n * Visits all entries in the dictionary using the given function with the\n * following signature: function(key, value) where key is a string and\n * value is an object.\n * \n * Parameters:\n * \n * visitor - A function that takes the key and value as arguments.\n */\nmxDictionary.prototype.visit = function(visitor)\n{\n\tfor (var key in this.map)\n\t{\n\t\tvisitor(key, this.map[key]);\n\t}\n};\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\nvar mxResources =\n{\n\t/**\n\t * Class: mxResources\n\t * \n\t * Implements internationalization. You can provide any number of \n\t * resource files on the server using the following format for the \n\t * filename: name[-en].properties. The en stands for any lowercase \n\t * 2-character language shortcut (eg. de for german, fr for french).\n\t *\n\t * If the optional language extension is omitted, then the file is used as a \n\t * default resource which is loaded in all cases. If a properties file for a \n\t * specific language exists, then it is used to override the settings in the \n\t * default resource. All entries in the file are of the form key=value. The\n\t * values may then be accessed in code via <get>. Lines without \n\t * equal signs in the properties files are ignored.\n\t *\n\t * Resource files may either be added programmatically using\n\t * <add> or via a resource tag in the UI section of the \n\t * editor configuration file, eg:\n\t * \n\t * (code)\n\t * <mxEditor>\n\t *   <ui>\n\t *     <resource basename=\"examples/resources/mxWorkflow\"/>\n\t * (end)\n\t * \n\t * The above element will load examples/resources/mxWorkflow.properties as well\n\t * as the language specific file for the current language, if it exists.\n\t * \n\t * Values may contain placeholders of the form {1}...{n} where each placeholder\n\t * is replaced with the value of the corresponding array element in the params\n\t * argument passed to <mxResources.get>. The placeholder {1} maps to the first\n\t * element in the array (at index 0).\n\t * \n\t * See <mxClient.language> for more information on specifying the default\n\t * language or disabling all loading of resources.\n\t * \n\t * Lines that start with a # sign will be ignored.\n\t * \n\t * Special characters\n\t * \n\t * To use unicode characters, use the standard notation (eg. \\u8fd1) or %u as a\n\t * prefix (eg. %u20AC will display a Euro sign). For normal hex encoded strings,\n\t * use % as a prefix, eg. %F6 will display a \"o umlaut\" (&ouml;).\n\t * \n\t * See <resourcesEncoded> to disable this. If you disable this, make sure that\n\t * your files are UTF-8 encoded.\n\t * \n\t * Asynchronous loading\n\t * \n\t * By default, the core adds two resource files synchronously at load time.\n\t * To load these files asynchronously, set <mxLoadResources> to false\n\t * before loading mxClient.js and use <mxResources.loadResources> instead.\n\t * \n\t * Variable: resources\n\t * \n\t * Object that maps from keys to values.\n\t */\n\tresources: {},\n\n\t/**\n\t * Variable: extension\n\t * \n\t * Specifies the extension used for language files. Default is <mxResourceExtension>.\n\t */\n\textension: mxResourceExtension,\n\n\t/**\n\t * Variable: resourcesEncoded\n\t * \n\t * Specifies whether or not values in resource files are encoded with \\u or\n\t * percentage. Default is false.\n\t */\n\tresourcesEncoded: false,\n\n\t/**\n\t * Variable: loadDefaultBundle\n\t * \n\t * Specifies if the default file for a given basename should be loaded.\n\t * Default is true.\n\t */\n\tloadDefaultBundle: true,\n\n\t/**\n\t * Variable: loadDefaultBundle\n\t * \n\t * Specifies if the specific language file file for a given basename should\n\t * be loaded. Default is true.\n\t */\n\tloadSpecialBundle: true,\n\n\t/**\n\t * Function: isLanguageSupported\n\t * \n\t * Hook for subclassers to disable support for a given language. This\n\t * implementation returns true if lan is in <mxClient.languages>.\n\t * \n\t * Parameters:\n\t *\n\t * lan - The current language.\n\t */\n\tisLanguageSupported: function(lan)\n\t{\n\t\tif (mxClient.languages != null)\n\t\t{\n\t\t\treturn mxUtils.indexOf(mxClient.languages, lan) >= 0;\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: getDefaultBundle\n\t * \n\t * Hook for subclassers to return the URL for the special bundle. This\n\t * implementation returns basename + <extension> or null if\n\t * <loadDefaultBundle> is false.\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The current language.\n\t */\n\tgetDefaultBundle: function(basename, lan)\n\t{\n\t\tif (mxResources.loadDefaultBundle || !mxResources.isLanguageSupported(lan))\n\t\t{\n\t\t\treturn basename + mxResources.extension;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Function: getSpecialBundle\n\t * \n\t * Hook for subclassers to return the URL for the special bundle. This\n\t * implementation returns basename + '_' + lan + <extension> or null if\n\t * <loadSpecialBundle> is false or lan equals <mxClient.defaultLanguage>.\n\t * \n\t * If <mxResources.languages> is not null and <mxClient.language> contains\n\t * a dash, then this method checks if <isLanguageSupported> returns true\n\t * for the full language (including the dash). If that returns false the\n\t * first part of the language (up to the dash) will be tried as an extension.\n\t * \n\t * If <mxResources.language> is null then the first part of the language is\n\t * used to maintain backwards compatibility.\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The language for which the file should be loaded.\n\t */\n\tgetSpecialBundle: function(basename, lan)\n\t{\n\t\tif (mxClient.languages == null || !this.isLanguageSupported(lan))\n\t\t{\n\t\t\tvar dash = lan.indexOf('-');\n\t\t\t\n\t\t\tif (dash > 0)\n\t\t\t{\n\t\t\t\tlan = lan.substring(0, dash);\n\t\t\t}\n\t\t}\n\n\t\tif (mxResources.loadSpecialBundle && mxResources.isLanguageSupported(lan) && lan != mxClient.defaultLanguage)\n\t\t{\n\t\t\treturn basename + '_' + lan + mxResources.extension;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Function: add\n\t * \n\t * Adds the default and current language properties file for the specified\n\t * basename. Existing keys are overridden as new files are added. If no\n\t * callback is used then the request is synchronous.\n\t *\n\t * Example:\n\t * \n\t * At application startup, additional resources may be \n\t * added using the following code:\n\t * \n\t * (code)\n\t * mxResources.add('resources/editor');\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The language for which the file should be loaded.\n\t * callback - Optional callback for asynchronous loading.\n\t */\n\tadd: function(basename, lan, callback)\n\t{\n\t\tlan = (lan != null) ? lan : ((mxClient.language != null) ?\n\t\t\tmxClient.language.toLowerCase() : mxConstants.NONE);\n\t\t\n\t\tif (lan != mxConstants.NONE)\n\t\t{\n\t\t\tvar defaultBundle = mxResources.getDefaultBundle(basename, lan);\n\t\t\tvar specialBundle = mxResources.getSpecialBundle(basename, lan);\n\t\t\t\n\t\t\tvar loadSpecialBundle = function()\n\t\t\t{\n\t\t\t\tif (specialBundle != null)\n\t\t\t\t{\n\t\t\t\t\tif (callback)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxUtils.get(specialBundle, function(req)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxResources.parse(req.getText());\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t}, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t   \t\tvar req = mxUtils.load(specialBundle);\n\t\t\t\t\t   \t\t\n\t\t\t\t\t   \t\tif (req.isReady())\n\t\t\t\t\t   \t\t{\n\t\t\t\t\t \t   \t\tmxResources.parse(req.getText());\n\t\t\t\t\t   \t\t}\n\t\t\t\t   \t\t}\n\t\t\t\t   \t\tcatch (e)\n\t\t\t\t   \t\t{\n\t\t\t\t   \t\t\t// ignore\n\t\t\t\t\t   \t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (callback != null)\n\t\t\t\t{\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (defaultBundle != null)\n\t\t\t{\n\t\t\t\tif (callback)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.get(defaultBundle, function(req)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxResources.parse(req.getText());\n\t\t\t\t\t\tloadSpecialBundle();\n\t\t\t\t\t}, function()\n\t\t\t\t\t{\n\t\t\t\t\t\tloadSpecialBundle();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t   \t\tvar req = mxUtils.load(defaultBundle);\n\t\t\t\t   \t\t\n\t\t\t\t   \t\tif (req.isReady())\n\t\t\t\t   \t\t{\n\t\t\t\t \t   \t\tmxResources.parse(req.getText());\n\t\t\t\t   \t\t}\n\t\t\t\t   \t\t\n\t\t\t\t   \t\tloadSpecialBundle();\n\t\t\t\t  \t}\n\t\t\t\t  \tcatch (e)\n\t\t\t\t  \t{\n\t\t\t\t  \t\t// ignore\n\t\t\t\t  \t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Overlays the language specific file (_lan-extension)\n\t\t\t\tloadSpecialBundle();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: parse\n\t * \n\t * Parses the key, value pairs in the specified\n\t * text and stores them as local resources.\n\t */\n\tparse: function(text)\n\t{\n\t\tif (text != null)\n\t\t{\n\t\t\tvar lines = text.split('\\n');\n\t\t\t\n\t\t\tfor (var i = 0; i < lines.length; i++)\n\t\t\t{\n\t\t\t\tif (lines[i].charAt(0) != '#')\n\t\t\t\t{\n\t\t\t\t\tvar index = lines[i].indexOf('=');\n\t\t\t\t\t\n\t\t\t\t\tif (index > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar key = lines[i].substring(0, index);\n\t\t\t\t\t\tvar idx = lines[i].length;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lines[i].charCodeAt(idx - 1) == 13)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tidx--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar value = lines[i].substring(index + 1, idx);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.resourcesEncoded)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue = value.replace(/\\\\(?=u[a-fA-F\\d]{4})/g,\"%\");\n\t\t\t\t\t\t\tmxResources.resources[key] = unescape(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxResources.resources[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: get\n\t * \n\t * Returns the value for the specified resource key.\n\t *\n\t * Example:\n\t * To read the value for 'welomeMessage', use the following:\n\t * (code)\n\t * var result = mxResources.get('welcomeMessage') || '';\n\t * (end)\n\t *\n\t * This would require an entry of the following form in\n\t * one of the English language resource files:\n\t * (code)\n\t * welcomeMessage=Welcome to mxGraph!\n\t * (end)\n\t * \n\t * The part behind the || is the string value to be used if the given\n\t * resource is not available.\n\t * \n\t * Parameters:\n\t * \n\t * key - String that represents the key of the resource to be returned.\n\t * params - Array of the values for the placeholders of the form {1}...{n}\n\t * to be replaced with in the resulting string.\n\t * defaultValue - Optional string that specifies the default return value.\n\t */\n\tget: function(key, params, defaultValue)\n\t{\n\t\tvar value = mxResources.resources[key];\n\t\t\n\t\t// Applies the default value if no resource was found\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\t\n\t\t// Replaces the placeholders with the values in the array\n\t\tif (value != null && params != null)\n\t\t{\n\t\t\tvalue = mxResources.replacePlaceholders(value, params);\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: replacePlaceholders\n\t * \n\t * Replaces the given placeholders with the given parameters.\n\t * \n\t * Parameters:\n\t * \n\t * value - String that contains the placeholders.\n\t * params - Array of the values for the placeholders of the form {1}...{n}\n\t * to be replaced with in the resulting string.\n\t */\n\treplacePlaceholders: function(value, params)\n\t{\n\t\tvar result = [];\n\t\tvar index = null;\n\t\t\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tvar c = value.charAt(i);\n\n\t\t\tif (c == '{')\n\t\t\t{\n\t\t\t\tindex = '';\n\t\t\t}\n\t\t\telse if (index != null && \tc == '}')\n\t\t\t{\n\t\t\t\tindex = parseInt(index)-1;\n\t\t\t\t\n\t\t\t\tif (index >= 0 && index < params.length)\n\t\t\t\t{\n\t\t\t\t\tresult.push(params[index]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tindex = null;\n\t\t\t}\n\t\t\telse if (index != null)\n\t\t\t{\n\t\t\t\tindex += c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(c);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join('');\n\t},\n\n\t/**\n\t * Function: loadResources\n\t * \n\t * Loads all required resources asynchronously. Use this to load the graph and\n\t * editor resources if <mxLoadResources> is false.\n\t * \n\t * Parameters:\n\t * \n\t * callback - Callback function for asynchronous loading.\n\t */\n\tloadResources: function(callback)\n\t{\n\t\tmxResources.add(mxClient.basePath+'/resources/editor', null, function()\n\t\t{\n\t\t\tmxResources.add(mxClient.basePath+'/resources/graph', null, callback);\n\t\t});\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPoint\n *\n * Implements a 2-dimensional vector with double precision coordinates.\n * \n * Constructor: mxPoint\n *\n * Constructs a new point for the optional x and y coordinates. If no\n * coordinates are given, then the default values for <x> and <y> are used.\n */\nfunction mxPoint(x, y)\n{\n\tthis.x = (x != null) ? x : 0;\n\tthis.y = (y != null) ? y : 0;\n};\n\n/**\n * Variable: x\n *\n * Holds the x-coordinate of the point. Default is 0.\n */\nmxPoint.prototype.x = null;\n\n/**\n * Variable: y\n *\n * Holds the y-coordinate of the point. Default is 0.\n */\nmxPoint.prototype.y = null;\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this point.\n */\nmxPoint.prototype.equals = function(obj)\n{\n\treturn obj != null && obj.x == this.x && obj.y == this.y;\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of this <mxPoint>.\n */\nmxPoint.prototype.clone = function()\n{\n\t// Handles subclasses as well\n\treturn mxUtils.clone(this);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRectangle\n *\n * Extends <mxPoint> to implement a 2-dimensional rectangle with double\n * precision coordinates.\n * \n * Constructor: mxRectangle\n *\n * Constructs a new rectangle for the optional parameters. If no parameters\n * are given then the respective default values are used.\n */\nfunction mxRectangle(x, y, width, height)\n{\n\tmxPoint.call(this, x, y);\n\n\tthis.width = (width != null) ? width : 0;\n\tthis.height = (height != null) ? height : 0;\n};\n\n/**\n * Extends mxPoint.\n */\nmxRectangle.prototype = new mxPoint();\nmxRectangle.prototype.constructor = mxRectangle;\n\n/**\n * Variable: width\n *\n * Holds the width of the rectangle. Default is 0.\n */\nmxRectangle.prototype.width = null;\n\n/**\n * Variable: height\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxRectangle.prototype.height = null;\n\n/**\n * Function: setRect\n * \n * Sets this rectangle to the specified values\n */\nmxRectangle.prototype.setRect = function(x, y, w, h)\n{\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n};\n\n/**\n * Function: getCenterX\n * \n * Returns the x-coordinate of the center point.\n */\nmxRectangle.prototype.getCenterX = function ()\n{\n\treturn this.x + this.width/2;\n};\n\n/**\n * Function: getCenterY\n * \n * Returns the y-coordinate of the center point.\n */\nmxRectangle.prototype.getCenterY = function ()\n{\n\treturn this.y + this.height/2;\n};\n\n/**\n * Function: add\n *\n * Adds the given rectangle to this rectangle.\n */\nmxRectangle.prototype.add = function(rect)\n{\n\tif (rect != null)\n\t{\n\t\tvar minX = Math.min(this.x, rect.x);\n\t\tvar minY = Math.min(this.y, rect.y);\n\t\tvar maxX = Math.max(this.x + this.width, rect.x + rect.width);\n\t\tvar maxY = Math.max(this.y + this.height, rect.y + rect.height);\n\t\t\n\t\tthis.x = minX;\n\t\tthis.y = minY;\n\t\tthis.width = maxX - minX;\n\t\tthis.height = maxY - minY;\n\t}\n};\n\n/**\n * Function: intersect\n * \n * Changes this rectangle to where it overlaps with the given rectangle.\n */\nmxRectangle.prototype.intersect = function(rect)\n{\n\tif (rect != null)\n\t{\n\t\tvar r1 = this.x + this.width;\n\t\tvar r2 = rect.x + rect.width;\n\t\t\n\t\tvar b1 = this.y + this.height;\n\t\tvar b2 = rect.y + rect.height;\n\t\t\n\t\tthis.x = Math.max(this.x, rect.x);\n\t\tthis.y = Math.max(this.y, rect.y);\n\t\tthis.width = Math.min(r1, r2) - this.x;\n\t\tthis.height = Math.min(b1, b2) - this.y;\n\t}\n};\n\n/**\n * Function: grow\n *\n * Grows the rectangle by the given amount, that is, this method subtracts\n * the given amount from the x- and y-coordinates and adds twice the amount\n * to the width and height.\n */\nmxRectangle.prototype.grow = function(amount)\n{\n\tthis.x -= amount;\n\tthis.y -= amount;\n\tthis.width += 2 * amount;\n\tthis.height += 2 * amount;\n};\n\n/**\n * Function: getPoint\n * \n * Returns the top, left corner as a new <mxPoint>.\n */\nmxRectangle.prototype.getPoint = function()\n{\n\treturn new mxPoint(this.x, this.y);\n};\n\n/**\n * Function: rotate90\n * \n * Rotates this rectangle by 90 degree around its center point.\n */\nmxRectangle.prototype.rotate90 = function()\n{\n\tvar t = (this.width - this.height) / 2;\n\tthis.x += t;\n\tthis.y -= t;\n\tvar tmp = this.width;\n\tthis.width = this.height;\n\tthis.height = tmp;\n};\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this rectangle.\n */\nmxRectangle.prototype.equals = function(obj)\n{\n\treturn obj != null && obj.x == this.x && obj.y == this.y &&\n\t\tobj.width == this.width && obj.height == this.height;\n};\n\n/**\n * Function: fromRectangle\n * \n * Returns a new <mxRectangle> which is a copy of the given rectangle.\n */\nmxRectangle.fromRectangle = function(rect)\n{\n\treturn new mxRectangle(rect.x, rect.y, rect.width, rect.height);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEffects =\n{\n\n\t/**\n\t * Class: mxEffects\n\t * \n\t * Provides animation effects.\n\t */\n\n\t/**\n\t * Function: animateChanges\n\t * \n\t * Asynchronous animated move operation. See also: <mxMorphing>.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n\t * {\n\t *   var changes = evt.getProperty('edit').changes;\n\t * \n\t *   if (changes.length < 10)\n\t *   {\n\t *     mxEffects.animateChanges(graph, changes);\n\t *   }\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that received the changes.\n\t * changes - Array of changes to be animated.\n\t * done - Optional function argument that is invoked after the\n\t * last step of the animation.\n\t */\n\tanimateChanges: function(graph, changes, done)\n\t{\n\t\tvar maxStep = 10;\n\t\tvar step = 0;\n\n\t\tvar animate = function() \n\t\t{\n\t\t\tvar isRequired = false;\n\t\t\t\n\t\t\tfor (var i = 0; i < changes.length; i++)\n\t\t\t{\n\t\t\t\tvar change = changes[i];\n\t\t\t\t\n\t\t\t\tif (change instanceof mxGeometryChange ||\n\t\t\t\t\tchange instanceof mxTerminalChange ||\n\t\t\t\t\tchange instanceof mxValueChange ||\n\t\t\t\t\tchange instanceof mxChildChange ||\n\t\t\t\t\tchange instanceof mxStyleChange)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.getView().getState(change.cell || change.child, false);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tisRequired = true;\n\t\t\t\t\t\n\t\t\t\t\t\tif (change.constructor != mxGeometryChange || graph.model.isEdge(change.cell))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxUtils.setOpacity(state.shape.node, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar scale = graph.getView().scale;\t\t\t\t\t\n\n\t\t\t\t\t\t\tvar dx = (change.geometry.x - change.previous.x) * scale;\n\t\t\t\t\t\t\tvar dy = (change.geometry.y - change.previous.y) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar sx = (change.geometry.width - change.previous.width) * scale;\n\t\t\t\t\t\t\tvar sy = (change.geometry.height - change.previous.height) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (step == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x -= dx;\n\t\t\t\t\t\t\t\tstate.y -= dy;\n\t\t\t\t\t\t\t\tstate.width -= sx;\n\t\t\t\t\t\t\t\tstate.height -= sy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x += dx / maxStep;\n\t\t\t\t\t\t\t\tstate.y += dy / maxStep;\n\t\t\t\t\t\t\t\tstate.width += sx / maxStep;\n\t\t\t\t\t\t\t\tstate.height += sy / maxStep;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgraph.cellRenderer.redraw(state);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Fades all connected edges and children\n\t\t\t\t\t\t\tmxEffects.cascadeOpacity(graph, change.cell, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (step < maxStep && isRequired)\n\t\t\t{\n\t\t\t\tstep++;\n\t\t\t\twindow.setTimeout(animate, delay);\n\t\t\t}\n\t\t\telse if (done != null)\n\t\t\t{\n\t\t\t\tdone();\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar delay = 30;\n\t\tanimate();\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * Sets the opacity on the given cell and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells.\n\t * cell - <mxCell> to set the opacity for.\n\t * opacity - New value for the opacity in %.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\t// Fades all children\n\t\tvar childCount = graph.model.getChildCount(cell);\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tvar child = graph.model.getChildAt(cell, i);\n\t\t\tvar childState = graph.getView().getState(child);\n\t\t\t\n\t\t\tif (childState != null)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(childState.shape.node, opacity);\n\t\t\t\tmxEffects.cascadeOpacity(graph, child, opacity);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Fades all connected edges\n\t\tvar edges = graph.model.getEdges(cell);\n\t\t\n\t\tif (edges != null)\n\t\t{\n\t\t\tfor (var i=0; i<edges.length; i++)\n\t\t\t{\n\t\t\t\tvar edgeState = graph.getView().getState(edges[i]);\n\t\t\t\t\n\t\t\t\tif (edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.setOpacity(edgeState.shape.node, opacity);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * Asynchronous fade-out operation.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tstep = step || 40;\n\t\tdelay = delay || 30;\n\t\t\n\t\tvar opacity = from || 100;\n\t\t\n\t\tmxUtils.setOpacity(node, opacity);\n\t\t\n\t\tif (isEnabled || isEnabled == null)\n\t\t{\n\t\t\tvar f = function()\n\t\t\t{\n\t\t\t    opacity = Math.max(opacity-step, 0);\n\t\t\t\tmxUtils.setOpacity(node, opacity);\n\t\t\t\t\n\t\t\t\tif (opacity > 0)\n\t\t\t\t{\n\t\t\t\t\twindow.setTimeout(f, delay);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\t\t\n\t\t\t\t\tif (remove && node.parentNode)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\twindow.setTimeout(f, delay);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\n\t\t\tif (remove && node.parentNode)\n\t\t\t{\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t}\n\t\t}\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxUtils =\n{\n\t/**\n\t * Class: mxUtils\n\t * \n\t * A singleton class that provides cross-browser helper methods.\n\t * This is a global functionality. To access the functions in this\n\t * class, use the global classname appended by the functionname.\n\t * You may have to load chrome://global/content/contentAreaUtils.js\n\t * to disable certain security restrictions in Mozilla for the <open>,\n\t * <save>, <saveAs> and <copy> function.\n\t * \n\t * For example, the following code displays an error message:\n\t * \n\t * (code)\n\t * mxUtils.error('Browser is not supported!', 200, false);\n\t * (end)\n\t * \n\t * Variable: errorResource\n\t * \n\t * Specifies the resource key for the title of the error window. If the\n\t * resource for this key does not exist then the value is used as\n\t * the title. Default is 'error'.\n\t */\n\terrorResource: (mxClient.language != 'none') ? 'error' : '',\n\t\n\t/**\n\t * Variable: closeResource\n\t * \n\t * Specifies the resource key for the label of the close button. If the\n\t * resource for this key does not exist then the value is used as\n\t * the label. Default is 'close'.\n\t */\n\tcloseResource: (mxClient.language != 'none') ? 'close' : '',\n\n\t/**\n\t * Variable: errorImage\n\t * \n\t * Defines the image used for error dialogs.\n\t */\n\terrorImage: mxClient.imageBasePath + '/error.gif',\n\t\n\t/**\n\t * Function: removeCursors\n\t * \n\t * Removes the cursors from the style of the given DOM node and its\n\t * descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the cursor style from.\n\t */\n\tremoveCursors: function(element)\n\t{\n\t\tif (element.style != null)\n\t\t{\n\t\t\telement.style.cursor = '';\n\t\t}\n\t\t\n\t\tvar children = element.childNodes;\n\t\t\n\t\tif (children != null)\n\t\t{\n\t        var childCount = children.length;\n\t        \n\t        for (var i = 0; i < childCount; i += 1)\n\t        {\n\t            mxUtils.removeCursors(children[i]);\n\t        }\n\t    }\n\t},\n\n\t/**\n\t * Function: getCurrentStyle\n\t * \n\t * Returns the current style of the specified element.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node whose current style should be returned.\n\t */\n\tgetCurrentStyle: function()\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 9))\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ? element.currentStyle : null;\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ?\n\t\t\t\t\twindow.getComputedStyle(element, '') :\n\t\t\t\t\tnull;\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: parseCssNumber\n\t * \n\t * Parses the given CSS numeric value adding handling for the values thin,\n\t * medium and thick (2, 4 and 6).\n\t */\n\tparseCssNumber: function(value)\n\t{\n\t\tif (value == 'thin')\n\t\t{\n\t\t\tvalue = '2';\n\t\t}\n\t\telse if (value == 'medium')\n\t\t{\n\t\t\tvalue = '4';\n\t\t}\n\t\telse if (value == 'thick')\n\t\t{\n\t\t\tvalue = '6';\n\t\t}\n\t\t\n\t\tvalue = parseFloat(value);\n\t\t\n\t\tif (isNaN(value))\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: setPrefixedStyle\n\t * \n\t * Adds the given style with the standard name and an optional vendor prefix for the current\n\t * browser.\n\t * \n\t * (code)\n\t * mxUtils.setPrefixedStyle(node.style, 'transformOrigin', '0% 0%');\n\t * (end)\n\t */\n\tsetPrefixedStyle: function()\n\t{\n\t\tvar prefix = null;\n\t\t\n\t\tif (mxClient.IS_OT)\n\t\t{\n\t\t\tprefix = 'O';\n\t\t}\n\t\telse if (mxClient.IS_SF || mxClient.IS_GC)\n\t\t{\n\t\t\tprefix = 'Webkit';\n\t\t}\n\t\telse if (mxClient.IS_MT)\n\t\t{\n\t\t\tprefix = 'Moz';\n\t\t}\n\t\telse if (mxClient.IS_IE && document.documentMode >= 9 && document.documentMode < 10)\n\t\t{\n\t\t\tprefix = 'ms';\n\t\t}\n\n\t\treturn function(style, name, value)\n\t\t{\n\t\t\tstyle[name] = value;\n\t\t\t\n\t\t\tif (prefix != null && name.length > 0)\n\t\t\t{\n\t\t\t\tname = prefix + name.substring(0, 1).toUpperCase() + name.substring(1);\n\t\t\t\tstyle[name] = value;\n\t\t\t}\n\t\t};\n\t}(),\n\t\n\t/**\n\t * Function: hasScrollbars\n\t * \n\t * Returns true if the overflow CSS property of the given node is either\n\t * scroll or auto.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose style should be checked for scrollbars.\n\t */\n\thasScrollbars: function(node)\n\t{\n\t\tvar style = mxUtils.getCurrentStyle(node);\n\n\t\treturn style != null && (style.overflow == 'scroll' || style.overflow == 'auto');\n\t},\n\t\n\t/**\n\t * Function: bind\n\t * \n\t * Returns a wrapper function that locks the execution scope of the given\n\t * function to the specified scope. Inside funct, the \"this\" keyword\n\t * becomes a reference to that scope.\n\t */\n\tbind: function(scope, funct)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\treturn funct.apply(scope, arguments);\n\t\t};\n\t},\n\t\n\t/**\n\t * Function: eval\n\t * \n\t * Evaluates the given expression using eval and returns the JavaScript\n\t * object that represents the expression result. Supports evaluation of\n\t * expressions that define functions and returns the function object for\n\t * these expressions.\n\t * \n\t * Parameters:\n\t * \n\t * expr - A string that represents a JavaScript expression.\n\t */\n\teval: function(expr)\n\t{\n\t\tvar result = null;\n\n\t\tif (expr.indexOf('function') >= 0)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\teval('var _mxJavaScriptExpression='+expr);\n\t\t\t\tresult = _mxJavaScriptExpression;\n\t\t\t\t// TODO: Use delete here?\n\t\t\t\t_mxJavaScriptExpression = null;\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tresult = eval(expr);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNode\n\t * \n\t * Returns the first node where attr equals value.\n\t * This implementation does not use XPath.\n\t */\n\tfindNode: function(node, attr, value)\n\t{\n\t\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\tvar tmp = node.getAttribute(attr);\n\t\n\t\t\tif (tmp != null && tmp == value)\n\t\t\t{\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t\n\t\tnode = node.firstChild;\n\t\t\n\t\twhile (node != null)\n\t\t{\n\t\t\tvar result = mxUtils.findNode(node, attr, value);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\t\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: getFunctionName\n\t * \n\t * Returns the name for the given function.\n\t * \n\t * Parameters:\n\t * \n\t * f - JavaScript object that represents a function.\n\t */\n\tgetFunctionName: function(f)\n\t{\n\t\tvar str = null;\n\n\t\tif (f != null)\n\t\t{\n\t\t\tif (f.name != null)\n\t\t\t{\n\t\t\t\tstr = f.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr = mxUtils.trim(f.toString());\n\t\t\t\t\n\t\t\t\tif (/^function\\s/.test(str))\n\t\t\t\t{\n\t\t\t\t\tstr = mxUtils.ltrim(str.substring(9));\n\t\t\t\t\tvar idx2 = str.indexOf('(');\n\t\t\t\t\t\n\t\t\t\t\tif (idx2 > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tstr = str.substring(0, idx2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn str;\n\t},\n\n\t/**\n\t * Function: indexOf\n\t * \n\t * Returns the index of obj in array or -1 if the array does not contain\n\t * the given object.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array to check for the given obj.\n\t * obj - Object to find in the given array.\n\t */\n\tindexOf: function(array, obj)\n\t{\n\t\tif (array != null && obj != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tif (array[i] == obj)\n\t\t\t\t{\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn -1;\n\t},\n\n\t/**\n\t * Function: forEach\n\t * \n\t * Calls the given function for each element of the given array and returns\n\t * the array.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array that contains the elements.\n\t * fn - Function to be called for each object.\n\t */\n\tforEach: function(array, fn)\n\t{\n\t\tif (array != null && fn != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tfn(array[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn array;\n\t},\n\n\t/**\n\t * Function: remove\n\t * \n\t * Removes all occurrences of the given object in the given array or\n\t * object. If there are multiple occurrences of the object, be they\n\t * associative or as an array entry, all occurrences are removed from\n\t * the array or deleted from the object. By removing the object from\n\t * the array, all elements following the removed element are shifted\n\t * by one step towards the beginning of the array.\n\t * \n\t * The length of arrays is not modified inside this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to find in the given array.\n\t * array - Array to check for the given obj.\n\t */\n\tremove: function(obj, array)\n\t{\n\t\tvar result = null;\n\t\t\n\t\tif (typeof(array) == 'object')\n\t\t{\n\t\t\tvar index = mxUtils.indexOf(array, obj);\n\t\t\t\n\t\t\twhile (index >= 0)\n\t\t\t{\n\t\t\t\tarray.splice(index, 1);\n\t\t\t\tresult = obj;\n\t\t\t\tindex = mxUtils.indexOf(array, obj);\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in array)\n\t\t{\n\t\t\tif (array[key] == obj)\n\t\t\t{\n\t\t\t\tdelete array[key];\n\t\t\t\tresult = obj;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNode\n\t * \n\t * Returns true if the given value is an XML node with the node name\n\t * and if the optional attribute has the specified value.\n\t * \n\t * This implementation assumes that the given value is a DOM node if the\n\t * nodeType property is numeric, that is, if isNaN returns false for\n\t * value.nodeType.\n\t * \n\t * Parameters:\n\t * \n\t * value - Object that should be examined as a node.\n\t * nodeName - String that specifies the node name.\n\t * attributeName - Optional attribute name to check.\n\t * attributeValue - Optional attribute value to check.\n\t */\n\t isNode: function(value, nodeName, attributeName, attributeValue)\n\t {\n\t \tif (value != null && !isNaN(value.nodeType) && (nodeName == null ||\n\t \t\tvalue.nodeName.toLowerCase() == nodeName.toLowerCase()))\n \t\t{\n \t\t\treturn attributeName == null ||\n \t\t\t\tvalue.getAttribute(attributeName) == attributeValue;\n \t\t}\n\t \t\n\t \treturn false;\n\t },\n\t\n\t/**\n\t * Function: isAncestorNode\n\t * \n\t * Returns true if the given ancestor is an ancestor of the\n\t * given DOM node in the DOM. This also returns true if the\n\t * child is the ancestor.\n\t * \n\t * Parameters:\n\t * \n\t * ancestor - DOM node that represents the ancestor.\n\t * child - DOM node that represents the child.\n\t */\n\t isAncestorNode: function(ancestor, child)\n\t {\n\t \tvar parent = child;\n\t \t\n\t \twhile (parent != null)\n\t \t{\n\t \t\tif (parent == ancestor)\n\t \t\t{\n\t \t\t\treturn true;\n\t \t\t}\n\n\t \t\tparent = parent.parentNode;\n\t \t}\n\t \t\n\t \treturn false;\n\t },\n\n\t/**\n\t * Function: getChildNodes\n\t * \n\t * Returns an array of child nodes that are of the given node type.\n\t * \n\t * Parameters:\n\t * \n\t * node - Parent DOM node to return the children from.\n\t * nodeType - Optional node type to return. Default is\n\t * <mxConstants.NODETYPE_ELEMENT>.\n\t */\n\tgetChildNodes: function(node, nodeType)\n\t{\n\t\tnodeType = nodeType || mxConstants.NODETYPE_ELEMENT;\n\t\t\n\t\tvar children = [];\n\t\tvar tmp = node.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeType == nodeType)\n\t\t\t{\n\t\t\t\tchildren.push(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\t\t\n\t\treturn children;\n\t},\n\n\t/**\n\t * Function: importNode\n\t * \n\t * Cross browser implementation for document.importNode. Uses document.importNode\n\t * in all browsers but IE, where the node is cloned by creating a new node and\n\t * copying all attributes and children into it using importNode, recursively.\n\t * \n\t * Parameters:\n\t * \n\t * doc - Document to import the node into.\n\t * node - Node to be imported.\n\t * allChildren - If all children should be imported.\n\t */\n\timportNode: function(doc, node, allChildren)\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 10))\n\t\t{\n\t\t\tswitch (node.nodeType)\n\t\t\t{\n\t\t\t\tcase 1: /* element */\n\t\t\t\t{\n\t\t\t\t\tvar newNode = doc.createElement(node.nodeName);\n\t\t\t\t\t\n\t\t\t\t\tif (node.attributes && node.attributes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < node.attributes.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewNode.setAttribute(node.attributes[i].nodeName,\n\t\t\t\t\t\t\t\tnode.getAttribute(node.attributes[i].nodeName));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (allChildren && node.childNodes && node.childNodes.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tnewNode.appendChild(mxUtils.importNode(doc, node.childNodes[i], allChildren));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn newNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 3: /* text */\n\t\t\t    case 4: /* cdata-section */\n\t\t\t    case 8: /* comment */\n\t\t\t    {\n\t\t\t      return doc.createTextNode(node.value);\n\t\t\t      break;\n\t\t\t    }\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn doc.importNode(node, allChildren);\n\t\t}\n\t},\n\n\t/**\n\t * Function: createXmlDocument\n\t * \n\t * Returns a new, empty XML document.\n\t */\n\tcreateXmlDocument: function()\n\t{\n\t\tvar doc = null;\n\t\t\n\t\tif (document.implementation && document.implementation.createDocument)\n\t\t{\n\t\t\tdoc = document.implementation.createDocument('', '', null);\n\t\t}\n\t\telse if (window.ActiveXObject)\n\t\t{\n\t\t\tdoc = new ActiveXObject('Microsoft.XMLDOM');\n\t \t}\n\t \t\n\t \treturn doc;\n\t},\n\n\t/**\n\t * Function: parseXml\n\t * \n\t * Parses the specified XML string into a new XML document and returns the\n\t * new document.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var doc = mxUtils.parseXml(\n\t *   '<mxGraphModel><root><MyDiagram id=\"0\"><mxCell/></MyDiagram>'+\n\t *   '<MyLayer id=\"1\"><mxCell parent=\"0\" /></MyLayer><MyObject id=\"2\">'+\n\t *   '<mxCell style=\"strokeColor=blue;fillColor=red\" parent=\"1\" vertex=\"1\">'+\n\t *   '<mxGeometry x=\"10\" y=\"10\" width=\"80\" height=\"30\" as=\"geometry\"/>'+\n\t *   '</mxCell></MyObject></root></mxGraphModel>');\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * xml - String that contains the XML data.\n\t */\n\tparseXml: function()\n\t{\n\t\tif (window.DOMParser)\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\n\t\t\t\treturn parser.parseFromString(xml, 'text/xml');\n\t\t\t};\n\t\t}\n\t\telse // IE<=9\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar result = mxUtils.createXmlDocument();\n\t\t\t\tresult.async = false;\n\t\t\t\t// Workaround for parsing errors with SVG DTD\n\t\t\t\tresult.validateOnParse = false;\n\t\t\t\tresult.resolveExternals = false;\n\t\t\t\tresult.loadXML(xml);\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: clearSelection\n\t * \n\t * Clears the current selection in the page.\n\t */\n\tclearSelection: function()\n\t{\n\t\tif (document.selection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tdocument.selection.empty();\n\t\t\t};\n\t\t}\n\t\telse if (window.getSelection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tif (window.getSelection().empty)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().empty();\n\t\t\t\t}\n\t\t\t\telse if (window.getSelection().removeAllRanges)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function() { };\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: getPrettyXML\n\t * \n\t * Returns a pretty printed string that represents the XML tree for the\n\t * given node. This method should only be used to print XML for reading,\n\t * use <getXml> instead to obtain a string for processing.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * tab - Optional string that specifies the indentation for one level.\n\t * Default is two spaces.\n\t * indent - Optional string that represents the current indentation.\n\t * Default is an empty string.\n\t */\n\tgetPrettyXml: function(node, tab, indent)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (node != null)\n\t\t{\n\t\t\ttab = tab || '  ';\n\t\t\tindent = indent || '';\n\t\t\t\n\t\t\tif (node.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t\t{\n\t\t\t\tvar value =  mxUtils.trim(mxUtils.getTextContent(node));\n\t\t\t\t\n\t\t\t\tif (value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(indent + mxUtils.htmlEntities(value) + '\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(indent + '<' + node.nodeName);\n\t\t\t\t\n\t\t\t\t// Creates the string with the node attributes\n\t\t\t\t// and converts all HTML entities in the values\n\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\n\t\t\t\tif (attrs != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar val = mxUtils.htmlEntities(attrs[i].value);\n\t\t\t\t\t\tresult.push(' ' + attrs[i].nodeName + '=\"' + val + '\"');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Recursively creates the XML string for each\n\t\t\t\t// child nodes and appends it here with an\n\t\t\t\t// indentation\n\t\t\t\tvar tmp = node.firstChild;\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tresult.push('>\\n');\n\t\t\t\t\t\n\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(mxUtils.getPrettyXml(tmp, tab, indent + tab));\n\t\t\t\t\t\ttmp = tmp.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tresult.push(indent + '</'+node.nodeName + '>\\n');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.push('/>\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join('');\n\t},\n\t\n\t/**\n\t * Function: removeWhitespace\n\t * \n\t * Removes the sibling text nodes for the given node that only consists\n\t * of tabs, newlines and spaces.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose siblings should be removed.\n\t * before - Optional boolean that specifies the direction of the traversal.\n\t */\n\tremoveWhitespace: function(node, before)\n\t{\n\t\tvar tmp = (before) ? node.previousSibling : node.nextSibling;\n\t\t\n\t\twhile (tmp != null && tmp.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t{\n\t\t\tvar next = (before) ? tmp.previousSibling : tmp.nextSibling;\n\t\t\tvar text = mxUtils.getTextContent(tmp);\n\t\t\t\n\t\t\tif (mxUtils.trim(text).length == 0)\n\t\t\t{\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = next;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: htmlEntities\n\t * \n\t * Replaces characters (less than, greater than, newlines and quotes) with\n\t * their HTML entities in the given string and returns the result.\n\t * \n\t * Parameters:\n\t * \n\t * s - String that contains the characters to be converted.\n\t * newline - If newlines should be replaced. Default is true.\n\t */\n\thtmlEntities: function(s, newline)\n\t{\n\t\ts = String(s || '');\n\t\t\n\t\ts = s.replace(/&/g,'&amp;'); // 38 26\n\t\ts = s.replace(/\"/g,'&quot;'); // 34 22\n\t\ts = s.replace(/\\'/g,'&#39;'); // 39 27\n\t\ts = s.replace(/</g,'&lt;'); // 60 3C\n\t\ts = s.replace(/>/g,'&gt;'); // 62 3E\n\n\t\tif (newline == null || newline)\n\t\t{\n\t\t\ts = s.replace(/\\n/g, '&#xa;');\n\t\t}\n\t\t\n\t\treturn s;\n\t},\n\t\n\t/**\n\t * Function: isVml\n\t * \n\t * Returns true if the given node is in the VML namespace.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose tag urn should be checked.\n\t */\n\tisVml: function(node)\n\t{\n\t\treturn node != null && node.tagUrn == 'urn:schemas-microsoft-com:vml';\n\t},\n\n\t/**\n\t * Function: getXml\n\t * \n\t * Returns the XML content of the specified node. For Internet Explorer,\n\t * all \\r\\n\\t[\\t]* are removed from the XML string and the remaining \\r\\n\n\t * are replaced by \\n. All \\n are then replaced with linefeed, or &#xa; if\n\t * no linefeed is defined.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * linefeed - Optional string that linefeeds are converted into. Default is\n\t * &#xa;\n\t */\n\tgetXml: function(node, linefeed)\n\t{\n\t\tvar xml = '';\n\n\t\tif (window.XMLSerializer != null)\n\t\t{\n\t\t\tvar xmlSerializer = new XMLSerializer();\n\t\t\txml = xmlSerializer.serializeToString(node);     \n\t\t}\n\t\telse if (node.xml != null)\n\t\t{\n\t\t\txml = node.xml.replace(/\\r\\n\\t[\\t]*/g, '').\n\t\t\t\treplace(/>\\r\\n/g, '>').\n\t\t\t\treplace(/\\r\\n/g, '\\n');\n\t\t}\n\n\t\t// Replaces linefeeds with HTML Entities.\n\t\tlinefeed = linefeed || '&#xa;';\n\t\txml = xml.replace(/\\n/g, linefeed);\n\t\t  \n\t\treturn xml;\n\t},\n\t\n\t/**\n\t * Function: extractTextWithWhitespace\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * elems - DOM nodes to return the text for.\n\t */\n\textractTextWithWhitespace: function(elems)\n\t{\n\t    // Known block elements for handling linefeeds (list is not complete)\n\t\tvar blocks = ['BLOCKQUOTE', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'OL', 'P', 'PRE', 'TABLE', 'UL'];\n\t\tvar ret = [];\n\t\t\n\t\tfunction doExtract(elts)\n\t\t{\n\t\t\t// Single break should be ignored\n\t\t\tif (elts.length == 1 && (elts[0].nodeName == 'BR' ||\n\t\t\t\telts[0].innerHTML == '\\n'))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t    for (var i = 0; i < elts.length; i++)\n\t\t    {\n\t\t        var elem = elts[i];\n\n\t\t\t\t// DIV with a br or linefeed forces a linefeed\n\t\t\t\tif (elem.nodeName == 'BR' || elem.innerHTML == '\\n' ||\n\t\t\t\t\t((elts.length == 1 || i == 0) && (elem.nodeName == 'DIV' &&\n\t\t\t\t\telem.innerHTML.toLowerCase() == '<br>')))\n\t\t    \t{\n\t    \t\t\tret.push('\\n');\n\t\t    \t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t        if (elem.nodeType === 3 || elem.nodeType === 4)\n\t\t\t        {\n\t\t\t        \tif (elem.nodeValue.length > 0)\n\t\t\t        \t{\n\t\t\t        \t\tret.push(elem.nodeValue);\n\t\t\t        \t}\n\t\t\t        }\n\t\t\t        else if (elem.nodeType !== 8 && elem.childNodes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoExtract(elem.childNodes);\n\t\t\t\t\t}\n\t\t\t        \n\t        \t\tif (i < elts.length - 1 && mxUtils.indexOf(blocks, elts[i + 1].nodeName) >= 0)\n\t        \t\t{\n\t        \t\t\tret.push('\\n');\t\t\n\t        \t\t}\n\t\t\t\t}\n\t\t    }\n\t\t};\n\t\t\n\t\tdoExtract(elems);\n\t    \n\t    return ret.join('');\n\t},\n\n\t/**\n\t * Function: replaceTrailingNewlines\n\t * \n\t * Replaces each trailing newline with the given pattern.\n\t */\n\treplaceTrailingNewlines: function(str, pattern)\n\t{\n\t\t// LATER: Check is this can be done with a regular expression\n\t\tvar postfix = '';\n\t\t\n\t\twhile (str.length > 0 && str.charAt(str.length - 1) == '\\n')\n\t\t{\n\t\t\tstr = str.substring(0, str.length - 1);\n\t\t\tpostfix += pattern;\n\t\t}\n\t\t\n\t\treturn str + postfix;\n\t},\n\n\t/**\n\t * Function: getTextContent\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the text content for.\n\t */\n\tgetTextContent: function(node)\n\t{\n\t\t// Only IE10-\n\t\tif (mxClient.IS_IE && node.innerText !== undefined)\n\t\t{\n\t\t\treturn node.innerText;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (node != null) ? node[(node.textContent === undefined) ? 'text' : 'textContent'] : '';\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setTextContent\n\t * \n\t * Sets the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the text content for.\n\t * text - String that represents the text content.\n\t */\n\tsetTextContent: function(node, text)\n\t{\n\t\tif (node.innerText !== undefined)\n\t\t{\n\t\t\tnode.innerText = text;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode[(node.textContent === undefined) ? 'text' : 'textContent'] = text;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getInnerHtml\n\t * \n\t * Returns the inner HTML for the given node as a string or an empty string\n\t * if no node was specified. The inner HTML is the text representing all\n\t * children of the node, but not the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the inner HTML for.\n\t */\n\tgetInnerHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\treturn node.innerHTML;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: getOuterHtml\n\t * \n\t * Returns the outer HTML for the given node as a string or an empty\n\t * string if no node was specified. The outer HTML is the text representing\n\t * all children of the node including the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the outer HTML for.\n\t */\n\tgetOuterHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tif (node.outerHTML != null)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn node.outerHTML;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = [];\n\t\t\t\t\t\ttmp.push('<'+node.nodeName);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (attrs != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar value = attrs[i].value;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (value != null && value.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp.push(' ');\n\t\t\t\t\t\t\t\t\ttmp.push(attrs[i].nodeName);\n\t\t\t\t\t\t\t\t\ttmp.push('=\"');\n\t\t\t\t\t\t\t\t\ttmp.push(value);\n\t\t\t\t\t\t\t\t\ttmp.push('\"');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (node.innerHTML.length == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('/>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('>');\n\t\t\t\t\t\t\ttmp.push(node.innerHTML);\n\t\t\t\t\t\t\ttmp.push('</'+node.nodeName+'>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn tmp.join('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: write\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twrite: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: writeln\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent with an additional linefeed. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twriteln: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t\tparent.appendChild(document.createElement('br'));\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: br\n\t * \n\t * Appends a linebreak to the given parent and returns the linebreak.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the linebreak to.\n\t */\n\tbr: function(parent, count)\n\t{\n\t\tcount = count || 1;\n\t\tvar br = null;\n\t\t\n\t\tfor (var i = 0; i < count; i++)\n\t\t{\n\t\t\tif (parent != null)\n\t\t\t{\n\t\t\t\tbr = parent.ownerDocument.createElement('br');\n\t\t\t\tparent.appendChild(br);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn br;\n\t},\n\t\t\n\t/**\n\t * Function: button\n\t * \n\t * Returns a new button with the given level and function as an onclick\n\t * event handler.\n\t * \n\t * (code)\n\t * document.body.appendChild(mxUtils.button('Test', function(evt)\n\t * {\n\t *   alert('Hello, World!');\n\t * }));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * label - String that represents the label of the button.\n\t * funct - Function to be called if the button is pressed.\n\t * doc - Optional document to be used for creating the button. Default is the\n\t * current document.\n\t */\n\tbutton: function(label, funct, doc)\n\t{\n\t\tdoc = (doc != null) ? doc : document;\n\t\t\n\t\tvar button = doc.createElement('button');\n\t\tmxUtils.write(button, label);\n\n\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t{\n\t\t\tfunct(evt);\n\t\t});\n\t\t\n\t\treturn button;\n\t},\n\t\n\t/**\n\t * Function: para\n\t * \n\t * Appends a new paragraph with the given text to the specified parent and\n\t * returns the paragraph.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text for the new paragraph.\n\t */\n\tpara: function(parent, text)\n\t{\n\t\tvar p = document.createElement('p');\n\t\tmxUtils.write(p, text);\n\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(p);\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: addTransparentBackgroundFilter\n\t * \n\t * Adds a transparent background to the filter of the given node. This\n\t * background can be used in IE8 standards mode (native IE8 only) to pass\n\t * events through the node.\n\t */\n\taddTransparentBackgroundFilter: function(node)\n\t{\n\t\tnode.style.filter += 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\\'' +\n\t\t\tmxClient.imageBasePath + '/transparent.gif\\', sizingMethod=\\'scale\\')';\n\t},\n\n\t/**\n\t * Function: linkAction\n\t * \n\t * Adds a hyperlink to the specified parent that invokes action on the\n\t * specified editor.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> that will execute the action.\n\t * action - String that defines the name of the action to be executed.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkAction: function(parent, text, editor, action, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor.execute(action);\n\t\t}, pad);\n\t},\n\n\t/**\n\t * Function: linkInvoke\n\t * \n\t * Adds a hyperlink to the specified parent that invokes the specified\n\t * function on the editor passing along the specified argument. The\n\t * function name is the name of a function of the editor instance,\n\t * not an action name.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> instance to execute the function on.\n\t * functName - String that represents the name of the function.\n\t * arg - Object that represents the argument to the function.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkInvoke: function(parent, text, editor, functName, arg, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor[functName](arg);\n\t\t}, pad);\n\t},\n\t\n\t/**\n\t * Function: link\n\t * \n\t * Adds a hyperlink to the specified parent and invokes the given function\n\t * when the link is clicked.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * funct - Function to execute when the link is clicked.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlink: function(parent, text, funct, pad)\n\t{\n\t\tvar a = document.createElement('span');\n\t\t\n\t\ta.style.color = 'blue';\n\t\ta.style.textDecoration = 'underline';\n\t\ta.style.cursor = 'pointer';\n\t\t\n\t\tif (pad != null)\n\t\t{\n\t\t\ta.style.paddingLeft = pad+'px';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(a, 'click', funct);\n\t\tmxUtils.write(a, text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(a);\n\t\t}\n\t\t\n\t\treturn a;\n\t},\n\n\t/**\n\t * Function: fit\n\t * \n\t * Makes sure the given node is inside the visible area of the window. This\n\t * is done by setting the left and top in the style. \n\t */\n\tfit: function(node)\n\t{\n\t\tvar left = parseInt(node.offsetLeft);\n\t\tvar width = parseInt(node.offsetWidth);\n\t\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(node.ownerDocument);\n\t\tvar sl = offset.x;\n\t\tvar st = offset.y;\n\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\tvar right = (sl) + (b.clientWidth || d.clientWidth);\n\t\t\n\t\tif (left + width > right)\n\t\t{\n\t\t\tnode.style.left = Math.max(sl, right - width) + 'px';\n\t\t}\n\t\t\n\t\tvar top = parseInt(node.offsetTop);\n\t\tvar height = parseInt(node.offsetHeight);\n\t\t\n\t\tvar bottom = st + Math.max(b.clientHeight || 0, d.clientHeight);\n\t\t\n\t\tif (top + height > bottom)\n\t\t{\n\t\t\tnode.style.top = Math.max(st, bottom - height) + 'px';\n\t\t}\n\t},\n\n\t/**\n\t * Function: load\n\t * \n\t * Loads the specified URL *synchronously* and returns the <mxXmlRequest>.\n\t * Throws an exception if the file cannot be loaded. See <mxUtils.get> for\n\t * an asynchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * try\n\t * {\n\t *   var req = mxUtils.load(filename);\n\t *   var root = req.getDocumentElement();\n\t *   // Process XML DOM...\n\t * }\n\t * catch (ex)\n\t * {\n\t *   mxUtils.alert('Cannot load '+filename+': '+ex);\n\t * }\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t */\n\tload: function(url)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET', false);\n\t\treq.send();\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: get\n\t * \n\t * Loads the specified URL *asynchronously* and invokes the given functions\n\t * depending on the request status. Returns the <mxXmlRequest> in use. Both\n\t * functions take the <mxXmlRequest> as the only parameter. See\n\t * <mxUtils.load> for a synchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *    var node = req.getDocumentElement();\n\t *    // Process XML DOM...\n\t * });\n\t * (end)\n\t * \n\t * So for example, to load a diagram into an existing graph model, the\n\t * following code is used.\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *   var node = req.getDocumentElement();\n\t *   var dec = new mxCodec(node.ownerDocument);\n\t *   dec.decode(node, graph.getModel());\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t * binary - Optional boolean parameter that specifies if the request is\n\t * binary.\n\t * timeout - Optional timeout in ms before calling ontimeout.\n\t * ontimeout - Optional function to execute on timeout.\n\t */\n\tget: function(url, onload, onerror, binary, timeout, ontimeout)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET');\n\t\t\n\t\tif (binary != null)\n\t\t{\n\t\t\treq.setBinary(binary);\n\t\t}\n\t\t\n\t\treq.send(onload, onerror, timeout, ontimeout);\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: getAll\n\t * \n\t * Loads the URLs in the given array *asynchronously* and invokes the given function\n\t * if all requests returned with a valid 2xx status. The error handler is invoked\n\t * once on the first error or invalid response.\n\t *\n\t * Parameters:\n\t * \n\t * urls - Array of URLs to be loaded.\n\t * onload - Callback with array of <mxXmlRequests>.\n\t * onerror - Optional function to execute on error.\n\t */\n\tgetAll: function(urls, onload, onerror)\n\t{\n\t\tvar remain = urls.length;\n\t\tvar result = [];\n\t\tvar errors = 0;\n\t\tvar err = function()\n\t\t{\n\t\t\tif (errors == 0 && onerror != null)\n\t\t\t{\n\t\t\t\tonerror();\n\t\t\t}\n\n\t\t\terrors++;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < urls.length; i++)\n\t\t{\n\t\t\t(function(url, index)\n\t\t\t{\n\t\t\t\tmxUtils.get(url, function(req)\n\t\t\t\t{\n\t\t\t\t\tvar status = req.getStatus();\n\t\t\t\t\t\n\t\t\t\t\tif (status < 200 || status > 299)\n\t\t\t\t\t{\n\t\t\t\t\t\terr();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult[index] = req;\n\t\t\t\t\t\tremain--;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (remain == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonload(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, err);\n\t\t\t})(urls[i], i);\n\t\t}\n\t\t\n\t\tif (remain == 0)\n\t\t{\n\t\t\tonload(result);\t\t\t\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: post\n\t * \n\t * Posts the specified params to the given URL *asynchronously* and invokes\n\t * the given functions depending on the request status. Returns the\n\t * <mxXmlRequest> in use. Both functions take the <mxXmlRequest> as the\n\t * only parameter. Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.post(url, 'key=value', function(req)\n\t * {\n\t * \tmxUtils.alert('Ready: '+req.isReady()+' Status: '+req.getStatus());\n\t *  // Process req.getDocumentElement() using DOM API if OK...\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the post request.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t */\n\tpost: function(url, params, onload, onerror)\n\t{\n\t\treturn new mxXmlRequest(url, params).send(onload, onerror);\n\t},\n\t\n\t/**\n\t * Function: submit\n\t * \n\t * Submits the given parameters to the specified URL using\n\t * <mxXmlRequest.simulate> and returns the <mxXmlRequest>.\n\t * Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the form.\n\t * doc - Document to create the form in.\n\t * target - Target to send the form result to.\n\t */\n\tsubmit: function(url, params, doc, target)\n\t{\n\t\treturn new mxXmlRequest(url, params).simulate(doc, target);\n\t},\n\t\n\t/**\n\t * Function: loadInto\n\t * \n\t * Loads the specified URL *asynchronously* into the specified document,\n\t * invoking onload after the document has been loaded. This implementation\n\t * does not use <mxXmlRequest>, but the document.load method.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * doc - The document to load the URL into.\n\t * onload - Function to execute when the URL has been loaded.\n\t */\n\tloadInto: function(url, doc, onload)\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tdoc.onreadystatechange = function ()\n\t\t\t{\n\t\t\t\tif (doc.readyState == 4)\n\t\t\t\t{\n\t\t\t\t\tonload();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.addEventListener('load', onload, false);\n\t\t}\n\t\t\n\t\tdoc.load(url);\n\t},\n\t\n\t/**\n\t * Function: getValue\n\t * \n\t * Returns the value for the given key in the given associative array or\n\t * the given default value if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null.\n\t */\n\tgetValue: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\t\n\t/**\n\t * Function: getNumber\n\t * \n\t * Returns the numeric value for the given key in the given associative\n\t * array or the given default value (or 0) if the value is null. The value\n\t * is converted to a numeric value using the Number function.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is 0.\n\t */\n\tgetNumber: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue || 0;\t\t\t\n\t\t}\n\t\t\n\t\treturn Number(value);\n\t},\n\t\n\t/**\n\t * Function: getColor\n\t * \n\t * Returns the color value for the given key in the given associative\n\t * array or the given default value if the value is null. If the value\n\t * is <mxConstants.NONE> then null is returned.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is null.\n\t */\n\tgetColor: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\telse if (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: clone\n\t * \n\t * Recursively clones the specified object ignoring all fieldnames in the\n\t * given array of transient fields. <mxObjectIdentity.FIELD_NAME> is always\n\t * ignored by this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to be cloned.\n\t * transients - Optional array of strings representing the fieldname to be\n\t * ignored.\n\t * shallow - Optional boolean argument to specify if a shallow clone should\n\t * be created, that is, one where all object references are not cloned or,\n\t * in other words, one where only atomic (strings, numbers) values are\n\t * cloned. Default is false.\n\t */\n\tclone: function(obj, transients, shallow)\n\t{\n\t\tshallow = (shallow != null) ? shallow : false;\n\t\tvar clone = null;\n\t\t\n\t\tif (obj != null && typeof(obj.constructor) == 'function')\n\t\t{\n\t\t\tclone = new obj.constructor();\n\t\t\t\n\t\t    for (var i in obj)\n\t\t    {\n\t\t    \tif (i != mxObjectIdentity.FIELD_NAME && (transients == null ||\n\t\t    \t\tmxUtils.indexOf(transients, i) < 0))\n\t\t    \t{\n\t\t\t    \tif (!shallow && typeof(obj[i]) == 'object')\n\t\t\t    \t{\n\t\t\t            clone[i] = mxUtils.clone(obj[i]);\n\t\t\t        }\n\t\t\t        else\n\t\t\t        {\n\t\t\t            clone[i] = obj[i];\n\t\t\t        }\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t    return clone;\n\t},\n\n\t/**\n\t * Function: equalPoints\n\t * \n\t * Compares all mxPoints in the given lists.\n\t * \n\t * Parameters:\n\t * \n\t * a - Array of <mxPoints> to be compared.\n\t * b - Array of <mxPoints> to be compared.\n\t */\n\tequalPoints: function(a, b)\n\t{\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\tfor (var i = 0; i < a.length; i++)\n\t\t\t{\n\t\t\t\tif (a[i] == b[i] || (a[i] != null && !a[i].equals(b[i])))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: equalEntries\n\t * \n\t * Returns true if all properties of the given objects are equal. Values\n\t * with NaN are equal to NaN and unequal to any other value.\n\t * \n\t * Parameters:\n\t * \n\t * a - First object to be compared.\n\t * b - Second object to be compared.\n\t */\n\tequalEntries: function(a, b)\n\t{\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\t// Counts keys in b to check if all values have been compared\n\t\t\tvar count = 0;\n\t\t\t\n\t\t\tfor (var key in b)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var key in a)\n\t\t\t{\n\t\t\t\tcount--\n\t\t\t\t\n\t\t\t\tif ((!mxUtils.isNaN(a[key]) || !mxUtils.isNaN(b[key])) && a[key] != b[key])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn count == 0;\n\t},\n\t\n\t/**\n\t * Function: removeDuplicates\n\t * \n\t * Removes all duplicates from the given array.\n\t */\n\tremoveDuplicates: function(arr)\n\t{\n\t\tvar dict = new mxDictionary();\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 0; i < arr.length; i++)\n\t\t{\n\t\t\tif (!dict.get(arr[i]))\n\t\t\t{\n\t\t\t\tresult.push(arr[i]);\n\t\t\t\tdict.put(arr[i], true);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNaN\n\t *\n\t * Returns true if the given value is of type number and isNaN returns true.\n\t */\n\tisNaN: function(value)\n\t{\n\t\treturn typeof(value) == 'number' && isNaN(value);\n\t},\n\t\n\t/**\n\t * Function: extend\n\t *\n\t * Assigns a copy of the superclass prototype to the subclass prototype.\n\t * Note that this does not call the constructor of the superclass at this\n\t * point, the superclass constructor should be called explicitely in the\n\t * subclass constructor. Below is an example.\n\t * \n\t * (code)\n\t * MyGraph = function(container, model, renderHint, stylesheet)\n\t * {\n\t *   mxGraph.call(this, container, model, renderHint, stylesheet);\n\t * }\n\t * \n\t * mxUtils.extend(MyGraph, mxGraph);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * ctor - Constructor of the subclass.\n\t * superCtor - Constructor of the superclass.\n\t */\n\textend: function(ctor, superCtor)\n\t{\n\t\tvar f = function() {};\n\t\tf.prototype = superCtor.prototype;\n\t\t\n\t\tctor.prototype = new f();\n\t\tctor.prototype.constructor = ctor;\n\t},\n\n\t/**\n\t * Function: toString\n\t * \n\t * Returns a textual representation of the specified object.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to return the string representation for.\n\t */\n\ttoString: function(obj)\n\t{\n\t    var output = '';\n\t    \n\t    for (var i in obj)\n\t    {\n\t    \ttry\n\t    \t{\n\t\t\t    if (obj[i] == null)\n\t\t\t    {\n\t\t            output += i + ' = [null]\\n';\n\t\t\t    }\n\t\t\t    else if (typeof(obj[i]) == 'function')\n\t\t\t    {\n\t\t            output += i + ' => [Function]\\n';\n\t\t        }\n\t\t        else if (typeof(obj[i]) == 'object')\n\t\t        {\n\t\t        \tvar ctor = mxUtils.getFunctionName(obj[i].constructor); \n\t\t            output += i + ' => [' + ctor + ']\\n';\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            output += i + ' = ' + obj[i] + '\\n';\n\t\t        }\n\t    \t}\n\t    \tcatch (e)\n\t    \t{\n\t    \t\toutput += i + '=' + e.message;\n\t    \t}\n\t    }\n\t    \n\t    return output;\n\t},\n\n\t/**\n\t * Function: toRadians\n\t * \n\t * Converts the given degree to radians.\n\t */\n\ttoRadians: function(deg)\n\t{\n\t\treturn Math.PI * deg / 180;\n\t},\n\n\t/**\n\t * Function: toDegree\n\t * \n\t * Converts the given radians to degree.\n\t */\n\ttoDegree: function(rad)\n\t{\n\t\treturn rad * 180 / Math.PI;\n\t},\n\t\n\t/**\n\t * Function: arcToCurves\n\t * \n\t * Converts the given arc to a series of curves.\n\t */\n\tarcToCurves: function(x0, y0, r1, r2, angle, largeArcFlag, sweepFlag, x, y)\n\t{\n\t\tx -= x0;\n\t\ty -= y0;\n\t\t\n        if (r1 === 0 || r2 === 0) \n        {\n        \treturn result;\n        }\n        \n        var fS = sweepFlag;\n        var psai = angle;\n        r1 = Math.abs(r1);\n        r2 = Math.abs(r2);\n        var ctx = -x / 2;\n        var cty = -y / 2;\n        var cpsi = Math.cos(psai * Math.PI / 180);\n        var spsi = Math.sin(psai * Math.PI / 180);\n        var rxd = cpsi * ctx + spsi * cty;\n        var ryd = -1 * spsi * ctx + cpsi * cty;\n        var rxdd = rxd * rxd;\n        var rydd = ryd * ryd;\n        var r1x = r1 * r1;\n        var r2y = r2 * r2;\n        var lamda = rxdd / r1x + rydd / r2y;\n        var sds;\n        \n        if (lamda > 1) \n        {\n        \tr1 = Math.sqrt(lamda) * r1;\n        \tr2 = Math.sqrt(lamda) * r2;\n        \tsds = 0;\n        }  \n        else\n        {\n        \tvar seif = 1;\n            \n        \tif (largeArcFlag === fS) \n        \t{\n        \t\tseif = -1;\n        \t}\n            \n        \tsds = seif * Math.sqrt((r1x * r2y - r1x * rydd - r2y * rxdd) / (r1x * rydd + r2y * rxdd));\n        }\n        \n        var txd = sds * r1 * ryd / r2;\n        var tyd = -1 * sds * r2 * rxd / r1;\n        var tx = cpsi * txd - spsi * tyd + x / 2;\n        var ty = spsi * txd + cpsi * tyd + y / 2;\n        var rad = Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1) - Math.atan2(0, 1);\n        var s1 = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        rad = Math.atan2((-ryd - tyd) / r2, (-rxd - txd) / r1) - Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1);\n        var dr = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        \n        if (fS == 0 && dr > 0) \n        {\n        \tdr -= 2 * Math.PI;\n        }\n        else if (fS != 0 && dr < 0) \n        {\n        \tdr += 2 * Math.PI;\n        }\n        \n        var sse = dr * 2 / Math.PI;\n        var seg = Math.ceil(sse < 0 ? -1 * sse : sse);\n        var segr = dr / seg;\n        var t = 8/3 * Math.sin(segr / 4) * Math.sin(segr / 4) / Math.sin(segr / 2);\n        var cpsir1 = cpsi * r1;\n        var cpsir2 = cpsi * r2;\n        var spsir1 = spsi * r1;\n        var spsir2 = spsi * r2;\n        var mc = Math.cos(s1);\n        var ms = Math.sin(s1);\n        var x2 = -t * (cpsir1 * ms + spsir2 * mc);\n        var y2 = -t * (spsir1 * ms - cpsir2 * mc);\n        var x3 = 0;\n        var y3 = 0;\n\n\t\tvar result = [];\n        \n        for (var n = 0; n < seg; ++n) \n        {\n            s1 += segr;\n            mc = Math.cos(s1);\n            ms = Math.sin(s1);\n            \n            x3 = cpsir1 * mc - spsir2 * ms + tx;\n            y3 = spsir1 * mc + cpsir2 * ms + ty;\n            var dx = -t * (cpsir1 * ms + spsir2 * mc);\n            var dy = -t * (spsir1 * ms - cpsir2 * mc);\n            \n            // CurveTo updates x0, y0 so need to restore it\n            var index = n * 6;\n            result[index] = Number(x2 + x0);\n            result[index + 1] = Number(y2 + y0);\n            result[index + 2] = Number(x3 - dx + x0);\n            result[index + 3] = Number(y3 - dy + y0);\n            result[index + 4] = Number(x3 + x0);\n            result[index + 5] = Number(y3 + y0);\n            \n\t\t\tx2 = x3 + dx;\n            y2 = y3 + dy;\n        }\n        \n        return result;\n\t},\n\n\t/**\n\t * Function: getBoundingBox\n\t * \n\t * Returns the bounding box for the rotated rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * rect - <mxRectangle> to be rotated.\n\t * angle - Number that represents the angle (in degrees).\n\t * cx - Optional <mxPoint> that represents the rotation center. If no\n\t * rotation center is given then the center of rect is used.\n\t */\n\tgetBoundingBox: function(rect, rotation, cx)\n\t{\n        var result = null;\n\n        if (rect != null && rotation != null && rotation != 0)\n        {\n            var rad = mxUtils.toRadians(rotation);\n            var cos = Math.cos(rad);\n            var sin = Math.sin(rad);\n\n            cx = (cx != null) ? cx : new mxPoint(rect.x + rect.width / 2, rect.y  + rect.height / 2);\n\n            var p1 = new mxPoint(rect.x, rect.y);\n            var p2 = new mxPoint(rect.x + rect.width, rect.y);\n            var p3 = new mxPoint(p2.x, rect.y + rect.height);\n            var p4 = new mxPoint(rect.x, p3.y);\n\n            p1 = mxUtils.getRotatedPoint(p1, cos, sin, cx);\n            p2 = mxUtils.getRotatedPoint(p2, cos, sin, cx);\n            p3 = mxUtils.getRotatedPoint(p3, cos, sin, cx);\n            p4 = mxUtils.getRotatedPoint(p4, cos, sin, cx);\n\n            result = new mxRectangle(p1.x, p1.y, 0, 0);\n            result.add(new mxRectangle(p2.x, p2.y, 0, 0));\n            result.add(new mxRectangle(p3.x, p3.y, 0, 0));\n            result.add(new mxRectangle(p4.x, p4.y, 0, 0));\n        }\n\n        return result;\n\t},\n\n\t/**\n\t * Function: getRotatedPoint\n\t * \n\t * Rotates the given point by the given cos and sin.\n\t */\n\tgetRotatedPoint: function(pt, cos, sin, c)\n\t{\n\t\tc = (c != null) ? c : new mxPoint();\n\t\tvar x = pt.x - c.x;\n\t\tvar y = pt.y - c.y;\n\n\t\tvar x1 = x * cos - y * sin;\n\t\tvar y1 = y * cos + x * sin;\n\n\t\treturn new mxPoint(x1 + c.x, y1 + c.y);\n\t},\n\t\n\t/**\n\t * Returns an integer mask of the port constraints of the given map\n\t * @param dict the style map to determine the port constraints for\n\t * @param defaultValue Default value to return if the key is undefined.\n\t * @return the mask of port constraint directions\n\t * \n\t * Parameters:\n\t * \n\t * terminal - <mxCelState> that represents the terminal.\n\t * edge - <mxCellState> that represents the edge.\n\t * source - Boolean that specifies if the terminal is the source terminal.\n\t * defaultValue - Default value to be returned.\n\t */\n\tgetPortConstraints: function(terminal, edge, source, defaultValue)\n\t{\n\t\tvar value = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT,\n\t\t\tmxUtils.getValue(edge.style, (source) ? mxConstants.STYLE_SOURCE_PORT_CONSTRAINT :\n\t\t\t\tmxConstants.STYLE_TARGET_PORT_CONSTRAINT, null));\n\t\t\n\t\tif (value == null)\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar directions = value.toString();\n\t\t\tvar returnValue = mxConstants.DIRECTION_MASK_NONE;\n\t\t\tvar constraintRotationEnabled = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT_ROTATION, 0);\n\t\t\tvar rotation = 0;\n\t\t\t\n\t\t\tif (constraintRotationEnabled == 1)\n\t\t\t{\n\t\t\t\trotation = mxUtils.getValue(terminal.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t}\n\t\t\t\n\t\t\tvar quad = 0;\n\n\t\t\tif (rotation > 45)\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t\t\n\t\t\t\tif (rotation >= 135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (rotation < -45)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\tif (rotation <= -135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_NORTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_WEST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_SOUTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_EAST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn returnValue;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: reversePortConstraints\n\t * \n\t * Reverse the port constraint bitmask. For example, north | east\n\t * becomes south | west\n\t */\n\treversePortConstraints: function(constraint)\n\t{\n\t\tvar result = 0;\n\t\t\n\t\tresult = (constraint & mxConstants.DIRECTION_MASK_WEST) << 3;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_NORTH) << 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_SOUTH) >> 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_EAST) >> 3;\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNearestSegment\n\t * \n\t * Finds the index of the nearest segment on the given cell state for\n\t * the specified coordinate pair.\n\t */\n\tfindNearestSegment: function(state, x, y)\n\t{\n\t\tvar index = -1;\n\t\t\n\t\tif (state.absolutePoints.length > 0)\n\t\t{\n\t\t\tvar last = state.absolutePoints[0];\n\t\t\tvar min = null;\n\t\t\t\n\t\t\tfor (var i = 1; i < state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tvar current = state.absolutePoints[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(last.x, last.y,\n\t\t\t\t\tcurrent.x, current.y, x, y);\n\t\t\t\t\n\t\t\t\tif (min == null || dist < min)\n\t\t\t\t{\n\t\t\t\t\tmin = dist;\n\t\t\t\t\tindex = i - 1;\n\t\t\t\t}\n\n\t\t\t\tlast = current;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn index;\n\t},\n\n\t/**\n\t * Function: getDirectedBounds\n\t * \n\t * Adds the given margins to the given rectangle and rotates and flips the\n\t * rectangle according to the respective styles in style.\n\t */\n\tgetDirectedBounds: function (rect, m, style, flipH, flipV)\n\t{\n\t\tvar d = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\t\tflipH = (flipH != null) ? flipH : mxUtils.getValue(style, mxConstants.STYLE_FLIPH, false);\n\t\tflipV = (flipV != null) ? flipV : mxUtils.getValue(style, mxConstants.STYLE_FLIPV, false);\n\n\t\tm.x = Math.round(Math.max(0, Math.min(rect.width, m.x)));\n\t\tm.y = Math.round(Math.max(0, Math.min(rect.height, m.y)));\n\t\tm.width = Math.round(Math.max(0, Math.min(rect.width, m.width)));\n\t\tm.height = Math.round(Math.max(0, Math.min(rect.height, m.height)));\n\t\t\n\t\tif ((flipV && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipH && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.width;\n\t\t\tm.width = tmp;\n\t\t}\n\t\t\t\n\t\tif ((flipH && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipV && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.y;\n\t\t\tm.y = m.height;\n\t\t\tm.height = tmp;\n\t\t}\n\t\t\n\t\tvar m2 = mxRectangle.fromRectangle(m);\n\t\t\n\t\tif (d == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tm2.y = m.x;\n\t\t\tm2.x = m.height;\n\t\t\tm2.width = m.y;\n\t\t\tm2.height = m.width;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tm2.y = m.height;\n\t\t\tm2.x = m.width;\n\t\t\tm2.width = m.x;\n\t\t\tm2.height = m.y;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tm2.y = m.width;\n\t\t\tm2.x = m.y;\n\t\t\tm2.width = m.height;\n\t\t\tm2.height = m.x;\n\t\t}\n\t\t\n\t\treturn new mxRectangle(rect.x + m2.x, rect.y + m2.y, rect.width - m2.width - m2.x, rect.height - m2.height - m2.y);\n\t},\n\n\t/**\n\t * Function: getPerimeterPoint\n\t * \n\t * Returns the intersection between the polygon defined by the array of\n\t * points and the line between center and point.\n\t */\n\tgetPerimeterPoint: function (pts, center, point)\n\t{\n\t\tvar min = null;\n\t\t\n\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t{\n\t\t\tvar pt = mxUtils.intersection(pts[i].x, pts[i].y, pts[i + 1].x, pts[i + 1].y,\n\t\t\t\tcenter.x, center.y, point.x, point.y);\n\t\t\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar dx = point.x - pt.x;\n\t\t\t\tvar dy = point.y - pt.y;\n\t\t\t\tvar ip = {p: pt, distSq: dy * dy + dx * dx};\n\t\t\t\t\n\t\t\t\tif (ip != null && (min == null || min.distSq > ip.distSq))\n\t\t\t\t{\n\t\t\t\t\tmin = ip;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (min != null) ? min.p : null;\n\t},\n\n\t/**\n\t * Function: rectangleIntersectsSegment\n\t * \n\t * Returns true if the given rectangle intersects the given segment.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the rectangle.\n\t * p1 - <mxPoint> that represents the first point of the segment.\n\t * p2 - <mxPoint> that represents the second point of the segment.\n\t */\n\trectangleIntersectsSegment: function(bounds, p1, p2)\n\t{\n\t\tvar top = bounds.y;\n\t\tvar left = bounds.x;\n\t\tvar bottom = top + bounds.height;\n\t\tvar right = left + bounds.width;\n\t\t\t\n\t\t// Find min and max X for the segment\n\t\tvar minX = p1.x;\n\t\tvar maxX = p2.x;\n\t\t\n\t\tif (p1.x > p2.x)\n\t\t{\n\t\t  minX = p2.x;\n\t\t  maxX = p1.x;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's x-projections\n\t\tif (maxX > right)\n\t\t{\n\t\t  maxX = right;\n\t\t}\n\t\t\n\t\tif (minX < left)\n\t\t{\n\t\t  minX = left;\n\t\t}\n\t\t\n\t\tif (minX > maxX) // If their projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\t// Find corresponding min and max Y for min and max X we found before\n\t\tvar minY = p1.y;\n\t\tvar maxY = p2.y;\n\t\tvar dx = p2.x - p1.x;\n\t\t\n\t\tif (Math.abs(dx) > 0.0000001)\n\t\t{\n\t\t  var a = (p2.y - p1.y) / dx;\n\t\t  var b = p1.y - a * p1.x;\n\t\t  minY = a * minX + b;\n\t\t  maxY = a * maxX + b;\n\t\t}\n\t\t\n\t\tif (minY > maxY)\n\t\t{\n\t\t  var tmp = maxY;\n\t\t  maxY = minY;\n\t\t  minY = tmp;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's y-projections\n\t\tif (maxY > bottom)\n\t\t{\n\t\t  maxY = bottom;\n\t\t}\n\t\t\n\t\tif (minY < top)\n\t\t{\n\t\t  minY = top;\n\t\t}\n\t\t\n\t\tif (minY > maxY) // If Y-projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\t\n\t/**\n\t * Function: contains\n\t * \n\t * Returns true if the specified point (x, y) is contained in the given rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the area.\n\t * x - X-coordinate of the point.\n\t * y - Y-coordinate of the point.\n\t */\n\tcontains: function(bounds, x, y)\n\t{\n\t\treturn (bounds.x <= x && bounds.x + bounds.width >= x &&\n\t\t\t\tbounds.y <= y && bounds.y + bounds.height >= y);\n\t},\n\n\t/**\n\t * Function: intersects\n\t * \n\t * Returns true if the two rectangles intersect.\n\t * \n\t * Parameters:\n\t * \n\t * a - <mxRectangle> to be checked for intersection.\n\t * b - <mxRectangle> to be checked for intersection.\n\t */\n\tintersects: function(a, b)\n\t{\n\t\tvar tw = a.width;\n\t\tvar th = a.height;\n\t\tvar rw = b.width;\n\t\tvar rh = b.height;\n\t\t\n\t\tif (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0)\n\t\t{\n\t\t    return false;\n\t\t}\n\t\t\n\t\tvar tx = a.x;\n\t\tvar ty = a.y;\n\t\tvar rx = b.x;\n\t\tvar ry = b.y;\n\t\t\n\t\trw += rx;\n\t\trh += ry;\n\t\ttw += tx;\n\t\tth += ty;\n\n\t\treturn ((rw < rx || rw > tx) &&\n\t\t\t(rh < ry || rh > ty) &&\n\t\t\t(tw < tx || tw > rx) &&\n\t\t\t(th < ty || th > ry));\n\t},\n\n\t/**\n\t * Function: intersects\n\t * \n\t * Returns true if the two rectangles intersect.\n\t * \n\t * Parameters:\n\t * \n\t * a - <mxRectangle> to be checked for intersection.\n\t * b - <mxRectangle> to be checked for intersection.\n\t */\n\tintersectsHotspot: function(state, x, y, hotspot, min, max)\n\t{\n\t\thotspot = (hotspot != null) ? hotspot : 1;\n\t\tmin = (min != null) ? min : 0;\n\t\tmax = (max != null) ? max : 0;\n\t\t\n\t\tif (hotspot > 0)\n\t\t{\n\t\t\tvar cx = state.getCenterX();\n\t\t\tvar cy = state.getCenterY();\n\t\t\tvar w = state.width;\n\t\t\tvar h = state.height;\n\t\t\t\n\t\t\tvar start = mxUtils.getValue(state.style, mxConstants.STYLE_STARTSIZE) * state.view.scale;\n\n\t\t\tif (start > 0)\n\t\t\t{\n\t\t\t\tif (mxUtils.getValue(state.style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t{\n\t\t\t\t\tcy = state.y + start / 2;\n\t\t\t\t\th = start;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcx = state.x + start / 2;\n\t\t\t\t\tw = start;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tw = Math.max(min, w * hotspot);\n\t\t\th = Math.max(min, h * hotspot);\n\t\t\t\n\t\t\tif (max > 0)\n\t\t\t{\n\t\t\t\tw = Math.min(w, max);\n\t\t\t\th = Math.min(h, max);\n\t\t\t}\n\t\t\t\n\t\t\tvar rect = new mxRectangle(cx - w / 2, cy - h / 2, w, h);\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(x, y), cos, sin, cx);\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\treturn mxUtils.contains(rect, x, y);\t\t\t\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: getOffset\n\t * \n\t * Returns the offset for the specified container as an <mxPoint>. The\n\t * offset is the distance from the top left corner of the container to the\n\t * top left corner of the document.\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to return the offset for.\n\t * scollOffset - Optional boolean to add the scroll offset of the document.\n\t * Default is false.\n\t */\n\tgetOffset: function(container, scrollOffset)\n\t{\n\t\tvar offsetLeft = 0;\n\t\tvar offsetTop = 0;\n\t\t\n\t\t// Ignores document scroll origin for fixed elements\n\t\tvar fixed = false;\n\t\tvar node = container;\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\n\t\twhile (node != null && node != b && node != d && !fixed)\n\t\t{\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\t\n\t\tif (!scrollOffset && !fixed)\n\t\t{\n\t\t\tvar offset = mxUtils.getDocumentScrollOrigin(container.ownerDocument);\n\t\t\toffsetLeft += offset.x;\n\t\t\toffsetTop += offset.y;\n\t\t}\n\t\t\n\t\tvar r = container.getBoundingClientRect();\n\t\t\n\t\tif (r != null)\n\t\t{\n\t\t\toffsetLeft += r.left;\n\t\t\toffsetTop += r.top;\n\t\t}\n\t\t\n\t\treturn new mxPoint(offsetLeft, offsetTop);\n\t},\n\n\t/**\n\t * Function: getDocumentScrollOrigin\n\t * \n\t * Returns the scroll origin of the given document or the current document\n\t * if no document is given.\n\t */\n\tgetDocumentScrollOrigin: function(doc)\n\t{\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\treturn new mxPoint(doc.body.scrollLeft, doc.body.scrollTop);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar wnd = doc.defaultView || doc.parentWindow;\n\t\t\t\n\t\t\tvar x = (wnd != null && window.pageXOffset !== undefined) ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft;\n\t\t\tvar y = (wnd != null && window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getScrollOrigin\n\t * \n\t * Returns the top, left corner of the viewrect as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose scroll origin should be returned.\n\t * includeAncestors - Whether the scroll origin of the ancestors should be\n\t * included. Default is false.\n\t * includeDocument - Whether the scroll origin of the document should be\n\t * included. Default is true.\n\t */\n\tgetScrollOrigin: function(node, includeAncestors, includeDocument)\n\t{\n\t\tincludeAncestors = (includeAncestors != null) ? includeAncestors : false;\n\t\tincludeDocument = (includeDocument != null) ? includeDocument : true;\n\t\t\n\t\tvar doc = (node != null) ? node.ownerDocument : document;\n\t\tvar b = doc.body;\n\t\tvar d = doc.documentElement;\n\t\tvar result = new mxPoint();\n\t\tvar fixed = false;\n\n\t\twhile (node != null && node != b && node != d)\n\t\t{\n\t\t\tif (!isNaN(node.scrollLeft) && !isNaN(node.scrollTop))\n\t\t\t{\n\t\t\t\tresult.x += node.scrollLeft;\n\t\t\t\tresult.y += node.scrollTop;\n\t\t\t}\n\t\t\t\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\n\t\t\tnode = (includeAncestors) ? node.parentNode : null;\n\t\t}\n\n\t\tif (!fixed && includeDocument)\n\t\t{\n\t\t\tvar origin = mxUtils.getDocumentScrollOrigin(doc);\n\n\t\t\tresult.x += origin.x;\n\t\t\tresult.y += origin.y;\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: convertPoint\n\t * \n\t * Converts the specified point (x, y) using the offset of the specified\n\t * container and returns a new <mxPoint> with the result.\n\t * \n\t * (code)\n\t * var pt = mxUtils.convertPoint(graph.container,\n\t *   mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to use for the offset.\n\t * x - X-coordinate of the point to be converted.\n\t * y - Y-coordinate of the point to be converted.\n\t */\n\tconvertPoint: function(container, x, y)\n\t{\n\t\tvar origin = mxUtils.getScrollOrigin(container, false);\n\t\tvar offset = mxUtils.getOffset(container);\n\n\t\toffset.x -= origin.x;\n\t\toffset.y -= origin.y;\n\t\t\n\t\treturn new mxPoint(x - offset.x, y - offset.y);\n\t},\n\t\n\t/**\n\t * Function: ltrim\n\t * \n\t * Strips all whitespaces from the beginning of the string. Without the\n\t * second parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\tltrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"^[\" + chars + \"]+\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: rtrim\n\t * \n\t * Strips all whitespaces from the end of the string. Without the second\n\t * parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\trtrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"[\" + chars + \"]+$\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: trim\n\t * \n\t * Strips all whitespaces from both end of the string.\n\t * Without the second parameter, Javascript function will trim these\n\t * characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\ttrim: function(str, chars)\n\t{\n\t\treturn mxUtils.ltrim(mxUtils.rtrim(str, chars), chars);\n\t},\n\t\n\t/**\n\t * Function: isNumeric\n\t * \n\t * Returns true if the specified value is numeric, that is, if it is not\n\t * null, not an empty string, not a HEX number and isNaN returns false.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisNumeric: function(n)\n\t{\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n) && (typeof(n) != 'string' || n.toLowerCase().indexOf('0x') < 0);\n\t},\n\n\t/**\n\t * Function: isInteger\n\t * \n\t * Returns true if the given value is an valid integer number.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisInteger: function(n)\n\t{\n\t\treturn String(parseInt(n)) === String(n);\n\t},\n\n\t/**\n\t * Function: mod\n\t * \n\t * Returns the remainder of division of n by m. You should use this instead\n\t * of the built-in operation as the built-in operation does not properly\n\t * handle negative numbers.\n\t */\n\tmod: function(n, m)\n\t{\n\t\treturn ((n % m) + m) % m;\n\t},\n\n\t/**\n\t * Function: intersection\n\t * \n\t * Returns the intersection of two lines as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * x0 - X-coordinate of the first line's startpoint.\n\t * y0 - X-coordinate of the first line's startpoint.\n\t * x1 - X-coordinate of the first line's endpoint.\n\t * y1 - Y-coordinate of the first line's endpoint.\n\t * x2 - X-coordinate of the second line's startpoint.\n\t * y2 - Y-coordinate of the second line's startpoint.\n\t * x3 - X-coordinate of the second line's endpoint.\n\t * y3 - Y-coordinate of the second line's endpoint.\n\t */\n\tintersection: function (x0, y0, x1, y1, x2, y2, x3, y3)\n\t{\n\t\tvar denom = ((y3 - y2) * (x1 - x0)) - ((x3 - x2) * (y1 - y0));\n\t\tvar nume_a = ((x3 - x2) * (y0 - y2)) - ((y3 - y2) * (x0 - x2));\n\t\tvar nume_b = ((x1 - x0) * (y0 - y2)) - ((y1 - y0) * (x0 - x2));\n\n\t\tvar ua = nume_a / denom;\n\t\tvar ub = nume_b / denom;\n\t\t\n\t\tif(ua >= 0.0 && ua <= 1.0 && ub >= 0.0 && ub <= 1.0)\n\t\t{\n\t\t\t// Get the intersection point\n\t\t\tvar x = x0 + ua * (x1 - x0);\n\t\t\tvar y = y0 + ua * (y1 - y0);\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t\t\n\t\t// No intersection\n\t\treturn null;\n\t},\n\t\n\t/**\n\t * Function: ptSegDistSq\n\t * \n\t * Returns the square distance between a segment and a point. To get the\n\t * distance between a point and a line (with infinite length) use\n\t * <mxUtils.ptLineDist>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\tptSegDistSq: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\n\t\tpx -= x1;\n\t\tpy -= y1;\n\n\t\tvar dotprod = px * x2 + py * y2;\n\t\tvar projlenSq;\n\n\t\tif (dotprod <= 0.0)\n\t\t{\n\t\t    projlenSq = 0.0;\n\t\t}\n\t\telse\n\t\t{\n\t\t    px = x2 - px;\n\t\t    py = y2 - py;\n\t\t    dotprod = px * x2 + py * y2;\n\n\t\t    if (dotprod <= 0.0)\n\t\t    {\n\t\t\t\tprojlenSq = 0.0;\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t\t\tprojlenSq = dotprod * dotprod / (x2 * x2 + y2 * y2);\n\t\t    }\n\t\t}\n\n\t\tvar lenSq = px * px + py * py - projlenSq;\n\t\t\n\t\tif (lenSq < 0)\n\t\t{\n\t\t    lenSq = 0;\n\t\t}\n\t\t\n\t\treturn lenSq;\n    },\n\t\n\t/**\n\t * Function: ptLineDist\n\t * \n\t * Returns the distance between a line defined by two points and a point.\n\t * To get the distance between a point and a segment (with a specific\n\t * length) use <mxUtils.ptSeqDistSq>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of point 1 of the line.\n\t * y1 - Y-coordinate of point 1 of the line.\n\t * x2 - X-coordinate of point 1 of the line.\n\t * y2 - Y-coordinate of point 1 of the line.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n    ptLineDist: function(x1, y1, x2, y2, px, py)\n    {\n\t\treturn Math.abs((y2 - y1) * px - (x2 - x1) * py + x2 * y1 - y2 * x1) /\n\t\t\tMath.sqrt((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n    },\n    \t\n\t/**\n\t * Function: relativeCcw\n\t * \n\t * Returns 1 if the given point on the right side of the segment, 0 if its\n\t * on the segment, and -1 if the point is on the left side of the segment.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\trelativeCcw: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\t\tpx -= x1;\n\t\tpy -= y1;\n\t\tvar ccw = px * y2 - py * x2;\n\t\t\n\t\tif (ccw == 0.0)\n\t\t{\n\t\t    ccw = px * x2 + py * y2;\n\t\t    \n\t\t    if (ccw > 0.0)\n\t\t    {\n\t\t\t\tpx -= x2;\n\t\t\t\tpy -= y2;\n\t\t\t\tccw = px * x2 + py * y2;\n\t\t\t\t\n\t\t\t\tif (ccw < 0.0)\n\t\t\t\t{\n\t\t\t\t    ccw = 0.0;\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t\treturn (ccw < 0.0) ? -1 : ((ccw > 0.0) ? 1 : 0);\n    },\n    \n\t/**\n\t * Function: animateChanges\n\t * \n\t * See <mxEffects.animateChanges>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tanimateChanges: function(graph, changes)\n\t{\n\t\t// LATER: Deprecated, remove this function\n    \tmxEffects.animateChanges.apply(this, arguments);\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * See <mxEffects.cascadeOpacity>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\tmxEffects.cascadeOpacity.apply(this, arguments);\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * See <mxEffects.fadeOut>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tmxEffects.fadeOut.apply(this, arguments);\n\t},\n\t\n\t/**\n\t * Function: setOpacity\n\t * \n\t * Sets the opacity of the specified DOM node to the given value in %.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the opacity for.\n\t * value - Opacity in %. Possible values are between 0 and 100.\n\t */\n\tsetOpacity: function(node, value)\n\t{\n\t\tif (mxUtils.isVml(node))\n\t\t{\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t    \t\t// TODO: Why is the division by 5 needed in VML?\n\t\t\t    node.style.filter = 'alpha(opacity=' + (value/5) + ')';\n\t    \t}\n\t\t}\n\t\telse if (mxClient.IS_IE && (typeof(document.documentMode) === 'undefined' || document.documentMode < 9))\n\t    {\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t\t\t    node.style.filter = 'alpha(opacity=' + value + ')';\n\t    \t}\n\t\t}\n\t\telse\n\t\t{\n\t\t    node.style.opacity = (value / 100);\n\t\t}\n\t},\n\n\t/**\n\t * Function: createImage\n\t * \n\t * Creates and returns an image (IMG node) or VML image (v:image) in IE6 in\n\t * quirks mode.\n\t * \n\t * Parameters:\n\t * \n\t * src - URL that points to the image to be displayed.\n\t */\n\tcreateImage: function(src)\n\t{\n        var imageNode = null;\n        \n\t\tif (mxClient.IS_IE6 && document.compatMode != 'CSS1Compat')\n\t\t{\n        \timageNode = document.createElement(mxClient.VML_PREFIX + ':image');\n        \timageNode.setAttribute('src', src);\n        \timageNode.style.borderStyle = 'none';\n        }\n\t\telse\n\t\t{\n\t\t\timageNode = document.createElement('img');\n\t\t\timageNode.setAttribute('src', src);\n\t\t\timageNode.setAttribute('border', '0');\n\t\t}\n\t\t\n\t\treturn imageNode;\n\t},\n\n\t/**\n\t * Function: sortCells\n\t * \n\t * Sorts the given cells according to the order in the cell hierarchy.\n\t * Ascending is optional and defaults to true.\n\t */\n\tsortCells: function(cells, ascending)\n\t{\n\t\tascending = (ascending != null) ? ascending : true;\n\t\tvar lookup = new mxDictionary();\n\t\tcells.sort(function(o1, o2)\n\t\t{\n\t\t\tvar p1 = lookup.get(o1);\n\t\t\t\n\t\t\tif (p1 == null)\n\t\t\t{\n\t\t\t\tp1 = mxCellPath.create(o1).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o1, p1);\n\t\t\t}\n\t\t\t\n\t\t\tvar p2 = lookup.get(o2);\n\t\t\t\n\t\t\tif (p2 == null)\n\t\t\t{\n\t\t\t\tp2 = mxCellPath.create(o2).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o2, p2);\n\t\t\t}\n\t\t\t\n\t\t\tvar comp = mxCellPath.compare(p1, p2);\n\t\t\t\n\t\t\treturn (comp == 0) ? 0 : (((comp > 0) == ascending) ? 1 : -1);\n\t\t});\n\t\t\n\t\treturn cells;\n\t},\n\n\t/**\n\t * Function: getStylename\n\t * \n\t * Returns the stylename in a style of the form [(stylename|key=value);] or\n\t * an empty string if the given style does not contain a stylename.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylename: function(style)\n\t{\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\tvar stylename = pairs[0];\n\t\t\t\n\t\t\tif (stylename.indexOf('=') < 0)\n\t\t\t{\n\t\t\t\treturn stylename;\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn '';\n\t},\n\n\t/**\n\t * Function: getStylenames\n\t * \n\t * Returns the stylenames in a style of the form [(stylename|key=value);]\n\t * or an empty array if the given style does not contain any stylenames.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < pairs.length; i++)\n\t\t\t{\n\t\t\t\tif (pairs[i].indexOf('=') < 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(pairs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: indexOfStylename\n\t * \n\t * Returns the index of the given stylename in the given style. This\n\t * returns -1 if the given stylename does not occur (as a stylename) in the\n\t * given style, otherwise it returns the index of the first character.\n\t */\n\tindexOfStylename: function(style, stylename)\n\t{\n\t\tif (style != null && stylename != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\tvar pos = 0;\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] == stylename)\n\t\t\t\t{\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpos += tokens[i].length + 1;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\t\n\t/**\n\t * Function: addStylename\n\t * \n\t * Adds the specified stylename to the given style if it does not already\n\t * contain the stylename.\n\t */\n\taddStylename: function(style, stylename)\n\t{\n\t\tif (mxUtils.indexOfStylename(style, stylename) < 0)\n\t\t{\n\t\t\tif (style == null)\n\t\t\t{\n\t\t\t\tstyle = '';\n\t\t\t}\n\t\t\telse if (style.length > 0 && style.charAt(style.length - 1) != ';')\n\t\t\t{\n\t\t\t\tstyle += ';';\n\t\t\t}\n\t\t\t\n\t\t\tstyle += stylename;\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: removeStylename\n\t * \n\t * Removes all occurrences of the specified stylename in the given style\n\t * and returns the updated style. Trailing semicolons are not preserved.\n\t */\n\tremoveStylename: function(style, stylename)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] != stylename)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\t\n\t/**\n\t * Function: removeAllStylenames\n\t * \n\t * Removes all stylenames from the given style and returns the updated\n\t * style.\n\t */\n\tremoveAllStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\t// Keeps the key, value assignments\n\t\t\t\tif (tokens[i].indexOf('=') >= 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\n\t/**\n\t * Function: setCellStyles\n\t * \n\t * Assigns the value for the given key in the styles of the given cells, or\n\t * removes the key from the styles if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> to execute the transaction in.\n\t * cells - Array of <mxCells> to be updated.\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetCellStyles: function(model, cells, key, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyle(model.getStyle(cells[i]), key, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyle\n\t * \n\t * Adds or removes the given key, value pair to the style and returns the\n\t * new style. If value is null or zero length then the key is removed from\n\t * the style. This is for cell styles, not for CSS styles.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetStyle: function(style, key, value)\n\t{\n\t\tvar isValue = value != null && (typeof(value.length) == 'undefined' || value.length > 0);\n\t\t\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (isValue)\n\t\t\t{\n\t\t\t\tstyle = key + '=' + value + ';';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (style.substring(0, key.length + 1) == key + '=')\n\t\t\t{\n\t\t\t\tvar next = style.indexOf(';');\n\t\t\t\t\n\t\t\t\tif (isValue)\n\t\t\t\t{\n\t\t\t\t\tstyle = key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = (next < 0 || next == style.length - 1) ? '' : style.substring(next + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar index = style.indexOf(';' + key + '=');\n\t\t\t\t\n\t\t\t\tif (index < 0)\n\t\t\t\t{\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sep = (style.charAt(style.length - 1) == ';') ? '' : ';';\n\t\t\t\t\t\tstyle = style + sep + key + '=' + value + ';';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar next = style.indexOf(';', index + 1);\n\t\t\t\t\t\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index + 1) + key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index) + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\n\t/**\n\t * Function: setCellStyleFlags\n\t * \n\t * Sets or toggles the flag bit for the given key in the cell's styles.\n\t * If value is null then the flag is toggled.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var cells = graph.getSelectionCells();\n\t * mxUtils.setCellStyleFlags(graph.model,\n\t * \t\t\tcells,\n\t * \t\t\tmxConstants.STYLE_FONTSTYLE,\n\t * \t\t\tmxConstants.FONT_BOLD);\n\t * (end)\n\t * \n\t * Toggles the bold font style.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> that contains the cells.\n\t * cells - Array of <mxCells> to change the style for.\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the flag.\n\t */\n\tsetCellStyleFlags: function(model, cells, key, flag, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyleFlag(\n\t\t\t\t\t\t\tmodel.getStyle(cells[i]),\n\t\t\t\t\t\t\tkey, flag, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyleFlag\n\t * \n\t * Sets or removes the given key from the specified style and returns the\n\t * new style. If value is null then the flag is toggled.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the given flag.\n\t */\n\tsetStyleFlag: function(style, key, flag, value)\n\t{\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (value || value == null)\n\t\t\t{\n\t\t\t\tstyle = key+'='+flag;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstyle = key+'=0';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar index = style.indexOf(key+'=');\n\t\t\t\n\t\t\tif (index < 0)\n\t\t\t{\n\t\t\t\tvar sep = (style.charAt(style.length-1) == ';') ? '' : ';';\n\n\t\t\t\tif (value || value == null)\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=' + flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=0';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar cont = style.indexOf(';', index);\n\t\t\t\tvar tmp = '';\n\t\t\t\t\n\t\t\t\tif (cont < 0)\n\t\t\t\t{\n\t\t\t\t\ttmp  = style.substring(index+key.length+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = style.substring(index+key.length+1, cont);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (value == null)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) ^ flag;\n\t\t\t\t}\n\t\t\t\telse if (value)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) | flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) & ~flag;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstyle = style.substring(0, index) + key + '=' + tmp +\n\t\t\t\t\t((cont >= 0) ? style.substring(cont) : '');\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: getAlignmentAsPoint\n\t * \n\t * Returns an <mxPoint> that represents the horizontal and vertical alignment\n\t * for numeric computations. X is -0.5 for center, -1 for right and 0 for\n\t * left alignment. Y is -0.5 for middle, -1 for bottom and 0 for top\n\t * alignment. Default values for missing arguments is top, left.\n\t */\n\tgetAlignmentAsPoint: function(align, valign)\n\t{\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\t// Horizontal alignment\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tdx = -0.5;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tdx = -1;\n\t\t}\n\n\t\t// Vertical alignment\n\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tdy = -0.5;\n\t\t}\n\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy = -1;\n\t\t}\n\t\t\n\t\treturn new mxPoint(dx, dy);\n\t},\n\t\n\t/**\n\t * Function: getSizeForString\n\t * \n\t * Returns an <mxRectangle> with the size (width and height in pixels) of\n\t * the given string. The string may contain HTML markup. Newlines should be\n\t * converted to <br> before calling this method. The caller is responsible\n\t * for sanitizing the HTML markup.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var label = graph.getLabel(cell).replace(/\\n/g, \"<br>\");\n\t * var size = graph.getSizeForString(label);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * text - String whose size should be returned.\n\t * fontSize - Integer that specifies the font size in pixels. Default is\n\t * <mxConstants.DEFAULT_FONTSIZE>.\n\t * fontFamily - String that specifies the name of the font family. Default\n\t * is <mxConstants.DEFAULT_FONTFAMILY>.\n\t * textWidth - Optional width for text wrapping.\n\t */\n\tgetSizeForString: function(text, fontSize, fontFamily, textWidth)\n\t{\n\t\tfontSize = (fontSize != null) ? fontSize : mxConstants.DEFAULT_FONTSIZE;\n\t\tfontFamily = (fontFamily != null) ? fontFamily : mxConstants.DEFAULT_FONTFAMILY;\n\t\tvar div = document.createElement('div');\n\t\t\n\t\t// Sets the font size and family\n\t\tdiv.style.fontFamily = fontFamily;\n\t\tdiv.style.fontSize = Math.round(fontSize) + 'px';\n\t\tdiv.style.lineHeight = Math.round(fontSize * mxConstants.LINE_HEIGHT) + 'px';\n\t\t\n\t\t// Disables block layout and outside wrapping and hides the div\n\t\tdiv.style.position = 'absolute';\n\t\tdiv.style.visibility = 'hidden';\n\t\tdiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\tdiv.style.zoom = '1';\n\t\t\n\t\tif (textWidth != null)\n\t\t{\n\t\t\tdiv.style.width = textWidth + 'px';\n\t\t\tdiv.style.whiteSpace = 'normal';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\t// Adds the text and inserts into DOM for updating of size\n\t\tdiv.innerHTML = text;\n\t\tdocument.body.appendChild(div);\n\t\t\n\t\t// Gets the size and removes from DOM\n\t\tvar size = new mxRectangle(0, 0, div.offsetWidth, div.offsetHeight);\n\t\tdocument.body.removeChild(div);\n\t\t\n\t\treturn size;\n\t},\n\t\n\t/**\n\t * Function: getViewXml\n\t */\n\tgetViewXml: function(graph, scale, cells, x0, y0)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\tscale = (scale != null) ? scale : 1;\n\n\t\tif (cells == null)\n\t\t{\n\t\t\tvar model = graph.getModel();\n\t\t\tcells = [model.getRoot()];\n\t\t}\n\t\t\n\t\tvar view = graph.getView();\n\t\tvar result = null;\n\n\t\t// Disables events on the view\n\t\tvar eventsEnabled = view.isEventsEnabled();\n\t\tview.setEventsEnabled(false);\n\n\t\t// Workaround for label bounds not taken into account for image export.\n\t\t// Creates a temporary draw pane which is used for rendering the text.\n\t\t// Text rendering is required for finding the bounds of the labels.\n\t\tvar drawPane = view.drawPane;\n\t\tvar overlayPane = view.overlayPane;\n\n\t\tif (graph.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tview.drawPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.drawPane);\n\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tview.drawPane = view.drawPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.drawPane);\n\t\t\t\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = view.overlayPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\n\t\t// Resets the translation\n\t\tvar translate = view.getTranslate();\n\t\tview.translate = new mxPoint(x0, y0);\n\n\t\t// Creates the temporary cell states in the view\n\t\tvar temp = new mxTemporaryCellStates(graph.getView(), scale, cells);\n\n\t\ttry\n\t\t{\n\t\t\tvar enc = new mxCodec();\n\t\t\tresult = enc.encode(graph.getView());\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\ttemp.destroy();\n\t\t\tview.translate = translate;\n\t\t\tview.canvas.removeChild(view.drawPane);\n\t\t\tview.canvas.removeChild(view.overlayPane);\n\t\t\tview.drawPane = drawPane;\n\t\t\tview.overlayPane = overlayPane;\n\t\t\tview.setEventsEnabled(eventsEnabled);\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: getScaleForPageCount\n\t * \n\t * Returns the scale to be used for printing the graph with the given\n\t * bounds across the specifies number of pages with the given format. The\n\t * scale is always computed such that it given the given amount or fewer\n\t * pages in the print output. See <mxPrintPreview> for an example.\n\t * \n\t * Parameters:\n\t * \n\t * pageCount - Specifies the number of pages in the print output.\n\t * graph - <mxGraph> that should be printed.\n\t * pageFormat - Optional <mxRectangle> that specifies the page format.\n\t * Default is <mxConstants.PAGE_FORMAT_A4_PORTRAIT>.\n\t * border - The border along each side of every page.\n\t */\n\tgetScaleForPageCount: function(pageCount, graph, pageFormat, border)\n\t{\n\t\tif (pageCount < 1)\n\t\t{\n\t\t\t// We can't work with less than 1 page, return no scale\n\t\t\t// change\n\t\t\treturn 1;\n\t\t}\n\t\t\n\t\tpageFormat = (pageFormat != null) ? pageFormat : mxConstants.PAGE_FORMAT_A4_PORTRAIT;\n\t\tborder = (border != null) ? border : 0;\n\t\t\n\t\tvar availablePageWidth = pageFormat.width - (border * 2);\n\t\tvar availablePageHeight = pageFormat.height - (border * 2);\n\n\t\t// Work out the number of pages required if the\n\t\t// graph is not scaled.\n\t\tvar graphBounds = graph.getGraphBounds().clone();\n\t\tvar sc = graph.getView().getScale();\n\t\tgraphBounds.width /= sc;\n\t\tgraphBounds.height /= sc;\n\t\tvar graphWidth = graphBounds.width;\n\t\tvar graphHeight = graphBounds.height;\n\n\t\tvar scale = 1;\n\t\t\n\t\t// The ratio of the width/height for each printer page\n\t\tvar pageFormatAspectRatio = availablePageWidth / availablePageHeight;\n\t\t// The ratio of the width/height for the graph to be printer\n\t\tvar graphAspectRatio = graphWidth / graphHeight;\n\t\t\n\t\t// The ratio of horizontal pages / vertical pages for this \n\t\t// graph to maintain its aspect ratio on this page format\n\t\tvar pagesAspectRatio = graphAspectRatio / pageFormatAspectRatio;\n\t\t\n\t\t// Factor the square root of the page count up and down \n\t\t// by the pages aspect ratio to obtain a horizontal and \n\t\t// vertical page count that adds up to the page count\n\t\t// and has the correct aspect ratio\n\t\tvar pageRoot = Math.sqrt(pageCount);\n\t\tvar pagesAspectRatioSqrt = Math.sqrt(pagesAspectRatio);\n\t\tvar numRowPages = pageRoot * pagesAspectRatioSqrt;\n\t\tvar numColumnPages = pageRoot / pagesAspectRatioSqrt;\n\n\t\t// These value are rarely more than 2 rounding downs away from\n\t\t// a total that meets the page count. In cases of one being less \n\t\t// than 1 page, the other value can be too high and take more iterations \n\t\t// In this case, just change that value to be the page count, since \n\t\t// we know the other value is 1\n\t\tif (numRowPages < 1 && numColumnPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numColumnPages / pageCount;\n\t\t\tnumColumnPages = pageCount;\n\t\t\tnumRowPages /= scaleChange;\n\t\t}\n\t\t\n\t\tif (numColumnPages < 1 && numRowPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numRowPages / pageCount;\n\t\t\tnumRowPages = pageCount;\n\t\t\tnumColumnPages /= scaleChange;\n\t\t}\t\t\n\n\t\tvar currentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\n\t\tvar numLoops = 0;\n\t\t\n\t\t// Iterate through while the rounded up number of pages comes to\n\t\t// a total greater than the required number\n\t\twhile (currentTotalPages > pageCount)\n\t\t{\n\t\t\t// Round down the page count (rows or columns) that is\n\t\t\t// closest to its next integer down in percentage terms.\n\t\t\t// i.e. Reduce the page total by reducing the total\n\t\t\t// page area by the least possible amount\n\n\t\t\tvar roundRowDownProportion = Math.floor(numRowPages) / numRowPages;\n\t\t\tvar roundColumnDownProportion = Math.floor(numColumnPages) / numColumnPages;\n\t\t\t\n\t\t\t// If the round down proportion is, work out the proportion to\n\t\t\t// round down to 1 page less\n\t\t\tif (roundRowDownProportion == 1)\n\t\t\t{\n\t\t\t\troundRowDownProportion = Math.floor(numRowPages-1) / numRowPages;\n\t\t\t}\n\t\t\tif (roundColumnDownProportion == 1)\n\t\t\t{\n\t\t\t\troundColumnDownProportion = Math.floor(numColumnPages-1) / numColumnPages;\n\t\t\t}\n\t\t\t\n\t\t\t// Check which rounding down is smaller, but in the case of very small roundings\n\t\t\t// try the other dimension instead\n\t\t\tvar scaleChange = 1;\n\t\t\t\n\t\t\t// Use the higher of the two values\n\t\t\tif (roundRowDownProportion > roundColumnDownProportion)\n\t\t\t{\n\t\t\t\tscaleChange = roundRowDownProportion;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tscaleChange = roundColumnDownProportion;\n\t\t\t}\n\n\t\t\tnumRowPages = numRowPages * scaleChange;\n\t\t\tnumColumnPages = numColumnPages * scaleChange;\n\t\t\tcurrentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\t\t\t\n\t\t\tnumLoops++;\n\t\t\t\n\t\t\tif (numLoops > 10)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Work out the scale from the number of row pages required\n\t\t// The column pages will give the same value\n\t\tvar posterWidth = availablePageWidth * numRowPages;\n\t\tscale = posterWidth / graphWidth;\n\t\t\n\t\t// Allow for rounding errors\n\t\treturn scale * 0.99999;\n\t},\n\t\n\t/**\n\t * Function: show\n\t * \n\t * Copies the styles and the markup from the graph's container into the\n\t * given document and removes all cursor styles. The document is returned.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * If you experience problems with missing stylesheets in IE then try adding\n\t * the domain to the trusted sites.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be copied.\n\t * doc - Document where the new graph is created.\n\t * x0 - X-coordinate of the graph view origin. Default is 0.\n\t * y0 - Y-coordinate of the graph view origin. Default is 0.\n\t * w - Optional width of the graph view.\n\t * h - Optional height of the graph view.\n\t */\n\tshow: function(graph, doc, x0, y0, w, h)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\t\n\t\tif (doc == null)\n\t\t{\n\t\t\tvar wnd = window.open();\n\t\t\tdoc = wnd.document;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.open();\n\t\t}\n\n\t\t// Workaround for missing print output in IE9 standards\n\t\tif (document.documentMode == 9)\n\t\t{\n\t\t\tdoc.writeln('<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\"><![endif]-->');\n\t\t}\n\t\t\n\t\tvar bounds = graph.getGraphBounds();\n\t\tvar dx = Math.ceil(x0 - bounds.x);\n\t\tvar dy = Math.ceil(y0 - bounds.y);\n\t\t\n\t\tif (w == null)\n\t\t{\n\t\t\tw = Math.ceil(bounds.width + x0) + Math.ceil(Math.ceil(bounds.x) - bounds.x);\n\t\t}\n\t\t\n\t\tif (h == null)\n\t\t{\n\t\t\th = Math.ceil(bounds.height + y0) + Math.ceil(Math.ceil(bounds.y) - bounds.y);\n\t\t}\n\t\t\n\t\t// Needs a special way of creating the page so that no click is required\n\t\t// to refresh the contents after the external CSS styles have been loaded.\n\t\t// To avoid a click or programmatic refresh, the styleSheets[].cssText\n\t\t// property is copied over from the original document.\n\t\tif (mxClient.IS_IE || document.documentMode == 11)\n\t\t{\n\t\t\tvar html = '<html><head>';\n\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\thtml += base[i].outerHTML;\n\t\t\t}\n\n\t\t\thtml += '<style>';\n\n\t\t\t// Copies the stylesheets without having to load them again\n\t\t\tfor (var i = 0; i < document.styleSheets.length; i++)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\thtml += document.styleSheets[i].cssText;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// ignore security exception\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</style></head><body style=\"margin:0px;\">';\n\t\t\t\n\t\t\t// Copies the contents of the graph container\n\t\t\thtml += '<div style=\"position:absolute;overflow:hidden;width:' + w + 'px;height:' + h + 'px;\"><div style=\"position:relative;left:' + dx + 'px;top:' + dy + 'px;\">';\n\t\t\thtml += graph.container.innerHTML;\n\t\t\thtml += '</div></div></body><html>';\n\n\t\t\tdoc.writeln(html);\n\t\t\tdoc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.writeln('<html><head>');\n\t\t\t\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(base[i]));\n\t\t\t}\n\t\t\t\n\t\t\tvar links = document.getElementsByTagName('link');\n\t\t\t\n\t\t\tfor (var i = 0; i < links.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(links[i]));\n\t\t\t}\n\t\n\t\t\tvar styles = document.getElementsByTagName('style');\n\t\t\t\n\t\t\tfor (var i = 0; i < styles.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(styles[i]));\n\t\t\t}\n\n\t\t\tdoc.writeln('</head><body style=\"margin:0px;\"></body></html>');\n\t\t\tdoc.close();\n\n\t\t\tvar outer = doc.createElement('div');\n\t\t\touter.position = 'absolute';\n\t\t\touter.overflow = 'hidden';\n\t\t\touter.style.width = w + 'px';\n\t\t\touter.style.height = h + 'px';\n\n\t\t\t// Required for HTML labels if foreignObjects are disabled\n\t\t\tvar div = doc.createElement('div');\n\t\t\tdiv.style.position = 'absolute';\n\t\t\tdiv.style.left = dx + 'px';\n\t\t\tdiv.style.top = dy + 'px';\n\n\t\t\tvar node = graph.container.firstChild;\n\t\t\tvar svg = null;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tvar clone = node.cloneNode(true);\n\t\t\t\t\n\t\t\t\tif (node == graph.view.drawPane.ownerSVGElement)\n\t\t\t\t{\n\t\t\t\t\touter.appendChild(clone);\n\t\t\t\t\tsvg = clone;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdiv.appendChild(clone);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\n\t\t\tdoc.body.appendChild(outer);\n\t\t\t\n\t\t\tif (div.firstChild != null)\n\t\t\t{\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tif (svg != null)\n\t\t\t{\n\t\t\t\tsvg.style.minWidth = '';\n\t\t\t\tsvg.style.minHeight = '';\n\t\t\t\tsvg.firstChild.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t}\n\t\t}\n\t\t\n\t\tmxUtils.removeCursors(doc.body);\n\t\n\t\treturn doc;\n\t},\n\t\n\t/**\n\t * Function: printScreen\n\t * \n\t * Prints the specified graph using a new window and the built-in print\n\t * dialog.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be printed.\n\t */\n\tprintScreen: function(graph)\n\t{\n\t\tvar wnd = window.open();\n\t\tvar bounds = graph.getGraphBounds();\n\t\tmxUtils.show(graph, wnd.document);\n\t\t\n\t\tvar print = function()\n\t\t{\n\t\t\twnd.focus();\n\t\t\twnd.print();\n\t\t\twnd.close();\n\t\t};\n\t\t\n\t\t// Workaround for Google Chrome which needs a bit of a\n\t\t// delay in order to render the SVG contents\n\t\tif (mxClient.IS_GC)\n\t\t{\n\t\t\twnd.setTimeout(print, 500);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint();\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: popup\n\t * \n\t * Shows the specified text content in a new <mxWindow> or a new browser\n\t * window if isInternalWindow is false.\n\t * \n\t * Parameters:\n\t * \n\t * content - String that specifies the text to be displayed.\n\t * isInternalWindow - Optional boolean indicating if an mxWindow should be\n\t * used instead of a new browser window. Default is false.\n\t */\n\tpopup: function(content, isInternalWindow)\n\t{\n\t   \tif (isInternalWindow)\n\t   \t{\n\t\t\tvar div = document.createElement('div');\n\t\t\t\n\t\t\tdiv.style.overflow = 'scroll';\n\t\t\tdiv.style.width = '636px';\n\t\t\tdiv.style.height = '460px';\n\t\t\t\n\t\t\tvar pre = document.createElement('pre');\n\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t\n\t\t\tdiv.appendChild(pre);\n\t\t\t\n\t\t\tvar w = document.body.clientWidth;\n\t\t\tvar h = Math.max(document.body.clientHeight || 0, document.documentElement.clientHeight)\n\t\t\tvar wnd = new mxWindow('Popup Window', div,\n\t\t\t\tw/2-320, h/2-240, 640, 480, false, true);\n\n\t\t\twnd.setClosable(true);\n\t\t\twnd.setVisible(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Wraps up the XML content in a textarea\n\t\t\tif (mxClient.IS_NS)\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t\twnd.document.writeln('<pre>'+mxUtils.htmlEntities(content)+'</pre');\n\t\t\t   \twnd.document.close();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t    var pre = wnd.document.createElement('pre');\n\t\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t   \twnd.document.body.appendChild(pre);\n\t\t\t}\n\t   \t}\n\t},\n\t\n\t/**\n\t * Function: alert\n\t * \n\t * Displayss the given alert in a new dialog. This implementation uses the\n\t * built-in alert function. This is used to display validation errors when\n\t * connections cannot be changed or created.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\talert: function(message)\n\t{\n\t\talert(message);\n\t},\n\t\n\t/**\n\t * Function: prompt\n\t * \n\t * Displays the given message in a prompt dialog. This implementation uses\n\t * the built-in prompt function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * defaultValue - Optional string specifying the default value.\n\t */\n\tprompt: function(message, defaultValue)\n\t{\n\t\treturn prompt(message, (defaultValue != null) ? defaultValue : '');\n\t},\n\t\n\t/**\n\t * Function: confirm\n\t * \n\t * Displays the given message in a confirm dialog. This implementation uses\n\t * the built-in confirm function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\tconfirm: function(message)\n\t{\n\t\treturn confirm(message);\n\t},\n\n\t/**\n\t * Function: error\n\t * \n\t * Displays the given error message in a new <mxWindow> of the given width.\n\t * If close is true then an additional close button is added to the window.\n\t * The optional icon specifies the icon to be used for the window. Default\n\t * is <mxUtils.errorImage>.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * width - Integer specifying the width of the window.\n\t * close - Optional boolean indicating whether to add a close button.\n\t * icon - Optional icon for the window decoration.\n\t */\n\terror: function(message, width, close, icon)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.padding = '20px';\n\n\t\tvar img = document.createElement('img');\n\t\timg.setAttribute('src', icon || mxUtils.errorImage);\n\t\timg.setAttribute('valign', 'bottom');\n\t\timg.style.verticalAlign = 'middle';\n\t\tdiv.appendChild(img);\n\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tmxUtils.write(div, message);\n\n\t\tvar w = document.body.clientWidth;\n\t\tvar h = (document.body.clientHeight || document.documentElement.clientHeight);\n\t\tvar warn = new mxWindow(mxResources.get(mxUtils.errorResource) ||\n\t\t\tmxUtils.errorResource, div, (w-width)/2, h/4, width, null,\n\t\t\tfalse, true);\n\n\t\tif (close)\n\t\t{\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\tvar tmp = document.createElement('p');\n\t\t\tvar button = document.createElement('button');\n\n\t\t\tif (mxClient.IS_IE)\n\t\t\t{\n\t\t\t\tbutton.style.cssText = 'float:right';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbutton.setAttribute('style', 'float:right');\n\t\t\t}\n\n\t\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t\t{\n\t\t\t\twarn.destroy();\n\t\t\t});\n\n\t\t\tmxUtils.write(button, mxResources.get(mxUtils.closeResource) ||\n\t\t\t\tmxUtils.closeResource);\n\t\t\t\n\t\t\ttmp.appendChild(button);\n\t\t\tdiv.appendChild(tmp);\n\t\t\t\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\twarn.setClosable(true);\n\t\t}\n\t\t\n\t\twarn.setVisible(true);\n\t\t\n\t\treturn warn;\n\t},\n\n\t/**\n\t * Function: makeDraggable\n\t * \n\t * Configures the given DOM element to act as a drag source for the\n\t * specified graph. Returns a a new <mxDragSource>. If\n\t * <mxDragSource.guideEnabled> is enabled then the x and y arguments must\n\t * be used in funct to match the preview location.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var funct = function(graph, evt, cell, x, y)\n\t * {\n\t *   if (graph.canImportCell(cell))\n\t *   {\n\t *     var parent = graph.getDefaultParent();\n\t *     var vertex = null;\n\t *     \n\t *     graph.getModel().beginUpdate();\n\t *     try\n\t *     {\n\t * \t     vertex = graph.insertVertex(parent, null, 'Hello', x, y, 80, 30);\n\t *     }\n\t *     finally\n\t *     {\n\t *       graph.getModel().endUpdate();\n\t *     }\n\t *\n\t *     graph.setSelectionCell(vertex);\n\t *   }\n\t * }\n\t * \n\t * var img = document.createElement('img');\n\t * img.setAttribute('src', 'editors/images/rectangle.gif');\n\t * img.style.position = 'absolute';\n\t * img.style.left = '0px';\n\t * img.style.top = '0px';\n\t * img.style.width = '16px';\n\t * img.style.height = '16px';\n\t * \n\t * var dragImage = img.cloneNode(true);\n\t * dragImage.style.width = '32px';\n\t * dragImage.style.height = '32px';\n\t * mxUtils.makeDraggable(img, graph, funct, dragImage);\n\t * document.body.appendChild(img);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM element to make draggable.\n\t * graphF - <mxGraph> that acts as the drop target or a function that takes a\n\t * mouse event and returns the current <mxGraph>.\n\t * funct - Function to execute on a successful drop.\n\t * dragElement - Optional DOM node to be used for the drag preview.\n\t * dx - Optional horizontal offset between the cursor and the drag\n\t * preview.\n\t * dy - Optional vertical offset between the cursor and the drag\n\t * preview.\n\t * autoscroll - Optional boolean that specifies if autoscroll should be\n\t * used. Default is mxGraph.autoscroll.\n\t * scalePreview - Optional boolean that specifies if the preview element\n\t * should be scaled according to the graph scale. If this is true, then\n\t * the offsets will also be scaled. Default is false.\n\t * highlightDropTargets - Optional boolean that specifies if dropTargets\n\t * should be highlighted. Default is true.\n\t * getDropTarget - Optional function to return the drop target for a given\n\t * location (x, y). Default is mxGraph.getCellAt.\n\t */\n\tmakeDraggable: function(element, graphF, funct, dragElement, dx, dy, autoscroll,\n\t\t\tscalePreview, highlightDropTargets, getDropTarget)\n\t{\n\t\tvar dragSource = new mxDragSource(element, funct);\n\t\tdragSource.dragOffset = new mxPoint((dx != null) ? dx : 0,\n\t\t\t(dy != null) ? dy : mxConstants.TOOLTIP_VERTICAL_OFFSET);\n\t\tdragSource.autoscroll = autoscroll;\n\t\t\n\t\t// Cannot enable this by default. This needs to be enabled in the caller\n\t\t// if the funct argument uses the new x- and y-arguments.\n\t\tdragSource.setGuidesEnabled(false);\n\t\t\n\t\tif (highlightDropTargets != null)\n\t\t{\n\t\t\tdragSource.highlightDropTargets = highlightDropTargets;\n\t\t}\n\t\t\n\t\t// Overrides function to find drop target cell\n\t\tif (getDropTarget != null)\n\t\t{\n\t\t\tdragSource.getDropTarget = getDropTarget;\n\t\t}\n\t\t\n\t\t// Overrides function to get current graph\n\t\tdragSource.getGraphForEvent = function(evt)\n\t\t{\n\t\t\treturn (typeof(graphF) == 'function') ? graphF(evt) : graphF;\n\t\t};\n\t\t\n\t\t// Translates switches into dragSource customizations\n\t\tif (dragElement != null)\n\t\t{\n\t\t\tdragSource.createDragElement = function()\n\t\t\t{\n\t\t\t\treturn dragElement.cloneNode(true);\n\t\t\t};\n\t\t\t\n\t\t\tif (scalePreview)\n\t\t\t{\n\t\t\t\tdragSource.createPreviewElement = function(graph)\n\t\t\t\t{\n\t\t\t\t\tvar elt = dragElement.cloneNode(true);\n\n\t\t\t\t\tvar w = parseInt(elt.style.width);\n\t\t\t\t\tvar h = parseInt(elt.style.height);\n\t\t\t\t\telt.style.width = Math.round(w * graph.view.scale) + 'px';\n\t\t\t\t\telt.style.height = Math.round(h * graph.view.scale) + 'px';\n\t\t\t\t\t\n\t\t\t\t\treturn elt;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn dragSource;\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n var mxConstants =\n {\n\t/**\n\t * Class: mxConstants\n\t * \n\t * Defines various global constants.\n\t * \n\t * Variable: DEFAULT_HOTSPOT\n\t * \n\t * Defines the portion of the cell which is to be used as a connectable\n\t * region. Default is 0.3. Possible values are 0 < x <= 1. \n\t */\n\tDEFAULT_HOTSPOT: 0.3,\n\n\t/**\n\t * Variable: MIN_HOTSPOT_SIZE\n\t * \n\t * Defines the minimum size in pixels of the portion of the cell which is\n\t * to be used as a connectable region. Default is 8.\n\t */\n\tMIN_HOTSPOT_SIZE: 8,\n\n\t/**\n\t * Variable: MAX_HOTSPOT_SIZE\n\t * \n\t * Defines the maximum size in pixels of the portion of the cell which is\n\t * to be used as a connectable region. Use 0 for no maximum. Default is 0.\n\t */\n\tMAX_HOTSPOT_SIZE: 0,\n\n\t/**\n\t * Variable: RENDERING_HINT_EXACT\n\t * \n\t * Defines the exact rendering hint.\n\t */\n\tRENDERING_HINT_EXACT: 'exact',\n\n\t/**\n\t * Variable: RENDERING_HINT_FASTER\n\t * \n\t * Defines the faster rendering hint.\n\t */\n\tRENDERING_HINT_FASTER: 'faster',\n\n\t/**\n\t * Variable: RENDERING_HINT_FASTEST\n\t * \n\t * Defines the fastest rendering hint.\n\t */\n\tRENDERING_HINT_FASTEST: 'fastest',\n\n\t/**\n\t * Variable: DIALECT_SVG\n\t * \n\t * Defines the SVG display dialect name.\n\t */\n\tDIALECT_SVG: 'svg',\n\n\t/**\n\t * Variable: DIALECT_VML\n\t * \n\t * Defines the VML display dialect name.\n\t */\n\tDIALECT_VML: 'vml',\n\n\t/**\n\t * Variable: DIALECT_MIXEDHTML\n\t * \n\t * Defines the mixed HTML display dialect name.\n\t */\n\tDIALECT_MIXEDHTML: 'mixedHtml',\n\n\t/**\n\t * Variable: DIALECT_PREFERHTML\n\t * \n\t * Defines the preferred HTML display dialect name.\n\t */\n\tDIALECT_PREFERHTML: 'preferHtml',\n\n\t/**\n\t * Variable: DIALECT_STRICTHTML\n\t * \n\t * Defines the strict HTML display dialect.\n\t */\n\tDIALECT_STRICTHTML: 'strictHtml',\n\n\t/**\n\t * Variable: NS_SVG\n\t * \n\t * Defines the SVG namespace.\n\t */\n\tNS_SVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * Variable: NS_XHTML\n\t * \n\t * Defines the XHTML namespace.\n\t */\n\tNS_XHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Variable: NS_XLINK\n\t * \n\t * Defines the XLink namespace.\n\t */\n\tNS_XLINK: 'http://www.w3.org/1999/xlink',\n\n\t/**\n\t * Variable: SHADOWCOLOR\n\t * \n\t * Defines the color to be used to draw shadows in shapes and windows.\n\t * Default is gray.\n\t */\n\tSHADOWCOLOR: 'gray',\n\n\t/**\n\t * Variable: VML_SHADOWCOLOR\n\t * \n\t * Used for shadow color in filters where transparency is not supported\n\t * (Microsoft Internet Explorer). Default is gray.\n\t */\n\tVML_SHADOWCOLOR: 'gray',\n\n\t/**\n\t * Variable: SHADOW_OFFSET_X\n\t * \n\t * Specifies the x-offset of the shadow. Default is 2.\n\t */\n\tSHADOW_OFFSET_X: 2,\n\n\t/**\n\t * Variable: SHADOW_OFFSET_Y\n\t * \n\t * Specifies the y-offset of the shadow. Default is 3.\n\t */\n\tSHADOW_OFFSET_Y: 3,\n\t\n\t/**\n\t * Variable: SHADOW_OPACITY\n\t * \n\t * Defines the opacity for shadows. Default is 1.\n\t */\n\tSHADOW_OPACITY: 1,\n \n\t/**\n\t * Variable: NODETYPE_ELEMENT\n\t * \n\t * DOM node of type ELEMENT.\n\t */\n\tNODETYPE_ELEMENT: 1,\n\n\t/**\n\t * Variable: NODETYPE_ATTRIBUTE\n\t * \n\t * DOM node of type ATTRIBUTE.\n\t */\n\tNODETYPE_ATTRIBUTE: 2,\n\n\t/**\n\t * Variable: NODETYPE_TEXT\n\t * \n\t * DOM node of type TEXT.\n\t */\n\tNODETYPE_TEXT: 3,\n\n\t/**\n\t * Variable: NODETYPE_CDATA\n\t * \n\t * DOM node of type CDATA.\n\t */\n\tNODETYPE_CDATA: 4,\n\t\n\t/**\n\t * Variable: NODETYPE_ENTITY_REFERENCE\n\t * \n\t * DOM node of type ENTITY_REFERENCE.\n\t */\n\tNODETYPE_ENTITY_REFERENCE: 5,\n\n\t/**\n\t * Variable: NODETYPE_ENTITY\n\t * \n\t * DOM node of type ENTITY.\n\t */\n\tNODETYPE_ENTITY: 6,\n\n\t/**\n\t * Variable: NODETYPE_PROCESSING_INSTRUCTION\n\t * \n\t * DOM node of type PROCESSING_INSTRUCTION.\n\t */\n\tNODETYPE_PROCESSING_INSTRUCTION: 7,\n\n\t/**\n\t * Variable: NODETYPE_COMMENT\n\t * \n\t * DOM node of type COMMENT.\n\t */\n\tNODETYPE_COMMENT: 8,\n\t\t\n\t/**\n\t * Variable: NODETYPE_DOCUMENT\n\t * \n\t * DOM node of type DOCUMENT.\n\t */\n\tNODETYPE_DOCUMENT: 9,\n\n\t/**\n\t * Variable: NODETYPE_DOCUMENTTYPE\n\t * \n\t * DOM node of type DOCUMENTTYPE.\n\t */\n\tNODETYPE_DOCUMENTTYPE: 10,\n\n\t/**\n\t * Variable: NODETYPE_DOCUMENT_FRAGMENT\n\t * \n\t * DOM node of type DOCUMENT_FRAGMENT.\n\t */\n\tNODETYPE_DOCUMENT_FRAGMENT: 11,\n\n\t/**\n\t * Variable: NODETYPE_NOTATION\n\t * \n\t * DOM node of type NOTATION.\n\t */\n\tNODETYPE_NOTATION: 12,\n\t\n\t/**\n\t * Variable: TOOLTIP_VERTICAL_OFFSET\n\t * \n\t * Defines the vertical offset for the tooltip.\n\t * Default is 16.\n\t */\n\tTOOLTIP_VERTICAL_OFFSET: 16,\n\n\t/**\n\t * Variable: DEFAULT_VALID_COLOR\n\t * \n\t * Specifies the default valid color. Default is #0000FF.\n\t */\n\tDEFAULT_VALID_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: DEFAULT_INVALID_COLOR\n\t * \n\t * Specifies the default invalid color. Default is #FF0000.\n\t */\n\tDEFAULT_INVALID_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: OUTLINE_HIGHLIGHT_COLOR\n\t * \n\t * Specifies the default highlight color for shape outlines.\n\t * Default is #0000FF. This is used in <mxEdgeHandler>.\n\t */\n\tOUTLINE_HIGHLIGHT_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: OUTLINE_HIGHLIGHT_COLOR\n\t * \n\t * Defines the strokewidth to be used for shape outlines.\n\t * Default is 5. This is used in <mxEdgeHandler>.\n\t */\n\tOUTLINE_HIGHLIGHT_STROKEWIDTH: 5,\n\n\t/**\n\t * Variable: HIGHLIGHT_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the highlights.\n\t * Default is 3.\n\t */\n\tHIGHLIGHT_STROKEWIDTH: 3,\n\n\t/**\n\t * Variable: CONSTRAINT_HIGHLIGHT_SIZE\n\t * \n\t * Size of the constraint highlight (in px). Default is 2.\n\t */\n\tHIGHLIGHT_SIZE: 2,\n\t\n\t/**\n\t * Variable: HIGHLIGHT_OPACITY\n\t * \n\t * Opacity (in %) used for the highlights (including outline).\n\t * Default is 100.\n\t */\n\tHIGHLIGHT_OPACITY: 100,\n\t\n\t/**\n\t * Variable: CURSOR_MOVABLE_VERTEX\n\t * \n\t * Defines the cursor for a movable vertex. Default is 'move'.\n\t */\n\tCURSOR_MOVABLE_VERTEX: 'move',\n\t\n\t/**\n\t * Variable: CURSOR_MOVABLE_EDGE\n\t * \n\t * Defines the cursor for a movable edge. Default is 'move'.\n\t */\n\tCURSOR_MOVABLE_EDGE: 'move',\n\t\n\t/**\n\t * Variable: CURSOR_LABEL_HANDLE\n\t * \n\t * Defines the cursor for a movable label. Default is 'default'.\n\t */\n\tCURSOR_LABEL_HANDLE: 'default',\n\t\n\t/**\n\t * Variable: CURSOR_TERMINAL_HANDLE\n\t * \n\t * Defines the cursor for a terminal handle. Default is 'pointer'.\n\t */\n\tCURSOR_TERMINAL_HANDLE: 'pointer',\n\t\n\t/**\n\t * Variable: CURSOR_BEND_HANDLE\n\t * \n\t * Defines the cursor for a movable bend. Default is 'crosshair'.\n\t */\n\tCURSOR_BEND_HANDLE: 'crosshair',\n\n\t/**\n\t * Variable: CURSOR_VIRTUAL_BEND_HANDLE\n\t * \n\t * Defines the cursor for a movable bend. Default is 'crosshair'.\n\t */\n\tCURSOR_VIRTUAL_BEND_HANDLE: 'crosshair',\n\t\n\t/**\n\t * Variable: CURSOR_CONNECT\n\t * \n\t * Defines the cursor for a connectable state. Default is 'pointer'.\n\t */\n\tCURSOR_CONNECT: 'pointer',\n\n\t/**\n\t * Variable: HIGHLIGHT_COLOR\n\t * \n\t * Defines the color to be used for the cell highlighting.\n\t * Use 'none' for no color. Default is #00FF00.\n\t */\n\tHIGHLIGHT_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: TARGET_HIGHLIGHT_COLOR\n\t * \n\t * Defines the color to be used for highlighting a target cell for a new\n\t * or changed connection. Note that this may be either a source or\n\t * target terminal in the graph. Use 'none' for no color.\n\t * Default is #0000FF.\n\t */\n\tCONNECT_TARGET_COLOR: '#0000FF',\n\n\t/**\n\t * Variable: INVALID_CONNECT_TARGET_COLOR\n\t * \n\t * Defines the color to be used for highlighting a invalid target cells\n\t * for a new or changed connections. Note that this may be either a source\n\t * or target terminal in the graph. Use 'none' for no color. Default is\n\t * #FF0000.\n\t */\n\tINVALID_CONNECT_TARGET_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: DROP_TARGET_COLOR\n\t * \n\t * Defines the color to be used for the highlighting target parent cells\n\t * (for drag and drop). Use 'none' for no color. Default is #0000FF.\n\t */\n\tDROP_TARGET_COLOR: '#0000FF',\n\n\t/**\n\t * Variable: VALID_COLOR\n\t * \n\t * Defines the color to be used for the coloring valid connection\n\t * previews. Use 'none' for no color. Default is #FF0000.\n\t */\n\tVALID_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: INVALID_COLOR\n\t * \n\t * Defines the color to be used for the coloring invalid connection\n\t * previews. Use 'none' for no color. Default is #FF0000.\n\t */\n\tINVALID_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: EDGE_SELECTION_COLOR\n\t * \n\t * Defines the color to be used for the selection border of edges. Use\n\t * 'none' for no color. Default is #00FF00.\n\t */\n\tEDGE_SELECTION_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: VERTEX_SELECTION_COLOR\n\t * \n\t * Defines the color to be used for the selection border of vertices. Use\n\t * 'none' for no color. Default is #00FF00.\n\t */\n\tVERTEX_SELECTION_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: VERTEX_SELECTION_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for vertex selections.\n\t * Default is 1.\n\t */\n\tVERTEX_SELECTION_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: EDGE_SELECTION_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for edge selections.\n\t * Default is 1.\n\t */\n\tEDGE_SELECTION_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: SELECTION_DASHED\n\t * \n\t * Defines the dashed state to be used for the vertex selection\n\t * border. Default is true.\n\t */\n\tVERTEX_SELECTION_DASHED: true,\n\n\t/**\n\t * Variable: SELECTION_DASHED\n\t * \n\t * Defines the dashed state to be used for the edge selection\n\t * border. Default is true.\n\t */\n\tEDGE_SELECTION_DASHED: true,\n\n\t/**\n\t * Variable: GUIDE_COLOR\n\t * \n\t * Defines the color to be used for the guidelines in mxGraphHandler.\n\t * Default is #FF0000.\n\t */\n\tGUIDE_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: GUIDE_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the guidelines in mxGraphHandler.\n\t * Default is 1.\n\t */\n\tGUIDE_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: OUTLINE_COLOR\n\t * \n\t * Defines the color to be used for the outline rectangle\n\t * border.  Use 'none' for no color. Default is #0099FF.\n\t */\n\tOUTLINE_COLOR: '#0099FF',\n\n\t/**\n\t * Variable: OUTLINE_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the outline rectangle\n\t * stroke width. Default is 3.\n\t */\n\tOUTLINE_STROKEWIDTH: (mxClient.IS_IE) ? 2 : 3,\n\n\t/**\n\t * Variable: HANDLE_SIZE\n\t * \n\t * Defines the default size for handles. Default is 6.\n\t */\n\tHANDLE_SIZE: 6,\n\n\t/**\n\t * Variable: LABEL_HANDLE_SIZE\n\t * \n\t * Defines the default size for label handles. Default is 4.\n\t */\n\tLABEL_HANDLE_SIZE: 4,\n\n\t/**\n\t * Variable: HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the handle fill color. Use 'none' for\n\t * no color. Default is #00FF00 (green).\n\t */\n\tHANDLE_FILLCOLOR: '#00FF00',\n\n\t/**\n\t * Variable: HANDLE_STROKECOLOR\n\t * \n\t * Defines the color to be used for the handle stroke color. Use 'none' for\n\t * no color. Default is black.\n\t */\n\tHANDLE_STROKECOLOR: 'black',\n\n\t/**\n\t * Variable: LABEL_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the label handle fill color. Use 'none'\n\t * for no color. Default is yellow.\n\t */\n\tLABEL_HANDLE_FILLCOLOR: 'yellow',\n\n\t/**\n\t * Variable: CONNECT_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the connect handle fill color. Use\n\t * 'none' for no color. Default is #0000FF (blue).\n\t */\n\tCONNECT_HANDLE_FILLCOLOR: '#0000FF',\n\n\t/**\n\t * Variable: LOCKED_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the locked handle fill color. Use\n\t * 'none' for no color. Default is #FF0000 (red).\n\t */\n\tLOCKED_HANDLE_FILLCOLOR: '#FF0000',\n\n\t/**\n\t * Variable: OUTLINE_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the outline sizer fill color. Use\n\t * 'none' for no color. Default is #00FFFF.\n\t */\n\tOUTLINE_HANDLE_FILLCOLOR: '#00FFFF',\n\n\t/**\n\t * Variable: OUTLINE_HANDLE_STROKECOLOR\n\t * \n\t * Defines the color to be used for the outline sizer stroke color. Use\n\t * 'none' for no color. Default is #0033FF.\n\t */\n\tOUTLINE_HANDLE_STROKECOLOR: '#0033FF',\n\n\t/**\n\t * Variable: DEFAULT_FONTFAMILY\n\t * \n\t * Defines the default family for all fonts. Default is Arial,Helvetica.\n\t */\n\tDEFAULT_FONTFAMILY: 'Arial,Helvetica',\n\n\t/**\n\t * Variable: DEFAULT_FONTSIZE\n\t * \n\t * Defines the default size (in px). Default is 11.\n\t */\n\tDEFAULT_FONTSIZE: 11,\n\n\t/**\n\t * Variable: DEFAULT_TEXT_DIRECTION\n\t * \n\t * Defines the default value for the <STYLE_TEXT_DIRECTION> if no value is\n\t * defined for it in the style. Default value is an empty string which means\n\t * the default system setting is used and no direction is set.\n\t */\n\tDEFAULT_TEXT_DIRECTION: '',\n\n\t/**\n\t * Variable: LINE_HEIGHT\n\t * \n\t * Defines the default line height for text labels. Default is 1.2.\n\t */\n\tLINE_HEIGHT: 1.2,\n\n\t/**\n\t * Variable: WORD_WRAP\n\t * \n\t * Defines the CSS value for the word-wrap property. Default is \"normal\".\n\t * Change this to \"break-word\" to allow long words to be able to be broken\n\t * and wrap onto the next line.\n\t */\n\tWORD_WRAP: 'normal',\n\n\t/**\n\t * Variable: ABSOLUTE_LINE_HEIGHT\n\t * \n\t * Specifies if absolute line heights should be used (px) in CSS. Default\n\t * is false. Set this to true for backwards compatibility.\n\t */\n\tABSOLUTE_LINE_HEIGHT: false,\n\n\t/**\n\t * Variable: DEFAULT_FONTSTYLE\n\t * \n\t * Defines the default style for all fonts. Default is 0. This can be set\n\t * to any combination of font styles as follows.\n\t * \n\t * (code)\n\t * mxConstants.DEFAULT_FONTSTYLE = mxConstants.FONT_BOLD | mxConstants.FONT_ITALIC;\n\t * (end)\n\t */\n\tDEFAULT_FONTSTYLE: 0,\n\n\t/**\n\t * Variable: DEFAULT_STARTSIZE\n\t * \n\t * Defines the default start size for swimlanes. Default is 40.\n\t */\n\tDEFAULT_STARTSIZE: 40,\n\n\t/**\n\t * Variable: DEFAULT_MARKERSIZE\n\t * \n\t * Defines the default size for all markers. Default is 6.\n\t */\n\tDEFAULT_MARKERSIZE: 6,\n\n\t/**\n\t * Variable: DEFAULT_IMAGESIZE\n\t * \n\t * Defines the default width and height for images used in the\n\t * label shape. Default is 24.\n\t */\n\tDEFAULT_IMAGESIZE: 24,\n\n\t/**\n\t * Variable: ENTITY_SEGMENT\n\t * \n\t * Defines the length of the horizontal segment of an Entity Relation.\n\t * This can be overridden using <mxConstants.STYLE_SEGMENT> style.\n\t * Default is 30.\n\t */\n\tENTITY_SEGMENT: 30,\n\n\t/**\n\t * Variable: RECTANGLE_ROUNDING_FACTOR\n\t * \n\t * Defines the rounding factor for rounded rectangles in percent between\n\t * 0 and 1. Values should be smaller than 0.5. Default is 0.15.\n\t */\n\tRECTANGLE_ROUNDING_FACTOR: 0.15,\n\n\t/**\n\t * Variable: LINE_ARCSIZE\n\t * \n\t * Defines the size of the arcs for rounded edges. Default is 20.\n\t */\n\tLINE_ARCSIZE: 20,\n\n\t/**\n\t * Variable: ARROW_SPACING\n\t * \n\t * Defines the spacing between the arrow shape and its terminals. Default is 0.\n\t */\n\tARROW_SPACING: 0,\n\n\t/**\n\t * Variable: ARROW_WIDTH\n\t * \n\t * Defines the width of the arrow shape. Default is 30.\n\t */\n\tARROW_WIDTH: 30,\n\n\t/**\n\t * Variable: ARROW_SIZE\n\t * \n\t * Defines the size of the arrowhead in the arrow shape. Default is 30.\n\t */\n\tARROW_SIZE: 30,\n\n\t/**\n\t * Variable: PAGE_FORMAT_A4_PORTRAIT\n\t * \n\t * Defines the rectangle for the A4 portrait page format. The dimensions\n\t * of this page format are 826x1169 pixels.\n\t */\n\tPAGE_FORMAT_A4_PORTRAIT: new mxRectangle(0, 0, 827, 1169),\n\n\t/**\n\t * Variable: PAGE_FORMAT_A4_PORTRAIT\n\t * \n\t * Defines the rectangle for the A4 portrait page format. The dimensions\n\t * of this page format are 826x1169 pixels.\n\t */\n\tPAGE_FORMAT_A4_LANDSCAPE: new mxRectangle(0, 0, 1169, 827),\n\n\t/**\n\t * Variable: PAGE_FORMAT_LETTER_PORTRAIT\n\t * \n\t * Defines the rectangle for the Letter portrait page format. The\n\t * dimensions of this page format are 850x1100 pixels.\n\t */\n\tPAGE_FORMAT_LETTER_PORTRAIT: new mxRectangle(0, 0, 850, 1100),\n\n\t/**\n\t * Variable: PAGE_FORMAT_LETTER_PORTRAIT\n\t * \n\t * Defines the rectangle for the Letter portrait page format. The dimensions\n\t * of this page format are 850x1100 pixels.\n\t */\n\tPAGE_FORMAT_LETTER_LANDSCAPE: new mxRectangle(0, 0, 1100, 850),\n\n\t/**\n\t * Variable: NONE\n\t * \n\t * Defines the value for none. Default is \"none\".\n\t */\n\tNONE: 'none',\n\n\t/**\n\t * Variable: STYLE_PERIMETER\n\t * \n\t * Defines the key for the perimeter style. This is a function that defines\n\t * the perimeter around a particular shape. Possible values are the\n\t * functions defined in <mxPerimeter>. Alternatively, the constants in this\n\t * class that start with \"PERIMETER_\" may be used to access\n\t * perimeter styles in <mxStyleRegistry>. Value is \"perimeter\".\n\t */\n\tSTYLE_PERIMETER: 'perimeter',\n\t\n\t/**\n\t * Variable: STYLE_SOURCE_PORT\n\t * \n\t * Defines the ID of the cell that should be used for computing the\n\t * perimeter point of the source for an edge. This allows for graphically\n\t * connecting to a cell while keeping the actual terminal of the edge.\n\t * Value is \"sourcePort\".\n\t */\n\tSTYLE_SOURCE_PORT: 'sourcePort',\n\t\n\t/**\n\t * Variable: STYLE_TARGET_PORT\n\t * \n\t * Defines the ID of the cell that should be used for computing the\n\t * perimeter point of the target for an edge. This allows for graphically\n\t * connecting to a cell while keeping the actual terminal of the edge.\n\t * Value is \"targetPort\".\n\t */\n\tSTYLE_TARGET_PORT: 'targetPort',\n\n\t/**\n\t * Variable: STYLE_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to cells in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, \n\t * DIRECTION_EAST\" and \"DIRECTION_WEST\". Value is\n\t * \"portConstraint\".\n\t */\n\tSTYLE_PORT_CONSTRAINT: 'portConstraint',\n\n\t/**\n\t * Variable: STYLE_PORT_CONSTRAINT_ROTATION\n\t * \n\t * Define whether port constraint directions are rotated with vertex\n\t * rotation. 0 (default) causes port constraints to remain absolute, \n\t * relative to the graph, 1 causes the constraints to rotate with\n\t * the vertex. Value is \"portConstraintRotation\".\n\t */\n\tSTYLE_PORT_CONSTRAINT_ROTATION: 'portConstraintRotation',\n\n\t/**\n\t * Variable: STYLE_SOURCE_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to sources in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST\"\n\t * and \"DIRECTION_WEST\". Value is \"sourcePortConstraint\".\n\t */\n\tSTYLE_SOURCE_PORT_CONSTRAINT: 'sourcePortConstraint',\n\n\t/**\n\t * Variable: STYLE_TARGET_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to targets in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST\"\n\t * and \"DIRECTION_WEST\". Value is \"targetPortConstraint\".\n\t */\n\tSTYLE_TARGET_PORT_CONSTRAINT: 'targetPortConstraint',\n\n\t/**\n\t * Variable: STYLE_OPACITY\n\t * \n\t * Defines the key for the opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"opacity\".\n\t */\n\tSTYLE_OPACITY: 'opacity',\n\n\t/**\n\t * Variable: STYLE_FILL_OPACITY\n\t * \n\t * Defines the key for the fill opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"fillOpacity\".\n\t */\n\tSTYLE_FILL_OPACITY: 'fillOpacity',\n\n\t/**\n\t * Variable: STYLE_STROKE_OPACITY\n\t * \n\t * Defines the key for the stroke opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"strokeOpacity\".\n\t */\n\tSTYLE_STROKE_OPACITY: 'strokeOpacity',\n\n\t/**\n\t * Variable: STYLE_TEXT_OPACITY\n\t * \n\t * Defines the key for the text opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"textOpacity\".\n\t */\n\tSTYLE_TEXT_OPACITY: 'textOpacity',\n\n\t/**\n\t * Variable: STYLE_TEXT_DIRECTION\n\t * \n\t * Defines the key for the text direction style. Possible values are\n\t * \"TEXT_DIRECTION_DEFAULT, TEXT_DIRECTION_AUTO, TEXT_DIRECTION_LTR\"\n\t * and \"TEXT_DIRECTION_RTL\". Value is \"textDirection\".\n\t * The default value for the style is defined in <DEFAULT_TEXT_DIRECTION>.\n\t * It is used is no value is defined for this key in a given style. This is\n\t * an experimental style that is currently ignored in the backends.\n\t */\n\tSTYLE_TEXT_DIRECTION: 'textDirection',\n\n\t/**\n\t * Variable: STYLE_OVERFLOW\n\t * \n\t * Defines the key for the overflow style. Possible values are 'visible',\n\t * 'hidden', 'fill' and 'width'. The default value is 'visible'. This value\n\t * specifies how overlapping vertex labels are handled. A value of\n\t * 'visible' will show the complete label. A value of 'hidden' will clip\n\t * the label so that it does not overlap the vertex bounds. A value of\n\t * 'fill' will use the vertex bounds and a value of 'width' will use the\n\t * the vertex width for the label. See <mxGraph.isLabelClipped>. Note that\n\t * the vertical alignment is ignored for overflow fill and for horizontal\n\t * alignment, left should be used to avoid pixel offsets in Internet Explorer\n\t * 11 and earlier or if foreignObjects are disabled. Value is \"overflow\".\n\t */\n\tSTYLE_OVERFLOW: 'overflow',\n\n\t/**\n\t * Variable: STYLE_ORTHOGONAL\n\t * \n\t * Defines if the connection points on either end of the edge should be\n\t * computed so that the edge is vertical or horizontal if possible and\n\t * if the point is not at a fixed location. Default is false. This is\n\t * used in <mxGraph.isOrthogonal>, which also returns true if the edgeStyle\n\t * of the edge is an elbow or entity. Value is \"orthogonal\".\n\t */\n\tSTYLE_ORTHOGONAL: 'orthogonal',\n\n\t/**\n\t * Variable: STYLE_EXIT_X\n\t * \n\t * Defines the key for the horizontal relative coordinate connection point\n\t * of an edge with its source terminal. Value is \"exitX\".\n\t */\n\tSTYLE_EXIT_X: 'exitX',\n\n\t/**\n\t * Variable: STYLE_EXIT_Y\n\t * \n\t * Defines the key for the vertical relative coordinate connection point\n\t * of an edge with its source terminal. Value is \"exitY\".\n\t */\n\tSTYLE_EXIT_Y: 'exitY',\n\n\t/**\n\t * Variable: STYLE_EXIT_PERIMETER\n\t * \n\t * Defines if the perimeter should be used to find the exact entry point\n\t * along the perimeter of the source. Possible values are 0 (false) and\n\t * 1 (true). Default is 1 (true). Value is \"exitPerimeter\".\n\t */\n\tSTYLE_EXIT_PERIMETER: 'exitPerimeter',\n\n\t/**\n\t * Variable: STYLE_ENTRY_X\n\t * \n\t * Defines the key for the horizontal relative coordinate connection point\n\t * of an edge with its target terminal. Value is \"entryX\".\n\t */\n\tSTYLE_ENTRY_X: 'entryX',\n\n\t/**\n\t * Variable: STYLE_ENTRY_Y\n\t * \n\t * Defines the key for the vertical relative coordinate connection point\n\t * of an edge with its target terminal. Value is \"entryY\".\n\t */\n\tSTYLE_ENTRY_Y: 'entryY',\n\n\t/**\n\t * Variable: STYLE_ENTRY_PERIMETER\n\t * \n\t * Defines if the perimeter should be used to find the exact entry point\n\t * along the perimeter of the target. Possible values are 0 (false) and\n\t * 1 (true). Default is 1 (true). Value is \"entryPerimeter\".\n\t */\n\tSTYLE_ENTRY_PERIMETER: 'entryPerimeter',\n\n\t/**\n\t * Variable: STYLE_WHITE_SPACE\n\t * \n\t * Defines the key for the white-space style. Possible values are 'nowrap'\n\t * and 'wrap'. The default value is 'nowrap'. This value specifies how\n\t * white-space inside a HTML vertex label should be handled. A value of\n\t * 'nowrap' means the text will never wrap to the next line until a\n\t * linefeed is encountered. A value of 'wrap' means text will wrap when\n\t * necessary. This style is only used for HTML labels.\n\t * See <mxGraph.isWrapping>. Value is \"whiteSpace\".\n\t */\n\tSTYLE_WHITE_SPACE: 'whiteSpace',\n\n\t/**\n\t * Variable: STYLE_ROTATION\n\t * \n\t * Defines the key for the rotation style. The type of the value is \n\t * numeric and the possible range is 0-360. Value is \"rotation\".\n\t */\n\tSTYLE_ROTATION: 'rotation',\n\n\t/**\n\t * Variable: STYLE_FILLCOLOR\n\t * \n\t * Defines the key for the fill color. Possible values are all HTML color\n\t * names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit' or 'indicated' to use the color code of a related cell or the\n\t * indicator shape. Value is \"fillColor\".\n\t */\n\tSTYLE_FILLCOLOR: 'fillColor',\n\n\t/**\n\t * Variable: STYLE_POINTER_EVENTS\n\t * \n\t * Specifies if pointer events should be fired on transparent backgrounds.\n\t * This style is currently only supported in <mxRectangleShape>. Default\n\t * is true. Value is \"pointerEvents\". This is typically set to\n\t * false in groups where the transparent part should allow any underlying\n\t * cells to be clickable.\n\t */\n\tSTYLE_POINTER_EVENTS: 'pointerEvents',\n\n\t/**\n\t * Variable: STYLE_SWIMLANE_FILLCOLOR\n\t * \n\t * Defines the key for the fill color of the swimlane background. Possible\n\t * values are all HTML color names or HEX codes. Default is no background.\n\t * Value is \"swimlaneFillColor\".\n\t */\n\tSTYLE_SWIMLANE_FILLCOLOR: 'swimlaneFillColor',\n\n\t/**\n\t * Variable: STYLE_MARGIN\n\t * \n\t * Defines the key for the margin between the ellipses in the double ellipse shape.\n\t * Possible values are all positive numbers. Value is \"margin\".\n\t */\n\tSTYLE_MARGIN: 'margin',\n\n\t/**\n\t * Variable: STYLE_GRADIENTCOLOR\n\t * \n\t * Defines the key for the gradient color. Possible values are all HTML color\n\t * names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit' or 'indicated' to use the color code of a related cell or the\n\t * indicator shape. This is ignored if no fill color is defined. Value is\n\t * \"gradientColor\".\n\t */\n\tSTYLE_GRADIENTCOLOR: 'gradientColor',\n\n\t/**\n\t * Variable: STYLE_GRADIENT_DIRECTION\n\t * \n\t * Defines the key for the gradient direction. Possible values are\n\t * <DIRECTION_EAST>, <DIRECTION_WEST>, <DIRECTION_NORTH> and\n\t * <DIRECTION_SOUTH>. Default is <DIRECTION_SOUTH>. Generally, and by\n\t * default in mxGraph, gradient painting is done from the value of\n\t * <STYLE_FILLCOLOR> to the value of <STYLE_GRADIENTCOLOR>. Taking the\n\t * example of <DIRECTION_NORTH>, this means <STYLE_FILLCOLOR> color at the \n\t * bottom of paint pattern and <STYLE_GRADIENTCOLOR> at top, with a\n\t * gradient in-between. Value is \"gradientDirection\".\n\t */\n\tSTYLE_GRADIENT_DIRECTION: 'gradientDirection',\n\n\t/**\n\t * Variable: STYLE_STROKECOLOR\n\t * \n\t * Defines the key for the strokeColor style. Possible values are all HTML\n\t * color names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit', 'indicated' to use the color code of a related cell or the\n\t * indicator shape or 'none' for no color. Value is \"strokeColor\".\n\t */\n\tSTYLE_STROKECOLOR: 'strokeColor',\n\n\t/**\n\t * Variable: STYLE_SEPARATORCOLOR\n\t * \n\t * Defines the key for the separatorColor style. Possible values are all\n\t * HTML color names or HEX codes. This style is only used for\n\t * <SHAPE_SWIMLANE> shapes. Value is \"separatorColor\".\n\t */\n\tSTYLE_SEPARATORCOLOR: 'separatorColor',\n\n\t/**\n\t * Variable: STYLE_STROKEWIDTH\n\t * \n\t * Defines the key for the strokeWidth style. The type of the value is \n\t * numeric and the possible range is any non-negative value larger or equal\n\t * to 1. The value defines the stroke width in pixels. Note: To hide a\n\t * stroke use strokeColor none. Value is \"strokeWidth\".\n\t */\n\tSTYLE_STROKEWIDTH: 'strokeWidth',\n\n\t/**\n\t * Variable: STYLE_ALIGN\n\t * \n\t * Defines the key for the align style. Possible values are <ALIGN_LEFT>,\n\t * <ALIGN_CENTER> and <ALIGN_RIGHT>. This value defines how the lines of\n\t * the label are horizontally aligned. <ALIGN_LEFT> mean label text lines\n\t * are aligned to left of the label bounds, <ALIGN_RIGHT> to the right of\n\t * the label bounds and <ALIGN_CENTER> means the center of the text lines\n\t * are aligned in the center of the label bounds. Note this value doesn't\n\t * affect the positioning of the overall label bounds relative to the\n\t * vertex, to move the label bounds horizontally, use\n\t * <STYLE_LABEL_POSITION>. Value is \"align\".\n\t */\n\tSTYLE_ALIGN: 'align',\n\n\t/**\n\t * Variable: STYLE_VERTICAL_ALIGN\n\t * \n\t * Defines the key for the verticalAlign style. Possible values are\n\t * <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>. This value defines how\n\t * the lines of the label are vertically aligned. <ALIGN_TOP> means the\n\t * topmost label text line is aligned against the top of the label bounds,\n\t * <ALIGN_BOTTOM> means the bottom-most label text line is aligned against\n\t * the bottom of the label bounds and <ALIGN_MIDDLE> means there is equal\n\t * spacing between the topmost text label line and the top of the label\n\t * bounds and the bottom-most text label line and the bottom of the label\n\t * bounds. Note this value doesn't affect the positioning of the overall\n\t * label bounds relative to the vertex, to move the label bounds\n\t * vertically, use <STYLE_VERTICAL_LABEL_POSITION>. Value is \"verticalAlign\".\n\t */\n\tSTYLE_VERTICAL_ALIGN: 'verticalAlign',\n\n\t/**\n\t * Variable: STYLE_LABEL_WIDTH\n\t * \n\t * Defines the key for the width of the label if the label position is not\n\t * center. Value is \"labelWidth\".\n\t */\n\tSTYLE_LABEL_WIDTH: 'labelWidth',\n\n\t/**\n\t * Variable: STYLE_LABEL_POSITION\n\t * \n\t * Defines the key for the horizontal label position of vertices. Possible\n\t * values are <ALIGN_LEFT>, <ALIGN_CENTER> and <ALIGN_RIGHT>. Default is\n\t * <ALIGN_CENTER>. The label align defines the position of the label\n\t * relative to the cell. <ALIGN_LEFT> means the entire label bounds is\n\t * placed completely just to the left of the vertex, <ALIGN_RIGHT> means\n\t * adjust to the right and <ALIGN_CENTER> means the label bounds are\n\t * vertically aligned with the bounds of the vertex. Note this value\n\t * doesn't affect the positioning of label within the label bounds, to move\n\t * the label horizontally within the label bounds, use <STYLE_ALIGN>.\n\t * Value is \"labelPosition\".\n\t */\n\tSTYLE_LABEL_POSITION: 'labelPosition',\n\n\t/**\n\t * Variable: STYLE_VERTICAL_LABEL_POSITION\n\t * \n\t * Defines the key for the vertical label position of vertices. Possible\n\t * values are <ALIGN_TOP>, <ALIGN_BOTTOM> and <ALIGN_MIDDLE>. Default is\n\t * <ALIGN_MIDDLE>. The label align defines the position of the label\n\t * relative to the cell. <ALIGN_TOP> means the entire label bounds is\n\t * placed completely just on the top of the vertex, <ALIGN_BOTTOM> means\n\t * adjust on the bottom and <ALIGN_MIDDLE> means the label bounds are\n\t * horizontally aligned with the bounds of the vertex. Note this value\n\t * doesn't affect the positioning of label within the label bounds, to move\n\t * the label vertically within the label bounds, use\n\t * <STYLE_VERTICAL_ALIGN>. Value is \"verticalLabelPosition\".\n\t */\n\tSTYLE_VERTICAL_LABEL_POSITION: 'verticalLabelPosition',\n\t\n\t/**\n\t * Variable: STYLE_IMAGE_ASPECT\n\t * \n\t * Defines the key for the image aspect style. Possible values are 0 (do\n\t * not preserve aspect) or 1 (keep aspect). This is only used in\n\t * <mxImageShape>. Default is 1. Value is \"imageAspect\".\n\t */\n\tSTYLE_IMAGE_ASPECT: 'imageAspect',\n\n\t/**\n\t * Variable: STYLE_IMAGE_ALIGN\n\t * \n\t * Defines the key for the align style. Possible values are <ALIGN_LEFT>,\n\t * <ALIGN_CENTER> and <ALIGN_RIGHT>. The value defines how any image in the\n\t * vertex label is aligned horizontally within the label bounds of a\n\t * <SHAPE_LABEL> shape. Value is \"imageAlign\".\n\t */\n\tSTYLE_IMAGE_ALIGN: 'imageAlign',\n\n\t/**\n\t * Variable: STYLE_IMAGE_VERTICAL_ALIGN\n\t * \n\t * Defines the key for the verticalAlign style. Possible values are\n\t * <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>. The value defines how\n\t * any image in the vertex label is aligned vertically within the label\n\t * bounds of a <SHAPE_LABEL> shape. Value is \"imageVerticalAlign\".\n\t */\n\tSTYLE_IMAGE_VERTICAL_ALIGN: 'imageVerticalAlign',\n\n\t/**\n\t * Variable: STYLE_GLASS\n\t * \n\t * Defines the key for the glass style. Possible values are 0 (disabled) and\n\t * 1(enabled). The default value is 0. This is used in <mxLabel>. Value is\n\t * \"glass\".\n\t */\n\tSTYLE_GLASS: 'glass',\n\n\t/**\n\t * Variable: STYLE_IMAGE\n\t * \n\t * Defines the key for the image style. Possible values are any image URL,\n\t * the type of the value is String. This is the path to the image that is\n\t * to be displayed within the label of a vertex. Data URLs should use the\n\t * following format: data:image/png,xyz where xyz is the base64 encoded\n\t * data (without the \"base64\"-prefix). Note that Data URLs are only\n\t * supported in modern browsers. Value is \"image\".\n\t */\n\tSTYLE_IMAGE: 'image',\n\n\t/**\n\t * Variable: STYLE_IMAGE_WIDTH\n\t * \n\t * Defines the key for the imageWidth style. The type of this value is\n\t * int, the value is the image width in pixels and must be greater than 0.\n\t * Value is \"imageWidth\".\n\t */\n\tSTYLE_IMAGE_WIDTH: 'imageWidth',\n\n\t/**\n\t * Variable: STYLE_IMAGE_HEIGHT\n\t * \n\t * Defines the key for the imageHeight style. The type of this value is\n\t * int, the value is the image height in pixels and must be greater than 0.\n\t * Value is \"imageHeight\".\n\t */\n\tSTYLE_IMAGE_HEIGHT: 'imageHeight',\n\n\t/**\n\t * Variable: STYLE_IMAGE_BACKGROUND\n\t * \n\t * Defines the key for the image background color. This style is only used\n\t * in <mxImageShape>. Possible values are all HTML color names or HEX\n\t * codes. Value is \"imageBackground\".\n\t */\n\tSTYLE_IMAGE_BACKGROUND: 'imageBackground',\n\n\t/**\n\t * Variable: STYLE_IMAGE_BORDER\n\t * \n\t * Defines the key for the image border color. This style is only used in\n\t * <mxImageShape>. Possible values are all HTML color names or HEX codes.\n\t * Value is \"imageBorder\".\n\t */\n\tSTYLE_IMAGE_BORDER: 'imageBorder',\n\n\t/**\n\t * Variable: STYLE_FLIPH\n\t * \n\t * Defines the key for the horizontal image flip. This style is only used\n\t * in <mxImageShape>. Possible values are 0 and 1. Default is 0. Value is\n\t * \"flipH\".\n\t */\n\tSTYLE_FLIPH: 'flipH',\n\n\t/**\n\t * Variable: STYLE_FLIPV\n\t * \n\t * Defines the key for the vertical flip. Possible values are 0 and 1.\n\t * Default is 0. Value is \"flipV\".\n\t */\n\tSTYLE_FLIPV: 'flipV',\n\n\t/**\n\t * Variable: STYLE_NOLABEL\n\t * \n\t * Defines the key for the noLabel style. If this is true then no label is\n\t * visible for a given cell. Possible values are true or false (1 or 0).\n\t * Default is false. Value is \"noLabel\".\n\t */\n\tSTYLE_NOLABEL: 'noLabel',\n\n\t/**\n\t * Variable: STYLE_NOEDGESTYLE\n\t * \n\t * Defines the key for the noEdgeStyle style. If this is true then no edge\n\t * style is applied for a given edge. Possible values are true or false\n\t * (1 or 0). Default is false. Value is \"noEdgeStyle\".\n\t */\n\tSTYLE_NOEDGESTYLE: 'noEdgeStyle',\n\n\t/**\n\t * Variable: STYLE_LABEL_BACKGROUNDCOLOR\n\t * \n\t * Defines the key for the label background color. Possible values are all\n\t * HTML color names or HEX codes. Value is \"labelBackgroundColor\".\n\t */\n\tSTYLE_LABEL_BACKGROUNDCOLOR: 'labelBackgroundColor',\n\n\t/**\n\t * Variable: STYLE_LABEL_BORDERCOLOR\n\t * \n\t * Defines the key for the label border color. Possible values are all\n\t * HTML color names or HEX codes. Value is \"labelBorderColor\".\n\t */\n\tSTYLE_LABEL_BORDERCOLOR: 'labelBorderColor',\n\n\t/**\n\t * Variable: STYLE_LABEL_PADDING\n\t * \n\t * Defines the key for the label padding, ie. the space between the label\n\t * border and the label. Value is \"labelPadding\".\n\t */\n\tSTYLE_LABEL_PADDING: 'labelPadding',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_SHAPE\n\t * \n\t * Defines the key for the indicator shape used within an <mxLabel>.\n\t * Possible values are all SHAPE_* constants or the names of any new\n\t * shapes. The indicatorShape has precedence over the indicatorImage.\n\t * Value is \"indicatorShape\".\n\t */\n\tSTYLE_INDICATOR_SHAPE: 'indicatorShape',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_IMAGE\n\t * \n\t * Defines the key for the indicator image used within an <mxLabel>.\n\t * Possible values are all image URLs. The indicatorShape has\n\t * precedence over the indicatorImage. Value is \"indicatorImage\".\n\t */\n\tSTYLE_INDICATOR_IMAGE: 'indicatorImage',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_COLOR\n\t * \n\t * Defines the key for the indicatorColor style. Possible values are all\n\t * HTML color names or HEX codes, as well as the special 'swimlane' keyword\n\t * to refer to the color of the parent swimlane if one exists. Value is\n\t * \"indicatorColor\".\n\t */\n\tSTYLE_INDICATOR_COLOR: 'indicatorColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_STROKECOLOR\n\t * \n\t * Defines the key for the indicator stroke color in <mxLabel>.\n\t * Possible values are all color codes. Value is \"indicatorStrokeColor\".\n\t */\n\tSTYLE_INDICATOR_STROKECOLOR: 'indicatorStrokeColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_GRADIENTCOLOR\n\t * \n\t * Defines the key for the indicatorGradientColor style. Possible values\n\t * are all HTML color names or HEX codes. This style is only supported in\n\t * <SHAPE_LABEL> shapes. Value is \"indicatorGradientColor\".\n\t */\n\tSTYLE_INDICATOR_GRADIENTCOLOR: 'indicatorGradientColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_SPACING\n\t * \n\t * The defines the key for the spacing between the label and the\n\t * indicator in <mxLabel>. Possible values are in pixels. Value is\n\t * \"indicatorSpacing\".\n\t */\n\tSTYLE_INDICATOR_SPACING: 'indicatorSpacing',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_WIDTH\n\t * \n\t * Defines the key for the indicator width. Possible values start at 0 (in\n\t * pixels). Value is \"indicatorWidth\".\n\t */\n\tSTYLE_INDICATOR_WIDTH: 'indicatorWidth',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_HEIGHT\n\t * \n\t * Defines the key for the indicator height. Possible values start at 0 (in\n\t * pixels). Value is \"indicatorHeight\".\n\t */\n\tSTYLE_INDICATOR_HEIGHT: 'indicatorHeight',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_DIRECTION\n\t * \n\t * Defines the key for the indicatorDirection style. The direction style is\n\t * used to specify the direction of certain shapes (eg. <mxTriangle>).\n\t * Possible values are <DIRECTION_EAST> (default), <DIRECTION_WEST>,\n\t * <DIRECTION_NORTH> and <DIRECTION_SOUTH>. Value is \"indicatorDirection\".\n\t */\n\tSTYLE_INDICATOR_DIRECTION: 'indicatorDirection',\n\n\t/**\n\t * Variable: STYLE_SHADOW\n\t * \n\t * Defines the key for the shadow style. The type of the value is Boolean.\n\t * Value is \"shadow\".\n\t */\n\tSTYLE_SHADOW: 'shadow',\n\t\n\t/**\n\t * Variable: STYLE_SEGMENT\n\t * \n\t * Defines the key for the segment style. The type of this value is float\n\t * and the value represents the size of the horizontal segment of the\n\t * entity relation style. Default is ENTITY_SEGMENT. Value is \"segment\".\n\t */\n\tSTYLE_SEGMENT: 'segment',\n\t\n\t/**\n\t * Variable: STYLE_ENDARROW\n\t *\n\t * Defines the key for the end arrow marker. Possible values are all\n\t * constants with an ARROW-prefix. This is only used in <mxConnector>.\n\t * Value is \"endArrow\".\n\t *\n\t * Example:\n\t * (code)\n\t * style[mxConstants.STYLE_ENDARROW] = mxConstants.ARROW_CLASSIC;\n\t * (end)\n\t */\n\tSTYLE_ENDARROW: 'endArrow',\n\n\t/**\n\t * Variable: STYLE_STARTARROW\n\t * \n\t * Defines the key for the start arrow marker. Possible values are all\n\t * constants with an ARROW-prefix. This is only used in <mxConnector>.\n\t * See <STYLE_ENDARROW>. Value is \"startArrow\".\n\t */\n\tSTYLE_STARTARROW: 'startArrow',\n\n\t/**\n\t * Variable: STYLE_ENDSIZE\n\t * \n\t * Defines the key for the endSize style. The type of this value is numeric\n\t * and the value represents the size of the end marker in pixels. Value is\n\t * \"endSize\".\n\t */\n\tSTYLE_ENDSIZE: 'endSize',\n\n\t/**\n\t * Variable: STYLE_STARTSIZE\n\t * \n\t * Defines the key for the startSize style. The type of this value is\n\t * numeric and the value represents the size of the start marker or the\n\t * size of the swimlane title region depending on the shape it is used for.\n\t * Value is \"startSize\".\n\t */\n\tSTYLE_STARTSIZE: 'startSize',\n\n\t/**\n\t * Variable: STYLE_SWIMLANE_LINE\n\t * \n\t * Defines the key for the swimlaneLine style. This style specifies whether\n\t * the line between the title regio of a swimlane should be visible. Use 0\n\t * for hidden or 1 (default) for visible. Value is \"swimlaneLine\".\n\t */\n\tSTYLE_SWIMLANE_LINE: 'swimlaneLine',\n\n\t/**\n\t * Variable: STYLE_ENDFILL\n\t * \n\t * Defines the key for the endFill style. Use 0 for no fill or 1 (default)\n\t * for fill. (This style is only exported via <mxImageExport>.) Value is\n\t * \"endFill\".\n\t */\n\tSTYLE_ENDFILL: 'endFill',\n\n\t/**\n\t * Variable: STYLE_STARTFILL\n\t * \n\t * Defines the key for the startFill style. Use 0 for no fill or 1 (default)\n\t * for fill. (This style is only exported via <mxImageExport>.) Value is\n\t * \"startFill\".\n\t */\n\tSTYLE_STARTFILL: 'startFill',\n\n\t/**\n\t * Variable: STYLE_DASHED\n\t * \n\t * Defines the key for the dashed style. Use 0 (default) for non-dashed or 1\n\t * for dashed. Value is \"dashed\".\n\t */\n\tSTYLE_DASHED: 'dashed',\n\n\t/**\n\t * Defines the key for the dashed pattern style in SVG and image exports.\n\t * The type of this value is a space separated list of numbers that specify\n\t * a custom-defined dash pattern. Dash styles are defined in terms of the\n\t * length of the dash (the drawn part of the stroke) and the length of the\n\t * space between the dashes. The lengths are relative to the line width: a\n\t * length of \"1\" is equal to the line width. VML ignores this style and\n\t * uses dashStyle instead as defined in the VML specification. This style\n\t * is only used in the <mxConnector> shape. Value is \"dashPattern\".\n\t */\n\tSTYLE_DASH_PATTERN: 'dashPattern',\n\n\t/**\n\t * Variable: STYLE_FIX_DASH\n\t * \n\t * Defines the key for the fixDash style. Use 0 (default) for dash patterns\n\t * that depend on the linewidth and 1 for dash patterns that ignore the\n\t * line width. Value is \"fixDash\".\n\t */\n\tSTYLE_FIX_DASH: 'fixDash',\n\n\t/**\n\t * Variable: STYLE_ROUNDED\n\t * \n\t * Defines the key for the rounded style. The type of this value is\n\t * Boolean. For edges this determines whether or not joins between edges\n\t * segments are smoothed to a rounded finish. For vertices that have the\n\t * rectangle shape, this determines whether or not the rectangle is\n\t * rounded. Use 0 (default) for non-rounded or 1 for rounded. Value is\n\t * \"rounded\".\n\t */\n\tSTYLE_ROUNDED: 'rounded',\n\n\t/**\n\t * Variable: STYLE_CURVED\n\t * \n\t * Defines the key for the curved style. The type of this value is\n\t * Boolean. It is only applicable for connector shapes. Use 0 (default)\n\t * for non-curved or 1 for curved. Value is \"curved\".\n\t */\n\tSTYLE_CURVED: 'curved',\n\n\t/**\n\t * Variable: STYLE_ARCSIZE\n\t * \n\t * Defines the rounding factor for a rounded rectangle in percent (without\n\t * the percent sign). Possible values are between 0 and 100. If this value\n\t * is not specified then RECTANGLE_ROUNDING_FACTOR * 100 is used. For\n\t * edges, this defines the absolute size of rounded corners in pixels. If\n\t * this values is not specified then LINE_ARCSIZE is used.\n\t * (This style is only exported via <mxImageExport>.) Value is \"arcSize\".\n\t */\n\tSTYLE_ARCSIZE: 'arcSize',\n\n\t/**\n\t * Variable: STYLE_ABSOLUTE_ARCSIZE\n\t * \n\t * Defines the key for the absolute arc size style. This specifies if\n\t * arcSize for rectangles is abolute or relative. Possible values are 1\n\t * and 0 (default). Value is \"absoluteArcSize\".\n\t */\n\tSTYLE_ABSOLUTE_ARCSIZE: 'absoluteArcSize',\n\n\t/**\n\t * Variable: STYLE_SOURCE_PERIMETER_SPACING\n\t * \n\t * Defines the key for the source perimeter spacing. The type of this value\n\t * is numeric. This is the distance between the source connection point of\n\t * an edge and the perimeter of the source vertex in pixels. This style\n\t * only applies to edges. Value is \"sourcePerimeterSpacing\".\n\t */\n\tSTYLE_SOURCE_PERIMETER_SPACING: 'sourcePerimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_TARGET_PERIMETER_SPACING\n\t * \n\t * Defines the key for the target perimeter spacing. The type of this value\n\t * is numeric. This is the distance between the target connection point of\n\t * an edge and the perimeter of the target vertex in pixels. This style\n\t * only applies to edges. Value is \"targetPerimeterSpacing\".\n\t */\n\tSTYLE_TARGET_PERIMETER_SPACING: 'targetPerimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_PERIMETER_SPACING\n\t * \n\t * Defines the key for the perimeter spacing. This is the distance between\n\t * the connection point and the perimeter in pixels. When used in a vertex\n\t * style, this applies to all incoming edges to floating ports (edges that\n\t * terminate on the perimeter of the vertex). When used in an edge style,\n\t * this spacing applies to the source and target separately, if they\n\t * terminate in floating ports (on the perimeter of the vertex). Value is\n\t * \"perimeterSpacing\".\n\t */\n\tSTYLE_PERIMETER_SPACING: 'perimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_SPACING\n\t * \n\t * Defines the key for the spacing. The value represents the spacing, in\n\t * pixels, added to each side of a label in a vertex (style applies to\n\t * vertices only). Value is \"spacing\".\n\t */\n\tSTYLE_SPACING: 'spacing',\n\n\t/**\n\t * Variable: STYLE_SPACING_TOP\n\t * \n\t * Defines the key for the spacingTop style. The value represents the\n\t * spacing, in pixels, added to the top side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingTop\".\n\t */\n\tSTYLE_SPACING_TOP: 'spacingTop',\n\n\t/**\n\t * Variable: STYLE_SPACING_LEFT\n\t * \n\t * Defines the key for the spacingLeft style. The value represents the\n\t * spacing, in pixels, added to the left side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingLeft\".\n\t */\n\tSTYLE_SPACING_LEFT: 'spacingLeft',\n\n\t/**\n\t * Variable: STYLE_SPACING_BOTTOM\n\t * \n\t * Defines the key for the spacingBottom style The value represents the\n\t * spacing, in pixels, added to the bottom side of a label in a vertex\n\t * (style applies to vertices only). Value is \"spacingBottom\".\n\t */\n\tSTYLE_SPACING_BOTTOM: 'spacingBottom',\n\n\t/**\n\t * Variable: STYLE_SPACING_RIGHT\n\t * \n\t * Defines the key for the spacingRight style The value represents the\n\t * spacing, in pixels, added to the right side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingRight\".\n\t */\n\tSTYLE_SPACING_RIGHT: 'spacingRight',\n\n\t/**\n\t * Variable: STYLE_HORIZONTAL\n\t * \n\t * Defines the key for the horizontal style. Possible values are\n\t * true or false. This value only applies to vertices. If the <STYLE_SHAPE>\n\t * is \"SHAPE_SWIMLANE\" a value of false indicates that the\n\t * swimlane should be drawn vertically, true indicates to draw it\n\t * horizontally. If the shape style does not indicate that this vertex is a\n\t * swimlane, this value affects only whether the label is drawn\n\t * horizontally or vertically. Value is \"horizontal\".\n\t */\n\tSTYLE_HORIZONTAL: 'horizontal',\n\n\t/**\n\t * Variable: STYLE_DIRECTION\n\t * \n\t * Defines the key for the direction style. The direction style is used\n\t * to specify the direction of certain shapes (eg. <mxTriangle>).\n\t * Possible values are <DIRECTION_EAST> (default), <DIRECTION_WEST>,\n\t * <DIRECTION_NORTH> and <DIRECTION_SOUTH>. Value is \"direction\".\n\t */\n\tSTYLE_DIRECTION: 'direction',\n\n\t/**\n\t * Variable: STYLE_ANCHOR_POINT_DIRECTION\n\t * \n\t * Defines the key for the anchorPointDirection style. The defines if the\n\t * direction style should be taken into account when computing the fixed\n\t * point location for connected edges. Default is 1 (yes). Set this to 0\n\t * to ignore the direction style for fixed connection points. Value is\n\t * \"anchorPointDirection\".\n\t */\n\tSTYLE_ANCHOR_POINT_DIRECTION: 'anchorPointDirection',\n\n\t/**\n\t * Variable: STYLE_ELBOW\n\t * \n\t * Defines the key for the elbow style. Possible values are\n\t * <ELBOW_HORIZONTAL> and <ELBOW_VERTICAL>. Default is <ELBOW_HORIZONTAL>.\n\t * This defines how the three segment orthogonal edge style leaves its\n\t * terminal vertices. The vertical style leaves the terminal vertices at\n\t * the top and bottom sides. Value is \"elbow\".\n\t */\n\tSTYLE_ELBOW: 'elbow',\n\n\t/**\n\t * Variable: STYLE_FONTCOLOR\n\t * \n\t * Defines the key for the fontColor style. Possible values are all HTML\n\t * color names or HEX codes. Value is \"fontColor\".\n\t */\n\tSTYLE_FONTCOLOR: 'fontColor',\n\n\t/**\n\t * Variable: STYLE_FONTFAMILY\n\t * \n\t * Defines the key for the fontFamily style. Possible values are names such\n\t * as Arial; Dialog; Verdana; Times New Roman. The value is of type String.\n\t * Value is fontFamily.\n\t */\n\tSTYLE_FONTFAMILY: 'fontFamily',\n\n\t/**\n\t * Variable: STYLE_FONTSIZE\n\t * \n\t * Defines the key for the fontSize style (in px). The type of the value\n\t * is int. Value is \"fontSize\".\n\t */\n\tSTYLE_FONTSIZE: 'fontSize',\n\n\t/**\n\t * Variable: STYLE_FONTSTYLE\n\t * \n\t * Defines the key for the fontStyle style. Values may be any logical AND\n\t * (sum) of <FONT_BOLD>, <FONT_ITALIC> and <FONT_UNDERLINE>.\n\t * The type of the value is int. Value is \"fontStyle\".\n\t */\n\tSTYLE_FONTSTYLE: 'fontStyle',\n\t\n\t/**\n\t * Variable: STYLE_ASPECT\n\t * \n\t * Defines the key for the aspect style. Possible values are empty or fixed.\n\t * If fixed is used then the aspect ratio of the cell will be maintained\n\t * when resizing. Default is empty. Value is \"aspect\".\n\t */\n\tSTYLE_ASPECT: 'aspect',\n\n\t/**\n\t * Variable: STYLE_AUTOSIZE\n\t * \n\t * Defines the key for the autosize style. This specifies if a cell should be\n\t * resized automatically if the value has changed. Possible values are 0 or 1.\n\t * Default is 0. See <mxGraph.isAutoSizeCell>. This is normally combined with\n\t * <STYLE_RESIZABLE> to disable manual sizing. Value is \"autosize\".\n\t */\n\tSTYLE_AUTOSIZE: 'autosize',\n\n\t/**\n\t * Variable: STYLE_FOLDABLE\n\t * \n\t * Defines the key for the foldable style. This specifies if a cell is foldable\n\t * using a folding icon. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellFoldable>. Value is \"foldable\".\n\t */\n\tSTYLE_FOLDABLE: 'foldable',\n\n\t/**\n\t * Variable: STYLE_EDITABLE\n\t * \n\t * Defines the key for the editable style. This specifies if the value of\n\t * a cell can be edited using the in-place editor. Possible values are 0 or\n\t * 1. Default is 1. See <mxGraph.isCellEditable>. Value is \"editable\".\n\t */\n\tSTYLE_EDITABLE: 'editable',\n\n\t/**\n\t * Variable: STYLE_BACKGROUND_OUTLINE\n\t * \n\t * Defines the key for the backgroundOutline style. This specifies if a\n\t * only the background of a cell should be painted when it is highlighted.\n\t * Possible values are 0 or 1. Default is 0. Value is \"backgroundOutline\".\n\t */\n\tSTYLE_BACKGROUND_OUTLINE: 'backgroundOutline',\n\n\t/**\n\t * Variable: STYLE_BENDABLE\n\t * \n\t * Defines the key for the bendable style. This specifies if the control\n\t * points of an edge can be moved. Possible values are 0 or 1. Default is\n\t * 1. See <mxGraph.isCellBendable>. Value is \"bendable\".\n\t */\n\tSTYLE_BENDABLE: 'bendable',\n\n\t/**\n\t * Variable: STYLE_MOVABLE\n\t * \n\t * Defines the key for the movable style. This specifies if a cell can\n\t * be moved. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellMovable>. Value is \"movable\".\n\t */\n\tSTYLE_MOVABLE: 'movable',\n\n\t/**\n\t * Variable: STYLE_RESIZABLE\n\t * \n\t * Defines the key for the resizable style. This specifies if a cell can\n\t * be resized. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellResizable>. Value is \"resizable\".\n\t */\n\tSTYLE_RESIZABLE: 'resizable',\n\n\t/**\n\t * Variable: STYLE_RESIZE_WIDTH\n\t * \n\t * Defines the key for the resizeWidth style. This specifies if a cell's\n\t * width is resized if the parent is resized. If this is 1 then the width\n\t * will be resized even if the cell's geometry is relative. If this is 0\n\t * then the cell's width will not be resized. Default is not defined. Value\n\t * is \"resizeWidth\".\n\t */\n\tSTYLE_RESIZE_WIDTH: 'resizeWidth',\n\n\t/**\n\t * Variable: STYLE_RESIZE_WIDTH\n\t * \n\t * Defines the key for the resizeHeight style. This specifies if a cell's\n\t * height if resize if the parent is resized. If this is 1 then the height\n\t * will be resized even if the cell's geometry is relative. If this is 0\n\t * then the cell's height will not be resized. Default is not defined. Value\n\t * is \"resizeHeight\".\n\t */\n\tSTYLE_RESIZE_HEIGHT: 'resizeHeight',\n\n\t/**\n\t * Variable: STYLE_ROTATABLE\n\t * \n\t * Defines the key for the rotatable style. This specifies if a cell can\n\t * be rotated. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellRotatable>. Value is \"rotatable\".\n\t */\n\tSTYLE_ROTATABLE: 'rotatable',\n\n\t/**\n\t * Variable: STYLE_CLONEABLE\n\t * \n\t * Defines the key for the cloneable style. This specifies if a cell can\n\t * be cloned. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellCloneable>. Value is \"cloneable\".\n\t */\n\tSTYLE_CLONEABLE: 'cloneable',\n\n\t/**\n\t * Variable: STYLE_DELETABLE\n\t * \n\t * Defines the key for the deletable style. This specifies if a cell can be\n\t * deleted. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellDeletable>. Value is \"deletable\".\n\t */\n\tSTYLE_DELETABLE: 'deletable',\n\n\t/**\n\t * Variable: STYLE_SHAPE\n\t * \n\t * Defines the key for the shape. Possible values are all constants with\n\t * a SHAPE-prefix or any newly defined shape names. Value is \"shape\".\n\t */\n\tSTYLE_SHAPE: 'shape',\n\n\t/**\n\t * Variable: STYLE_EDGE\n\t * \n\t * Defines the key for the edge style. Possible values are the functions\n\t * defined in <mxEdgeStyle>. Value is \"edgeStyle\".\n\t */\n\tSTYLE_EDGE: 'edgeStyle',\n\n\t/**\n\t * Variable: STYLE_JETTY_SIZE\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are all numeric values or \"auto\".\n\t * Value is \"jettySize\".\n\t */\n\tSTYLE_JETTY_SIZE: 'jettySize',\n\n\t/**\n\t * Variable: STYLE_SOURCE_JETTY_SIZE\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are numeric values or \"auto\". This has\n\t * precedence over <STYLE_JETTY_SIZE>. Value is \"sourceJettySize\".\n\t */\n\tSTYLE_SOURCE_JETTY_SIZE: 'sourceJettySize',\n\n\t/**\n\t * Variable: targetJettySize\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are numeric values or \"auto\". This has\n\t * precedence over <STYLE_JETTY_SIZE>. Value is \"targetJettySize\".\n\t */\n\tSTYLE_TARGET_JETTY_SIZE: 'targetJettySize',\n\n\t/**\n\t * Variable: STYLE_LOOP\n\t * \n\t * Defines the key for the loop style. Possible values are the functions\n\t * defined in <mxEdgeStyle>. Value is \"loopStyle\".\n\t */\n\tSTYLE_LOOP: 'loopStyle',\n\n\t/**\n\t * Variable: STYLE_ORTHOGONAL_LOOP\n\t * \n\t * Defines the key for the orthogonal loop style. Possible values are 0 and\n\t * 1. Default is 0. Value is \"orthogonalLoop\". Use this style to specify\n\t * if loops should be routed using an orthogonal router. Currently, this\n\t * uses <mxEdgeStyle.OrthConnector> but will be replaced with a dedicated\n\t * orthogonal loop router in later releases.\n\t */\n\tSTYLE_ORTHOGONAL_LOOP: 'orthogonalLoop',\n\n\t/**\n\t * Variable: STYLE_ROUTING_CENTER_X\n\t * \n\t * Defines the key for the horizontal routing center. Possible values are\n\t * between -0.5 and 0.5. This is the relative offset from the center used\n\t * for connecting edges. The type of this value is numeric. Value is\n\t * \"routingCenterX\".\n\t */\n\tSTYLE_ROUTING_CENTER_X: 'routingCenterX',\n\n\t/**\n\t * Variable: STYLE_ROUTING_CENTER_Y\n\t * \n\t * Defines the key for the vertical routing center. Possible values are\n\t * between -0.5 and 0.5. This is the relative offset from the center used\n\t * for connecting edges. The type of this value is numeric. Value is\n\t * \"routingCenterY\".\n\t */\n\tSTYLE_ROUTING_CENTER_Y: 'routingCenterY',\n\n\t/**\n\t * Variable: FONT_BOLD\n\t * \n\t * Constant for bold fonts. Default is 1.\n\t */\n\tFONT_BOLD: 1,\n\n\t/**\n\t * Variable: FONT_ITALIC\n\t * \n\t * Constant for italic fonts. Default is 2.\n\t */\n\tFONT_ITALIC: 2,\n\n\t/**\n\t * Variable: FONT_UNDERLINE\n\t * \n\t * Constant for underlined fonts. Default is 4.\n\t */\n\tFONT_UNDERLINE: 4,\n\n\t/**\n\t * Variable: SHAPE_RECTANGLE\n\t * \n\t * Name under which <mxRectangleShape> is registered in <mxCellRenderer>.\n\t * Default is rectangle.\n\t */\n\tSHAPE_RECTANGLE: 'rectangle',\n\n\t/**\n\t * Variable: SHAPE_ELLIPSE\n\t * \n\t * Name under which <mxEllipse> is registered in <mxCellRenderer>.\n\t * Default is ellipse.\n\t */\n\tSHAPE_ELLIPSE: 'ellipse',\n\n\t/**\n\t * Variable: SHAPE_DOUBLE_ELLIPSE\n\t * \n\t * Name under which <mxDoubleEllipse> is registered in <mxCellRenderer>.\n\t * Default is doubleEllipse.\n\t */\n\tSHAPE_DOUBLE_ELLIPSE: 'doubleEllipse',\n\n\t/**\n\t * Variable: SHAPE_RHOMBUS\n\t * \n\t * Name under which <mxRhombus> is registered in <mxCellRenderer>.\n\t * Default is rhombus.\n\t */\n\tSHAPE_RHOMBUS: 'rhombus',\n\n\t/**\n\t * Variable: SHAPE_LINE\n\t * \n\t * Name under which <mxLine> is registered in <mxCellRenderer>.\n\t * Default is line.\n\t */\n\tSHAPE_LINE: 'line',\n\n\t/**\n\t * Variable: SHAPE_IMAGE\n\t * \n\t * Name under which <mxImageShape> is registered in <mxCellRenderer>.\n\t * Default is image.\n\t */\n\tSHAPE_IMAGE: 'image',\n\t\n\t/**\n\t * Variable: SHAPE_ARROW\n\t * \n\t * Name under which <mxArrow> is registered in <mxCellRenderer>.\n\t * Default is arrow.\n\t */\n\tSHAPE_ARROW: 'arrow',\n\t\n\t/**\n\t * Variable: SHAPE_ARROW_CONNECTOR\n\t * \n\t * Name under which <mxArrowConnector> is registered in <mxCellRenderer>.\n\t * Default is arrowConnector.\n\t */\n\tSHAPE_ARROW_CONNECTOR: 'arrowConnector',\n\t\n\t/**\n\t * Variable: SHAPE_LABEL\n\t * \n\t * Name under which <mxLabel> is registered in <mxCellRenderer>.\n\t * Default is label.\n\t */\n\tSHAPE_LABEL: 'label',\n\t\n\t/**\n\t * Variable: SHAPE_CYLINDER\n\t * \n\t * Name under which <mxCylinder> is registered in <mxCellRenderer>.\n\t * Default is cylinder.\n\t */\n\tSHAPE_CYLINDER: 'cylinder',\n\t\n\t/**\n\t * Variable: SHAPE_SWIMLANE\n\t * \n\t * Name under which <mxSwimlane> is registered in <mxCellRenderer>.\n\t * Default is swimlane.\n\t */\n\tSHAPE_SWIMLANE: 'swimlane',\n\t\t\n\t/**\n\t * Variable: SHAPE_CONNECTOR\n\t * \n\t * Name under which <mxConnector> is registered in <mxCellRenderer>.\n\t * Default is connector.\n\t */\n\tSHAPE_CONNECTOR: 'connector',\n\n\t/**\n\t * Variable: SHAPE_ACTOR\n\t * \n\t * Name under which <mxActor> is registered in <mxCellRenderer>.\n\t * Default is actor.\n\t */\n\tSHAPE_ACTOR: 'actor',\n\t\t\n\t/**\n\t * Variable: SHAPE_CLOUD\n\t * \n\t * Name under which <mxCloud> is registered in <mxCellRenderer>.\n\t * Default is cloud.\n\t */\n\tSHAPE_CLOUD: 'cloud',\n\t\t\n\t/**\n\t * Variable: SHAPE_TRIANGLE\n\t * \n\t * Name under which <mxTriangle> is registered in <mxCellRenderer>.\n\t * Default is triangle.\n\t */\n\tSHAPE_TRIANGLE: 'triangle',\n\t\t\n\t/**\n\t * Variable: SHAPE_HEXAGON\n\t * \n\t * Name under which <mxHexagon> is registered in <mxCellRenderer>.\n\t * Default is hexagon.\n\t */\n\tSHAPE_HEXAGON: 'hexagon',\n\n\t/**\n\t * Variable: ARROW_CLASSIC\n\t * \n\t * Constant for classic arrow markers.\n\t */\n\tARROW_CLASSIC: 'classic',\n\n\t/**\n\t * Variable: ARROW_CLASSIC_THIN\n\t * \n\t * Constant for thin classic arrow markers.\n\t */\n\tARROW_CLASSIC_THIN: 'classicThin',\n\n\t/**\n\t * Variable: ARROW_BLOCK\n\t * \n\t * Constant for block arrow markers.\n\t */\n\tARROW_BLOCK: 'block',\n\n\t/**\n\t * Variable: ARROW_BLOCK_THIN\n\t * \n\t * Constant for thin block arrow markers.\n\t */\n\tARROW_BLOCK_THIN: 'blockThin',\n\n\t/**\n\t * Variable: ARROW_OPEN\n\t * \n\t * Constant for open arrow markers.\n\t */\n\tARROW_OPEN: 'open',\n\n\t/**\n\t * Variable: ARROW_OPEN_THIN\n\t * \n\t * Constant for thin open arrow markers.\n\t */\n\tARROW_OPEN_THIN: 'openThin',\n\n\t/**\n\t * Variable: ARROW_OVAL\n\t * \n\t * Constant for oval arrow markers.\n\t */\n\tARROW_OVAL: 'oval',\n\n\t/**\n\t * Variable: ARROW_DIAMOND\n\t * \n\t * Constant for diamond arrow markers.\n\t */\n\tARROW_DIAMOND: 'diamond',\n\n\t/**\n\t * Variable: ARROW_DIAMOND_THIN\n\t * \n\t * Constant for thin diamond arrow markers.\n\t */\n\tARROW_DIAMOND_THIN: 'diamondThin',\n\n\t/**\n\t * Variable: ALIGN_LEFT\n\t * \n\t * Constant for left horizontal alignment. Default is left.\n\t */\n\tALIGN_LEFT: 'left',\n\n\t/**\n\t * Variable: ALIGN_CENTER\n\t * \n\t * Constant for center horizontal alignment. Default is center.\n\t */\n\tALIGN_CENTER: 'center',\n\n\t/**\n\t * Variable: ALIGN_RIGHT\n\t * \n\t * Constant for right horizontal alignment. Default is right.\n\t */\n\tALIGN_RIGHT: 'right',\n\n\t/**\n\t * Variable: ALIGN_TOP\n\t * \n\t * Constant for top vertical alignment. Default is top.\n\t */\n\tALIGN_TOP: 'top',\n\n\t/**\n\t * Variable: ALIGN_MIDDLE\n\t * \n\t * Constant for middle vertical alignment. Default is middle.\n\t */\n\tALIGN_MIDDLE: 'middle',\n\n\t/**\n\t * Variable: ALIGN_BOTTOM\n\t * \n\t * Constant for bottom vertical alignment. Default is bottom.\n\t */\n\tALIGN_BOTTOM: 'bottom',\n\n\t/**\n\t * Variable: DIRECTION_NORTH\n\t * \n\t * Constant for direction north. Default is north.\n\t */\n\tDIRECTION_NORTH: 'north',\n\n\t/**\n\t * Variable: DIRECTION_SOUTH\n\t * \n\t * Constant for direction south. Default is south.\n\t */\n\tDIRECTION_SOUTH: 'south',\n\n\t/**\n\t * Variable: DIRECTION_EAST\n\t * \n\t * Constant for direction east. Default is east.\n\t */\n\tDIRECTION_EAST: 'east',\n\n\t/**\n\t * Variable: DIRECTION_WEST\n\t * \n\t * Constant for direction west. Default is west.\n\t */\n\tDIRECTION_WEST: 'west',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_DEFAULT\n\t * \n\t * Constant for text direction default. Default is an empty string. Use\n\t * this value to use the default text direction of the operating system. \n\t */\n\tTEXT_DIRECTION_DEFAULT: '',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_AUTO\n\t * \n\t * Constant for text direction automatic. Default is auto. Use this value\n\t * to find the direction for a given text with <mxText.getAutoDirection>. \n\t */\n\tTEXT_DIRECTION_AUTO: 'auto',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_LTR\n\t * \n\t * Constant for text direction left to right. Default is ltr. Use this\n\t * value for left to right text direction.\n\t */\n\tTEXT_DIRECTION_LTR: 'ltr',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_RTL\n\t * \n\t * Constant for text direction right to left. Default is rtl. Use this\n\t * value for right to left text direction.\n\t */\n\tTEXT_DIRECTION_RTL: 'rtl',\n\n\t/**\n\t * Variable: DIRECTION_MASK_NONE\n\t * \n\t * Constant for no direction.\n\t */\n\tDIRECTION_MASK_NONE: 0,\n\n\t/**\n\t * Variable: DIRECTION_MASK_WEST\n\t * \n\t * Bitwise mask for west direction.\n\t */\n\tDIRECTION_MASK_WEST: 1,\n\t\n\t/**\n\t * Variable: DIRECTION_MASK_NORTH\n\t * \n\t * Bitwise mask for north direction.\n\t */\n\tDIRECTION_MASK_NORTH: 2,\n\n\t/**\n\t * Variable: DIRECTION_MASK_SOUTH\n\t * \n\t * Bitwise mask for south direction.\n\t */\n\tDIRECTION_MASK_SOUTH: 4,\n\n\t/**\n\t * Variable: DIRECTION_MASK_EAST\n\t * \n\t * Bitwise mask for east direction.\n\t */\n\tDIRECTION_MASK_EAST: 8,\n\t\n\t/**\n\t * Variable: DIRECTION_MASK_ALL\n\t * \n\t * Bitwise mask for all directions.\n\t */\n\tDIRECTION_MASK_ALL: 15,\n\n\t/**\n\t * Variable: ELBOW_VERTICAL\n\t * \n\t * Constant for elbow vertical. Default is horizontal.\n\t */\n\tELBOW_VERTICAL: 'vertical',\n\n\t/**\n\t * Variable: ELBOW_HORIZONTAL\n\t * \n\t * Constant for elbow horizontal. Default is horizontal.\n\t */\n\tELBOW_HORIZONTAL: 'horizontal',\n\n\t/**\n\t * Variable: EDGESTYLE_ELBOW\n\t * \n\t * Name of the elbow edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ELBOW: 'elbowEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_ENTITY_RELATION\n\t * \n\t * Name of the entity relation edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ENTITY_RELATION: 'entityRelationEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_LOOP\n\t * \n\t * Name of the loop edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_LOOP: 'loopEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_SIDETOSIDE\n\t * \n\t * Name of the side to side edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_SIDETOSIDE: 'sideToSideEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_TOPTOBOTTOM\n\t * \n\t * Name of the top to bottom edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_TOPTOBOTTOM: 'topToBottomEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_ORTHOGONAL\n\t * \n\t * Name of the generic orthogonal edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ORTHOGONAL: 'orthogonalEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_SEGMENT\n\t * \n\t * Name of the generic segment edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_SEGMENT: 'segmentEdgeStyle',\n \n\t/**\n\t * Variable: PERIMETER_ELLIPSE\n\t * \n\t * Name of the ellipse perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_ELLIPSE: 'ellipsePerimeter',\n\n\t/**\n\t * Variable: PERIMETER_RECTANGLE\n\t *\n\t * Name of the rectangle perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_RECTANGLE: 'rectanglePerimeter',\n\n\t/**\n\t * Variable: PERIMETER_RHOMBUS\n\t * \n\t * Name of the rhombus perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_RHOMBUS: 'rhombusPerimeter',\n\n\t/**\n\t * Variable: PERIMETER_HEXAGON\n\t * \n\t * Name of the hexagon perimeter. Can be used as a string value \n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_HEXAGON: 'hexagonPerimeter',\n\n\t/**\n\t * Variable: PERIMETER_TRIANGLE\n\t * \n\t * Name of the triangle perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_TRIANGLE: 'trianglePerimeter'\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEventObject\n * \n * The mxEventObject is a wrapper for all properties of a single event.\n * Additionally, it also offers functions to consume the event and check if it\n * was consumed as follows:\n * \n * (code)\n * evt.consume();\n * INV: evt.isConsumed() == true\n * (end)\n * \n * Constructor: mxEventObject\n *\n * Constructs a new event object with the specified name. An optional\n * sequence of key, value pairs can be appended to define properties.\n * \n * Example:\n *\n * (code)\n * new mxEventObject(\"eventName\", key1, val1, .., keyN, valN)\n * (end)\n */\nfunction mxEventObject(name)\n{\n\tthis.name = name;\n\tthis.properties = [];\n\t\n\tfor (var i = 1; i < arguments.length; i += 2)\n\t{\n\t\tif (arguments[i + 1] != null)\n\t\t{\n\t\t\tthis.properties[arguments[i]] = arguments[i + 1];\n\t\t}\n\t}\n};\n\n/**\n * Variable: name\n *\n * Holds the name.\n */\nmxEventObject.prototype.name = null;\n\n/**\n * Variable: properties\n *\n * Holds the properties as an associative array.\n */\nmxEventObject.prototype.properties = null;\n\n/**\n * Variable: consumed\n *\n * Holds the consumed state. Default is false.\n */\nmxEventObject.prototype.consumed = false;\n\n/**\n * Function: getName\n * \n * Returns <name>.\n */\nmxEventObject.prototype.getName = function()\n{\n\treturn this.name;\n};\n\n/**\n * Function: getProperties\n * \n * Returns <properties>.\n */\nmxEventObject.prototype.getProperties = function()\n{\n\treturn this.properties;\n};\n\n/**\n * Function: getProperty\n * \n * Returns the property for the given key.\n */\nmxEventObject.prototype.getProperty = function(key)\n{\n\treturn this.properties[key];\n};\n\n/**\n * Function: isConsumed\n *\n * Returns true if the event has been consumed.\n */\nmxEventObject.prototype.isConsumed = function()\n{\n\treturn this.consumed;\n};\n\n/**\n * Function: consume\n *\n * Consumes the event.\n */\nmxEventObject.prototype.consume = function()\n{\n\tthis.consumed = true;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMouseEvent\n * \n * Base class for all mouse events in mxGraph. A listener for this event should\n * implement the following methods:\n * \n * (code)\n * graph.addMouseListener(\n * {\n *   mouseDown: function(sender, evt)\n *   {\n *     mxLog.debug('mouseDown');\n *   },\n *   mouseMove: function(sender, evt)\n *   {\n *     mxLog.debug('mouseMove');\n *   },\n *   mouseUp: function(sender, evt)\n *   {\n *     mxLog.debug('mouseUp');\n *   }\n * });\n * (end)\n * \n * Constructor: mxMouseEvent\n *\n * Constructs a new event object for the given arguments.\n * \n * Parameters:\n * \n * evt - Native mouse event.\n * state - Optional <mxCellState> under the mouse.\n * \n */\nfunction mxMouseEvent(evt, state)\n{\n\tthis.evt = evt;\n\tthis.state = state;\n\tthis.sourceState = state;\n};\n\n/**\n * Variable: consumed\n *\n * Holds the consumed state of this event.\n */\nmxMouseEvent.prototype.consumed = false;\n\n/**\n * Variable: evt\n *\n * Holds the inner event object.\n */\nmxMouseEvent.prototype.evt = null;\n\n/**\n * Variable: graphX\n *\n * Holds the x-coordinate of the event in the graph. This value is set in\n * <mxGraph.fireMouseEvent>.\n */\nmxMouseEvent.prototype.graphX = null;\n\n/**\n * Variable: graphY\n *\n * Holds the y-coordinate of the event in the graph. This value is set in\n * <mxGraph.fireMouseEvent>.\n */\nmxMouseEvent.prototype.graphY = null;\n\n/**\n * Variable: state\n *\n * Holds the optional <mxCellState> associated with this event.\n */\nmxMouseEvent.prototype.state = null;\n\n/**\n * Variable: sourceState\n * \n * Holds the <mxCellState> that was passed to the constructor. This can be\n * different from <state> depending on the result of <mxGraph.getEventState>.\n */\nmxMouseEvent.prototype.sourceState = null;\n\n/**\n * Function: getEvent\n * \n * Returns <evt>.\n */\nmxMouseEvent.prototype.getEvent = function()\n{\n\treturn this.evt;\n};\n\n/**\n * Function: getSource\n * \n * Returns the target DOM element using <mxEvent.getSource> for <evt>.\n */\nmxMouseEvent.prototype.getSource = function()\n{\n\treturn mxEvent.getSource(this.evt);\n};\n\n/**\n * Function: isSource\n * \n * Returns true if the given <mxShape> is the source of <evt>.\n */\nmxMouseEvent.prototype.isSource = function(shape)\n{\n\tif (shape != null)\n\t{\n\t\treturn mxUtils.isAncestorNode(shape.node, this.getSource());\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getX\n * \n * Returns <evt.clientX>.\n */\nmxMouseEvent.prototype.getX = function()\n{\n\treturn mxEvent.getClientX(this.getEvent());\n};\n\n/**\n * Function: getY\n * \n * Returns <evt.clientY>.\n */\nmxMouseEvent.prototype.getY = function()\n{\n\treturn mxEvent.getClientY(this.getEvent());\n};\n\n/**\n * Function: getGraphX\n * \n * Returns <graphX>.\n */\nmxMouseEvent.prototype.getGraphX = function()\n{\n\treturn this.graphX;\n};\n\n/**\n * Function: getGraphY\n * \n * Returns <graphY>.\n */\nmxMouseEvent.prototype.getGraphY = function()\n{\n\treturn this.graphY;\n};\n\n/**\n * Function: getState\n * \n * Returns <state>.\n */\nmxMouseEvent.prototype.getState = function()\n{\n\treturn this.state;\n};\n\n/**\n * Function: getCell\n * \n * Returns the <mxCell> in <state> is not null.\n */\nmxMouseEvent.prototype.getCell = function()\n{\n\tvar state = this.getState();\n\t\n\tif (state != null)\n\t{\n\t\treturn state.cell;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: isPopupTrigger\n *\n * Returns true if the event is a popup trigger.\n */\nmxMouseEvent.prototype.isPopupTrigger = function()\n{\n\treturn mxEvent.isPopupTrigger(this.getEvent());\n};\n\n/**\n * Function: isConsumed\n *\n * Returns <consumed>.\n */\nmxMouseEvent.prototype.isConsumed = function()\n{\n\treturn this.consumed;\n};\n\n/**\n * Function: consume\n *\n * Sets <consumed> to true and invokes preventDefault on the native event\n * if such a method is defined. This is used mainly to avoid the cursor from\n * being changed to a text cursor in Webkit. You can use the preventDefault\n * flag to disable this functionality.\n * \n * Parameters:\n * \n * preventDefault - Specifies if the native event should be canceled. Default\n * is true.\n */\nmxMouseEvent.prototype.consume = function(preventDefault)\n{\n\tpreventDefault = (preventDefault != null) ? preventDefault : true;\n\t\n\tif (preventDefault && this.evt.preventDefault)\n\t{\n\t\tthis.evt.preventDefault();\n\t}\n\n\t// Workaround for images being dragged in IE\n\t// Does not change returnValue in Opera\n\tif (mxClient.IS_IE)\n\t{\n\t\tthis.evt.returnValue = true;\n\t}\n\n\t// Sets local consumed state\n\tthis.consumed = true;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEventSource\n *\n * Base class for objects that dispatch named events. To create a subclass that\n * inherits from mxEventSource, the following code is used.\n *\n * (code)\n * function MyClass() { };\n *\n * MyClass.prototype = new mxEventSource();\n * MyClass.prototype.constructor = MyClass;\n * (end)\n *\n * Known Subclasses:\n *\n * <mxGraphModel>, <mxGraph>, <mxGraphView>, <mxEditor>, <mxCellOverlay>,\n * <mxToolbar>, <mxWindow>\n * \n * Constructor: mxEventSource\n *\n * Constructs a new event source.\n */\nfunction mxEventSource(eventSource)\n{\n\tthis.setEventSource(eventSource);\n};\n\n/**\n * Variable: eventListeners\n *\n * Holds the event names and associated listeners in an array. The array\n * contains the event name followed by the respective listener for each\n * registered listener.\n */\nmxEventSource.prototype.eventListeners = null;\n\n/**\n * Variable: eventsEnabled\n *\n * Specifies if events can be fired. Default is true.\n */\nmxEventSource.prototype.eventsEnabled = true;\n\n/**\n * Variable: eventSource\n *\n * Optional source for events. Default is null.\n */\nmxEventSource.prototype.eventSource = null;\n\n/**\n * Function: isEventsEnabled\n * \n * Returns <eventsEnabled>.\n */\nmxEventSource.prototype.isEventsEnabled = function()\n{\n\treturn this.eventsEnabled;\n};\n\n/**\n * Function: setEventsEnabled\n * \n * Sets <eventsEnabled>.\n */\nmxEventSource.prototype.setEventsEnabled = function(value)\n{\n\tthis.eventsEnabled = value;\n};\n\n/**\n * Function: getEventSource\n * \n * Returns <eventSource>.\n */\nmxEventSource.prototype.getEventSource = function()\n{\n\treturn this.eventSource;\n};\n\n/**\n * Function: setEventSource\n * \n * Sets <eventSource>.\n */\nmxEventSource.prototype.setEventSource = function(value)\n{\n\tthis.eventSource = value;\n};\n\n/**\n * Function: addListener\n *\n * Binds the specified function to the given event name. If no event name\n * is given, then the listener is registered for all events.\n * \n * The parameters of the listener are the sender and an <mxEventObject>.\n */\nmxEventSource.prototype.addListener = function(name, funct)\n{\n\tif (this.eventListeners == null)\n\t{\n\t\tthis.eventListeners = [];\n\t}\n\t\n\tthis.eventListeners.push(name);\n\tthis.eventListeners.push(funct);\n};\n\n/**\n * Function: removeListener\n *\n * Removes all occurrences of the given listener from <eventListeners>.\n */\nmxEventSource.prototype.removeListener = function(funct)\n{\n\tif (this.eventListeners != null)\n\t{\n\t\tvar i = 0;\n\t\t\n\t\twhile (i < this.eventListeners.length)\n\t\t{\n\t\t\tif (this.eventListeners[i+1] == funct)\n\t\t\t{\n\t\t\t\tthis.eventListeners.splice(i, 2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: fireEvent\n *\n * Dispatches the given event to the listeners which are registered for\n * the event. The sender argument is optional. The current execution scope\n * (\"this\") is used for the listener invocation (see <mxUtils.bind>).\n *\n * Example:\n *\n * (code)\n * fireEvent(new mxEventObject(\"eventName\", key1, val1, .., keyN, valN))\n * (end)\n * \n * Parameters:\n *\n * evt - <mxEventObject> that represents the event.\n * sender - Optional sender to be passed to the listener. Default value is\n * the return value of <getEventSource>.\n */\nmxEventSource.prototype.fireEvent = function(evt, sender)\n{\n\tif (this.eventListeners != null && this.isEventsEnabled())\n\t{\n\t\tif (evt == null)\n\t\t{\n\t\t\tevt = new mxEventObject();\n\t\t}\n\t\t\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this.getEventSource();\n\t\t}\n\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this;\n\t\t}\n\n\t\tvar args = [sender, evt];\n\t\t\n\t\tfor (var i = 0; i < this.eventListeners.length; i += 2)\n\t\t{\n\t\t\tvar listen = this.eventListeners[i];\n\t\t\t\n\t\t\tif (listen == null || listen == evt.getName())\n\t\t\t{\n\t\t\t\tthis.eventListeners[i+1].apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEvent =\n{\n\n\t/**\n\t * Class: mxEvent\n\t * \n\t * Cross-browser DOM event support. For internal event handling,\n\t * <mxEventSource> and the graph event dispatch loop in <mxGraph> are used.\n\t * \n\t * Memory Leaks:\n\t * \n\t * Use this class for adding and removing listeners to/from DOM nodes. The\n\t * <removeAllListeners> function is provided to remove all listeners that\n\t * have been added using <addListener>. The function should be invoked when\n\t * the last reference is removed in the JavaScript code, typically when the\n\t * referenced DOM node is removed from the DOM.\n\t *\n\t * Function: addListener\n\t * \n\t * Binds the function to the specified event on the given element. Use\n\t * <mxUtils.bind> in order to bind the \"this\" keyword inside the function\n\t * to a given execution scope.\n\t */\n\taddListener: function()\n\t{\n\t\tvar updateListenerList = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList == null)\n\t\t\t{\n\t\t\t\telement.mxListenerList = [];\n\t\t\t}\n\t\t\t\n\t\t\tvar entry = {name: eventName, f: funct};\n\t\t\telement.mxListenerList.push(entry);\n\t\t};\n\t\t\n\t\tif (window.addEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.addEventListener(eventName, funct, false);\n\t\t\t\tupdateListenerList(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.attachEvent('on' + eventName, funct);\n\t\t\t\tupdateListenerList(element, eventName, funct);\t\t\t\t\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeListener\n\t *\n\t * Removes the specified listener from the given element.\n\t */\n\tremoveListener: function()\n\t{\n\t\tvar updateListener = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList != null)\n\t\t\t{\n\t\t\t\tvar listenerCount = element.mxListenerList.length;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < listenerCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar entry = element.mxListenerList[i];\n\t\t\t\t\t\n\t\t\t\t\tif (entry.f == funct)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.mxListenerList.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (element.mxListenerList.length == 0)\n\t\t\t\t{\n\t\t\t\t\telement.mxListenerList = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tif (window.removeEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.removeEventListener(eventName, funct, false);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.detachEvent('on' + eventName, funct);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeAllListeners\n\t * \n\t * Removes all listeners from the given element.\n\t */\n\tremoveAllListeners: function(element)\n\t{\n\t\tvar list = element.mxListenerList;\n\n\t\tif (list != null)\n\t\t{\n\t\t\twhile (list.length > 0)\n\t\t\t{\n\t\t\t\tvar entry = list[0];\n\t\t\t\tmxEvent.removeListener(element, entry.name, entry.f);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: addGestureListeners\n\t * \n\t * Adds the given listeners for touch, mouse and/or pointer events. If\n\t * <mxClient.IS_POINTER> is true then pointer events will be registered,\n\t * else the respective mouse events will be registered. If <mxClient.IS_POINTER>\n\t * is false and <mxClient.IS_TOUCH> is true then the respective touch events\n\t * will be registered as well as the mouse events.\n\t */\n\taddGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: removeGestureListeners\n\t * \n\t * Removes the given listeners from mousedown, mousemove, mouseup and the\n\t * respective touch events if <mxClient.IS_TOUCH> is true.\n\t */\n\tremoveGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: redirectMouseEvents\n\t *\n\t * Redirects the mouse events from the given DOM node to the graph dispatch\n\t * loop using the event and given state as event arguments. State can\n\t * either be an instance of <mxCellState> or a function that returns an\n\t * <mxCellState>. The down, move, up and dblClick arguments are optional\n\t * functions that take the trigger event as arguments and replace the\n\t * default behaviour.\n\t */\n\tredirectMouseEvents: function(node, graph, state, down, move, up, dblClick)\n\t{\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\treturn (typeof(state) == 'function') ? state(evt) : state;\n\t\t};\n\t\t\n\t\tmxEvent.addGestureListeners(node, function (evt)\n\t\t{\n\t\t\tif (down != null)\n\t\t\t{\n\t\t\t\tdown(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (move != null)\n\t\t\t{\n\t\t\t\tmove(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (up != null)\n\t\t\t{\n\t\t\t\tup(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t});\n\n\t\tmxEvent.addListener(node, 'dblclick', function (evt)\n\t\t{\n\t\t\tif (dblClick != null)\n\t\t\t{\n\t\t\t\tdblClick(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tvar tmp = getState(evt);\n\t\t\t\tgraph.dblClick(evt, (tmp != null) ? tmp.cell : null);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Function: release\n\t * \n\t * Removes the known listeners from the given DOM node and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the listeners from.\n\t */\n\trelease: function(element)\n\t{\n\t\ttry\n\t\t{\n\t\t\tif (element != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeAllListeners(element);\n\t\t\t\t\n\t\t\t\tvar children = element.childNodes;\n\t\t\t\t\n\t\t\t\tif (children != null)\n\t\t\t\t{\n\t\t\t        var childCount = children.length;\n\t\t\t        \n\t\t\t        for (var i = 0; i < childCount; i += 1)\n\t\t\t        {\n\t\t\t        \tmxEvent.release(children[i]);\n\t\t\t        }\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignores errors as this is typically called in cleanup code\n\t\t}\n\t},\n\n\t/**\n\t * Function: addMouseWheelListener\n\t * \n\t * Installs the given function as a handler for mouse wheel events. The\n\t * function has two arguments: the mouse event and a boolean that specifies\n\t * if the wheel was moved up or down.\n\t * \n\t * This has been tested with IE 6 and 7, Firefox (all versions), Opera and\n\t * Safari. It does currently not work on Safari for Mac.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * mxEvent.addMouseWheelListener(function (evt, up)\n\t * {\n\t *   mxLog.show();\n\t *   mxLog.debug('mouseWheel: up='+up);\n\t * });\n\t *(end)\n\t * \n\t * Parameters:\n\t * \n\t * funct - Handler function that takes the event argument and a boolean up\n\t * argument for the mousewheel direction.\n\t */\n\taddMouseWheelListener: function(funct)\n\t{\n\t\tif (funct != null)\n\t\t{\n\t\t\tvar wheelHandler = function(evt)\n\t\t\t{\n\t\t\t\t// IE does not give an event object but the\n\t\t\t\t// global event object is the mousewheel event\n\t\t\t\t// at this point in time.\n\t\t\t\tif (evt == null)\n\t\t\t\t{\n\t\t\t\t\tevt = window.event;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar delta = 0;\n\t\t\t\t\n\t\t\t\tif (mxClient.IS_FF)\n\t\t\t\t{\n\t\t\t\t\tdelta = -evt.detail / 2;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelta = evt.wheelDelta / 120;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Handles the event using the given function\n\t\t\t\tif (delta != 0)\n\t\t\t\t{\n\t\t\t\t\tfunct(evt, delta > 0);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\t// Webkit has NS event API, but IE event name and details \n\t\t\tif (mxClient.IS_NS && document.documentMode == null)\n\t\t\t{\n\t\t\t\tvar eventName = (mxClient.IS_SF || \tmxClient.IS_GC) ? 'mousewheel' : 'DOMMouseScroll';\n\t\t\t\tmxEvent.addListener(window, eventName, wheelHandler);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.addListener(document, 'mousewheel', wheelHandler);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: disableContextMenu\n\t *\n\t * Disables the context menu for the given element.\n\t */\n\tdisableContextMenu: function(element)\n\t{\n\t\tmxEvent.addListener(element, 'contextmenu', function(evt)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t},\n\t\n\t/**\n\t * Function: getSource\n\t * \n\t * Returns the event's target or srcElement depending on the browser.\n\t */\n\tgetSource: function(evt)\n\t{\n\t\treturn (evt.srcElement != null) ? evt.srcElement : evt.target;\n\t},\n\n\t/**\n\t * Function: isConsumed\n\t * \n\t * Returns true if the event has been consumed using <consume>.\n\t */\n\tisConsumed: function(evt)\n\t{\n\t\treturn evt.isConsumed != null && evt.isConsumed;\n\t},\n\n\t/**\n\t * Function: isTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisTouchEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'touch' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_TOUCH) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 5 : evt.type.indexOf('touch') == 0);\n\t},\n\n\t/**\n\t * Function: isPenEvent\n\t * \n\t * Returns true if the event was generated using a pen (not a touch device or mouse).\n\t */\n\tisPenEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'pen' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_PEN) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 2 : evt.type.indexOf('pen') == 0);\n\t},\n\n\t/**\n\t * Function: isMultiTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisMultiTouchEvent: function(evt)\n\t{\n\t\treturn (evt.type != null && evt.type.indexOf('touch') == 0 && evt.touches != null && evt.touches.length > 1);\n\t},\n\n\t/**\n\t * Function: isMouseEvent\n\t * \n\t * Returns true if the event was generated using a mouse (not a pen or touch device).\n\t */\n\tisMouseEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'mouse' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_MOUSE) : ((evt.mozInputSource != null) ?\n\t\t\t\tevt.mozInputSource == 1 : evt.type.indexOf('mouse') == 0);\n\t},\n\t\n\t/**\n\t * Function: isLeftMouseButton\n\t * \n\t * Returns true if the left mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property. Note that this returns true in Firefox\n\t * for control+left-click on the Mac.\n\t */\n\tisLeftMouseButton: function(evt)\n\t{\n\t\t// Special case for mousemove and mousedown we check the buttons\n\t\t// if it exists because which is 0 even if no button is pressed\n\t\tif ('buttons' in evt && (evt.type == 'mousedown' || evt.type == 'mousemove'))\n\t\t{\n\t\t\treturn evt.buttons == 1;\n\t\t}\n\t\telse if ('which' in evt)\n\t\t{\n\t        return evt.which === 1;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 1;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isMiddleMouseButton\n\t * \n\t * Returns true if the middle mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property.\n\t */\n\tisMiddleMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 2;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 4;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isRightMouseButton\n\t * \n\t * Returns true if the right mouse button was pressed. Note that this\n\t * button might not be available on some systems. For handling a popup\n\t * trigger <isPopupTrigger> should be used.\n\t */\n\tisRightMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 3;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 2;\n\t    }\n\t},\n\n\t/**\n\t * Function: isPopupTrigger\n\t * \n\t * Returns true if the event is a popup trigger. This implementation\n\t * returns true if the right button or the left button and control was\n\t * pressed on a Mac.\n\t */\n\tisPopupTrigger: function(evt)\n\t{\n\t\treturn mxEvent.isRightMouseButton(evt) || (mxClient.IS_MAC && mxEvent.isControlDown(evt) &&\n\t\t\t!mxEvent.isShiftDown(evt) && !mxEvent.isMetaDown(evt) && !mxEvent.isAltDown(evt));\n\t},\n\n\t/**\n\t * Function: isShiftDown\n\t * \n\t * Returns true if the shift key is pressed for the given event.\n\t */\n\tisShiftDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.shiftKey : false;\n\t},\n\n\t/**\n\t * Function: isAltDown\n\t * \n\t * Returns true if the alt key is pressed for the given event.\n\t */\n\tisAltDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.altKey : false;\n\t},\n\n\t/**\n\t * Function: isControlDown\n\t * \n\t * Returns true if the control key is pressed for the given event.\n\t */\n\tisControlDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.ctrlKey : false;\n\t},\n\n\t/**\n\t * Function: isMetaDown\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tisMetaDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.metaKey : false;\n\t},\n\n\t/**\n\t * Function: getMainEvent\n\t * \n\t * Returns the touch or mouse event that contains the mouse coordinates.\n\t */\n\tgetMainEvent: function(e)\n\t{\n\t\tif ((e.type == 'touchstart' || e.type == 'touchmove') && e.touches != null && e.touches[0] != null)\n\t\t{\n\t\t\te = e.touches[0];\n\t\t}\n\t\telse if (e.type == 'touchend' && e.changedTouches != null && e.changedTouches[0] != null)\n\t\t{\n\t\t\te = e.changedTouches[0];\n\t\t}\n\t\t\n\t\treturn e;\n\t},\n\t\n\t/**\n\t * Function: getClientX\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientX: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientX;\n\t},\n\n\t/**\n\t * Function: getClientY\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientY: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientY;\n\t},\n\n\t/**\n\t * Function: consume\n\t * \n\t * Consumes the given event.\n\t * \n\t * Parameters:\n\t * \n\t * evt - Native event to be consumed.\n\t * preventDefault - Optional boolean to prevent the default for the event.\n\t * Default is true.\n\t * stopPropagation - Option boolean to stop event propagation. Default is\n\t * true.\n\t */\n\tconsume: function(evt, preventDefault, stopPropagation)\n\t{\n\t\tpreventDefault = (preventDefault != null) ? preventDefault : true;\n\t\tstopPropagation = (stopPropagation != null) ? stopPropagation : true;\n\t\t\n\t\tif (preventDefault)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tif (stopPropagation)\n\t\t\t\t{\n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\telse if (stopPropagation)\n\t\t\t{\n\t\t\t\tevt.cancelBubble = true;\n\t\t\t}\n\t\t}\n\n\t\t// Opera\n\t\tevt.isConsumed = true;\n\n\t\t// Other browsers\n\t\tif (!evt.preventDefault)\n\t\t{\n\t\t\tevt.returnValue = false;\n\t\t}\n\t},\n\t\n\t//\n\t// Special handles in mouse events\n\t//\n\t\n\t/**\n\t * Variable: LABEL_HANDLE\n\t * \n\t * Index for the label handle in an mxMouseEvent. This should be a negative\n\t * value that does not interfere with any possible handle indices. Default\n\t * is -1.\n\t */\n\tLABEL_HANDLE: -1,\n\t\n\t/**\n\t * Variable: ROTATION_HANDLE\n\t * \n\t * Index for the rotation handle in an mxMouseEvent. This should be a\n\t * negative value that does not interfere with any possible handle indices.\n\t * Default is -2.\n\t */\n\tROTATION_HANDLE: -2,\n\t\n\t/**\n\t * Variable: CUSTOM_HANDLE\n\t * \n\t * Start index for the custom handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * custom handle. Default is -100.\n\t */\n\tCUSTOM_HANDLE: -100,\n\t\n\t/**\n\t * Variable: VIRTUAL_HANDLE\n\t * \n\t * Start index for the virtual handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * virtual handle. Default is -100000. This assumes that there are no more\n\t * than VIRTUAL_HANDLE - CUSTOM_HANDLE custom handles.\n\t * \n\t */\n\tVIRTUAL_HANDLE: -100000,\n\t\n\t//\n\t// Event names\n\t//\n\t\n\t/**\n\t * Variable: MOUSE_DOWN\n\t *\n\t * Specifies the event name for mouseDown.\n\t */\n\tMOUSE_DOWN: 'mouseDown',\n\t\n\t/**\n\t * Variable: MOUSE_MOVE\n\t *\n\t * Specifies the event name for mouseMove. \n\t */\n\tMOUSE_MOVE: 'mouseMove',\n\t\n\t/**\n\t * Variable: MOUSE_UP\n\t *\n\t * Specifies the event name for mouseUp. \n\t */\n\tMOUSE_UP: 'mouseUp',\n\n\t/**\n\t * Variable: ACTIVATE\n\t *\n\t * Specifies the event name for activate.\n\t */\n\tACTIVATE: 'activate',\n\n\t/**\n\t * Variable: RESIZE_START\n\t *\n\t * Specifies the event name for resizeStart.\n\t */\n\tRESIZE_START: 'resizeStart',\n\n\t/**\n\t * Variable: RESIZE\n\t *\n\t * Specifies the event name for resize.\n\t */\n\tRESIZE: 'resize',\n\n\t/**\n\t * Variable: RESIZE_END\n\t *\n\t * Specifies the event name for resizeEnd.\n\t */\n\tRESIZE_END: 'resizeEnd',\n\n\t/**\n\t * Variable: MOVE_START\n\t *\n\t * Specifies the event name for moveStart.\n\t */\n\tMOVE_START: 'moveStart',\n\n\t/**\n\t * Variable: MOVE\n\t *\n\t * Specifies the event name for move.\n\t */\n\tMOVE: 'move',\n\n\t/**\n\t * Variable: MOVE_END\n\t *\n\t * Specifies the event name for moveEnd.\n\t */\n\tMOVE_END: 'moveEnd',\n\n\t/**\n\t * Variable: PAN_START\n\t *\n\t * Specifies the event name for panStart.\n\t */\n\tPAN_START: 'panStart',\n\n\t/**\n\t * Variable: PAN\n\t *\n\t * Specifies the event name for pan.\n\t */\n\tPAN: 'pan',\n\n\t/**\n\t * Variable: PAN_END\n\t *\n\t * Specifies the event name for panEnd.\n\t */\n\tPAN_END: 'panEnd',\n\n\t/**\n\t * Variable: MINIMIZE\n\t *\n\t * Specifies the event name for minimize.\n\t */\n\tMINIMIZE: 'minimize',\n\n\t/**\n\t * Variable: NORMALIZE\n\t *\n\t * Specifies the event name for normalize.\n\t */\n\tNORMALIZE: 'normalize',\n\n\t/**\n\t * Variable: MAXIMIZE\n\t *\n\t * Specifies the event name for maximize.\n\t */\n\tMAXIMIZE: 'maximize',\n\n\t/**\n\t * Variable: HIDE\n\t *\n\t * Specifies the event name for hide.\n\t */\n\tHIDE: 'hide',\n\n\t/**\n\t * Variable: SHOW\n\t *\n\t * Specifies the event name for show.\n\t */\n\tSHOW: 'show',\n\n\t/**\n\t * Variable: CLOSE\n\t *\n\t * Specifies the event name for close.\n\t */\n\tCLOSE: 'close',\n\n\t/**\n\t * Variable: DESTROY\n\t *\n\t * Specifies the event name for destroy.\n\t */\n\tDESTROY: 'destroy',\n\n\t/**\n\t * Variable: REFRESH\n\t *\n\t * Specifies the event name for refresh.\n\t */\n\tREFRESH: 'refresh',\n\n\t/**\n\t * Variable: SIZE\n\t *\n\t * Specifies the event name for size.\n\t */\n\tSIZE: 'size',\n\t\n\t/**\n\t * Variable: SELECT\n\t *\n\t * Specifies the event name for select.\n\t */\n\tSELECT: 'select',\n\n\t/**\n\t * Variable: FIRED\n\t *\n\t * Specifies the event name for fired.\n\t */\n\tFIRED: 'fired',\n\n\t/**\n\t * Variable: FIRE_MOUSE_EVENT\n\t *\n\t * Specifies the event name for fireMouseEvent.\n\t */\n\tFIRE_MOUSE_EVENT: 'fireMouseEvent',\n\n\t/**\n\t * Variable: GESTURE\n\t *\n\t * Specifies the event name for gesture.\n\t */\n\tGESTURE: 'gesture',\n\n\t/**\n\t * Variable: TAP_AND_HOLD\n\t *\n\t * Specifies the event name for tapAndHold.\n\t */\n\tTAP_AND_HOLD: 'tapAndHold',\n\n\t/**\n\t * Variable: GET\n\t *\n\t * Specifies the event name for get.\n\t */\n\tGET: 'get',\n\n\t/**\n\t * Variable: RECEIVE\n\t *\n\t * Specifies the event name for receive.\n\t */\n\tRECEIVE: 'receive',\n\n\t/**\n\t * Variable: CONNECT\n\t *\n\t * Specifies the event name for connect.\n\t */\n\tCONNECT: 'connect',\n\n\t/**\n\t * Variable: DISCONNECT\n\t *\n\t * Specifies the event name for disconnect.\n\t */\n\tDISCONNECT: 'disconnect',\n\n\t/**\n\t * Variable: SUSPEND\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tSUSPEND: 'suspend',\n\n\t/**\n\t * Variable: RESUME\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tRESUME: 'resume',\n\n\t/**\n\t * Variable: MARK\n\t *\n\t * Specifies the event name for mark.\n\t */\n\tMARK: 'mark',\n\n\t/**\n\t * Variable: ROOT\n\t *\n\t * Specifies the event name for root.\n\t */\n\tROOT: 'root',\n\n\t/**\n\t * Variable: POST\n\t *\n\t * Specifies the event name for post.\n\t */\n\tPOST: 'post',\n\n\t/**\n\t * Variable: OPEN\n\t *\n\t * Specifies the event name for open.\n\t */\n\tOPEN: 'open',\n\n\t/**\n\t * Variable: SAVE\n\t *\n\t * Specifies the event name for open.\n\t */\n\tSAVE: 'save',\n\n\t/**\n\t * Variable: BEFORE_ADD_VERTEX\n\t *\n\t * Specifies the event name for beforeAddVertex.\n\t */\n\tBEFORE_ADD_VERTEX: 'beforeAddVertex',\n\n\t/**\n\t * Variable: ADD_VERTEX\n\t *\n\t * Specifies the event name for addVertex.\n\t */\n\tADD_VERTEX: 'addVertex',\n\n\t/**\n\t * Variable: AFTER_ADD_VERTEX\n\t *\n\t * Specifies the event name for afterAddVertex.\n\t */\n\tAFTER_ADD_VERTEX: 'afterAddVertex',\n\n\t/**\n\t * Variable: DONE\n\t *\n\t * Specifies the event name for done.\n\t */\n\tDONE: 'done',\n\n\t/**\n\t * Variable: EXECUTE\n\t *\n\t * Specifies the event name for execute.\n\t */\n\tEXECUTE: 'execute',\n\n\t/**\n\t * Variable: EXECUTED\n\t *\n\t * Specifies the event name for executed.\n\t */\n\tEXECUTED: 'executed',\n\n\t/**\n\t * Variable: BEGIN_UPDATE\n\t *\n\t * Specifies the event name for beginUpdate.\n\t */\n\tBEGIN_UPDATE: 'beginUpdate',\n\n\t/**\n\t * Variable: START_EDIT\n\t *\n\t * Specifies the event name for startEdit.\n\t */\n\tSTART_EDIT: 'startEdit',\n\n\t/**\n\t * Variable: END_UPDATE\n\t *\n\t * Specifies the event name for endUpdate.\n\t */\n\tEND_UPDATE: 'endUpdate',\n\n\t/**\n\t * Variable: END_EDIT\n\t *\n\t * Specifies the event name for endEdit.\n\t */\n\tEND_EDIT: 'endEdit',\n\n\t/**\n\t * Variable: BEFORE_UNDO\n\t *\n\t * Specifies the event name for beforeUndo.\n\t */\n\tBEFORE_UNDO: 'beforeUndo',\n\n\t/**\n\t * Variable: UNDO\n\t *\n\t * Specifies the event name for undo.\n\t */\n\tUNDO: 'undo',\n\n\t/**\n\t * Variable: REDO\n\t *\n\t * Specifies the event name for redo.\n\t */\n\tREDO: 'redo',\n\n\t/**\n\t * Variable: CHANGE\n\t *\n\t * Specifies the event name for change.\n\t */\n\tCHANGE: 'change',\n\n\t/**\n\t * Variable: NOTIFY\n\t *\n\t * Specifies the event name for notify.\n\t */\n\tNOTIFY: 'notify',\n\n\t/**\n\t * Variable: LAYOUT_CELLS\n\t *\n\t * Specifies the event name for layoutCells.\n\t */\n\tLAYOUT_CELLS: 'layoutCells',\n\n\t/**\n\t * Variable: CLICK\n\t *\n\t * Specifies the event name for click.\n\t */\n\tCLICK: 'click',\n\n\t/**\n\t * Variable: SCALE\n\t *\n\t * Specifies the event name for scale.\n\t */\n\tSCALE: 'scale',\n\n\t/**\n\t * Variable: TRANSLATE\n\t *\n\t * Specifies the event name for translate.\n\t */\n\tTRANSLATE: 'translate',\n\n\t/**\n\t * Variable: SCALE_AND_TRANSLATE\n\t *\n\t * Specifies the event name for scaleAndTranslate.\n\t */\n\tSCALE_AND_TRANSLATE: 'scaleAndTranslate',\n\n\t/**\n\t * Variable: UP\n\t *\n\t * Specifies the event name for up.\n\t */\n\tUP: 'up',\n\n\t/**\n\t * Variable: DOWN\n\t *\n\t * Specifies the event name for down.\n\t */\n\tDOWN: 'down',\n\n\t/**\n\t * Variable: ADD\n\t *\n\t * Specifies the event name for add.\n\t */\n\tADD: 'add',\n\n\t/**\n\t * Variable: REMOVE\n\t *\n\t * Specifies the event name for remove.\n\t */\n\tREMOVE: 'remove',\n\t\n\t/**\n\t * Variable: CLEAR\n\t *\n\t * Specifies the event name for clear.\n\t */\n\tCLEAR: 'clear',\n\n\t/**\n\t * Variable: ADD_CELLS\n\t *\n\t * Specifies the event name for addCells.\n\t */\n\tADD_CELLS: 'addCells',\n\n\t/**\n\t * Variable: CELLS_ADDED\n\t *\n\t * Specifies the event name for cellsAdded.\n\t */\n\tCELLS_ADDED: 'cellsAdded',\n\n\t/**\n\t * Variable: MOVE_CELLS\n\t *\n\t * Specifies the event name for moveCells.\n\t */\n\tMOVE_CELLS: 'moveCells',\n\n\t/**\n\t * Variable: CELLS_MOVED\n\t *\n\t * Specifies the event name for cellsMoved.\n\t */\n\tCELLS_MOVED: 'cellsMoved',\n\n\t/**\n\t * Variable: RESIZE_CELLS\n\t *\n\t * Specifies the event name for resizeCells.\n\t */\n\tRESIZE_CELLS: 'resizeCells',\n\n\t/**\n\t * Variable: CELLS_RESIZED\n\t *\n\t * Specifies the event name for cellsResized.\n\t */\n\tCELLS_RESIZED: 'cellsResized',\n\n\t/**\n\t * Variable: TOGGLE_CELLS\n\t *\n\t * Specifies the event name for toggleCells.\n\t */\n\tTOGGLE_CELLS: 'toggleCells',\n\n\t/**\n\t * Variable: CELLS_TOGGLED\n\t *\n\t * Specifies the event name for cellsToggled.\n\t */\n\tCELLS_TOGGLED: 'cellsToggled',\n\n\t/**\n\t * Variable: ORDER_CELLS\n\t *\n\t * Specifies the event name for orderCells.\n\t */\n\tORDER_CELLS: 'orderCells',\n\n\t/**\n\t * Variable: CELLS_ORDERED\n\t *\n\t * Specifies the event name for cellsOrdered.\n\t */\n\tCELLS_ORDERED: 'cellsOrdered',\n\n\t/**\n\t * Variable: REMOVE_CELLS\n\t *\n\t * Specifies the event name for removeCells.\n\t */\n\tREMOVE_CELLS: 'removeCells',\n\n\t/**\n\t * Variable: CELLS_REMOVED\n\t *\n\t * Specifies the event name for cellsRemoved.\n\t */\n\tCELLS_REMOVED: 'cellsRemoved',\n\n\t/**\n\t * Variable: GROUP_CELLS\n\t *\n\t * Specifies the event name for groupCells.\n\t */\n\tGROUP_CELLS: 'groupCells',\n\n\t/**\n\t * Variable: UNGROUP_CELLS\n\t *\n\t * Specifies the event name for ungroupCells.\n\t */\n\tUNGROUP_CELLS: 'ungroupCells',\n\n\t/**\n\t * Variable: REMOVE_CELLS_FROM_PARENT\n\t *\n\t * Specifies the event name for removeCellsFromParent.\n\t */\n\tREMOVE_CELLS_FROM_PARENT: 'removeCellsFromParent',\n\n\t/**\n\t * Variable: FOLD_CELLS\n\t *\n\t * Specifies the event name for foldCells.\n\t */\n\tFOLD_CELLS: 'foldCells',\n\n\t/**\n\t * Variable: CELLS_FOLDED\n\t *\n\t * Specifies the event name for cellsFolded.\n\t */\n\tCELLS_FOLDED: 'cellsFolded',\n\n\t/**\n\t * Variable: ALIGN_CELLS\n\t *\n\t * Specifies the event name for alignCells.\n\t */\n\tALIGN_CELLS: 'alignCells',\n\n\t/**\n\t * Variable: LABEL_CHANGED\n\t *\n\t * Specifies the event name for labelChanged.\n\t */\n\tLABEL_CHANGED: 'labelChanged',\n\n\t/**\n\t * Variable: CONNECT_CELL\n\t *\n\t * Specifies the event name for connectCell.\n\t */\n\tCONNECT_CELL: 'connectCell',\n\n\t/**\n\t * Variable: CELL_CONNECTED\n\t *\n\t * Specifies the event name for cellConnected.\n\t */\n\tCELL_CONNECTED: 'cellConnected',\n\n\t/**\n\t * Variable: SPLIT_EDGE\n\t *\n\t * Specifies the event name for splitEdge.\n\t */\n\tSPLIT_EDGE: 'splitEdge',\n\n\t/**\n\t * Variable: FLIP_EDGE\n\t *\n\t * Specifies the event name for flipEdge.\n\t */\n\tFLIP_EDGE: 'flipEdge',\n\n\t/**\n\t * Variable: START_EDITING\n\t *\n\t * Specifies the event name for startEditing.\n\t */\n\tSTART_EDITING: 'startEditing',\n\n\t/**\n\t * Variable: EDITING_STARTED\n\t *\n\t * Specifies the event name for editingStarted.\n\t */\n\tEDITING_STARTED: 'editingStarted',\n\n\t/**\n\t * Variable: EDITING_STOPPED\n\t *\n\t * Specifies the event name for editingStopped.\n\t */\n\tEDITING_STOPPED: 'editingStopped',\n\n\t/**\n\t * Variable: ADD_OVERLAY\n\t *\n\t * Specifies the event name for addOverlay.\n\t */\n\tADD_OVERLAY: 'addOverlay',\n\n\t/**\n\t * Variable: REMOVE_OVERLAY\n\t *\n\t * Specifies the event name for removeOverlay.\n\t */\n\tREMOVE_OVERLAY: 'removeOverlay',\n\n\t/**\n\t * Variable: UPDATE_CELL_SIZE\n\t *\n\t * Specifies the event name for updateCellSize.\n\t */\n\tUPDATE_CELL_SIZE: 'updateCellSize',\n\n\t/**\n\t * Variable: ESCAPE\n\t *\n\t * Specifies the event name for escape.\n\t */\n\tESCAPE: 'escape',\n\n\t/**\n\t * Variable: DOUBLE_CLICK\n\t *\n\t * Specifies the event name for doubleClick.\n\t */\n\tDOUBLE_CLICK: 'doubleClick',\n\n\t/**\n\t * Variable: START\n\t *\n\t * Specifies the event name for start.\n\t */\n\tSTART: 'start',\n\n\t/**\n\t * Variable: RESET\n\t *\n\t * Specifies the event name for reset.\n\t */\n\tRESET: 'reset'\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxXmlRequest\n * \n * XML HTTP request wrapper. See also: <mxUtils.get>, <mxUtils.post> and\n * <mxUtils.load>. This class provides a cross-browser abstraction for Ajax\n * requests.\n * \n * Encoding:\n * \n * For encoding parameter values, the built-in encodeURIComponent JavaScript\n * method must be used. For automatic encoding of post data in <mxEditor> the\n * <mxEditor.escapePostData> switch can be set to true (default). The encoding\n * will be carried out using the conte type of the page. That is, the page\n * containting the editor should contain a meta tag in the header, eg.\n * <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n * \n * Example:\n * \n * (code)\n * var onload = function(req)\n * {\n *   mxUtils.alert(req.getDocumentElement());\n * }\n * \n * var onerror = function(req)\n * {\n *   mxUtils.alert('Error');\n * }\n * new mxXmlRequest(url, 'key=value').send(onload, onerror);\n * (end)\n * \n * Sends an asynchronous POST request to the specified URL.\n * \n * Example:\n * \n * (code)\n * var req = new mxXmlRequest(url, 'key=value', 'POST', false);\n * req.send();\n * mxUtils.alert(req.getDocumentElement());\n * (end)\n * \n * Sends a synchronous POST request to the specified URL.\n * \n * Example:\n * \n * (code)\n * var encoder = new mxCodec();\n * var result = encoder.encode(graph.getModel());\n * var xml = encodeURIComponent(mxUtils.getXml(result));\n * new mxXmlRequest(url, 'xml='+xml).send();\n * (end)\n * \n * Sends an encoded graph model to the specified URL using xml as the\n * parameter name. The parameter can then be retrieved in C# as follows:\n * \n * (code)\n * string xml = HttpUtility.UrlDecode(context.Request.Params[\"xml\"]);\n * (end)\n * \n * Or in Java as follows:\n * \n * (code)\n * String xml = URLDecoder.decode(request.getParameter(\"xml\"), \"UTF-8\").replace(\"\\n\", \"&#xa;\");\n * (end)\n *\n * Note that the linefeeds should only be replaced if the XML is\n * processed in Java, for example when creating an image.\n * \n * Constructor: mxXmlRequest\n * \n * Constructs an XML HTTP request.\n * \n * Parameters:\n * \n * url - Target URL of the request.\n * params - Form encoded parameters to send with a POST request.\n * method - String that specifies the request method. Possible values are\n * POST and GET. Default is POST.\n * async - Boolean specifying if an asynchronous request should be used.\n * Default is true.\n * username - String specifying the username to be used for the request.\n * password - String specifying the password to be used for the request.\n */\nfunction mxXmlRequest(url, params, method, async, username, password)\n{\n\tthis.url = url;\n\tthis.params = params;\n\tthis.method = method || 'POST';\n\tthis.async = (async != null) ? async : true;\n\tthis.username = username;\n\tthis.password = password;\n};\n\n/**\n * Variable: url\n * \n * Holds the target URL of the request.\n */\nmxXmlRequest.prototype.url = null;\n\n/**\n * Variable: params\n * \n * Holds the form encoded data for the POST request.\n */\nmxXmlRequest.prototype.params = null;\n\n/**\n * Variable: method\n * \n * Specifies the request method. Possible values are POST and GET. Default\n * is POST.\n */\nmxXmlRequest.prototype.method = null;\n\n/**\n * Variable: async\n * \n * Boolean indicating if the request is asynchronous.\n */\nmxXmlRequest.prototype.async = null;\n\n/**\n * Variable: binary\n * \n * Boolean indicating if the request is binary. This option is ignored in IE.\n * In all other browsers the requested mime type is set to\n * text/plain; charset=x-user-defined. Default is false.\n */\nmxXmlRequest.prototype.binary = false;\n\n/**\n * Variable: withCredentials\n * \n * Specifies if withCredentials should be used in HTML5-compliant browsers. Default is\n * false.\n */\nmxXmlRequest.prototype.withCredentials = false;\n\n/**\n * Variable: username\n * \n * Specifies the username to be used for authentication.\n */\nmxXmlRequest.prototype.username = null;\n\n/**\n * Variable: password\n * \n * Specifies the password to be used for authentication.\n */\nmxXmlRequest.prototype.password = null;\n\n/**\n * Variable: request\n * \n * Holds the inner, browser-specific request object.\n */\nmxXmlRequest.prototype.request = null;\n\n/**\n * Variable: decodeSimulateValues\n * \n * Specifies if request values should be decoded as URIs before setting the\n * textarea value in <simulate>. Defaults to false for backwards compatibility,\n * to avoid another decode on the server this should be set to true.\n */\nmxXmlRequest.prototype.decodeSimulateValues = false;\n\n/**\n * Function: isBinary\n * \n * Returns <binary>.\n */\nmxXmlRequest.prototype.isBinary = function()\n{\n\treturn this.binary;\n};\n\n/**\n * Function: setBinary\n * \n * Sets <binary>.\n */\nmxXmlRequest.prototype.setBinary = function(value)\n{\n\tthis.binary = value;\n};\n\n/**\n * Function: getText\n * \n * Returns the response as a string.\n */\nmxXmlRequest.prototype.getText = function()\n{\n\treturn this.request.responseText;\n};\n\n/**\n * Function: isReady\n * \n * Returns true if the response is ready.\n */\nmxXmlRequest.prototype.isReady = function()\n{\n\treturn this.request.readyState == 4;\n};\n\n/**\n * Function: getDocumentElement\n * \n * Returns the document element of the response XML document.\n */\nmxXmlRequest.prototype.getDocumentElement = function()\n{\n\tvar doc = this.getXml();\n\t\n\tif (doc != null)\n\t{\n\t\treturn doc.documentElement;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getXml\n * \n * Returns the response as an XML document. Use <getDocumentElement> to get\n * the document element of the XML document.\n */\nmxXmlRequest.prototype.getXml = function()\n{\n\tvar xml = this.request.responseXML;\n\t\n\t// Handles missing response headers in IE, the first condition handles\n\t// the case where responseXML is there, but using its nodes leads to\n\t// type errors in the mxCellCodec when putting the nodes into a new\n\t// document. This happens in IE9 standards mode and with XML user\n\t// objects only, as they are used directly as values in cells.\n\tif (document.documentMode >= 9 || xml == null || xml.documentElement == null)\n\t{\n\t\txml = mxUtils.parseXml(this.request.responseText);\n\t}\n\t\n\treturn xml;\n};\n\n/**\n * Function: getText\n * \n * Returns the response as a string.\n */\nmxXmlRequest.prototype.getText = function()\n{\n\treturn this.request.responseText;\n};\n\n/**\n * Function: getStatus\n * \n * Returns the status as a number, eg. 404 for \"Not found\" or 200 for \"OK\".\n * Note: The NS_ERROR_NOT_AVAILABLE for invalid responses cannot be cought.\n */\nmxXmlRequest.prototype.getStatus = function()\n{\n\treturn this.request.status;\n};\n\n/**\n * Function: create\n * \n * Creates and returns the inner <request> object.\n */\nmxXmlRequest.prototype.create = function()\n{\n\tif (window.XMLHttpRequest)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\tvar req = new XMLHttpRequest();\n\t\t\t\n\t\t\t// TODO: Check for overrideMimeType required here?\n\t\t\tif (this.isBinary() && req.overrideMimeType)\n\t\t\t{\n\t\t\t\treq.overrideMimeType('text/plain; charset=x-user-defined');\n\t\t\t}\n\n\t\t\treturn req;\n\t\t};\n\t}\n\telse if (typeof(ActiveXObject) != 'undefined')\n\t{\n\t\treturn function()\n\t\t{\n\t\t\t// TODO: Implement binary option\n\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\n\t\t};\n\t}\n}();\n\n/**\n * Function: send\n * \n * Send the <request> to the target URL using the specified functions to\n * process the response asychronously.\n * \n * Note: Due to technical limitations, onerror is currently ignored.\n * \n * Parameters:\n * \n * onload - Function to be invoked if a successful response was received.\n * onerror - Function to be called on any error.\n * timeout - Optional timeout in ms before calling ontimeout.\n * ontimeout - Optional function to execute on timeout.\n */\nmxXmlRequest.prototype.send = function(onload, onerror, timeout, ontimeout)\n{\n\tthis.request = this.create();\n\t\n\tif (this.request != null)\n\t{\n\t\tif (onload != null)\n\t\t{\n\t\t\tthis.request.onreadystatechange = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tif (this.isReady())\n\t\t\t\t{\n\t\t\t\t\tonload(this);\n\t\t\t\t\tthis.request.onreadystatechaange = null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.request.open(this.method, this.url, this.async,\n\t\t\tthis.username, this.password);\n\t\tthis.setRequestHeaders(this.request, this.params);\n\t\t\n\t\tif (window.XMLHttpRequest && this.withCredentials)\n\t\t{\n\t\t\tthis.request.withCredentials = 'true';\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_QUIRKS && (document.documentMode == null || document.documentMode > 9) &&\n\t\t\twindow.XMLHttpRequest && timeout != null && ontimeout != null)\n\t\t{\n\t\t\tthis.request.timeout = timeout;\n\t\t\tthis.request.ontimeout = ontimeout;\n\t\t}\n\t\t\t\t\n\t\tthis.request.send(this.params);\n\t}\n};\n\n/**\n * Function: setRequestHeaders\n * \n * Sets the headers for the given request and parameters. This sets the\n * content-type to application/x-www-form-urlencoded if any params exist.\n * \n * Example:\n * \n * (code)\n * request.setRequestHeaders = function(request, params)\n * {\n *   if (params != null)\n *   {\n *     request.setRequestHeader('Content-Type',\n *             'multipart/form-data');\n *     request.setRequestHeader('Content-Length',\n *             params.length);\n *   }\n * };\n * (end)\n * \n * Use the code above before calling <send> if you require a\n * multipart/form-data request.   \n */\nmxXmlRequest.prototype.setRequestHeaders = function(request, params)\n{\n\tif (params != null)\n\t{\n\t\trequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t}\n};\n\n/**\n * Function: simulate\n * \n * Creates and posts a request to the given target URL using a dynamically\n * created form inside the given document.\n * \n * Parameters:\n * \n * docs - Document that contains the form element.\n * target - Target to send the form result to.\n */\nmxXmlRequest.prototype.simulate = function(doc, target)\n{\n\tdoc = doc || document;\n\tvar old = null;\n\n\tif (doc == document)\n\t{\n\t\told = window.onbeforeunload;\t\t\n\t\twindow.onbeforeunload = null;\n\t}\n\t\t\t\n\tvar form = doc.createElement('form');\n\tform.setAttribute('method', this.method);\n\tform.setAttribute('action', this.url);\n\n\tif (target != null)\n\t{\n\t\tform.setAttribute('target', target);\n\t}\n\n\tform.style.display = 'none';\n\tform.style.visibility = 'hidden';\n\t\n\tvar pars = (this.params.indexOf('&') > 0) ?\n\t\tthis.params.split('&') :\n\t\tthis.params.split();\n\n\t// Adds the parameters as textareas to the form\n\tfor (var i=0; i<pars.length; i++)\n\t{\n\t\tvar pos = pars[i].indexOf('=');\n\t\t\n\t\tif (pos > 0)\n\t\t{\n\t\t\tvar name = pars[i].substring(0, pos);\n\t\t\tvar value = pars[i].substring(pos+1);\n\t\t\t\n\t\t\tif (this.decodeSimulateValues)\n\t\t\t{\n\t\t\t\tvalue = decodeURIComponent(value);\n\t\t\t}\n\t\t\t\n\t\t\tvar textarea = doc.createElement('textarea');\n\t\t\ttextarea.setAttribute('wrap', 'off');\n\t\t\ttextarea.setAttribute('name', name);\n\t\t\tmxUtils.write(textarea, value);\n\t\t\tform.appendChild(textarea);\n\t\t}\n\t}\n\t\n\tdoc.body.appendChild(form);\n\tform.submit();\n\t\n\tif (form.parentNode != null)\n\t{\n\t\tform.parentNode.removeChild(form);\n\t}\n\n\tif (old != null)\n\t{\t\t\n\t\twindow.onbeforeunload = old;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxClipboard =\n{\n\t/**\n\t * Class: mxClipboard\n\t * \n\t * Singleton that implements a clipboard for graph cells.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxClipboard.copy(graph);\n\t * mxClipboard.paste(graph2);\n\t * (end)\n\t *\n\t * This copies the selection cells from the graph to the clipboard and\n\t * pastes them into graph2.\n\t * \n\t * For fine-grained control of the clipboard data the <mxGraph.canExportCell>\n\t * and <mxGraph.canImportCell> functions can be overridden.\n\t * \n\t * To restore previous parents for pasted cells, the implementation for\n\t * <copy> and <paste> can be changed as follows.\n\t * \n\t * (code)\n\t * mxClipboard.copy = function(graph, cells)\n\t * {\n\t *   cells = cells || graph.getSelectionCells();\n\t *   var result = graph.getExportableCells(cells);\n\t *   \n\t *   mxClipboard.parents = new Object();\n\t *   \n\t *   for (var i = 0; i < result.length; i++)\n\t *   {\n\t *     mxClipboard.parents[i] = graph.model.getParent(cells[i]);\n\t *   }\n\t *   \n\t *   mxClipboard.insertCount = 1;\n\t *   mxClipboard.setCells(graph.cloneCells(result));\n\t *   \n\t *   return result;\n\t * };\n\t * \n\t * mxClipboard.paste = function(graph)\n\t * {\n\t *   if (!mxClipboard.isEmpty())\n\t *   {\n\t *     var cells = graph.getImportableCells(mxClipboard.getCells());\n\t *     var delta = mxClipboard.insertCount * mxClipboard.STEPSIZE;\n\t *     var parent = graph.getDefaultParent();\n\t *     \n\t *     graph.model.beginUpdate();\n\t *     try\n\t *     {\n\t *       for (var i = 0; i < cells.length; i++)\n\t *       {\n\t *         var tmp = (mxClipboard.parents != null && graph.model.contains(mxClipboard.parents[i])) ?\n\t *              mxClipboard.parents[i] : parent;\n\t *         cells[i] = graph.importCells([cells[i]], delta, delta, tmp)[0];\n\t *       }\n\t *     }\n\t *     finally\n\t *     {\n\t *       graph.model.endUpdate();\n\t *     }\n\t *     \n\t *     // Increments the counter and selects the inserted cells\n\t *     mxClipboard.insertCount++;\n\t *     graph.setSelectionCells(cells);\n\t *   }\n\t * };\n\t * (end)\n\t * \n\t * Variable: STEPSIZE\n\t * \n\t * Defines the step size to offset the cells after each paste operation.\n\t * Default is 10.\n\t */\n\tSTEPSIZE: 10,\n\n\t/**\n\t * Variable: insertCount\n\t * \n\t * Counts the number of times the clipboard data has been inserted.\n\t */\n\tinsertCount: 1,\n\n\t/**\n\t * Variable: cells\n\t * \n\t * Holds the array of <mxCells> currently in the clipboard.\n\t */\n\tcells: null,\n\n\t/**\n\t * Function: setCells\n\t * \n\t * Sets the cells in the clipboard. Fires a <mxEvent.CHANGE> event.\n\t */\n\tsetCells: function(cells)\n\t{\n\t\tmxClipboard.cells = cells;\n\t},\n\n\t/**\n\t * Function: getCells\n\t * \n\t * Returns  the cells in the clipboard.\n\t */\n\tgetCells: function()\n\t{\n\t\treturn mxClipboard.cells;\n\t},\n\t\n\t/**\n\t * Function: isEmpty\n\t * \n\t * Returns true if the clipboard currently has not data stored.\n\t */\n\tisEmpty: function()\n\t{\n\t\treturn mxClipboard.getCells() == null;\n\t},\n\t\n\t/**\n\t * Function: cut\n\t * \n\t * Cuts the given array of <mxCells> from the specified graph.\n\t * If cells is null then the selection cells of the graph will\n\t * be used. Returns the cells that have been cut from the graph.\n\t *\n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be cut.\n\t * cells - Optional array of <mxCells> to be cut.\n\t */\n\tcut: function(graph, cells)\n\t{\n\t\tcells = mxClipboard.copy(graph, cells);\n\t\tmxClipboard.insertCount = 0;\n\t\tmxClipboard.removeCells(graph, cells);\n\t\t\n\t\treturn cells;\n\t},\n\n\t/**\n\t * Function: removeCells\n\t * \n\t * Hook to remove the given cells from the given graph after\n\t * a cut operation.\n\t *\n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be cut.\n\t * cells - Array of <mxCells> to be cut.\n\t */\n\tremoveCells: function(graph, cells)\n\t{\n\t\tgraph.removeCells(cells);\n\t},\n\n\t/**\n\t * Function: copy\n\t * \n\t * Copies the given array of <mxCells> from the specified\n\t * graph to <cells>. Returns the original array of cells that has\n\t * been cloned. Descendants of cells in the array are ignored.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be copied.\n\t * cells - Optional array of <mxCells> to be copied.\n\t */\n\tcopy: function(graph, cells)\n\t{\n\t\tcells = cells || graph.getSelectionCells();\n\t\tvar result = graph.getExportableCells(graph.model.getTopmostCells(cells));\n\t\tmxClipboard.insertCount = 1;\n\t\tmxClipboard.setCells(graph.cloneCells(result));\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: paste\n\t * \n\t * Pastes the <cells> into the specified graph restoring\n\t * the relation to <parents>, if possible. If the parents\n\t * are no longer in the graph or invisible then the\n\t * cells are added to the graph's default or into the\n\t * swimlane under the cell's new location if one exists.\n\t * The cells are added to the graph using <mxGraph.importCells>\n\t * and returned.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to paste the <cells> into.\n\t */\n\tpaste: function(graph)\n\t{\n\t\tvar cells = null;\n\t\t\n\t\tif (!mxClipboard.isEmpty())\n\t\t{\n\t\t\tcells = graph.getImportableCells(mxClipboard.getCells());\n\t\t\tvar delta = mxClipboard.insertCount * mxClipboard.STEPSIZE;\n\t\t\tvar parent = graph.getDefaultParent();\n\t\t\tcells = graph.importCells(cells, delta, delta, parent);\n\t\t\t\n\t\t\t// Increments the counter and selects the inserted cells\n\t\t\tmxClipboard.insertCount++;\n\t\t\tgraph.setSelectionCells(cells);\n\t\t}\n\t\t\n\t\treturn cells;\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxWindow\n * \n * Basic window inside a document.\n * \n * Examples:\n * \n * Creating a simple window.\n *\n * (code)\n * var tb = document.createElement('div');\n * var wnd = new mxWindow('Title', tb, 100, 100, 200, 200, true, true);\n * wnd.setVisible(true); \n * (end)\n *\n * Creating a window that contains an iframe. \n * \n * (code)\n * var frame = document.createElement('iframe');\n * frame.setAttribute('width', '192px');\n * frame.setAttribute('height', '172px');\n * frame.setAttribute('src', 'http://www.example.com/');\n * frame.style.backgroundColor = 'white';\n * \n * var w = document.body.clientWidth;\n * var h = (document.body.clientHeight || document.documentElement.clientHeight);\n * var wnd = new mxWindow('Title', frame, (w-200)/2, (h-200)/3, 200, 200);\n * wnd.setVisible(true);\n * (end)\n * \n * To limit the movement of a window, eg. to keep it from being moved beyond\n * the top, left corner the following method can be overridden (recommended):\n * \n * (code)\n * wnd.setLocation = function(x, y)\n * {\n *   x = Math.max(0, x);\n *   y = Math.max(0, y);\n *   mxWindow.prototype.setLocation.apply(this, arguments);\n * };\n * (end)\n * \n * Or the following event handler can be used:\n * \n * (code)\n * wnd.addListener(mxEvent.MOVE, function(e)\n * {\n *   wnd.setLocation(Math.max(0, wnd.getX()), Math.max(0, wnd.getY()));\n * });\n * (end)\n * \n * To keep a window inside the current window:\n * \n * (code)\n * mxEvent.addListener(window, 'resize', mxUtils.bind(this, function()\n * {\n *   var iw = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n *   var ih = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n *   \n *   var x = this.window.getX();\n *   var y = this.window.getY();\n *   \n *   if (x + this.window.table.clientWidth > iw)\n *   {\n *     x = Math.max(0, iw - this.window.table.clientWidth);\n *   }\n *   \n *   if (y + this.window.table.clientHeight > ih)\n *   {\n *     y = Math.max(0, ih - this.window.table.clientHeight);\n *   }\n *   \n *   if (this.window.getX() != x || this.window.getY() != y)\n *   {\n *     this.window.setLocation(x, y);\n *   }\n * }));\n * (end)\n *\n * Event: mxEvent.MOVE_START\n *\n * Fires before the window is moved. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.MOVE\n *\n * Fires while the window is being moved. The <code>event</code> property\n * contains the corresponding mouse event.\n *\n * Event: mxEvent.MOVE_END\n *\n * Fires after the window is moved. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE_START\n *\n * Fires before the window is resized. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE\n *\n * Fires while the window is being resized. The <code>event</code> property\n * contains the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE_END\n *\n * Fires after the window is resized. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.MAXIMIZE\n * \n * Fires after the window is maximized. The <code>event</code> property\n * contains the corresponding mouse event.\n * \n * Event: mxEvent.MINIMIZE\n * \n * Fires after the window is minimized. The <code>event</code> property\n * contains the corresponding mouse event.\n * \n * Event: mxEvent.NORMALIZE\n * \n * Fires after the window is normalized, that is, it returned from\n * maximized or minimized state. The <code>event</code> property contains the\n * corresponding mouse event.\n *  \n * Event: mxEvent.ACTIVATE\n * \n * Fires after a window is activated. The <code>previousWindow</code> property\n * contains the previous window. The event sender is the active window.\n * \n * Event: mxEvent.SHOW\n * \n * Fires after the window is shown. This event has no properties.\n * \n * Event: mxEvent.HIDE\n * \n * Fires after the window is hidden. This event has no properties.\n * \n * Event: mxEvent.CLOSE\n * \n * Fires before the window is closed. The <code>event</code> property contains\n * the corresponding mouse event.\n * \n * Event: mxEvent.DESTROY\n * \n * Fires before the window is destroyed. This event has no properties.\n * \n * Constructor: mxWindow\n * \n * Constructs a new window with the given dimension and title to display\n * the specified content. The window elements use the given style as a\n * prefix for the classnames of the respective window elements, namely,\n * the window title and window pane. The respective postfixes are appended\n * to the given stylename as follows:\n * \n *   style - Base style for the window.\n *   style+Title - Style for the window title.\n *   style+Pane - Style for the window pane.\n * \n * The default value for style is mxWindow, resulting in the following\n * classnames for the window elements: mxWindow, mxWindowTitle and\n * mxWindowPane.\n * \n * If replaceNode is given then the window replaces the given DOM node in\n * the document.\n * \n * Parameters:\n * \n * title - String that represents the title of the new window.\n * content - DOM node that is used as the window content.\n * x - X-coordinate of the window location.\n * y - Y-coordinate of the window location.\n * width - Width of the window.\n * height - Optional height of the window. Default is to match the height\n * of the content at the specified width.\n * minimizable - Optional boolean indicating if the window is minimizable.\n * Default is true.\n * movable - Optional boolean indicating if the window is movable. Default\n * is true.\n * replaceNode - Optional DOM node that the window should replace.\n * style - Optional base classname for the window elements. Default is\n * mxWindow.\n */\nfunction mxWindow(title, content, x, y, width, height, minimizable, movable, replaceNode, style)\n{\n\tif (content != null)\n\t{\n\t\tminimizable = (minimizable != null) ? minimizable : true;\n\t\tthis.content = content;\n\t\tthis.init(x, y, width, height, style);\n\t\t\n\t\tthis.installMaximizeHandler();\n\t\tthis.installMinimizeHandler();\n\t\tthis.installCloseHandler();\n\t\tthis.setMinimizable(minimizable);\n\t\tthis.setTitle(title);\n\t\t\n\t\tif (movable == null || movable)\n\t\t{\n\t\t\tthis.installMoveHandler();\n\t\t}\n\n\t\tif (replaceNode != null && replaceNode.parentNode != null)\n\t\t{\n\t\t\treplaceNode.parentNode.replaceChild(this.div, replaceNode);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.body.appendChild(this.div);\n\t\t}\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxWindow.prototype = new mxEventSource();\nmxWindow.prototype.constructor = mxWindow;\n\n/**\n * Variable: closeImage\n * \n * URL of the image to be used for the close icon in the titlebar.\n */\nmxWindow.prototype.closeImage = mxClient.imageBasePath + '/close.gif';\n\n/**\n * Variable: minimizeImage\n * \n * URL of the image to be used for the minimize icon in the titlebar.\n */\nmxWindow.prototype.minimizeImage = mxClient.imageBasePath + '/minimize.gif';\n\t\n/**\n * Variable: normalizeImage\n * \n * URL of the image to be used for the normalize icon in the titlebar.\n */\nmxWindow.prototype.normalizeImage = mxClient.imageBasePath + '/normalize.gif';\n\t\n/**\n * Variable: maximizeImage\n * \n * URL of the image to be used for the maximize icon in the titlebar.\n */\nmxWindow.prototype.maximizeImage = mxClient.imageBasePath + '/maximize.gif';\n\n/**\n * Variable: normalizeImage\n * \n * URL of the image to be used for the resize icon.\n */\nmxWindow.prototype.resizeImage = mxClient.imageBasePath + '/resize.gif';\n\n/**\n * Variable: visible\n * \n * Boolean flag that represents the visible state of the window.\n */\nmxWindow.prototype.visible = false;\n\n/**\n * Variable: minimumSize\n * \n * <mxRectangle> that specifies the minimum width and height of the window.\n * Default is (50, 40).\n */\nmxWindow.prototype.minimumSize = new mxRectangle(0, 0, 50, 40);\n\n/**\n * Variable: destroyOnClose\n * \n * Specifies if the window should be destroyed when it is closed. If this\n * is false then the window is hidden using <setVisible>. Default is true.\n */\nmxWindow.prototype.destroyOnClose = true;\n\n/**\n * Variable: contentHeightCorrection\n * \n * Defines the correction factor for computing the height of the contentWrapper.\n * Default is 6 for IE 7/8 standards mode and 2 for all other browsers and modes.\n */\nmxWindow.prototype.contentHeightCorrection = (document.documentMode == 8 || document.documentMode == 7) ? 6 : 2;\n\n/**\n * Variable: title\n * \n * Reference to the DOM node (TD) that contains the title.\n */\nmxWindow.prototype.title = null;\n\n/**\n * Variable: content\n * \n * Reference to the DOM node that represents the window content.\n */\nmxWindow.prototype.content = null;\n\n/**\n * Function: init\n * \n * Initializes the DOM tree that represents the window.\n */\nmxWindow.prototype.init = function(x, y, width, height, style)\n{\n\tstyle = (style != null) ? style : 'mxWindow';\n\t\n\tthis.div = document.createElement('div');\n\tthis.div.className = style;\n\n\tthis.div.style.left = x + 'px';\n\tthis.div.style.top = y + 'px';\n\tthis.table = document.createElement('table');\n\tthis.table.className = style;\n\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tthis.div.style.touchAction = 'none';\n\t}\n\t\n\t// Workaround for table size problems in FF\n\tif (width != null)\n\t{\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tthis.div.style.width = width + 'px'; \n\t\t}\n\t\t\n\t\tthis.table.style.width = width + 'px';\n\t} \n\t\n\tif (height != null)\n\t{\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tthis.div.style.height = height + 'px';\n\t\t}\n\t\t\n\t\tthis.table.style.height = height + 'px';\n\t}\t\t\n\t\n\t// Creates title row\n\tvar tbody = document.createElement('tbody');\n\tvar tr = document.createElement('tr');\n\t\n\tthis.title = document.createElement('td');\n\tthis.title.className = style + 'Title';\n\t\n\tthis.buttons = document.createElement('div');\n\tthis.buttons.style.position = 'absolute';\n\tthis.buttons.style.display = 'inline-block';\n\tthis.buttons.style.right = '4px';\n\tthis.buttons.style.top = '5px';\n\tthis.title.appendChild(this.buttons);\n\t\n\ttr.appendChild(this.title);\n\ttbody.appendChild(tr);\n\t\n\t// Creates content row and table cell\n\ttr = document.createElement('tr');\n\tthis.td = document.createElement('td');\n\tthis.td.className = style + 'Pane';\n\t\n\tif (document.documentMode == 7)\n\t{\n\t\tthis.td.style.height = '100%';\n\t}\n\n\tthis.contentWrapper = document.createElement('div');\n\tthis.contentWrapper.className = style + 'Pane';\n\tthis.contentWrapper.style.width = '100%';\n\tthis.contentWrapper.appendChild(this.content);\n\n\t// Workaround for div around div restricts height\n\t// of inner div if outerdiv has hidden overflow\n\tif (mxClient.IS_QUIRKS || this.content.nodeName.toUpperCase() != 'DIV')\n\t{\n\t\tthis.contentWrapper.style.height = '100%';\n\t}\n\n\t// Puts all content into the DOM\n\tthis.td.appendChild(this.contentWrapper);\n\ttr.appendChild(this.td);\n\ttbody.appendChild(tr);\n\tthis.table.appendChild(tbody);\n\tthis.div.appendChild(this.table);\n\t\n\t// Puts the window on top of other windows when clicked\n\tvar activator = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t});\n\t\n\tmxEvent.addGestureListeners(this.title, activator);\n\tmxEvent.addGestureListeners(this.table, activator);\n\n\tthis.hide();\n};\n\n/**\n * Function: setTitle\n * \n * Sets the window title to the given string. HTML markup inside the title\n * will be escaped.\n */\nmxWindow.prototype.setTitle = function(title)\n{\n\t// Removes all text content nodes (normally just one)\n\tvar child = this.title.firstChild;\n\t\n\twhile (child != null)\n\t{\n\t\tvar next = child.nextSibling;\n\t\t\n\t\tif (child.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t{\n\t\t\tchild.parentNode.removeChild(child);\n\t\t}\n\t\t\n\t\tchild = next;\n\t}\n\t\n\tmxUtils.write(this.title, title || '');\n\tthis.title.appendChild(this.buttons);\n};\n\n/**\n * Function: setScrollable\n * \n * Sets if the window contents should be scrollable.\n */\nmxWindow.prototype.setScrollable = function(scrollable)\n{\n\t// Workaround for hang in Presto 2.5.22 (Opera 10.5)\n\tif (navigator.userAgent.indexOf('Presto/2.5') < 0)\n\t{\n\t\tif (scrollable)\n\t\t{\n\t\t\tthis.contentWrapper.style.overflow = 'auto';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.contentWrapper.style.overflow = 'hidden';\n\t\t}\n\t}\n};\n\n/**\n * Function: activate\n * \n * Puts the window on top of all other windows.\n */\nmxWindow.prototype.activate = function()\n{\n\tif (mxWindow.activeWindow != this)\n\t{\n\t\tvar style = mxUtils.getCurrentStyle(this.getElement());\n\t\tvar index = (style != null) ? style.zIndex : 3;\n\n\t\tif (mxWindow.activeWindow)\n\t\t{\n\t\t\tvar elt = mxWindow.activeWindow.getElement();\n\t\t\t\n\t\t\tif (elt != null && elt.style != null)\n\t\t\t{\n\t\t\t\telt.style.zIndex = index;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar previousWindow = mxWindow.activeWindow;\n\t\tthis.getElement().style.zIndex = parseInt(index) + 1;\n\t\tmxWindow.activeWindow = this;\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ACTIVATE, 'previousWindow', previousWindow));\n\t}\n};\n\n/**\n * Function: getElement\n * \n * Returuns the outermost DOM node that makes up the window.\n */\nmxWindow.prototype.getElement = function()\n{\n\treturn this.div;\n};\n\n/**\n * Function: fit\n * \n * Makes sure the window is inside the client area of the window.\n */\nmxWindow.prototype.fit = function()\n{\n\tmxUtils.fit(this.div);\n};\n\n/**\n * Function: isResizable\n * \n * Returns true if the window is resizable.\n */\nmxWindow.prototype.isResizable = function()\n{\n\tif (this.resize != null)\n\t{\n\t\treturn this.resize.style.display != 'none';\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: setResizable\n * \n * Sets if the window should be resizable. To avoid interference with some\n * built-in features of IE10 and later, the use of the following code is\n * recommended if there are resizable <mxWindow>s in the page:\n * \n * (code)\n * if (mxClient.IS_POINTER)\n * {\n *   document.body.style.msTouchAction = 'none';\n * }\n * (end)\n */\nmxWindow.prototype.setResizable = function(resizable)\n{\n\tif (resizable)\n\t{\n\t\tif (this.resize == null)\n\t\t{\n\t\t\tthis.resize = document.createElement('img');\n\t\t\tthis.resize.style.position = 'absolute';\n\t\t\tthis.resize.style.bottom = '2px';\n\t\t\tthis.resize.style.right = '2px';\n\n\t\t\tthis.resize.setAttribute('src', this.resizeImage);\n\t\t\tthis.resize.style.cursor = 'nw-resize';\n\t\t\t\n\t\t\tvar startX = null;\n\t\t\tvar startY = null;\n\t\t\tvar width = null;\n\t\t\tvar height = null;\n\t\t\t\n\t\t\tvar start = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\t// LATER: pointerdown starting on border of resize does start\n\t\t\t\t// the drag operation but does not fire consecutive events via\n\t\t\t\t// one of the listeners below (does pan instead).\n\t\t\t\t// Workaround: document.body.style.msTouchAction = 'none'\n\t\t\t\tthis.activate();\n\t\t\t\tstartX = mxEvent.getClientX(evt);\n\t\t\t\tstartY = mxEvent.getClientY(evt);\n\t\t\t\twidth = this.div.offsetWidth;\n\t\t\t\theight = this.div.offsetHeight;\n\t\t\t\t\n\t\t\t\tmxEvent.addGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_START, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\n\t\t\t// Adds a temporary pair of listeners to intercept\n\t\t\t// the gesture event in the document\n\t\t\tvar dragHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (startX != null && startY != null)\n\t\t\t\t{\n\t\t\t\t\tvar dx = mxEvent.getClientX(evt) - startX;\n\t\t\t\t\tvar dy = mxEvent.getClientY(evt) - startY;\n\t\n\t\t\t\t\tthis.setSize(width + dx, height + dy);\n\t\n\t\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE, 'event', evt));\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tvar dropHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (startX != null && startY != null)\n\t\t\t\t{\n\t\t\t\t\tstartX = null;\n\t\t\t\t\tstartY = null;\n\t\t\t\t\tmxEvent.removeGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_END, 'event', evt));\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addGestureListeners(this.resize, start, dragHandler, dropHandler);\n\t\t\tthis.div.appendChild(this.resize);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tthis.resize.style.display = 'inline';\n\t\t}\n\t}\n\telse if (this.resize != null)\n\t{\n\t\tthis.resize.style.display = 'none';\n\t}\n};\n\t\n/**\n * Function: setSize\n * \n * Sets the size of the window.\n */\nmxWindow.prototype.setSize = function(width, height)\n{\n\twidth = Math.max(this.minimumSize.width, width);\n\theight = Math.max(this.minimumSize.height, height);\n\n\t// Workaround for table size problems in FF\n\tif (!mxClient.IS_QUIRKS)\n\t{\n\t\tthis.div.style.width =  width + 'px';\n\t\tthis.div.style.height = height + 'px';\n\t}\n\t\n\tthis.table.style.width =  width + 'px';\n\tthis.table.style.height = height + 'px';\n\n\tif (!mxClient.IS_QUIRKS)\n\t{\n\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t}\n};\n\t\n/**\n * Function: setMinimizable\n * \n * Sets if the window is minimizable.\n */\nmxWindow.prototype.setMinimizable = function(minimizable)\n{\n\tthis.minimize.style.display = (minimizable) ? '' : 'none';\n};\n\n/**\n * Function: getMinimumSize\n * \n * Returns an <mxRectangle> that specifies the size for the minimized window.\n * A width or height of 0 means keep the existing width or height. This\n * implementation returns the height of the window title and keeps the width.\n */\nmxWindow.prototype.getMinimumSize = function()\n{\n\treturn new mxRectangle(0, 0, 0, this.title.offsetHeight);\n};\n\n/**\n * Function: installMinimizeHandler\n * \n * Installs the event listeners required for minimizing the window.\n */\nmxWindow.prototype.installMinimizeHandler = function()\n{\n\tthis.minimize = document.createElement('img');\n\t\n\tthis.minimize.setAttribute('src', this.minimizeImage);\n\tthis.minimize.setAttribute('title', 'Minimize');\n\tthis.minimize.style.cursor = 'pointer';\n\tthis.minimize.style.marginLeft = '2px';\n\tthis.minimize.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.minimize);\n\t\n\tvar minimized = false;\n\tvar maxDisplay = null;\n\tvar height = null;\n\n\tvar funct = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t\t\n\t\tif (!minimized)\n\t\t{\n\t\t\tminimized = true;\n\t\t\t\n\t\t\tthis.minimize.setAttribute('src', this.normalizeImage);\n\t\t\tthis.minimize.setAttribute('title', 'Normalize');\n\t\t\tthis.contentWrapper.style.display = 'none';\n\t\t\tmaxDisplay = this.maximize.style.display;\n\t\t\t\n\t\t\tthis.maximize.style.display = 'none';\n\t\t\theight = this.table.style.height;\n\t\t\t\n\t\t\tvar minSize = this.getMinimumSize();\n\t\t\t\n\t\t\tif (minSize.height > 0)\n\t\t\t{\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.height = minSize.height + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.height = minSize.height + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (minSize.width > 0)\n\t\t\t{\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.width = minSize.width + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.width = minSize.width + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (this.resize != null)\n\t\t\t{\n\t\t\t\tthis.resize.style.visibility = 'hidden';\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MINIMIZE, 'event', evt));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tminimized = false;\n\t\t\t\n\t\t\tthis.minimize.setAttribute('src', this.minimizeImage);\n\t\t\tthis.minimize.setAttribute('title', 'Minimize');\n\t\t\tthis.contentWrapper.style.display = ''; // default\n\t\t\tthis.maximize.style.display = maxDisplay;\n\t\t\t\n\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\tthis.div.style.height = height;\n\t\t\t}\n\t\t\t\n\t\t\tthis.table.style.height = height;\n\n\t\t\tif (this.resize != null)\n\t\t\t{\n\t\t\t\tthis.resize.style.visibility = '';\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.NORMALIZE, 'event', evt));\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tmxEvent.addGestureListeners(this.minimize, funct);\n};\n\t\n/**\n * Function: setMaximizable\n * \n * Sets if the window is maximizable.\n */\nmxWindow.prototype.setMaximizable = function(maximizable)\n{\n\tthis.maximize.style.display = (maximizable) ? '' : 'none';\n};\n\n/**\n * Function: installMaximizeHandler\n * \n * Installs the event listeners required for maximizing the window.\n */\nmxWindow.prototype.installMaximizeHandler = function()\n{\n\tthis.maximize = document.createElement('img');\n\t\n\tthis.maximize.setAttribute('src', this.maximizeImage);\n\tthis.maximize.setAttribute('title', 'Maximize');\n\tthis.maximize.style.cursor = 'default';\n\tthis.maximize.style.marginLeft = '2px';\n\tthis.maximize.style.cursor = 'pointer';\n\tthis.maximize.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.maximize);\n\t\n\tvar maximized = false;\n\tvar x = null;\n\tvar y = null;\n\tvar height = null;\n\tvar width = null;\n\tvar minDisplay = null;\n\n\tvar funct = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t\t\n\t\tif (this.maximize.style.display != 'none')\n\t\t{\n\t\t\tif (!maximized)\n\t\t\t{\n\t\t\t\tmaximized = true;\n\t\t\t\t\n\t\t\t\tthis.maximize.setAttribute('src', this.normalizeImage);\n\t\t\t\tthis.maximize.setAttribute('title', 'Normalize');\n\t\t\t\tthis.contentWrapper.style.display = '';\n\t\t\t\tminDisplay = this.minimize.style.display;\n\t\t\t\tthis.minimize.style.display = 'none';\n\t\t\t\t\n\t\t\t\t// Saves window state\n\t\t\t\tx = parseInt(this.div.style.left);\n\t\t\t\ty = parseInt(this.div.style.top);\n\t\t\t\theight = this.table.style.height;\n\t\t\t\twidth = this.table.style.width;\n\n\t\t\t\tthis.div.style.left = '0px';\n\t\t\t\tthis.div.style.top = '0px';\n\t\t\t\tvar docHeight = Math.max(document.body.clientHeight || 0, document.documentElement.clientHeight || 0);\n\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.width = (document.body.clientWidth - 2) + 'px';\n\t\t\t\t\tthis.div.style.height = (docHeight - 2) + 'px';\n\t\t\t\t}\n\n\t\t\t\tthis.table.style.width = (document.body.clientWidth - 2) + 'px';\n\t\t\t\tthis.table.style.height = (docHeight - 2) + 'px';\n\t\t\t\t\n\t\t\t\tif (this.resize != null)\n\t\t\t\t{\n\t\t\t\t\tthis.resize.style.visibility = 'hidden';\n\t\t\t\t}\n\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\t\n\t\t\t\t\tif (style.overflow == 'auto' || this.resize != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MAXIMIZE, 'event', evt));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmaximized = false;\n\t\t\t\t\n\t\t\t\tthis.maximize.setAttribute('src', this.maximizeImage);\n\t\t\t\tthis.maximize.setAttribute('title', 'Maximize');\n\t\t\t\tthis.contentWrapper.style.display = '';\n\t\t\t\tthis.minimize.style.display = minDisplay;\n\n\t\t\t\t// Restores window state\n\t\t\t\tthis.div.style.left = x+'px';\n\t\t\t\tthis.div.style.top = y+'px';\n\t\t\t\t\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.height = height;\n\t\t\t\t\tthis.div.style.width = width;\n\n\t\t\t\t\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\t\n\t\t\t\t\tif (style.overflow == 'auto' || this.resize != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.height = height;\n\t\t\t\tthis.table.style.width = width;\n\n\t\t\t\tif (this.resize != null)\n\t\t\t\t{\n\t\t\t\t\tthis.resize.style.visibility = '';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.NORMALIZE, 'event', evt));\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t});\n\t\n\tmxEvent.addGestureListeners(this.maximize, funct);\n\tmxEvent.addListener(this.title, 'dblclick', funct);\n};\n\t\n/**\n * Function: installMoveHandler\n * \n * Installs the event listeners required for moving the window.\n */\nmxWindow.prototype.installMoveHandler = function()\n{\n\tthis.title.style.cursor = 'move';\n\t\n\tmxEvent.addGestureListeners(this.title,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tvar startX = mxEvent.getClientX(evt);\n\t\t\tvar startY = mxEvent.getClientY(evt);\n\t\t\tvar x = this.getX();\n\t\t\tvar y = this.getY();\n\t\t\t\t\t\t\n\t\t\t// Adds a temporary pair of listeners to intercept\n\t\t\t// the gesture event in the document\n\t\t\tvar dragHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tvar dx = mxEvent.getClientX(evt) - startX;\n\t\t\t\tvar dy = mxEvent.getClientY(evt) - startY;\n\t\t\t\tthis.setLocation(x + dx, y + dy);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\t\n\t\t\tvar dropHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tmxEvent.removeGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_END, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_START, 'event', evt));\n\t\t\tmxEvent.consume(evt);\n\t\t}));\n\t\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tthis.title.style.touchAction = 'none';\n\t}\n};\n\n/**\n * Function: setLocation\n * \n * Sets the upper, left corner of the window.\n */\n mxWindow.prototype.setLocation = function(x, y)\n {\n\tthis.div.style.left = x + 'px';\n\tthis.div.style.top = y + 'px';\n };\n\n/**\n * Function: getX\n *\n * Returns the current position on the x-axis.\n */\nmxWindow.prototype.getX = function()\n{\n\treturn parseInt(this.div.style.left);\n};\n\n/**\n * Function: getY\n *\n * Returns the current position on the y-axis.\n */\nmxWindow.prototype.getY = function()\n{\n\treturn parseInt(this.div.style.top);\n};\n\n/**\n * Function: installCloseHandler\n *\n * Adds the <closeImage> as a new image node in <closeImg> and installs the\n * <close> event.\n */\nmxWindow.prototype.installCloseHandler = function()\n{\n\tthis.closeImg = document.createElement('img');\n\t\n\tthis.closeImg.setAttribute('src', this.closeImage);\n\tthis.closeImg.setAttribute('title', 'Close');\n\tthis.closeImg.style.marginLeft = '2px';\n\tthis.closeImg.style.cursor = 'pointer';\n\tthis.closeImg.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.closeImg);\n\n\tmxEvent.addGestureListeners(this.closeImg,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CLOSE, 'event', evt));\n\t\t\t\n\t\t\tif (this.destroyOnClose)\n\t\t\t{\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.setVisible(false);\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(evt);\n\t\t}));\n};\n\n/**\n * Function: setImage\n * \n * Sets the image associated with the window.\n * \n * Parameters:\n * \n * image - URL of the image to be used.\n */\nmxWindow.prototype.setImage = function(image)\n{\n\tthis.image = document.createElement('img');\n\tthis.image.setAttribute('src', image);\n\tthis.image.setAttribute('align', 'left');\n\tthis.image.style.marginRight = '4px';\n\tthis.image.style.marginLeft = '0px';\n\tthis.image.style.marginTop = '-2px';\n\t\n\tthis.title.insertBefore(this.image, this.title.firstChild);\n};\n\n/**\n * Function: setClosable\n * \n * Sets the image associated with the window.\n * \n * Parameters:\n * \n * closable - Boolean specifying if the window should be closable.\n */\nmxWindow.prototype.setClosable = function(closable)\n{\n\tthis.closeImg.style.display = (closable) ? '' : 'none';\n};\n\n/**\n * Function: isVisible\n * \n * Returns true if the window is visible.\n */\nmxWindow.prototype.isVisible = function()\n{\n\tif (this.div != null)\n\t{\n\t\treturn this.div.style.display != 'none';\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: setVisible\n *\n * Shows or hides the window depending on the given flag.\n * \n * Parameters:\n * \n * visible - Boolean indicating if the window should be made visible.\n */\nmxWindow.prototype.setVisible = function(visible)\n{\n\tif (this.div != null && this.isVisible() != visible)\n\t{\n\t\tif (visible)\n\t\t{\n\t\t\tthis.show();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.hide();\n\t\t}\n\t}\n};\n\n/**\n * Function: show\n *\n * Shows the window.\n */\nmxWindow.prototype.show = function()\n{\n\tthis.div.style.display = '';\n\tthis.activate();\n\t\n\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\n\tif (!mxClient.IS_QUIRKS && (style.overflow == 'auto' || this.resize != null) &&\n\t\tthis.contentWrapper.style.display != 'none')\n\t{\n\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SHOW));\n};\n\n/**\n * Function: hide\n *\n * Hides the window.\n */\nmxWindow.prototype.hide = function()\n{\n\tthis.div.style.display = 'none';\n\tthis.fireEvent(new mxEventObject(mxEvent.HIDE));\n};\n\n/**\n * Function: destroy\n *\n * Destroys the window and removes all associated resources. Fires a\n * <destroy> event prior to destroying the window.\n */\nmxWindow.prototype.destroy = function()\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.DESTROY));\n\t\n\tif (this.div != null)\n\t{\n\t\tmxEvent.release(this.div);\n\t\tthis.div.parentNode.removeChild(this.div);\n\t\tthis.div = null;\n\t}\n\t\n\tthis.title = null;\n\tthis.content = null;\n\tthis.contentWrapper = null;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxForm\n * \n * A simple class for creating HTML forms.\n * \n * Constructor: mxForm\n * \n * Creates a HTML table using the specified classname.\n */\nfunction mxForm(className)\n{\n\tthis.table = document.createElement('table');\n\tthis.table.className = className;\n\tthis.body = document.createElement('tbody');\n\t\n\tthis.table.appendChild(this.body);\n};\n\n/**\n * Variable: table\n * \n * Holds the DOM node that represents the table.\n */\nmxForm.prototype.table = null;\n\n/**\n * Variable: body\n * \n * Holds the DOM node that represents the tbody (table body). New rows\n * can be added to this object using DOM API.\n */\nmxForm.prototype.body = false;\n\n/**\n * Function: getTable\n * \n * Returns the table that contains this form.\n */\nmxForm.prototype.getTable = function()\n{\n\treturn this.table;\n};\n\n/**\n * Function: addButtons\n * \n * Helper method to add an OK and Cancel button using the respective\n * functions.\n */\nmxForm.prototype.addButtons = function(okFunct, cancelFunct)\n{\n\tvar tr = document.createElement('tr');\n\tvar td = document.createElement('td');\n\ttr.appendChild(td);\n\ttd = document.createElement('td');\n\n\t// Adds the ok button\n\tvar button = document.createElement('button');\n\tmxUtils.write(button, mxResources.get('ok') || 'OK');\n\ttd.appendChild(button);\n\n\tmxEvent.addListener(button, 'click', function()\n\t{\n\t\tokFunct();\n\t});\n\t\n\t// Adds the cancel button\n\tbutton = document.createElement('button');\n\tmxUtils.write(button, mxResources.get('cancel') || 'Cancel');\n\ttd.appendChild(button);\n\t\n\tmxEvent.addListener(button, 'click', function()\n\t{\n\t\tcancelFunct();\n\t});\n\t\n\ttr.appendChild(td);\n\tthis.body.appendChild(tr);\n};\n\n/**\n * Function: addText\n * \n * Adds an input for the given name, type and value and returns it.\n */\nmxForm.prototype.addText = function(name, value, type)\n{\n\tvar input = document.createElement('input');\n\t\n\tinput.setAttribute('type', type || 'text');\n\tinput.value = value;\n\t\n\treturn this.addField(name, input);\n};\n\n/**\n * Function: addCheckbox\n * \n * Adds a checkbox for the given name and value and returns the textfield.\n */\nmxForm.prototype.addCheckbox = function(name, value)\n{\n\tvar input = document.createElement('input');\n\t\n\tinput.setAttribute('type', 'checkbox');\n\tthis.addField(name, input);\n\n\t// IE can only change the checked value if the input is inside the DOM\n\tif (value)\n\t{\n\t\tinput.checked = true;\n\t}\n\n\treturn input;\n};\n\n/**\n * Function: addTextarea\n * \n * Adds a textarea for the given name and value and returns the textarea.\n */\nmxForm.prototype.addTextarea = function(name, value, rows)\n{\n\tvar input = document.createElement('textarea');\n\t\n\tif (mxClient.IS_NS)\n\t{\n\t\trows--;\n\t}\n\t\n\tinput.setAttribute('rows', rows || 2);\n\tinput.value = value;\n\t\n\treturn this.addField(name, input);\n};\n\n/**\n * Function: addCombo\n * \n * Adds a combo for the given name and returns the combo.\n */\nmxForm.prototype.addCombo = function(name, isMultiSelect, size)\n{\n\tvar select = document.createElement('select');\n\t\n\tif (size != null)\n\t{\n\t\tselect.setAttribute('size', size);\n\t}\n\t\n\tif (isMultiSelect)\n\t{\n\t\tselect.setAttribute('multiple', 'true');\n\t}\n\t\n\treturn this.addField(name, select);\n};\n\n/**\n * Function: addOption\n * \n * Adds an option for the given label to the specified combo.\n */\nmxForm.prototype.addOption = function(combo, label, value, isSelected)\n{\n\tvar option = document.createElement('option');\n\t\n\tmxUtils.writeln(option, label);\n\toption.setAttribute('value', value);\n\t\n\tif (isSelected)\n\t{\n\t\toption.setAttribute('selected', isSelected);\n\t}\n\t\n\tcombo.appendChild(option);\n};\n\n/**\n * Function: addField\n * \n * Adds a new row with the name and the input field in two columns and\n * returns the given input.\n */\nmxForm.prototype.addField = function(name, input)\n{\n\tvar tr = document.createElement('tr');\n\tvar td = document.createElement('td');\n\tmxUtils.write(td, name);\n\ttr.appendChild(td);\n\t\n\ttd = document.createElement('td');\n\ttd.appendChild(input);\n\ttr.appendChild(td);\n\tthis.body.appendChild(tr);\n\t\n\treturn input;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImage\n *\n * Encapsulates the URL, width and height of an image.\n * \n * Constructor: mxImage\n * \n * Constructs a new image.\n */\nfunction mxImage(src, width, height)\n{\n\tthis.src = src;\n\tthis.width = width;\n\tthis.height = height;\n};\n\n/**\n * Variable: src\n *\n * String that specifies the URL of the image.\n */\nmxImage.prototype.src = null;\n\n/**\n * Variable: width\n *\n * Integer that specifies the width of the image.\n */\nmxImage.prototype.width = null;\n\n/**\n * Variable: height\n *\n * Integer that specifies the height of the image.\n */\nmxImage.prototype.height = null;\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDivResizer\n * \n * Maintains the size of a div element in Internet Explorer. This is a\n * workaround for the right and bottom style being ignored in IE.\n * \n * If you need a div to cover the scrollwidth and -height of a document,\n * then you can use this class as follows:\n * \n * (code)\n * var resizer = new mxDivResizer(background);\n * resizer.getDocumentHeight = function()\n * {\n *   return document.body.scrollHeight;\n * }\n * resizer.getDocumentWidth = function()\n * {\n *   return document.body.scrollWidth;\n * }\n * resizer.resize();\n * (end)\n * \n * Constructor: mxDivResizer\n * \n * Constructs an object that maintains the size of a div\n * element when the window is being resized. This is only\n * required for Internet Explorer as it ignores the respective\n * stylesheet information for DIV elements.\n * \n * Parameters:\n * \n * div - Reference to the DOM node whose size should be maintained.\n * container - Optional Container that contains the div. Default is the\n * window.\n */\nfunction mxDivResizer(div, container)\n{\n\tif (div.nodeName.toLowerCase() == 'div')\n\t{\n\t\tif (container == null)\n\t\t{\n\t\t\tcontainer = window;\n\t\t}\n\n\t\tthis.div = div;\n\t\tvar style = mxUtils.getCurrentStyle(div);\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tthis.resizeWidth = style.width == 'auto';\n\t\t\tthis.resizeHeight = style.height == 'auto';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(container, 'resize',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (!this.handlingResize)\n\t\t\t\t{\n\t\t\t\t\tthis.handlingResize = true;\n\t\t\t\t\tthis.resize();\n\t\t\t\t\tthis.handlingResize = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\t\n\t\tthis.resize();\n\t}\n};\n\n/**\n * Function: resizeWidth\n * \n * Boolean specifying if the width should be updated.\n */\nmxDivResizer.prototype.resizeWidth = true;\n\n/**\n * Function: resizeHeight\n * \n * Boolean specifying if the height should be updated.\n */\nmxDivResizer.prototype.resizeHeight = true;\n\n/**\n * Function: handlingResize\n * \n * Boolean specifying if the width should be updated.\n */\nmxDivResizer.prototype.handlingResize = false;\n\n/**\n * Function: resize\n * \n * Updates the style of the DIV after the window has been resized.\n */\nmxDivResizer.prototype.resize = function()\n{\n\tvar w = this.getDocumentWidth();\n\tvar h = this.getDocumentHeight();\n\n\tvar l = parseInt(this.div.style.left);\n\tvar r = parseInt(this.div.style.right);\n\tvar t = parseInt(this.div.style.top);\n\tvar b = parseInt(this.div.style.bottom);\n\t\n\tif (this.resizeWidth &&\n\t\t!isNaN(l) &&\n\t\t!isNaN(r) &&\n\t\tl >= 0 &&\n\t\tr >= 0 &&\n\t\tw - r - l > 0)\n\t{\n\t\tthis.div.style.width = (w - r - l)+'px';\n\t}\n\t\n\tif (this.resizeHeight &&\n\t\t!isNaN(t) &&\n\t\t!isNaN(b) &&\n\t\tt >= 0 &&\n\t\tb >= 0 &&\n\t\th - t - b > 0)\n\t{\n\t\tthis.div.style.height = (h - t - b)+'px';\n\t}\n};\n\n/**\n * Function: getDocumentWidth\n * \n * Hook for subclassers to return the width of the document (without\n * scrollbars).\n */\nmxDivResizer.prototype.getDocumentWidth = function()\n{\n\treturn document.body.clientWidth;\n};\n\n/**\n * Function: getDocumentHeight\n * \n * Hook for subclassers to return the height of the document (without\n * scrollbars).\n */\nmxDivResizer.prototype.getDocumentHeight = function()\n{\n\treturn document.body.clientHeight;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDragSource\n * \n * Wrapper to create a drag source from a DOM element so that the element can\n * be dragged over a graph and dropped into the graph as a new cell.\n * \n * Problem is that in the dropHandler the current preview location is not\n * available, so the preview and the dropHandler must match.\n * \n * Constructor: mxDragSource\n * \n * Constructs a new drag source for the given element.\n */\nfunction mxDragSource(element, dropHandler)\n{\n\tthis.element = element;\n\tthis.dropHandler = dropHandler;\n\t\n\t// Handles a drag gesture on the element\n\tmxEvent.addGestureListeners(element, mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseDown(evt);\n\t}));\n\t\n\t// Prevents native drag and drop\n\tmxEvent.addListener(element, 'dragstart', function(evt)\n\t{\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tthis.eventConsumer = function(sender, evt)\n\t{\n\t\tvar evtName = evt.getProperty('eventName');\n\t\tvar me = evt.getProperty('event');\n\t\t\n\t\tif (evtName != mxEvent.MOUSE_DOWN)\n\t\t{\n\t\t\tme.consume();\n\t\t}\n\t};\n};\n\n/**\n * Variable: element\n *\n * Reference to the DOM node which was made draggable.\n */\nmxDragSource.prototype.element = null;\n\n/**\n * Variable: dropHandler\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dropHandler = null;\n\n/**\n * Variable: dragOffset\n *\n * <mxPoint> that specifies the offset of the <dragElement>. Default is null.\n */\nmxDragSource.prototype.dragOffset = null;\n\n/**\n * Variable: dragElement\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dragElement = null;\n\n/**\n * Variable: previewElement\n *\n * Optional <mxRectangle> that specifies the unscaled size of the preview.\n */\nmxDragSource.prototype.previewElement = null;\n\n/**\n * Variable: enabled\n *\n * Specifies if this drag source is enabled. Default is true.\n */\nmxDragSource.prototype.enabled = true;\n\n/**\n * Variable: currentGraph\n *\n * Reference to the <mxGraph> that is the current drop target.\n */\nmxDragSource.prototype.currentGraph = null;\n\n/**\n * Variable: currentDropTarget\n *\n * Holds the current drop target under the mouse.\n */\nmxDragSource.prototype.currentDropTarget = null;\n\n/**\n * Variable: currentPoint\n *\n * Holds the current drop location.\n */\nmxDragSource.prototype.currentPoint = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentGuide = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentHighlight = null;\n\n/**\n * Variable: autoscroll\n *\n * Specifies if the graph should scroll automatically. Default is true.\n */\nmxDragSource.prototype.autoscroll = true;\n\n/**\n * Variable: guidesEnabled\n *\n * Specifies if <mxGuide> should be enabled. Default is true.\n */\nmxDragSource.prototype.guidesEnabled = true;\n\n/**\n * Variable: gridEnabled\n *\n * Specifies if the grid should be allowed. Default is true.\n */\nmxDragSource.prototype.gridEnabled = true;\n\n/**\n * Variable: highlightDropTargets\n *\n * Specifies if drop targets should be highlighted. Default is true.\n */\nmxDragSource.prototype.highlightDropTargets = true;\n\n/**\n * Variable: dragElementZIndex\n * \n * ZIndex for the drag element. Default is 100.\n */\nmxDragSource.prototype.dragElementZIndex = 100;\n\n/**\n * Variable: dragElementOpacity\n * \n * Opacity of the drag element in %. Default is 70.\n */\nmxDragSource.prototype.dragElementOpacity = 70;\n\n/**\n * Variable: checkEventSource\n * \n * Whether the event source should be checked in <graphContainerEvent>. Default\n * is true.\n */\nmxDragSource.prototype.checkEventSource = true;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxDragSource.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxDragSource.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isGuidesEnabled\n * \n * Returns <guidesEnabled>.\n */\nmxDragSource.prototype.isGuidesEnabled = function()\n{\n\treturn this.guidesEnabled;\n};\n\n/**\n * Function: setGuidesEnabled\n * \n * Sets <guidesEnabled>.\n */\nmxDragSource.prototype.setGuidesEnabled = function(value)\n{\n\tthis.guidesEnabled = value;\n};\n\n/**\n * Function: isGridEnabled\n * \n * Returns <gridEnabled>.\n */\nmxDragSource.prototype.isGridEnabled = function()\n{\n\treturn this.gridEnabled;\n};\n\n/**\n * Function: setGridEnabled\n * \n * Sets <gridEnabled>.\n */\nmxDragSource.prototype.setGridEnabled = function(value)\n{\n\tthis.gridEnabled = value;\n};\n\n/**\n * Function: getGraphForEvent\n * \n * Returns the graph for the given mouse event. This implementation returns\n * null.\n */\nmxDragSource.prototype.getGraphForEvent = function(evt)\n{\n\treturn null;\n};\n\n/**\n * Function: getDropTarget\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.getDropTarget = function(graph, x, y, evt)\n{\n\treturn graph.getCellAt(x, y);\n};\n\n/**\n * Function: createDragElement\n * \n * Creates and returns a clone of the <dragElementPrototype> or the <element>\n * if the former is not defined.\n */\nmxDragSource.prototype.createDragElement = function(evt)\n{\n\treturn this.element.cloneNode(true);\n};\n\n/**\n * Function: createPreviewElement\n * \n * Creates and returns an element which can be used as a preview in the given\n * graph.\n */\nmxDragSource.prototype.createPreviewElement = function(graph)\n{\n\treturn null;\n};\n\n/**\n * Function: isActive\n * \n * Returns true if this drag source is active.\n */\nmxDragSource.prototype.isActive = function()\n{\n\treturn this.mouseMoveHandler != null;\n};\n\n/**\n * Function: reset\n * \n * Stops and removes everything and restores the state of the object.\n */\nmxDragSource.prototype.reset = function()\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\t\n\tthis.removeDragElement();\n\tthis.removeListeners();\n\tthis.stopDrag();\n};\n\n/**\n * Function: mouseDown\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n * \n * To ignore popup menu events for a drag source, this function can be\n * overridden as follows.\n * \n * (code)\n * var mouseDown = dragSource.mouseDown;\n * \n * dragSource.mouseDown = function(evt)\n * {\n *   if (!mxEvent.isPopupTrigger(evt))\n *   {\n *     mouseDown.apply(this, arguments);\n *   }\n * };\n * (end)\n */\nmxDragSource.prototype.mouseDown = function(evt)\n{\n\tif (this.enabled && !mxEvent.isConsumed(evt) && this.mouseMoveHandler == null)\n\t{\n\t\tthis.startDrag(evt);\n\t\tthis.mouseMoveHandler = mxUtils.bind(this, this.mouseMove);\n\t\tthis.mouseUpHandler = mxUtils.bind(this, this.mouseUp);\t\t\n\t\tmxEvent.addGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t\n\t\tif (mxClient.IS_TOUCH && !mxEvent.isMouseEvent(evt))\n\t\t{\n\t\t\tthis.eventSource = mxEvent.getSource(evt);\n\t\t\tmxEvent.addGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t}\n\t}\n};\n\n/**\n * Function: startDrag\n * \n * Creates the <dragElement> using <createDragElement>.\n */\nmxDragSource.prototype.startDrag = function(evt)\n{\n\tthis.dragElement = this.createDragElement(evt);\n\tthis.dragElement.style.position = 'absolute';\n\tthis.dragElement.style.zIndex = this.dragElementZIndex;\n\tmxUtils.setOpacity(this.dragElement, this.dragElementOpacity);\n\n\tif (this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.dragElement.style.pointerEvents = 'none';\n\t}\n};\n\n/**\n * Function: stopDrag\n * \n * Invokes <removeDragElement>.\n */\nmxDragSource.prototype.stopDrag = function()\n{\n\t// LATER: This used to have a mouse event. If that is still needed we need to add another\n\t// final call to the DnD protocol to add a cleanup step in the case of escape press, which\n\t// is not associated with a mouse event and which currently calles this method.\n\tthis.removeDragElement();\n};\n\n/**\n * Function: removeDragElement\n * \n * Removes and destroys the <dragElement>.\n */\nmxDragSource.prototype.removeDragElement = function()\n{\n\tif (this.dragElement != null)\n\t{\n\t\tif (this.dragElement.parentNode != null)\n\t\t{\n\t\t\tthis.dragElement.parentNode.removeChild(this.dragElement);\n\t\t}\n\t\t\n\t\tthis.dragElement = null;\n\t}\n};\n\n/**\n * Function: getElementForEvent\n * \n * Returns the topmost element under the given event.\n */\nmxDragSource.prototype.getElementForEvent = function(evt)\n{\n\treturn ((mxEvent.isTouchEvent(evt) || mxEvent.isPenEvent(evt)) ?\n\t\t\tdocument.elementFromPoint(mxEvent.getClientX(evt), mxEvent.getClientY(evt)) :\n\t\t\t\tmxEvent.getSource(evt));\n};\n\n/**\n * Function: graphContainsEvent\n * \n * Returns true if the given graph contains the given event.\n */\nmxDragSource.prototype.graphContainsEvent = function(graph, evt)\n{\n\tvar x = mxEvent.getClientX(evt);\n\tvar y = mxEvent.getClientY(evt);\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin();\n\tvar elt = this.getElementForEvent(evt);\n\t\n\tif (this.checkEventSource)\n\t{\n\t\twhile (elt != null && elt != graph.container)\n\t\t{\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\n\t// Checks if event is inside the bounds of the graph container\n\treturn elt != null && x >= offset.x - origin.x && y >= offset.y - origin.y &&\n\t\tx <= offset.x - origin.x + graph.container.offsetWidth &&\n\t\ty <= offset.y - origin.y + graph.container.offsetHeight;\n};\n\n/**\n * Function: mouseMove\n * \n * Gets the graph for the given event using <getGraphForEvent>, updates the\n * <currentGraph>, calling <dragEnter> and <dragExit> on the new and old graph,\n * respectively, and invokes <dragOver> if <currentGraph> is not null.\n */\nmxDragSource.prototype.mouseMove = function(evt)\n{\n\tvar graph = this.getGraphForEvent(evt);\n\t\n\t// Checks if event is inside the bounds of the graph container\n\tif (graph != null && !this.graphContainsEvent(graph, evt))\n\t{\n\t\tgraph = null;\n\t}\n\n\tif (graph != this.currentGraph)\n\t{\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragExit(this.currentGraph, evt);\n\t\t}\n\t\t\n\t\tthis.currentGraph = graph;\n\t\t\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragEnter(this.currentGraph, evt);\n\t\t}\n\t}\n\t\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragOver(this.currentGraph, evt);\n\t}\n\n\tif (this.dragElement != null && (this.previewElement == null || this.previewElement.style.visibility != 'visible'))\n\t{\n\t\tvar x = mxEvent.getClientX(evt);\n\t\tvar y = mxEvent.getClientY(evt);\n\t\t\n\t\tif (this.dragElement.parentNode == null)\n\t\t{\n\t\t\tdocument.body.appendChild(this.dragElement);\n\t\t}\n\n\t\tthis.dragElement.style.visibility = 'visible';\n\t\t\n\t\tif (this.dragOffset != null)\n\t\t{\n\t\t\tx += this.dragOffset.x;\n\t\t\ty += this.dragOffset.y;\n\t\t}\n\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(document);\n\t\t\n\t\tthis.dragElement.style.left = (x + offset.x) + 'px';\n\t\tthis.dragElement.style.top = (y + offset.y) + 'px';\n\t}\n\telse if (this.dragElement != null)\n\t{\n\t\tthis.dragElement.style.visibility = 'hidden';\n\t}\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: mouseUp\n * \n * Processes the mouse up event and invokes <drop>, <dragExit> and <stopDrag>\n * as required.\n */\nmxDragSource.prototype.mouseUp = function(evt)\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tif (this.currentPoint != null && (this.previewElement == null ||\n\t\t\tthis.previewElement.style.visibility != 'hidden'))\n\t\t{\n\t\t\tvar scale = this.currentGraph.view.scale;\n\t\t\tvar tr = this.currentGraph.view.translate;\n\t\t\tvar x = this.currentPoint.x / scale - tr.x;\n\t\t\tvar y = this.currentPoint.y / scale - tr.y;\n\t\t\t\n\t\t\tthis.drop(this.currentGraph, evt, this.currentDropTarget, x, y);\n\t\t}\n\t\t\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\n\tthis.stopDrag();\n\tthis.removeListeners();\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: removeListeners\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.removeListeners = function()\n{\n\tif (this.eventSource != null)\n\t{\n\t\tmxEvent.removeGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\tthis.eventSource = null;\n\t}\n\t\n\tmxEvent.removeGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\tthis.mouseMoveHandler = null;\n\tthis.mouseUpHandler = null;\n};\n\n/**\n * Function: dragEnter\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.dragEnter = function(graph, evt)\n{\n\tgraph.isMouseDown = true;\n\tgraph.isMouseTrigger = mxEvent.isMouseEvent(evt);\n\tthis.previewElement = this.createPreviewElement(graph);\n\t\n\tif (this.previewElement != null && this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.previewElement.style.pointerEvents = 'none';\n\t}\n\t\n\t// Guide is only needed if preview element is used\n\tif (this.isGuidesEnabled() && this.previewElement != null)\n\t{\n\t\tthis.currentGuide = new mxGuide(graph, graph.graphHandler.getGuideStates());\n\t}\n\t\n\tif (this.highlightDropTargets)\n\t{\n\t\tthis.currentHighlight = new mxCellHighlight(graph, mxConstants.DROP_TARGET_COLOR);\n\t}\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.eventConsumer);\n};\n\n/**\n * Function: dragExit\n * \n * Deactivates the given graph as a drop target.\n */\nmxDragSource.prototype.dragExit = function(graph, evt)\n{\n\tthis.currentDropTarget = null;\n\tthis.currentPoint = null;\n\tgraph.isMouseDown = false;\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.removeListener(this.eventConsumer);\n\t\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode != null)\n\t\t{\n\t\t\tthis.previewElement.parentNode.removeChild(this.previewElement);\n\t\t}\n\t\t\n\t\tthis.previewElement = null;\n\t}\n\t\n\tif (this.currentGuide != null)\n\t{\n\t\tthis.currentGuide.destroy();\n\t\tthis.currentGuide = null;\n\t}\n\t\n\tif (this.currentHighlight != null)\n\t{\n\t\tthis.currentHighlight.destroy();\n\t\tthis.currentHighlight = null;\n\t}\n};\n\n/**\n * Function: dragOver\n * \n * Implements autoscroll, updates the <currentPoint>, highlights any drop\n * targets and updates the preview.\n */\nmxDragSource.prototype.dragOver = function(graph, evt)\n{\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin(graph.container);\n\tvar x = mxEvent.getClientX(evt) - offset.x + origin.x - graph.panDx;\n\tvar y = mxEvent.getClientY(evt) - offset.y + origin.y - graph.panDy;\n\n\tif (graph.autoScroll && (this.autoscroll == null || this.autoscroll))\n\t{\n\t\tgraph.scrollPointToVisible(x, y, graph.autoExtend);\n\t}\n\n\t// Highlights the drop target under the mouse\n\tif (this.currentHighlight != null && graph.isDropEnabled())\n\t{\n\t\tthis.currentDropTarget = this.getDropTarget(graph, x, y, evt);\n\t\tvar state = graph.getView().getState(this.currentDropTarget);\n\t\tthis.currentHighlight.highlight(state);\n\t}\n\n\t// Updates the location of the preview\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode == null)\n\t\t{\n\t\t\tgraph.container.appendChild(this.previewElement);\n\t\t\t\n\t\t\tthis.previewElement.style.zIndex = '3';\n\t\t\tthis.previewElement.style.position = 'absolute';\n\t\t}\n\t\t\n\t\tvar gridEnabled = this.isGridEnabled() && graph.isGridEnabledEvent(evt);\n\t\tvar hideGuide = true;\n\n\t\t// Grid and guides\n\t\tif (this.currentGuide != null && this.currentGuide.isEnabledForEvent(evt))\n\t\t{\n\t\t\t// LATER: HTML preview appears smaller than SVG preview\n\t\t\tvar w = parseInt(this.previewElement.style.width);\n\t\t\tvar h = parseInt(this.previewElement.style.height);\n\t\t\tvar bounds = new mxRectangle(0, 0, w, h);\n\t\t\tvar delta = new mxPoint(x, y);\n\t\t\tdelta = this.currentGuide.move(bounds, delta, gridEnabled, true);\n\t\t\thideGuide = false;\n\t\t\tx = delta.x;\n\t\t\ty = delta.y;\n\t\t}\n\t\telse if (gridEnabled)\n\t\t{\n\t\t\tvar scale = graph.view.scale;\n\t\t\tvar tr = graph.view.translate;\n\t\t\tvar off = graph.gridSize / 2;\n\t\t\tx = (graph.snap(x / scale - tr.x - off) + tr.x) * scale;\n\t\t\ty = (graph.snap(y / scale - tr.y - off) + tr.y) * scale;\n\t\t}\n\t\t\n\t\tif (this.currentGuide != null && hideGuide)\n\t\t{\n\t\t\tthis.currentGuide.hide();\n\t\t}\n\t\t\n\t\tif (this.previewOffset != null)\n\t\t{\n\t\t\tx += this.previewOffset.x;\n\t\t\ty += this.previewOffset.y;\n\t\t}\n\n\t\tthis.previewElement.style.left = Math.round(x) + 'px';\n\t\tthis.previewElement.style.top = Math.round(y) + 'px';\n\t\tthis.previewElement.style.visibility = 'visible';\n\t}\n\t\n\tthis.currentPoint = new mxPoint(x, y);\n};\n\n/**\n * Function: drop\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.drop = function(graph, evt, dropTarget, x, y)\n{\n\tthis.dropHandler.apply(this, arguments);\n\t\n\t// Had to move this to after the insert because it will\n\t// affect the scrollbars of the window in IE to try and\n\t// make the complete container visible.\n\t// LATER: Should be made optional.\n\tif (graph.container.style.visibility != 'hidden')\n\t{\n\t\tgraph.container.focus();\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxToolbar\n * \n * Creates a toolbar inside a given DOM node. The toolbar may contain icons,\n * buttons and combo boxes.\n * \n * Event: mxEvent.SELECT\n * \n * Fires when an item was selected in the toolbar. The <code>function</code>\n * property contains the function that was selected in <selectMode>.\n * \n * Constructor: mxToolbar\n * \n * Constructs a toolbar in the specified container.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n */\nfunction mxToolbar(container)\n{\n\tthis.container = container;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxToolbar.prototype = new mxEventSource();\nmxToolbar.prototype.constructor = mxToolbar;\n\n/**\n * Variable: container\n * \n * Reference to the DOM nodes that contains the toolbar.\n */\nmxToolbar.prototype.container = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxToolbar.prototype.enabled = true;\n\n/**\n * Variable: noReset\n * \n * Specifies if <resetMode> requires a forced flag of true for resetting\n * the current mode in the toolbar. Default is false. This is set to true\n * if the toolbar item is double clicked to avoid a reset after a single\n * use of the item.\n */\nmxToolbar.prototype.noReset = false;\n\n/**\n * Variable: updateDefaultMode\n * \n * Boolean indicating if the default mode should be the last selected\n * switch mode or the first inserted switch mode. Default is true, that\n * is the last selected switch mode is the default mode. The default mode\n * is the mode to be selected after a reset of the toolbar. If this is\n * false, then the default mode is the first inserted mode item regardless\n * of what was last selected. Otherwise, the selected item after a reset is\n * the previously selected item.\n */\nmxToolbar.prototype.updateDefaultMode = true;\n\n/**\n * Function: addItem\n * \n * Adds the given function as an image with the specified title and icon\n * and returns the new image node.\n * \n * Parameters:\n * \n * title - Optional string that is used as the tooltip.\n * icon - Optional URL of the image to be used. If no URL is given, then a\n * button is created.\n * funct - Function to execute on a mouse click.\n * pressedIcon - Optional URL of the pressed image. Default is a gray\n * background.\n * style - Optional style classname. Default is mxToolbarItem.\n * factoryMethod - Optional factory method for popup menu, eg.\n * function(menu, evt, cell) { menu.addItem('Hello, World!'); }\n */\nmxToolbar.prototype.addItem = function(title, icon, funct, pressedIcon, style, factoryMethod)\n{\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\tvar initialClassName = style || ((factoryMethod != null) ?\n\t\t\t'mxToolbarMode' : 'mxToolbarItem');\n\timg.className = initialClassName;\n\timg.setAttribute('src', icon);\n\t\n\tif (title != null)\n\t{\n\t\tif (icon != null)\n\t\t{\n\t\t\timg.setAttribute('title', title);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.write(img, title);\n\t\t}\n\t}\n\t\n\tthis.container.appendChild(img);\n\n\t// Invokes the function on a click on the toolbar item\n\tif (funct != null)\n\t{\n\t\tmxEvent.addListener(img, 'click', funct);\n\t\t\n\t\tif (mxClient.IS_TOUCH)\n\t\t{\n\t\t\tmxEvent.addListener(img, 'touchend', funct);\n\t\t}\n\t}\n\n\tvar mouseHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', icon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = '';\n\t\t}\n\t});\n\n\t// Highlights the toolbar item with a gray background\n\t// while it is being clicked with the mouse\n\tmxEvent.addGestureListeners(img, mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', pressedIcon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = 'gray';\n\t\t}\n\t\t\n\t\t// Popup Menu\n\t\tif (factoryMethod != null)\n\t\t{\n\t\t\tif (this.menu == null)\n\t\t\t{\n\t\t\t\tthis.menu = new mxPopupMenu();\n\t\t\t\tthis.menu.init();\n\t\t\t}\n\t\t\t\n\t\t\tvar last = this.currentImg;\n\t\t\t\n\t\t\tif (this.menu.isMenuShowing())\n\t\t\t{\n\t\t\t\tthis.menu.hideMenu();\n\t\t\t}\n\t\t\t\n\t\t\tif (last != img)\n\t\t\t{\n\t\t\t\t// Redirects factory method to local factory method\n\t\t\t\tthis.currentImg = img;\n\t\t\t\tthis.menu.factoryMethod = factoryMethod;\n\t\t\t\t\n\t\t\t\tvar point = new mxPoint(\n\t\t\t\t\timg.offsetLeft,\n\t\t\t\t\timg.offsetTop + img.offsetHeight);\n\t\t\t\tthis.menu.popup(point.x, point.y, null, evt);\n\n\t\t\t\t// Sets and overrides to restore classname\n\t\t\t\tif (this.menu.isMenuShowing())\n\t\t\t\t{\n\t\t\t\t\timg.className = initialClassName + 'Selected';\n\t\t\t\t\t\n\t\t\t\t\tthis.menu.hideMenu = function()\n\t\t\t\t\t{\n\t\t\t\t\t\tmxPopupMenu.prototype.hideMenu.apply(this);\n\t\t\t\t\t\timg.className = initialClassName;\n\t\t\t\t\t\tthis.currentImg = null;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}), null, mouseHandler);\n\n\tmxEvent.addListener(img, 'mouseout', mouseHandler);\n\t\n\treturn img;\n};\n\n/**\n * Function: addCombo\n * \n * Adds and returns a new SELECT element using the given style. The element\n * is placed inside a DIV with the mxToolbarComboContainer style classname.\n * \n * Parameters:\n * \n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addCombo = function(style)\n{\n\tvar div = document.createElement('div');\n\tdiv.style.display = 'inline';\n\tdiv.className = 'mxToolbarComboContainer';\n\t\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tdiv.appendChild(select);\n\t\n\tthis.container.appendChild(div);\n\t\n\treturn select;\n};\n\n/**\n * Function: addCombo\n * \n * Adds and returns a new SELECT element using the given title as the\n * default element. The selection is reset to this element after each\n * change.\n * \n * Parameters:\n * \n * title - String that specifies the title of the default element.\n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addActionCombo = function(title, style)\n{\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tthis.addOption(select, title, null);\n\t\n\tmxEvent.addListener(select, 'change', function(evt)\n\t{\n\t\tvar value = select.options[select.selectedIndex];\n\t\tselect.selectedIndex = 0;\n\t\t\n\t\tif (value.funct != null)\n\t\t{\n\t\t\tvalue.funct(evt);\n\t\t}\n\t});\n\t\n\tthis.container.appendChild(select);\n\t\n\treturn select;\n};\n\n/**\n * Function: addOption\n * \n * Adds and returns a new OPTION element inside the given SELECT element.\n * If the given value is a function then it is stored in the option's funct\n * field.\n * \n * Parameters:\n * \n * combo - SELECT element that will contain the new entry.\n * title - String that specifies the title of the option.\n * value - Specifies the value associated with this option.\n */\nmxToolbar.prototype.addOption = function(combo, title, value)\n{\n\tvar option = document.createElement('option');\n\tmxUtils.writeln(option, title);\n\t\n\tif (typeof(value) == 'function')\n\t{\n\t\toption.funct = value;\n\t}\n\telse\n\t{\n\t\toption.setAttribute('value', value);\n\t}\n\t\n\tcombo.appendChild(option);\n\t\n\treturn option;\n};\n\n/**\n * Function: addSwitchMode\n * \n * Adds a new selectable item to the toolbar. Only one switch mode item may\n * be selected at a time. The currently selected item is the default item\n * after a reset of the toolbar.\n */\nmxToolbar.prototype.addSwitchMode = function(title, icon, funct, pressedIcon, style)\n{\n\tvar img = document.createElement('img');\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\t\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t{\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t}\n\t\t\n\t\tif (this.updateDefaultMode)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t}\n\t\t\n\t\tthis.selectedMode = img;\n\t\t\n\t\tvar tmp = img.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\timg.altIcon = img.getAttribute('src');\n\t\t\timg.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.className = img.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT));\n\t\tfunct();\n\t}));\n\t\n\tthis.container.appendChild(img);\n\t\n\tif (this.defaultMode == null)\n\t{\n\t\tthis.defaultMode = img;\n\t\t\n\t\t// Function should fire only once so\n\t\t// do not pass it with the select event\n\t\tthis.selectMode(img);\n\t\tfunct();\n\t}\n\t\n\treturn img;\n};\n\n/**\n * Function: addMode\n * \n * Adds a new item to the toolbar. The selection is typically reset after\n * the item has been consumed, for example by adding a new vertex to the\n * graph. The reset is not carried out if the item is double clicked.\n * \n * The function argument uses the following signature: funct(evt, cell) where\n * evt is the native mouse event and cell is the cell under the mouse.\n */\nmxToolbar.prototype.addMode = function(title, icon, funct, pressedIcon, style, toggle)\n{\n\ttoggle = (toggle != null) ? toggle : true;\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\t\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tif (this.enabled && toggle)\n\t{\n\t\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = false;\n\t\t}));\n\t\t\n\t\tmxEvent.addListener(img, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = true;\n\t\t}));\n\t\t\n\t\tif (this.defaultMode == null)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t\tthis.defaultFunction = funct;\n\t\t\tthis.selectMode(img, funct);\n\t\t}\n\t}\n\n\tthis.container.appendChild(img);\t\t\t\t\t\n\n\treturn img;\n};\n\n/**\n * Function: selectMode\n * \n * Resets the state of the previously selected mode and displays the given\n * DOM node as selected. This function fires a select event with the given\n * function as a parameter.\n */\nmxToolbar.prototype.selectMode = function(domNode, funct)\n{\n\tif (this.selectedMode != domNode)\n\t{\n\t\tif (this.selectedMode != null)\n\t\t{\n\t\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.selectedMode = domNode;\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT, \"function\", funct));\n\t}\n};\n\n/**\n * Function: resetMode\n * \n * Selects the default mode and resets the state of the previously selected\n * mode.\n */\nmxToolbar.prototype.resetMode = function(forced)\n{\n\tif ((forced || !this.noReset) && this.selectedMode != this.defaultMode)\n\t{\n\t\t// The last selected switch mode will be activated\n\t\t// so the function was already executed and is\n\t\t// no longer required here\n\t\tthis.selectMode(this.defaultMode, this.defaultFunction);\n\t}\n};\n\n/**\n * Function: addSeparator\n * \n * Adds the specifies image as a separator.\n * \n * Parameters:\n * \n * icon - URL of the separator icon.\n */\nmxToolbar.prototype.addSeparator = function(icon)\n{\n\treturn this.addItem(null, icon, null);\n};\n\n/**\n * Function: addBreak\n * \n * Adds a break to the container.\n */\nmxToolbar.prototype.addBreak = function()\n{\n\tmxUtils.br(this.container);\n};\n\n/**\n * Function: addLine\n * \n * Adds a horizontal line to the container.\n */\nmxToolbar.prototype.addLine = function()\n{\n\tvar hr = document.createElement('hr');\n\t\n\thr.style.marginRight = '6px';\n\thr.setAttribute('size', '1');\n\t\n\tthis.container.appendChild(hr);\n};\n\n/**\n * Function: destroy\n * \n * Removes the toolbar and all its associated resources.\n */\nmxToolbar.prototype.destroy = function ()\n{\n\tmxEvent.release(this.container);\n\tthis.container = null;\n\tthis.defaultMode = null;\n\tthis.defaultFunction = null;\n\tthis.selectedMode = null;\n\t\n\tif (this.menu != null)\n\t{\n\t\tthis.menu.destroy();\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxUndoableEdit\n * \n * Implements a composite undoable edit. Here is an example for a custom change\n * which gets executed via the model:\n * \n * (code)\n * function CustomChange(model, name)\n * {\n *   this.model = model;\n *   this.name = name;\n *   this.previous = name;\n * };\n * \n * CustomChange.prototype.execute = function()\n * {\n *   var tmp = this.model.name;\n *   this.model.name = this.previous;\n *   this.previous = tmp;\n * };\n * \n * var name = prompt('Enter name');\n * graph.model.execute(new CustomChange(graph.model, name));\n * (end)\n * \n * Event: mxEvent.EXECUTED\n * \n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The <code>change</code> property contains the change that was executed.\n * \n * Event: mxEvent.START_EDIT\n * \n * Fires before a set of changes will be executed in <undo> or <redo>.\n * This event contains no properties.\n * \n * Event: mxEvent.END_EDIT\n *\n * Fires after a set of changeswas executed in <undo> or <redo>.\n * This event contains no properties.\n * \n * Constructor: mxUndoableEdit\n * \n * Constructs a new undoable edit for the given source.\n */\nfunction mxUndoableEdit(source, significant)\n{\n\tthis.source = source;\n\tthis.changes = [];\n\tthis.significant = (significant != null) ? significant : true;\n};\n\n/**\n * Variable: source\n * \n * Specifies the source of the edit.\n */\nmxUndoableEdit.prototype.source = null;\n\n/**\n * Variable: changes\n * \n * Array that contains the changes that make up this edit. The changes are\n * expected to either have an undo and redo function, or an execute\n * function. Default is an empty array.\n */\nmxUndoableEdit.prototype.changes = null;\n\n/**\n * Variable: significant\n * \n * Specifies if the undoable change is significant.\n * Default is true.\n */\nmxUndoableEdit.prototype.significant = null;\n\n/**\n * Variable: undone\n * \n * Specifies if this edit has been undone. Default is false.\n */\nmxUndoableEdit.prototype.undone = false;\n\n/**\n * Variable: redone\n * \n * Specifies if this edit has been redone. Default is false.\n */\nmxUndoableEdit.prototype.redone = false;\n\n/**\n * Function: isEmpty\n * \n * Returns true if the this edit contains no changes.\n */\nmxUndoableEdit.prototype.isEmpty = function()\n{\n\treturn this.changes.length == 0;\n};\n\n/**\n * Function: isSignificant\n * \n * Returns <significant>.\n */\nmxUndoableEdit.prototype.isSignificant = function()\n{\n\treturn this.significant;\n};\n\n/**\n * Function: add\n * \n * Adds the specified change to this edit. The change is an object that is\n * expected to either have an undo and redo, or an execute function.\n */\nmxUndoableEdit.prototype.add = function(change)\n{\n\tthis.changes.push(change);\n};\n\n/**\n * Function: notify\n * \n * Hook to notify any listeners of the changes after an <undo> or <redo>\n * has been carried out. This implementation is empty.\n */\nmxUndoableEdit.prototype.notify = function() { };\n\n/**\n * Function: die\n * \n * Hook to free resources after the edit has been removed from the command\n * history. This implementation is empty.\n */\nmxUndoableEdit.prototype.die = function() { };\n\n/**\n * Function: undo\n * \n * Undoes all changes in this edit.\n */\nmxUndoableEdit.prototype.undo = function()\n{\n\tif (!this.undone)\n\t{\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t\tvar count = this.changes.length;\n\t\t\n\t\tfor (var i = count - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar change = this.changes[i];\n\t\t\t\n\t\t\tif (change.execute != null)\n\t\t\t{\n\t\t\t\tchange.execute();\n\t\t\t}\n\t\t\telse if (change.undo != null)\n\t\t\t{\n\t\t\t\tchange.undo();\n\t\t\t}\n\t\t\t\n\t\t\t// New global executed event\n\t\t\tthis.source.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\t\t}\n\t\t\n\t\tthis.undone = true;\n\t\tthis.redone = false;\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tthis.notify();\n};\n\n/**\n * Function: redo\n * \n * Redoes all changes in this edit.\n */\nmxUndoableEdit.prototype.redo = function()\n{\n\tif (!this.redone)\n\t{\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t\tvar count = this.changes.length;\n\t\t\n\t\tfor (var i = 0; i < count; i++)\n\t\t{\n\t\t\tvar change = this.changes[i];\n\t\t\t\n\t\t\tif (change.execute != null)\n\t\t\t{\n\t\t\t\tchange.execute();\n\t\t\t}\n\t\t\telse if (change.redo != null)\n\t\t\t{\n\t\t\t\tchange.redo();\n\t\t\t}\n\t\t\t\n\t\t\t// New global executed event\n\t\t\tthis.source.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\t\t}\n\t\t\n\t\tthis.undone = false;\n\t\tthis.redone = true;\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tthis.notify();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxUndoManager\n *\n * Implements a command history. When changing the graph model, an\n * <mxUndoableChange> object is created at the start of the transaction (when\n * model.beginUpdate is called). All atomic changes are then added to this\n * object until the last model.endUpdate call, at which point the\n * <mxUndoableEdit> is dispatched in an event, and added to the history inside\n * <mxUndoManager>. This is done by an event listener in\n * <mxEditor.installUndoHandler>.\n * \n * Each atomic change of the model is represented by an object (eg.\n * <mxRootChange>, <mxChildChange>, <mxTerminalChange> etc) which contains the\n * complete undo information. The <mxUndoManager> also listens to the\n * <mxGraphView> and stores it's changes to the current root as insignificant\n * undoable changes, so that drilling (step into, step up) is undone.\n * \n * This means when you execute an atomic change on the model, then change the\n * current root on the view and click undo, the change of the root will be\n * undone together with the change of the model so that the display represents\n * the state at which the model was changed. However, these changes are not\n * transmitted for sharing as they do not represent a state change.\n *\n * Example:\n * \n * When adding an undo manager to a graph, make sure to add it\n * to the model and the view as well to maintain a consistent\n * display across multiple undo/redo steps.\n *\n * (code)\n * var undoManager = new mxUndoManager();\n * var listener = function(sender, evt)\n * {\n *   undoManager.undoableEditHappened(evt.getProperty('edit'));\n * };\n * graph.getModel().addListener(mxEvent.UNDO, listener);\n * graph.getView().addListener(mxEvent.UNDO, listener);\n * (end)\n * \n * The code creates a function that informs the undoManager\n * of an undoable edit and binds it to the undo event of\n * <mxGraphModel> and <mxGraphView> using\n * <mxEventSource.addListener>.\n * \n * Event: mxEvent.CLEAR\n * \n * Fires after <clear> was invoked. This event has no properties.\n * \n * Event: mxEvent.UNDO\n * \n * Fires afer a significant edit was undone in <undo>. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was undone.\n * \n * Event: mxEvent.REDO\n * \n * Fires afer a significant edit was redone in <redo>. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was redone.\n * \n * Event: mxEvent.ADD\n * \n * Fires after an undoable edit was added to the history. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was added.\n * \n * Constructor: mxUndoManager\n *\n * Constructs a new undo manager with the given history size. If no history\n * size is given, then a default size of 100 steps is used.\n */\nfunction mxUndoManager(size)\n{\n\tthis.size = (size != null) ? size : 100;\n\tthis.clear();\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUndoManager.prototype = new mxEventSource();\nmxUndoManager.prototype.constructor = mxUndoManager;\n\n/**\n * Variable: size\n * \n * Maximum command history size. 0 means unlimited history. Default is\n * 100.\n */\nmxUndoManager.prototype.size = null;\n\n/**\n * Variable: history\n * \n * Array that contains the steps of the command history.\n */\nmxUndoManager.prototype.history = null;\n\n/**\n * Variable: indexOfNextAdd\n * \n * Index of the element to be added next.\n */\nmxUndoManager.prototype.indexOfNextAdd = 0;\n\n/**\n * Function: isEmpty\n * \n * Returns true if the history is empty.\n */\nmxUndoManager.prototype.isEmpty = function()\n{\n\treturn this.history.length == 0;\n};\n\n/**\n * Function: clear\n * \n * Clears the command history.\n */\nmxUndoManager.prototype.clear = function()\n{\n\tthis.history = [];\n\tthis.indexOfNextAdd = 0;\n\tthis.fireEvent(new mxEventObject(mxEvent.CLEAR));\n};\n\n/**\n * Function: canUndo\n * \n * Returns true if an undo is possible.\n */\nmxUndoManager.prototype.canUndo = function()\n{\n\treturn this.indexOfNextAdd > 0;\n};\n\n/**\n * Function: undo\n * \n * Undoes the last change.\n */\nmxUndoManager.prototype.undo = function()\n{\n    while (this.indexOfNextAdd > 0)\n    {\n        var edit = this.history[--this.indexOfNextAdd];\n        edit.undo();\n\n\t\tif (edit.isSignificant())\n        {\n        \tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n            break;\n        }\n    }\n};\n\n/**\n * Function: canRedo\n * \n * Returns true if a redo is possible.\n */\nmxUndoManager.prototype.canRedo = function()\n{\n\treturn this.indexOfNextAdd < this.history.length;\n};\n\n/**\n * Function: redo\n * \n * Redoes the last change.\n */\nmxUndoManager.prototype.redo = function()\n{\n    var n = this.history.length;\n    \n    while (this.indexOfNextAdd < n)\n    {\n        var edit =  this.history[this.indexOfNextAdd++];\n        edit.redo();\n        \n        if (edit.isSignificant())\n        {\n        \tthis.fireEvent(new mxEventObject(mxEvent.REDO, 'edit', edit));\n            break;\n        }\n    }\n};\n\n/**\n * Function: undoableEditHappened\n * \n * Method to be called to add new undoable edits to the <history>.\n */\nmxUndoManager.prototype.undoableEditHappened = function(undoableEdit)\n{\n\tthis.trim();\n\t\n\tif (this.size > 0 &&\n\t\tthis.size == this.history.length)\n\t{\n\t\tthis.history.shift();\n\t}\n\t\n\tthis.history.push(undoableEdit);\n\tthis.indexOfNextAdd = this.history.length;\n\tthis.fireEvent(new mxEventObject(mxEvent.ADD, 'edit', undoableEdit));\n};\n\n/**\n * Function: trim\n * \n * Removes all pending steps after <indexOfNextAdd> from the history,\n * invoking die on each edit. This is called from <undoableEditHappened>.\n */\nmxUndoManager.prototype.trim = function()\n{\n\tif (this.history.length > this.indexOfNextAdd)\n\t{\n\t\tvar edits = this.history.splice(this.indexOfNextAdd,\n\t\t\tthis.history.length - this.indexOfNextAdd);\n\t\t\t\n\t\tfor (var i = 0; i < edits.length; i++)\n\t\t{\n\t\t\tedits[i].die();\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxUrlConverter\n * \n * Converts relative and absolute URLs to absolute URLs with protocol and domain.\n */\nvar mxUrlConverter = function()\n{\n\t// Empty constructor\n};\n\n/**\n * Variable: enabled\n * \n * Specifies if the converter is enabled. Default is true.\n */\nmxUrlConverter.prototype.enabled = true;\n\n/**\n * Variable: baseUrl\n * \n * Specifies the base URL to be used as a prefix for relative URLs.\n */\nmxUrlConverter.prototype.baseUrl = null;\n\n/**\n * Variable: baseDomain\n * \n * Specifies the base domain to be used as a prefix for absolute URLs.\n */\nmxUrlConverter.prototype.baseDomain = null;\n\n/**\n * Function: updateBaseUrl\n * \n * Private helper function to update the base URL.\n */\nmxUrlConverter.prototype.updateBaseUrl = function()\n{\n\tthis.baseDomain = location.protocol + '//' + location.host;\n\tthis.baseUrl = this.baseDomain + location.pathname;\n\tvar tmp = this.baseUrl.lastIndexOf('/');\n\t\n\t// Strips filename etc\n\tif (tmp > 0)\n\t{\n\t\tthis.baseUrl = this.baseUrl.substring(0, tmp + 1);\n\t}\n};\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxUrlConverter.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxUrlConverter.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: getBaseUrl\n * \n * Returns <baseUrl>.\n */\nmxUrlConverter.prototype.getBaseUrl = function()\n{\n\treturn this.baseUrl;\n};\n\n/**\n * Function: setBaseUrl\n * \n * Sets <baseUrl>.\n */\nmxUrlConverter.prototype.setBaseUrl = function(value)\n{\n\tthis.baseUrl = value;\n};\n\n/**\n * Function: getBaseDomain\n * \n * Returns <baseDomain>.\n */\nmxUrlConverter.prototype.getBaseDomain = function()\n{\n\treturn this.baseDomain;\n},\n\n/**\n * Function: setBaseDomain\n * \n * Sets <baseDomain>.\n */\nmxUrlConverter.prototype.setBaseDomain = function(value)\n{\n\tthis.baseDomain = value;\n},\n\n/**\n * Function: isRelativeUrl\n * \n * Returns true if the given URL is relative.\n */\nmxUrlConverter.prototype.isRelativeUrl = function(url)\n{\n\treturn url.substring(0, 2) != '//' && url.substring(0, 7) != 'http://' &&\n\t\turl.substring(0, 8) != 'https://' && url.substring(0, 10) != 'data:image' &&\n\t\turl.substring(0, 7) != 'file://';\n};\n\n/**\n * Function: convert\n * \n * Converts the given URL to an absolute URL with protol and domain.\n * Relative URLs are first converted to absolute URLs.\n */\nmxUrlConverter.prototype.convert = function(url)\n{\n\tif (this.isEnabled() && this.isRelativeUrl(url))\n\t{\n\t\tif (this.getBaseUrl() == null)\n\t\t{\n\t\t\tthis.updateBaseUrl();\n\t\t}\n\t\t\n\t\tif (url.charAt(0) == '/')\n\t\t{\n\t\t\turl = this.getBaseDomain() + url;\n\t\t}\n\t\telse\n\t\t{\n\t\t\turl = this.getBaseUrl() + url;\n\t\t}\n\t}\n\t\n\treturn url;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPanningManager\n *\n * Implements a handler for panning.\n */\nfunction mxPanningManager(graph)\n{\n\tthis.thread = null;\n\tthis.active = false;\n\tthis.tdx = 0;\n\tthis.tdy = 0;\n\tthis.t0x = 0;\n\tthis.t0y = 0;\n\tthis.dx = 0;\n\tthis.dy = 0;\n\tthis.scrollbars = false;\n\tthis.scrollLeft = 0;\n\tthis.scrollTop = 0;\n\t\n\tthis.mouseListener =\n\t{\n\t    mouseDown: function(sender, me) { },\n\t    mouseMove: function(sender, me) { },\n\t    mouseUp: mxUtils.bind(this, function(sender, me)\n\t    {\n\t    \tif (this.active)\n\t    \t{\n\t    \t\tthis.stop();\n\t    \t}\n\t    })\n\t};\n\t\n\tgraph.addMouseListener(this.mouseListener);\n\t\n\tthis.mouseUpListener = mxUtils.bind(this, function()\n\t{\n\t    \tif (this.active)\n\t    \t{\n\t    \t\tthis.stop();\n\t    \t}\n\t});\n\t\n\t// Stops scrolling on every mouseup anywhere in the document\n\tmxEvent.addListener(document, 'mouseup', this.mouseUpListener);\n\t\n\tvar createThread = mxUtils.bind(this, function()\n\t{\n\t    \tthis.scrollbars = mxUtils.hasScrollbars(graph.container);\n\t    \tthis.scrollLeft = graph.container.scrollLeft;\n\t    \tthis.scrollTop = graph.container.scrollTop;\n\t\n\t    \treturn window.setInterval(mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.tdx -= this.dx;\n\t\t\tthis.tdy -= this.dy;\n\n\t\t\tif (this.scrollbars)\n\t\t\t{\n\t\t\t\tvar left = -graph.container.scrollLeft - Math.ceil(this.dx);\n\t\t\t\tvar top = -graph.container.scrollTop - Math.ceil(this.dy);\n\t\t\t\tgraph.panGraph(left, top);\n\t\t\t\tgraph.panDx = this.scrollLeft - graph.container.scrollLeft;\n\t\t\t\tgraph.panDy = this.scrollTop - graph.container.scrollTop;\n\t\t\t\tgraph.fireEvent(new mxEventObject(mxEvent.PAN));\n\t\t\t\t// TODO: Implement graph.autoExtend\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgraph.panGraph(this.getDx(), this.getDy());\n\t\t\t}\n\t\t}), this.delay);\n\t});\n\t\n\tthis.isActive = function()\n\t{\n\t\treturn active;\n\t};\n\t\n\tthis.getDx = function()\n\t{\n\t\treturn Math.round(this.tdx);\n\t};\n\t\n\tthis.getDy = function()\n\t{\n\t\treturn Math.round(this.tdy);\n\t};\n\t\n\tthis.start = function()\n\t{\n\t\tthis.t0x = graph.view.translate.x;\n\t\tthis.t0y = graph.view.translate.y;\n\t\tthis.active = true;\n\t};\n\t\n\tthis.panTo = function(x, y, w, h)\n\t{\n\t\tif (!this.active)\n\t\t{\n\t\t\tthis.start();\n\t\t}\n\t\t\n    \tthis.scrollLeft = graph.container.scrollLeft;\n    \tthis.scrollTop = graph.container.scrollTop;\n\t\t\n\t\tw = (w != null) ? w : 0;\n\t\th = (h != null) ? h : 0;\n\t\t\n\t\tvar c = graph.container;\n\t\tthis.dx = x + w - c.scrollLeft - c.clientWidth;\n\t\t\n\t\tif (this.dx < 0 && Math.abs(this.dx) < this.border)\n\t\t{\n\t\t\tthis.dx = this.border + this.dx;\n\t\t}\n\t\telse if (this.handleMouseOut)\n\t\t{\n\t\t\tthis.dx = Math.max(this.dx, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dx = 0;\n\t\t}\n\t\t\n\t\tif (this.dx == 0)\n\t\t{\n\t\t\tthis.dx = x - c.scrollLeft;\n\t\t\t\n\t\t\tif (this.dx > 0 && this.dx < this.border)\n\t\t\t{\n\t\t\t\tthis.dx = this.dx - this.border;\n\t\t\t}\n\t\t\telse if (this.handleMouseOut)\n\t\t\t{\n\t\t\t\tthis.dx = Math.min(0, this.dx);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.dx = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.dy = y + h - c.scrollTop - c.clientHeight;\n\n\t\tif (this.dy < 0 && Math.abs(this.dy) < this.border)\n\t\t{\n\t\t\tthis.dy = this.border + this.dy;\n\t\t}\n\t\telse if (this.handleMouseOut)\n\t\t{\n\t\t\tthis.dy = Math.max(this.dy, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dy = 0;\n\t\t}\n\t\t\n\t\tif (this.dy == 0)\n\t\t{\n\t\t\tthis.dy = y - c.scrollTop;\n\t\t\t\n\t\t\tif (this.dy > 0 && this.dy < this.border)\n\t\t\t{\n\t\t\t\tthis.dy = this.dy - this.border;\n\t\t\t}\n\t\t\telse if (this.handleMouseOut)\n\t\t\t{\n\t\t\t\tthis.dy = Math.min(0, this.dy);\n\t\t\t} \n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.dy = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.dx != 0 || this.dy != 0)\n\t\t{\n\t\t\tthis.dx *= this.damper;\n\t\t\tthis.dy *= this.damper;\n\t\t\t\n\t\t\tif (this.thread == null)\n\t\t\t{\n\t\t\t\tthis.thread = createThread();\n\t\t\t}\n\t\t}\n\t\telse if (this.thread != null)\n\t\t{\n\t\t\twindow.clearInterval(this.thread);\n\t\t\tthis.thread = null;\n\t\t}\n\t};\n\t\n\tthis.stop = function()\n\t{\n\t\tif (this.active)\n\t\t{\n\t\t\tthis.active = false;\n\t\t\n\t\t\tif (this.thread != null)\n\t    \t{\n\t\t\t\twindow.clearInterval(this.thread);\n\t\t\t\tthis.thread = null;\n\t    \t}\n\t\t\t\n\t\t\tthis.tdx = 0;\n\t\t\tthis.tdy = 0;\n\t\t\t\n\t\t\tif (!this.scrollbars)\n\t\t\t{\n\t\t\t\tvar px = graph.panDx;\n\t\t\t\tvar py = graph.panDy;\n\t\t    \t\n\t\t    \tif (px != 0 || py != 0)\n\t\t    \t{\n\t\t    \t\tgraph.panGraph(0, 0);\n\t\t\t    \tgraph.view.setTranslate(this.t0x + px / graph.view.scale, this.t0y + py / graph.view.scale);\n\t\t    \t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgraph.panDx = 0;\n\t\t\t\tgraph.panDy = 0;\n\t\t\t\tgraph.fireEvent(new mxEventObject(mxEvent.PAN));\n\t\t\t}\n\t\t}\n\t};\n\t\n\tthis.destroy = function()\n\t{\n\t\tgraph.removeMouseListener(this.mouseListener);\n\t\tmxEvent.removeListener(document, 'mouseup', this.mouseUpListener);\n\t};\n};\n\n/**\n * Variable: damper\n * \n * Damper value for the panning. Default is 1/6.\n */\nmxPanningManager.prototype.damper = 1/6;\n\n/**\n * Variable: delay\n * \n * Delay in milliseconds for the panning. Default is 10.\n */\nmxPanningManager.prototype.delay = 10;\n\n/**\n * Variable: handleMouseOut\n * \n * Specifies if mouse events outside of the component should be handled. Default is true. \n */\nmxPanningManager.prototype.handleMouseOut = true;\n\n/**\n * Variable: border\n * \n * Border to handle automatic panning inside the component. Default is 0 (disabled).\n */\nmxPanningManager.prototype.border = 0;\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPopupMenu\n * \n * Basic popup menu. To add a vertical scrollbar to a given submenu, the\n * following code can be used.\n * \n * (code)\n * var mxPopupMenuShowMenu = mxPopupMenu.prototype.showMenu;\n * mxPopupMenu.prototype.showMenu = function()\n * {\n *   mxPopupMenuShowMenu.apply(this, arguments);\n *   \n *   this.div.style.overflowY = 'auto';\n *   this.div.style.overflowX = 'hidden';\n *   this.div.style.maxHeight = '160px';\n * };\n * (end)\n * \n * Constructor: mxPopupMenu\n * \n * Constructs a popupmenu.\n * \n * Event: mxEvent.SHOW\n *\n * Fires after the menu has been shown in <popup>.\n */\nfunction mxPopupMenu(factoryMethod)\n{\n\tthis.factoryMethod = factoryMethod;\n\t\n\tif (factoryMethod != null)\n\t{\n\t\tthis.init();\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxPopupMenu.prototype = new mxEventSource();\nmxPopupMenu.prototype.constructor = mxPopupMenu;\n\n/**\n * Variable: submenuImage\n * \n * URL of the image to be used for the submenu icon.\n */\nmxPopupMenu.prototype.submenuImage = mxClient.imageBasePath + '/submenu.gif';\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the popupmenu and its shadow. Default is 1006.\n */\nmxPopupMenu.prototype.zIndex = 10006;\n\n/**\n * Variable: factoryMethod\n * \n * Function that is used to create the popup menu. The function takes the\n * current panning handler, the <mxCell> under the mouse and the mouse\n * event that triggered the call as arguments.\n */\nmxPopupMenu.prototype.factoryMethod = null;\n\n/**\n * Variable: useLeftButtonForPopup\n * \n * Specifies if popupmenus should be activated by clicking the left mouse\n * button. Default is false.\n */\nmxPopupMenu.prototype.useLeftButtonForPopup = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxPopupMenu.prototype.enabled = true;\n\n/**\n * Variable: itemCount\n * \n * Contains the number of times <addItem> has been called for a new menu.\n */\nmxPopupMenu.prototype.itemCount = 0;\n\n/**\n * Variable: autoExpand\n * \n * Specifies if submenus should be expanded on mouseover. Default is false.\n */\nmxPopupMenu.prototype.autoExpand = false;\n\n/**\n * Variable: smartSeparators\n * \n * Specifies if separators should only be added if a menu item follows them.\n * Default is false.\n */\nmxPopupMenu.prototype.smartSeparators = false;\n\n/**\n * Variable: labels\n * \n * Specifies if any labels should be visible. Default is true.\n */\nmxPopupMenu.prototype.labels = true;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxPopupMenu.prototype.init = function()\n{\n\t// Adds the inner table\n\tthis.table = document.createElement('table');\n\tthis.table.className = 'mxPopupMenu';\n\t\n\tthis.tbody = document.createElement('tbody');\n\tthis.table.appendChild(this.tbody);\n\n\t// Adds the outer div\n\tthis.div = document.createElement('div');\n\tthis.div.className = 'mxPopupMenu';\n\tthis.div.style.display = 'inline';\n\tthis.div.style.zIndex = this.zIndex;\n\tthis.div.appendChild(this.table);\n\n\t// Disables the context menu on the outer div\n\tmxEvent.disableContextMenu(this.div);\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxPopupMenu.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n */\nmxPopupMenu.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isPopupTrigger\n * \n * Returns true if the given event is a popupmenu trigger for the optional\n * given cell.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the mouse event.\n */\nmxPopupMenu.prototype.isPopupTrigger = function(me)\n{\n\treturn me.isPopupTrigger() || (this.useLeftButtonForPopup && mxEvent.isLeftMouseButton(me.getEvent()));\n};\n\n/**\n * Function: addItem\n * \n * Adds the given item to the given parent item. If no parent item is specified\n * then the item is added to the top-level menu. The return value may be used\n * as the parent argument, ie. as a submenu item. The return value is the table\n * row that represents the item.\n * \n * Paramters:\n * \n * title - String that represents the title of the menu item.\n * image - Optional URL for the image icon.\n * funct - Function associated that takes a mouseup or touchend event.\n * parent - Optional item returned by <addItem>.\n * iconCls - Optional string that represents the CSS class for the image icon.\n * IconsCls is ignored if image is given.\n * enabled - Optional boolean indicating if the item is enabled. Default is true.\n * active - Optional boolean indicating if the menu should implement any event handling.\n * Default is true.\n */\nmxPopupMenu.prototype.addItem = function(title, image, funct, parent, iconCls, enabled, active)\n{\n\tparent = parent || this;\n\tthis.itemCount++;\n\t\n\t// Smart separators only added if element contains items\n\tif (parent.willAddSeparator)\n\t{\n\t\tif (parent.containsItems)\n\t\t{\n\t\t\tthis.addSeparator(parent, true);\n\t\t}\n\n\t\tparent.willAddSeparator = false;\n\t}\n\n\tparent.containsItems = true;\n\tvar tr = document.createElement('tr');\n\ttr.className = 'mxPopupMenuItem';\n\tvar col1 = document.createElement('td');\n\tcol1.className = 'mxPopupMenuIcon';\n\n\t// Adds the given image into the first column\n\tif (image != null)\n\t{\n\t\tvar img = document.createElement('img');\n\t\timg.src = image;\n\t\tcol1.appendChild(img);\n\t}\n\telse if (iconCls != null)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.className = iconCls;\n\t\tcol1.appendChild(div);\n\t}\n\t\n\ttr.appendChild(col1);\n\t\n\tif (this.labels)\n\t{\n\t\tvar col2 = document.createElement('td');\n\t\tcol2.className = 'mxPopupMenuItem' +\n\t\t\t((enabled != null && !enabled) ? ' mxDisabled' : '');\n\t\t\n\t\tmxUtils.write(col2, title);\n\t\tcol2.align = 'left';\n\t\ttr.appendChild(col2);\n\t\n\t\tvar col3 = document.createElement('td');\n\t\tcol3.className = 'mxPopupMenuItem' +\n\t\t\t((enabled != null && !enabled) ? ' mxDisabled' : '');\n\t\tcol3.style.paddingRight = '6px';\n\t\tcol3.style.textAlign = 'right';\n\t\t\n\t\ttr.appendChild(col3);\n\t\t\n\t\tif (parent.div == null)\n\t\t{\n\t\t\tthis.createSubmenu(parent);\n\t\t}\n\t}\n\t\n\tparent.tbody.appendChild(tr);\n\n\tif (active != false && enabled != false)\n\t{\n\t\tvar currentSelection = null;\n\t\t\n\t\tmxEvent.addGestureListeners(tr,\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tthis.eventReceiver = tr;\n\t\t\t\t\n\t\t\t\tif (parent.activeRow != tr && parent.activeRow != parent)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != null && parent.activeRow.div.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideSubmenu(parent);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (tr.div != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showSubmenu(parent, tr);\n\t\t\t\t\t\tparent.activeRow = tr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Workaround for lost current selection in page because of focus in IE\n\t\t\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t\t\t{\n\t\t\t\t\tcurrentSelection = document.selection.createRange();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (parent.activeRow != tr && parent.activeRow != parent)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != null && parent.activeRow.div.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideSubmenu(parent);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.autoExpand && tr.div != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showSubmenu(parent, tr);\n\t\t\t\t\t\tparent.activeRow = tr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// Sets hover style because TR in IE doesn't have hover\n\t\t\t\ttr.className = 'mxPopupMenuItemHover';\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\t// EventReceiver avoids clicks on a submenu item\n\t\t\t\t// which has just been shown in the mousedown\n\t\t\t\tif (this.eventReceiver == tr)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != tr)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideMenu();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for lost current selection in page because of focus in IE\n\t\t\t\t\tif (currentSelection != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Workaround for \"unspecified error\" in IE8 standards\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentSelection.select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentSelection = null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (funct != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfunct(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.eventReceiver = null;\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t})\n\t\t);\n\t\n\t\t// Resets hover style because TR in IE doesn't have hover\n\t\tmxEvent.addListener(tr, 'mouseout',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\ttr.className = 'mxPopupMenuItem';\n\t\t\t})\n\t\t);\n\t}\n\t\n\treturn tr;\n};\n\n/**\n * Adds a checkmark to the given menuitem.\n */\nmxPopupMenu.prototype.addCheckmark = function(item, img)\n{\n\tvar td = item.firstChild.nextSibling;\n\ttd.style.backgroundImage = 'url(\\'' + img + '\\')';\n\ttd.style.backgroundRepeat = 'no-repeat';\n\ttd.style.backgroundPosition = '2px 50%';\n};\n\n/**\n * Function: createSubmenu\n * \n * Creates the nodes required to add submenu items inside the given parent\n * item. This is called in <addItem> if a parent item is used for the first\n * time. This adds various DOM nodes and a <submenuImage> to the parent.\n * \n * Parameters:\n * \n * parent - An item returned by <addItem>.\n */\nmxPopupMenu.prototype.createSubmenu = function(parent)\n{\n\tparent.table = document.createElement('table');\n\tparent.table.className = 'mxPopupMenu';\n\n\tparent.tbody = document.createElement('tbody');\n\tparent.table.appendChild(parent.tbody);\n\n\tparent.div = document.createElement('div');\n\tparent.div.className = 'mxPopupMenu';\n\n\tparent.div.style.position = 'absolute';\n\tparent.div.style.display = 'inline';\n\tparent.div.style.zIndex = this.zIndex;\n\t\n\tparent.div.appendChild(parent.table);\n\t\n\tvar img = document.createElement('img');\n\timg.setAttribute('src', this.submenuImage);\n\t\n\t// Last column of the submenu item in the parent menu\n\ttd = parent.firstChild.nextSibling.nextSibling;\n\ttd.appendChild(img);\n};\n\n/**\n * Function: showSubmenu\n * \n * Shows the submenu inside the given parent row.\n */\nmxPopupMenu.prototype.showSubmenu = function(parent, row)\n{\n\tif (row.div != null)\n\t{\n\t\trow.div.style.left = (parent.div.offsetLeft +\n\t\t\trow.offsetLeft+row.offsetWidth - 1) + 'px';\n\t\trow.div.style.top = (parent.div.offsetTop+row.offsetTop) + 'px';\n\t\tdocument.body.appendChild(row.div);\n\t\t\n\t\t// Moves the submenu to the left side if there is no space\n\t\tvar left = parseInt(row.div.offsetLeft);\n\t\tvar width = parseInt(row.div.offsetWidth);\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(document);\n\t\t\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\t\n\t\tvar right = offset.x + (b.clientWidth || d.clientWidth);\n\t\t\n\t\tif (left + width > right)\n\t\t{\n\t\t\trow.div.style.left = Math.max(0, (parent.div.offsetLeft - width + ((mxClient.IS_IE) ? 6 : -6))) + 'px';\n\t\t}\n\t\t\n\t\tmxUtils.fit(row.div);\n\t}\n};\n\n/**\n * Function: addSeparator\n * \n * Adds a horizontal separator in the given parent item or the top-level menu\n * if no parent is specified.\n * \n * Parameters:\n * \n * parent - Optional item returned by <addItem>.\n * force - Optional boolean to ignore <smartSeparators>. Default is false.\n */\nmxPopupMenu.prototype.addSeparator = function(parent, force)\n{\n\tparent = parent || this;\n\t\n\tif (this.smartSeparators && !force)\n\t{\n\t\tparent.willAddSeparator = true;\n\t}\n\telse if (parent.tbody != null)\n\t{\n\t\tparent.willAddSeparator = false;\n\t\tvar tr = document.createElement('tr');\n\t\t\n\t\tvar col1 = document.createElement('td');\n\t\tcol1.className = 'mxPopupMenuIcon';\n\t\tcol1.style.padding = '0 0 0 0px';\n\t\t\n\t\ttr.appendChild(col1);\n\t\t\n\t\tvar col2 = document.createElement('td');\n\t\tcol2.style.padding = '0 0 0 0px';\n\t\tcol2.setAttribute('colSpan', '2');\n\t\n\t\tvar hr = document.createElement('hr');\n\t\thr.setAttribute('size', '1');\n\t\tcol2.appendChild(hr);\n\t\t\n\t\ttr.appendChild(col2);\n\t\t\n\t\tparent.tbody.appendChild(tr);\n\t}\n};\n\n/**\n * Function: popup\n * \n * Shows the popup menu for the given event and cell.\n * \n * Example:\n * \n * (code)\n * graph.panningHandler.popup = function(x, y, cell, evt)\n * {\n *   mxUtils.alert('Hello, World!');\n * }\n * (end)\n */\nmxPopupMenu.prototype.popup = function(x, y, cell, evt)\n{\n\tif (this.div != null && this.tbody != null && this.factoryMethod != null)\n\t{\n\t\tthis.div.style.left = x + 'px';\n\t\tthis.div.style.top = y + 'px';\n\t\t\n\t\t// Removes all child nodes from the existing menu\n\t\twhile (this.tbody.firstChild != null)\n\t\t{\n\t\t\tmxEvent.release(this.tbody.firstChild);\n\t\t\tthis.tbody.removeChild(this.tbody.firstChild);\n\t\t}\n\t\t\n\t\tthis.itemCount = 0;\n\t\tthis.factoryMethod(this, cell, evt);\n\t\t\n\t\tif (this.itemCount > 0)\n\t\t{\n\t\t\tthis.showMenu();\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.SHOW));\n\t\t}\n\t}\n};\n\n/**\n * Function: isMenuShowing\n * \n * Returns true if the menu is showing.\n */\nmxPopupMenu.prototype.isMenuShowing = function()\n{\n\treturn this.div != null && this.div.parentNode == document.body;\n};\n\n/**\n * Function: showMenu\n * \n * Shows the menu.\n */\nmxPopupMenu.prototype.showMenu = function()\n{\n\t// Disables filter-based shadow in IE9 standards mode\n\tif (document.documentMode >= 9)\n\t{\n\t\tthis.div.style.filter = 'none';\n\t}\n\t\n\t// Fits the div inside the viewport\n\tdocument.body.appendChild(this.div);\n\tmxUtils.fit(this.div);\n};\n\n/**\n * Function: hideMenu\n * \n * Removes the menu and all submenus.\n */\nmxPopupMenu.prototype.hideMenu = function()\n{\n\tif (this.div != null)\n\t{\n\t\tif (this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.hideSubmenu(this);\n\t\tthis.containsItems = false;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.HIDE));\n\t}\n};\n\n/**\n * Function: hideSubmenu\n * \n * Removes all submenus inside the given parent.\n * \n * Parameters:\n * \n * parent - An item returned by <addItem>.\n */\nmxPopupMenu.prototype.hideSubmenu = function(parent)\n{\n\tif (parent.activeRow != null)\n\t{\n\t\tthis.hideSubmenu(parent.activeRow);\n\t\t\n\t\tif (parent.activeRow.div.parentNode != null)\n\t\t{\n\t\t\tparent.activeRow.div.parentNode.removeChild(parent.activeRow.div);\n\t\t}\n\t\t\n\t\tparent.activeRow = null;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPopupMenu.prototype.destroy = function()\n{\n\tif (this.div != null)\n\t{\n\t\tmxEvent.release(this.div);\n\t\t\n\t\tif (this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.div = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxAutoSaveManager\n * \n * Manager for automatically saving diagrams. The <save> hook must be\n * implemented.\n * \n * Example:\n * \n * (code)\n * var mgr = new mxAutoSaveManager(editor.graph);\n * mgr.save = function()\n * {\n *   mxLog.show();\n *   mxLog.debug('save');\n * };\n * (end)\n * \n * Constructor: mxAutoSaveManager\n *\n * Constructs a new automatic layout for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxAutoSaveManager(graph)\n{\n\t// Notifies the manager of a change\n\tthis.changeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.graphModelChanged(evt.getProperty('edit').changes);\n\t\t}\n\t});\n\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxAutoSaveManager.prototype = new mxEventSource();\nmxAutoSaveManager.prototype.constructor = mxAutoSaveManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxAutoSaveManager.prototype.graph = null;\n\n/**\n * Variable: autoSaveDelay\n * \n * Minimum amount of seconds between two consecutive autosaves. Eg. a\n * value of 1 (s) means the graph is not stored more than once per second.\n * Default is 10.\n */\nmxAutoSaveManager.prototype.autoSaveDelay = 10;\n\n/**\n * Variable: autoSaveThrottle\n * \n * Minimum amount of seconds between two consecutive autosaves triggered by\n * more than <autoSaveThreshhold> changes within a timespan of less than\n * <autoSaveDelay> seconds. Eg. a value of 1 (s) means the graph is not\n * stored more than once per second even if there are more than\n * <autoSaveThreshold> changes within that timespan. Default is 2.\n */\nmxAutoSaveManager.prototype.autoSaveThrottle = 2;\n\n/**\n * Variable: autoSaveThreshold\n * \n * Minimum amount of ignored changes before an autosave. Eg. a value of 2\n * means after 2 change of the graph model the autosave will trigger if the\n * condition below is true. Default is 5.\n */\nmxAutoSaveManager.prototype.autoSaveThreshold = 5;\n\n/**\n * Variable: ignoredChanges\n * \n * Counter for ignored changes in autosave.\n */\nmxAutoSaveManager.prototype.ignoredChanges = 0;\n\n/**\n * Variable: lastSnapshot\n * \n * Used for autosaving. See <autosave>.\n */\nmxAutoSaveManager.prototype.lastSnapshot = 0;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxAutoSaveManager.prototype.enabled = true;\n\n/**\n * Variable: changeHandler\n * \n * Holds the function that handles graph model changes.\n */\nmxAutoSaveManager.prototype.changeHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxAutoSaveManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxAutoSaveManager.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the layouts operate on.\n */\nmxAutoSaveManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n\t}\n};\n\n/**\n * Function: save\n * \n * Empty hook that is called if the graph should be saved.\n */\nmxAutoSaveManager.prototype.save = function()\n{\n\t// empty\n};\n\n/**\n * Function: graphModelChanged\n * \n * Invoked when the graph model has changed.\n */\nmxAutoSaveManager.prototype.graphModelChanged = function(changes)\n{\n\tvar now = new Date().getTime();\n\tvar dt = (now - this.lastSnapshot) / 1000;\n\t\n\tif (dt > this.autoSaveDelay ||\n\t\t(this.ignoredChanges >= this.autoSaveThreshold &&\n\t\t dt > this.autoSaveThrottle))\n\t{\n\t\tthis.save();\n\t\tthis.reset();\n\t}\n\telse\n\t{\n\t\t// Increments the number of ignored changes\n\t\tthis.ignoredChanges++;\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets all counters.\n */\nmxAutoSaveManager.prototype.reset = function()\n{\n\tthis.lastSnapshot = new Date().getTime();\n\tthis.ignoredChanges = 0;\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxAutoSaveManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxAnimation\n * \n * Implements a basic animation in JavaScript.\n * \n * Constructor: mxAnimation\n * \n * Constructs an animation.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxAnimation(delay)\n{\n\tthis.delay = (delay != null) ? delay : 20;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxAnimation.prototype = new mxEventSource();\nmxAnimation.prototype.constructor = mxAnimation;\n\n/**\n * Variable: delay\n * \n * Specifies the delay between the animation steps. Defaul is 30ms.\n */\nmxAnimation.prototype.delay = null;\n\n/**\n * Variable: thread\n * \n * Reference to the thread while the animation is running.\n */\nmxAnimation.prototype.thread = null;\n\n/**\n * Function: isRunning\n * \n * Returns true if the animation is running.\n */\nmxAnimation.prototype.isRunning = function()\n{\n\treturn this.thread != null;\n};\n\n/**\n * Function: startAnimation\n *\n * Starts the animation by repeatedly invoking updateAnimation.\n */\nmxAnimation.prototype.startAnimation = function()\n{\n\tif (this.thread == null)\n\t{\n\t\tthis.thread = window.setInterval(mxUtils.bind(this, this.updateAnimation), this.delay);\n\t}\n};\n\n/**\n * Function: updateAnimation\n *\n * Hook for subclassers to implement the animation. Invoke stopAnimation\n * when finished, startAnimation to resume. This is called whenever the\n * timer fires and fires an mxEvent.EXECUTE event with no properties.\n */\nmxAnimation.prototype.updateAnimation = function()\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTE));\n};\n\n/**\n * Function: stopAnimation\n *\n * Stops the animation by deleting the timer and fires an <mxEvent.DONE>.\n */\nmxAnimation.prototype.stopAnimation = function()\n{\n\tif (this.thread != null)\n\t{\n\t\twindow.clearInterval(this.thread);\n\t\tthis.thread = null;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.DONE));\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxMorphing\n * \n * Implements animation for morphing cells. Here is an example of\n * using this class for animating the result of a layout algorithm:\n * \n * (code)\n * graph.getModel().beginUpdate();\n * try\n * {\n *   var circleLayout = new mxCircleLayout(graph);\n *   circleLayout.execute(graph.getDefaultParent());\n * }\n * finally\n * {\n *   var morph = new mxMorphing(graph);\n *   morph.addListener(mxEvent.DONE, function()\n *   {\n *     graph.getModel().endUpdate();\n *   });\n *   \n *   morph.startAnimation();\n * }\n * (end)\n * \n * Constructor: mxMorphing\n * \n * Constructs an animation.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * steps - Optional number of steps in the morphing animation. Default is 6.\n * ease - Optional easing constant for the animation. Default is 1.5.\n * delay - Optional delay between the animation steps. Passed to <mxAnimation>.\n */\nfunction mxMorphing(graph, steps, ease, delay)\n{\n\tmxAnimation.call(this, delay);\n\tthis.graph = graph;\n\tthis.steps = (steps != null) ? steps : 6;\n\tthis.ease = (ease != null) ? ease : 1.5;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxMorphing.prototype = new mxAnimation();\nmxMorphing.prototype.constructor = mxMorphing;\n\n/**\n * Variable: graph\n * \n * Specifies the delay between the animation steps. Defaul is 30ms.\n */\nmxMorphing.prototype.graph = null;\n\n/**\n * Variable: steps\n * \n * Specifies the maximum number of steps for the morphing.\n */\nmxMorphing.prototype.steps = null;\n\n/**\n * Variable: step\n * \n * Contains the current step.\n */\nmxMorphing.prototype.step = 0;\n\n/**\n * Variable: ease\n * \n * Ease-off for movement towards the given vector. Larger values are\n * slower and smoother. Default is 4.\n */\nmxMorphing.prototype.ease = null;\n\n/**\n * Variable: cells\n * \n * Optional array of cells to be animated. If this is not specified\n * then all cells are checked and animated if they have been moved\n * in the current transaction.\n */\nmxMorphing.prototype.cells = null;\n\n/**\n * Function: updateAnimation\n *\n * Animation step.\n */\nmxMorphing.prototype.updateAnimation = function()\n{\n\tmxAnimation.prototype.updateAnimation.apply(this, arguments);\n\tvar move = new mxCellStatePreview(this.graph);\n\n\tif (this.cells != null)\n\t{\n\t\t// Animates the given cells individually without recursion\n\t\tfor (var i = 0; i < this.cells.length; i++)\n\t\t{\n\t\t\tthis.animateCell(this.cells[i], move, false);\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Animates all changed cells by using recursion to find\n\t\t// the changed cells but not for the animation itself\n\t\tthis.animateCell(this.graph.getModel().getRoot(), move, true);\n\t}\n\t\n\tthis.show(move);\n\t\n\tif (move.isEmpty() || this.step++ >= this.steps)\n\t{\n\t\tthis.stopAnimation();\n\t}\n};\n\n/**\n * Function: show\n *\n * Shows the changes in the given <mxCellStatePreview>.\n */\nmxMorphing.prototype.show = function(move)\n{\n\tmove.show();\n};\n\n/**\n * Function: animateCell\n *\n * Animates the given cell state using <mxCellStatePreview.moveState>.\n */\nmxMorphing.prototype.animateCell = function(cell, move, recurse)\n{\n\tvar state = this.graph.getView().getState(cell);\n\tvar delta = null;\n\n\tif (state != null)\n\t{\n\t\t// Moves the animated state from where it will be after the model\n\t\t// change by subtracting the given delta vector from that location\n\t\tdelta = this.getDelta(state);\n\n\t\tif (this.graph.getModel().isVertex(cell) && (delta.x != 0 || delta.y != 0))\n\t\t{\n\t\t\tvar translate = this.graph.view.getTranslate();\n\t\t\tvar scale = this.graph.view.getScale();\n\t\t\t\n\t\t\tdelta.x += translate.x * scale;\n\t\t\tdelta.y += translate.y * scale;\n\t\t\t\n\t\t\tmove.moveState(state, -delta.x / this.ease, -delta.y / this.ease);\n\t\t}\n\t}\n\t\n\tif (recurse && !this.stopRecursion(state, delta))\n\t{\n\t\tvar childCount = this.graph.getModel().getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.animateCell(this.graph.getModel().getChildAt(cell, i), move, recurse);\n\t\t}\n\t}\n};\n\n/**\n * Function: stopRecursion\n *\n * Returns true if the animation should not recursively find more\n * deltas for children if the given parent state has been animated.\n */\nmxMorphing.prototype.stopRecursion = function(state, delta)\n{\n\treturn delta != null && (delta.x != 0 || delta.y != 0);\n};\n\n/**\n * Function: getDelta\n *\n * Returns the vector between the current rendered state and the future\n * location of the state after the display will be updated.\n */\nmxMorphing.prototype.getDelta = function(state)\n{\n\tvar origin = this.getOriginForCell(state.cell);\n\tvar translate = this.graph.getView().getTranslate();\n\tvar scale = this.graph.getView().getScale();\n\tvar x = state.x / scale - translate.x;\n\tvar y = state.y / scale - translate.y;\n\n\treturn new mxPoint((origin.x - x) * scale, (origin.y - y) * scale);\n};\n\n/**\n * Function: getOriginForCell\n *\n * Returns the top, left corner of the given cell. TODO: Improve performance\n * by using caching inside this method as the result per cell never changes\n * during the lifecycle of this object.\n */\nmxMorphing.prototype.getOriginForCell = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\tvar geo = this.graph.getCellGeometry(cell);\n\t\tresult = this.getOriginForCell(parent);\n\t\t\n\t\t// TODO: Handle offsets\n\t\tif (geo != null)\n\t\t{\n\t\t\tif (geo.relative)\n\t\t\t{\n\t\t\t\tvar pgeo = this.graph.getCellGeometry(parent);\n\t\t\t\t\n\t\t\t\tif (pgeo != null)\n\t\t\t\t{\n\t\t\t\t\tresult.x += geo.x * pgeo.width;\n\t\t\t\t\tresult.y += geo.y * pgeo.height;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.x += geo.x;\n\t\t\t\tresult.y += geo.y;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (result == null)\n\t{\n\t\tvar t = this.graph.view.getTranslate();\n\t\tresult = new mxPoint(-t.x, -t.y);\n\t}\n\t\n\treturn result;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageBundle\n *\n * Maps from keys to base64 encoded images or file locations. All values must\n * be URLs or use the format data:image/format followed by a comma and the base64\n * encoded image data, eg. \"data:image/gif,XYZ\", where XYZ is the base64 encoded\n * image data.\n * \n * To add a new image bundle to an existing graph, the following code is used:\n * \n * (code)\n * var bundle = new mxImageBundle(alt);\n * bundle.putImage('myImage', 'data:image/gif,R0lGODlhEAAQAMIGAAAAAICAAICAgP' +\n *   '//AOzp2O3r2////////yH+FUNyZWF0ZWQgd2l0aCBUaGUgR0lNUAAh+QQBCgAHACwAAAAA' +\n *   'EAAQAAADTXi63AowynnAMDfjPUDlnAAJhmeBFxAEloliKltWmiYCQvfVr6lBPB1ggxN1hi' +\n *   'laSSASFQpIV5HJBDyHpqK2ejVRm2AAgZCdmCGO9CIBADs=', fallback);\n * bundle.putImage('mySvgImage', 'data:image/svg+xml,' + encodeURIComponent(\n *   '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">' +\n *   '<linearGradient id=\"gradient\"><stop offset=\"10%\" stop-color=\"#F00\"/>' +\n *   '<stop offset=\"90%\" stop-color=\"#fcc\"/></linearGradient>' +\n *   '<rect fill=\"url(#gradient)\" width=\"100%\" height=\"100%\"/></svg>'), fallback);\n * graph.addImageBundle(bundle);\n * (end);\n * \n * Alt is an optional boolean (default is false) that specifies if the value\n * or the fallback should be returned in <getImage>.\n * \n * The image can then be referenced in any cell style using image=myImage.\n * If you are using mxOutline, you should use the same image bundles in the\n * graph that renders the outline.\n * \n * The keys for images are resolved in <mxGraph.postProcessCellStyle> and\n * turned into a data URI if the returned value has a short data URI format\n * as specified above.\n * \n * A typical value for the fallback is a MTHML link as defined in RFC 2557.\n * Note that this format requires a file to be dynamically created on the\n * server-side, or the page that contains the graph to be modified to contain\n * the resources, this can be done by adding a comment that contains the\n * resource in the HEAD section of the page after the title tag.\n * \n * This type of fallback mechanism should be used in IE6 and IE7. IE8 does\n * support data URIs, but the maximum size is limited to 32 KB, which means\n * all data URIs should be limited to 32 KB.\n */\nfunction mxImageBundle(alt)\n{\n\tthis.images = [];\n\tthis.alt = (alt != null) ? alt : false;\n};\n\n/**\n * Variable: images\n * \n * Maps from keys to images.\n */\nmxImageBundle.prototype.images = null;\n\n/**\n * Variable: alt\n * \n * Specifies if the fallback representation should be returned.\n */\nmxImageBundle.prototype.images = null;\n\n/**\n * Function: putImage\n * \n * Adds the specified entry to the map. The entry is an object with a value and\n * fallback property as specified in the arguments.\n */\nmxImageBundle.prototype.putImage = function(key, value, fallback)\n{\n\tthis.images[key] = {value: value, fallback: fallback};\n};\n\n/**\n * Function: getImage\n * \n * Returns the value for the given key. This returns the value\n * or fallback, depending on <alt>. The fallback is returned if\n * <alt> is true, the value is returned otherwise.\n */\nmxImageBundle.prototype.getImage = function(key)\n{\n\tvar result = null;\n\t\n\tif (key != null)\n\t{\n\t\tvar img = this.images[key];\n\t\t\n\t\tif (img != null)\n\t\t{\n\t\t\tresult = (this.alt) ? img.fallback : img.value;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageExport\n * \n * Creates a new image export instance to be used with an export canvas. Here\n * is an example that uses this class to create an image via a backend using\n * <mxXmlExportCanvas>.\n * \n * (code)\n * var xmlDoc = mxUtils.createXmlDocument();\n * var root = xmlDoc.createElement('output');\n * xmlDoc.appendChild(root);\n * \n * var xmlCanvas = new mxXmlCanvas2D(root);\n * var imgExport = new mxImageExport();\n * imgExport.drawState(graph.getView().getState(graph.model.root), xmlCanvas);\n * \n * var bounds = graph.getGraphBounds();\n * var w = Math.ceil(bounds.x + bounds.width);\n * var h = Math.ceil(bounds.y + bounds.height);\n * \n * var xml = mxUtils.getXml(root);\n * new mxXmlRequest('export', 'format=png&w=' + w +\n * \t\t'&h=' + h + '&bg=#F9F7ED&xml=' + encodeURIComponent(xml))\n * \t\t.simulate(document, '_blank');\n * (end)\n * \n * Constructor: mxImageExport\n * \n * Constructs a new image export.\n */\nfunction mxImageExport() { };\n\n/**\n * Variable: includeOverlays\n * \n * Specifies if overlays should be included in the export. Default is false.\n */\nmxImageExport.prototype.includeOverlays = false;\n\n/**\n * Function: drawState\n * \n * Draws the given state and all its descendants to the given canvas.\n */\nmxImageExport.prototype.drawState = function(state, canvas)\n{\n\tif (state != null)\n\t{\n\t\tthis.visitStatesRecursive(state, canvas, mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.drawCellState.apply(this, arguments);\n\t\t}));\n\t\t\t\t\n\t\t// Paints the overlays\n\t\tif (this.includeOverlays)\n\t\t{\n\t\t\tthis.visitStatesRecursive(state, canvas, mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.drawOverlays.apply(this, arguments);\n\t\t\t}));\n\t\t}\n\t}\n};\n\n/**\n * Function: drawState\n * \n * Draws the given state and all its descendants to the given canvas.\n */\nmxImageExport.prototype.visitStatesRecursive = function(state, canvas, visitor)\n{\n\tif (state != null)\n\t{\n\t\tvisitor(state, canvas);\n\t\t\n\t\tvar graph = state.view.graph;\n\t\tvar childCount = graph.model.getChildCount(state.cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar childState = graph.view.getState(graph.model.getChildAt(state.cell, i));\n\t\t\tthis.visitStatesRecursive(childState, canvas, visitor);\n\t\t}\n\t}\n};\n\n/**\n * Function: getLinkForCellState\n * \n * Returns the link for the given cell state and canvas. This returns null.\n */\nmxImageExport.prototype.getLinkForCellState = function(state, canvas)\n{\n\treturn null;\n};\n\n/**\n * Function: drawCellState\n * \n * Draws the given state to the given canvas.\n */\nmxImageExport.prototype.drawCellState = function(state, canvas)\n{\n\t// Experimental feature\n\tvar link = this.getLinkForCellState(state, canvas);\n\t\n\tif (link != null)\n\t{\n\t\tcanvas.setLink(link);\n\t}\n\t\n\t// Paints the shape and text\n\tthis.drawShape(state, canvas);\n\tthis.drawText(state, canvas);\n\n\tif (link != null)\n\t{\n\t\tcanvas.setLink(null);\n\t}\n};\n\n/**\n * Function: drawShape\n * \n * Draws the shape of the given state.\n */\nmxImageExport.prototype.drawShape = function(state, canvas)\n{\n\tif (state.shape instanceof mxShape && state.shape.checkBounds())\n\t{\n\t\tcanvas.save();\n\t\tstate.shape.paint(canvas);\n\t\tcanvas.restore();\n\t}\n};\n\n/**\n * Function: drawText\n * \n * Draws the text of the given state.\n */\nmxImageExport.prototype.drawText = function(state, canvas)\n{\n\tif (state.text != null && state.text.checkBounds())\n\t{\n\t\tcanvas.save();\n\t\tstate.text.paint(canvas);\n\t\tcanvas.restore();\n\t}\n};\n\n/**\n * Function: drawOverlays\n * \n * Draws the overlays for the given state. This is called if <includeOverlays>\n * is true.\n */\nmxImageExport.prototype.drawOverlays = function(state, canvas)\n{\n\tif (state.overlays != null)\n\t{\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tif (shape instanceof mxShape)\n\t\t\t{\n\t\t\t\tshape.paint(canvas);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxAbstractCanvas2D\n *\n * Base class for all canvases. A description of the public API is available in <mxXmlCanvas2D>.\n * All color values of <mxConstants.NONE> will be converted to null in the state.\n * \n * Constructor: mxAbstractCanvas2D\n *\n * Constructs a new abstract canvas.\n */\nfunction mxAbstractCanvas2D()\n{\n\t/**\n\t * Variable: converter\n\t * \n\t * Holds the <mxUrlConverter> to convert image URLs.\n\t */\n\tthis.converter = this.createUrlConverter();\n\t\n\tthis.reset();\n};\n\n/**\n * Variable: state\n * \n * Holds the current state.\n */\nmxAbstractCanvas2D.prototype.state = null;\n\n/**\n * Variable: states\n * \n * Stack of states.\n */\nmxAbstractCanvas2D.prototype.states = null;\n\n/**\n * Variable: path\n * \n * Holds the current path as an array.\n */\nmxAbstractCanvas2D.prototype.path = null;\n\n/**\n * Variable: rotateHtml\n * \n * Switch for rotation of HTML. Default is false.\n */\nmxAbstractCanvas2D.prototype.rotateHtml = true;\n\n/**\n * Variable: lastX\n * \n * Holds the last x coordinate.\n */\nmxAbstractCanvas2D.prototype.lastX = 0;\n\n/**\n * Variable: lastY\n * \n * Holds the last y coordinate.\n */\nmxAbstractCanvas2D.prototype.lastY = 0;\n\n/**\n * Variable: moveOp\n * \n * Contains the string used for moving in paths. Default is 'M'.\n */\nmxAbstractCanvas2D.prototype.moveOp = 'M';\n\n/**\n * Variable: lineOp\n * \n * Contains the string used for moving in paths. Default is 'L'.\n */\nmxAbstractCanvas2D.prototype.lineOp = 'L';\n\n/**\n * Variable: quadOp\n * \n * Contains the string used for quadratic paths. Default is 'Q'.\n */\nmxAbstractCanvas2D.prototype.quadOp = 'Q';\n\n/**\n * Variable: curveOp\n * \n * Contains the string used for bezier curves. Default is 'C'.\n */\nmxAbstractCanvas2D.prototype.curveOp = 'C';\n\n/**\n * Variable: closeOp\n * \n * Holds the operator for closing curves. Default is 'Z'.\n */\nmxAbstractCanvas2D.prototype.closeOp = 'Z';\n\n/**\n * Variable: pointerEvents\n * \n * Boolean value that specifies if events should be handled. Default is false.\n */\nmxAbstractCanvas2D.prototype.pointerEvents = false;\n\n/**\n * Function: createUrlConverter\n * \n * Create a new <mxUrlConverter> and returns it.\n */\nmxAbstractCanvas2D.prototype.createUrlConverter = function()\n{\n\treturn new mxUrlConverter();\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this canvas.\n */\nmxAbstractCanvas2D.prototype.reset = function()\n{\n\tthis.state = this.createState();\n\tthis.states = [];\n};\n\n/**\n * Function: createState\n * \n * Creates the state of the this canvas.\n */\nmxAbstractCanvas2D.prototype.createState = function()\n{\n\treturn {\n\t\tdx: 0,\n\t\tdy: 0,\n\t\tscale: 1,\n\t\talpha: 1,\n\t\tfillAlpha: 1,\n\t\tstrokeAlpha: 1,\n\t\tfillColor: null,\n\t\tgradientFillAlpha: 1,\n\t\tgradientColor: null,\n\t\tgradientAlpha: 1,\n\t\tgradientDirection: null,\n\t\tstrokeColor: null,\n\t\tstrokeWidth: 1,\n\t\tdashed: false,\n\t\tdashPattern: '3 3',\n\t\tfixDash: false,\n\t\tlineCap: 'flat',\n\t\tlineJoin: 'miter',\n\t\tmiterLimit: 10,\n\t\tfontColor: '#000000',\n\t\tfontBackgroundColor: null,\n\t\tfontBorderColor: null,\n\t\tfontSize: mxConstants.DEFAULT_FONTSIZE,\n\t\tfontFamily: mxConstants.DEFAULT_FONTFAMILY,\n\t\tfontStyle: 0,\n\t\tshadow: false,\n\t\tshadowColor: mxConstants.SHADOWCOLOR,\n\t\tshadowAlpha: mxConstants.SHADOW_OPACITY,\n\t\tshadowDx: mxConstants.SHADOW_OFFSET_X,\n\t\tshadowDy: mxConstants.SHADOW_OFFSET_Y,\n\t\trotation: 0,\n\t\trotationCx: 0,\n\t\trotationCy: 0\n\t};\n};\n\n/**\n * Function: format\n * \n * Rounds all numbers to integers.\n */\nmxAbstractCanvas2D.prototype.format = function(value)\n{\n\treturn Math.round(parseFloat(value));\n};\n\n/**\n * Function: addOp\n * \n * Adds the given operation to the path.\n */\nmxAbstractCanvas2D.prototype.addOp = function()\n{\n\tif (this.path != null)\n\t{\n\t\tthis.path.push(arguments[0]);\n\t\t\n\t\tif (arguments.length > 2)\n\t\t{\n\t\t\tvar s = this.state;\n\n\t\t\tfor (var i = 2; i < arguments.length; i += 2)\n\t\t\t{\n\t\t\t\tthis.lastX = arguments[i - 1];\n\t\t\t\tthis.lastY = arguments[i];\n\t\t\t\t\n\t\t\t\tthis.path.push(this.format((this.lastX + s.dx) * s.scale));\n\t\t\t\tthis.path.push(this.format((this.lastY + s.dy) * s.scale));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the given point and returns the result as an <mxPoint>.\n */\nmxAbstractCanvas2D.prototype.rotatePoint = function(x, y, theta, cx, cy)\n{\n\tvar rad = theta * (Math.PI / 180);\n\t\n\treturn mxUtils.getRotatedPoint(new mxPoint(x, y), Math.cos(rad),\n\t\tMath.sin(rad), new mxPoint(cx, cy));\n};\n\n/**\n * Function: save\n * \n * Saves the current state.\n */\nmxAbstractCanvas2D.prototype.save = function()\n{\n\tthis.states.push(this.state);\n\tthis.state = mxUtils.clone(this.state);\n};\n\n/**\n * Function: restore\n * \n * Restores the current state.\n */\nmxAbstractCanvas2D.prototype.restore = function()\n{\n\tif (this.states.length > 0)\n\t{\n\t\tthis.state = this.states.pop();\n\t}\n};\n\n/**\n * Function: setLink\n * \n * Sets the current link. Hook for subclassers.\n */\nmxAbstractCanvas2D.prototype.setLink = function(link)\n{\n\t// nop\n};\n\n/**\n * Function: scale\n * \n * Scales the current state.\n */\nmxAbstractCanvas2D.prototype.scale = function(value)\n{\n\tthis.state.scale *= value;\n\tthis.state.strokeWidth *= value;\n};\n\n/**\n * Function: translate\n * \n * Translates the current state.\n */\nmxAbstractCanvas2D.prototype.translate = function(dx, dy)\n{\n\tthis.state.dx += dx;\n\tthis.state.dy += dy;\n};\n\n/**\n * Function: rotate\n * \n * Rotates the current state.\n */\nmxAbstractCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\t// nop\n};\n\n/**\n * Function: setAlpha\n * \n * Sets the current alpha.\n */\nmxAbstractCanvas2D.prototype.setAlpha = function(value)\n{\n\tthis.state.alpha = value;\n};\n\n/**\n * Function: setFillAlpha\n * \n * Sets the current solid fill alpha.\n */\nmxAbstractCanvas2D.prototype.setFillAlpha = function(value)\n{\n\tthis.state.fillAlpha = value;\n};\n\n/**\n * Function: setStrokeAlpha\n * \n * Sets the current stroke alpha.\n */\nmxAbstractCanvas2D.prototype.setStrokeAlpha = function(value)\n{\n\tthis.state.strokeAlpha = value;\n};\n\n/**\n * Function: setFillColor\n * \n * Sets the current fill color.\n */\nmxAbstractCanvas2D.prototype.setFillColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fillColor = value;\n\tthis.state.gradientColor = null;\n};\n\n/**\n * Function: setGradient\n * \n * Sets the current gradient.\n */\nmxAbstractCanvas2D.prototype.setGradient = function(color1, color2, x, y, w, h, direction, alpha1, alpha2)\n{\n\tvar s = this.state;\n\ts.fillColor = color1;\n\ts.gradientFillAlpha = (alpha1 != null) ? alpha1 : 1;\n\ts.gradientColor = color2;\n\ts.gradientAlpha = (alpha2 != null) ? alpha2 : 1;\n\ts.gradientDirection = direction;\n};\n\n/**\n * Function: setStrokeColor\n * \n * Sets the current stroke color.\n */\nmxAbstractCanvas2D.prototype.setStrokeColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.strokeColor = value;\n};\n\n/**\n * Function: setStrokeWidth\n * \n * Sets the current stroke width.\n */\nmxAbstractCanvas2D.prototype.setStrokeWidth = function(value)\n{\n\tthis.state.strokeWidth = value;\n};\n\n/**\n * Function: setDashed\n * \n * Enables or disables dashed lines.\n */\nmxAbstractCanvas2D.prototype.setDashed = function(value, fixDash)\n{\n\tthis.state.dashed = value;\n\tthis.state.fixDash = fixDash;\n};\n\n/**\n * Function: setDashPattern\n * \n * Sets the current dash pattern.\n */\nmxAbstractCanvas2D.prototype.setDashPattern = function(value)\n{\n\tthis.state.dashPattern = value;\n};\n\n/**\n * Function: setLineCap\n * \n * Sets the current line cap.\n */\nmxAbstractCanvas2D.prototype.setLineCap = function(value)\n{\n\tthis.state.lineCap = value;\n};\n\n/**\n * Function: setLineJoin\n * \n * Sets the current line join.\n */\nmxAbstractCanvas2D.prototype.setLineJoin = function(value)\n{\n\tthis.state.lineJoin = value;\n};\n\n/**\n * Function: setMiterLimit\n * \n * Sets the current miter limit.\n */\nmxAbstractCanvas2D.prototype.setMiterLimit = function(value)\n{\n\tthis.state.miterLimit = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontColor = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontBackgroundColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBackgroundColor = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontBorderColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBorderColor = value;\n};\n\n/**\n * Function: setFontSize\n * \n * Sets the current font size.\n */\nmxAbstractCanvas2D.prototype.setFontSize = function(value)\n{\n\tthis.state.fontSize = parseFloat(value);\n};\n\n/**\n * Function: setFontFamily\n * \n * Sets the current font family.\n */\nmxAbstractCanvas2D.prototype.setFontFamily = function(value)\n{\n\tthis.state.fontFamily = value;\n};\n\n/**\n * Function: setFontStyle\n * \n * Sets the current font style.\n */\nmxAbstractCanvas2D.prototype.setFontStyle = function(value)\n{\n\tif (value == null)\n\t{\n\t\tvalue = 0;\n\t}\n\t\n\tthis.state.fontStyle = value;\n};\n\n/**\n * Function: setShadow\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadow = function(enabled)\n{\n\tthis.state.shadow = enabled;\n};\n\n/**\n * Function: setShadowColor\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.shadowColor = value;\n};\n\n/**\n * Function: setShadowAlpha\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowAlpha = function(value)\n{\n\tthis.state.shadowAlpha = value;\n};\n\n/**\n * Function: setShadowOffset\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowOffset = function(dx, dy)\n{\n\tthis.state.shadowDx = dx;\n\tthis.state.shadowDy = dy;\n};\n\n/**\n * Function: begin\n * \n * Starts a new path.\n */\nmxAbstractCanvas2D.prototype.begin = function()\n{\n\tthis.lastX = 0;\n\tthis.lastY = 0;\n\tthis.path = [];\n};\n\n/**\n * Function: moveTo\n * \n *  Moves the current path the given coordinates.\n */\nmxAbstractCanvas2D.prototype.moveTo = function(x, y)\n{\n\tthis.addOp(this.moveOp, x, y);\n};\n\n/**\n * Function: lineTo\n * \n * Draws a line to the given coordinates. Uses moveTo with the op argument.\n */\nmxAbstractCanvas2D.prototype.lineTo = function(x, y)\n{\n\tthis.addOp(this.lineOp, x, y);\n};\n\n/**\n * Function: quadTo\n * \n * Adds a quadratic curve to the current path.\n */\nmxAbstractCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tthis.addOp(this.quadOp, x1, y1, x2, y2);\n};\n\n/**\n * Function: curveTo\n * \n * Adds a bezier curve to the current path.\n */\nmxAbstractCanvas2D.prototype.curveTo = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.curveOp, x1, y1, x2, y2, x3, y3);\n};\n\n/**\n * Function: arcTo\n * \n * Adds the given arc to the current path. This is a synthetic operation that\n * is broken down into curves.\n */\nmxAbstractCanvas2D.prototype.arcTo = function(rx, ry, angle, largeArcFlag, sweepFlag, x, y)\n{\n\tvar curves = mxUtils.arcToCurves(this.lastX, this.lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y);\n\t\n\tif (curves != null)\n\t{\n\t\tfor (var i = 0; i < curves.length; i += 6) \n\t\t{\n\t\t\tthis.curveTo(curves[i], curves[i + 1], curves[i + 2],\n\t\t\t\tcurves[i + 3], curves[i + 4], curves[i + 5]);\n\t\t}\n\t}\n};\n\n/**\n * Function: close\n * \n * Closes the current path.\n */\nmxAbstractCanvas2D.prototype.close = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.closeOp);\n};\n\n/**\n * Function: end\n * \n * Empty implementation for backwards compatibility. This will be removed.\n */\nmxAbstractCanvas2D.prototype.end = function() { };\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxXmlCanvas2D\n *\n * Base class for all canvases. The following methods make up the public\n * interface of the canvas 2D for all painting in mxGraph:\n * \n * - <save>, <restore>\n * - <scale>, <translate>, <rotate>\n * - <setAlpha>, <setFillAlpha>, <setStrokeAlpha>, <setFillColor>, <setGradient>,\n *   <setStrokeColor>, <setStrokeWidth>, <setDashed>, <setDashPattern>, <setLineCap>, \n *   <setLineJoin>, <setMiterLimit>\n * - <setFontColor>, <setFontBackgroundColor>, <setFontBorderColor>, <setFontSize>,\n *   <setFontFamily>, <setFontStyle>\n * - <setShadow>, <setShadowColor>, <setShadowAlpha>, <setShadowOffset>\n * - <rect>, <roundrect>, <ellipse>, <image>, <text>\n * - <begin>, <moveTo>, <lineTo>, <quadTo>, <curveTo>\n * - <stroke>, <fill>, <fillAndStroke>\n * \n * <mxAbstractCanvas2D.arcTo> is an additional method for drawing paths. This is\n * a synthetic method, meaning that it is turned into a sequence of curves by\n * default. Subclassers may add native support for arcs.\n * \n * Constructor: mxXmlCanvas2D\n *\n * Constructs a new abstract canvas.\n */\nfunction mxXmlCanvas2D(root)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n\n\t// Writes default settings;\n\tthis.writeDefaults();\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxXmlCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabled. Default is true.\n */\nmxXmlCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: compressed\n * \n * Specifies if the output should be compressed by removing redundant calls.\n * Default is true.\n */\nmxXmlCanvas2D.prototype.compressed = true;\n\n/**\n * Function: writeDefaults\n * \n * Writes the rendering defaults to <root>:\n */\nmxXmlCanvas2D.prototype.writeDefaults = function()\n{\n\tvar elem;\n\t\n\t// Writes font defaults\n\telem = this.createElement('fontfamily');\n\telem.setAttribute('family', mxConstants.DEFAULT_FONTFAMILY);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('fontsize');\n\telem.setAttribute('size', mxConstants.DEFAULT_FONTSIZE);\n\tthis.root.appendChild(elem);\n\t\n\t// Writes shadow defaults\n\telem = this.createElement('shadowcolor');\n\telem.setAttribute('color', mxConstants.SHADOWCOLOR);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('shadowalpha');\n\telem.setAttribute('alpha', mxConstants.SHADOW_OPACITY);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('shadowoffset');\n\telem.setAttribute('dx', mxConstants.SHADOW_OFFSET_X);\n\telem.setAttribute('dy', mxConstants.SHADOW_OFFSET_Y);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: format\n * \n * Returns a formatted number with 2 decimal places.\n */\nmxXmlCanvas2D.prototype.format = function(value)\n{\n\treturn parseFloat(parseFloat(value).toFixed(2));\n};\n\n/**\n * Function: createElement\n * \n * Creates the given element using the owner document of <root>.\n */\nmxXmlCanvas2D.prototype.createElement = function(name)\n{\n\treturn this.root.ownerDocument.createElement(name);\n};\n\n/**\n * Function: save\n * \n * Saves the drawing state.\n */\nmxXmlCanvas2D.prototype.save = function()\n{\n\tif (this.compressed)\n\t{\n\t\tmxAbstractCanvas2D.prototype.save.apply(this, arguments);\n\t}\n\t\n\tthis.root.appendChild(this.createElement('save'));\n};\n\n/**\n * Function: restore\n * \n * Restores the drawing state.\n */\nmxXmlCanvas2D.prototype.restore = function()\n{\n\tif (this.compressed)\n\t{\n\t\tmxAbstractCanvas2D.prototype.restore.apply(this, arguments);\n\t}\n\t\n\tthis.root.appendChild(this.createElement('restore'));\n};\n\n/**\n * Function: scale\n * \n * Scales the output.\n * \n * Parameters:\n * \n * scale - Number that represents the scale where 1 is equal to 100%.\n */\nmxXmlCanvas2D.prototype.scale = function(value)\n{\n        var elem = this.createElement('scale');\n        elem.setAttribute('scale', value);\n        this.root.appendChild(elem);\n};\n\n/**\n * Function: translate\n * \n * Translates the output.\n * \n * Parameters:\n * \n * dx - Number that specifies the horizontal translation.\n * dy - Number that specifies the vertical translation.\n */\nmxXmlCanvas2D.prototype.translate = function(dx, dy)\n{\n\tvar elem = this.createElement('translate');\n\telem.setAttribute('dx', this.format(dx));\n\telem.setAttribute('dy', this.format(dy));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: rotate\n * \n * Rotates and/or flips the output around a given center. (Note: Due to\n * limitations in VML, the rotation cannot be concatenated.)\n * \n * Parameters:\n * \n * theta - Number that represents the angle of the rotation (in degrees).\n * flipH - Boolean indicating if the output should be flipped horizontally.\n * flipV - Boolean indicating if the output should be flipped vertically.\n * cx - Number that represents the x-coordinate of the rotation center.\n * cy - Number that represents the y-coordinate of the rotation center.\n */\nmxXmlCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tvar elem = this.createElement('rotate');\n\t\n\tif (theta != 0 || flipH || flipV)\n\t{\n\t\telem.setAttribute('theta', this.format(theta));\n\t\telem.setAttribute('flipH', (flipH) ? '1' : '0');\n\t\telem.setAttribute('flipV', (flipV) ? '1' : '0');\n\t\telem.setAttribute('cx', this.format(cx));\n\t\telem.setAttribute('cy', this.format(cy));\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setAlpha\n * \n * Sets the current alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.alpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('alpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFillAlpha\n * \n * Sets the current fill alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new fill alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setFillAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.fillAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setFillAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('fillalpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setStrokeAlpha\n * \n * Sets the current stroke alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new stroke alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setStrokeAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokealpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFillColor\n * \n * Sets the current fill color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFillColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tif (this.compressed)\n\t{\n\t\tif (this.state.fillColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setFillColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('fillcolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setGradient\n * \n * Sets the gradient. Note that the coordinates may be ignored by some implementations.\n * \n * Parameters:\n * \n * color1 - Hexadecimal representation of the start color.\n * color2 - Hexadecimal representation of the end color.\n * x - X-coordinate of the gradient region.\n * y - y-coordinate of the gradient region.\n * w - Width of the gradient region.\n * h - Height of the gradient region.\n * direction - One of <mxConstants.DIRECTION_NORTH>, <mxConstants.DIRECTION_EAST>,\n * <mxConstants.DIRECTION_SOUTH> or <mxConstants.DIRECTION_WEST>.\n * alpha1 - Optional alpha of the start color. Default is 1. Possible values\n * are between 1 (opaque) and 0 (transparent).\n * alpha2 - Optional alpha of the end color. Default is 1. Possible values\n * are between 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setGradient = function(color1, color2, x, y, w, h, direction, alpha1, alpha2)\n{\n\tif (color1 != null && color2 != null)\n\t{\n\t\tmxAbstractCanvas2D.prototype.setGradient.apply(this, arguments);\n\t\t\n\t\tvar elem = this.createElement('gradient');\n\t\telem.setAttribute('c1', color1);\n\t\telem.setAttribute('c2', color2);\n\t\telem.setAttribute('x', this.format(x));\n\t\telem.setAttribute('y', this.format(y));\n\t\telem.setAttribute('w', this.format(w));\n\t\telem.setAttribute('h', this.format(h));\n\t\t\n\t\t// Default direction is south\n\t\tif (direction != null)\n\t\t{\n\t\t\telem.setAttribute('direction', direction);\n\t\t}\n\t\t\n\t\tif (alpha1 != null)\n\t\t{\n\t\t\telem.setAttribute('alpha1', alpha1);\n\t\t}\n\t\t\n\t\tif (alpha2 != null)\n\t\t{\n\t\t\telem.setAttribute('alpha2', alpha2);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setStrokeColor\n * \n * Sets the current stroke color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setStrokeColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokecolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setStrokeWidth\n * \n * Sets the current stroke width.\n * \n * Parameters:\n * \n * value - Numeric representation of the stroke width.\n */\nmxXmlCanvas2D.prototype.setStrokeWidth = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeWidth == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeWidth.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokewidth');\n\telem.setAttribute('width', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setDashed\n * \n * Enables or disables dashed lines.\n * \n * Parameters:\n * \n * value - Boolean that specifies if dashed lines should be enabled.\n * value - Boolean that specifies if the stroke width should be ignored\n * for the dash pattern. Default is false.\n */\nmxXmlCanvas2D.prototype.setDashed = function(value, fixDash)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.dashed == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setDashed.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('dashed');\n\telem.setAttribute('dashed', (value) ? '1' : '0');\n\t\n\tif (fixDash != null)\n\t{\n\t\telem.setAttribute('fixDash', (fixDash) ? '1' : '0');\n\t}\n\t\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setDashPattern\n * \n * Sets the current dash pattern. Default is '3 3'.\n * \n * Parameters:\n * \n * value - String that represents the dash pattern, which is a sequence of\n * numbers defining the length of the dashes and the length of the spaces\n * between the dashes. The lengths are relative to the line width - a length\n * of 1 is equals to the line width.\n */\nmxXmlCanvas2D.prototype.setDashPattern = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.dashPattern == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setDashPattern.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('dashpattern');\n\telem.setAttribute('pattern', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setLineCap\n * \n * Sets the line cap. Default is 'flat' which corresponds to 'butt' in SVG.\n * \n * Parameters:\n * \n * value - String that represents the line cap. Possible values are flat, round\n * and square.\n */\nmxXmlCanvas2D.prototype.setLineCap = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.lineCap == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setLineCap.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('linecap');\n\telem.setAttribute('cap', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setLineJoin\n * \n * Sets the line join. Default is 'miter'.\n * \n * Parameters:\n * \n * value - String that represents the line join. Possible values are miter,\n * round and bevel.\n */\nmxXmlCanvas2D.prototype.setLineJoin = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.lineJoin == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setLineJoin.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('linejoin');\n\telem.setAttribute('join', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setMiterLimit\n * \n * Sets the miter limit. Default is 10.\n * \n * Parameters:\n * \n * value - Number that represents the miter limit.\n */\nmxXmlCanvas2D.prototype.setMiterLimit = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.miterLimit == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setMiterLimit.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('miterlimit');\n\telem.setAttribute('limit', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color. Default is '#000000'.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontColor.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontcolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontBackgroundColor\n * \n * Sets the current font background color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontBackgroundColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontBackgroundColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontBackgroundColor.apply(this, arguments);\n\t\t}\n\n\t\tvar elem = this.createElement('fontbackgroundcolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontBorderColor\n * \n * Sets the current font border color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontBorderColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontBorderColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontBorderColor.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontbordercolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontSize\n * \n * Sets the current font size. Default is <mxConstants.DEFAULT_FONTSIZE>.\n * \n * Parameters:\n * \n * value - Numeric representation of the font size.\n */\nmxXmlCanvas2D.prototype.setFontSize = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontSize == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontSize.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontsize');\n\t\telem.setAttribute('size', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontFamily\n * \n * Sets the current font family. Default is <mxConstants.DEFAULT_FONTFAMILY>.\n * \n * Parameters:\n * \n * value - String representation of the font family. This handles the same\n * values as the CSS font-family property.\n */\nmxXmlCanvas2D.prototype.setFontFamily = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontFamily == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontFamily.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontfamily');\n\t\telem.setAttribute('family', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontStyle\n * \n * Sets the current font style.\n * \n * Parameters:\n * \n * value - Numeric representation of the font family. This is the sum of the\n * font styles from <mxConstants>.\n */\nmxXmlCanvas2D.prototype.setFontStyle = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontStyle == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontStyle.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontstyle');\n\t\telem.setAttribute('style', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setShadow\n * \n * Enables or disables shadows.\n * \n * Parameters:\n * \n * value - Boolean that specifies if shadows should be enabled.\n */\nmxXmlCanvas2D.prototype.setShadow = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadow == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadow.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadow');\n\telem.setAttribute('enabled', (value) ? '1' : '0');\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setShadowColor\n * \n * Sets the current shadow color. Default is <mxConstants.SHADOWCOLOR>.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setShadowColor = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.state.shadowColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowcolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setShadowAlpha\n * \n * Sets the current shadows alpha. Default is <mxConstants.SHADOW_OPACITY>.\n * \n * Parameters:\n * \n * value - Number that represents the new alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setShadowAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadowAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowalpha');\n\telem.setAttribute('alpha', value);\n\tthis.root.appendChild(elem);\n\t\n};\n\n/**\n * Function: setShadowOffset\n * \n * Sets the current shadow offset.\n * \n * Parameters:\n * \n * dx - Number that represents the horizontal offset of the shadow.\n * dy - Number that represents the vertical offset of the shadow.\n */\nmxXmlCanvas2D.prototype.setShadowOffset = function(dx, dy)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadowDx == dx && this.state.shadowDy == dy)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowOffset.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowoffset');\n\telem.setAttribute('dx', dx);\n\telem.setAttribute('dy', dy);\n\tthis.root.appendChild(elem);\n\t\n};\n\n/**\n * Function: rect\n * \n * Puts a rectangle into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the rectangle.\n * y - Number that represents the y-coordinate of the rectangle.\n * w - Number that represents the width of the rectangle.\n * h - Number that represents the height of the rectangle.\n */\nmxXmlCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tvar elem = this.createElement('rect');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: roundrect\n * \n * Puts a rounded rectangle into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the rectangle.\n * y - Number that represents the y-coordinate of the rectangle.\n * w - Number that represents the width of the rectangle.\n * h - Number that represents the height of the rectangle.\n * dx - Number that represents the horizontal rounding.\n * dy - Number that represents the vertical rounding.\n */\nmxXmlCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tvar elem = this.createElement('roundrect');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\telem.setAttribute('dx', this.format(dx));\n\telem.setAttribute('dy', this.format(dy));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: ellipse\n * \n * Puts an ellipse into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the ellipse.\n * y - Number that represents the y-coordinate of the ellipse.\n * w - Number that represents the width of the ellipse.\n * h - Number that represents the height of the ellipse.\n */\nmxXmlCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tvar elem = this.createElement('ellipse');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: image\n * \n * Paints an image.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the image.\n * y - Number that represents the y-coordinate of the image.\n * w - Number that represents the width of the image.\n * h - Number that represents the height of the image.\n * src - String that specifies the URL of the image.\n * aspect - Boolean indicating if the aspect of the image should be preserved.\n * flipH - Boolean indicating if the image should be flipped horizontally.\n * flipV - Boolean indicating if the image should be flipped vertically.\n */\nmxXmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tsrc = this.converter.convert(src);\n\t\n\t// LATER: Add option for embedding images as base64.\n\tvar elem = this.createElement('image');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\telem.setAttribute('src', src);\n\telem.setAttribute('aspect', (aspect) ? '1' : '0');\n\telem.setAttribute('flipH', (flipH) ? '1' : '0');\n\telem.setAttribute('flipV', (flipV) ? '1' : '0');\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: begin\n * \n * Starts a new path and puts it into the drawing buffer.\n */\nmxXmlCanvas2D.prototype.begin = function()\n{\n\tthis.root.appendChild(this.createElement('begin'));\n\tthis.lastX = 0;\n\tthis.lastY = 0;\n};\n\n/**\n * Function: moveTo\n * \n * Moves the current path the given point.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the point.\n * y - Number that represents the y-coordinate of the point.\n */\nmxXmlCanvas2D.prototype.moveTo = function(x, y)\n{\n\tvar elem = this.createElement('move');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x;\n\tthis.lastY = y;\n};\n\n/**\n * Function: lineTo\n * \n * Draws a line to the given coordinates.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the endpoint.\n * y - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.lineTo = function(x, y)\n{\n\tvar elem = this.createElement('line');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x;\n\tthis.lastY = y;\n};\n\n/**\n * Function: quadTo\n * \n * Adds a quadratic curve to the current path.\n * \n * Parameters:\n * \n * x1 - Number that represents the x-coordinate of the control point.\n * y1 - Number that represents the y-coordinate of the control point.\n * x2 - Number that represents the x-coordinate of the endpoint.\n * y2 - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tvar elem = this.createElement('quad');\n\telem.setAttribute('x1', this.format(x1));\n\telem.setAttribute('y1', this.format(y1));\n\telem.setAttribute('x2', this.format(x2));\n\telem.setAttribute('y2', this.format(y2));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x2;\n\tthis.lastY = y2;\n};\n\n/**\n * Function: curveTo\n * \n * Adds a bezier curve to the current path.\n * \n * Parameters:\n * \n * x1 - Number that represents the x-coordinate of the first control point.\n * y1 - Number that represents the y-coordinate of the first control point.\n * x2 - Number that represents the x-coordinate of the second control point.\n * y2 - Number that represents the y-coordinate of the second control point.\n * x3 - Number that represents the x-coordinate of the endpoint.\n * y3 - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.curveTo = function(x1, y1, x2, y2, x3, y3)\n{\n\tvar elem = this.createElement('curve');\n\telem.setAttribute('x1', this.format(x1));\n\telem.setAttribute('y1', this.format(y1));\n\telem.setAttribute('x2', this.format(x2));\n\telem.setAttribute('y2', this.format(y2));\n\telem.setAttribute('x3', this.format(x3));\n\telem.setAttribute('y3', this.format(y3));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x3;\n\tthis.lastY = y3;\n};\n\n/**\n * Function: close\n * \n * Closes the current path.\n */\nmxXmlCanvas2D.prototype.close = function()\n{\n\tthis.root.appendChild(this.createElement('close'));\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for\n * plain text and html for HTML markup. Background and border color as well\n * as clipping is not available in plain text labels for VML. HTML labels\n * are not available as part of shapes with no foreignObject support in SVG\n * (eg. IE9, IE10).\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the text.\n * y - Number that represents the y-coordinate of the text.\n * w - Number that represents the available width for the text or 0 for automatic width.\n * h - Number that represents the available height for the text or 0 for automatic height.\n * str - String that specifies the text to be painted.\n * align - String that represents the horizontal alignment.\n * valign - String that represents the vertical alignment.\n * wrap - Boolean that specifies if word-wrapping is enabled. Requires w > 0.\n * format - Empty string for plain text or 'html' for HTML markup.\n * overflow - Specifies the overflow behaviour of the label. Requires w > 0 and/or h > 0.\n * clip - Boolean that specifies if the label should be clipped. Requires w > 0 and/or h > 0.\n * rotation - Number that specifies the angle of the rotation around the anchor point of the text.\n * dir - Optional string that specifies the text direction. Possible values are rtl and lrt.\n */\nmxXmlCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\tif (mxUtils.isNode(str))\n\t\t{\n\t\t\tstr = mxUtils.getOuterHtml(str);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('text');\n\t\telem.setAttribute('x', this.format(x));\n\t\telem.setAttribute('y', this.format(y));\n\t\telem.setAttribute('w', this.format(w));\n\t\telem.setAttribute('h', this.format(h));\n\t\telem.setAttribute('str', str);\n\t\t\n\t\tif (align != null)\n\t\t{\n\t\t\telem.setAttribute('align', align);\n\t\t}\n\t\t\n\t\tif (valign != null)\n\t\t{\n\t\t\telem.setAttribute('valign', valign);\n\t\t}\n\t\t\n\t\telem.setAttribute('wrap', (wrap) ? '1' : '0');\n\t\t\n\t\tif (format == null)\n\t\t{\n\t\t\tformat = '';\n\t\t}\n\t\t\n\t\telem.setAttribute('format', format);\n\t\t\n\t\tif (overflow != null)\n\t\t{\n\t\t\telem.setAttribute('overflow', overflow);\n\t\t}\n\t\t\n\t\tif (clip != null)\n\t\t{\n\t\t\telem.setAttribute('clip', (clip) ? '1' : '0');\n\t\t}\n\t\t\n\t\tif (rotation != null)\n\t\t{\n\t\t\telem.setAttribute('rotation', rotation);\n\t\t}\n\t\t\n\t\tif (dir != null)\n\t\t{\n\t\t\telem.setAttribute('dir', dir);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current drawing buffer.\n */\nmxXmlCanvas2D.prototype.stroke = function()\n{\n\tthis.root.appendChild(this.createElement('stroke'));\n};\n\n/**\n * Function: fill\n * \n * Fills the current drawing buffer.\n */\nmxXmlCanvas2D.prototype.fill = function()\n{\n\tthis.root.appendChild(this.createElement('fill'));\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills the current drawing buffer and its outline.\n */\nmxXmlCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.root.appendChild(this.createElement('fillstroke'));\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSvgCanvas2D\n *\n * Extends <mxAbstractCanvas2D> to implement a canvas for SVG. This canvas writes all\n * calls as SVG output to the given SVG root node.\n * \n * (code)\n * var svgDoc = mxUtils.createXmlDocument();\n * var root = (svgDoc.createElementNS != null) ?\n * \t\tsvgDoc.createElementNS(mxConstants.NS_SVG, 'svg') : svgDoc.createElement('svg');\n * \n * if (svgDoc.createElementNS == null)\n * {\n *   root.setAttribute('xmlns', mxConstants.NS_SVG);\n *   root.setAttribute('xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * else\n * {\n *   root.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * \n * var bounds = graph.getGraphBounds();\n * root.setAttribute('width', (bounds.x + bounds.width + 4) + 'px');\n * root.setAttribute('height', (bounds.y + bounds.height + 4) + 'px');\n * root.setAttribute('version', '1.1');\n * \n * svgDoc.appendChild(root);\n * \n * var svgCanvas = new mxSvgCanvas2D(root);\n * (end)\n * \n * A description of the public API is available in <mxXmlCanvas2D>.\n * \n * To disable anti-aliasing in the output, use the following code.\n * \n * (code)\n * graph.view.canvas.ownerSVGElement.setAttribute('shape-rendering', 'crispEdges');\n * (end)\n * \n * Or set the respective attribute in the SVG element directly.\n * \n * Constructor: mxSvgCanvas2D\n *\n * Constructs a new SVG canvas.\n * \n * Parameters:\n * \n * root - SVG container for the output.\n * styleEnabled - Optional boolean that specifies if a style section should be\n * added. The style section sets the default font-size, font-family and\n * stroke-miterlimit globally. Default is false.\n */\nfunction mxSvgCanvas2D(root, styleEnabled)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n\n\t/**\n\t * Variable: gradients\n\t * \n\t * Local cache of gradients for quick lookups.\n\t */\n\tthis.gradients = [];\n\n\t/**\n\t * Variable: defs\n\t * \n\t * Reference to the defs section of the SVG document. Only for export.\n\t */\n\tthis.defs = null;\n\t\n\t/**\n\t * Variable: styleEnabled\n\t * \n\t * Stores the value of styleEnabled passed to the constructor.\n\t */\n\tthis.styleEnabled = (styleEnabled != null) ? styleEnabled : false;\n\t\n\tvar svg = null;\n\t\n\t// Adds optional defs section for export\n\tif (root.ownerDocument != document)\n\t{\n\t\tvar node = root;\n\n\t\t// Finds owner SVG element in XML DOM\n\t\twhile (node != null && node.nodeName != 'svg')\n\t\t{\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\t\n\t\tsvg = node;\n\t}\n\n\tif (svg != null)\n\t{\n\t\t// Tries to get existing defs section\n\t\tvar tmp = svg.getElementsByTagName('defs');\n\t\t\n\t\tif (tmp.length > 0)\n\t\t{\n\t\t\tthis.defs = svg.getElementsByTagName('defs')[0];\n\t\t}\n\t\t\n\t\t// Adds defs section if none exists\n\t\tif (this.defs == null)\n\t\t{\n\t\t\tthis.defs = this.createElement('defs');\n\t\t\t\n\t\t\tif (svg.firstChild != null)\n\t\t\t{\n\t\t\t\tsvg.insertBefore(this.defs, svg.firstChild);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsvg.appendChild(this.defs);\n\t\t\t}\n\t\t}\n\n\t\t// Adds stylesheet\n\t\tif (this.styleEnabled)\n\t\t{\n\t\t\tthis.defs.appendChild(this.createStyle());\n\t\t}\n\t}\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxSvgCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Capability check for DOM parser.\n */\n(function()\n{\n\tmxSvgCanvas2D.prototype.useDomParser = !mxClient.IS_IE && typeof DOMParser === 'function' && typeof XMLSerializer === 'function';\n\t\n\tif (mxSvgCanvas2D.prototype.useDomParser)\n\t{\n\t\t// Checks using a generic test text if the parsing actually works. This is a workaround\n\t\t// for older browsers where the capability check returns true but the parsing fails.\n\t\ttry\n\t\t{\n\t\t\tvar doc = new DOMParser().parseFromString('test text', 'text/html');\n\t\t\tmxSvgCanvas2D.prototype.useDomParser = doc != null;\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxSvgCanvas2D.prototype.useDomParser = false;\n\t\t}\n\t}\n})();\n\n/**\n * Variable: path\n * \n * Holds the current DOM node.\n */\nmxSvgCanvas2D.prototype.node = null;\n\n/**\n * Variable: matchHtmlAlignment\n * \n * Specifies if plain text output should match the vertical HTML alignment.\n * Defaul is true.\n */\nmxSvgCanvas2D.prototype.matchHtmlAlignment = true;\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabled. Default is true.\n */\nmxSvgCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: foEnabled\n * \n * Specifies if use of foreignObject for HTML markup is allowed. Default is true.\n */\nmxSvgCanvas2D.prototype.foEnabled = true;\n\n/**\n * Variable: foAltText\n * \n * Specifies the fallback text for unsupported foreignObjects in exported\n * documents. Default is '[Object]'. If this is set to null then no fallback\n * text is added to the exported document.\n */\nmxSvgCanvas2D.prototype.foAltText = '[Object]';\n\n/**\n * Variable: foOffset\n * \n * Offset to be used for foreignObjects.\n */\nmxSvgCanvas2D.prototype.foOffset = 0;\n\n/**\n * Variable: textOffset\n * \n * Offset to be used for text elements.\n */\nmxSvgCanvas2D.prototype.textOffset = 0;\n\n/**\n * Variable: imageOffset\n * \n * Offset to be used for image elements.\n */\nmxSvgCanvas2D.prototype.imageOffset = 0;\n\n/**\n * Variable: strokeTolerance\n * \n * Adds transparent paths for strokes.\n */\nmxSvgCanvas2D.prototype.strokeTolerance = 0;\n\n/**\n * Variable: minStrokeWidth\n * \n * Minimum stroke width for output.\n */\nmxSvgCanvas2D.prototype.minStrokeWidth = 1;\n\n/**\n * Variable: refCount\n * \n * Local counter for references in SVG export.\n */\nmxSvgCanvas2D.prototype.refCount = 0;\n\n/**\n * Variable: blockImagePointerEvents\n * \n * Specifies if a transparent rectangle should be added on top of images to absorb\n * all pointer events. Default is false. This is only needed in Firefox to disable\n * control-clicks on images.\n */\nmxSvgCanvas2D.prototype.blockImagePointerEvents = false;\n\n/**\n * Variable: lineHeightCorrection\n * \n * Correction factor for <mxConstants.LINE_HEIGHT> in HTML output. Default is 1.\n */\nmxSvgCanvas2D.prototype.lineHeightCorrection = 1;\n\n/**\n * Variable: pointerEventsValue\n * \n * Default value for active pointer events. Default is all.\n */\nmxSvgCanvas2D.prototype.pointerEventsValue = 'all';\n\n/**\n * Variable: fontMetricsPadding\n * \n * Padding to be added for text that is not wrapped to account for differences\n * in font metrics on different platforms in pixels. Default is 10.\n */\nmxSvgCanvas2D.prototype.fontMetricsPadding = 10;\n\n/**\n * Variable: cacheOffsetSize\n * \n * Specifies if offsetWidth and offsetHeight should be cached. Default is true.\n * This is used to speed up repaint of text in <updateText>.\n */\nmxSvgCanvas2D.prototype.cacheOffsetSize = true;\n\n/**\n * Function: format\n * \n * Rounds all numbers to 2 decimal points.\n */\nmxSvgCanvas2D.prototype.format = function(value)\n{\n\treturn parseFloat(parseFloat(value).toFixed(2));\n};\n\n/**\n * Function: getBaseUrl\n * \n * Returns the URL of the page without the hash part. This needs to use href to\n * include any search part with no params (ie question mark alone). This is a\n * workaround for the fact that window.location.search is empty if there is\n * no search string behind the question mark.\n */\nmxSvgCanvas2D.prototype.getBaseUrl = function()\n{\n\tvar href = window.location.href;\n\tvar hash = href.lastIndexOf('#');\n\t\n\tif (hash > 0)\n\t{\n\t\thref = href.substring(0, hash);\n\t}\n\t\n\treturn href;\n};\n\n/**\n * Function: reset\n * \n * Returns any offsets for rendering pixels.\n */\nmxSvgCanvas2D.prototype.reset = function()\n{\n\tmxAbstractCanvas2D.prototype.reset.apply(this, arguments);\n\tthis.gradients = [];\n};\n\n/**\n * Function: createStyle\n * \n * Creates the optional style section.\n */\nmxSvgCanvas2D.prototype.createStyle = function(x)\n{\n\tvar style = this.createElement('style');\n\tstyle.setAttribute('type', 'text/css');\n\tmxUtils.write(style, 'svg{font-family:' + mxConstants.DEFAULT_FONTFAMILY +\n\t\t\t';font-size:' + mxConstants.DEFAULT_FONTSIZE +\n\t\t\t';fill:none;stroke-miterlimit:10}');\n\t\n\treturn style;\n};\n\n/**\n * Function: createElement\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createElement = function(tagName, namespace)\n{\n\tif (this.root.ownerDocument.createElementNS != null)\n\t{\n\t\treturn this.root.ownerDocument.createElementNS(namespace || mxConstants.NS_SVG, tagName);\n\t}\n\telse\n\t{\n\t\tvar elt = this.root.ownerDocument.createElement(tagName);\n\t\t\n\t\tif (namespace != null)\n\t\t{\n\t\t\telt.setAttribute('xmlns', namespace);\n\t\t}\n\t\t\n\t\treturn elt;\n\t}\n};\n\n/**\n * Function: getAlternateContent\n * \n * Returns the alternate content for the given foreignObject.\n */\nmxSvgCanvas2D.prototype.createAlternateContent = function(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation)\n{\n\tif (this.foAltText != null)\n\t{\n\t\tvar s = this.state;\n\t\tvar alt = this.createElement('text');\n\t\talt.setAttribute('x', Math.round(w / 2));\n\t\talt.setAttribute('y', Math.round((h + s.fontSize) / 2));\n\t\talt.setAttribute('fill', s.fontColor || 'black');\n\t\talt.setAttribute('text-anchor', 'middle');\n\t\talt.setAttribute('font-size', s.fontSize + 'px');\n\t\talt.setAttribute('font-family', s.fontFamily);\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t\t{\n\t\t\talt.setAttribute('font-weight', 'bold');\n\t\t}\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t\t{\n\t\t\talt.setAttribute('font-style', 'italic');\n\t\t}\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t\t{\n\t\t\talt.setAttribute('text-decoration', 'underline');\n\t\t}\n\t\t\n\t\tmxUtils.write(alt, this.foAltText);\n\t\t\n\t\treturn alt;\n\t}\n\telse\n\t{\n\t\treturn null;\n\t}\n};\n\n/**\n * Function: createGradientId\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createGradientId = function(start, end, alpha1, alpha2, direction)\n{\n\t// Removes illegal characters from gradient ID\n\tif (start.charAt(0) == '#')\n\t{\n\t\tstart = start.substring(1);\n\t}\n\t\n\tif (end.charAt(0) == '#')\n\t{\n\t\tend = end.substring(1);\n\t}\n\t\n\t// Workaround for gradient IDs not working in Safari 5 / Chrome 6\n\t// if they contain uppercase characters\n\tstart = start.toLowerCase() + '-' + alpha1;\n\tend = end.toLowerCase() + '-' + alpha2;\n\n\t// Wrong gradient directions possible?\n\tvar dir = null;\n\t\n\tif (direction == null || direction == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tdir = 's';\n\t}\n\telse if (direction == mxConstants.DIRECTION_EAST)\n\t{\n\t\tdir = 'e';\n\t}\n\telse\n\t{\n\t\tvar tmp = start;\n\t\tstart = end;\n\t\tend = tmp;\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tdir = 's';\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tdir = 'e';\n\t\t}\n\t}\n\t\n\treturn 'mx-gradient-' + start + '-' + end + '-' + dir;\n};\n\n/**\n * Function: getSvgGradient\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.getSvgGradient = function(start, end, alpha1, alpha2, direction)\n{\n\tvar id = this.createGradientId(start, end, alpha1, alpha2, direction);\n\tvar gradient = this.gradients[id];\n\t\n\tif (gradient == null)\n\t{\n\t\tvar svg = this.root.ownerSVGElement;\n\n\t\tvar counter = 0;\n\t\tvar tmpId = id + '-' + counter;\n\n\t\tif (svg != null)\n\t\t{\n\t\t\tgradient = svg.ownerDocument.getElementById(tmpId);\n\t\t\t\n\t\t\twhile (gradient != null && gradient.ownerSVGElement != svg)\n\t\t\t{\n\t\t\t\ttmpId = id + '-' + counter++;\n\t\t\t\tgradient = svg.ownerDocument.getElementById(tmpId);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Uses shorter IDs for export\n\t\t\ttmpId = 'id' + (++this.refCount);\n\t\t}\n\t\t\n\t\tif (gradient == null)\n\t\t{\n\t\t\tgradient = this.createSvgGradient(start, end, alpha1, alpha2, direction);\n\t\t\tgradient.setAttribute('id', tmpId);\n\t\t\t\n\t\t\tif (this.defs != null)\n\t\t\t{\n\t\t\t\tthis.defs.appendChild(gradient);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsvg.appendChild(gradient);\n\t\t\t}\n\t\t}\n\n\t\tthis.gradients[id] = gradient;\n\t}\n\n\treturn gradient.getAttribute('id');\n};\n\n/**\n * Function: createSvgGradient\n * \n * Creates the given SVG gradient.\n */\nmxSvgCanvas2D.prototype.createSvgGradient = function(start, end, alpha1, alpha2, direction)\n{\n\tvar gradient = this.createElement('linearGradient');\n\tgradient.setAttribute('x1', '0%');\n\tgradient.setAttribute('y1', '0%');\n\tgradient.setAttribute('x2', '0%');\n\tgradient.setAttribute('y2', '0%');\n\t\n\tif (direction == null || direction == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tgradient.setAttribute('y2', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_EAST)\n\t{\n\t\tgradient.setAttribute('x2', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_NORTH)\n\t{\n\t\tgradient.setAttribute('y1', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_WEST)\n\t{\n\t\tgradient.setAttribute('x1', '100%');\n\t}\n\t\n\tvar op = (alpha1 < 1) ? ';stop-opacity:' + alpha1 : '';\n\t\n\tvar stop = this.createElement('stop');\n\tstop.setAttribute('offset', '0%');\n\tstop.setAttribute('style', 'stop-color:' + start + op);\n\tgradient.appendChild(stop);\n\t\n\top = (alpha2 < 1) ? ';stop-opacity:' + alpha2 : '';\n\t\n\tstop = this.createElement('stop');\n\tstop.setAttribute('offset', '100%');\n\tstop.setAttribute('style', 'stop-color:' + end + op);\n\tgradient.appendChild(stop);\n\t\n\treturn gradient;\n};\n\n/**\n * Function: addNode\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.addNode = function(filled, stroked)\n{\n\tvar node = this.node;\n\tvar s = this.state;\n\n\tif (node != null)\n\t{\n\t\tif (node.nodeName == 'path')\n\t\t{\n\t\t\t// Checks if the path is not empty\n\t\t\tif (this.path != null && this.path.length > 0)\n\t\t\t{\n\t\t\t\tnode.setAttribute('d', this.path.join(' '));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (filled && s.fillColor != null)\n\t\t{\n\t\t\tthis.updateFill();\n\t\t}\n\t\telse if (!this.styleEnabled)\n\t\t{\n\t\t\t// Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=814952\n\t\t\tif (node.nodeName == 'ellipse' && mxClient.IS_FF)\n\t\t\t{\n\t\t\t\tnode.setAttribute('fill', 'transparent');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode.setAttribute('fill', 'none');\n\t\t\t}\n\t\t\t\n\t\t\t// Sets the actual filled state for stroke tolerance\n\t\t\tfilled = false;\n\t\t}\n\t\t\n\t\tif (stroked && s.strokeColor != null)\n\t\t{\n\t\t\tthis.updateStroke();\n\t\t}\n\t\telse if (!this.styleEnabled)\n\t\t{\n\t\t\tnode.setAttribute('stroke', 'none');\n\t\t}\n\t\t\n\t\tif (s.transform != null && s.transform.length > 0)\n\t\t{\n\t\t\tnode.setAttribute('transform', s.transform);\n\t\t}\n\t\t\n\t\tif (s.shadow)\n\t\t{\n\t\t\tthis.root.appendChild(this.createShadow(node));\n\t\t}\n\t\n\t\t// Adds stroke tolerance\n\t\tif (this.strokeTolerance > 0 && !filled)\n\t\t{\n\t\t\tthis.root.appendChild(this.createTolerance(node));\n\t\t}\n\n\t\t// Adds pointer events\n\t\tif (this.pointerEvents && (node.nodeName != 'path' ||\n\t\t\tthis.path[this.path.length - 1] == this.closeOp))\n\t\t{\n\t\t\tnode.setAttribute('pointer-events', this.pointerEventsValue);\n\t\t}\n\t\t// Enables clicks for nodes inside a link element\n\t\telse if (!this.pointerEvents && this.originalRoot == null)\n\t\t{\n\t\t\tnode.setAttribute('pointer-events', 'none');\n\t\t}\n\t\t\n\t\t// Removes invisible nodes from output if they don't handle events\n\t\tif ((node.nodeName != 'rect' && node.nodeName != 'path' && node.nodeName != 'ellipse') ||\n\t\t\t(node.getAttribute('fill') != 'none' && node.getAttribute('fill') != 'transparent') ||\n\t\t\tnode.getAttribute('stroke') != 'none' || node.getAttribute('pointer-events') != 'none')\n\t\t{\n\t\t\t// LATER: Update existing DOM for performance\t\t\n\t\t\tthis.root.appendChild(node);\n\t\t}\n\t\t\n\t\tthis.node = null;\n\t}\n};\n\n/**\n * Function: updateFill\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateFill = function()\n{\n\tvar s = this.state;\n\t\n\tif (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tthis.node.setAttribute('fill-opacity', s.alpha * s.fillAlpha);\n\t}\n\t\n\tif (s.fillColor != null)\n\t{\n\t\tif (s.gradientColor != null)\n\t\t{\n\t\t\tvar id = this.getSvgGradient(s.fillColor, s.gradientColor, s.gradientFillAlpha, s.gradientAlpha, s.gradientDirection);\n\t\t\t\n\t\t\tif (!mxClient.IS_CHROME_APP && !mxClient.IS_IE && !mxClient.IS_IE11 &&\n\t\t\t\t!mxClient.IS_EDGE && this.root.ownerDocument == document)\n\t\t\t{\n\t\t\t\t// Workaround for potential base tag and brackets must be escaped\n\t\t\t\tvar base = this.getBaseUrl().replace(/([\\(\\)])/g, '\\\\$1');\n\t\t\t\tthis.node.setAttribute('fill', 'url(' + base + '#' + id + ')');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.node.setAttribute('fill', 'url(#' + id + ')');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.node.setAttribute('fill', s.fillColor.toLowerCase());\n\t\t}\n\t}\n};\n\n/**\n * Function: getCurrentStrokeWidth\n * \n * Returns the current stroke width (>= 1), ie. max(1, this.format(this.state.strokeWidth * this.state.scale)).\n */\nmxSvgCanvas2D.prototype.getCurrentStrokeWidth = function()\n{\n\treturn Math.max(this.minStrokeWidth, Math.max(0.01, this.format(this.state.strokeWidth * this.state.scale)));\n};\n\n/**\n * Function: updateStroke\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateStroke = function()\n{\n\tvar s = this.state;\n\n\tthis.node.setAttribute('stroke', s.strokeColor.toLowerCase());\n\t\n\tif (s.alpha < 1 || s.strokeAlpha < 1)\n\t{\n\t\tthis.node.setAttribute('stroke-opacity', s.alpha * s.strokeAlpha);\n\t}\n\t\n\tvar sw = this.getCurrentStrokeWidth();\n\t\n\tif (sw != 1)\n\t{\n\t\tthis.node.setAttribute('stroke-width', sw);\n\t}\n\t\n\tif (this.node.nodeName == 'path')\n\t{\n\t\tthis.updateStrokeAttributes();\n\t}\n\t\n\tif (s.dashed)\n\t{\n\t\tthis.node.setAttribute('stroke-dasharray', this.createDashPattern(\n\t\t\t((s.fixDash) ? 1 : s.strokeWidth) * s.scale));\n\t}\n};\n\n/**\n * Function: updateStrokeAttributes\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateStrokeAttributes = function()\n{\n\tvar s = this.state;\n\t\n\t// Linejoin miter is default in SVG\n\tif (s.lineJoin != null && s.lineJoin != 'miter')\n\t{\n\t\tthis.node.setAttribute('stroke-linejoin', s.lineJoin);\n\t}\n\t\n\tif (s.lineCap != null)\n\t{\n\t\t// flat is called butt in SVG\n\t\tvar value = s.lineCap;\n\t\t\n\t\tif (value == 'flat')\n\t\t{\n\t\t\tvalue = 'butt';\n\t\t}\n\t\t\n\t\t// Linecap butt is default in SVG\n\t\tif (value != 'butt')\n\t\t{\n\t\t\tthis.node.setAttribute('stroke-linecap', value);\n\t\t}\n\t}\n\t\n\t// Miterlimit 10 is default in our document\n\tif (s.miterLimit != null && (!this.styleEnabled || s.miterLimit != 10))\n\t{\n\t\tthis.node.setAttribute('stroke-miterlimit', s.miterLimit);\n\t}\n};\n\n/**\n * Function: createDashPattern\n * \n * Creates the SVG dash pattern for the given state.\n */\nmxSvgCanvas2D.prototype.createDashPattern = function(scale)\n{\n\tvar pat = [];\n\t\n\tif (typeof(this.state.dashPattern) === 'string')\n\t{\n\t\tvar dash = this.state.dashPattern.split(' ');\n\t\t\n\t\tif (dash.length > 0)\n\t\t{\n\t\t\tfor (var i = 0; i < dash.length; i++)\n\t\t\t{\n\t\t\t\tpat[i] = Number(dash[i]) * scale;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn pat.join(' ');\n};\n\n/**\n * Function: createTolerance\n * \n * Creates a hit detection tolerance shape for the given node.\n */\nmxSvgCanvas2D.prototype.createTolerance = function(node)\n{\n\tvar tol = node.cloneNode(true);\n\tvar sw = parseFloat(tol.getAttribute('stroke-width') || 1) + this.strokeTolerance;\n\ttol.setAttribute('pointer-events', 'stroke');\n\ttol.setAttribute('visibility', 'hidden');\n\ttol.removeAttribute('stroke-dasharray');\n\ttol.setAttribute('stroke-width', sw);\n\ttol.setAttribute('fill', 'none');\n\t\n\t// Workaround for Opera ignoring the visiblity attribute above while\n\t// other browsers need a stroke color to perform the hit-detection but\n\t// do not ignore the visibility attribute. Side-effect is that Opera's\n\t// hit detection for horizontal/vertical edges seems to ignore the tol.\n\ttol.setAttribute('stroke', (mxClient.IS_OT) ? 'none' : 'white');\n\t\n\treturn tol;\n};\n\n/**\n * Function: createShadow\n * \n * Creates a shadow for the given node.\n */\nmxSvgCanvas2D.prototype.createShadow = function(node)\n{\n\tvar shadow = node.cloneNode(true);\n\tvar s = this.state;\n\n\t// Firefox uses transparent for no fill in ellipses\n\tif (shadow.getAttribute('fill') != 'none' && (!mxClient.IS_FF || shadow.getAttribute('fill') != 'transparent'))\n\t{\n\t\tshadow.setAttribute('fill', s.shadowColor);\n\t}\n\t\n\tif (shadow.getAttribute('stroke') != 'none')\n\t{\n\t\tshadow.setAttribute('stroke', s.shadowColor);\n\t}\n\n\tshadow.setAttribute('transform', 'translate(' + this.format(s.shadowDx * s.scale) +\n\t\t',' + this.format(s.shadowDy * s.scale) + ')' + (s.transform || ''));\n\tshadow.setAttribute('opacity', s.shadowAlpha);\n\t\n\treturn shadow;\n};\n\n/**\n * Function: setLink\n * \n * Experimental implementation for hyperlinks.\n */\nmxSvgCanvas2D.prototype.setLink = function(link)\n{\n\tif (link == null)\n\t{\n\t\tthis.root = this.originalRoot;\n\t}\n\telse\n\t{\n\t\tthis.originalRoot = this.root;\n\t\t\n\t\tvar node = this.createElement('a');\n\t\t\n\t\t// Workaround for implicit namespace handling in HTML5 export, IE adds NS1 namespace so use code below\n\t\t// in all IE versions except quirks mode. KNOWN: Adds xlink namespace to each image tag in output.\n\t\tif (node.setAttributeNS == null || (this.root.ownerDocument != document && document.documentMode == null))\n\t\t{\n\t\t\tnode.setAttribute('xlink:href', link);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.setAttributeNS(mxConstants.NS_XLINK, 'xlink:href', link);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(node);\n\t\tthis.root = node;\n\t}\n};\n\n/**\n * Function: rotate\n * \n * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n */\nmxSvgCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tif (theta != 0 || flipH || flipV)\n\t{\n\t\tvar s = this.state;\n\t\tcx += s.dx;\n\t\tcy += s.dy;\n\t\n\t\tcx *= s.scale;\n\t\tcy *= s.scale;\n\n\t\ts.transform = s.transform || '';\n\t\t\n\t\t// This implementation uses custom scale/translate and built-in rotation\n\t\t// Rotation state is part of the AffineTransform in state.transform\n\t\tif (flipH && flipV)\n\t\t{\n\t\t\ttheta += 180;\n\t\t}\n\t\telse if (flipH != flipV)\n\t\t{\n\t\t\tvar tx = (flipH) ? cx : 0;\n\t\t\tvar sx = (flipH) ? -1 : 1;\n\t\n\t\t\tvar ty = (flipV) ? cy : 0;\n\t\t\tvar sy = (flipV) ? -1 : 1;\n\n\t\t\ts.transform += 'translate(' + this.format(tx) + ',' + this.format(ty) + ')' +\n\t\t\t\t'scale(' + this.format(sx) + ',' + this.format(sy) + ')' +\n\t\t\t\t'translate(' + this.format(-tx) + ',' + this.format(-ty) + ')';\n\t\t}\n\t\t\n\t\tif (flipH ? !flipV : flipV)\n\t\t{\n\t\t\ttheta *= -1;\n\t\t}\n\t\t\n\t\tif (theta != 0)\n\t\t{\n\t\t\ts.transform += 'rotate(' + this.format(theta) + ',' + this.format(cx) + ',' + this.format(cy) + ')';\n\t\t}\n\t\t\n\t\ts.rotation = s.rotation + theta;\n\t\ts.rotationCx = cx;\n\t\ts.rotationCy = cy;\n\t}\n};\n\n/**\n * Function: begin\n * \n * Extends superclass to create path.\n */\nmxSvgCanvas2D.prototype.begin = function()\n{\n\tmxAbstractCanvas2D.prototype.begin.apply(this, arguments);\n\tthis.node = this.createElement('path');\n};\n\n/**\n * Function: rect\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createElement('rect');\n\tn.setAttribute('x', this.format((x + s.dx) * s.scale));\n\tn.setAttribute('y', this.format((y + s.dy) * s.scale));\n\tn.setAttribute('width', this.format(w * s.scale));\n\tn.setAttribute('height', this.format(h * s.scale));\n\t\n\tthis.node = n;\n};\n\n/**\n * Function: roundrect\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tthis.rect(x, y, w, h);\n\t\n\tif (dx > 0)\n\t{\n\t\tthis.node.setAttribute('rx', this.format(dx * this.state.scale));\n\t}\n\t\n\tif (dy > 0)\n\t{\n\t\tthis.node.setAttribute('ry', this.format(dy * this.state.scale));\n\t}\n};\n\n/**\n * Function: ellipse\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createElement('ellipse');\n\t// No rounding for consistent output with 1.x\n\tn.setAttribute('cx', Math.round((x + w / 2 + s.dx) * s.scale));\n\tn.setAttribute('cy', Math.round((y + h / 2 + s.dy) * s.scale));\n\tn.setAttribute('rx', w / 2 * s.scale);\n\tn.setAttribute('ry', h / 2 * s.scale);\n\tthis.node = n;\n};\n\n/**\n * Function: image\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tsrc = this.converter.convert(src);\n\t\n\t// LATER: Add option for embedding images as base64.\n\taspect = (aspect != null) ? aspect : true;\n\tflipH = (flipH != null) ? flipH : false;\n\tflipV = (flipV != null) ? flipV : false;\n\t\n\tvar s = this.state;\n\tx += s.dx;\n\ty += s.dy;\n\t\n\tvar node = this.createElement('image');\n\tnode.setAttribute('x', this.format(x * s.scale) + this.imageOffset);\n\tnode.setAttribute('y', this.format(y * s.scale) + this.imageOffset);\n\tnode.setAttribute('width', this.format(w * s.scale));\n\tnode.setAttribute('height', this.format(h * s.scale));\n\t\n\t// Workaround for missing namespace support\n\tif (node.setAttributeNS == null)\n\t{\n\t\tnode.setAttribute('xlink:href', src);\n\t}\n\telse\n\t{\n\t\tnode.setAttributeNS(mxConstants.NS_XLINK, 'xlink:href', src);\n\t}\n\t\n\tif (!aspect)\n\t{\n\t\tnode.setAttribute('preserveAspectRatio', 'none');\n\t}\n\n\tif (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tnode.setAttribute('opacity', s.alpha * s.fillAlpha);\n\t}\n\t\n\tvar tr = this.state.transform || '';\n\t\n\tif (flipH || flipV)\n\t{\n\t\tvar sx = 1;\n\t\tvar sy = 1;\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\tif (flipH)\n\t\t{\n\t\t\tsx = -1;\n\t\t\tdx = -w - 2 * x;\n\t\t}\n\t\t\n\t\tif (flipV)\n\t\t{\n\t\t\tsy = -1;\n\t\t\tdy = -h - 2 * y;\n\t\t}\n\t\t\n\t\t// Adds image tansformation to existing transform\n\t\ttr += 'scale(' + sx + ',' + sy + ')translate(' + (dx * s.scale) + ',' + (dy * s.scale) + ')';\n\t}\n\n\tif (tr.length > 0)\n\t{\n\t\tnode.setAttribute('transform', tr);\n\t}\n\t\n\tif (!this.pointerEvents)\n\t{\n\t\tnode.setAttribute('pointer-events', 'none');\n\t}\n\t\n\tthis.root.appendChild(node);\n\t\n\t// Disables control-clicks on images in Firefox to open in new tab\n\t// by putting a rect in the foreground that absorbs all events and\n\t// disabling all pointer-events on the original image tag.\n\tif (this.blockImagePointerEvents)\n\t{\n\t\tnode.setAttribute('style', 'pointer-events:none');\n\t\t\n\t\tnode = this.createElement('rect');\n\t\tnode.setAttribute('visibility', 'hidden');\n\t\tnode.setAttribute('pointer-events', 'fill');\n\t\tnode.setAttribute('x', this.format(x * s.scale));\n\t\tnode.setAttribute('y', this.format(y * s.scale));\n\t\tnode.setAttribute('width', this.format(w * s.scale));\n\t\tnode.setAttribute('height', this.format(h * s.scale));\n\t\tthis.root.appendChild(node);\n\t}\n};\n\n/**\n * Function: convertHtml\n * \n * Converts the given HTML string to XHTML.\n */\nmxSvgCanvas2D.prototype.convertHtml = function(val)\n{\n\tif (this.useDomParser)\n\t{\n\t\tvar doc = new DOMParser().parseFromString(val, 'text/html');\n\n\t\tif (doc != null)\n\t\t{\n\t\t\tval = new XMLSerializer().serializeToString(doc.body);\n\t\t\t\n\t\t\t// Extracts body content from DOM\n\t\t\tif (val.substring(0, 5) == '<body')\n\t\t\t{\n\t\t\t\tval = val.substring(val.indexOf('>', 5) + 1);\n\t\t\t}\n\t\t\t\n\t\t\tif (val.substring(val.length - 7, val.length) == '</body>')\n\t\t\t{\n\t\t\t\tval = val.substring(0, val.length - 7);\n\t\t\t}\n\t\t}\n\t}\n\telse if (document.implementation != null && document.implementation.createDocument != null)\n\t{\n\t\tvar xd = document.implementation.createDocument('http://www.w3.org/1999/xhtml', 'html', null);\n\t\tvar xb = xd.createElement('body');\n\t\txd.documentElement.appendChild(xb);\n\t\t\n\t\tvar div = document.createElement('div');\n\t\tdiv.innerHTML = val;\n\t\tvar child = div.firstChild;\n\t\t\n\t\twhile (child != null)\n\t\t{\n\t\t\tvar next = child.nextSibling;\n\t\t\txb.appendChild(xd.adoptNode(child));\n\t\t\tchild = next;\n\t\t}\n\t\t\n\t\treturn xb.innerHTML;\n\t}\n\telse\n\t{\n\t\tvar ta = document.createElement('textarea');\n\t\t\n\t\t// Handles special HTML entities < and > and double escaping\n\t\t// and converts unclosed br, hr and img tags to XHTML\n\t\t// LATER: Convert all unclosed tags\n\t\tta.innerHTML = val.replace(/&amp;/g, '&amp;amp;').\n\t\t\treplace(/&#60;/g, '&amp;lt;').replace(/&#62;/g, '&amp;gt;').\n\t\t\treplace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;').\n\t\t\treplace(/</g, '&lt;').replace(/>/g, '&gt;');\n\t\tval = ta.value.replace(/&/g, '&amp;').replace(/&amp;lt;/g, '&lt;').\n\t\t\treplace(/&amp;gt;/g, '&gt;').replace(/&amp;amp;/g, '&amp;').\n\t\t\treplace(/<br>/g, '<br />').replace(/<hr>/g, '<hr />').\n\t\t\treplace(/(<img[^>]+)>/gm, \"$1 />\");\n\t}\n\t\n\treturn val;\n};\n\n/**\n * Function: createDiv\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createDiv = function(str, align, valign, style, overflow)\n{\n\tvar s = this.state;\n\n\t// Inline block for rendering HTML background over SVG in Safari\n\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (s.fontSize * mxConstants.LINE_HEIGHT) + 'px' :\n\t\t(mxConstants.LINE_HEIGHT * this.lineHeightCorrection);\n\t\n\tstyle = 'display:inline-block;font-size:' + s.fontSize + 'px;font-family:' + s.fontFamily +\n\t\t';color:' + s.fontColor + ';line-height:' + lh + ';' + style;\n\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle += 'font-weight:bold;';\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle += 'font-style:italic;';\n\t}\n\t\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle += 'text-decoration:underline;';\n\t}\n\t\n\tif (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tstyle += 'text-align:center;';\n\t}\n\telse if (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstyle += 'text-align:right;';\n\t}\n\n\tvar css = '';\n\t\n\tif (s.fontBackgroundColor != null)\n\t{\n\t\tcss += 'background-color:' + s.fontBackgroundColor + ';';\n\t}\n\t\n\tif (s.fontBorderColor != null)\n\t{\n\t\tcss += 'border:1px solid ' + s.fontBorderColor + ';';\n\t}\n\t\n\tvar val = str;\n\t\n\tif (!mxUtils.isNode(val))\n\t{\n\t\tval = this.convertHtml(val);\n\t\t\n\t\tif (overflow != 'fill' && overflow != 'width')\n\t\t{\n\t\t\t// Inner div always needed to measure wrapped text\n\t\t\tval = '<div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display:inline-block;text-align:inherit;text-decoration:inherit;' + css + '\">' + val + '</div>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle += css;\n\t\t}\n\t}\n\n\t// Uses DOM API where available. This cannot be used in IE to avoid\n\t// an opening and two (!) closing TBODY tags being added to tables.\n\tif (!mxClient.IS_IE && document.createElementNS)\n\t{\n\t\tvar div = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n\t\tdiv.setAttribute('style', style);\n\t\t\n\t\tif (mxUtils.isNode(val))\n\t\t{\n\t\t\t// Creates a copy for export\n\t\t\tif (this.root.ownerDocument != document)\n\t\t\t{\n\t\t\t\tdiv.appendChild(val.cloneNode(true));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.appendChild(val);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.innerHTML = val;\n\t\t}\n\t\t\n\t\treturn div;\n\t}\n\telse\n\t{\n\t\t// Serializes for export\n\t\tif (mxUtils.isNode(val) && this.root.ownerDocument != document)\n\t\t{\n\t\t\tval = val.outerHTML;\n\t\t}\n\n\t\t// NOTE: FF 3.6 crashes if content CSS contains \"height:100%\"\n\t\treturn mxUtils.parseXml('<div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"' + style + \n\t\t\t'\">' + val + '</div>').documentElement;\n\t}\n};\n\n/**\n * Invalidates the cached offset size for the given node.\n */\nmxSvgCanvas2D.prototype.invalidateCachedOffsetSize = function(node)\n{\n\tdelete node.firstChild.mxCachedOffsetWidth;\n\tdelete node.firstChild.mxCachedFinalOffsetWidth;\n\tdelete node.firstChild.mxCachedFinalOffsetHeight;\n};\n\n/**\n * Updates existing DOM nodes for text rendering. LATER: Merge common parts with text function below.\n */\nmxSvgCanvas2D.prototype.updateText = function(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node)\n{\n\tif (node != null && node.firstChild != null && node.firstChild.firstChild != null &&\n\t\tnode.firstChild.firstChild.firstChild != null)\n\t{\n\t\t// Uses outer group for opacity and transforms to\n\t\t// fix rendering order in Chrome\n\t\tvar group = node.firstChild;\n\t\tvar fo = group.firstChild;\n\t\tvar div = fo.firstChild;\n\n\t\trotation = (rotation != null) ? rotation : 0;\n\t\t\n\t\tvar s = this.state;\n\t\tx += s.dx;\n\t\ty += s.dy;\n\t\t\n\t\tif (clip)\n\t\t{\n\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\tdiv.style.maxWidth = Math.round(w) + 'px';\n\t\t}\n\t\telse if (overflow == 'fill')\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t\tdiv.style.height = Math.round(h + 1) + 'px';\n\t\t}\n\t\telse if (overflow == 'width')\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t\t\n\t\t\tif (h > 0)\n\t\t\t{\n\t\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\t}\n\t\t}\n\n\t\tif (wrap && w > 0)\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t}\n\t\t\n\t\t// Code that depends on the size which is computed after\n\t\t// the element was added to the DOM.\n\t\tvar ow = 0;\n\t\tvar oh = 0;\n\t\t\n\t\t// Padding avoids clipping on border and wrapping for differing font metrics on platforms\n\t\tvar padX = 0;\n\t\tvar padY = 2;\n\n\t\tvar sizeDiv = div;\n\t\t\n\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t{\n\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t}\n\t\t\n\t\tvar tmp = (group.mxCachedOffsetWidth != null) ? group.mxCachedOffsetWidth : sizeDiv.offsetWidth;\n\t\tow = tmp + padX;\n\n\t\t// Recomputes the height of the element for wrapped width\n\t\tif (wrap && overflow != 'fill')\n\t\t{\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tow = Math.min(ow, w);\n\t\t\t}\n\t\t\t\n\t\t\tdiv.style.width = Math.round(ow + 1) + 'px';\n\t\t}\n\n\t\tow = (group.mxCachedFinalOffsetWidth != null) ? group.mxCachedFinalOffsetWidth : sizeDiv.offsetWidth;\n\t\toh = (group.mxCachedFinalOffsetHeight != null) ? group.mxCachedFinalOffsetHeight : sizeDiv.offsetHeight;\n\t\t\n\t\tif (this.cacheOffsetSize)\n\t\t{\n\t\t\tgroup.mxCachedOffsetWidth = tmp;\n\t\t\tgroup.mxCachedFinalOffsetWidth = ow;\n\t\t\tgroup.mxCachedFinalOffsetHeight = oh;\n\t\t}\n\t\t\n\t\tow += padX;\n\t\toh -= 2;\n\t\t\n\t\tif (clip)\n\t\t{\n\t\t\toh = Math.min(oh, h);\n\t\t\tow = Math.min(ow, w);\n\t\t}\n\n\t\tif (overflow == 'width')\n\t\t{\n\t\t\th = oh;\n\t\t}\n\t\telse if (overflow != 'fill')\n\t\t{\n\t\t\tw = ow;\n\t\t\th = oh;\n\t\t}\n\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tdx -= w / 2;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tdx -= w;\n\t\t}\n\t\t\n\t\tx += dx;\n\t\t\n\t\t// FIXME: LINE_HEIGHT not ideal for all text sizes, fix for export\n\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tdy -= h / 2;\n\t\t}\n\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy -= h;\n\t\t}\n\t\t\n\t\t// Workaround for rendering offsets\n\t\t// TODO: Check if export needs these fixes, too\n\t\tif (overflow != 'fill' && mxClient.IS_FF && mxClient.IS_WIN)\n\t\t{\n\t\t\tdy -= 2;\n\t\t}\n\t\t\n\t\ty += dy;\n\n\t\tvar tr = (s.scale != 1) ? 'scale(' + s.scale + ')' : '';\n\n\t\tif (s.rotation != 0 && this.rotateHtml)\n\t\t{\n\t\t\ttr += 'rotate(' + (s.rotation) + ',' + (w / 2) + ',' + (h / 2) + ')';\n\t\t\tvar pt = this.rotatePoint((x + w / 2) * s.scale, (y + h / 2) * s.scale,\n\t\t\t\ts.rotation, s.rotationCx, s.rotationCy);\n\t\t\tx = pt.x - w * s.scale / 2;\n\t\t\ty = pt.y - h * s.scale / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx *= s.scale;\n\t\t\ty *= s.scale;\n\t\t}\n\n\t\tif (rotation != 0)\n\t\t{\n\t\t\ttr += 'rotate(' + (rotation) + ',' + (-dx) + ',' + (-dy) + ')';\n\t\t}\n\n\t\tgroup.setAttribute('transform', 'translate(' + Math.round(x) + ',' + Math.round(y) + ')' + tr);\n\t\tfo.setAttribute('width', Math.round(Math.max(1, w)));\n\t\tfo.setAttribute('height', Math.round(Math.max(1, h)));\n\t}\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for plain\n * text and html for HTML markup. Note that HTML markup is only supported if\n * foreignObject is supported and <foEnabled> is true. (This means IE9 and later\n * does currently not support HTML text as part of shapes.)\n */\nmxSvgCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\trotation = (rotation != null) ? rotation : 0;\n\t\t\n\t\tvar s = this.state;\n\t\tx += s.dx;\n\t\ty += s.dy;\n\t\t\n\t\tif (this.foEnabled && format == 'html')\n\t\t{\n\t\t\tvar style = 'vertical-align:top;';\n\t\t\t\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tstyle += 'overflow:hidden;max-height:' + Math.round(h) + 'px;max-width:' + Math.round(w) + 'px;';\n\t\t\t}\n\t\t\telse if (overflow == 'fill')\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;height:' + Math.round(h + 1) + 'px;overflow:hidden;';\n\t\t\t}\n\t\t\telse if (overflow == 'width')\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;';\n\t\t\t\t\n\t\t\t\tif (h > 0)\n\t\t\t\t{\n\t\t\t\t\tstyle += 'max-height:' + Math.round(h) + 'px;overflow:hidden;';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (wrap && w > 0)\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;white-space:normal;word-wrap:' +\n\t\t\t\t\tmxConstants.WORD_WRAP + ';';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstyle += 'white-space:nowrap;';\n\t\t\t}\n\t\t\t\n\t\t\t// Uses outer group for opacity and transforms to\n\t\t\t// fix rendering order in Chrome\n\t\t\tvar group = this.createElement('g');\n\t\t\t\n\t\t\tif (s.alpha < 1)\n\t\t\t{\n\t\t\t\tgroup.setAttribute('opacity', s.alpha);\n\t\t\t}\n\n\t\t\tvar fo = this.createElement('foreignObject');\n\t\t\tfo.setAttribute('style', 'overflow:visible;');\n\t\t\tfo.setAttribute('pointer-events', 'all');\n\t\t\t\n\t\t\tvar div = this.createDiv(str, align, valign, style, overflow);\n\t\t\t\n\t\t\t// Ignores invalid XHTML labels\n\t\t\tif (div == null)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (dir != null)\n\t\t\t{\n\t\t\t\tdiv.setAttribute('dir', dir);\n\t\t\t}\n\n\t\t\tgroup.appendChild(fo);\n\t\t\tthis.root.appendChild(group);\n\t\t\t\n\t\t\t// Code that depends on the size which is computed after\n\t\t\t// the element was added to the DOM.\n\t\t\tvar ow = 0;\n\t\t\tvar oh = 0;\n\t\t\t\n\t\t\t// Padding avoids clipping on border and wrapping for differing font metrics on platforms\n\t\t\tvar padX = 2;\n\t\t\tvar padY = 2;\n\n\t\t\t// NOTE: IE is always export as it does not support foreign objects\n\t\t\tif (mxClient.IS_IE && (document.documentMode == 9 || !mxClient.IS_SVG))\n\t\t\t{\n\t\t\t\t// Handles non-standard namespace for getting size in IE\n\t\t\t\tvar clone = document.createElement('div');\n\t\t\t\t\n\t\t\t\tclone.style.cssText = div.getAttribute('style');\n\t\t\t\tclone.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\t\tclone.style.position = 'absolute';\n\t\t\t\tclone.style.visibility = 'hidden';\n\n\t\t\t\t// Inner DIV is needed for text measuring\n\t\t\t\tvar div2 = document.createElement('div');\n\t\t\t\tdiv2.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\t\tdiv2.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tdiv2.innerHTML = (mxUtils.isNode(str)) ? str.outerHTML : str;\n\t\t\t\tclone.appendChild(div2);\n\n\t\t\t\tdocument.body.appendChild(clone);\n\n\t\t\t\t// Workaround for different box models\n\t\t\t\tif (document.documentMode != 8 && document.documentMode != 9 && s.fontBorderColor != null)\n\t\t\t\t{\n\t\t\t\t\tpadX += 2;\n\t\t\t\t\tpadY += 2;\n\t\t\t\t}\n\n\t\t\t\tif (wrap && w > 0)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = div2.offsetWidth;\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for adding padding twice in IE8/IE9 standards mode if label is wrapped\n\t\t\t\t\tpadDx = 0;\n\t\t\t\t\t\n\t\t\t\t\t// For export, if no wrapping occurs, we add a large padding to make\n\t\t\t\t\t// sure there is no wrapping even if the text metrics are different.\n\t\t\t\t\t// This adds support for text metrics on different operating systems.\n\t\t\t\t\t// Disables wrapping if text is not wrapped for given width\n\t\t\t\t\tif (!clip && wrap && w > 0 && this.root.ownerDocument != document && overflow != 'fill')\n\t\t\t\t\t{\n\t\t\t\t\t\tvar ws = clone.style.whiteSpace;\n\t\t\t\t\t\tdiv2.style.whiteSpace = 'nowrap';\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (tmp < div2.offsetWidth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclone.style.whiteSpace = ws;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (clip)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = Math.min(tmp, w);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tclone.style.width = tmp + 'px';\n\t\n\t\t\t\t\t// Padding avoids clipping on border\n\t\t\t\t\tow = div2.offsetWidth + padX + padDx;\n\t\t\t\t\toh = div2.offsetHeight + padY;\n\t\t\t\t\t\n\t\t\t\t\t// Overrides the width of the DIV via XML DOM by using the\n\t\t\t\t\t// clone DOM style, getting the CSS text for that and\n\t\t\t\t\t// then setting that on the DIV via setAttribute\n\t\t\t\t\tclone.style.display = 'inline-block';\n\t\t\t\t\tclone.style.position = '';\n\t\t\t\t\tclone.style.visibility = '';\n\t\t\t\t\tclone.style.width = ow + 'px';\n\t\t\t\t\t\n\t\t\t\t\tdiv.setAttribute('style', clone.style.cssText);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Padding avoids clipping on border\n\t\t\t\t\tow = div2.offsetWidth + padX;\n\t\t\t\t\toh = div2.offsetHeight + padY;\n\t\t\t\t}\n\n\t\t\t\tclone.parentNode.removeChild(clone);\n\t\t\t\tfo.appendChild(div);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Uses document for text measuring during export\n\t\t\t\tif (this.root.ownerDocument != document)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfo.appendChild(div);\n\t\t\t\t}\n\n\t\t\t\tvar sizeDiv = div;\n\t\t\t\t\n\t\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t\t\n\t\t\t\t\tif (wrap && div.style.wordWrap == 'break-word')\n\t\t\t\t\t{\n\t\t\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar tmp = sizeDiv.offsetWidth;\n\t\t\t\t\n\t\t\t\t// Workaround for text measuring in hidden containers\n\t\t\t\tif (tmp == 0 && div.parentNode == fo)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\t\n\t\t\t\t\ttmp = sizeDiv.offsetWidth;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.cacheOffsetSize)\n\t\t\t\t{\n\t\t\t\t\tgroup.mxCachedOffsetWidth = tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Disables wrapping if text is not wrapped for given width\n\t\t\t\tif (!clip && wrap && w > 0 && this.root.ownerDocument != document &&\n\t\t\t\t\toverflow != 'fill' && overflow != 'width')\n\t\t\t\t{\n\t\t\t\t\tvar ws = div.style.whiteSpace;\n\t\t\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\t\t\t\n\t\t\t\t\tif (tmp < sizeDiv.offsetWidth)\n\t\t\t\t\t{\n\t\t\t\t\t\tdiv.style.whiteSpace = ws;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tow = tmp + padX - 1;\n\n\t\t\t\t// Recomputes the height of the element for wrapped width\n\t\t\t\tif (wrap && overflow != 'fill' && overflow != 'width')\n\t\t\t\t{\n\t\t\t\t\tif (clip)\n\t\t\t\t\t{\n\t\t\t\t\t\tow = Math.min(ow, w);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdiv.style.width = ow + 'px';\n\t\t\t\t}\n\n\t\t\t\tow = sizeDiv.offsetWidth;\n\t\t\t\toh = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tif (this.cacheOffsetSize)\n\t\t\t\t{\n\t\t\t\t\tgroup.mxCachedFinalOffsetWidth = ow;\n\t\t\t\t\tgroup.mxCachedFinalOffsetHeight = oh;\n\t\t\t\t}\n\n\t\t\t\toh -= padY;\n\t\t\t\t\n\t\t\t\tif (div.parentNode != fo)\n\t\t\t\t{\n\t\t\t\t\tfo.appendChild(div);\n\t\t\t\t\tdiv.style.visibility = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\toh = Math.min(oh, h);\n\t\t\t\tow = Math.min(ow, w);\n\t\t\t}\n\n\t\t\tif (overflow == 'width')\n\t\t\t{\n\t\t\t\th = oh;\n\t\t\t}\n\t\t\telse if (overflow != 'fill')\n\t\t\t{\n\t\t\t\tw = ow;\n\t\t\t\th = oh;\n\t\t\t}\n\n\t\t\tif (s.alpha < 1)\n\t\t\t{\n\t\t\t\tgroup.setAttribute('opacity', s.alpha);\n\t\t\t}\n\t\t\t\n\t\t\tvar dx = 0;\n\t\t\tvar dy = 0;\n\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tdx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tdx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tx += dx;\n\t\t\t\n\t\t\t// FIXME: LINE_HEIGHT not ideal for all text sizes, fix for export\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\tdy -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tdy -= h;\n\t\t\t}\n\t\t\t\n\t\t\t// Workaround for rendering offsets\n\t\t\t// TODO: Check if export needs these fixes, too\n\t\t\t//if (this.root.ownerDocument == document)\n\t\t\tif (overflow != 'fill' && mxClient.IS_FF && mxClient.IS_WIN)\n\t\t\t{\n\t\t\t\tdy -= 2;\n\t\t\t}\n\t\t\t\n\t\t\ty += dy;\n\n\t\t\tvar tr = (s.scale != 1) ? 'scale(' + s.scale + ')' : '';\n\n\t\t\tif (s.rotation != 0 && this.rotateHtml)\n\t\t\t{\n\t\t\t\ttr += 'rotate(' + (s.rotation) + ',' + (w / 2) + ',' + (h / 2) + ')';\n\t\t\t\tvar pt = this.rotatePoint((x + w / 2) * s.scale, (y + h / 2) * s.scale,\n\t\t\t\t\ts.rotation, s.rotationCx, s.rotationCy);\n\t\t\t\tx = pt.x - w * s.scale / 2;\n\t\t\t\ty = pt.y - h * s.scale / 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx *= s.scale;\n\t\t\t\ty *= s.scale;\n\t\t\t}\n\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\ttr += 'rotate(' + (rotation) + ',' + (-dx) + ',' + (-dy) + ')';\n\t\t\t}\n\n\t\t\tgroup.setAttribute('transform', 'translate(' + (Math.round(x) + this.foOffset) + ',' +\n\t\t\t\t(Math.round(y) + this.foOffset) + ')' + tr);\n\t\t\tfo.setAttribute('width', Math.round(Math.max(1, w)));\n\t\t\tfo.setAttribute('height', Math.round(Math.max(1, h)));\n\t\t\t\n\t\t\t// Adds alternate content if foreignObject not supported in viewer\n\t\t\tif (this.root.ownerDocument != document)\n\t\t\t{\n\t\t\t\tvar alt = this.createAlternateContent(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n\t\t\t\t\n\t\t\t\tif (alt != null)\n\t\t\t\t{\n\t\t\t\t\tfo.setAttribute('requiredFeatures', 'http://www.w3.org/TR/SVG11/feature#Extensibility');\n\t\t\t\t\tvar sw = this.createElement('switch');\n\t\t\t\t\tsw.appendChild(fo);\n\t\t\t\t\tsw.appendChild(alt);\n\t\t\t\t\tgroup.appendChild(sw);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.plainText(x, y, w, h, str, align, valign, wrap, overflow, clip, rotation, dir);\n\t\t}\n\t}\n};\n\n/**\n * Function: createClip\n * \n * Creates a clip for the given coordinates.\n */\nmxSvgCanvas2D.prototype.createClip = function(x, y, w, h)\n{\n\tx = Math.round(x);\n\ty = Math.round(y);\n\tw = Math.round(w);\n\th = Math.round(h);\n\t\n\tvar id = 'mx-clip-' + x + '-' + y + '-' + w + '-' + h;\n\n\tvar counter = 0;\n\tvar tmp = id + '-' + counter;\n\t\n\t// Resolves ID conflicts\n\twhile (document.getElementById(tmp) != null)\n\t{\n\t\ttmp = id + '-' + (++counter);\n\t}\n\t\n\tclip = this.createElement('clipPath');\n\tclip.setAttribute('id', tmp);\n\t\n\tvar rect = this.createElement('rect');\n\trect.setAttribute('x', x);\n\trect.setAttribute('y', y);\n\trect.setAttribute('width', w);\n\trect.setAttribute('height', h);\n\t\t\n\tclip.appendChild(rect);\n\t\n\treturn clip;\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for\n * plain text and html for HTML markup.\n */\nmxSvgCanvas2D.prototype.plainText = function(x, y, w, h, str, align, valign, wrap, overflow, clip, rotation, dir)\n{\n\trotation = (rotation != null) ? rotation : 0;\n\tvar s = this.state;\n\tvar size = s.fontSize;\n\tvar node = this.createElement('g');\n\tvar tr = s.transform || '';\n\tthis.updateFont(node);\n\t\n\t// Non-rotated text\n\tif (rotation != 0)\n\t{\n\t\ttr += 'rotate(' + rotation  + ',' + this.format(x * s.scale) + ',' + this.format(y * s.scale) + ')';\n\t}\n\t\n\tif (dir != null)\n\t{\n\t\tnode.setAttribute('direction', dir);\n\t}\n\n\tif (clip && w > 0 && h > 0)\n\t{\n\t\tvar cx = x;\n\t\tvar cy = y;\n\t\t\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tcx -= w / 2;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tcx -= w;\n\t\t}\n\t\t\n\t\tif (overflow != 'fill')\n\t\t{\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\tcy -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tcy -= h;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// LATER: Remove spacing from clip rectangle\n\t\tvar c = this.createClip(cx * s.scale - 2, cy * s.scale - 2, w * s.scale + 4, h * s.scale + 4);\n\t\t\n\t\tif (this.defs != null)\n\t\t{\n\t\t\tthis.defs.appendChild(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Makes sure clip is removed with referencing node\n\t\t\tthis.root.appendChild(c);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_CHROME_APP && !mxClient.IS_IE && !mxClient.IS_IE11 &&\n\t\t\t!mxClient.IS_EDGE && this.root.ownerDocument == document)\n\t\t{\n\t\t\t// Workaround for potential base tag\n\t\t\tvar base = this.getBaseUrl().replace(/([\\(\\)])/g, '\\\\$1');\n\t\t\tnode.setAttribute('clip-path', 'url(' + base + '#' + c.getAttribute('id') + ')');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.setAttribute('clip-path', 'url(#' + c.getAttribute('id') + ')');\n\t\t}\n\t}\n\n\t// Default is left\n\tvar anchor = (align == mxConstants.ALIGN_RIGHT) ? 'end' :\n\t\t\t\t\t(align == mxConstants.ALIGN_CENTER) ? 'middle' :\n\t\t\t\t\t'start';\n\n\t// Text-anchor start is default in SVG\n\tif (anchor != 'start')\n\t{\n\t\tnode.setAttribute('text-anchor', anchor);\n\t}\n\t\n\tif (!this.styleEnabled || size != mxConstants.DEFAULT_FONTSIZE)\n\t{\n\t\tnode.setAttribute('font-size', (size * s.scale) + 'px');\n\t}\n\t\n\tif (tr.length > 0)\n\t{\n\t\tnode.setAttribute('transform', tr);\n\t}\n\t\n\tif (s.alpha < 1)\n\t{\n\t\tnode.setAttribute('opacity', s.alpha);\n\t}\n\t\n\tvar lines = str.split('\\n');\n\tvar lh = Math.round(size * mxConstants.LINE_HEIGHT);\n\tvar textHeight = size + (lines.length - 1) * lh;\n\n\tvar cy = y + size - 1;\n\n\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t{\n\t\tif (overflow == 'fill')\n\t\t{\n\t\t\tcy -= h / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar dy = ((this.matchHtmlAlignment && clip && h > 0) ? Math.min(textHeight, h) : textHeight) / 2;\n\t\t\tcy -= dy + 1;\n\t\t}\n\t}\n\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tif (overflow == 'fill')\n\t\t{\n\t\t\tcy -= h;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar dy = (this.matchHtmlAlignment && clip && h > 0) ? Math.min(textHeight, h) : textHeight;\n\t\t\tcy -= dy + 2;\n\t\t}\n\t}\n\n\tfor (var i = 0; i < lines.length; i++)\n\t{\n\t\t// Workaround for bounding box of empty lines and spaces\n\t\tif (lines[i].length > 0 && mxUtils.trim(lines[i]).length > 0)\n\t\t{\n\t\t\tvar text = this.createElement('text');\n\t\t\t// LATER: Match horizontal HTML alignment\n\t\t\ttext.setAttribute('x', this.format(x * s.scale) + this.textOffset);\n\t\t\ttext.setAttribute('y', this.format(cy * s.scale) + this.textOffset);\n\t\t\t\n\t\t\tmxUtils.write(text, lines[i]);\n\t\t\tnode.appendChild(text);\n\t\t}\n\n\t\tcy += lh;\n\t}\n\n\tthis.root.appendChild(node);\n\tthis.addTextBackground(node, str, x, y, w, (overflow == 'fill') ? h : textHeight, align, valign, overflow);\n};\n\n/**\n * Function: updateFont\n * \n * Updates the text properties for the given node. (NOTE: For this to work in\n * IE, the given node must be a text or tspan element.)\n */\nmxSvgCanvas2D.prototype.updateFont = function(node)\n{\n\tvar s = this.state;\n\n\tnode.setAttribute('fill', s.fontColor);\n\t\n\tif (!this.styleEnabled || s.fontFamily != mxConstants.DEFAULT_FONTFAMILY)\n\t{\n\t\tnode.setAttribute('font-family', s.fontFamily);\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tnode.setAttribute('font-weight', 'bold');\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tnode.setAttribute('font-style', 'italic');\n\t}\n\t\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tnode.setAttribute('text-decoration', 'underline');\n\t}\n};\n\n/**\n * Function: addTextBackground\n * \n * Background color and border\n */\nmxSvgCanvas2D.prototype.addTextBackground = function(node, str, x, y, w, h, align, valign, overflow)\n{\n\tvar s = this.state;\n\n\tif (s.fontBackgroundColor != null || s.fontBorderColor != null)\n\t{\n\t\tvar bbox = null;\n\t\t\n\t\tif (overflow == 'fill' || overflow == 'width')\n\t\t{\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\ty -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\ty -= h;\n\t\t\t}\n\t\t\t\n\t\t\tbbox = new mxRectangle((x + 1) * s.scale, y * s.scale, (w - 2) * s.scale, (h + 2) * s.scale);\n\t\t}\n\t\telse if (node.getBBox != null && this.root.ownerDocument == document)\n\t\t{\n\t\t\t// Uses getBBox only if inside document for correct size\n\t\t\ttry\n\t\t\t{\n\t\t\t\tbbox = node.getBBox();\n\t\t\t\tvar ie = mxClient.IS_IE && mxClient.IS_SVG;\n\t\t\t\tbbox = new mxRectangle(bbox.x, bbox.y + ((ie) ? 0 : 1), bbox.width, bbox.height + ((ie) ? 1 : 0));\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// Ignores NS_ERROR_FAILURE in FF if container display is none.\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Computes size if not in document or no getBBox available\n\t\t\tvar div = document.createElement('div');\n\n\t\t\t// Wrapping and clipping can be ignored here\n\t\t\tdiv.style.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (s.fontSize * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\t\t\tdiv.style.fontSize = s.fontSize + 'px';\n\t\t\tdiv.style.fontFamily = s.fontFamily;\n\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\tdiv.style.position = 'absolute';\n\t\t\tdiv.style.visibility = 'hidden';\n\t\t\tdiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\tdiv.style.zoom = '1';\n\t\t\t\n\t\t\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t\t\t{\n\t\t\t\tdiv.style.fontWeight = 'bold';\n\t\t\t}\n\n\t\t\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t\t\t{\n\t\t\t\tdiv.style.fontStyle = 'italic';\n\t\t\t}\n\t\t\t\n\t\t\tstr = mxUtils.htmlEntities(str, false);\n\t\t\tdiv.innerHTML = str.replace(/\\n/g, '<br/>');\n\t\t\t\n\t\t\tdocument.body.appendChild(div);\n\t\t\tvar w = div.offsetWidth;\n\t\t\tvar h = div.offsetHeight;\n\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\ty -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\ty -= h;\n\t\t\t}\n\t\t\t\n\t\t\tbbox = new mxRectangle((x + 1) * s.scale, (y + 2) * s.scale, w * s.scale, (h + 1) * s.scale);\n\t\t}\n\t\t\n\t\tif (bbox != null)\n\t\t{\n\t\t\tvar n = this.createElement('rect');\n\t\t\tn.setAttribute('fill', s.fontBackgroundColor || 'none');\n\t\t\tn.setAttribute('stroke', s.fontBorderColor || 'none');\n\t\t\tn.setAttribute('x', Math.floor(bbox.x - 1));\n\t\t\tn.setAttribute('y', Math.floor(bbox.y - 1));\n\t\t\tn.setAttribute('width', Math.ceil(bbox.width + 2));\n\t\t\tn.setAttribute('height', Math.ceil(bbox.height));\n\n\t\t\tvar sw = (s.fontBorderColor != null) ? Math.max(1, this.format(s.scale)) : 0;\n\t\t\tn.setAttribute('stroke-width', sw);\n\t\t\t\n\t\t\t// Workaround for crisp rendering - only required if not exporting\n\t\t\tif (this.root.ownerDocument == document && mxUtils.mod(sw, 2) == 1)\n\t\t\t{\n\t\t\t\tn.setAttribute('transform', 'translate(0.5, 0.5)');\n\t\t\t}\n\t\t\t\n\t\t\tnode.insertBefore(n, node.firstChild);\n\t\t}\n\t}\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current path.\n */\nmxSvgCanvas2D.prototype.stroke = function()\n{\n\tthis.addNode(false, true);\n};\n\n/**\n * Function: fill\n * \n * Fills the current path.\n */\nmxSvgCanvas2D.prototype.fill = function()\n{\n\tthis.addNode(true, false);\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills and paints the outline of the current path.\n */\nmxSvgCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.addNode(true, true);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxVmlCanvas2D\n * \n * Implements a canvas to be used for rendering VML. Here is an example of implementing a\n * fallback for SVG images which are not supported in VML-based browsers.\n * \n * (code)\n * var mxVmlCanvas2DImage = mxVmlCanvas2D.prototype.image;\n * mxVmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n * {\n *   if (src.substring(src.length - 4, src.length) == '.svg')\n *   {\n *     src = 'http://www.jgraph.com/images/mxgraph.gif';\n *   }\n *   \n *   mxVmlCanvas2DImage.apply(this, arguments);\n * };\n * (end)\n * \n * To disable anti-aliasing in the output, use the following code.\n * \n * (code)\n * document.createStyleSheet().cssText = mxClient.VML_PREFIX + '\\\\:*{antialias:false;)}';\n * (end)\n * \n * A description of the public API is available in <mxXmlCanvas2D>. Note that\n * there is a known issue in VML where gradients are painted using the outer\n * bounding box of rotated shapes, not the actual bounds of the shape. See\n * also <text> for plain text label restrictions in shapes for VML.\n */\nvar mxVmlCanvas2D = function(root)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxVmlCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Variable: path\n * \n * Holds the current DOM node.\n */\nmxVmlCanvas2D.prototype.node = null;\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabledetB. Default is true.\n */\nmxVmlCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: moveOp\n * \n * Contains the string used for moving in paths. Default is 'm'.\n */\nmxVmlCanvas2D.prototype.moveOp = 'm';\n\n/**\n * Variable: lineOp\n * \n * Contains the string used for moving in paths. Default is 'l'.\n */\nmxVmlCanvas2D.prototype.lineOp = 'l';\n\n/**\n * Variable: curveOp\n * \n * Contains the string used for bezier curves. Default is 'c'.\n */\nmxVmlCanvas2D.prototype.curveOp = 'c';\n\n/**\n * Variable: closeOp\n * \n * Holds the operator for closing curves. Default is 'x e'.\n */\nmxVmlCanvas2D.prototype.closeOp = 'x';\n\n/**\n * Variable: rotatedHtmlBackground\n * \n * Background color for rotated HTML. Default is ''. This can be set to eg.\n * white to improve rendering of rotated text in VML for IE9.\n */\nmxVmlCanvas2D.prototype.rotatedHtmlBackground = '';\n\n/**\n * Variable: vmlScale\n * \n * Specifies the scale used to draw VML shapes.\n */\nmxVmlCanvas2D.prototype.vmlScale = 1;\n\n/**\n * Function: createElement\n * \n * Creates the given element using the document.\n */\nmxVmlCanvas2D.prototype.createElement = function(name)\n{\n\treturn document.createElement(name);\n};\n\n/**\n * Function: createVmlElement\n * \n * Creates a new element using <createElement> and prefixes the given name with\n * <mxClient.VML_PREFIX>.\n */\nmxVmlCanvas2D.prototype.createVmlElement = function(name)\n{\n\treturn this.createElement(mxClient.VML_PREFIX + ':' + name);\n};\n\n/**\n * Function: addNode\n * \n * Adds the current node to the <root>.\n */\nmxVmlCanvas2D.prototype.addNode = function(filled, stroked)\n{\n\tvar node = this.node;\n\tvar s = this.state;\n\t\n\tif (node != null)\n\t{\n\t\tif (node.nodeName == 'shape')\n\t\t{\n\t\t\t// Checks if the path is not empty\n\t\t\tif (this.path != null && this.path.length > 0)\n\t\t\t{\n\t\t\t\tnode.path = this.path.join(' ') + ' e';\n\t\t\t\tnode.style.width = this.root.style.width;\n\t\t\t\tnode.style.height = this.root.style.height;\n\t\t\t\tnode.coordsize = parseInt(node.style.width) + ' ' + parseInt(node.style.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tnode.strokeweight = this.format(Math.max(1, s.strokeWidth * s.scale / this.vmlScale)) + 'px';\n\t\t\n\t\tif (s.shadow)\n\t\t{\n\t\t\tthis.root.appendChild(this.createShadow(node,\n\t\t\t\tfilled && s.fillColor != null,\n\t\t\t\tstroked && s.strokeColor != null));\n\t\t}\n\t\t\n\t\tif (stroked && s.strokeColor != null)\n\t\t{\n\t\t\tnode.stroked = 'true';\n\t\t\tnode.strokecolor = s.strokeColor;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.stroked = 'false';\n\t\t}\n\n\t\tnode.appendChild(this.createStroke());\n\n\t\tif (filled && s.fillColor != null)\n\t\t{\n\t\t\tnode.appendChild(this.createFill());\n\t\t}\n\t\telse if (this.pointerEvents && (node.nodeName != 'shape' ||\n\t\t\tthis.path[this.path.length - 1] == this.closeOp))\n\t\t{\n\t\t\tnode.appendChild(this.createTransparentFill());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.filled = 'false';\n\t\t}\n\n\t\t// LATER: Update existing DOM for performance\n\t\tthis.root.appendChild(node);\n\t}\n};\n\n/**\n * Function: createTransparentFill\n * \n * Creates a transparent fill.\n */\nmxVmlCanvas2D.prototype.createTransparentFill = function()\n{\n\tvar fill = this.createVmlElement('fill');\n\tfill.src = mxClient.imageBasePath + '/transparent.gif';\n\tfill.type = 'tile';\n\t\n\treturn fill;\n};\n\n/**\n * Function: createFill\n * \n * Creates a fill for the current state.\n */\nmxVmlCanvas2D.prototype.createFill = function()\n{\n\tvar s = this.state;\n\t\n\t// Gradients in foregrounds not supported because special gradients\n\t// with bounds must be created for each element in graphics-canvases\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = s.fillColor;\n\n\tif (s.gradientColor != null)\n\t{\n\t\tfill.type = 'gradient';\n\t\tfill.method = 'none';\n\t\tfill.color2 = s.gradientColor;\n\t\tvar angle = 180 - s.rotation;\n\t\t\n\t\tif (s.gradientDirection == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tangle -= 90 + ((this.root.style.flip == 'x') ? 180 : 0);\n\t\t}\n\t\telse if (s.gradientDirection == mxConstants.DIRECTION_EAST)\n\t\t{\n\t\t\tangle += 90 + ((this.root.style.flip == 'x') ? 180 : 0);\n\t\t}\n\t\telse if (s.gradientDirection == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tangle -= 180 + ((this.root.style.flip == 'y') ? -180 : 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t angle += ((this.root.style.flip == 'y') ? -180 : 0);\n\t\t}\n\t\t\n\t\tif (this.root.style.flip == 'x' || this.root.style.flip == 'y')\n\t\t{\n\t\t\tangle *= -1;\n\t\t}\n\n\t\t// LATER: Fix outer bounding box for rotated shapes used in VML.\n\t\tfill.angle = mxUtils.mod(angle, 360);\n\t\tfill.opacity = (s.alpha * s.gradientFillAlpha * 100) + '%';\n\t\tfill.setAttribute(mxClient.OFFICE_PREFIX + ':opacity2', (s.alpha * s.gradientAlpha * 100) + '%');\n\t}\n\telse if (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tfill.opacity = (s.alpha * s.fillAlpha * 100) + '%';\t\t\t\n\t}\n\t\n\treturn fill;\n};\n/**\n * Function: createStroke\n * \n * Creates a fill for the current state.\n */\nmxVmlCanvas2D.prototype.createStroke = function()\n{\n\tvar s = this.state;\n\tvar stroke = this.createVmlElement('stroke');\n\tstroke.endcap = s.lineCap || 'flat';\n\tstroke.joinstyle = s.lineJoin || 'miter';\n\tstroke.miterlimit = s.miterLimit || '10';\n\t\n\tif (s.alpha < 1 || s.strokeAlpha < 1)\n\t{\n\t\tstroke.opacity = (s.alpha * s.strokeAlpha * 100) + '%';\n\t}\n\t\n\tif (s.dashed)\n\t{\n\t\tstroke.dashstyle = this.getVmlDashStyle();\n\t}\n\t\n\treturn stroke;\n};\n\n/**\n * Function: getVmlDashPattern\n * \n * Returns a VML dash pattern for the current dashPattern.\n * See http://msdn.microsoft.com/en-us/library/bb264085(v=vs.85).aspx\n */\nmxVmlCanvas2D.prototype.getVmlDashStyle = function()\n{\n\tvar result = 'dash';\n\t\n\tif (typeof(this.state.dashPattern) === 'string')\n\t{\n\t\tvar tok = this.state.dashPattern.split(' ');\n\t\t\n\t\tif (tok.length > 0 && tok[0] == 1)\n\t\t{\n\t\t\tresult = '0 2';\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createShadow\n * \n * Creates a shadow for the given node.\n */\nmxVmlCanvas2D.prototype.createShadow = function(node, filled, stroked)\n{\n\tvar s = this.state;\n\tvar rad = -s.rotation * (Math.PI / 180);\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(rad);\n\n\tvar dx = s.shadowDx * s.scale;\n\tvar dy = s.shadowDy * s.scale;\n\n\tif (this.root.style.flip == 'x')\n\t{\n\t\tdx *= -1;\n\t}\n\telse if (this.root.style.flip == 'y')\n\t{\n\t\tdy *= -1;\n\t}\n\t\n\tvar shadow = node.cloneNode(true);\n\tshadow.style.marginLeft = Math.round(dx * cos - dy * sin) + 'px';\n\tshadow.style.marginTop = Math.round(dx * sin + dy * cos) + 'px';\n\n\t// Workaround for wrong cloning in IE8 standards mode\n\tif (document.documentMode == 8)\n\t{\n\t\tshadow.strokeweight = node.strokeweight;\n\t\t\n\t\tif (node.nodeName == 'shape')\n\t\t{\n\t\t\tshadow.path = this.path.join(' ') + ' e';\n\t\t\tshadow.style.width = this.root.style.width;\n\t\t\tshadow.style.height = this.root.style.height;\n\t\t\tshadow.coordsize = parseInt(node.style.width) + ' ' + parseInt(node.style.height);\n\t\t}\n\t}\n\t\n\tif (stroked)\n\t{\n\t\tshadow.strokecolor = s.shadowColor;\n\t\tshadow.appendChild(this.createShadowStroke());\n\t}\n\telse\n\t{\n\t\tshadow.stroked = 'false';\n\t}\n\t\n\tif (filled)\n\t{\n\t\tshadow.appendChild(this.createShadowFill());\n\t}\n\telse\n\t{\n\t\tshadow.filled = 'false';\n\t}\n\t\n\treturn shadow;\n};\n\n/**\n * Function: createShadowFill\n * \n * Creates the fill for the shadow.\n */\nmxVmlCanvas2D.prototype.createShadowFill = function()\n{\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = this.state.shadowColor;\n\tfill.opacity = (this.state.alpha * this.state.shadowAlpha * 100) + '%';\n\t\n\treturn fill;\n};\n\n/**\n * Function: createShadowStroke\n * \n * Creates the stroke for the shadow.\n */\nmxVmlCanvas2D.prototype.createShadowStroke = function()\n{\n\tvar stroke = this.createStroke();\n\tstroke.opacity = (this.state.alpha * this.state.shadowAlpha * 100) + '%';\n\t\n\treturn stroke;\n};\n\n/**\n * Function: rotate\n * \n * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n */\nmxVmlCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tif (flipH && flipV)\n\t{\n\t\ttheta += 180;\n\t}\n\telse if (flipH)\n\t{\n\t\tthis.root.style.flip = 'x';\n\t}\n\telse if (flipV)\n\t{\n\t\tthis.root.style.flip = 'y';\n\t}\n\n\tif (flipH ? !flipV : flipV)\n\t{\n\t\ttheta *= -1;\n\t}\n\n\tthis.root.style.rotation = theta;\n\tthis.state.rotation = this.state.rotation + theta;\n\tthis.state.rotationCx = cx;\n\tthis.state.rotationCy = cy;\n};\n\n/**\n * Function: begin\n * \n * Extends superclass to create path.\n */\nmxVmlCanvas2D.prototype.begin = function()\n{\n\tmxAbstractCanvas2D.prototype.begin.apply(this, arguments);\n\tthis.node = this.createVmlElement('shape');\n\tthis.node.style.position = 'absolute';\n};\n\n/**\n * Function: quadTo\n * \n * Replaces quadratic curve with bezier curve in VML.\n */\nmxVmlCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tvar s = this.state;\n\n\tvar cpx0 = (this.lastX + s.dx) * s.scale;\n\tvar cpy0 = (this.lastY + s.dy) * s.scale;\n\tvar qpx1 = (x1 + s.dx) * s.scale;\n\tvar qpy1 = (y1 + s.dy) * s.scale;\n\tvar cpx3 = (x2 + s.dx) * s.scale;\n\tvar cpy3 = (y2 + s.dy) * s.scale;\n\t\n\tvar cpx1 = cpx0 + 2/3 * (qpx1 - cpx0);\n\tvar cpy1 = cpy0 + 2/3 * (qpy1 - cpy0);\n\t\n\tvar cpx2 = cpx3 + 2/3 * (qpx1 - cpx3);\n\tvar cpy2 = cpy3 + 2/3 * (qpy1 - cpy3);\n\t\n\tthis.path.push('c ' + this.format(cpx1) + ' ' + this.format(cpy1) +\n\t\t\t' ' + this.format(cpx2) + ' ' + this.format(cpy2) +\n\t\t\t' ' + this.format(cpx3) + ' ' + this.format(cpy3));\n\tthis.lastX = (cpx3 / s.scale) - s.dx;\n\tthis.lastY = (cpy3 / s.scale) - s.dy;\n\t\n};\n\n/**\n * Function: createRect\n * \n * Sets the glass gradient.\n */\nmxVmlCanvas2D.prototype.createRect = function(nodeName, x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createVmlElement(nodeName);\n\tn.style.position = 'absolute';\n\tn.style.left = this.format((x + s.dx) * s.scale) + 'px';\n\tn.style.top = this.format((y + s.dy) * s.scale) + 'px';\n\tn.style.width = this.format(w * s.scale) + 'px';\n\tn.style.height = this.format(h * s.scale) + 'px';\n\t\n\treturn n;\n};\n\n/**\n * Function: rect\n * \n * Sets the current path to a rectangle.\n */\nmxVmlCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tthis.node = this.createRect('rect', x, y, w, h);\n};\n\n/**\n * Function: roundrect\n * \n * Sets the current path to a rounded rectangle.\n */\nmxVmlCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tthis.node = this.createRect('roundrect', x, y, w, h);\n\t// SetAttribute needed here for IE8\n\tthis.node.setAttribute('arcsize', Math.max(dx * 100 / w, dy * 100 / h) + '%');\n};\n\n/**\n * Function: ellipse\n * \n * Sets the current path to an ellipse.\n */\nmxVmlCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tthis.node = this.createRect('oval', x, y, w, h);\n};\n\n/**\n * Function: image\n * \n * Paints an image.\n */\nmxVmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tvar node = null;\n\t\n\tif (!aspect)\n\t{\n\t\tnode = this.createRect('image', x, y, w, h);\n\t\tnode.src = src;\n\t}\n\telse\n\t{\n\t\t// Uses fill with aspect to avoid asynchronous update of size\n\t\tnode = this.createRect('rect', x, y, w, h);\n\t\tnode.stroked = 'false';\n\t\t\n\t\t// Handles image aspect via fill\n\t\tvar fill = this.createVmlElement('fill');\n\t\tfill.aspect = (aspect) ? 'atmost' : 'ignore';\n\t\tfill.rotate = 'true';\n\t\tfill.type = 'frame';\n\t\tfill.src = src;\n\n\t\tnode.appendChild(fill);\n\t}\n\t\n\tif (flipH && flipV)\n\t{\n\t\tnode.style.rotation = '180';\n\t}\n\telse if (flipH)\n\t{\n\t\tnode.style.flip = 'x';\n\t}\n\telse if (flipV)\n\t{\n\t\tnode.style.flip = 'y';\n\t}\n\t\n\tif (this.state.alpha < 1 || this.state.fillAlpha < 1)\n\t{\n\t\t// KNOWN: Borders around transparent images in IE<9. Using fill.opacity\n\t\t// fixes this problem by adding a white background in all IE versions.\n\t\tnode.style.filter += 'alpha(opacity=' + (this.state.alpha * this.state.fillAlpha * 100) + ')';\n\t}\n\n\tthis.root.appendChild(node);\n};\n\n/**\n * Function: createText\n * \n * Creates the innermost element that contains the HTML text.\n */\nmxVmlCanvas2D.prototype.createDiv = function(str, align, valign, overflow)\n{\n\tvar div = this.createElement('div');\n\tvar state = this.state;\n\n\tvar css = '';\n\t\n\tif (state.fontBackgroundColor != null)\n\t{\n\t\tcss += 'background-color:' + state.fontBackgroundColor + ';';\n\t}\n\t\n\tif (state.fontBorderColor != null)\n\t{\n\t\tcss += 'border:1px solid ' + state.fontBorderColor + ';';\n\t}\n\t\n\tif (mxUtils.isNode(str))\n\t{\n\t\tdiv.appendChild(str);\n\t}\n\telse\n\t{\n\t\tif (overflow != 'fill' && overflow != 'width')\n\t\t{\n\t\t\tvar div2 = this.createElement('div');\n\t\t\tdiv2.style.cssText = css;\n\t\t\tdiv2.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\tdiv2.style.zoom = '1';\n\t\t\tdiv2.style.textDecoration = 'inherit';\n\t\t\tdiv2.innerHTML = str;\n\t\t\tdiv.appendChild(div2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.style.cssText = css;\n\t\t\tdiv.innerHTML = str;\n\t\t}\n\t}\n\t\n\tvar style = div.style;\n\n\tstyle.fontSize = (state.fontSize / this.vmlScale) + 'px';\n\tstyle.fontFamily = state.fontFamily;\n\tstyle.color = state.fontColor;\n\tstyle.verticalAlign = 'top';\n\tstyle.textAlign = align || 'left';\n\tstyle.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (state.fontSize * mxConstants.LINE_HEIGHT / this.vmlScale) + 'px' : mxConstants.LINE_HEIGHT;\n\n\tif ((state.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle.fontWeight = 'bold';\n\t}\n\n\tif ((state.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle.fontStyle = 'italic';\n\t}\n\t\n\tif ((state.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle.textDecoration = 'underline';\n\t}\n\t\n\treturn div;\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for plain\n * text and html for HTML markup. Clipping, text background and border are not\n * supported for plain text in VML.\n */\nmxVmlCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\tvar s = this.state;\n\t\t\n\t\tif (format == 'html')\n\t\t{\n\t\t\tif (s.rotation != null)\n\t\t\t{\n\t\t\t\tvar pt = this.rotatePoint(x, y, s.rotation, s.rotationCx, s.rotationCy);\n\t\t\t\t\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\n\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tx += s.dx;\n\t\t\t\ty += s.dy;\n\t\t\t\t\n\t\t\t\t// Workaround for rendering offsets\n\t\t\t\tif (overflow != 'fill' && valign == mxConstants.ALIGN_TOP)\n\t\t\t\t{\n\t\t\t\t\ty -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx *= s.scale;\n\t\t\t\ty *= s.scale;\n\t\t\t}\n\n\t\t\t// Adds event transparency in IE8 standards without the transparent background\n\t\t\t// filter which cannot be used due to bugs in the zoomed bounding box (too slow)\n\t\t\t// FIXME: No event transparency if inside v:rect (ie part of shape)\n\t\t\t// KNOWN: Offset wrong for rotated text with word that are longer than the wrapping\n\t\t\t// width in IE8 because real width of text cannot be determined here.\n\t\t\t// This should be fixed in mxText.updateBoundingBox by calling before this and\n\t\t\t// passing the real width to this method if not clipped and wrapped.\n\t\t\tvar abs = (document.documentMode == 8 && !mxClient.IS_EM) ? this.createVmlElement('group') : this.createElement('div');\n\t\t\tabs.style.position = 'absolute';\n\t\t\tabs.style.display = 'inline';\n\t\t\tabs.style.left = this.format(x) + 'px';\n\t\t\tabs.style.top = this.format(y) + 'px';\n\t\t\tabs.style.zoom = s.scale;\n\n\t\t\tvar box = this.createElement('div');\n\t\t\tbox.style.position = 'relative';\n\t\t\tbox.style.display = 'inline';\n\t\t\t\n\t\t\tvar margin = mxUtils.getAlignmentAsPoint(align, valign);\n\t\t\tvar dx = margin.x;\n\t\t\tvar dy = margin.y;\n\n\t\t\tvar div = this.createDiv(str, align, valign, overflow);\n\t\t\tvar inner = this.createElement('div');\n\t\t\t\n\t\t\tif (dir != null)\n\t\t\t{\n\t\t\t\tdiv.setAttribute('dir', dir);\n\t\t\t}\n\n\t\t\tif (wrap && w > 0)\n\t\t\t{\n\t\t\t\tif (!clip)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.width = Math.round(w) + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdiv.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tdiv.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t\t\t// LATER: Check if other cases need to be handled\n\t\t\t\tif (div.style.wordWrap == 'break-word')\n\t\t\t\t{\n\t\t\t\t\tvar tmp = div;\n\t\t\t\t\t\n\t\t\t\t\tif (tmp.firstChild != null && tmp.firstChild.nodeName == 'DIV')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp.firstChild.style.width = '100%';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\t}\n\t\t\t\n\t\t\tvar rot = s.rotation + (rotation || 0);\n\t\t\t\n\t\t\tif (this.rotateHtml && rot != 0)\n\t\t\t{\n\t\t\t\tinner.style.display = 'inline';\n\t\t\t\tinner.style.zoom = '1';\n\t\t\t\tinner.appendChild(div);\n\n\t\t\t\t// Box not needed for rendering in IE8 standards\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM && this.root.nodeName != 'DIV')\n\t\t\t\t{\n\t\t\t\t\tbox.appendChild(inner);\n\t\t\t\t\tabs.appendChild(box);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tabs.appendChild(inner);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tbox.appendChild(div);\n\t\t\t\tabs.appendChild(box);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.style.display = 'inline';\n\t\t\t\tabs.appendChild(div);\n\t\t\t}\n\t\t\t\n\t\t\t// Inserts the node into the DOM\n\t\t\tif (this.root.nodeName != 'DIV')\n\t\t\t{\n\t\t\t\t// Rectangle to fix position in group\n\t\t\t\tvar rect = this.createVmlElement('rect');\n\t\t\t\trect.stroked = 'false';\n\t\t\t\trect.filled = 'false';\n\n\t\t\t\trect.appendChild(abs);\n\t\t\t\tthis.root.appendChild(rect);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.root.appendChild(abs);\n\t\t\t}\n\t\t\t\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = Math.round(w) + 'px';\n\t\t\t\t\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (overflow == 'fill')\n\t\t\t{\n\t\t\t\t// KNOWN: Affects horizontal alignment in quirks\n\t\t\t\t// but fill should only be used with align=left\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = (Math.max(0, w) + 1) + 'px';\n\t\t\t\tdiv.style.height = (Math.max(0, h) + 1) + 'px';\n\t\t\t}\n\t\t\telse if (overflow == 'width')\n\t\t\t{\n\t\t\t\t// KNOWN: Affects horizontal alignment in quirks\n\t\t\t\t// but fill should only be used with align=left\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = (Math.max(0, w) + 1) + 'px';\n\t\t\t\tdiv.style.maxHeight = (Math.max(0, h) + 1) + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (this.rotateHtml && rot != 0)\n\t\t\t{\n\t\t\t\tvar rad = rot * (Math.PI / 180);\n\t\t\t\t\n\t\t\t\t// Precalculate cos and sin for the rotation\n\t\t\t\tvar real_cos = parseFloat(parseFloat(Math.cos(rad)).toFixed(8));\n\t\t\t\tvar real_sin = parseFloat(parseFloat(Math.sin(-rad)).toFixed(8));\n\n\t\t\t\trad %= 2 * Math.PI;\n\t\t\t\tif (rad < 0) rad += 2 * Math.PI;\n\t\t\t\trad %= Math.PI;\n\t\t\t\tif (rad > Math.PI / 2) rad = Math.PI - rad;\n\t\t\t\t\n\t\t\t\tvar cos = Math.cos(rad);\n\t\t\t\tvar sin = Math.sin(rad);\n\n\t\t\t\t// Adds div to document to measure size\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.display = 'inline-block';\n\t\t\t\t\tinner.style.display = 'inline-block';\n\t\t\t\t\tbox.style.display = 'inline-block';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\tdiv.style.position = 'absolute';\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\n\t\t\t\tvar sizeDiv = div;\n\t\t\t\t\n\t\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar tmp = sizeDiv.offsetWidth + 3;\n\t\t\t\tvar oh = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tif (clip)\n\t\t\t\t{\n\t\t\t\t\tw = Math.min(w, tmp);\n\t\t\t\t\toh = Math.min(oh, h);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tw = tmp;\n\t\t\t\t}\n\n\t\t\t\t// Handles words that are longer than the given wrapping width\n\t\t\t\tif (wrap)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.width = w + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Simulates max-height in quirks\n\t\t\t\tif (mxClient.IS_QUIRKS && (clip || overflow == 'width') && oh > h)\n\t\t\t\t{\n\t\t\t\t\toh = h;\n\t\t\t\t\t\n\t\t\t\t\t// Quirks does not support maxHeight\n\t\t\t\t\tdiv.style.height = oh + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\th = oh;\n\n\t\t\t\tvar top_fix = (h - h * cos + w * -sin) / 2 - real_sin * w * (dx + 0.5) + real_cos * h * (dy + 0.5);\n\t\t\t\tvar left_fix = (w - w * cos + h * -sin) / 2 + real_cos * w * (dx + 0.5) + real_sin * h * (dy + 0.5);\n\n\t\t\t\tif (abs.nodeName == 'group' && this.root.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\t// Workaround for bug where group gets moved away if left and top are non-zero in IE8 standards\n\t\t\t\t\tvar pos = this.createElement('div');\n\t\t\t\t\tpos.style.display = 'inline-block';\n\t\t\t\t\tpos.style.position = 'absolute';\n\t\t\t\t\tpos.style.left = this.format(x + (left_fix - w / 2) * s.scale) + 'px';\n\t\t\t\t\tpos.style.top = this.format(y + (top_fix - h / 2) * s.scale) + 'px';\n\t\t\t\t\t\n\t\t\t\t\tabs.parentNode.appendChild(pos);\n\t\t\t\t\tpos.appendChild(abs);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar sc = (document.documentMode == 8 && !mxClient.IS_EM) ? 1 : s.scale;\n\t\t\t\t\t\n\t\t\t\t\tabs.style.left = this.format(x + (left_fix - w / 2) * sc) + 'px';\n\t\t\t\t\tabs.style.top = this.format(y + (top_fix - h / 2) * sc) + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// KNOWN: Rotated text rendering quality is bad for IE9 quirks\n\t\t\t\tinner.style.filter = \"progid:DXImageTransform.Microsoft.Matrix(M11=\"+real_cos+\", M12=\"+\n\t\t\t\t\treal_sin+\", M21=\"+(-real_sin)+\", M22=\"+real_cos+\", sizingMethod='auto expand')\";\n\t\t\t\tinner.style.backgroundColor = this.rotatedHtmlBackground;\n\t\t\t\t\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tinner.style.filter += 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\n\t\t\t\t// Restore parent node for DIV\n\t\t\t\tinner.appendChild(div);\n\t\t\t\tdiv.style.position = '';\n\t\t\t\tdiv.style.visibility = '';\n\t\t\t}\n\t\t\telse if (document.documentMode != 8 || mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tdiv.style.verticalAlign = 'top';\n\t\t\t\t\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tabs.style.filter = 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Adds div to document to measure size\n\t\t\t\tvar divParent = div.parentNode;\n\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\n\t\t\t\tw = div.offsetWidth;\n\t\t\t\tvar oh = div.offsetHeight;\n\t\t\t\t\n\t\t\t\t// Simulates max-height in quirks\n\t\t\t\tif (mxClient.IS_QUIRKS && clip && oh > h)\n\t\t\t\t{\n\t\t\t\t\toh = h;\n\t\t\t\t\t\n\t\t\t\t\t// Quirks does not support maxHeight\n\t\t\t\t\tdiv.style.height = oh + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\th = oh;\n\t\t\t\t\n\t\t\t\tdiv.style.visibility = '';\n\t\t\t\tdivParent.appendChild(div);\n\t\t\t\t\n\t\t\t\tabs.style.left = this.format(x + w * dx * this.state.scale) + 'px';\n\t\t\t\tabs.style.top = this.format(y + h * dy * this.state.scale) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.filter = 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Faster rendering in IE8 without offsetWidth/Height\n\t\t\t\tbox.style.left = (dx * 100) + '%';\n\t\t\t\tbox.style.top = (dy * 100) + '%';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.plainText(x, y, w, h, mxUtils.htmlEntities(str, false), align, valign, wrap, format, overflow, clip, rotation, dir);\n\t\t}\n\t}\n};\n\n/**\n * Function: plainText\n * \n * Paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.plainText = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\t// TextDirection is ignored since this code is not used (format is always HTML in the text function)\n\tvar s = this.state;\n\tx = (x + s.dx) * s.scale;\n\ty = (y + s.dy) * s.scale;\n\t\n\tvar node = this.createVmlElement('shape');\n\tnode.style.width = '1px';\n\tnode.style.height = '1px';\n\tnode.stroked = 'false';\n\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = s.fontColor;\n\tfill.opacity = (s.alpha * 100) + '%';\n\tnode.appendChild(fill);\n\t\n\tvar path = this.createVmlElement('path');\n\tpath.textpathok = 'true';\n\tpath.v = 'm ' + this.format(0) + ' ' + this.format(0) + ' l ' + this.format(1) + ' ' + this.format(0);\n\t\n\tnode.appendChild(path);\n\t\n\t// KNOWN: Font family and text decoration ignored\n\tvar tp = this.createVmlElement('textpath');\n\ttp.style.cssText = 'v-text-align:' + align;\n\ttp.style.align = align;\n\ttp.style.fontFamily = s.fontFamily;\n\ttp.string = str;\n\ttp.on = 'true';\n\t\n\t// Scale via fontsize instead of node.style.zoom for correct offsets in IE8\n\tvar size = s.fontSize * s.scale / this.vmlScale;\n\ttp.style.fontSize = size + 'px';\n\t\n\t// Bold\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\ttp.style.fontWeight = 'bold';\n\t}\n\t\n\t// Italic\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\ttp.style.fontStyle = 'italic';\n\t}\n\n\t// Underline\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\ttp.style.textDecoration = 'underline';\n\t}\n\n\tvar lines = str.split('\\n');\n\tvar textHeight = size + (lines.length - 1) * size * mxConstants.LINE_HEIGHT;\n\tvar dx = 0;\n\tvar dy = 0;\n\n\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tdy = - textHeight / 2;\n\t}\n\telse if (valign != mxConstants.ALIGN_MIDDLE) // top\n\t{\n\t\tdy = textHeight / 2;\n\t}\n\n\tif (rotation != null)\n\t{\n\t\tnode.style.rotation = rotation;\n\t\tvar rad = rotation * (Math.PI / 180);\n\t\tdx = Math.sin(rad) * dy;\n\t\tdy = Math.cos(rad) * dy;\n\t}\n\n\t// FIXME: Clipping is relative to bounding box\n\t/*if (clip)\n\t{\n\t\tnode.style.clip = 'rect(0px ' + this.format(w) + 'px ' + this.format(h) + 'px 0px)';\n\t}*/\n\t\n\tnode.appendChild(tp);\n\tnode.style.left = this.format(x - dx) + 'px';\n\tnode.style.top = this.format(y + dy) + 'px';\n\t\n\tthis.root.appendChild(node);\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.stroke = function()\n{\n\tthis.addNode(false, true);\n};\n\n/**\n * Function: fill\n * \n * Fills the current path.\n */\nmxVmlCanvas2D.prototype.fill = function()\n{\n\tthis.addNode(true, false);\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills and paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.addNode(true, true);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGuide\n *\n * Implements the alignment of selection cells to other cells in the graph.\n * \n * Constructor: mxGuide\n * \n * Constructs a new guide object.\n */\nfunction mxGuide(graph, states)\n{\n\tthis.graph = graph;\n\tthis.setStates(states);\n};\n\n/**\n * Variable: graph\n *\n * Reference to the enclosing <mxGraph> instance.\n */\nmxGuide.prototype.graph = null;\n\n/**\n * Variable: states\n * \n * Contains the <mxCellStates> that are used for alignment.\n */\nmxGuide.prototype.states = null;\n\n/**\n * Variable: horizontal\n *\n * Specifies if horizontal guides are enabled. Default is true.\n */\nmxGuide.prototype.horizontal = true;\n\n/**\n * Variable: vertical\n *\n * Specifies if vertical guides are enabled. Default is true.\n */\nmxGuide.prototype.vertical = true;\n\n/**\n * Variable: vertical\n *\n * Holds the <mxShape> for the horizontal guide.\n */\nmxGuide.prototype.guideX = null;\n\n/**\n * Variable: vertical\n *\n * Holds the <mxShape> for the vertical guide.\n */\nmxGuide.prototype.guideY = null;\n\n/**\n * Function: setStates\n * \n * Sets the <mxCellStates> that should be used for alignment.\n */\nmxGuide.prototype.setStates = function(states)\n{\n\tthis.states = states;\n};\n\n/**\n * Function: isEnabledForEvent\n * \n * Returns true if the guide should be enabled for the given native event. This\n * implementation always returns true.\n */\nmxGuide.prototype.isEnabledForEvent = function(evt)\n{\n\treturn true;\n};\n\n/**\n * Function: getGuideTolerance\n * \n * Returns the tolerance for the guides. Default value is gridSize / 2.\n */\nmxGuide.prototype.getGuideTolerance = function()\n{\n\treturn this.graph.gridSize / 2;\n};\n\n/**\n * Function: createGuideShape\n * \n * Returns the mxShape to be used for painting the respective guide. This\n * implementation returns a new, dashed and crisp <mxPolyline> using\n * <mxConstants.GUIDE_COLOR> and <mxConstants.GUIDE_STROKEWIDTH> as the format.\n * \n * Parameters:\n * \n * horizontal - Boolean that specifies which guide should be created.\n */\nmxGuide.prototype.createGuideShape = function(horizontal)\n{\n\tvar guide = new mxPolyline([], mxConstants.GUIDE_COLOR, mxConstants.GUIDE_STROKEWIDTH);\n\tguide.isDashed = true;\n\t\n\treturn guide;\n};\n\n/**\n * Function: move\n * \n * Moves the <bounds> by the given <mxPoint> and returnt the snapped point.\n */\nmxGuide.prototype.move = function(bounds, delta, gridEnabled, clone)\n{\n\tif (this.states != null && (this.horizontal || this.vertical) && bounds != null && delta != null)\n\t{\n\t\tvar trx = this.graph.getView().translate;\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\t\n\t\tvar overrideX = false;\n\t\tvar stateX = null;\n\t\tvar valueX = null;\n\t\tvar overrideY = false;\n\t\tvar stateY = null;\n\t\tvar valueY = null;\n\t\t\n\t\tvar tt = this.getGuideTolerance();\n\t\tvar ttX = tt;\n\t\tvar ttY = tt;\n\t\t\n\t\tvar b = bounds.clone();\n\t\tb.x += delta.x;\n\t\tb.y += delta.y;\n\t\t\n\t\tvar left = b.x;\n\t\tvar right = b.x + b.width;\n\t\tvar center = b.getCenterX();\n\t\tvar top = b.y;\n\t\tvar bottom = b.y + b.height;\n\t\tvar middle = b.getCenterY();\n\t\n\t\t// Snaps the left, center and right to the given x-coordinate\n\t\tfunction snapX(x, state)\n\t\t{\n\t\t\tx += this.graph.panDx;\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (Math.abs(x - center) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.getCenterX();\n\t\t\t\tttX = Math.abs(x - center);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(x - left) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.x;\n\t\t\t\tttX = Math.abs(x - left);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(x - right) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.x - bounds.width;\n\t\t\t\tttX = Math.abs(x - right);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateX = state;\n\t\t\t\tvalueX = Math.round(x - this.graph.panDx);\n\t\t\t\t\n\t\t\t\tif (this.guideX == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideX = this.createGuideShape(true);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideX.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideX.pointerEvents = false;\n\t\t\t\t\tthis.guideX.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideX = overrideX || override;\n\t\t};\n\t\t\n\t\t// Snaps the top, middle or bottom to the given y-coordinate\n\t\tfunction snapY(y)\n\t\t{\n\t\t\ty += this.graph.panDy;\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (Math.abs(y - middle) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.getCenterY();\n\t\t\t\tttY = Math.abs(y -  middle);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(y - top) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.y;\n\t\t\t\tttY = Math.abs(y - top);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(y - bottom) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.y - bounds.height;\n\t\t\t\tttY = Math.abs(y - bottom);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateY = state;\n\t\t\t\tvalueY = Math.round(y - this.graph.panDy);\n\t\t\t\t\n\t\t\t\tif (this.guideY == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideY = this.createGuideShape(false);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideY.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideY.pointerEvents = false;\n\t\t\t\t\tthis.guideY.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideY = overrideY || override;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < this.states.length; i++)\n\t\t{\n\t\t\tvar state =  this.states[i];\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\t// Align x\n\t\t\t\tif (this.horizontal)\n\t\t\t\t{\n\t\t\t\t\tsnapX.call(this, state.getCenterX(), state);\n\t\t\t\t\tsnapX.call(this, state.x, state);\n\t\t\t\t\tsnapX.call(this, state.x + state.width, state);\n\t\t\t\t}\n\t\n\t\t\t\t// Align y\n\t\t\t\tif (this.vertical)\n\t\t\t\t{\n\t\t\t\t\tsnapY.call(this, state.getCenterY(), state);\n\t\t\t\t\tsnapY.call(this, state.y, state);\n\t\t\t\t\tsnapY.call(this, state.y + state.height, state);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Moves cells that are off-grid back to the grid on move\n\t\tif (gridEnabled)\n\t\t{\n\t\t\tif (!overrideX)\n\t\t\t{\n\t\t\t\tvar tx = bounds.x - (this.graph.snap(bounds.x /\n\t\t\t\t\tscale - trx.x) + trx.x) * scale;\n\t\t\t\tdx = this.graph.snap(dx / scale) * scale - tx;\n\t\t\t}\n\t\t\t\n\t\t\tif (!overrideY)\n\t\t\t{\n\t\t\t\tvar ty = bounds.y - (this.graph.snap(bounds.y /\n\t\t\t\t\tscale - trx.y) + trx.y) * scale;\n\t\t\t\tdy = this.graph.snap(dy / scale) * scale - ty;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Redraws the guides\n\t\tvar c = this.graph.container;\n\t\t\n\t\tif (!overrideX && this.guideX != null)\n\t\t{\n\t\t\tthis.guideX.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideX != null)\n\t\t{\n\t\t\tif (stateX != null && bounds != null)\n\t\t\t{\n\t\t\t\tminY = Math.min(bounds.y + dy - this.graph.panDy, stateX.y);\n\t\t\t\tmaxY = Math.max(bounds.y + bounds.height + dy - this.graph.panDy, stateX.y + stateX.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (minY != null && maxY != null)\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, minY), new mxPoint(valueX, maxY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, -this.graph.panDy), new mxPoint(valueX, c.scrollHeight - 3 - this.graph.panDy)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideX.stroke = this.getGuideColor(stateX, true);\n\t\t\tthis.guideX.node.style.visibility = 'visible';\n\t\t\tthis.guideX.redraw();\n\t\t}\n\t\t\n\t\tif (!overrideY && this.guideY != null)\n\t\t{\n\t\t\tthis.guideY.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideY != null)\n\t\t{\n\t\t\tif (stateY != null && bounds != null)\n\t\t\t{\n\t\t\t\tminX = Math.min(bounds.x + dx - this.graph.panDx, stateY.x);\n\t\t\t\tmaxX = Math.max(bounds.x + bounds.width + dx - this.graph.panDx, stateY.x + stateY.width);\n\t\t\t}\n\t\t\t\n\t\t\tif (minX != null && maxX != null)\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(minX, valueY), new mxPoint(maxX, valueY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(-this.graph.panDx, valueY), new mxPoint(c.scrollWidth - 3 - this.graph.panDx, valueY)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideY.stroke = this.getGuideColor(stateY, false);\n\t\t\tthis.guideY.node.style.visibility = 'visible';\n\t\t\tthis.guideY.redraw();\n\t\t}\n\t\t\n\t\tdelta = new mxPoint(dx, dy);\n\t}\n\t\n\treturn delta;\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.getGuideColor = function(state, horizontal)\n{\n\treturn mxConstants.GUIDE_COLOR;\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.hide = function()\n{\n\tthis.setVisible(false);\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides the current guides.\n */\nmxGuide.prototype.setVisible = function(visible)\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys all resources that this object uses.\n */\nmxGuide.prototype.destroy = function()\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.destroy();\n\t\tthis.guideX = null;\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.destroy();\n\t\tthis.guideY = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStencil\n *\n * Implements a generic shape which is based on a XML node as a description.\n * \n * shape:\n * \n * The outer element is *shape*, that has attributes:\n * \n * - \"name\", string, required. The stencil name that uniquely identifies the shape.\n * - \"w\" and \"h\" are optional decimal view bounds. This defines your co-ordinate\n * system for the graphics operations in the shape. The default is 100,100.\n * - \"aspect\", optional string. Either \"variable\", the default, or \"fixed\". Fixed\n * means always render the shape with the aspect ratio defined by the ratio w/h.\n * Variable causes the ratio to match that of the geometry of the current vertex.\n * - \"strokewidth\", optional string. Either an integer or the string \"inherit\".\n * \"inherit\" indicates that the strokeWidth of the cell is only changed on scaling,\n * not on resizing. Default is \"1\".\n * If numeric values are used, the strokeWidth of the cell is changed on both\n * scaling and resizing and the value defines the multiple that is applied to\n * the width.\n * \n * connections:\n * \n * If you want to define specific fixed connection points on the shape use the\n * *connections* element. Each *constraint* element within connections defines\n * a fixed connection point on the shape. Constraints have attributes:\n * \n * - \"perimeter\", required. 1 or 0. 0 sets the connection point where specified\n * by x,y. 1 Causes the position of the connection point to be extrapolated from\n * the center of the shape, through x,y to the point of intersection with the\n * perimeter of the shape.\n * - \"x\" and \"y\" are the position of the fixed point relative to the bounds of\n * the shape. They can be automatically adjusted if perimeter=1. So, (0,0) is top\n * left, (0.5,0.5) the center, (1,0.5) the center of the right hand edge of the\n * bounds, etc. Values may be less than 0 or greater than 1 to be positioned\n * outside of the shape.\n * - \"name\", optional string. A unique identifier for the port on the shape.\n * \n * background and foreground:\n * \n * The path of the graphics drawing is split into two elements, *foreground* and\n * *background*. The split is to define which part any shadow applied to the shape\n * is derived from (the background). This, generally, means the background is the\n * line tracing of the outside of the shape, but not always.\n * \n * Any stroke, fill or fillstroke of a background must be the first element of the\n * foreground element, they must not be used within *background*. If the background\n * is empty, this is not required.\n * \n * Because the background cannot have any fill or stroke, it can contain only one\n * *path*, *rect*, *roundrect* or *ellipse* element (or none). It can also not\n * include *image*, *text* or *include-shape*.\n * \n * Note that the state, styling and drawing in mxGraph stencils is very close in\n * design to that of HTML 5 canvas. Tutorials on this subject, if you're not\n * familiar with the topic, will give a good high-level introduction to the\n * concepts used.\n * \n * State:\n * \n * Rendering within the foreground and background elements has the concept of\n * state. There are two types of operations other than state save/load, styling\n * and drawing. The styling operations change the current state, so you can save\n * the current state with <save/> and pull the last saved state from the state\n * stack using <restore/>.\n * \n * Styling:\n * \n * The elements that change colors within the current state all take a hash\n * prefixed hex color code (\"#FFEA80\").\n * \n * - *strokecolor*, this sets the color that drawing paths will be rendered in\n * when a stroke or fillstroke command is issued.\n * - *fillcolor*, this sets the color that the inside of closed paths will be\n * rendered in when a fill or fillstroke command is issued.\n * - *fontcolor*, this sets the color that fonts are rendered in when text is drawn.\n * \n * *alpha* defines the degree of transparency used between 1.0 for fully opaque\n * and 0.0 for fully transparent.\n * \n * *strokewidth* defines the integer thickness of drawing elements rendered by\n * stroking. Use fixed=\"1\" to apply the value as-is, without scaling.\n * \n * *dashed* is \"1\" for dashing enabled and \"0\" for disabled.\n * \n * When *dashed* is enabled the current dash pattern, defined by *dashpattern*,\n * is used on strokes. dashpattern is a sequence of space separated \"on, off\"\n * lengths that define what distance to paint the stroke for, then what distance\n * to paint nothing for, repeat... The default is \"3 3\". You could define a more\n * complex pattern with \"5 3 2 6\", for example. Generally, it makes sense to have\n * an even number of elements in the dashpattern, but that's not required.\n * \n * *linejoin*, *linecap* and *miterlimit* are best explained by the Mozilla page\n * on Canvas styling (about halfway down). The values are all the same except we\n * use \"flat\" for linecap, instead of Canvas' \"butt\".\n * \n * For font styling there are.\n * \n * - *fontsize*, an integer,\n * - *fontstyle*, an ORed bit pattern of bold (1), italic (2) and underline (4),\n * i.e bold underline is \"5\".\n * - *fontfamily*, is a string defining the typeface to be used.\n * \n * Drawing:\n * \n * Most drawing is contained within a *path* element. Again, the graphic\n * primitives are very similar to that of HTML 5 canvas.\n * \n * - *move* to attributes required decimals (x,y).\n * - *line* to attributes required decimals (x,y).\n * - *quad* to required decimals (x2,y2) via control point required decimals\n * (x1,y1).\n * - *curve* to required decimals (x3,y3), via control points required decimals\n * (x1,y1) and (x2,y2).\n * - *arc*, this doesn't follow the HTML Canvas signatures, instead it's a copy\n * of the SVG arc command. The SVG specification documentation gives the best\n * description of its behaviors. The attributes are named identically, they are\n * decimals and all required.\n * - *close* ends the current subpath and causes an automatic straight line to\n * be drawn from the current point to the initial point of the current subpath.\n * \n * Complex drawing:\n * \n * In addition to the graphics primitive operations there are non-primitive\n * operations. These provide an easy method to draw some basic shapes.\n * \n * - *rect*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals\n * - *roundrect*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals. Also\n * \"arcsize\" an optional decimal attribute defining how large, the corner curves\n * are.\n * - *ellipse*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals.\n * \n * Note that these 3 shapes and all paths must be followed by either a fill,\n * stroke, or fillstroke.\n * \n * Text:\n * \n * *text* elements have the following attributes.\n * \n * - \"str\", the text string to display, required.\n * - \"x\" and \"y\", the decimal location (x,y) of the text element, required.\n * - \"align\", the horizontal alignment of the text element, either \"left\",\n * \"center\" or \"right\". Optional, default is \"left\".\n * - \"valign\", the vertical alignment of the text element, either \"top\", \"middle\"\n * or \"bottom\". Optional, default is \"top\".\n * - \"localized\", 0 or 1, if 1 then the \"str\" actually contains a key to use to\n * fetch the value out of mxResources. Optional, default is\n * <mxStencil.defaultLocalized>.\n * - \"vertical\", 0 or 1, if 1 the label is rendered vertically (rotated by 90\n * degrees). Optional, default is 0.\n * - \"rotation\", angle in degrees (0 to 360). The angle to rotate the text by.\n * Optional, default is 0.\n * - \"align-shape\", 0 or 1, if 0 ignore the rotation of the shape when setting\n * the text rotation. Optional, default is 1.\n * \n * If <allowEval> is true, then the text content of the this element can define\n * a function which is invoked with the shape as the only argument and returns\n * the value for the text element (ignored if the str attribute is not null).\n * \n * Images:\n * \n * *image* elements can either be external URLs, or data URIs, where supported\n * (not in IE 7-). Attributes are:\n * \n * - \"src\", required string. Either a data URI or URL.\n * - \"x\", \"y\", required decimals. The (x,y) position of the image.\n * - \"w\", \"h\", required decimals. The width and height of the image.\n * - \"flipH\" and \"flipV\", optional 0 or 1. Whether to flip the image along the\n * horizontal/vertical axis. Default is 0 for both.\n * \n * If <allowEval> is true, then the text content of the this element can define\n * a function which is invoked with the shape as the only argument and returns\n * the value for the image source (ignored if the src attribute is not null).\n * \n * Sub-shapes:\n * \n * *include-shape* allow stencils to be rendered within the current stencil by\n * referencing the sub-stencil by name. Attributes are:\n * \n * - \"name\", required string. The unique shape name of the stencil.\n * - \"x\", \"y\", \"w\", \"h\", required decimals. The (x,y) position of the sub-shape\n * and its width and height.\n * \n * Constructor: mxStencil\n * \n * Constructs a new generic shape by setting <desc> to the given XML node and\n * invoking <parseDescription> and <parseConstraints>.\n * \n * Parameters:\n * \n * desc - XML node that contains the stencil description.\n */\nfunction mxStencil(desc)\n{\n\tthis.desc = desc;\n\tthis.parseDescription();\n\tthis.parseConstraints();\n};\n\n/**\n * Variable: defaultLocalized\n * \n * Static global variable that specifies the default value for the localized\n * attribute of the text element. Default is false.\n */\nmxStencil.defaultLocalized = false;\n\n/**\n * Function: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content and images. Default is false. Set this to true\n * if stencils can not contain user input.\n */\nmxStencil.allowEval = false;\n\n/**\n * Variable: desc\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.desc = null;\n\n/**\n * Variable: constraints\n * \n * Holds an array of <mxConnectionConstraints> as defined in the shape.\n */\nmxStencil.prototype.constraints = null;\n\n/**\n * Variable: aspect\n *\n * Holds the aspect of the shape. Default is 'auto'.\n */\nmxStencil.prototype.aspect = null;\n\n/**\n * Variable: w0\n *\n * Holds the width of the shape. Default is 100.\n */\nmxStencil.prototype.w0 = null;\n\n/**\n * Variable: h0\n *\n * Holds the height of the shape. Default is 100.\n */\nmxStencil.prototype.h0 = null;\n\n/**\n * Variable: bgNodes\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.bgNode = null;\n\n/**\n * Variable: fgNodes\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.fgNode = null;\n\n/**\n * Variable: strokewidth\n *\n * Holds the strokewidth direction from the description.\n */\nmxStencil.prototype.strokewidth = null;\n\n/**\n * Function: parseDescription\n *\n * Reads <w0>, <h0>, <aspect>, <bgNodes> and <fgNodes> from <desc>.\n */\nmxStencil.prototype.parseDescription = function()\n{\n\t// LATER: Preprocess nodes for faster painting\n\tthis.fgNode = this.desc.getElementsByTagName('foreground')[0];\n\tthis.bgNode = this.desc.getElementsByTagName('background')[0];\n\tthis.w0 = Number(this.desc.getAttribute('w') || 100);\n\tthis.h0 = Number(this.desc.getAttribute('h') || 100);\n\t\n\t// Possible values for aspect are: variable and fixed where\n\t// variable means fill the available space and fixed means\n\t// use w0 and h0 to compute the aspect.\n\tvar aspect = this.desc.getAttribute('aspect');\n\tthis.aspect = (aspect != null) ? aspect : 'variable';\n\t\n\t// Possible values for strokewidth are all numbers and \"inherit\"\n\t// where the inherit means take the value from the style (ie. the\n\t// user-defined stroke-width). Note that the strokewidth is scaled\n\t// by the minimum scaling that is used to draw the shape (sx, sy).\n\tvar sw = this.desc.getAttribute('strokewidth');\n\tthis.strokewidth = (sw != null) ? sw : '1';\n};\n\n/**\n * Function: parseConstraints\n *\n * Reads the constraints from <desc> into <constraints> using\n * <parseConstraint>.\n */\nmxStencil.prototype.parseConstraints = function()\n{\n\tvar conns = this.desc.getElementsByTagName('connections')[0];\n\t\n\tif (conns != null)\n\t{\n\t\tvar tmp = mxUtils.getChildNodes(conns);\n\t\t\n\t\tif (tmp != null && tmp.length > 0)\n\t\t{\n\t\t\tthis.constraints = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < tmp.length; i++)\n\t\t\t{\n\t\t\t\tthis.constraints.push(this.parseConstraint(tmp[i]));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: parseConstraint\n *\n * Parses the given XML node and returns its <mxConnectionConstraint>.\n */\nmxStencil.prototype.parseConstraint = function(node)\n{\n\tvar x = Number(node.getAttribute('x'));\n\tvar y = Number(node.getAttribute('y'));\n\tvar perimeter = node.getAttribute('perimeter') == '1';\n\tvar name = node.getAttribute('name');\n\t\n\treturn new mxConnectionConstraint(new mxPoint(x, y), perimeter, name);\n};\n\n/**\n * Function: evaluateTextAttribute\n * \n * Gets the given attribute as a text. The return value from <evaluateAttribute>\n * is used as a key to <mxResources.get> if the localized attribute in the text\n * node is 1 or if <defaultLocalized> is true.\n */\nmxStencil.prototype.evaluateTextAttribute = function(node, attribute, shape)\n{\n\tvar result = this.evaluateAttribute(node, attribute, shape);\n\tvar loc = node.getAttribute('localized');\n\t\n\tif ((mxStencil.defaultLocalized && loc == null) || loc == '1')\n\t{\n\t\tresult = mxResources.get(result);\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: evaluateAttribute\n *\n * Gets the attribute for the given name from the given node. If the attribute\n * does not exist then the text content of the node is evaluated and if it is\n * a function it is invoked with <shape> as the only argument and the return\n * value is used as the attribute value to be returned.\n */\nmxStencil.prototype.evaluateAttribute = function(node, attribute, shape)\n{\n\tvar result = node.getAttribute(attribute);\n\t\n\tif (result == null)\n\t{\n\t\tvar text = mxUtils.getTextContent(node);\n\t\t\n\t\tif (text != null && mxStencil.allowEval)\n\t\t{\n\t\t\tvar funct = mxUtils.eval(text);\n\t\t\t\n\t\t\tif (typeof(funct) == 'function')\n\t\t\t{\n\t\t\t\tresult = funct(shape);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: drawShape\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawShape = function(canvas, shape, x, y, w, h)\n{\n\t// TODO: Internal structure (array of special structs?), relative and absolute\n\t// coordinates (eg. note shape, process vs star, actor etc.), text rendering\n\t// and non-proportional scaling, how to implement pluggable edge shapes\n\t// (start, segment, end blocks), pluggable markers, how to implement\n\t// swimlanes (title area) with this API, add icon, horizontal/vertical\n\t// label, indicator for all shapes, rotation\n\tvar direction = mxUtils.getValue(shape.style, mxConstants.STYLE_DIRECTION, null);\n\tvar aspect = this.computeAspect(shape.style, x, y, w, h, direction);\n\tvar minScale = Math.min(aspect.width, aspect.height);\n\tvar sw = (this.strokewidth == 'inherit') ?\n\t\t\tNumber(mxUtils.getNumber(shape.style, mxConstants.STYLE_STROKEWIDTH, 1)) :\n\t\t\tNumber(this.strokewidth) * minScale;\n\tcanvas.setStrokeWidth(sw);\n\n\tthis.drawChildren(canvas, shape, x, y, w, h, this.bgNode, aspect, false, true);\n\tthis.drawChildren(canvas, shape, x, y, w, h, this.fgNode, aspect, true,\n\t\t!shape.outline || shape.style == null || mxUtils.getValue(\n\t\tshape.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0);\n};\n\n/**\n * Function: drawChildren\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawChildren = function(canvas, shape, x, y, w, h, node, aspect, disableShadow, paint)\n{\n\tif (node != null && w > 0 && h > 0)\n\t{\n\t\tvar tmp = node.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t{\n\t\t\t\tthis.drawNode(canvas, shape, tmp, aspect, disableShadow, paint);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\t}\n};\n\n/**\n * Function: computeAspect\n *\n * Returns a rectangle that contains the offset in x and y and the horizontal\n * and vertical scale in width and height used to draw this shape inside the\n * given <mxRectangle>.\n * \n * Parameters:\n * \n * shape - <mxShape> to be drawn.\n * bounds - <mxRectangle> that should contain the stencil.\n * direction - Optional direction of the shape to be darwn.\n */\nmxStencil.prototype.computeAspect = function(shape, x, y, w, h, direction)\n{\n\tvar x0 = x;\n\tvar y0 = y;\n\tvar sx = w / this.w0;\n\tvar sy = h / this.h0;\n\t\n\tvar inverse = (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH);\n\n\tif (inverse)\n\t{\n\t\tsy = w / this.h0;\n\t\tsx = h / this.w0;\n\t\t\n\t\tvar delta = (w - h) / 2;\n\n\t\tx0 += delta;\n\t\ty0 -= delta;\n\t}\n\n\tif (this.aspect == 'fixed')\n\t{\n\t\tsy = Math.min(sx, sy);\n\t\tsx = sy;\n\t\t\n\t\t// Centers the shape inside the available space\n\t\tif (inverse)\n\t\t{\n\t\t\tx0 += (h - this.w0 * sx) / 2;\n\t\t\ty0 += (w - this.h0 * sy) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx0 += (w - this.w0 * sx) / 2;\n\t\t\ty0 += (h - this.h0 * sy) / 2;\n\t\t}\n\t}\n\n\treturn new mxRectangle(x0, y0, sx, sy);\n};\n\n/**\n * Function: drawNode\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawNode = function(canvas, shape, node, aspect, disableShadow, paint)\n{\n\tvar name = node.nodeName;\n\tvar x0 = aspect.x;\n\tvar y0 = aspect.y;\n\tvar sx = aspect.width;\n\tvar sy = aspect.height;\n\tvar minScale = Math.min(sx, sy);\n\t\n\tif (name == 'save')\n\t{\n\t\tcanvas.save();\n\t}\n\telse if (name == 'restore')\n\t{\n\t\tcanvas.restore();\n\t}\n\telse if (paint)\n\t{\n\t\tif (name == 'path')\n\t\t{\n\t\t\tcanvas.begin();\n\t\n\t\t\t// Renders the elements inside the given path\n\t\t\tvar childNode = node.firstChild;\n\t\t\t\n\t\t\twhile (childNode != null)\n\t\t\t{\n\t\t\t\tif (childNode.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\tthis.drawNode(canvas, shape, childNode, aspect, disableShadow, paint);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tchildNode = childNode.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse if (name == 'close')\n\t\t{\n\t\t\tcanvas.close();\n\t\t}\n\t\telse if (name == 'move')\n\t\t{\n\t\t\tcanvas.moveTo(x0 + Number(node.getAttribute('x')) * sx, y0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'line')\n\t\t{\n\t\t\tcanvas.lineTo(x0 + Number(node.getAttribute('x')) * sx, y0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'quad')\n\t\t{\n\t\t\tcanvas.quadTo(x0 + Number(node.getAttribute('x1')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y1')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x2')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y2')) * sy);\n\t\t}\n\t\telse if (name == 'curve')\n\t\t{\n\t\t\tcanvas.curveTo(x0 + Number(node.getAttribute('x1')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y1')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x2')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y2')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x3')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y3')) * sy);\n\t\t}\n\t\telse if (name == 'arc')\n\t\t{\n\t\t\tcanvas.arcTo(Number(node.getAttribute('rx')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('ry')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('x-axis-rotation')),\n\t\t\t\t\tNumber(node.getAttribute('large-arc-flag')),\n\t\t\t\t\tNumber(node.getAttribute('sweep-flag')),\n\t\t\t\t\tx0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'rect')\n\t\t{\n\t\t\tcanvas.rect(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('h')) * sy);\n\t\t}\n\t\telse if (name == 'roundrect')\n\t\t{\n\t\t\tvar arcsize = Number(node.getAttribute('arcsize'));\n\t\n\t\t\tif (arcsize == 0)\n\t\t\t{\n\t\t\t\tarcsize = mxConstants.RECTANGLE_ROUNDING_FACTOR * 100;\n\t\t\t}\n\t\t\t\n\t\t\tvar w = Number(node.getAttribute('w')) * sx;\n\t\t\tvar h = Number(node.getAttribute('h')) * sy;\n\t\t\tvar factor = Number(arcsize) / 100;\n\t\t\tvar r = Math.min(w * factor, h * factor);\n\t\t\t\n\t\t\tcanvas.roundrect(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tw, h, r, r);\n\t\t}\n\t\telse if (name == 'ellipse')\n\t\t{\n\t\t\tcanvas.ellipse(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\tNumber(node.getAttribute('h')) * sy);\n\t\t}\n\t\telse if (name == 'image')\n\t\t{\n\t\t\tif (!shape.outline)\n\t\t\t{\n\t\t\t\tvar src = this.evaluateAttribute(node, 'src', shape);\n\t\t\t\t\n\t\t\t\tcanvas.image(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('h')) * sy,\n\t\t\t\t\tsrc, false, node.getAttribute('flipH') == '1',\n\t\t\t\t\tnode.getAttribute('flipV') == '1');\n\t\t\t}\n\t\t}\n\t\telse if (name == 'text')\n\t\t{\n\t\t\tif (!shape.outline)\n\t\t\t{\n\t\t\t\tvar str = this.evaluateTextAttribute(node, 'str', shape);\n\t\t\t\tvar rotation = node.getAttribute('vertical') == '1' ? -90 : 0;\n\t\t\t\t\n\t\t\t\tif (node.getAttribute('align-shape') == '0')\n\t\t\t\t{\n\t\t\t\t\tvar dr = shape.rotation;\n\t\t\n\t\t\t\t\t// Depends on flipping\n\t\t\t\t\tvar flipH = mxUtils.getValue(shape.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tvar flipV = mxUtils.getValue(shape.style, mxConstants.STYLE_FLIPV, 0) == 1;\n\t\t\t\t\t\n\t\t\t\t\tif (flipH && flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\trotation -= dr;\n\t\t\t\t\t}\n\t\t\t\t\telse if (flipH || flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\trotation += dr;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trotation -= dr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\trotation -= node.getAttribute('rotation');\n\t\t\n\t\t\t\tcanvas.text(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\t\t0, 0, str, node.getAttribute('align') || 'left',\n\t\t\t\t\t\tnode.getAttribute('valign') || 'top', false, '',\n\t\t\t\t\t\tnull, false, rotation);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'include-shape')\n\t\t{\n\t\t\tvar stencil = mxStencilRegistry.getStencil(node.getAttribute('name'));\n\t\t\t\n\t\t\tif (stencil != null)\n\t\t\t{\n\t\t\t\tvar x = x0 + Number(node.getAttribute('x')) * sx;\n\t\t\t\tvar y = y0 + Number(node.getAttribute('y')) * sy;\n\t\t\t\tvar w = Number(node.getAttribute('w')) * sx;\n\t\t\t\tvar h = Number(node.getAttribute('h')) * sy;\n\t\t\t\t\n\t\t\t\tstencil.drawShape(canvas, shape, x, y, w, h);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'fillstroke')\n\t\t{\n\t\t\tcanvas.fillAndStroke();\n\t\t}\n\t\telse if (name == 'fill')\n\t\t{\n\t\t\tcanvas.fill();\n\t\t}\n\t\telse if (name == 'stroke')\n\t\t{\n\t\t\tcanvas.stroke();\n\t\t}\n\t\telse if (name == 'strokewidth')\n\t\t{\n\t\t\tvar s = (node.getAttribute('fixed') == '1') ? 1 : minScale;\n\t\t\tcanvas.setStrokeWidth(Number(node.getAttribute('width')) * s);\n\t\t}\n\t\telse if (name == 'dashed')\n\t\t{\n\t\t\tcanvas.setDashed(node.getAttribute('dashed') == '1');\n\t\t}\n\t\telse if (name == 'dashpattern')\n\t\t{\n\t\t\tvar value = node.getAttribute('pattern');\n\t\t\t\n\t\t\tif (value != null)\n\t\t\t{\n\t\t\t\tvar tmp = value.split(' ');\n\t\t\t\tvar pat = [];\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < tmp.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (tmp[i].length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tpat.push(Number(tmp[i]) * minScale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue = pat.join(' ');\n\t\t\t\tcanvas.setDashPattern(value);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'strokecolor')\n\t\t{\n\t\t\tcanvas.setStrokeColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'linecap')\n\t\t{\n\t\t\tcanvas.setLineCap(node.getAttribute('cap'));\n\t\t}\n\t\telse if (name == 'linejoin')\n\t\t{\n\t\t\tcanvas.setLineJoin(node.getAttribute('join'));\n\t\t}\n\t\telse if (name == 'miterlimit')\n\t\t{\n\t\t\tcanvas.setMiterLimit(Number(node.getAttribute('limit')));\n\t\t}\n\t\telse if (name == 'fillcolor')\n\t\t{\n\t\t\tcanvas.setFillColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'alpha')\n\t\t{\n\t\t\tcanvas.setAlpha(node.getAttribute('alpha'));\n\t\t}\n\t\telse if (name == 'fontcolor')\n\t\t{\n\t\t\tcanvas.setFontColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'fontstyle')\n\t\t{\n\t\t\tcanvas.setFontStyle(node.getAttribute('style'));\n\t\t}\n\t\telse if (name == 'fontfamily')\n\t\t{\n\t\t\tcanvas.setFontFamily(node.getAttribute('family'));\n\t\t}\n\t\telse if (name == 'fontsize')\n\t\t{\n\t\t\tcanvas.setFontSize(Number(node.getAttribute('size')) * minScale);\n\t\t}\n\t\t\n\t\tif (disableShadow && (name == 'fillstroke' || name == 'fill' || name == 'stroke'))\n\t\t{\n\t\t\tdisableShadow = false;\n\t\t\tcanvas.setShadow(false);\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxShape\n *\n * Base class for all shapes. A shape in mxGraph is a\n * separate implementation for SVG, VML and HTML. Which\n * implementation to use is controlled by the <dialect>\n * property which is assigned from within the <mxCellRenderer>\n * when the shape is created. The dialect must be assigned\n * for a shape, and it does normally depend on the browser and\n * the confiuration of the graph (see <mxGraph> rendering hint).\n *\n * For each supported shape in SVG and VML, a corresponding\n * shape exists in mxGraph, namely for text, image, rectangle,\n * rhombus, ellipse and polyline. The other shapes are a\n * combination of these shapes (eg. label and swimlane)\n * or they consist of one or more (filled) path objects\n * (eg. actor and cylinder). The HTML implementation is\n * optional but may be required for a HTML-only view of\n * the graph.\n *\n * Custom Shapes:\n *\n * To extend from this class, the basic code looks as follows.\n * In the special case where the custom shape consists only of\n * one filled region or one filled region and an additional stroke\n * the <mxActor> and <mxCylinder> should be subclassed,\n * respectively.\n *\n * (code)\n * function CustomShape() { }\n * \n * CustomShape.prototype = new mxShape();\n * CustomShape.prototype.constructor = CustomShape; \n * (end)\n *\n * To register a custom shape in an existing graph instance,\n * one must register the shape under a new name in the graph's\n * cell renderer as follows:\n *\n * (code)\n * mxCellRenderer.registerShape('customShape', CustomShape);\n * (end)\n *\n * The second argument is the name of the constructor.\n *\n * In order to use the shape you can refer to the given name above\n * in a stylesheet. For example, to change the shape for the default\n * vertex style, the following code is used:\n *\n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = 'customShape';\n * (end)\n * \n * Constructor: mxShape\n *\n * Constructs a new shape.\n */\nfunction mxShape(stencil)\n{\n\tthis.stencil = stencil;\n\tthis.initStyles();\n};\n\n/**\n * Variable: dialect\n *\n * Holds the dialect in which the shape is to be painted.\n * This can be one of the DIALECT constants in <mxConstants>.\n */\nmxShape.prototype.dialect = null;\n\n/**\n * Variable: scale\n *\n * Holds the scale in which the shape is being painted.\n */\nmxShape.prototype.scale = 1;\n\n/**\n * Variable: antiAlias\n * \n * Rendering hint for configuring the canvas.\n */\nmxShape.prototype.antiAlias = true;\n\n/**\n * Variable: minSvgStrokeWidth\n * \n * Minimum stroke width for SVG output.\n */\nmxShape.prototype.minSvgStrokeWidth = 1;\n\n/**\n * Variable: bounds\n *\n * Holds the <mxRectangle> that specifies the bounds of this shape.\n */\nmxShape.prototype.bounds = null;\n\n/**\n * Variable: points\n *\n * Holds the array of <mxPoints> that specify the points of this shape.\n */\nmxShape.prototype.points = null;\n\n/**\n * Variable: node\n *\n * Holds the outermost DOM node that represents this shape.\n */\nmxShape.prototype.node = null;\n \n/**\n * Variable: state\n * \n * Optional reference to the corresponding <mxCellState>.\n */\nmxShape.prototype.state = null;\n\n/**\n * Variable: style\n *\n * Optional reference to the style of the corresponding <mxCellState>.\n */\nmxShape.prototype.style = null;\n\n/**\n * Variable: boundingBox\n *\n * Contains the bounding box of the shape, that is, the smallest rectangle\n * that includes all pixels of the shape.\n */\nmxShape.prototype.boundingBox = null;\n\n/**\n * Variable: stencil\n *\n * Holds the <mxStencil> that defines the shape.\n */\nmxShape.prototype.stencil = null;\n\n/**\n * Variable: svgStrokeTolerance\n *\n * Event-tolerance for SVG strokes (in px). Default is 8. This is only passed\n * to the canvas in <createSvgCanvas> if <pointerEvents> is true.\n */\nmxShape.prototype.svgStrokeTolerance = 8;\n\n/**\n * Variable: pointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.pointerEvents = true;\n\n/**\n * Variable: svgPointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.svgPointerEvents = 'all';\n\n/**\n * Variable: shapePointerEvents\n * \n * Specifies if pointer events outside of shape should be handled. Default\n * is false.\n */\nmxShape.prototype.shapePointerEvents = false;\n\n/**\n * Variable: stencilPointerEvents\n * \n * Specifies if pointer events outside of stencils should be handled. Default\n * is false. Set this to true for backwards compatibility with the 1.x branch.\n */\nmxShape.prototype.stencilPointerEvents = false;\n\n/**\n * Variable: vmlScale\n * \n * Scale for improving the precision of VML rendering. Default is 1.\n */\nmxShape.prototype.vmlScale = 1;\n\n/**\n * Variable: outline\n * \n * Specifies if the shape should be drawn as an outline. This disables all\n * fill colors and can be used to disable other drawing states that should\n * not be painted for outlines. Default is false. This should be set before\n * calling <apply>.\n */\nmxShape.prototype.outline = false;\n\n/**\n * Variable: visible\n * \n * Specifies if the shape is visible. Default is true.\n */\nmxShape.prototype.visible = true;\n\n/**\n * Variable: useSvgBoundingBox\n * \n * Allows to use the SVG bounding box in SVG. Default is false for performance\n * reasons.\n */\nmxShape.prototype.useSvgBoundingBox = false;\n\n/**\n * Function: init\n *\n * Initializes the shape by creaing the DOM node using <create>\n * and adding it into the given container.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.init = function(container)\n{\n\tif (this.node == null)\n\t{\n\t\tthis.node = this.create(container);\n\t\t\n\t\tif (container != null)\n\t\t{\n\t\t\tcontainer.appendChild(this.node);\n\t\t}\n\t}\n};\n\n/**\n * Function: initStyles\n *\n * Sets the styles to their default values.\n */\nmxShape.prototype.initStyles = function(container)\n{\n\tthis.strokewidth = 1;\n\tthis.rotation = 0;\n\tthis.opacity = 100;\n\tthis.fillOpacity = 100;\n\tthis.strokeOpacity = 100;\n\tthis.flipH = false;\n\tthis.flipV = false;\n};\n\n/**\n * Function: isParseVml\n * \n * Specifies if any VML should be added via insertAdjacentHtml to the DOM. This\n * is only needed in IE8 and only if the shape contains VML markup. This method\n * returns true.\n */\nmxShape.prototype.isParseVml = function()\n{\n\treturn true;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxShape.prototype.isHtmlAllowed = function()\n{\n\treturn false;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Returns 0, or 0.5 if <strokewidth> % 2 == 1.\n */\nmxShape.prototype.getSvgScreenOffset = function()\n{\n\tvar sw = this.stencil && this.stencil.strokewidth != 'inherit' ? Number(this.stencil.strokewidth) : this.strokewidth;\n\t\n\treturn (mxUtils.mod(Math.max(1, Math.round(sw * this.scale)), 2) == 1) ? 0.5 : 0;\n};\n\n/**\n * Function: create\n *\n * Creates and returns the DOM node(s) for the shape in\n * the given container. This implementation invokes\n * <createSvg>, <createHtml> or <createVml> depending\n * on the <dialect> and style settings.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.create = function(container)\n{\n\tvar node = null;\n\t\n\tif (container != null && container.ownerSVGElement != null)\n\t{\n\t\tnode = this.createSvg(container);\n\t}\n\telse if (document.documentMode == 8 || !mxClient.IS_VML ||\n\t\t(this.dialect != mxConstants.DIALECT_VML && this.isHtmlAllowed()))\n\t{\n\t\tnode = this.createHtml(container);\n\t}\n\telse\n\t{\n\t\tnode = this.createVml(container);\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: createSvg\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.createSvg = function()\n{\n\treturn document.createElementNS(mxConstants.NS_SVG, 'g');\n};\n\n/**\n * Function: createVml\n *\n * Creates and returns the VML node to represent this shape.\n */\nmxShape.prototype.createVml = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: reconfigure\n *\n * Reconfigures this shape. This will update the colors etc in\n * addition to the bounds or points.\n */\nmxShape.prototype.reconfigure = function()\n{\n\tthis.redraw();\n};\n\n/**\n * Function: redraw\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.redraw = function()\n{\n\tthis.updateBoundsFromPoints();\n\t\n\tif (this.visible && this.checkBounds())\n\t{\n\t\tthis.node.style.visibility = 'visible';\n\t\tthis.clear();\n\t\t\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tthis.redrawHtmlShape();\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tthis.redrawShape();\n\t\t}\n\n\t\tthis.updateBoundingBox();\n\t}\n\telse\n\t{\n\t\tthis.node.style.visibility = 'hidden';\n\t\tthis.boundingBox = null;\n\t}\n};\n\n/**\n * Function: clear\n * \n * Removes all child nodes and resets all CSS.\n */\nmxShape.prototype.clear = function()\n{\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\twhile (this.node.lastChild != null)\n\t\t{\n\t\t\tthis.node.removeChild(this.node.lastChild);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.node.style.cssText = 'position:absolute;' + ((this.cursor != null) ?\n\t\t\t('cursor:' + this.cursor + ';') : '');\n\t\tthis.node.innerHTML = '';\n\t}\n};\n\n/**\n * Function: updateBoundsFromPoints\n * \n * Updates the bounds based on the points.\n */\nmxShape.prototype.updateBoundsFromPoints = function()\n{\n\tvar pts = this.points;\n\t\n\tif (pts != null && pts.length > 0 && pts[0] != null)\n\t{\n\t\tthis.bounds = new mxRectangle(Number(pts[0].x), Number(pts[0].y), 1, 1);\n\t\t\n\t\tfor (var i = 1; i < this.points.length; i++)\n\t\t{\n\t\t\tif (pts[i] != null)\n\t\t\t{\n\t\t\t\tthis.bounds.add(new mxRectangle(Number(pts[i].x), Number(pts[i].y), 1, 1));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the <mxRectangle> for the label bounds of this shape, based on the\n * given scaled and translated bounds of the shape. This method should not\n * change the rectangle in-place. This implementation returns the given rect.\n */\nmxShape.prototype.getLabelBounds = function(rect)\n{\n\tvar d = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\tvar bounds = rect;\n\t\n\t// Normalizes argument for getLabelMargins hook\n\tif (d != mxConstants.DIRECTION_SOUTH && d != mxConstants.DIRECTION_NORTH &&\n\t\tthis.state != null && this.state.text != null &&\n\t\tthis.state.text.isPaintBoundsInverted())\n\t{\n\t\tbounds = bounds.clone();\n\t\tvar tmp = bounds.width;\n\t\tbounds.width = bounds.height;\n\t\tbounds.height = tmp;\n\t}\n\t\t\n\tvar m = this.getLabelMargins(bounds);\n\t\n\tif (m != null)\n\t{\n\t\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, false) == '1';\n\t\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, false) == '1';\n\t\t\n\t\t// Handles special case for vertical labels\n\t\tif (this.state != null && this.state.text != null &&\n\t\t\tthis.state.text.isPaintBoundsInverted())\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.height;\n\t\t\tm.height = m.width;\n\t\t\tm.width = m.y;\n\t\t\tm.y = tmp;\n\n\t\t\ttmp = flipH;\n\t\t\tflipH = flipV;\n\t\t\tflipV = tmp;\n\t\t}\n\t\t\n\t\treturn mxUtils.getDirectedBounds(rect, m, this.style, flipH, flipV);\n\t}\n\t\n\treturn rect;\n};\n\n/**\n * Function: getLabelMargins\n * \n * Returns the scaled top, left, bottom and right margin to be used for\n * computing the label bounds as an <mxRectangle>, where the bottom and right\n * margin are defined in the width and height of the rectangle, respectively.\n */\nmxShape.prototype.getLabelMargins= function(rect)\n{\n\treturn null;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxShape.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height) &&\n\t\t\tthis.bounds.width > 0 && this.bounds.height > 0);\n};\n\n/**\n * Function: createVmlGroup\n *\n * Returns the temporary element used for rendering in IE8 standards mode.\n */\nmxShape.prototype.createVmlGroup = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\tnode.style.width = this.node.style.width;\n\tnode.style.height = this.node.style.height;\n\t\n\treturn node;\n};\n\n/**\n * Function: redrawShape\n *\n * Updates the SVG or VML shape.\n */\nmxShape.prototype.redrawShape = function()\n{\n\tvar canvas = this.createCanvas();\n\t\n\tif (canvas != null)\n\t{\n\t\t// Specifies if events should be handled\n\t\tcanvas.pointerEvents = this.pointerEvents;\n\t\n\t\tthis.paint(canvas);\n\t\n\t\tif (this.node != canvas.root)\n\t\t{\n\t\t\t// Forces parsing in IE8 standards mode - slow! avoid\n\t\t\tthis.node.insertAdjacentHTML('beforeend', canvas.root.outerHTML);\n\t\t}\n\t\n\t\tif (this.node.nodeName == 'DIV' && document.documentMode == 8)\n\t\t{\n\t\t\t// Makes DIV transparent to events for IE8 in IE8 standards\n\t\t\t// mode (Note: Does not work for IE9 in IE8 standards mode\n\t\t\t// and not for IE11 in enterprise mode)\n\t\t\tthis.node.style.filter = '';\n\t\t\t\n\t\t\t// Adds event transparency in IE8 standards\n\t\t\tmxUtils.addTransparentBackgroundFilter(this.node);\n\t\t}\n\t\t\n\t\tthis.destroyCanvas(canvas);\n\t}\n};\n\n/**\n * Function: createCanvas\n * \n * Creates a new canvas for drawing this shape. May return null.\n */\nmxShape.prototype.createCanvas = function()\n{\n\tvar canvas = null;\n\t\n\t// LATER: Check if reusing existing DOM nodes improves performance\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\tcanvas = this.createSvgCanvas();\n\t}\n\telse if (mxClient.IS_VML)\n\t{\n\t\tthis.updateVmlContainer();\n\t\tcanvas = this.createVmlCanvas();\n\t}\n\t\n\tif (canvas != null && this.outline)\n\t{\n\t\tcanvas.setStrokeWidth(this.strokewidth);\n\t\tcanvas.setStrokeColor(this.stroke);\n\t\t\n\t\tif (this.isDashed != null)\n\t\t{\n\t\t\tcanvas.setDashed(this.isDashed);\n\t\t}\n\t\t\n\t\tcanvas.setStrokeWidth = function() {};\n\t\tcanvas.setStrokeColor = function() {};\n\t\tcanvas.setFillColor = function() {};\n\t\tcanvas.setGradient = function() {};\n\t\tcanvas.setDashed = function() {};\n\t\tcanvas.text = function() {};\n\t}\n\n\treturn canvas;\n};\n\n/**\n * Function: createSvgCanvas\n * \n * Creates and returns an <mxSvgCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createSvgCanvas = function()\n{\n\tvar canvas = new mxSvgCanvas2D(this.node, false);\n\tcanvas.strokeTolerance = (this.pointerEvents) ? this.svgStrokeTolerance : 0;\n\tcanvas.pointerEventsValue = this.svgPointerEvents;\n\tcanvas.blockImagePointerEvents = mxClient.IS_FF;\n\tvar off = this.getSvgScreenOffset();\n\n\tif (off != 0)\n\t{\n\t\tthis.node.setAttribute('transform', 'translate(' + off + ',' + off + ')');\n\t}\n\telse\n\t{\n\t\tthis.node.removeAttribute('transform');\n\t}\n\n\tcanvas.minStrokeWidth = this.minSvgStrokeWidth;\n\t\n\tif (!this.antiAlias)\n\t{\n\t\t// Rounds all numbers in the SVG output to integers\n\t\tcanvas.format = function(value)\n\t\t{\n\t\t\treturn Math.round(parseFloat(value));\n\t\t};\n\t}\n\t\n\treturn canvas;\n};\n\n/**\n * Function: createVmlCanvas\n * \n * Creates and returns an <mxVmlCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createVmlCanvas = function()\n{\n\t// Workaround for VML rendering bug in IE8 standards mode\n\tvar node = (document.documentMode == 8 && this.isParseVml()) ? this.createVmlGroup() : this.node;\n\tvar canvas = new mxVmlCanvas2D(node, false);\n\t\n\tif (node.tagUrn != '')\n\t{\n\t\tvar w = Math.max(1, Math.round(this.bounds.width));\n\t\tvar h = Math.max(1, Math.round(this.bounds.height));\n\t\tnode.coordsize = (w * this.vmlScale) + ',' + (h * this.vmlScale);\n\t\tcanvas.scale(this.vmlScale);\n\t\tcanvas.vmlScale = this.vmlScale;\n\t}\n\n\t// Painting relative to top, left shape corner\n\tvar s = this.scale;\n\tcanvas.translate(-Math.round(this.bounds.x / s), -Math.round(this.bounds.y / s));\n\t\n\treturn canvas;\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Updates the bounds of the VML container.\n */\nmxShape.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tvar w = Math.max(1, Math.round(this.bounds.width));\n\tvar h = Math.max(1, Math.round(this.bounds.height));\n\tthis.node.style.width = w + 'px';\n\tthis.node.style.height = h + 'px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: redrawHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.redrawHtmlShape = function()\n{\n\t// LATER: Refactor methods\n\tthis.updateHtmlBounds(this.node);\n\tthis.updateHtmlFilters(this.node);\n\tthis.updateHtmlColors(this.node);\n};\n\n/**\n * Function: updateHtmlFilters\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlFilters = function(node)\n{\n\tvar f = '';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tf += 'alpha(opacity=' + (this.opacity) + ')';\n\t}\n\t\n\tif (this.isShadow)\n\t{\n\t\t// FIXME: Cannot implement shadow transparency with filter\n\t\tf += 'progid:DXImageTransform.Microsoft.dropShadow (' +\n\t\t\t'OffX=\\'' + Math.round(mxConstants.SHADOW_OFFSET_X * this.scale) + '\\', ' +\n\t\t\t'OffY=\\'' + Math.round(mxConstants.SHADOW_OFFSET_Y * this.scale) + '\\', ' +\n\t\t\t'Color=\\'' + mxConstants.VML_SHADOWCOLOR + '\\')';\n\t}\n\t\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar start = this.fill;\n\t\tvar end = this.gradient;\n\t\tvar type = '0';\n\t\t\n\t\tvar lookup = {east:0,south:1,west:2,north:3};\n\t\tvar dir = (this.direction != null) ? lookup[this.direction] : 0;\n\t\t\n\t\tif (this.gradientDirection != null)\n\t\t{\n\t\t\tdir = mxUtils.mod(dir + lookup[this.gradientDirection] - 1, 4);\n\t\t}\n\n\t\tif (dir == 1)\n\t\t{\n\t\t\ttype = '1';\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 2)\n\t\t{\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 3)\n\t\t{\n\t\t\ttype = '1';\n\t\t}\n\t\t\n\t\tf += 'progid:DXImageTransform.Microsoft.gradient(' +\n\t\t\t'startColorStr=\\'' + start + '\\', endColorStr=\\'' + end +\n\t\t\t'\\', gradientType=\\'' + type + '\\')';\n\t}\n\n\tnode.style.filter = f;\n};\n\n/**\n * Function: mixedModeHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlColors = function(node)\n{\n\tvar color = this.stroke;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.borderColor = color;\n\n\t\tif (this.isDashed)\n\t\t{\n\t\t\tnode.style.borderStyle = 'dashed';\n\t\t}\n\t\telse if (this.strokewidth > 0)\n\t\t{\n\t\t\tnode.style.borderStyle = 'solid';\n\t\t}\n\n\t\tnode.style.borderWidth = Math.max(1, Math.ceil(this.strokewidth * this.scale)) + 'px';\n\t}\n\telse\n\t{\n\t\tnode.style.borderWidth = '0px';\n\t}\n\n\tcolor = (this.outline) ? null : this.fill;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.backgroundColor = color;\n\t\tnode.style.backgroundImage = 'none';\n\t}\n\telse if (this.pointerEvents)\n\t{\n\t\t node.style.backgroundColor = 'transparent';\n\t}\n\telse if (document.documentMode == 8)\n\t{\n\t\tmxUtils.addTransparentBackgroundFilter(node);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(node);\n\t}\n};\n\n/**\n * Function: mixedModeHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlBounds = function(node)\n{\n\tvar sw = (document.documentMode >= 9) ? 0 : Math.ceil(this.strokewidth * this.scale);\n\tnode.style.borderWidth = Math.max(1, sw) + 'px';\n\tnode.style.overflow = 'hidden';\n\t\n\tnode.style.left = Math.round(this.bounds.x - sw / 2) + 'px';\n\tnode.style.top = Math.round(this.bounds.y - sw / 2) + 'px';\n\n\tif (document.compatMode == 'CSS1Compat')\n\t{\n\t\tsw = -sw;\n\t}\n\t\n\tnode.style.width = Math.round(Math.max(0, this.bounds.width + sw)) + 'px';\n\tnode.style.height = Math.round(Math.max(0, this.bounds.height + sw)) + 'px';\n};\n\n/**\n * Function: destroyCanvas\n * \n * Destroys the given canvas which was used for drawing. This implementation\n * increments the reference counts on all shared gradients used in the canvas.\n */\nmxShape.prototype.destroyCanvas = function(canvas)\n{\n\t// Manages reference counts\n\tif (canvas instanceof mxSvgCanvas2D)\n\t{\n\t\t// Increments ref counts\n\t\tfor (var key in canvas.gradients)\n\t\t{\n\t\t\tvar gradient = canvas.gradients[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) + 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.releaseSvgGradients(this.oldGradients);\n\t\tthis.oldGradients = canvas.gradients;\n\t}\n};\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxShape.prototype.paint = function(c)\n{\n\tvar strokeDrawn = false;\n\t\n\tif (c != null && this.outline)\n\t{\n\t\tvar stroke = c.stroke;\n\t\t\n\t\tc.stroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tstroke.apply(this, arguments);\n\t\t};\n\n\t\tvar fillAndStroke = c.fillAndStroke;\n\t\t\n\t\tc.fillAndStroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tfillAndStroke.apply(this, arguments);\n\t\t};\n\t}\n\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\tif (this.isPaintBoundsInverted())\n\t{\n\t\tvar t = (w - h) / 2;\n\t\tx += t;\n\t\ty -= t;\n\t\tvar tmp = w;\n\t\tw = h;\n\t\th = tmp;\n\t}\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\n\t// Adds background rectangle to capture events\n\tvar bg = null;\n\t\n\tif ((this.stencil == null && this.points == null && this.shapePointerEvents) ||\n\t\t(this.stencil != null && this.stencilPointerEvents))\n\t{\n\t\tvar bb = this.createBoundingBox();\n\t\t\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tbg = this.createTransparentSvgRectangle(bb.x, bb.y, bb.width, bb.height);\n\t\t\tthis.node.appendChild(bg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar rect = c.createRect('rect', bb.x / s, bb.y / s, bb.width / s, bb.height / s);\n\t\t\trect.appendChild(c.createTransparentFill());\n\t\t\trect.stroked = 'false';\n\t\t\tc.root.appendChild(rect);\n\t\t}\n\t}\n\n\tif (this.stencil != null)\n\t{\n\t\tthis.stencil.drawShape(c, this, x, y, w, h);\n\t}\n\telse\n\t{\n\t\t// Stencils have separate strokewidth\n\t\tc.setStrokeWidth(this.strokewidth);\n\t\t\n\t\tif (this.points != null)\n\t\t{\n\t\t\t// Paints edge shape\n\t\t\tvar pts = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t\t{\n\t\t\t\tif (this.points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tpts.push(new mxPoint(this.points[i].x / s, this.points[i].y / s));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.paintEdgeShape(c, pts);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Paints vertex shape\n\t\t\tthis.paintVertexShape(c, x, y, w, h);\n\t\t}\n\t}\n\t\n\tif (bg != null && c.state != null && c.state.transform != null)\n\t{\n\t\tbg.setAttribute('transform', c.state.transform);\n\t}\n\t\n\t// Draws highlight rectangle if no stroke was used\n\tif (c != null && this.outline && !strokeDrawn)\n\t{\n\t\tc.rect(x, y, w, h);\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxShape.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tvar dash = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tdash = this.style['dashPattern'];\t\t\n\t}\n\n\tc.setAlpha(this.opacity / 100);\n\tc.setFillAlpha(this.fillOpacity / 100);\n\tc.setStrokeAlpha(this.strokeOpacity / 100);\n\n\t// Sets alpha, colors and gradients\n\tif (this.isShadow != null)\n\t{\n\t\tc.setShadow(this.isShadow);\n\t}\n\t\n\t// Dash pattern\n\tif (this.isDashed != null)\n\t{\n\t\tc.setDashed(this.isDashed, (this.style != null) ?\n\t\t\tmxUtils.getValue(this.style, mxConstants.STYLE_FIX_DASH, false) == 1 : false);\n\t}\n\n\tif (dash != null)\n\t{\n\t\tc.setDashPattern(dash);\n\t}\n\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar b = this.getGradientBounds(c, x, y, w, h);\n\t\tc.setGradient(this.fill, this.gradient, b.x, b.y, b.width, b.height, this.gradientDirection);\n\t}\n\telse\n\t{\n\t\tc.setFillColor(this.fill);\n\t}\n\n\tc.setStrokeColor(this.stroke);\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxShape.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\treturn new mxRectangle(x, y, w, h);\n};\n\n/**\n * Function: updateTransform\n * \n * Sets the scale and rotation on the given canvas.\n */\nmxShape.prototype.updateTransform = function(c, x, y, w, h)\n{\n\t// NOTE: Currently, scale is implemented in state and canvas. This will\n\t// move to canvas in a later version, so that the states are unscaled\n\t// and untranslated and do not need an update after zooming or panning.\n\tc.scale(this.scale);\n\tc.rotate(this.getShapeRotation(), this.flipH, this.flipV, x + w / 2, y + h / 2);\n};\n\n/**\n * Function: paintVertexShape\n * \n * Paints the vertex shape.\n */\nmxShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tthis.paintBackground(c, x, y, w, h);\n\t\n\tif (!this.outline || this.style == null || mxUtils.getValue(\n\t\tthis.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintForeground(c, x, y, w, h);\n\t}\n};\n\n/**\n * Function: paintBackground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintBackground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintForeground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintForeground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintEdgeShape\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintEdgeShape = function(c, pts) { };\n\n/**\n * Function: getArcSize\n * \n * Returns the arc size for the given dimension.\n */\nmxShape.prototype.getArcSize = function(w, h)\n{\n\tvar r = 0;\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t{\n\t\tr = Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t}\n\telse\n\t{\n\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE,\n\t\t\tmxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\t\tr = Math.min(w * f, h * f);\n\t}\n\t\n\treturn r;\n};\n\n/**\n * Function: paintGlassEffect\n * \n * Paints the glass gradient effect.\n */\nmxShape.prototype.paintGlassEffect = function(c, x, y, w, h, arc)\n{\n\tvar sw = Math.ceil(this.strokewidth / 2);\n\tvar size = 0.4;\n\t\n\tc.setGradient('#ffffff', '#ffffff', x, y, w, h * 0.6, 'south', 0.9, 0.1);\n\tc.begin();\n\tarc += 2 * sw;\n\t\t\n\tif (this.isRounded)\n\t{\n\t\tc.moveTo(x - sw + arc, y - sw);\n\t\tc.quadTo(x - sw, y - sw, x - sw, y - sw + arc);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw + arc);\n\t\tc.quadTo(x + w + sw, y - sw, x + w + sw - arc, y - sw);\n\t}\n\telse\n\t{\n\t\tc.moveTo(x - sw, y - sw);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw);\n\t}\n\t\n\tc.close();\n\tc.fill();\n};\n\n/**\n * Function: addPoints\n * \n * Paints the given points with rounded corners.\n */\nmxShape.prototype.addPoints = function(c, pts, rounded, arcSize, close, exclude, initialMove)\n{\n\tif (pts != null && pts.length > 0)\n\t{\n\t\tinitialMove = (initialMove != null) ? initialMove : true;\n\t\tvar pe = pts[pts.length - 1];\n\t\t\n\t\t// Adds virtual waypoint in the center between start and end point\n\t\tif (close && rounded)\n\t\t{\n\t\t\tpts = pts.slice();\n\t\t\tvar p0 = pts[0];\n\t\t\tvar wp = new mxPoint(pe.x + (p0.x - pe.x) / 2, pe.y + (p0.y - pe.y) / 2);\n\t\t\tpts.splice(0, 0, wp);\n\t\t}\n\t\n\t\tvar pt = pts[0];\n\t\tvar i = 1;\n\t\n\t\t// Draws the line segments\n\t\tif (initialMove)\n\t\t{\n\t\t\tc.moveTo(pt.x, pt.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pt.x, pt.y);\n\t\t}\n\t\t\n\t\twhile (i < ((close) ? pts.length : pts.length - 1))\n\t\t{\n\t\t\tvar tmp = pts[mxUtils.mod(i, pts.length)];\n\t\t\tvar dx = pt.x - tmp.x;\n\t\t\tvar dy = pt.y - tmp.y;\n\t\n\t\t\tif (rounded && (dx != 0 || dy != 0) && (exclude == null || mxUtils.indexOf(exclude, i - 1) < 0))\n\t\t\t{\n\t\t\t\t// Draws a line from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the last point\n\t\t\t\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tvar nx1 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny1 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x1 = tmp.x + nx1;\n\t\t\t\tvar y1 = tmp.y + ny1;\n\t\t\t\tc.lineTo(x1, y1);\n\t\n\t\t\t\t// Draws a curve from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the next point\n\t\t\t\tvar next = pts[mxUtils.mod(i + 1, pts.length)];\n\t\t\t\t\n\t\t\t\t// Uses next non-overlapping point\n\t\t\t\twhile (i < pts.length - 2 && Math.round(next.x - tmp.x) == 0 && Math.round(next.y - tmp.y) == 0)\n\t\t\t\t{\n\t\t\t\t\tnext = pts[mxUtils.mod(i + 2, pts.length)];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdx = next.x - tmp.x;\n\t\t\t\tdy = next.y - tmp.y;\n\t\n\t\t\t\tdist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n\t\t\t\tvar nx2 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny2 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x2 = tmp.x + nx2;\n\t\t\t\tvar y2 = tmp.y + ny2;\n\t\n\t\t\t\tc.quadTo(tmp.x, tmp.y, x2, y2);\n\t\t\t\ttmp = new mxPoint(x2, y2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.lineTo(tmp.x, tmp.y);\n\t\t\t}\n\t\n\t\t\tpt = tmp;\n\t\t\ti++;\n\t\t}\n\t\n\t\tif (close)\n\t\t{\n\t\t\tc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pe.x, pe.y);\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxShape.prototype.resetStyles = function()\n{\n\tthis.initStyles();\n\n\tthis.spacing = 0;\n\t\n\tdelete this.fill;\n\tdelete this.gradient;\n\tdelete this.gradientDirection;\n\tdelete this.stroke;\n\tdelete this.startSize;\n\tdelete this.endSize;\n\tdelete this.startArrow;\n\tdelete this.endArrow;\n\tdelete this.direction;\n\tdelete this.isShadow;\n\tdelete this.isDashed;\n\tdelete this.isRounded;\n\tdelete this.glass;\n};\n\n/**\n * Function: apply\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_FILLCOLOR> => fill\n * - <mxConstants.STYLE_GRADIENTCOLOR> => gradient\n * - <mxConstants.STYLE_GRADIENT_DIRECTION> => gradientDirection\n * - <mxConstants.STYLE_OPACITY> => opacity\n * - <mxConstants.STYLE_FILL_OPACITY> => fillOpacity\n * - <mxConstants.STYLE_STROKE_OPACITY> => strokeOpacity\n * - <mxConstants.STYLE_STROKECOLOR> => stroke\n * - <mxConstants.STYLE_STROKEWIDTH> => strokewidth\n * - <mxConstants.STYLE_SHADOW> => isShadow\n * - <mxConstants.STYLE_DASHED> => isDashed\n * - <mxConstants.STYLE_SPACING> => spacing\n * - <mxConstants.STYLE_STARTSIZE> => startSize\n * - <mxConstants.STYLE_ENDSIZE> => endSize\n * - <mxConstants.STYLE_ROUNDED> => isRounded\n * - <mxConstants.STYLE_STARTARROW> => startArrow\n * - <mxConstants.STYLE_ENDARROW> => endArrow\n * - <mxConstants.STYLE_ROTATION> => rotation\n * - <mxConstants.STYLE_DIRECTION> => direction\n * - <mxConstants.STYLE_GLASS> => glass\n *\n * This keeps a reference to the <style>. If you need to keep a reference to\n * the cell, you can override this method and store a local reference to\n * state.cell or the <mxCellState> itself. If <outline> should be true, make\n * sure to set it before calling this method.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxShape.prototype.apply = function(state)\n{\n\tthis.state = state;\n\tthis.style = state.style;\n\n\tif (this.style != null)\n\t{\n\t\tthis.fill = mxUtils.getValue(this.style, mxConstants.STYLE_FILLCOLOR, this.fill);\n\t\tthis.gradient = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENTCOLOR, this.gradient);\n\t\tthis.gradientDirection = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENT_DIRECTION, this.gradientDirection);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_OPACITY, this.opacity);\n\t\tthis.fillOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_FILL_OPACITY, this.fillOpacity);\n\t\tthis.strokeOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_STROKE_OPACITY, this.strokeOpacity);\n\t\tthis.stroke = mxUtils.getValue(this.style, mxConstants.STYLE_STROKECOLOR, this.stroke);\n\t\tthis.strokewidth = mxUtils.getNumber(this.style, mxConstants.STYLE_STROKEWIDTH, this.strokewidth);\n\t\tthis.spacing = mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing);\n\t\tthis.startSize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, this.startSize);\n\t\tthis.endSize = mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, this.endSize);\n\t\tthis.startArrow = mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, this.startArrow);\n\t\tthis.endArrow = mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, this.endArrow);\n\t\tthis.rotation = mxUtils.getValue(this.style, mxConstants.STYLE_ROTATION, this.rotation);\n\t\tthis.direction = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, this.direction);\n\t\tthis.flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\tthis.flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\t\n\t\t// Legacy support for stencilFlipH/V\n\t\tif (this.stencil != null)\n\t\t{\n\t\t\tthis.flipH = mxUtils.getValue(this.style, 'stencilFlipH', 0) == 1 || this.flipH;\n\t\t\tthis.flipV = mxUtils.getValue(this.style, 'stencilFlipV', 0) == 1 || this.flipV;\n\t\t}\n\t\t\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH || this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tvar tmp = this.flipH;\n\t\t\tthis.flipH = this.flipV;\n\t\t\tthis.flipV = tmp;\n\t\t}\n\n\t\tthis.isShadow = mxUtils.getValue(this.style, mxConstants.STYLE_SHADOW, this.isShadow) == 1;\n\t\tthis.isDashed = mxUtils.getValue(this.style, mxConstants.STYLE_DASHED, this.isDashed) == 1;\n\t\tthis.isRounded = mxUtils.getValue(this.style, mxConstants.STYLE_ROUNDED, this.isRounded) == 1;\n\t\tthis.glass = mxUtils.getValue(this.style, mxConstants.STYLE_GLASS, this.glass) == 1;\n\t\t\n\t\tif (this.fill == mxConstants.NONE)\n\t\t{\n\t\t\tthis.fill = null;\n\t\t}\n\n\t\tif (this.gradient == mxConstants.NONE)\n\t\t{\n\t\t\tthis.gradient = null;\n\t\t}\n\n\t\tif (this.stroke == mxConstants.NONE)\n\t\t{\n\t\t\tthis.stroke = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: setCursor\n * \n * Sets the cursor on the given shape.\n *\n * Parameters:\n *\n * cursor - The cursor to be used.\n */\nmxShape.prototype.setCursor = function(cursor)\n{\n\tif (cursor == null)\n\t{\n\t\tcursor = '';\n\t}\n\t\n\tthis.cursor = cursor;\n\n\tif (this.node != null)\n\t{\n\t\tthis.node.style.cursor = cursor;\n\t}\n};\n\n/**\n * Function: getCursor\n * \n * Returns the current cursor.\n */\nmxShape.prototype.getCursor = function()\n{\n\treturn this.cursor;\n};\n\n/**\n * Function: isRoundable\n * \n * Hook for subclassers.\n */\nmxShape.prototype.isRoundable = function()\n{\n\treturn false;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using <createBoundingBox> and\n * <augmentBoundingBox> and stores the result in <boundingBox>.\n */\nmxShape.prototype.updateBoundingBox = function()\n{\n\t// Tries to get bounding box from SVG subsystem\n\t// LATER: Use getBoundingClientRect for fallback in VML\n\tif (this.useSvgBoundingBox && this.node != null && this.node.ownerSVGElement != null)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar b = this.node.getBBox();\n\t\n\t\t\tif (b.width > 0 && b.height > 0)\n\t\t\t{\n\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\n\t\t\t\t// Adds strokeWidth\n\t\t\t\tthis.boundingBox.grow(this.strokewidth * this.scale / 2);\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tcatch(e)\n\t\t{\n\t\t\t// fallback to code below\n\t\t}\n\t}\n\n\tif (this.bounds != null)\n\t{\n\t\tvar bbox = this.createBoundingBox();\n\t\t\n\t\tif (bbox != null)\n\t\t{\n\t\t\tthis.augmentBoundingBox(bbox);\n\t\t\tvar rot = this.getShapeRotation();\n\t\t\t\n\t\t\tif (rot != 0)\n\t\t\t{\n\t\t\t\tbbox = mxUtils.getBoundingBox(bbox, rot);\n\t\t\t}\n\t\t}\n\n\t\tthis.boundingBox = bbox;\n\t}\n};\n\n/**\n * Function: createBoundingBox\n *\n * Returns a new rectangle that represents the bounding box of the bare shape\n * with no shadows or strokewidths.\n */\nmxShape.prototype.createBoundingBox = function()\n{\n\tvar bb = this.bounds.clone();\n\n\tif ((this.stencil != null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\tthis.direction == mxConstants.DIRECTION_SOUTH)) || this.isPaintBoundsInverted())\n\t{\n\t\tbb.rotate90();\n\t}\n\t\n\treturn bb;\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the strokewidth and shadow offsets.\n */\nmxShape.prototype.augmentBoundingBox = function(bbox)\n{\n\tif (this.isShadow)\n\t{\n\t\tbbox.width += Math.ceil(mxConstants.SHADOW_OFFSET_X * this.scale);\n\t\tbbox.height += Math.ceil(mxConstants.SHADOW_OFFSET_Y * this.scale);\n\t}\n\t\n\t// Adds strokeWidth\n\tbbox.grow(this.strokewidth * this.scale / 2);\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Returns true if the bounds should be inverted.\n */\nmxShape.prototype.isPaintBoundsInverted = function()\n{\n\t// Stencil implements inversion via aspect\n\treturn this.stencil == null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation from the style.\n */\nmxShape.prototype.getRotation = function()\n{\n\treturn (this.rotation != null) ? this.rotation : 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label.\n */\nmxShape.prototype.getTextRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) != 1)\n\t{\n\t\trot += mxText.prototype.verticalTextRotation;\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns the actual rotation of the shape.\n */\nmxShape.prototype.getShapeRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (this.direction != null)\n\t{\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\trot += 270;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\trot += 180;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\trot += 90;\n\t\t}\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: createTransparentSvgRectangle\n * \n * Adds a transparent rectangle that catches all events.\n */\nmxShape.prototype.createTransparentSvgRectangle = function(x, y, w, h)\n{\n\tvar rect = document.createElementNS(mxConstants.NS_SVG, 'rect');\n\trect.setAttribute('x', x);\n\trect.setAttribute('y', y);\n\trect.setAttribute('width', w);\n\trect.setAttribute('height', h);\n\trect.setAttribute('fill', 'none');\n\trect.setAttribute('stroke', 'none');\n\trect.setAttribute('pointer-events', 'all');\n\t\n\treturn rect;\n};\n\n/**\n * Function: setTransparentBackgroundImage\n * \n * Sets a transparent background CSS style to catch all events.\n * \n * Paints the line shape.\n */\nmxShape.prototype.setTransparentBackgroundImage = function(node)\n{\n\tnode.style.backgroundImage = 'url(\\'' + mxClient.imageBasePath + '/transparent.gif\\')';\n};\n\n/**\n * Function: releaseSvgGradients\n * \n * Paints the line shape.\n */\nmxShape.prototype.releaseSvgGradients = function(grads)\n{\n\tif (grads != null)\n\t{\n\t\tfor (var key in grads)\n\t\t{\n\t\t\tvar gradient = grads[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) - 1;\n\t\t\t\t\n\t\t\t\tif (gradient.mxRefCount == 0 && gradient.parentNode != null)\n\t\t\t\t{\n\t\t\t\t\tgradient.parentNode.removeChild(gradient);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n *\n * Destroys the shape by removing it from the DOM and releasing the DOM\n * node associated with the shape using <mxEvent.release>.\n */\nmxShape.prototype.destroy = function()\n{\n\tif (this.node != null)\n\t{\n\t\tmxEvent.release(this.node);\n\t\t\n\t\tif (this.node.parentNode != null)\n\t\t{\n\t\t\tthis.node.parentNode.removeChild(this.node);\n\t\t}\n\t\t\n\t\tthis.node = null;\n\t}\n\t\n\t// Decrements refCount and removes unused\n\tthis.releaseSvgGradients(this.oldGradients);\n\tthis.oldGradients = null;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n * \n * Code to add stencils.\n * \n * (code)\n * var req = mxUtils.load('test/stencils.xml');\n * var root = req.getDocumentElement();\n * var shape = root.firstChild;\n * \n * while (shape != null)\n * {\n * \t if (shape.nodeType == mxConstants.NODETYPE_ELEMENT)\n *   {\n *     mxStencilRegistry.addStencil(shape.getAttribute('name'), new mxStencil(shape));\n *   }\n *   \n *   shape = shape.nextSibling;\n * }\n * (end)\n */\nvar mxStencilRegistry =\n{\n\t/**\n\t * Class: mxStencilRegistry\n\t * \n\t * A singleton class that provides a registry for stencils and the methods\n\t * for painting those stencils onto a canvas or into a DOM.\n\t */\n\tstencils: {},\n\t\n\t/**\n\t * Function: addStencil\n\t * \n\t * Adds the given <mxStencil>.\n\t */\n\taddStencil: function(name, stencil)\n\t{\n\t\tmxStencilRegistry.stencils[name] = stencil;\n\t},\n\t\n\t/**\n\t * Function: getStencil\n\t * \n\t * Returns the <mxStencil> for the given name.\n\t */\n\tgetStencil: function(name)\n\t{\n\t\treturn mxStencilRegistry.stencils[name];\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxMarker =\n{\n\t/**\n\t * Class: mxMarker\n\t * \n\t * A static class that implements all markers for VML and SVG using a\n\t * registry. NOTE: The signatures in this class will change.\n\t * \n\t * Variable: markers\n\t * \n\t * Maps from markers names to functions to paint the markers.\n\t */\n\tmarkers: [],\n\t\n\t/**\n\t * Function: addMarker\n\t * \n\t * Adds a factory method that updates a given endpoint and returns a\n\t * function to paint the marker onto the given canvas.\n\t */\n\taddMarker: function(type, funct)\n\t{\n\t\tmxMarker.markers[type] = funct;\n\t},\n\t\n\t/**\n\t * Function: createMarker\n\t * \n\t * Returns a function to paint the given marker.\n\t */\n\tcreateMarker: function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\tvar funct = mxMarker.markers[type];\n\t\t\n\t\treturn (funct != null) ? funct(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled) : null;\n\t}\n\n};\n\n/**\n * Adds the classic and block marker factory method.\n */\n(function()\n{\n\tfunction createArrow(widthFactor)\n\t{\n\t\twidthFactor = (widthFactor != null) ? widthFactor : 2;\n\t\t\n\t\treturn function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t\t{\n\t\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t\t// 26.565 degrees, 1/sin(26.565) = 2.236 / 2 = 1.118 ( / 2 allows for\n\t\t\t// only half the strokewidth is processed ).\n\t\t\tvar endOffsetX = unitX * sw * 1.118;\n\t\t\tvar endOffsetY = unitY * sw * 1.118;\n\t\t\t\n\t\t\tunitX = unitX * (size + sw);\n\t\t\tunitY = unitY * (size + sw);\n\t\n\t\t\tvar pt = pe.clone();\n\t\t\tpt.x -= endOffsetX;\n\t\t\tpt.y -= endOffsetY;\n\t\t\t\n\t\t\tvar f = (type != mxConstants.ARROW_CLASSIC && type != mxConstants.ARROW_CLASSIC_THIN) ? 1 : 3 / 4;\n\t\t\tpe.x += -unitX * f - endOffsetX;\n\t\t\tpe.y += -unitY * f - endOffsetY;\n\t\t\t\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tcanvas.begin();\n\t\t\t\tcanvas.moveTo(pt.x, pt.y);\n\t\t\t\tcanvas.lineTo(pt.x - unitX - unitY / widthFactor, pt.y - unitY + unitX / widthFactor);\n\t\t\t\n\t\t\t\tif (type == mxConstants.ARROW_CLASSIC || type == mxConstants.ARROW_CLASSIC_THIN)\n\t\t\t\t{\n\t\t\t\t\tcanvas.lineTo(pt.x - unitX * 3 / 4, pt.y - unitY * 3 / 4);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tcanvas.lineTo(pt.x + unitY / widthFactor - unitX, pt.y - unitY - unitX / widthFactor);\n\t\t\t\tcanvas.close();\n\t\n\t\t\t\tif (filled)\n\t\t\t\t{\n\t\t\t\t\tcanvas.fillAndStroke();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcanvas.stroke();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\t\n\tmxMarker.addMarker('classic', createArrow(2));\n\tmxMarker.addMarker('classicThin', createArrow(3));\n\tmxMarker.addMarker('block', createArrow(2));\n\tmxMarker.addMarker('blockThin', createArrow(3));\n\t\n\tfunction createOpenArrow(widthFactor)\n\t{\n\t\twidthFactor = (widthFactor != null) ? widthFactor : 2;\n\t\t\n\t\treturn function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t\t{\n\t\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t\t// 26.565 degrees, 1/sin(26.565) = 2.236 / 2 = 1.118 ( / 2 allows for\n\t\t\t// only half the strokewidth is processed ).\n\t\t\tvar endOffsetX = unitX * sw * 1.118;\n\t\t\tvar endOffsetY = unitY * sw * 1.118;\n\t\t\t\n\t\t\tunitX = unitX * (size + sw);\n\t\t\tunitY = unitY * (size + sw);\n\t\t\t\n\t\t\tvar pt = pe.clone();\n\t\t\tpt.x -= endOffsetX;\n\t\t\tpt.y -= endOffsetY;\n\t\t\t\n\t\t\tpe.x += -endOffsetX * 2;\n\t\t\tpe.y += -endOffsetY * 2;\n\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tcanvas.begin();\n\t\t\t\tcanvas.moveTo(pt.x - unitX - unitY / widthFactor, pt.y - unitY + unitX / widthFactor);\n\t\t\t\tcanvas.lineTo(pt.x, pt.y);\n\t\t\t\tcanvas.lineTo(pt.x + unitY / widthFactor - unitX, pt.y - unitY - unitX / widthFactor);\n\t\t\t\tcanvas.stroke();\n\t\t\t};\n\t\t}\n\t};\n\t\n\tmxMarker.addMarker('open', createOpenArrow(2));\n\tmxMarker.addMarker('openThin', createOpenArrow(3));\n\t\n\tmxMarker.addMarker('oval', function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\tvar a = size / 2;\n\t\t\n\t\tvar pt = pe.clone();\n\t\tpe.x -= unitX * a;\n\t\tpe.y -= unitY * a;\n\n\t\treturn function()\n\t\t{\n\t\t\tcanvas.ellipse(pt.x - a, pt.y - a, size, size);\n\t\t\t\t\t\t\n\t\t\tif (filled)\n\t\t\t{\n\t\t\t\tcanvas.fillAndStroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.stroke();\n\t\t\t}\n\t\t};\n\t});\n\n\tfunction diamond(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t// 45 degrees, 1/sin(45) = 1.4142 / 2 = 0.7071 ( / 2 allows for\n\t\t// only half the strokewidth is processed ). Or 0.9862 for thin diamond.\n\t\t// Note these values and the tk variable below are dependent, update\n\t\t// both together (saves trig hard coding it).\n\t\tvar swFactor = (type == mxConstants.ARROW_DIAMOND) ?  0.7071 : 0.9862;\n\t\tvar endOffsetX = unitX * sw * swFactor;\n\t\tvar endOffsetY = unitY * sw * swFactor;\n\t\t\n\t\tunitX = unitX * (size + sw);\n\t\tunitY = unitY * (size + sw);\n\t\t\n\t\tvar pt = pe.clone();\n\t\tpt.x -= endOffsetX;\n\t\tpt.y -= endOffsetY;\n\t\t\n\t\tpe.x += -unitX - endOffsetX;\n\t\tpe.y += -unitY - endOffsetY;\n\t\t\n\t\t// thickness factor for diamond\n\t\tvar tk = ((type == mxConstants.ARROW_DIAMOND) ?  2 : 3.4);\n\t\t\n\t\treturn function()\n\t\t{\n\t\t\tcanvas.begin();\n\t\t\tcanvas.moveTo(pt.x, pt.y);\n\t\t\tcanvas.lineTo(pt.x - unitX / 2 - unitY / tk, pt.y + unitX / tk - unitY / 2);\n\t\t\tcanvas.lineTo(pt.x - unitX, pt.y - unitY);\n\t\t\tcanvas.lineTo(pt.x - unitX / 2 + unitY / tk, pt.y - unitY / 2 - unitX / tk);\n\t\t\tcanvas.close();\n\t\t\t\n\t\t\tif (filled)\n\t\t\t{\n\t\t\t\tcanvas.fillAndStroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.stroke();\n\t\t\t}\n\t\t};\n\t};\n\n\tmxMarker.addMarker('diamond', diamond);\n\tmxMarker.addMarker('diamondThin', diamond);\n})();\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxActor\n *\n * Extends <mxShape> to implement an actor shape. If a custom shape with one\n * filled area is needed, then this shape's <redrawPath> should be overridden.\n * \n * Example:\n * \n * (code)\n * function SampleShape() { }\n * \n * SampleShape.prototype = new mxActor();\n * SampleShape.prototype.constructor = vsAseShape;\n * \n * mxCellRenderer.registerShape('sample', SampleShape);\n * SampleShape.prototype.redrawPath = function(path, x, y, w, h)\n * {\n *   path.moveTo(0, 0);\n *   path.lineTo(w, h);\n *   // ...\n *   path.close();\n * }\n * (end)\n * \n * This shape is registered under <mxConstants.SHAPE_ACTOR> in\n * <mxCellRenderer>.\n * \n * Constructor: mxActor\n *\n * Constructs a new actor shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxActor(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxActor, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxActor.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.translate(x, y);\n\tc.begin();\n\tthis.redrawPath(c, x, y, w, h);\n\tc.fillAndStroke();\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxActor.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar width = w/3;\n\tc.moveTo(0, h);\n\tc.curveTo(0, 3 * h / 5, 0, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w / 2 - width, 2 * h / 5, w / 2 - width, 0, w / 2, 0);\n\tc.curveTo(w / 2 + width, 0, w / 2 + width, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w, 2 * h / 5, w, 3 * h / 5, w, h);\n\tc.close();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCloud\n *\n * Extends <mxActor> to implement a cloud shape.\n * \n * This shape is registered under <mxConstants.SHAPE_CLOUD> in\n * <mxCellRenderer>.\n * \n * Constructor: mxCloud\n *\n * Constructs a new cloud shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxCloud(bounds, fill, stroke, strokewidth)\n{\n\tmxActor.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxCloud, mxActor);\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCloud.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tc.moveTo(0.25 * w, 0.25 * h);\n\tc.curveTo(0.05 * w, 0.25 * h, 0, 0.5 * h, 0.16 * w, 0.55 * h);\n\tc.curveTo(0, 0.66 * h, 0.18 * w, 0.9 * h, 0.31 * w, 0.8 * h);\n\tc.curveTo(0.4 * w, h, 0.7 * w, h, 0.8 * w, 0.8 * h);\n\tc.curveTo(w, 0.8 * h, w, 0.6 * h, 0.875 * w, 0.5 * h);\n\tc.curveTo(w, 0.3 * h, 0.8 * w, 0.1 * h, 0.625 * w, 0.2 * h);\n\tc.curveTo(0.5 * w, 0.05 * h, 0.3 * w, 0.05 * h, 0.25 * w, 0.25 * h);\n\tc.close();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRectangleShape\n *\n * Extends <mxShape> to implement a rectangle shape.\n * This shape is registered under <mxConstants.SHAPE_RECTANGLE>\n * in <mxCellRenderer>.\n * \n * Constructor: mxRectangleShape\n *\n * Constructs a new rectangle shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxRectangleShape(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxRectangleShape, mxShape);\n\n/**\n * Function: isHtmlAllowed\n *\n * Returns true for non-rounded, non-rotated shapes with no glass gradient.\n */\nmxRectangleShape.prototype.isHtmlAllowed = function()\n{\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\t\t\n\t}\n\t\n\treturn !this.isRounded && !this.glass && this.rotation == 0 && (events ||\n\t\t(this.fill != null && this.fill != mxConstants.NONE));\n};\n\n/**\n * Function: paintBackground\n * \n * Generic background painting implementation.\n */\nmxRectangleShape.prototype.paintBackground = function(c, x, y, w, h)\n{\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\t\t\n\t}\n\t\n\tif (events || (this.fill != null && this.fill != mxConstants.NONE) ||\n\t\t(this.stroke != null && this.stroke != mxConstants.NONE))\n\t{\n\t\tif (!events && (this.fill == null || this.fill == mxConstants.NONE))\n\t\t{\n\t\t\tc.pointerEvents = false;\n\t\t}\n\t\t\n\t\tif (this.isRounded)\n\t\t{\n\t\t\tvar r = 0;\n\t\t\t\n\t\t\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t\t\t{\n\t\t\t\tr = Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE,\n\t\t\t\t\tmxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\t\t\t\tr = Math.min(w * f, h * f);\n\t\t\t}\n\t\t\t\n\t\t\tc.roundrect(x, y, w, h, r, r);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.rect(x, y, w, h);\n\t\t}\n\t\t\t\n\t\tc.fillAndStroke();\n\t}\n};\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxRectangleShape.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn true;\n};\n\n/**\n * Function: paintForeground\n * \n * Generic background painting implementation.\n */\nmxRectangleShape.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tif (this.glass && !this.outline && this.fill != null && this.fill != mxConstants.NONE)\n\t{\n\t\tthis.paintGlassEffect(c, x, y, w, h, this.getArcSize(w + this.strokewidth, h + this.strokewidth));\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEllipse\n *\n * Extends <mxShape> to implement an ellipse shape.\n * This shape is registered under <mxConstants.SHAPE_ELLIPSE>\n * in <mxCellRenderer>.\n * \n * Constructor: mxEllipse\n *\n * Constructs a new ellipse shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxEllipse(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxEllipse, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Paints the ellipse shape.\n */\nmxEllipse.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.ellipse(x, y, w, h);\n\tc.fillAndStroke();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDoubleEllipse\n *\n * Extends <mxShape> to implement a double ellipse shape. This shape is\n * registered under <mxConstants.SHAPE_DOUBLE_ELLIPSE> in <mxCellRenderer>.\n * Use the following override to only fill the inner ellipse in this shape:\n * \n * (code)\n * mxDoubleEllipse.prototype.paintVertexShape = function(c, x, y, w, h)\n * {\n *   c.ellipse(x, y, w, h);\n *   c.stroke();\n *   \n *   var inset = mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth, Math.min(w / 5, h / 5)));\n *   x += inset;\n *   y += inset;\n *   w -= 2 * inset;\n *   h -= 2 * inset;\n *   \n *   if (w > 0 && h > 0)\n *   {\n *     c.ellipse(x, y, w, h);\n *   }\n *   \n *   c.fillAndStroke();\n * };\n * (end)\n * \n * Constructor: mxDoubleEllipse\n *\n * Constructs a new ellipse shape.\n *\n * Parameters:\n *\n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxDoubleEllipse(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxDoubleEllipse, mxShape);\n\n/**\n * Variable: vmlScale\n * \n * Scale for improving the precision of VML rendering. Default is 10.\n */\nmxDoubleEllipse.prototype.vmlScale = 10;\n\n/**\n * Function: paintBackground\n * \n * Paints the background.\n */\nmxDoubleEllipse.prototype.paintBackground = function(c, x, y, w, h)\n{\n\tc.ellipse(x, y, w, h);\n\tc.fillAndStroke();\n};\n\n/**\n * Function: paintForeground\n * \n * Paints the foreground.\n */\nmxDoubleEllipse.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tif (!this.outline)\n\t{\n\t\tvar margin = mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth, Math.min(w / 5, h / 5)));\n\t\tx += margin;\n\t\ty += margin;\n\t\tw -= 2 * margin;\n\t\th -= 2 * margin;\n\t\t\n\t\t// FIXME: Rounding issues in IE8 standards mode (not in 1.x)\n\t\tif (w > 0 && h > 0)\n\t\t{\n\t\t\tc.ellipse(x, y, w, h);\n\t\t}\n\t\t\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the bounds for the label.\n */\nmxDoubleEllipse.prototype.getLabelBounds = function(rect)\n{\n\tvar margin = (mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth,\n\t\t\tMath.min(rect.width / 5 / this.scale, rect.height / 5 / this.scale)))) * this.scale;\n\n\treturn new mxRectangle(rect.x + margin, rect.y + margin, rect.width - 2 * margin, rect.height - 2 * margin);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRhombus\n *\n * Extends <mxShape> to implement a rhombus (aka diamond) shape.\n * This shape is registered under <mxConstants.SHAPE_RHOMBUS>\n * in <mxCellRenderer>.\n * \n * Constructor: mxRhombus\n *\n * Constructs a new rhombus shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxRhombus(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxRhombus, mxShape);\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxRhombus.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic painting implementation.\n */\nmxRhombus.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar hw = w / 2;\n\tvar hh = h / 2;\n\t\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tc.begin();\n\tthis.addPoints(c, [new mxPoint(x + hw, y), new mxPoint(x + w, y + hh), new mxPoint(x + hw, y + h),\n\t     new mxPoint(x, y + hh)], this.isRounded, arcSize, true);\n\tc.fillAndStroke();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPolyline\n *\n * Extends <mxShape> to implement a polyline (a line with multiple points).\n * This shape is registered under <mxConstants.SHAPE_POLYLINE> in\n * <mxCellRenderer>.\n * \n * Constructor: mxPolyline\n *\n * Constructs a new polyline shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * stroke - String that defines the stroke color. Default is 'black'. This is\n * stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxPolyline(points, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxPolyline, mxShape);\n\n/**\n * Function: getRotation\n * \n * Returns 0.\n */\nmxPolyline.prototype.getRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns 0.\n */\nmxPolyline.prototype.getShapeRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Returns false.\n */\nmxPolyline.prototype.isPaintBoundsInverted = function()\n{\n\treturn false;\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintEdgeShape = function(c, pts)\n{\n\tif (this.style == null || this.style[mxConstants.STYLE_CURVED] != 1)\n\t{\n\t\tthis.paintLine(c, pts, this.isRounded);\n\t}\n\telse\n\t{\n\t\tthis.paintCurvedLine(c, pts);\n\t}\n};\n\n/**\n * Function: paintLine\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintLine = function(c, pts, rounded)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tc.begin();\n\tthis.addPoints(c, pts, rounded, arcSize, false);\n\tc.stroke();\n};\n\n/**\n * Function: paintLine\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintCurvedLine = function(c, pts)\n{\n\tc.begin();\n\t\n\tvar pt = pts[0];\n\tvar n = pts.length;\n\t\n\tc.moveTo(pt.x, pt.y);\n\t\n\tfor (var i = 1; i < n - 2; i++)\n\t{\n\t\tvar p0 = pts[i];\n\t\tvar p1 = pts[i + 1];\n\t\tvar ix = (p0.x + p1.x) / 2;\n\t\tvar iy = (p0.y + p1.y) / 2;\n\t\t\n\t\tc.quadTo(p0.x, p0.y, ix, iy);\n\t}\n\t\n\tvar p0 = pts[n - 2];\n\tvar p1 = pts[n - 1];\n\t\n\tc.quadTo(p0.x, p0.y, p1.x, p1.y);\n\tc.stroke();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxArrow\n *\n * Extends <mxShape> to implement an arrow shape. (The shape\n * is used to represent edges, not vertices.)\n * This shape is registered under <mxConstants.SHAPE_ARROW>\n * in <mxCellRenderer>.\n * \n * Constructor: mxArrow\n *\n * Constructs a new arrow shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n * arrowWidth - Optional integer that defines the arrow width. Default is\n * <mxConstants.ARROW_WIDTH>. This is stored in <arrowWidth>.\n * spacing - Optional integer that defines the spacing between the arrow shape\n * and its endpoints. Default is <mxConstants.ARROW_SPACING>. This is stored in\n * <spacing>.\n * endSize - Optional integer that defines the size of the arrowhead. Default\n * is <mxConstants.ARROW_SIZE>. This is stored in <endSize>.\n */\nfunction mxArrow(points, fill, stroke, strokewidth, arrowWidth, spacing, endSize)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.arrowWidth = (arrowWidth != null) ? arrowWidth : mxConstants.ARROW_WIDTH;\n\tthis.spacing = (spacing != null) ? spacing : mxConstants.ARROW_SPACING;\n\tthis.endSize = (endSize != null) ? endSize : mxConstants.ARROW_SIZE;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxArrow, mxShape);\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the edge width and markers.\n */\nmxArrow.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\tvar w = Math.max(this.arrowWidth, this.endSize);\n\tbbox.grow((w / 2 + this.strokewidth) * this.scale);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrow.prototype.paintEdgeShape = function(c, pts)\n{\n\t// Geometry of arrow\n\tvar spacing =  mxConstants.ARROW_SPACING;\n\tvar width = mxConstants.ARROW_WIDTH;\n\tvar arrow = mxConstants.ARROW_SIZE;\n\n\t// Base vector (between end points)\n\tvar p0 = pts[0];\n\tvar pe = pts[pts.length - 1];\n\tvar dx = pe.x - p0.x;\n\tvar dy = pe.y - p0.y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\tvar length = dist - 2 * spacing - arrow;\n\t\n\t// Computes the norm and the inverse norm\n\tvar nx = dx / dist;\n\tvar ny = dy / dist;\n\tvar basex = length * nx;\n\tvar basey = length * ny;\n\tvar floorx = width * ny/3;\n\tvar floory = -width * nx/3;\n\t\n\t// Computes points\n\tvar p0x = p0.x - floorx / 2 + spacing * nx;\n\tvar p0y = p0.y - floory / 2 + spacing * ny;\n\tvar p1x = p0x + floorx;\n\tvar p1y = p0y + floory;\n\tvar p2x = p1x + basex;\n\tvar p2y = p1y + basey;\n\tvar p3x = p2x + floorx;\n\tvar p3y = p2y + floory;\n\t// p4 not necessary\n\tvar p5x = p3x - 3 * floorx;\n\tvar p5y = p3y - 3 * floory;\n\t\n\tc.begin();\n\tc.moveTo(p0x, p0y);\n\tc.lineTo(p1x, p1y);\n\tc.lineTo(p2x, p2y);\n\tc.lineTo(p3x, p3y);\n\tc.lineTo(pe.x - spacing * nx, pe.y - spacing * ny);\n\tc.lineTo(p5x, p5y);\n\tc.lineTo(p5x + floorx, p5y + floory);\n\tc.close();\n\n\tc.fillAndStroke();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxArrowConnector\n *\n * Extends <mxShape> to implement an new rounded arrow shape with support for\n * waypoints and double arrows. (The shape is used to represent edges, not\n * vertices.) This shape is registered under <mxConstants.SHAPE_ARROW_CONNECTOR>\n * in <mxCellRenderer>.\n * \n * Constructor: mxArrowConnector\n *\n * Constructs a new arrow shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n * arrowWidth - Optional integer that defines the arrow width. Default is\n * <mxConstants.ARROW_WIDTH>. This is stored in <arrowWidth>.\n * spacing - Optional integer that defines the spacing between the arrow shape\n * and its endpoints. Default is <mxConstants.ARROW_SPACING>. This is stored in\n * <spacing>.\n * endSize - Optional integer that defines the size of the arrowhead. Default\n * is <mxConstants.ARROW_SIZE>. This is stored in <endSize>.\n */\nfunction mxArrowConnector(points, fill, stroke, strokewidth, arrowWidth, spacing, endSize)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.arrowWidth = (arrowWidth != null) ? arrowWidth : mxConstants.ARROW_WIDTH;\n\tthis.arrowSpacing = (spacing != null) ? spacing : mxConstants.ARROW_SPACING;\n\tthis.startSize = mxConstants.ARROW_SIZE / 5;\n\tthis.endSize = mxConstants.ARROW_SIZE / 5;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxArrowConnector, mxShape);\n\n/**\n * Variable: useSvgBoundingBox\n * \n * Allows to use the SVG bounding box in SVG. Default is false for performance\n * reasons.\n */\nmxArrowConnector.prototype.useSvgBoundingBox = true;\n\n/**\n * Variable: resetStyles\n * \n * Overrides mxShape to reset spacing.\n */\nmxArrowConnector.prototype.resetStyles = function()\n{\n\tmxShape.prototype.resetStyles.apply(this, arguments);\n\t\n\tthis.arrowSpacing = mxConstants.ARROW_SPACING;\n};\n\n/**\n * Overrides apply to get smooth transition from default start- and endsize.\n */\nmxArrowConnector.prototype.apply = function(state)\n{\n\tmxShape.prototype.apply.apply(this, arguments);\n\n\tif (this.style != null)\n\t{\n\t\tthis.startSize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.ARROW_SIZE / 5) * 3;\n\t\tthis.endSize = mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, mxConstants.ARROW_SIZE / 5) * 3;\n\t}\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the edge width and markers.\n */\nmxArrowConnector.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\tvar w = this.getEdgeWidth();\n\t\n\tif (this.isMarkerStart())\n\t{\n\t\tw = Math.max(w, this.getStartArrowWidth());\n\t}\n\t\n\tif (this.isMarkerEnd())\n\t{\n\t\tw = Math.max(w, this.getEndArrowWidth());\n\t}\n\t\n\tbbox.grow((w / 2 + this.strokewidth) * this.scale);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrowConnector.prototype.paintEdgeShape = function(c, pts)\n{\n\t// Geometry of arrow\n\tvar strokeWidth = this.strokewidth;\n\t\n\tif (this.outline)\n\t{\n\t\tstrokeWidth = Math.max(1, mxUtils.getNumber(this.style, mxConstants.STYLE_STROKEWIDTH, this.strokewidth));\n\t}\n\t\n\tvar startWidth = this.getStartArrowWidth() + strokeWidth;\n\tvar endWidth = this.getEndArrowWidth() + strokeWidth;\n\tvar edgeWidth = this.outline ? this.getEdgeWidth() + strokeWidth : this.getEdgeWidth();\n\tvar openEnded = this.isOpenEnded();\n\tvar markerStart = this.isMarkerStart();\n\tvar markerEnd = this.isMarkerEnd();\n\tvar spacing = (openEnded) ? 0 : this.arrowSpacing + strokeWidth / 2;\n\tvar startSize = this.startSize + strokeWidth;\n\tvar endSize = this.endSize + strokeWidth;\n\tvar isRounded = this.isArrowRounded();\n\t\n\t// Base vector (between first points)\n\tvar pe = pts[pts.length - 1];\n\n\t// Finds first non-overlapping point\n\tvar i0 = 1;\n\t\n\twhile (i0 < pts.length - 1 && pts[i0].x == pts[0].x && pts[i0].y == pts[0].y)\n\t{\n\t\ti0++;\n\t}\n\t\n\tvar dx = pts[i0].x - pts[0].x;\n\tvar dy = pts[i0].y - pts[0].y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\n\tif (dist == 0)\n\t{\n\t\treturn;\n\t}\n\t\n\t// Computes the norm and the inverse norm\n\tvar nx = dx / dist;\n\tvar nx2, nx1 = nx;\n\tvar ny = dy / dist;\n\tvar ny2, ny1 = ny;\n\tvar orthx = edgeWidth * ny;\n\tvar orthy = -edgeWidth * nx;\n\t\n\t// Stores the inbound function calls in reverse order in fns\n\tvar fns = [];\n\t\n\tif (isRounded)\n\t{\n\t\tc.setLineJoin('round');\n\t}\n\telse if (pts.length > 2)\n\t{\n\t\t// Only mitre if there are waypoints\n\t\tc.setMiterLimit(1.42);\n\t}\n\n\tc.begin();\n\n\tvar startNx = nx;\n\tvar startNy = ny;\n\n\tif (markerStart && !openEnded)\n\t{\n\t\tthis.paintMarker(c, pts[0].x, pts[0].y, nx, ny, startSize, startWidth, edgeWidth, spacing, true);\n\t}\n\telse\n\t{\n\t\tvar outStartX = pts[0].x + orthx / 2 + spacing * nx;\n\t\tvar outStartY = pts[0].y + orthy / 2 + spacing * ny;\n\t\tvar inEndX = pts[0].x - orthx / 2 + spacing * nx;\n\t\tvar inEndY = pts[0].y - orthy / 2 + spacing * ny;\n\t\t\n\t\tif (openEnded)\n\t\t{\n\t\t\tc.moveTo(outStartX, outStartY);\n\t\t\t\n\t\t\tfns.push(function()\n\t\t\t{\n\t\t\t\tc.lineTo(inEndX, inEndY);\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(inEndX, inEndY);\n\t\t\tc.lineTo(outStartX, outStartY);\n\t\t}\n\t}\n\t\n\tvar dx1 = 0;\n\tvar dy1 = 0;\n\tvar dist1 = 0;\n\n\tfor (var i = 0; i < pts.length - 2; i++)\n\t{\n\t\t// Work out in which direction the line is bending\n\t\tvar pos = mxUtils.relativeCcw(pts[i].x, pts[i].y, pts[i+1].x, pts[i+1].y, pts[i+2].x, pts[i+2].y);\n\n\t\tdx1 = pts[i+2].x - pts[i+1].x;\n\t\tdy1 = pts[i+2].y - pts[i+1].y;\n\n\t\tdist1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n\t\t\n\t\tif (dist1 != 0)\n\t\t{\n\t\t\tnx1 = dx1 / dist1;\n\t\t\tny1 = dy1 / dist1;\n\t\t\t\n\t\t\tvar tmp1 = nx * nx1 + ny * ny1;\n\t\t\ttmp = Math.max(Math.sqrt((tmp1 + 1) / 2), 0.04);\n\t\t\t\n\t\t\t// Work out the normal orthogonal to the line through the control point and the edge sides intersection\n\t\t\tnx2 = (nx + nx1);\n\t\t\tny2 = (ny + ny1);\n\t\n\t\t\tvar dist2 = Math.sqrt(nx2 * nx2 + ny2 * ny2);\n\t\t\t\n\t\t\tif (dist2 != 0)\n\t\t\t{\n\t\t\t\tnx2 = nx2 / dist2;\n\t\t\t\tny2 = ny2 / dist2;\n\t\t\t\t\n\t\t\t\t// Higher strokewidths require a larger minimum bend, 0.35 covers all but the most extreme cases\n\t\t\t\tvar strokeWidthFactor = Math.max(tmp, Math.min(this.strokewidth / 200 + 0.04, 0.35));\n\t\t\t\tvar angleFactor = (pos != 0 && isRounded) ? Math.max(0.1, strokeWidthFactor) : Math.max(tmp, 0.06);\n\n\t\t\t\tvar outX = pts[i+1].x + ny2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar outY = pts[i+1].y - nx2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar inX = pts[i+1].x - ny2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar inY = pts[i+1].y + nx2 * edgeWidth / 2 / angleFactor;\n\t\t\t\t\n\t\t\t\tif (pos == 0 || !isRounded)\n\t\t\t\t{\n\t\t\t\t\t// If the two segments are aligned, or if we're not drawing curved sections between segments\n\t\t\t\t\t// just draw straight to the intersection point\n\t\t\t\t\tc.lineTo(outX, outY);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(x, y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\telse if (pos == -1)\n\t\t\t\t{\n\t\t\t\t\tvar c1x = inX + ny * edgeWidth;\n\t\t\t\t\tvar c1y = inY - nx * edgeWidth;\n\t\t\t\t\tvar c2x = inX + ny1 * edgeWidth;\n\t\t\t\t\tvar c2y = inY - nx1 * edgeWidth;\n\t\t\t\t\tc.lineTo(c1x, c1y);\n\t\t\t\t\tc.quadTo(outX, outY, c2x, c2y);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(x, y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tc.lineTo(outX, outY);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c1x = outX - ny * edgeWidth;\n\t\t\t\t\t\tvar c1y = outY + nx * edgeWidth;\n\t\t\t\t\t\tvar c2x = outX - ny1 * edgeWidth;\n\t\t\t\t\t\tvar c2y = outY + nx1 * edgeWidth;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.quadTo(x, y, c1x, c1y);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(c2x, c2y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnx = nx1;\n\t\t\t\tny = ny1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\torthx = edgeWidth * ny1;\n\torthy = - edgeWidth * nx1;\n\n\tif (markerEnd && !openEnded)\n\t{\n\t\tthis.paintMarker(c, pe.x, pe.y, -nx, -ny, endSize, endWidth, edgeWidth, spacing, false);\n\t}\n\telse\n\t{\n\t\tc.lineTo(pe.x - spacing * nx1 + orthx / 2, pe.y - spacing * ny1 + orthy / 2);\n\t\t\n\t\tvar inStartX = pe.x - spacing * nx1 - orthx / 2;\n\t\tvar inStartY = pe.y - spacing * ny1 - orthy / 2;\n\n\t\tif (!openEnded)\n\t\t{\n\t\t\tc.lineTo(inStartX, inStartY);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(inStartX, inStartY);\n\t\t\t\n\t\t\tfns.splice(0, 0, function()\n\t\t\t{\n\t\t\t\tc.moveTo(inStartX, inStartY);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tfor (var i = fns.length - 1; i >= 0; i--)\n\t{\n\t\tfns[i]();\n\t}\n\n\tif (openEnded)\n\t{\n\t\tc.end();\n\t\tc.stroke();\n\t}\n\telse\n\t{\n\t\tc.close();\n\t\tc.fillAndStroke();\n\t}\n\t\n\t// Workaround for shadow on top of base arrow\n\tc.setShadow(false);\n\t\n\t// Need to redraw the markers without the low miter limit\n\tc.setMiterLimit(4);\n\t\n\tif (isRounded)\n\t{\n\t\tc.setLineJoin('flat');\n\t}\n\n\tif (pts.length > 2)\n\t{\n\t\t// Only to repaint markers if no waypoints\n\t\t// Need to redraw the markers without the low miter limit\n\t\tc.setMiterLimit(4);\n\t\tif (markerStart && !openEnded)\n\t\t{\n\t\t\tc.begin();\n\t\t\tthis.paintMarker(c, pts[0].x, pts[0].y, startNx, startNy, startSize, startWidth, edgeWidth, spacing, true);\n\t\t\tc.stroke();\n\t\t\tc.end();\n\t\t}\n\t\t\n\t\tif (markerEnd && !openEnded)\n\t\t{\n\t\t\tc.begin();\n\t\t\tthis.paintMarker(c, pe.x, pe.y, -nx, -ny, endSize, endWidth, edgeWidth, spacing, true);\n\t\t\tc.stroke();\n\t\t\tc.end();\n\t\t}\n\t}\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrowConnector.prototype.paintMarker = function(c, ptX, ptY, nx, ny, size, arrowWidth, edgeWidth, spacing, initialMove)\n{\n\tvar widthArrowRatio = edgeWidth / arrowWidth;\n\tvar orthx = edgeWidth * ny / 2;\n\tvar orthy = -edgeWidth * nx / 2;\n\n\tvar spaceX = (spacing + size) * nx;\n\tvar spaceY = (spacing + size) * ny;\n\n\tif (initialMove)\n\t{\n\t\tc.moveTo(ptX - orthx + spaceX, ptY - orthy + spaceY);\n\t}\n\telse\n\t{\n\t\tc.lineTo(ptX - orthx + spaceX, ptY - orthy + spaceY);\n\t}\n\n\tc.lineTo(ptX - orthx / widthArrowRatio + spaceX, ptY - orthy / widthArrowRatio + spaceY);\n\tc.lineTo(ptX + spacing * nx, ptY + spacing * ny);\n\tc.lineTo(ptX + orthx / widthArrowRatio + spaceX, ptY + orthy / widthArrowRatio + spaceY);\n\tc.lineTo(ptX + orthx + spaceX, ptY + orthy + spaceY);\n}\n\n/**\n * Function: isArrowRounded\n * \n * Returns wether the arrow is rounded\n */\nmxArrowConnector.prototype.isArrowRounded = function()\n{\n\treturn this.isRounded;\n};\n\n/**\n * Function: getStartArrowWidth\n * \n * Returns the width of the start arrow\n */\nmxArrowConnector.prototype.getStartArrowWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH;\n};\n\n/**\n * Function: getEndArrowWidth\n * \n * Returns the width of the end arrow\n */\nmxArrowConnector.prototype.getEndArrowWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH;\n};\n\n/**\n * Function: getEdgeWidth\n * \n * Returns the width of the body of the edge\n */\nmxArrowConnector.prototype.getEdgeWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH / 3;\n};\n\n/**\n * Function: isOpenEnded\n * \n * Returns whether the ends of the shape are drawn\n */\nmxArrowConnector.prototype.isOpenEnded = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isMarkerStart\n * \n * Returns whether the start marker is drawn\n */\nmxArrowConnector.prototype.isMarkerStart = function()\n{\n\treturn (mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, mxConstants.NONE) != mxConstants.NONE);\n};\n\n/**\n * Function: isMarkerEnd\n * \n * Returns whether the end marker is drawn\n */\nmxArrowConnector.prototype.isMarkerEnd = function()\n{\n\treturn (mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, mxConstants.NONE) != mxConstants.NONE);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxText\n *\n * Extends <mxShape> to implement a text shape. To change vertical text from\n * bottom to top to top to bottom, the following code can be used:\n * \n * (code)\n * mxText.prototype.verticalTextRotation = 90;\n * (end)\n * \n * Constructor: mxText\n *\n * Constructs a new text shape.\n * \n * Parameters:\n * \n * value - String that represents the text to be displayed. This is stored in\n * <value>.\n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * align - Specifies the horizontal alignment. Default is ''. This is stored in\n * <align>.\n * valign - Specifies the vertical alignment. Default is ''. This is stored in\n * <valign>.\n * color - String that specifies the text color. Default is 'black'. This is\n * stored in <color>.\n * family - String that specifies the font family. Default is\n * <mxConstants.DEFAULT_FONTFAMILY>. This is stored in <family>.\n * size - Integer that specifies the font size. Default is\n * <mxConstants.DEFAULT_FONTSIZE>. This is stored in <size>.\n * fontStyle - Specifies the font style. Default is 0. This is stored in\n * <fontStyle>.\n * spacing - Integer that specifies the global spacing. Default is 2. This is\n * stored in <spacing>.\n * spacingTop - Integer that specifies the top spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingTop>.\n * spacingRight - Integer that specifies the right spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingRight>.\n * spacingBottom - Integer that specifies the bottom spacing. Default is 0.The\n * sum of the spacing and this is stored in <spacingBottom>.\n * spacingLeft - Integer that specifies the left spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingLeft>.\n * horizontal - Boolean that specifies if the label is horizontal. Default is\n * true. This is stored in <horizontal>.\n * background - String that specifies the background color. Default is null.\n * This is stored in <background>.\n * border - String that specifies the label border color. Default is null.\n * This is stored in <border>.\n * wrap - Specifies if word-wrapping should be enabled. Default is false.\n * This is stored in <wrap>.\n * clipped - Specifies if the label should be clipped. Default is false.\n * This is stored in <clipped>.\n * overflow - Value of the overflow style. Default is 'visible'.\n */\nfunction mxText(value, bounds, align, valign, color,\n\tfamily,\tsize, fontStyle, spacing, spacingTop, spacingRight,\n\tspacingBottom, spacingLeft, horizontal, background, border,\n\twrap, clipped, overflow, labelPadding, textDirection)\n{\n\tmxShape.call(this);\n\tthis.value = value;\n\tthis.bounds = bounds;\n\tthis.color = (color != null) ? color : 'black';\n\tthis.align = (align != null) ? align : mxConstants.ALIGN_CENTER;\n\tthis.valign = (valign != null) ? valign : mxConstants.ALIGN_MIDDLE;\n\tthis.family = (family != null) ? family : mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = (size != null) ? size : mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = (fontStyle != null) ? fontStyle : mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = parseInt(spacing || 2);\n\tthis.spacingTop = this.spacing + parseInt(spacingTop || 0);\n\tthis.spacingRight = this.spacing + parseInt(spacingRight || 0);\n\tthis.spacingBottom = this.spacing + parseInt(spacingBottom || 0);\n\tthis.spacingLeft = this.spacing + parseInt(spacingLeft || 0);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.background = background;\n\tthis.border = border;\n\tthis.wrap = (wrap != null) ? wrap : false;\n\tthis.clipped = (clipped != null) ? clipped : false;\n\tthis.overflow = (overflow != null) ? overflow : 'visible';\n\tthis.labelPadding = (labelPadding != null) ? labelPadding : 0;\n\tthis.textDirection = textDirection;\n\tthis.rotation = 0;\n\tthis.updateMargin();\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxText, mxShape);\n\n/**\n * Variable: baseSpacingTop\n * \n * Specifies the spacing to be added to the top spacing. Default is 0. Use the\n * value 5 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingTop = 0;\n\n/**\n * Variable: baseSpacingBottom\n * \n * Specifies the spacing to be added to the bottom spacing. Default is 0. Use the\n * value 1 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingBottom = 0;\n\n/**\n * Variable: baseSpacingLeft\n * \n * Specifies the spacing to be added to the left spacing. Default is 0.\n */\nmxText.prototype.baseSpacingLeft = 0;\n\n/**\n * Variable: baseSpacingRight\n * \n * Specifies the spacing to be added to the right spacing. Default is 0.\n */\nmxText.prototype.baseSpacingRight = 0;\n\n/**\n * Variable: replaceLinefeeds\n * \n * Specifies if linefeeds in HTML labels should be replaced with BR tags.\n * Default is true.\n */\nmxText.prototype.replaceLinefeeds = true;\n\n/**\n * Variable: verticalTextRotation\n * \n * Rotation for vertical text. Default is -90 (bottom to top).\n */\nmxText.prototype.verticalTextRotation = -90;\n\n/**\n * Variable: ignoreClippedStringSize\n * \n * Specifies if the string size should be measured in <updateBoundingBox> if\n * the label is clipped and the label position is center and middle. If this is\n * true, then the bounding box will be set to <bounds>. Default is true.\n * <ignoreStringSize> has precedence over this switch.\n */\nmxText.prototype.ignoreClippedStringSize = true;\n\n/**\n * Variable: ignoreStringSize\n * \n * Specifies if the actual string size should be measured. If disabled the\n * boundingBox will not ignore the actual size of the string, otherwise\n * <bounds> will be used instead. Default is false.\n */\nmxText.prototype.ignoreStringSize = false;\n\n/**\n * Variable: textWidthPadding\n * \n * Specifies the padding to be added to the text width for the bounding box.\n * This is needed to make sure no clipping is applied to borders. Default is 4\n * for IE 8 standards mode and 3 for all others.\n */\nmxText.prototype.textWidthPadding = (document.documentMode == 8 && !mxClient.IS_EM) ? 4 : 3;\n\n/**\n * Variable: lastValue\n * \n * Contains the last rendered text value. Used for caching.\n */\nmxText.prototype.lastValue = null;\n\n/**\n * Variable: cacheEnabled\n * \n * Specifies if caching for HTML labels should be enabled. Default is true.\n */\nmxText.prototype.cacheEnabled = true;\n\n/**\n * Function: isParseVml\n * \n * Text shapes do not contain VML markup and do not need to be parsed. This\n * method returns false to speed up rendering in IE8.\n */\nmxText.prototype.isParseVml = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation returns\n * true if the browser is not in IE8 standards mode.\n */\nmxText.prototype.isHtmlAllowed = function()\n{\n\treturn document.documentMode != 8 || mxClient.IS_EM;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxText.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxText.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height));\n};\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxText.prototype.paint = function(c, update)\n{\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\n\tvar unscaledWidth = (this.state != null) ? this.state.unscaledWidth : null;\n\n\tif (update)\n\t{\n\t\tif (this.node.firstChild != null && (unscaledWidth == null ||\n\t\t\tthis.lastUnscaledWidth != unscaledWidth))\n\t\t{\n\t\t\tc.invalidateCachedOffsetSize(this.node);\n\t\t}\n\n\t\tc.updateText(x, y, w, h, this.align, this.valign, this.wrap, this.overflow,\n\t\t\t\tthis.clipped, this.getTextRotation(), this.node);\n\t}\n\telse\n\t{\n\t\t// Checks if text contains HTML markup\n\t\tvar realHtml = mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML;\n\t\t\n\t\t// Always renders labels as HTML in VML\n\t\tvar fmt = (realHtml || c instanceof mxVmlCanvas2D) ? 'html' : '';\n\t\tvar val = this.value;\n\t\t\n\t\tif (!realHtml && fmt == 'html')\n\t\t{\n\t\t\tval =  mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\tif (fmt == 'html' && !mxUtils.isNode(this.value))\n\t\t{\n\t\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\t\t\t\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = (!mxUtils.isNode(this.value) && this.replaceLinefeeds && fmt == 'html') ?\n\t\t\tval.replace(/\\n/g, '<br/>') : val;\n\t\t\t\n\t\tvar dir = this.textDirection;\n\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && !realHtml)\n\t\t{\n\t\t\tdir = this.getAutoDirection();\n\t\t}\n\t\t\n\t\tif (dir != mxConstants.TEXT_DIRECTION_LTR && dir != mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tdir = null;\n\t\t}\n\t\n\t\tc.text(x, y, w, h, val, this.align, this.valign, this.wrap, fmt, this.overflow,\n\t\t\tthis.clipped, this.getTextRotation(), dir);\n\t}\n\t\n\t// Needs to invalidate the cached offset widths if the geometry changes\n\tthis.lastUnscaledWidth = unscaledWidth;\n};\n\n/**\n * Function: redraw\n * \n * Renders the text using the given DOM nodes.\n */\nmxText.prototype.redraw = function()\n{\n\tif (this.visible && this.checkBounds() && this.cacheEnabled && this.lastValue == this.value &&\n\t\t(mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML))\n\t{\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\n\t\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t\t\t{\n\t\t\t\tthis.updateHtmlFilter();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.updateHtmlTransform();\n\t\t\t}\n\t\t\t\n\t\t\tthis.updateBoundingBox();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar canvas = this.createCanvas();\n\n\t\t\tif (canvas != null && canvas.updateText != null &&\n\t\t\t\tcanvas.invalidateCachedOffsetSize != null)\n\t\t\t{\n\t\t\t\tthis.paint(canvas, true);\n\t\t\t\tthis.destroyCanvas(canvas);\n\t\t\t\tthis.updateBoundingBox();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Fallback if canvas does not support updateText (VML)\n\t\t\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\n\t\tif (mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tthis.lastValue = this.value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.lastValue = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxText.prototype.resetStyles = function()\n{\n\tmxShape.prototype.resetStyles.apply(this, arguments);\n\t\n\tthis.color = 'black';\n\tthis.align = mxConstants.ALIGN_CENTER;\n\tthis.valign = mxConstants.ALIGN_MIDDLE;\n\tthis.family = mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = 2;\n\tthis.spacingTop = 2;\n\tthis.spacingRight = 2;\n\tthis.spacingBottom = 2;\n\tthis.spacingLeft = 2;\n\tthis.horizontal = true;\n\tdelete this.background;\n\tdelete this.border;\n\tthis.textDirection = mxConstants.DEFAULT_TEXT_DIRECTION;\n\tdelete this.margin;\n};\n\n/**\n * Function: apply\n * \n * Extends mxShape to update the text styles.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxText.prototype.apply = function(state)\n{\n\tvar old = this.spacing;\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.fontStyle = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSTYLE, this.fontStyle);\n\t\tthis.family = mxUtils.getValue(this.style, mxConstants.STYLE_FONTFAMILY, this.family);\n\t\tthis.size = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSIZE, this.size);\n\t\tthis.color = mxUtils.getValue(this.style, mxConstants.STYLE_FONTCOLOR, this.color);\n\t\tthis.align = mxUtils.getValue(this.style, mxConstants.STYLE_ALIGN, this.align);\n\t\tthis.valign = mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_ALIGN, this.valign);\n\t\tthis.spacing = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing));\n\t\tthis.spacingTop = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_TOP, this.spacingTop - old)) + this.spacing;\n\t\tthis.spacingRight = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_RIGHT, this.spacingRight - old)) + this.spacing;\n\t\tthis.spacingBottom = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_BOTTOM, this.spacingBottom - old)) + this.spacing;\n\t\tthis.spacingLeft = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_LEFT, this.spacingLeft - old)) + this.spacing;\n\t\tthis.horizontal = mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, this.horizontal);\n\t\tthis.background = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BACKGROUNDCOLOR, this.background);\n\t\tthis.border = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BORDERCOLOR, this.border);\n\t\tthis.textDirection = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_OPACITY, 100);\n\t\tthis.updateMargin();\n\t}\n\t\n\tthis.flipV = null;\n\tthis.flipH = null;\n};\n\n/**\n * Function: getAutoDirection\n * \n * Used to determine the automatic text direction. Returns\n * <mxConstants.TEXT_DIRECTION_LTR> or <mxConstants.TEXT_DIRECTION_RTL>\n * depending on the contents of <value>. This is not invoked for HTML, wrapped\n * content or if <value> is a DOM node.\n */\nmxText.prototype.getAutoDirection = function()\n{\n\t// Looks for strong (directional) characters\n\tvar tmp = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(this.value);\n\t\n\t// Returns the direction defined by the character\n\treturn (tmp != null && tmp.length > 0 && tmp[0] > 'z') ?\n\t\tmxConstants.TEXT_DIRECTION_RTL : mxConstants.TEXT_DIRECTION_LTR;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using the given node and position.\n */\nmxText.prototype.updateBoundingBox = function()\n{\n\tvar node = this.node;\n\tthis.boundingBox = this.bounds.clone();\n\tvar rot = this.getTextRotation();\n\t\n\tvar h = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER) : null;\n\tvar v = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE) : null;\n\n\tif (!this.ignoreStringSize && node != null && this.overflow != 'fill' && (!this.clipped ||\n\t\t!this.ignoreClippedStringSize || h != mxConstants.ALIGN_CENTER || v != mxConstants.ALIGN_MIDDLE))\n\t{\n\t\tvar ow = null;\n\t\tvar oh = null;\n\t\t\n\t\tif (node.ownerSVGElement != null)\n\t\t{\n\t\t\tif (node.firstChild != null && node.firstChild.firstChild != null &&\n\t\t\t\tnode.firstChild.firstChild.nodeName == 'foreignObject')\n\t\t\t{\n\t\t\t\tnode = node.firstChild.firstChild;\n\t\t\t\tow = parseInt(node.getAttribute('width')) * this.scale;\n\t\t\t\toh = parseInt(node.getAttribute('height')) * this.scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tvar b = node.getBBox();\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for bounding box of empty string\n\t\t\t\t\tif (typeof(this.value) == 'string' && mxUtils.trim(this.value) == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse if (b.width == 0 && b.height == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// Ignores NS_ERROR_FAILURE in FF if container display is none.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\n\t\t\t// Use cached offset size\n\t\t\tif (this.offsetWidth != null && this.offsetHeight != null)\n\t\t\t{\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Cannot get node size while container hidden so a\n\t\t\t\t// shared temporary DIV is used for text measuring\n\t\t\t\tif (td != null)\n\t\t\t\t{\n\t\t\t\t\tthis.updateFont(td);\n\t\t\t\t\tthis.updateSize(td, false);\n\t\t\t\t\tthis.updateInnerHtml(td);\n\n\t\t\t\t\tnode = td;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar sizeDiv = node;\n\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t\t{\n\t\t\t\t\tvar w = Math.round(this.bounds.width / this.scale);\n\t\n\t\t\t\t\tif (this.wrap && w > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\t\t\tnode.style.whiteSpace = 'normal';\n\n\t\t\t\t\t\tif (node.style.wordWrap != 'break-word')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Innermost DIV is used for measuring text\n\t\t\t\t\t\t\tvar divs = sizeDiv.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (divs.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsizeDiv = divs[divs.length - 1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tow = sizeDiv.offsetWidth + 2;\n\t\t\t\t\t\t\tdivs = this.node.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.clipped)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tow = Math.min(w, ow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Second last DIV width must be updated in DOM tree\n\t\t\t\t\t\t\tif (divs.length > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdivs[divs.length - 2].style.width = ow + 'px';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.whiteSpace = 'nowrap';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t}\n\n\t\t\t\tthis.offsetWidth = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\t\tthis.offsetHeight = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t}\n\n\t\tif (ow != null && oh != null)\n\t\t{\t\n\t\t\tthis.boundingBox = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y, ow, oh);\n\t\t}\n\t}\n\n\tif (this.boundingBox != null)\n\t{\n\t\tif (rot != 0)\n\t\t{\n\t\t\t// Accounts for pre-rotated x and y\n\t\t\tvar bbox = mxUtils.getBoundingBox(new mxRectangle(\n\t\t\t\tthis.margin.x * this.boundingBox.width,\n\t\t\t\tthis.margin.y * this.boundingBox.height,\n\t\t\t\tthis.boundingBox.width, this.boundingBox.height),\n\t\t\t\trot, new mxPoint(0, 0));\n\t\t\t\n\t\t\tthis.unrotatedBoundingBox = mxRectangle.fromRectangle(this.boundingBox);\n\t\t\tthis.unrotatedBoundingBox.x += this.margin.x * this.unrotatedBoundingBox.width;\n\t\t\tthis.unrotatedBoundingBox.y += this.margin.y * this.unrotatedBoundingBox.height;\n\t\t\t\n\t\t\tthis.boundingBox.x += bbox.x;\n\t\t\tthis.boundingBox.y += bbox.y;\n\t\t\tthis.boundingBox.width = bbox.width;\n\t\t\tthis.boundingBox.height = bbox.height;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.boundingBox.x += this.margin.x * this.boundingBox.width;\n\t\t\tthis.boundingBox.y += this.margin.y * this.boundingBox.height;\n\t\t\tthis.unrotatedBoundingBox = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns 0 to avoid using rotation in the canvas via updateTransform.\n */\nmxText.prototype.getShapeRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label of the corresponding shape.\n */\nmxText.prototype.getTextRotation = function()\n{\n\treturn (this.state != null && this.state.shape != null) ? this.state.shape.getTextRotation() : 0;\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Inverts the bounds if <mxShape.isBoundsInverted> returns true or if the\n * horizontal style is false.\n */\nmxText.prototype.isPaintBoundsInverted = function()\n{\n\treturn !this.horizontal && this.state != null && this.state.view.graph.model.isVertex(this.state.cell);\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxText.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tmxShape.prototype.configureCanvas.apply(this, arguments);\n\t\n\tc.setFontColor(this.color);\n\tc.setFontBackgroundColor(this.background);\n\tc.setFontBorderColor(this.border);\n\tc.setFontFamily(this.family);\n\tc.setFontSize(this.size);\n\tc.setFontStyle(this.fontStyle);\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Sets the width and height of the container to 1px.\n */\nmxText.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = '1px';\n\tthis.node.style.height = '1px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: redrawHtmlShape\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.redrawHtmlShape = function()\n{\n\tvar style = this.node.style;\n\n\t// Resets CSS styles\n\tstyle.whiteSpace = 'normal';\n\tstyle.overflow = '';\n\tstyle.width = '';\n\tstyle.height = '';\n\t\n\tthis.updateValue();\n\tthis.updateFont(this.node);\n\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\t\n\tthis.offsetWidth = null;\n\tthis.offsetHeight = null;\n\n\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t{\n\t\tthis.updateHtmlFilter();\n\t}\n\telse\n\t{\n\t\tthis.updateHtmlTransform();\n\t}\n};\n\n/**\n * Function: updateHtmlTransform\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateHtmlTransform = function()\n{\n\tvar theta = this.getTextRotation();\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\t\n\tif (theta != 0)\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', (-dx * 100) + '%' + ' ' + (-dy * 100) + '%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%)' +\n\t\t\t'scale(' + this.scale + ') rotate(' + theta + 'deg)');\n\t}\n\telse\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', '0% 0%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'scale(' + this.scale + ')' +\n\t\t\t'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%)');\n\t}\n\n\tstyle.left = Math.round(this.bounds.x - Math.ceil(dx * ((this.overflow != 'fill' &&\n\t\tthis.overflow != 'width') ? 3 : 1))) + 'px';\n\tstyle.top = Math.round(this.bounds.y - dy * ((this.overflow != 'fill') ? 3 : 1)) + 'px';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tstyle.opacity = this.opacity / 100;\n\t}\n\telse\n\t{\n\t\tstyle.opacity = '';\n\t}\n};\n\n/**\n * Function: setInnerHtml\n * \n * Sets the inner HTML of the given element to the <value>.\n */\nmxText.prototype.updateInnerHtml = function(elt)\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\telt.innerHTML = this.value.outerHTML;\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\t// LATER: Can be cached in updateValue\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div>&nbsp;</div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tval = '<div style=\"display:inline-block;_display:inline;\">' + val + '</div>';\n\t\t\n\t\telt.innerHTML = val;\n\t}\n};\n\n/**\n * Function: updateHtmlFilter\n *\n * Rotated text rendering quality is bad for IE9 quirks/IE8 standards\n */\nmxText.prototype.updateHtmlFilter = function()\n{\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\tvar s = this.scale;\n\t\n\t// Resets filter before getting offsetWidth\n\tmxUtils.setOpacity(this.node, this.opacity);\n\t\n\t// Adds 1 to match table height in 1.x\n\tvar ow = 0;\n\tvar oh = 0;\n\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\tvar sizeDiv = this.node;\n\t\n\t// Fallback for hidden text rendering in IE quirks mode\n\tif (td != null)\n\t{\n\t\ttd.style.overflow = '';\n\t\ttd.style.height = '';\n\t\ttd.style.width = '';\n\t\t\n\t\tthis.updateFont(td);\n\t\tthis.updateSize(td, false);\n\t\tthis.updateInnerHtml(td);\n\t\t\n\t\tvar w = Math.round(this.bounds.width / this.scale);\n\n\t\tif (this.wrap && w > 0)\n\t\t{\n\t\t\ttd.style.whiteSpace = 'normal';\n\t\t\ttd.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\tow = w;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\tow = Math.min(ow, this.bounds.width);\n\t\t\t}\n\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttd.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\tsizeDiv = td;\n\t\t\n\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t{\n\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\n\t\t\tif (this.wrap && td.style.wordWrap == 'break-word')\n\t\t\t{\n\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t}\n\t\t}\n\n\t\t// Required to update the height of the text box after wrapping width is known \n\t\tif (!this.clipped && this.wrap && w > 0)\n\t\t{\n\t\t\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\t\n\t\toh = sizeDiv.offsetHeight + 2;\n\t\t\n\t\tif (mxClient.IS_QUIRKS && this.border != null && this.border != mxConstants.NONE)\n\t\t{\n\t\t\toh += 3;\n\t\t}\n\t}\n\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t{\n\t\tsizeDiv = sizeDiv.firstChild;\n\t\toh = sizeDiv.offsetHeight;\n\t}\n\n\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\n\tif (this.clipped)\n\t{\n\t\toh = Math.min(oh, this.bounds.height);\n\t}\n\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\t// Handles special case for live preview with no wrapper DIV and no textDiv\n\tif (this.overflow == 'fill')\n\t{\n\t\toh = h;\n\t\tow = w;\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\toh = sizeDiv.scrollHeight;\n\t\tow = w;\n\t}\n\t\n\t// Stores for later use\n\tthis.offsetWidth = ow;\n\tthis.offsetHeight = oh;\n\t\n\t// Simulates max-height CSS in quirks mode\n\tif (mxClient.IS_QUIRKS && (this.clipped || (this.overflow == 'width' && h > 0)))\n\t{\n\t\th = Math.min(h, oh);\n\t\tstyle.height = Math.round(h) + 'px';\n\t}\n\telse\n\t{\n\t\th = oh;\n\t}\n\n\tif (this.overflow != 'fill' && this.overflow != 'width')\n\t{\n\t\tif (this.clipped)\n\t\t{\n\t\t\tow = Math.min(w, ow);\n\t\t}\n\t\t\n\t\tw = ow;\n\n\t\t// Simulates max-width CSS in quirks mode\n\t\tif ((mxClient.IS_QUIRKS && this.clipped) || this.wrap)\n\t\t{\n\t\t\tstyle.width = Math.round(w) + 'px';\n\t\t}\n\t}\n\n\th *= s;\n\tw *= s;\n\t\n\t// Rotation case is handled via VML canvas\n\tvar rad = this.getTextRotation() * (Math.PI / 180);\n\t\n\t// Precalculate cos and sin for the rotation\n\tvar real_cos = parseFloat(parseFloat(Math.cos(rad)).toFixed(8));\n\tvar real_sin = parseFloat(parseFloat(Math.sin(-rad)).toFixed(8));\n\n\trad %= 2 * Math.PI;\n\t\n\tif (rad < 0)\n\t{\n\t\trad += 2 * Math.PI;\n\t}\n\t\n\trad %= Math.PI;\n\t\n\tif (rad > Math.PI / 2)\n\t{\n\t\trad = Math.PI - rad;\n\t}\n\t\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(-rad);\n\n\tvar tx = w * -(dx + 0.5);\n\tvar ty = h * -(dy + 0.5);\n\n\tvar top_fix = (h - h * cos + w * sin) / 2 + real_sin * tx - real_cos * ty;\n\tvar left_fix = (w - w * cos + h * sin) / 2 - real_cos * tx - real_sin * ty;\n\t\n\tif (rad != 0)\n\t{\n\t\tvar f = 'progid:DXImageTransform.Microsoft.Matrix(M11=' + real_cos + ', M12='+\n\t\t\treal_sin + ', M21=' + (-real_sin) + ', M22=' + real_cos + ', sizingMethod=\\'auto expand\\')';\n\t\t\n\t\tif (style.filter != null && style.filter.length > 0)\n\t\t{\n\t\t\tstyle.filter += ' ' + f;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.filter = f;\n\t\t}\n\t}\n\t\n\t// Workaround for rendering offsets\n\tvar dy = 0;\n\t\n\tif (this.overflow != 'fill' && mxClient.IS_QUIRKS)\n\t{\n\t\tif (this.valign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tdy -= 1;\n\t\t}\n\t\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy += 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdy += 1;\n\t\t}\n\t}\n\n\tstyle.zoom = s;\n\tstyle.left = Math.round(this.bounds.x + left_fix - w / 2) + 'px';\n\tstyle.top = Math.round(this.bounds.y + top_fix - h / 2 + dy) + 'px';\n};\n\n/**\n * Function: updateValue\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateValue = function()\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\tthis.node.innerHTML = '';\n\t\tthis.node.appendChild(this.value);\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tvar bg = (this.background != null && this.background != mxConstants.NONE) ? this.background : null;\n\t\tvar bd = (this.border != null && this.border != mxConstants.NONE) ? this.border : null;\n\n\t\tif (this.overflow == 'fill' || this.overflow == 'width')\n\t\t{\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tthis.node.style.backgroundColor = bg;\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tthis.node.style.border = '1px solid ' + bd;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar css = '';\n\t\t\t\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tcss += 'background-color:' + bg + ';';\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tcss += 'border:1px solid ' + bd + ';';\n\t\t\t}\n\t\t\t\n\t\t\t// Wrapper DIV for background, zoom needed for inline in quirks\n\t\t\t// and to measure wrapped font sizes in all browsers\n\t\t\t// FIXME: Background size in quirks mode for wrapped text\n\t\t\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' :\n\t\t\t\tmxConstants.LINE_HEIGHT;\n\t\t\tval = '<div style=\"zoom:1;' + css + 'display:inline-block;_display:inline;text-decoration:inherit;' +\n\t\t\t\t'padding-bottom:1px;padding-right:1px;line-height:' + lh + '\">' + val + '</div>';\n\t\t}\n\n\t\tthis.node.innerHTML = val;\n\t\t\n\t\t// Sets text direction\n\t\tvar divs = this.node.getElementsByTagName('div');\n\t\t\n\t\tif (divs.length > 0)\n\t\t{\n\t\t\tvar dir = this.textDirection;\n\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t\t{\n\t\t\t\tdir = this.getAutoDirection();\n\t\t\t}\n\t\t\t\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].setAttribute('dir', dir);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].removeAttribute('dir');\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: updateFont\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateFont = function(node)\n{\n\tvar style = node.style;\n\t\n\tstyle.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\tstyle.fontSize = this.size + 'px';\n\tstyle.fontFamily = this.family;\n\tstyle.verticalAlign = 'top';\n\tstyle.color = this.color;\n\t\n\tif ((this.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle.fontWeight = 'bold';\n\t}\n\telse\n\t{\n\t\tstyle.fontWeight = '';\n\t}\n\n\tif ((this.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle.fontStyle = 'italic';\n\t}\n\telse\n\t{\n\t\tstyle.fontStyle = '';\n\t}\n\t\n\tif ((this.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle.textDecoration = 'underline';\n\t}\n\telse\n\t{\n\t\tstyle.textDecoration = '';\n\t}\n\t\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tstyle.textAlign = 'center';\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstyle.textAlign = 'right';\n\t}\n\telse\n\t{\n\t\tstyle.textAlign = 'left';\n\t}\n};\n\n/**\n * Function: updateSize\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateSize = function(node, enableWrap)\n{\n\tvar w = Math.max(0, Math.round(this.bounds.width / this.scale));\n\tvar h = Math.max(0, Math.round(this.bounds.height / this.scale));\n\tvar style = node.style;\n\t\n\t// NOTE: Do not use maxWidth here because wrapping will\n\t// go wrong if the cell is outside of the viewable area\n\tif (this.clipped)\n\t{\n\t\tstyle.overflow = 'hidden';\n\t\t\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tstyle.maxHeight = h + 'px';\n\t\t\tstyle.maxWidth = w + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.width = w + 'px';\n\t\t}\n\t}\n\telse if (this.overflow == 'fill')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.height = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.maxHeight = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\t\n\tif (this.wrap && w > 0)\n\t{\n\t\tstyle.wordWrap = mxConstants.WORD_WRAP;\n\t\tstyle.whiteSpace = 'normal';\n\t\tstyle.width = w + 'px';\n\n\t\tif (enableWrap && this.overflow != 'fill' && this.overflow != 'width')\n\t\t{\n\t\t\tvar sizeDiv = node;\n\t\t\t\n\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t{\n\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t\n\t\t\t\tif (node.style.wordWrap == 'break-word')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar tmp = sizeDiv.offsetWidth;\n\t\t\t\n\t\t\t// Workaround for text measuring in hidden containers\n\t\t\tif (tmp == 0)\n\t\t\t{\n\t\t\t\tvar prev = node.parentNode;\n\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\tdocument.body.appendChild(node);\n\t\t\t\ttmp = sizeDiv.offsetWidth;\n\t\t\t\tnode.style.visibility = '';\n\t\t\t\tprev.appendChild(node);\n\t\t\t}\n\n\t\t\ttmp += 3;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\ttmp = Math.min(tmp, w);\n\t\t\t}\n\t\t\t\n\t\t\tstyle.width = tmp + 'px';\n\t\t}\n\t}\n\telse\n\t{\n\t\tstyle.whiteSpace = 'nowrap';\n\t}\n};\n\n/**\n * Function: getMargin\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateMargin = function()\n{\n\tthis.margin = mxUtils.getAlignmentAsPoint(this.align, this.valign);\n};\n\n/**\n * Function: getSpacing\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.getSpacing = function()\n{\n\tvar dx = 0;\n\tvar dy = 0;\n\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tdx = (this.spacingLeft - this.spacingRight) / 2;\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tdx = -this.spacingRight - this.baseSpacingRight;\n\t}\n\telse\n\t{\n\t\tdx = this.spacingLeft + this.baseSpacingLeft;\n\t}\n\n\tif (this.valign == mxConstants.ALIGN_MIDDLE)\n\t{\n\t\tdy = (this.spacingTop - this.spacingBottom) / 2;\n\t}\n\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tdy = -this.spacingBottom - this.baseSpacingBottom;;\n\t}\n\telse\n\t{\n\t\tdy = this.spacingTop + this.baseSpacingTop;\n\t}\n\t\n\treturn new mxPoint(dx, dy);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxTriangle\n * \n * Implementation of the triangle shape.\n * \n * Constructor: mxTriangle\n *\n * Constructs a new triangle shape.\n */\nfunction mxTriangle()\n{\n\tmxActor.call(this);\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxTriangle, mxActor);\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxTriangle.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxTriangle.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tthis.addPoints(c, [new mxPoint(0, 0), new mxPoint(w, 0.5 * h), new mxPoint(0, h)], this.isRounded, arcSize, true);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHexagon\n * \n * Implementation of the hexagon shape.\n * \n * Constructor: mxHexagon\n *\n * Constructs a new hexagon shape.\n */\nfunction mxHexagon()\n{\n\tmxActor.call(this);\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxHexagon, mxActor);\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxHexagon.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tthis.addPoints(c, [new mxPoint(0.25 * w, 0), new mxPoint(0.75 * w, 0), new mxPoint(w, 0.5 * h), new mxPoint(0.75 * w, h),\n\t                   new mxPoint(0.25 * w, h), new mxPoint(0, 0.5 * h)], this.isRounded, arcSize, true);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLine\n *\n * Extends <mxShape> to implement a horizontal line shape.\n * This shape is registered under <mxConstants.SHAPE_LINE> in\n * <mxCellRenderer>.\n * \n * Constructor: mxLine\n *\n * Constructs a new line shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * stroke - String that defines the stroke color. Default is 'black'. This is\n * stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxLine(bounds, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxLine, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxLine.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar mid = y + h / 2;\n\n\tc.begin();\n\tc.moveTo(x, mid);\n\tc.lineTo(x + w, mid);\n\tc.stroke();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageShape\n *\n * Extends <mxShape> to implement an image shape. This shape is registered\n * under <mxConstants.SHAPE_IMAGE> in <mxCellRenderer>.\n * \n * Constructor: mxImageShape\n * \n * Constructs a new image shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * image - String that specifies the URL of the image. This is stored in\n * <image>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 0. This is stored in <strokewidth>.\n */\nfunction mxImageShape(bounds, image, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.image = image;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.shadow = false;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxImageShape, mxRectangleShape);\n\n/**\n * Variable: preserveImageAspect\n *\n * Switch to preserve image aspect. Default is true.\n */\nmxImageShape.prototype.preserveImageAspect = true;\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxImageShape.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: apply\n * \n * Overrides <mxShape.apply> to replace the fill and stroke colors with the\n * respective values from <mxConstants.STYLE_IMAGE_BACKGROUND> and\n * <mxConstants.STYLE_IMAGE_BORDER>.\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_IMAGE_BACKGROUND> => fill\n * - <mxConstants.STYLE_IMAGE_BORDER> => stroke\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxImageShape.prototype.apply = function(state)\n{\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tthis.fill = null;\n\tthis.stroke = null;\n\tthis.gradient = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.preserveImageAspect = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_ASPECT, 1) == 1;\n\t\t\n\t\t// Legacy support for imageFlipH/V\n\t\tthis.flipH = this.flipH || mxUtils.getValue(this.style, 'imageFlipH', 0) == 1;\n\t\tthis.flipV = this.flipV || mxUtils.getValue(this.style, 'imageFlipV', 0) == 1;\n\t}\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxImageShape.prototype.isHtmlAllowed = function()\n{\n\treturn !this.preserveImageAspect;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxImageShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\n\treturn node;\n};\n\n/**\n * Function: isRoundable\n * \n * Disables inherited roundable support.\n */\nmxImageShape.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn false;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic background painting implementation.\n */\nmxImageShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, null);\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (fill != null)\n\t\t{\n\t\t\t// Stroke rendering required for shadow\n\t\t\tc.setFillColor(fill);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.fillAndStroke();\n\t\t}\n\n\t\t// FlipH/V are implicit via mxShape.updateTransform\n\t\tc.image(x, y, w, h, this.image, this.preserveImageAspect, false, false);\n\t\t\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (stroke != null)\n\t\t{\n\t\t\tc.setShadow(false);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.stroke();\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxRectangleShape.prototype.paintBackground.apply(this, arguments);\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Overrides <mxShape.redraw> to preserve the aspect ratio of images.\n */\nmxImageShape.prototype.redrawHtmlShape = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = Math.max(0, Math.round(this.bounds.width)) + 'px';\n\tthis.node.style.height = Math.max(0, Math.round(this.bounds.height)) + 'px';\n\tthis.node.innerHTML = '';\n\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, '');\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, '');\n\t\tthis.node.style.backgroundColor = fill;\n\t\tthis.node.style.borderColor = stroke;\n\t\t\n\t\t// VML image supports PNG in IE6\n\t\tvar useVml = mxClient.IS_IE6 || ((document.documentMode == null || document.documentMode <= 8) && this.rotation != 0);\n\t\tvar img = document.createElement((useVml) ? mxClient.VML_PREFIX + ':image' : 'img');\n\t\timg.setAttribute('border', '0');\n\t\timg.style.position = 'absolute';\n\t\timg.src = this.image;\n\n\t\tvar filter = (this.opacity < 100) ? 'alpha(opacity=' + this.opacity + ')' : '';\n\t\tthis.node.style.filter = filter;\n\t\t\n\t\tif (this.flipH && this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2)';\n\t\t}\n\t\telse if (this.flipH)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(mirror=1)';\n\t\t}\n\t\telse if (this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)';\n\t\t}\n\n\t\tif (img.style.filter != filter)\n\t\t{\n\t\t\timg.style.filter = filter;\n\t\t}\n\n\t\tif (img.nodeName == 'image')\n\t\t{\n\t\t\timg.style.rotation = this.rotation;\n\t\t}\n\t\telse if (this.rotation != 0)\n\t\t{\n\t\t\t// LATER: Add flipV/H support\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', 'rotate(' + this.rotation + 'deg)');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', '');\n\t\t}\n\n\t\t// Known problem: IE clips top line of image for certain angles\n\t\timg.style.width = this.node.style.width;\n\t\timg.style.height = this.node.style.height;\n\t\t\n\t\tthis.node.style.backgroundImage = '';\n\t\tthis.node.appendChild(img);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(this.node);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLabel\n *\n * Extends <mxShape> to implement an image shape with a label.\n * This shape is registered under <mxConstants.SHAPE_LABEL> in\n * <mxCellRenderer>.\n * \n * Constructor: mxLabel\n *\n * Constructs a new label shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxLabel(bounds, fill, stroke, strokewidth)\n{\n\tmxRectangleShape.call(this, bounds, fill, stroke, strokewidth);\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxLabel, mxRectangleShape);\n\n/**\n * Variable: imageSize\n *\n * Default width and height for the image. Default is\n * <mxConstants.DEFAULT_IMAGESIZE>.\n */\nmxLabel.prototype.imageSize = mxConstants.DEFAULT_IMAGESIZE;\n\n/**\n * Variable: spacing\n *\n * Default value for image spacing. Default is 2.\n */\nmxLabel.prototype.spacing = 2;\n\n/**\n * Variable: indicatorSize\n *\n * Default width and height for the indicicator. Default is 10.\n */\nmxLabel.prototype.indicatorSize = 10;\n\n/**\n * Variable: indicatorSpacing\n *\n * Default spacing between image and indicator. Default is 2.\n */\nmxLabel.prototype.indicatorSpacing = 2;\n\n/**\n * Function: init\n *\n * Initializes the shape and the <indicator>.\n */\nmxLabel.prototype.init = function(container)\n{\n\tmxShape.prototype.init.apply(this, arguments);\n\n\tif (this.indicatorShape != null)\n\t{\n\t\tthis.indicator = new this.indicatorShape();\n\t\tthis.indicator.dialect = this.dialect;\n\t\tthis.indicator.init(this.node);\n\t}\n};\n\n/**\n * Function: redraw\n *\n * Reconfigures this shape. This will update the colors of the indicator\n * and reconfigure it if required.\n */\nmxLabel.prototype.redraw = function()\n{\n\tif (this.indicator != null)\n\t{\n\t\tthis.indicator.fill = this.indicatorColor;\n\t\tthis.indicator.stroke = this.indicatorStrokeColor;\n\t\tthis.indicator.gradient = this.indicatorGradientColor;\n\t\tthis.indicator.direction = this.indicatorDirection;\n\t}\n\t\n\tmxShape.prototype.redraw.apply(this, arguments);\n};\n\n/**\n * Function: isHtmlAllowed\n *\n * Returns true for non-rounded, non-rotated shapes with no glass gradient and\n * no indicator shape.\n */\nmxLabel.prototype.isHtmlAllowed = function()\n{\n\treturn mxRectangleShape.prototype.isHtmlAllowed.apply(this, arguments) &&\n\t\tthis.indicatorColor == null && this.indicatorShape == null;\n};\n\n/**\n * Function: paintForeground\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tthis.paintImage(c, x, y, w, h);\n\tthis.paintIndicator(c, x, y, w, h);\n\t\n\tmxRectangleShape.prototype.paintForeground.apply(this, arguments);\n};\n\n/**\n * Function: paintImage\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintImage = function(c, x, y, w, h)\n{\n\tif (this.image != null)\n\t{\n\t\tvar bounds = this.getImageBounds(x, y, w, h);\n\t\tc.image(bounds.x, bounds.y, bounds.width, bounds.height, this.image, false, false, false);\n\t}\n};\n\n/**\n * Function: getImageBounds\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.getImageBounds = function(x, y, w, h)\n{\n\tvar align = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_ALIGN, mxConstants.ALIGN_LEFT);\n\tvar valign = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE);\n\tvar width = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_WIDTH, mxConstants.DEFAULT_IMAGESIZE);\n\tvar height = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_HEIGHT, mxConstants.DEFAULT_IMAGESIZE);\n\tvar spacing = mxUtils.getNumber(this.style, mxConstants.STYLE_SPACING, this.spacing) + 5;\n\n\tif (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tx += (w - width) / 2;\n\t}\n\telse if (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tx += w - width - spacing;\n\t}\n\telse // default is left\n\t{\n\t\tx += spacing;\n\t}\n\n\tif (valign == mxConstants.ALIGN_TOP)\n\t{\n\t\ty += spacing;\n\t}\n\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\ty += h - height - spacing;\n\t}\n\telse // default is middle\n\t{\n\t\ty += (h - height) / 2;\n\t}\n\t\n\treturn new mxRectangle(x, y, width, height);\n};\n\n/**\n * Function: paintIndicator\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintIndicator = function(c, x, y, w, h)\n{\n\tif (this.indicator != null)\n\t{\n\t\tthis.indicator.bounds = this.getIndicatorBounds(x, y, w, h);\n\t\tthis.indicator.paint(c);\n\t}\n\telse if (this.indicatorImage != null)\n\t{\n\t\tvar bounds = this.getIndicatorBounds(x, y, w, h);\n\t\tc.image(bounds.x, bounds.y, bounds.width, bounds.height, this.indicatorImage, false, false, false);\n\t}\n};\n\n/**\n * Function: getIndicatorBounds\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.getIndicatorBounds = function(x, y, w, h)\n{\n\tvar align = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_ALIGN, mxConstants.ALIGN_LEFT);\n\tvar valign = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE);\n\tvar width = mxUtils.getNumber(this.style, mxConstants.STYLE_INDICATOR_WIDTH, this.indicatorSize);\n\tvar height = mxUtils.getNumber(this.style, mxConstants.STYLE_INDICATOR_HEIGHT, this.indicatorSize);\n\tvar spacing = this.spacing + 5;\t\t\n\t\n\tif (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tx += w - width - spacing;\n\t}\n\telse if (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tx += (w - width) / 2;\n\t}\n\telse // default is left\n\t{\n\t\tx += spacing;\n\t}\n\t\n\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\ty += h - height - spacing;\n\t}\n\telse if (valign == mxConstants.ALIGN_TOP)\n\t{\n\t\ty += spacing;\n\t}\n\telse // default is middle\n\t{\n\t\ty += (h - height) / 2;\n\t}\n\t\n\treturn new mxRectangle(x, y, width, height);\n};\n/**\n * Function: redrawHtmlShape\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.redrawHtmlShape = function()\n{\n\tmxRectangleShape.prototype.redrawHtmlShape.apply(this, arguments);\n\t\n\t// Removes all children\n\twhile(this.node.hasChildNodes())\n\t{\n\t\tthis.node.removeChild(this.node.lastChild);\n\t}\n\t\n\tif (this.image != null)\n\t{\n\t\tvar node = document.createElement('img');\n\t\tnode.style.position = 'relative';\n\t\tnode.setAttribute('border', '0');\n\t\t\n\t\tvar bounds = this.getImageBounds(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height);\n\t\tbounds.x -= this.bounds.x;\n\t\tbounds.y -= this.bounds.y;\n\n\t\tnode.style.left = Math.round(bounds.x) + 'px';\n\t\tnode.style.top = Math.round(bounds.y) + 'px';\n\t\tnode.style.width = Math.round(bounds.width) + 'px';\n\t\tnode.style.height = Math.round(bounds.height) + 'px';\n\t\t\n\t\tnode.src = this.image;\n\t\t\n\t\tthis.node.appendChild(node);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCylinder\n *\n * Extends <mxShape> to implement an cylinder shape. If a\n * custom shape with one filled area and an overlay path is\n * needed, then this shape's <redrawPath> should be overridden.\n * This shape is registered under <mxConstants.SHAPE_CYLINDER>\n * in <mxCellRenderer>.\n * \n * Constructor: mxCylinder\n *\n * Constructs a new cylinder shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxCylinder(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxCylinder, mxShape);\n\n/**\n * Variable: maxHeight\n *\n * Defines the maximum height of the top and bottom part\n * of the cylinder shape.\n */\nmxCylinder.prototype.maxHeight = 40;\n\n/**\n * Variable: svgStrokeTolerance\n *\n * Sets stroke tolerance to 0 for SVG.\n */\nmxCylinder.prototype.svgStrokeTolerance = 0;\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxCylinder.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.translate(x, y);\n\tc.begin();\n\tthis.redrawPath(c, x, y, w, h, false);\n\tc.fillAndStroke();\n\t\n\tif (!this.outline || this.style == null || mxUtils.getValue(\n\t\tthis.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0)\n\t{\n\t\tc.setShadow(false);\n\t\tc.begin();\n\t\tthis.redrawPath(c, x, y, w, h, true);\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCylinder.prototype.getCylinderSize = function(x, y, w, h)\n{\n\treturn Math.min(this.maxHeight, Math.round(h / 5));\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCylinder.prototype.redrawPath = function(c, x, y, w, h, isForeground)\n{\n\tvar dy = this.getCylinderSize(x, y, w, h);\n\t\n\tif ((isForeground && this.fill != null) || (!isForeground && this.fill == null))\n\t{\n\t\tc.moveTo(0, dy);\n\t\tc.curveTo(0, 2 * dy, w, 2 * dy, w, dy);\n\t\t\n\t\t// Needs separate shapes for correct hit-detection\n\t\tif (!isForeground)\n\t\t{\n\t\t\tc.stroke();\n\t\t\tc.begin();\n\t\t}\n\t}\n\t\n\tif (!isForeground)\n\t{\n\t\tc.moveTo(0, dy);\n\t\tc.curveTo(0, -dy / 3, w, -dy / 3, w, dy);\n\t\tc.lineTo(w, h - dy);\n\t\tc.curveTo(w, h + dy / 3, 0, h + dy / 3, 0, h - dy);\n\t\tc.close();\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConnector\n * \n * Extends <mxShape> to implement a connector shape. The connector\n * shape allows for arrow heads on either side.\n * \n * This shape is registered under <mxConstants.SHAPE_CONNECTOR> in\n * <mxCellRenderer>.\n * \n * Constructor: mxConnector\n * \n * Constructs a new connector shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * Default is 'black'.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxConnector(points, stroke, strokewidth)\n{\n\tmxPolyline.call(this, points, stroke, strokewidth);\n};\n\n/**\n * Extends mxPolyline.\n */\nmxUtils.extend(mxConnector, mxPolyline);\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using <createBoundingBox> and\n * <augmentBoundingBox> and stores the result in <boundingBox>.\n */\nmxConnector.prototype.updateBoundingBox = function()\n{\n\tthis.useSvgBoundingBox = this.style != null && this.style[mxConstants.STYLE_CURVED] == 1;\n\tmxShape.prototype.updateBoundingBox.apply(this, arguments);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxConnector.prototype.paintEdgeShape = function(c, pts)\n{\n\t// The indirection via functions for markers is needed in\n\t// order to apply the offsets before painting the line and\n\t// paint the markers after painting the line.\n\tvar sourceMarker = this.createMarker(c, pts, true);\n\tvar targetMarker = this.createMarker(c, pts, false);\n\n\tmxPolyline.prototype.paintEdgeShape.apply(this, arguments);\n\t\n\t// Disables shadows, dashed styles and fixes fill color for markers\n\tc.setFillColor(this.stroke);\n\tc.setShadow(false);\n\tc.setDashed(false);\n\t\n\tif (sourceMarker != null)\n\t{\n\t\tsourceMarker();\n\t}\n\t\n\tif (targetMarker != null)\n\t{\n\t\ttargetMarker();\n\t}\n};\n\n/**\n * Function: createMarker\n * \n * Prepares the marker by adding offsets in pts and returning a function to\n * paint the marker.\n */\nmxConnector.prototype.createMarker = function(c, pts, source)\n{\n\tvar result = null;\n\tvar n = pts.length;\n\tvar type = mxUtils.getValue(this.style, (source) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW);\n\tvar p0 = (source) ? pts[1] : pts[n - 2];\n\tvar pe = (source) ? pts[0] : pts[n - 1];\n\t\n\tif (type != null && p0 != null && pe != null)\n\t{\n\t\tvar count = 1;\n\t\t\n\t\t// Uses next non-overlapping point\n\t\twhile (count < n - 1 && Math.round(p0.x - pe.x) == 0 && Math.round(p0.y - pe.y) == 0)\n\t\t{\n\t\t\tp0 = (source) ? pts[1 + count] : pts[n - 2 - count];\n\t\t\tcount++;\n\t\t}\n\t\n\t\t// Computes the norm and the inverse norm\n\t\tvar dx = pe.x - p0.x;\n\t\tvar dy = pe.y - p0.y;\n\t\n\t\tvar dist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n\t\t\n\t\tvar unitX = dx / dist;\n\t\tvar unitY = dy / dist;\n\t\n\t\tvar size = mxUtils.getNumber(this.style, (source) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE);\n\t\t\n\t\t// Allow for stroke width in the end point used and the \n\t\t// orthogonal vectors describing the direction of the marker\n\t\tvar filled = this.style[(source) ? mxConstants.STYLE_STARTFILL : mxConstants.STYLE_ENDFILL] != 0;\n\t\t\n\t\tresult = mxMarker.createMarker(c, this, type, pe, unitX, unitY, size, source, this.strokewidth, filled);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the strokewidth and shadow offsets.\n */\nmxConnector.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\t// Adds marker sizes\n\tvar size = 0;\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, mxConstants.NONE) != mxConstants.NONE)\n\t{\n\t\tsize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_MARKERSIZE) + 1;\n\t}\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, mxConstants.NONE) != mxConstants.NONE)\n\t{\n\t\tsize = Math.max(size, mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE)) + 1;\n\t}\n\t\n\tbbox.grow(size * this.scale);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlane\n *\n * Extends <mxShape> to implement a swimlane shape. This shape is registered\n * under <mxConstants.SHAPE_SWIMLANE> in <mxCellRenderer>. Use the\n * <mxConstants.STYLE_STYLE_STARTSIZE> to define the size of the title\n * region, <mxConstants.STYLE_SWIMLANE_FILLCOLOR> for the content area fill,\n * <mxConstants.STYLE_SEPARATORCOLOR> to draw an additional vertical separator\n * and <mxConstants.STYLE_SWIMLANE_LINE> to hide the line between the title\n * region and the content area. The <mxConstants.STYLE_HORIZONTAL> affects\n * the orientation of this shape, not only its label.\n * \n * Constructor: mxSwimlane\n *\n * Constructs a new swimlane shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxSwimlane(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxSwimlane, mxShape);\n\n/**\n * Variable: imageSize\n *\n * Default imagewidth and imageheight if an image but no imagewidth\n * and imageheight are defined in the style. Value is 16.\n */\nmxSwimlane.prototype.imageSize = 16;\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxSwimlane.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn true;\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getTitleSize = function()\n{\n\treturn Math.max(0, mxUtils.getValue(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE));\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getLabelBounds = function(rect)\n{\n\tvar start = this.getTitleSize();\n\tvar bounds = new mxRectangle(rect.x, rect.y, rect.width, rect.height);\n\tvar horizontal = this.isHorizontal();\n\t\n\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\n\t// East is default\n\tvar shapeVertical = (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n\tvar realHorizontal = horizontal == !shapeVertical;\n\t\n\tvar realFlipH = !realHorizontal && flipH != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\tvar realFlipV = realHorizontal && flipV != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\n\t// Shape is horizontal\n\tif (!shapeVertical)\n\t{\n\t\tvar tmp = Math.min(bounds.height, start * this.scale);\n\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.y += bounds.height - tmp;\n\t\t}\n\n\t\tbounds.height = tmp;\n\t}\n\telse\n\t{\n\t\tvar tmp = Math.min(bounds.width, start * this.scale);\n\t\t\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.x += bounds.width - tmp;\t\n\t\t}\n\n\t\tbounds.width = tmp;\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t\treturn new mxRectangle(x, y, w, start);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t\treturn new mxRectangle(x, y, start, h);\n\t}\n};\n\n/**\n * Function: getArcSize\n * \n * Returns the arcsize for the swimlane.\n */\nmxSwimlane.prototype.getArcSize = function(w, h, start)\n{\n\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\n\treturn start * f * 3; \n};\n\n/**\n * Function: paintVertexShape\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.isHorizontal = function()\n{\n\treturn mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) == 1;\n};\n\n/**\n * Function: paintVertexShape\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_FILLCOLOR, mxConstants.NONE);\n\tvar swimlaneLine = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_LINE, 1) == 1;\n\tvar r = 0;\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t}\n\t\n\tc.translate(x, y);\n\t\n\tif (!this.isRounded)\n\t{\n\t\tthis.paintSwimlane(c, x, y, w, h, start, fill, swimlaneLine);\n\t}\n\telse\n\t{\n\t\tr = this.getArcSize(w, h, start);\n\t\tr = Math.min(((this.isHorizontal()) ? h : w) - start, Math.min(start, r));\n\t\tthis.paintRoundedSwimlane(c, x, y, w, h, start, r, fill, swimlaneLine);\n\t}\n\t\n\tvar sep = mxUtils.getValue(this.style, mxConstants.STYLE_SEPARATORCOLOR, mxConstants.NONE);\n\tthis.paintSeparator(c, x, y, w, h, start, sep);\n\n\tif (this.image != null)\n\t{\n\t\tvar bounds = this.getImageBounds(x, y, w, h);\n\t\tc.image(bounds.x - x, bounds.y - y, bounds.width, bounds.height,\n\t\t\t\tthis.image, false, false, false);\n\t}\n\t\n\tif (this.glass)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintGlassEffect(c, 0, 0, w, start, r);\n\t}\n};\n\n/**\n * Function: paintSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintSwimlane = function(c, x, y, w, h, start, fill, swimlaneLine)\n{\n\tc.begin();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(w, 0);\n\t\tc.lineTo(w, start);\n\t\tc.fillAndStroke();\n\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(0, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(start, h);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintRoundedSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintRoundedSwimlane = function(c, x, y, w, h, start, r, fill, swimlaneLine)\n{\n\tc.begin();\n\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(w, start);\n\t\tc.lineTo(w, r);\n\t\tc.quadTo(w, 0, w - Math.min(w / 2, r), 0);\n\t\tc.lineTo(Math.min(w / 2, r), 0);\n\t\tc.quadTo(0, 0, 0, r);\n\t\tc.lineTo(0, start);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h - r);\n\t\t\tc.quadTo(0, h, Math.min(w / 2, r), h);\n\t\t\tc.lineTo(w - Math.min(w / 2, r), h);\n\t\t\tc.quadTo(w, h, w, h - r);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(r, 0);\n\t\tc.quadTo(0, 0, 0, Math.min(h / 2, r));\n\t\tc.lineTo(0, h - Math.min(h / 2, r));\n\t\tc.quadTo(0, h, r, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, h);\n\t\t\tc.lineTo(w - r, h);\n\t\t\tc.quadTo(w, h, w, h - Math.min(h / 2, r));\n\t\t\tc.lineTo(w, Math.min(h / 2, r));\n\t\t\tc.quadTo(w, 0, w - r, 0);\n\t\t\tc.lineTo(start, 0);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintDivider\n *\n * Paints the divider between swimlane title and content area.\n */\nmxSwimlane.prototype.paintDivider = function(c, x, y, w, h, start, shadow)\n{\n\tif (!shadow)\n\t{\n\t\tc.setShadow(false);\n\t}\n\n\tc.begin();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(w, start);\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(start, h);\n\t}\n\n\tc.stroke();\n};\n\n/**\n * Function: paintSeparator\n *\n * Paints the vertical or horizontal separator line between swimlanes.\n */\nmxSwimlane.prototype.paintSeparator = function(c, x, y, w, h, start, color)\n{\n\tif (color != mxConstants.NONE)\n\t{\n\t\tc.setStrokeColor(color);\n\t\tc.setDashed(true);\n\t\tc.begin();\n\t\t\n\t\tif (this.isHorizontal())\n\t\t{\n\t\t\tc.moveTo(w, start);\n\t\t\tc.lineTo(w, h);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t}\n\t\t\n\t\tc.stroke();\n\t\tc.setDashed(false);\n\t}\n};\n\n/**\n * Function: getImageBounds\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.getImageBounds = function(x, y, w, h)\n{\n\tif (this.isHorizontal())\n\t{\n\t\treturn new mxRectangle(x + w - this.imageSize, y, this.imageSize, this.imageSize);\n\t}\n\telse\n\t{\n\t\treturn new mxRectangle(x, y, this.imageSize, this.imageSize);\n\t}\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxGraphLayout\n * \n * Base class for all layout algorithms in mxGraph. Main public functions are\n * <move> for handling a moved cell within a layouted parent, and <execute> for\n * running the layout on a given parent cell.\n *\n * Known Subclasses:\n *\n * <mxCircleLayout>, <mxCompactTreeLayout>, <mxCompositeLayout>,\n * <mxFastOrganicLayout>, <mxParallelEdgeLayout>, <mxPartitionLayout>,\n * <mxStackLayout>\n * \n * Constructor: mxGraphLayout\n *\n * Constructs a new layout using the given layouts.\n *\n * Arguments:\n * \n * graph - Enclosing \n */\nfunction mxGraphLayout(graph)\n{\n\tthis.graph = graph;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphLayout.prototype.graph = null;\n\n/**\n * Variable: useBoundingBox\n *\n * Boolean indicating if the bounding box of the label should be used if\n * its available. Default is true.\n */\nmxGraphLayout.prototype.useBoundingBox = true;\n\n/**\n * Variable: parent\n *\n * The parent cell of the layout, if any\n */\nmxGraphLayout.prototype.parent = null;\n\n/**\n * Function: moveCell\n * \n * Notified when a cell is being moved in a parent that has automatic\n * layout to update the cell state (eg. index) so that the outcome of the\n * layout will position the vertex as close to the point (x, y) as\n * possible.\n * \n * Empty implementation.\n * \n * Parameters:\n * \n * cell - <mxCell> which has been moved.\n * x - X-coordinate of the new cell location.\n * y - Y-coordinate of the new cell location.\n */\nmxGraphLayout.prototype.moveCell = function(cell, x, y) { };\n\n/**\n * Function: execute\n * \n * Executes the layout algorithm for the children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be layed out.\n */\nmxGraphLayout.prototype.execute = function(parent) { };\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this layout operates on.\n */\nmxGraphLayout.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: getConstraint\n * \n * Returns the constraint for the given key and cell. The optional edge and\n * source arguments are used to return inbound and outgoing routing-\n * constraints for the given edge and vertex. This implementation always\n * returns the value for the given key in the style of the given cell.\n * \n * Parameters:\n * \n * key - Key of the constraint to be returned.\n * cell - <mxCell> whose constraint should be returned.\n * edge - Optional <mxCell> that represents the connection whose constraint\n * should be returned. Default is null.\n * source - Optional boolean that specifies if the connection is incoming\n * or outgoing. Default is null.\n */\nmxGraphLayout.prototype.getConstraint = function(key, cell, edge, source)\n{\n\tvar state = this.graph.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.graph.getCellStyle(cell);\n\t\n\treturn (style != null) ? style[key] : null;\n};\n\n/**\n * Function: traverse\n * \n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Example:\n * \n * (code)\n * mxLog.show();\n * var cell = graph.getSelectionCell();\n * graph.traverse(cell, false, function(vertex, edge)\n * {\n *   mxLog.debug(graph.getLabel(vertex));\n * });\n * (end)\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - Optional boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * func - Visitor function that takes the current vertex and the incoming\n * edge as arguments. The traversal stops if the function returns false.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * visited - Optional <mxDictionary> of cell paths for the visited cells.\n */\nmxGraphLayout.traverse = function(vertex, directed, func, edge, visited)\n{\n\tif (func != null && vertex != null)\n\t{\n\t\tdirected = (directed != null) ? directed : true;\n\t\tvisited = visited || new mxDictionary();\n\t\t\n\t\tif (!visited.get(vertex))\n\t\t{\n\t\t\tvisited.put(vertex, true);\n\t\t\tvar result = func(vertex, edge);\n\t\t\t\n\t\t\tif (result == null || result)\n\t\t\t{\n\t\t\t\tvar edgeCount = this.graph.model.getEdgeCount(vertex);\n\t\t\t\t\n\t\t\t\tif (edgeCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar e = this.graph.model.getEdgeAt(vertex, i);\n\t\t\t\t\t\tvar isSource = this.graph.model.getTerminal(e, true) == vertex;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (!directed || isSource)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar next = this.graph.view.getVisibleTerminal(e, !isSource);\n\t\t\t\t\t\t\tthis.traverse(next, directed, func, e, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isAncestor\n * \n * Returns true if the given parent is an ancestor of the given child.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent.\n * child - <mxCell> that specifies the child.\n * traverseAncestors - boolean whether to \n */\nmxGraphLayout.prototype.isAncestor = function(parent, child, traverseAncestors)\n{\n\tif (!traverseAncestors)\n\t{\n\t\treturn (this.graph.model.getParent(child) == parent);\n\t}\t\n\t\n\tif (child == parent)\n\t{\n\t\treturn false;\n\t}\n\n\twhile (child != null && child != parent)\n\t{\n\t\tchild = this.graph.model.getParent(child);\n\t}\n\t\n\treturn child == parent;\n};\n\n/**\n * Function: isVertexMovable\n * \n * Returns a boolean indicating if the given <mxCell> is movable or\n * bendable by the algorithm. This implementation returns true if the given\n * cell is movable in the graph.\n * \n * Parameters:\n * \n * cell - <mxCell> whose movable state should be returned.\n */\nmxGraphLayout.prototype.isVertexMovable = function(cell)\n{\n\treturn this.graph.isCellMovable(cell);\n};\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored by\n * the algorithm. This implementation returns false for all vertices.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxGraphLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn !this.graph.getModel().isVertex(vertex) ||\n\t\t!this.graph.isCellVisible(vertex);\n};\n\n/**\n * Function: isEdgeIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored by\n * the algorithm. This implementation returns false for all vertices.\n * \n * Parameters:\n * \n * cell - <mxCell> whose ignored state should be returned.\n */\nmxGraphLayout.prototype.isEdgeIgnored = function(edge)\n{\n\tvar model = this.graph.getModel();\n\t\n\treturn !model.isEdge(edge) ||\n\t\t!this.graph.isCellVisible(edge) ||\n\t\tmodel.getTerminal(edge, true) == null ||\n\t\tmodel.getTerminal(edge, false) == null;\n};\n\n/**\n * Function: setEdgeStyleEnabled\n * \n * Disables or enables the edge style of the given edge.\n */\nmxGraphLayout.prototype.setEdgeStyleEnabled = function(edge, value)\n{\n\tthis.graph.setCellStyles(mxConstants.STYLE_NOEDGESTYLE,\n\t\t\t(value) ? '0' : '1', [edge]);\n};\n\n/**\n * Function: setOrthogonalEdge\n * \n * Disables or enables orthogonal end segments of the given edge.\n */\nmxGraphLayout.prototype.setOrthogonalEdge = function(edge, value)\n{\n\tthis.graph.setCellStyles(mxConstants.STYLE_ORTHOGONAL,\n\t\t\t(value) ? '1' : '0', [edge]);\n};\n\n/**\n * Function: getParentOffset\n * \n * Determines the offset of the given parent to the parent\n * of the layout\n */\nmxGraphLayout.prototype.getParentOffset = function(parent)\n{\n\tvar result = new mxPoint();\n\n\tif (parent != null && parent != this.parent)\n\t{\n\t\tvar model = this.graph.getModel();\n\n\t\tif (model.isAncestor(this.parent, parent))\n\t\t{\n\t\t\tvar parentGeo = model.getGeometry(parent);\n\n\t\t\twhile (parent != this.parent)\n\t\t\t{\n\t\t\t\tresult.x = result.x + parentGeo.x;\n\t\t\t\tresult.y = result.y + parentGeo.y;\n\n\t\t\t\tparent = model.getParent(parent);;\n\t\t\t\tparentGeo = model.getGeometry(parent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: setEdgePoints\n * \n * Replaces the array of mxPoints in the geometry of the given edge\n * with the given array of mxPoints.\n */\nmxGraphLayout.prototype.setEdgePoints = function(edge, points)\n{\n\tif (edge != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar geometry = model.getGeometry(edge);\n\n\t\tif (geometry == null)\n\t\t{\n\t\t\tgeometry = new mxGeometry();\n\t\t\tgeometry.setRelative(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeometry = geometry.clone();\n\t\t}\n\n\t\tif (this.parent != null && points != null)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\n\t\t\tvar parentOffset = this.getParentOffset(parent);\n\n\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t{\n\t\t\t\tpoints[i].x = points[i].x - parentOffset.x;\n\t\t\t\tpoints[i].y = points[i].y - parentOffset.y;\n\t\t\t}\n\t\t}\n\n\t\tgeometry.points = points;\n\t\tmodel.setGeometry(edge, geometry);\n\t}\n};\n\n/**\n * Function: setVertexLocation\n * \n * Sets the new position of the given cell taking into account the size of\n * the bounding box if <useBoundingBox> is true. The change is only carried\n * out if the new location is not equal to the existing location, otherwise\n * the geometry is not replaced with an updated instance. The new or old\n * bounds are returned (including overlapping labels).\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry is to be set.\n * x - Integer that defines the x-coordinate of the new location.\n * y - Integer that defines the y-coordinate of the new location.\n */\nmxGraphLayout.prototype.setVertexLocation = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(cell);\n\tvar result = null;\n\t\n\tif (geometry != null)\n\t{\n\t\tresult = new mxRectangle(x, y, geometry.width, geometry.height);\n\t\t\n\t\t// Checks for oversize labels and shifts the result\n\t\t// TODO: Use mxUtils.getStringSize for label bounds\n\t\tif (this.useBoundingBox)\n\t\t{\n\t\t\tvar state = this.graph.getView().getState(cell);\n\t\t\t\n\t\t\tif (state != null && state.text != null && state.text.boundingBox != null)\n\t\t\t{\n\t\t\t\tvar scale = this.graph.getView().scale;\n\t\t\t\tvar box = state.text.boundingBox;\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.x < state.x)\n\t\t\t\t{\n\t\t\t\t\tx += (state.x - box.x) / scale;\n\t\t\t\t\tresult.width = box.width;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.y < state.y)\n\t\t\t\t{\n\t\t\t\t\ty += (state.y - box.y) / scale;\n\t\t\t\t\tresult.height = box.height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.parent != null)\n\t\t{\n\t\t\tvar parent = model.getParent(cell);\n\n\t\t\tif (parent != null && parent != this.parent)\n\t\t\t{\n\t\t\t\tvar parentOffset = this.getParentOffset(parent);\n\n\t\t\t\tx = x - parentOffset.x;\n\t\t\t\ty = y - parentOffset.y;\n\t\t\t}\n\t\t}\n\n\t\tif (geometry.x != x || geometry.y != y)\n\t\t{\n\t\t\tgeometry = geometry.clone();\n\t\t\tgeometry.x = x;\n\t\t\tgeometry.y = y;\n\t\t\t\n\t\t\tmodel.setGeometry(cell, geometry);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getVertexBounds\n * \n * Returns an <mxRectangle> that defines the bounds of the given cell or\n * the bounding box if <useBoundingBox> is true.\n */\nmxGraphLayout.prototype.getVertexBounds = function(cell)\n{\n\tvar geo = this.graph.getModel().getGeometry(cell);\n\n\t// Checks for oversize label bounding box and corrects\n\t// the return value accordingly\n\t// TODO: Use mxUtils.getStringSize for label bounds\n\tif (this.useBoundingBox)\n\t{\n\t\tvar state = this.graph.getView().getState(cell);\n\n\t\tif (state != null && state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tvar scale = this.graph.getView().scale;\n\t\t\tvar tmp = state.text.boundingBox;\n\n\t\t\tvar dx0 = Math.max(state.x - tmp.x, 0) / scale;\n\t\t\tvar dy0 = Math.max(state.y - tmp.y, 0) / scale;\n\t\t\tvar dx1 = Math.max((tmp.x + tmp.width) - (state.x + state.width), 0) / scale;\n  \t\t\tvar dy1 = Math.max((tmp.y + tmp.height) - (state.y + state.height), 0) / scale;\n\n\t\t\tgeo = new mxRectangle(geo.x - dx0, geo.y - dy0, geo.width + dx0 + dx1, geo.height + dy0 + dy1);\n\t\t}\n\t}\n\n\tif (this.parent != null)\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\tgeo = geo.clone();\n\n\t\tif (parent != null && parent != this.parent)\n\t\t{\n\t\t\tvar parentOffset = this.getParentOffset(parent);\n\t\t\tgeo.x = geo.x + parentOffset.x;\n\t\t\tgeo.y = geo.y + parentOffset.y;\n\t\t}\n\t}\n\n\treturn new mxRectangle(geo.x, geo.y, geo.width, geo.height);\n};\n\n/**\n * Function: arrangeGroups\n * \n * Shortcut to <mxGraph.updateGroupBounds> with moveGroup set to true.\n */\nmxGraphLayout.prototype.arrangeGroups = function(cells, border, topBorder, rightBorder, bottomBorder, leftBorder)\n{\n\treturn this.graph.updateGroupBounds(cells, border, true, topBorder, rightBorder, bottomBorder, leftBorder);\n};\n\n/**\n * Class: WeightedCellSorter\n * \n * A utility class used to track cells whilst sorting occurs on the weighted\n * sum of their connected edges. Does not violate (x.compareTo(y)==0) ==\n * (x.equals(y))\n *\n * Constructor: WeightedCellSorter\n * \n * Constructs a new weighted cell sorted for the given cell and weight.\n */\nfunction WeightedCellSorter(cell, weightedValue)\n{\n\tthis.cell = cell;\n\tthis.weightedValue = weightedValue;\n};\n\n/**\n * Variable: weightedValue\n * \n * The weighted value of the cell stored.\n */\nWeightedCellSorter.prototype.weightedValue = 0;\n\n/**\n * Variable: nudge\n * \n * Whether or not to flip equal weight values.\n */\nWeightedCellSorter.prototype.nudge = false;\n\n/**\n * Variable: visited\n * \n * Whether or not this cell has been visited in the current assignment.\n */\nWeightedCellSorter.prototype.visited = false;\n\n/**\n * Variable: rankIndex\n * \n * The index this cell is in the model rank.\n */\nWeightedCellSorter.prototype.rankIndex = null;\n\n/**\n * Variable: cell\n * \n * The cell whose median value is being calculated.\n */\nWeightedCellSorter.prototype.cell = null;\n\n/**\n * Function: compare\n * \n * Compares two WeightedCellSorters.\n */\nWeightedCellSorter.prototype.compare = function(a, b)\n{\n\tif (a != null && b != null)\n\t{\n\t\tif (b.weightedValue > a.weightedValue)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t\telse if (b.weightedValue < a.weightedValue)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b.nudge)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStackLayout\n * \n * Extends <mxGraphLayout> to create a horizontal or vertical stack of the\n * child vertices. The children do not need to be connected for this layout\n * to work.\n * \n * Example:\n * \n * (code)\n * var layout = new mxStackLayout(graph, true);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxStackLayout\n * \n * Constructs a new stack layout layout for the specified graph,\n * spacing, orientation and offset.\n */\nfunction mxStackLayout(graph, horizontal, spacing, x0, y0, border)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.spacing = (spacing != null) ? spacing : 0;\n\tthis.x0 = (x0 != null) ? x0 : 0;\n\tthis.y0 = (y0 != null) ? y0 : 0;\n\tthis.border = (border != null) ? border : 0;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxStackLayout.prototype = new mxGraphLayout();\nmxStackLayout.prototype.constructor = mxStackLayout;\n\n/**\n * Variable: horizontal\n *\n * Specifies the orientation of the layout. Default is true.\n */\nmxStackLayout.prototype.horizontal = null;\n\n/**\n * Variable: spacing\n *\n * Specifies the spacing between the cells. Default is 0.\n */\nmxStackLayout.prototype.spacing = null;\n\n/**\n * Variable: x0\n *\n * Specifies the horizontal origin of the layout. Default is 0.\n */\nmxStackLayout.prototype.x0 = null;\n\n/**\n * Variable: y0\n *\n * Specifies the vertical origin of the layout. Default is 0.\n */\nmxStackLayout.prototype.y0 = null;\n\n/**\n * Variable: border\n *\n * Border to be added if fill is true. Default is 0.\n */\nmxStackLayout.prototype.border = 0;\n\n/**\n * Variable: marginTop\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginTop = 0;\n\n/**\n * Variable: marginLeft\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginLeft = 0;\n\n/**\n * Variable: marginRight\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginRight = 0;\n\n/**\n * Variable: marginBottom\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginBottom = 0;\n\n/**\n * Variable: keepFirstLocation\n * \n * Boolean indicating if the location of the first cell should be\n * kept, that is, it will not be moved to x0 or y0.\n */\nmxStackLayout.prototype.keepFirstLocation = false;\n\n/**\n * Variable: fill\n * \n * Boolean indicating if dimension should be changed to fill out the parent\n * cell. Default is false.\n */\nmxStackLayout.prototype.fill = false;\n\t\n/**\n * Variable: resizeParent\n * \n * If the parent should be resized to match the width/height of the\n * stack. Default is false.\n */\nmxStackLayout.prototype.resizeParent = false;\n\n/**\n * Variable: resizeParentMax\n * \n * Use maximum of existing value and new value for resize of parent.\n * Default is false.\n */\nmxStackLayout.prototype.resizeParentMax = false;\n\n/**\n * Variable: resizeLast\n * \n * If the last element should be resized to fill out the parent. Default is\n * false. If <resizeParent> is true then this is ignored.\n */\nmxStackLayout.prototype.resizeLast = false;\n\n/**\n * Variable: wrap\n * \n * Value at which a new column or row should be created. Default is null.\n */\nmxStackLayout.prototype.wrap = null;\n\n/**\n * Variable: borderCollapse\n * \n * If the strokeWidth should be ignored. Default is true.\n */\nmxStackLayout.prototype.borderCollapse = true;\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxStackLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell>.\n */\nmxStackLayout.prototype.moveCell = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(cell);\n\tvar horizontal = this.isHorizontal();\n\t\n\tif (cell != null && parent != null)\n\t{\n\t\tvar i = 0;\n\t\tvar last = 0;\n\t\tvar childCount = model.getChildCount(parent);\n\t\tvar value = (horizontal) ? x : y;\n\t\tvar pstate = this.graph.getView().getState(parent);\n\n\t\tif (pstate != null)\n\t\t{\n\t\t\tvalue -= (horizontal) ? pstate.x : pstate.y;\n\t\t}\n\t\t\n\t\tvalue /= this.graph.view.scale;\n\t\t\n\t\tfor (i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (child != cell)\n\t\t\t{\n\t\t\t\tvar bounds = model.getGeometry(child);\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = (horizontal) ?\n\t\t\t\t\t\tbounds.x + bounds.width / 2 :\n\t\t\t\t\t\tbounds.y + bounds.height / 2;\n\t\t\t\t\t\n\t\t\t\t\tif (last <= value && tmp > value)\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlast = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Changes child order in parent\n\t\tvar idx = parent.getIndex(cell);\n\t\tidx = Math.max(0, i - ((i > idx) ? 1 : 0));\n\n\t\tmodel.add(parent, cell, idx);\n\t}\n};\n\n/**\n * Function: getParentSize\n * \n * Returns the size for the parent container or the size of the graph\n * container if the parent is a layer or the root of the model.\n */\nmxStackLayout.prototype.getParentSize = function(parent)\n{\n\tvar model = this.graph.getModel();\t\t\t\n\tvar pgeo = model.getGeometry(parent);\n\t\n\t// Handles special case where the parent is either a layer with no\n\t// geometry or the current root of the view in which case the size\n\t// of the graph's container will be used.\n\tif (this.graph.container != null && ((pgeo == null &&\n\t\tmodel.isLayer(parent)) || parent == this.graph.getView().currentRoot))\n\t{\n\t\tvar width = this.graph.container.offsetWidth - 1;\n\t\tvar height = this.graph.container.offsetHeight - 1;\n\t\tpgeo = new mxRectangle(0, 0, width, height);\n\t}\n\t\n\treturn pgeo;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.execute = function(parent)\n{\n\tif (parent != null)\n\t{\n\t\tvar pgeo = this.getParentSize(parent);\n\t\tvar horizontal = this.isHorizontal();\n\t\tvar model = this.graph.getModel();\t\n\t\tvar fillValue = null;\n\t\t\n\t\tif (pgeo != null)\n\t\t{\n\t\t\tfillValue = (horizontal) ? pgeo.height - this.marginTop - this.marginBottom :\n\t\t\t\tpgeo.width - this.marginLeft - this.marginRight;\n\t\t}\n\t\t\n\t\tfillValue -= 2 * this.border;\n\t\tvar x0 = this.x0 + this.border + this.marginLeft;\n\t\tvar y0 = this.y0 + this.border + this.marginTop;\n\t\t\n\t\t// Handles swimlane start size\n\t\tif (this.graph.isSwimlane(parent))\n\t\t{\n\t\t\t// Uses computed style to get latest \n\t\t\tvar style = this.graph.getCellStyle(parent);\n\t\t\tvar start = mxUtils.getNumber(style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE);\n\t\t\tvar horz = mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true) == 1;\n\n\t\t\tif (pgeo != null)\n\t\t\t{\n\t\t\t\tif (horz)\n\t\t\t\t{\n\t\t\t\t\tstart = Math.min(start, pgeo.height);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstart = Math.min(start, pgeo.width);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (horizontal == horz)\n\t\t\t{\n\t\t\t\tfillValue -= start;\n\t\t\t}\n\n\t\t\tif (horz)\n\t\t\t{\n\t\t\t\ty0 += start;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx0 += start;\n\t\t\t}\n\t\t}\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar tmp = 0;\n\t\t\tvar last = null;\n\t\t\tvar lastValue = 0;\n\t\t\tvar lastChild = null;\n\t\t\tvar childCount = model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\t\n\t\t\t\tif (!this.isVertexIgnored(child) && this.isVertexMovable(child))\n\t\t\t\t{\n\t\t\t\t\tvar geo = model.getGeometry(child);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.wrap != null && last != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ((horizontal && last.x + last.width +\n\t\t\t\t\t\t\t\tgeo.width + 2 * this.spacing > this.wrap) ||\n\t\t\t\t\t\t\t\t(!horizontal && last.y + last.height +\n\t\t\t\t\t\t\t\tgeo.height + 2 * this.spacing > this.wrap))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ty0 += tmp + this.spacing;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tx0 += tmp + this.spacing;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttmp = 0;\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\ttmp = Math.max(tmp, (horizontal) ? geo.height : geo.width);\n\t\t\t\t\t\tvar sw = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!this.borderCollapse)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar childStyle = this.graph.getCellStyle(child);\n\t\t\t\t\t\t\tsw = mxUtils.getNumber(childStyle, mxConstants.STYLE_STROKEWIDTH, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (last != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x = lastValue + this.spacing + Math.floor(sw / 2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y = lastValue + this.spacing + Math.floor(sw / 2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (!this.keepFirstLocation)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y = y0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.y = y0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.fill && fillValue != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.height = fillValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.width = fillValue;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.setChildGeometry(child, geo);\n\t\t\t\t\t\tlastChild = child;\n\t\t\t\t\t\tlast = geo;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlastValue = last.x + last.width + Math.floor(sw / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlastValue = last.y + last.height + Math.floor(sw / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.resizeParent && pgeo != null && last != null && !this.graph.isCellCollapsed(parent))\n\t\t\t{\n\t\t\t\tthis.updateParentGeometry(parent, pgeo, last);\n\t\t\t}\n\t\t\telse if (this.resizeLast && pgeo != null && last != null && lastChild != null)\n\t\t\t{\n\t\t\t\tif (horizontal)\n\t\t\t\t{\n\t\t\t\t\tlast.width = pgeo.width - last.x - this.spacing - this.marginRight - this.marginLeft;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlast.height = pgeo.height - last.y - this.spacing - this.marginBottom;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.setChildGeometry(lastChild, last);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.setChildGeometry = function(child, geo)\n{\n\tvar geo2 = this.graph.getCellGeometry(child);\n\t\n\tif (geo2 == null || geo.x != geo2.x || geo.y != geo2.y ||\n\t\tgeo.width != geo2.width || geo.height != geo2.height)\n\t{\n\t\tthis.graph.getModel().setGeometry(child, geo);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.updateParentGeometry = function(parent, pgeo, last)\n{\n\tvar horizontal = this.isHorizontal();\n\tvar model = this.graph.getModel();\t\n\n\tvar pgeo2 = pgeo.clone();\n\t\n\tif (horizontal)\n\t{\n\t\tvar tmp = last.x + last.width + this.marginRight + this.border;\n\t\t\n\t\tif (this.resizeParentMax)\n\t\t{\n\t\t\tpgeo2.width = Math.max(pgeo2.width, tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpgeo2.width = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar tmp = last.y + last.height + this.marginBottom + this.border;\n\t\t\n\t\tif (this.resizeParentMax)\n\t\t{\n\t\t\tpgeo2.height = Math.max(pgeo2.height, tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpgeo2.height = tmp;\n\t\t}\n\t}\n\t\n\tif (pgeo.x != pgeo2.x || pgeo.y != pgeo2.y ||\n\t\tpgeo.width != pgeo2.width || pgeo.height != pgeo2.height)\n\t{\n\t\tmodel.setGeometry(parent, pgeo2);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPartitionLayout\n * \n * Extends <mxGraphLayout> for partitioning the parent cell vertically or\n * horizontally by filling the complete area with the child cells. A horizontal\n * layout partitions the height of the given parent whereas a a non-horizontal\n * layout partitions the width. If the parent is a layer (that is, a child of\n * the root node), then the current graph size is partitioned. The children do\n * not need to be connected for this layout to work.\n * \n * Example:\n * \n * (code)\n * var layout = new mxPartitionLayout(graph, true, 10, 20);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxPartitionLayout\n * \n * Constructs a new stack layout layout for the specified graph,\n * spacing, orientation and offset.\n */\nfunction mxPartitionLayout(graph, horizontal, spacing, border)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.spacing = spacing || 0;\n\tthis.border = border || 0;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxPartitionLayout.prototype = new mxGraphLayout();\nmxPartitionLayout.prototype.constructor = mxPartitionLayout;\n\n/**\n * Variable: horizontal\n * \n * Boolean indicating the direction in which the space is partitioned.\n * Default is true.\n */\nmxPartitionLayout.prototype.horizontal = null;\n\n/**\n * Variable: spacing\n * \n * Integer that specifies the absolute spacing in pixels between the\n * children. Default is 0.\n */\nmxPartitionLayout.prototype.spacing = null;\n\n/**\n * Variable: border\n * \n * Integer that specifies the absolute inset in pixels for the parent that\n * contains the children. Default is 0.\n */\nmxPartitionLayout.prototype.border = null;\n\n/**\n * Variable: resizeVertices\n * \n * Boolean that specifies if vertices should be resized. Default is true.\n */\nmxPartitionLayout.prototype.resizeVertices = true;\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxPartitionLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell>.\n */\nmxPartitionLayout.prototype.moveCell = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(cell);\n\t\n\tif (cell != null &&\n\t\tparent != null)\n\t{\n\t\tvar i = 0;\n\t\tvar last = 0;\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\t// Finds index of the closest swimlane\n\t\t// TODO: Take into account the orientation\n\t\tfor (i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\tvar bounds = this.getVertexBounds(child);\n\t\t\t\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tvar tmp = bounds.x + bounds.width / 2;\n\t\t\t\t\n\t\t\t\tif (last < x && tmp > x)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlast = tmp;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Changes child order in parent\n\t\tvar idx = parent.getIndex(cell);\n\t\tidx = Math.max(0, i - ((i > idx) ? 1 : 0));\n\t\t\n\t\tmodel.add(parent, cell, idx);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>. All children where <isVertexIgnored>\n * returns false and <isVertexMovable> returns true are modified.\n */\nmxPartitionLayout.prototype.execute = function(parent)\n{\n\tvar horizontal = this.isHorizontal();\n\tvar model = this.graph.getModel();\n\tvar pgeo = model.getGeometry(parent);\n\t\n\t// Handles special case where the parent is either a layer with no\n\t// geometry or the current root of the view in which case the size\n\t// of the graph's container will be used.\n\tif (this.graph.container != null &&\n\t\t((pgeo == null &&\n\t\tmodel.isLayer(parent)) ||\n\t\tparent == this.graph.getView().currentRoot))\n\t{\n\t\tvar width = this.graph.container.offsetWidth - 1;\n\t\tvar height = this.graph.container.offsetHeight - 1;\n\t\tpgeo = new mxRectangle(0, 0, width, height);\n\t}\n\n\tif (pgeo != null)\n\t{\n\t\tvar children = [];\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (!this.isVertexIgnored(child) &&\n\t\t\t\tthis.isVertexMovable(child))\n\t\t\t{\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar n = children.length;\n\n\t\tif (n > 0)\n\t\t{\n\t\t\tvar x0 = this.border;\n\t\t\tvar y0 = this.border;\n\t\t\tvar other = (horizontal) ? pgeo.height : pgeo.width;\n\t\t\tother -= 2 * this.border;\n\n\t\t\tvar size = (this.graph.isSwimlane(parent)) ?\n\t\t\t\tthis.graph.getStartSize(parent) :\n\t\t\t\tnew mxRectangle();\n\n\t\t\tother -= (horizontal) ? size.height : size.width;\n\t\t\tx0 = x0 + size.width;\n\t\t\ty0 = y0 + size.height;\n\n\t\t\tvar tmp = this.border + (n - 1) * this.spacing;\n\t\t\tvar value = (horizontal) ?\n\t\t\t\t((pgeo.width - x0 - tmp) / n) :\n\t\t\t\t((pgeo.height - y0 - tmp) / n);\n\t\t\t\n\t\t\t// Avoids negative values, that is values where the sum of the\n\t\t\t// spacing plus the border is larger then the available space\n\t\t\tif (value > 0)\n\t\t\t{\n\t\t\t\tmodel.beginUpdate();\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < n; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\tvar geo = model.getGeometry(child);\n\t\t\t\t\t\n\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t\t\tgeo.y = y0;\n\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (this.resizeVertices)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.width = value;\n\t\t\t\t\t\t\t\t\tgeo.height = other;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tx0 += value + this.spacing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (this.resizeVertices)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.height = value;\n\t\t\t\t\t\t\t\t\tgeo.width = other;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ty0 += value + this.spacing;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmodel.setGeometry(child, geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfinally\n\t\t\t\t{\n\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxCompactTreeLayout\n * \n * Extends <mxGraphLayout> to implement a compact tree (Moen) algorithm. This\n * layout is suitable for graphs that have no cycles (trees). Vertices that are\n * not connected to the tree will be ignored by this layout.\n * \n * Example:\n * \n * (code)\n * var layout = new mxCompactTreeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new compact tree layout for the specified graph\n * and orientation.\n */\nfunction mxCompactTreeLayout(graph, horizontal, invert)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.invert = (invert != null) ? invert : false;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCompactTreeLayout.prototype = new mxGraphLayout();\nmxCompactTreeLayout.prototype.constructor = mxCompactTreeLayout;\n\n/**\n * Variable: horizontal\n *\n * Specifies the orientation of the layout. Default is true.\n */\nmxCompactTreeLayout.prototype.horizontal = null;\t \n\n/**\n * Variable: invert\n *\n * Specifies if edge directions should be inverted. Default is false.\n */\nmxCompactTreeLayout.prototype.invert = null;\t \n\n/**\n * Variable: resizeParent\n * \n * If the parents should be resized to match the width/height of the\n * children. Default is true.\n */\nmxCompactTreeLayout.prototype.resizeParent = true;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxCompactTreeLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: groupPadding\n * \n * Padding added to resized parents. Default is 10.\n */\nmxCompactTreeLayout.prototype.groupPadding = 10;\n\n/**\n * Variable: groupPaddingTop\n * \n * Top padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingTop = 0;\n\n/**\n * Variable: groupPaddingRight\n * \n * Right padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingRight = 0;\n\n/**\n * Variable: groupPaddingBottom\n * \n * Bottom padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingBottom = 0;\n\n/**\n * Variable: groupPaddingLeft\n * \n * Left padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingLeft = 0;\n\n/**\n * Variable: parentsChanged\n *\n * A set of the parents that need updating based on children\n * process as part of the layout.\n */\nmxCompactTreeLayout.prototype.parentsChanged = null;\n\n/**\n * Variable: moveTree\n * \n * Specifies if the tree should be moved to the top, left corner\n * if it is inside a top-level layer. Default is false.\n */\nmxCompactTreeLayout.prototype.moveTree = false;\n\n/**\n * Variable: visited\n * \n * Specifies if the tree should be moved to the top, left corner\n * if it is inside a top-level layer. Default is false.\n */\nmxCompactTreeLayout.prototype.visited = null;\n\n/**\n * Variable: levelDistance\n *\n * Holds the levelDistance. Default is 10.\n */\nmxCompactTreeLayout.prototype.levelDistance = 10;\n\n/**\n * Variable: nodeDistance\n *\n * Holds the nodeDistance. Default is 20.\n */\nmxCompactTreeLayout.prototype.nodeDistance = 20;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxCompactTreeLayout.prototype.resetEdges = true;\n\n/**\n * Variable: prefHozEdgeSep\n * \n * The preferred horizontal distance between edges exiting a vertex.\n */\nmxCompactTreeLayout.prototype.prefHozEdgeSep = 5;\n\n/**\n * Variable: prefVertEdgeOff\n * \n * The preferred vertical offset between edges exiting a vertex.\n */\nmxCompactTreeLayout.prototype.prefVertEdgeOff = 4;\n\n/**\n * Variable: minEdgeJetty\n * \n * The minimum distance for an edge jetty from a vertex.\n */\nmxCompactTreeLayout.prototype.minEdgeJetty = 8;\n\n/**\n * Variable: channelBuffer\n * \n * The size of the vertical buffer in the center of inter-rank channels\n * where edge control points should not be placed.\n */\nmxCompactTreeLayout.prototype.channelBuffer = 4;\n\n/**\n * Variable: edgeRouting\n * \n * Whether or not to apply the internal tree edge routing.\n */\nmxCompactTreeLayout.prototype.edgeRouting = true;\n\n/**\n * Variable: sortEdges\n * \n * Specifies if edges should be sorted according to the order of their\n * opposite terminal cell in the model.\n */\nmxCompactTreeLayout.prototype.sortEdges = false;\n\n/**\n * Variable: alignRanks\n * \n * Whether or not the tops of cells in each rank should be aligned\n * across the rank\n */\nmxCompactTreeLayout.prototype.alignRanks = false;\n\n/**\n * Variable: maxRankHeight\n * \n * An array of the maximum height of cells (relative to the layout direction)\n * per rank\n */\nmxCompactTreeLayout.prototype.maxRankHeight = null;\n\n/**\n * Variable: root\n * \n * The cell to use as the root of the tree\n */\nmxCompactTreeLayout.prototype.root = null;\n\n/**\n * Variable: node\n * \n * The internal node representation of the root cell. Do not set directly\n * , this value is only exposed to assist with post-processing functionality\n */\nmxCompactTreeLayout.prototype.node = null;\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxCompactTreeLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxCompactTreeLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * If the parent has any connected edges, then it is used as the root of\n * the tree. Else, <mxGraph.findTreeRoots> will be used to find a suitable\n * root node within the set of children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be laid out.\n * root - Optional <mxCell> that will be used as the root of the tree.\n * Overrides <root> if specified.\n */\nmxCompactTreeLayout.prototype.execute = function(parent, root)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.getModel();\n\n\tif (root == null)\n\t{\n\t\t// Takes the parent as the root if it has outgoing edges\n\t\tif (this.graph.getEdges(parent, model.getParent(parent),\n\t\t\tthis.invert, !this.invert, false).length > 0)\n\t\t{\n\t\t\tthis.root = parent;\n\t\t}\n\t\t\n\t\t// Tries to find a suitable root in the parent's\n\t\t// children\n\t\telse\n\t\t{\n\t\t\tvar roots = this.graph.findTreeRoots(parent, true, this.invert);\n\t\t\t\n\t\t\tif (roots.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < roots.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (!this.isVertexIgnored(roots[i]) &&\n\t\t\t\t\t\tthis.graph.getEdges(roots[i], null,\n\t\t\t\t\t\t\tthis.invert, !this.invert, false).length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.root = roots[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.root = root;\n\t}\n\t\n\tif (this.root != null)\n\t{\n\t\tif (this.resizeParent)\n\t\t{\n\t\t\tthis.parentsChanged = new Object();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.parentsChanged = null;\n\t\t}\n\n\t\t//  Maintaining parent location\n\t\tthis.parentX = null;\n\t\tthis.parentY = null;\n\t\t\n\t\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tthis.parentX = geo.x;\n\t\t\t\tthis.parentY = geo.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tmodel.beginUpdate();\n\t\t\n\t\ttry\n\t\t{\n\t\t\tthis.visited = new Object();\n\t\t\tthis.node = this.dfs(this.root, parent);\n\t\t\t\n\t\t\tif (this.alignRanks)\n\t\t\t{\n\t\t\t\tthis.maxRankHeight = [];\n\t\t\t\tthis.findRankHeights(this.node, 0);\n\t\t\t\tthis.setCellHeights(this.node, 0);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.node != null)\n\t\t\t{\n\t\t\t\tthis.layout(this.node);\n\t\t\t\tvar x0 = this.graph.gridSize;\n\t\t\t\tvar y0 = x0;\n\t\t\t\t\n\t\t\t\tif (!this.moveTree)\n\t\t\t\t{\n\t\t\t\t\tvar g = this.getVertexBounds(this.root);\n\t\t\t\t\t\n\t\t\t\t\tif (g != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx0 = g.x;\n\t\t\t\t\t\ty0 = g.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bounds = null;\n\t\t\t\t\n\t\t\t\tif (this.isHorizontal())\n\t\t\t\t{\n\t\t\t\t\tbounds = this.horizontalLayout(this.node, x0, y0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbounds = this.verticalLayout(this.node, null, x0, y0);\n\t\t\t\t}\n\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tvar dx = 0;\n\t\t\t\t\tvar dy = 0;\n\n\t\t\t\t\tif (bounds.x < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx = Math.abs(x0 - bounds.x);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bounds.y < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy = Math.abs(y0 - bounds.y);\t\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dx != 0 || dy != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.moveNode(this.node, dx, dy);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.resizeParent)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.adjustParents();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.edgeRouting)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Iterate through all edges setting their positions\n\t\t\t\t\t\tthis.localEdgeProcessing(this.node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Maintaining parent location\n\t\t\t\tif (this.parentX != null && this.parentY != null)\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\tgeo.x = this.parentX;\n\t\t\t\t\t\tgeo.y = this.parentY;\n\t\t\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: moveNode\n * \n * Moves the specified node and all of its children by the given amount.\n */\nmxCompactTreeLayout.prototype.moveNode = function(node, dx, dy)\n{\n\tnode.x += dx;\n\tnode.y += dy;\n\tthis.apply(node);\n\t\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.moveNode(child, dx, dy);\n\t\tchild = child.next;\n\t}\n};\n\n\n/**\n * Function: sortOutgoingEdges\n * \n * Called if <sortEdges> is true to sort the array of outgoing edges in place.\n */\nmxCompactTreeLayout.prototype.sortOutgoingEdges = function(source, edges)\n{\n\tvar lookup = new mxDictionary();\n\t\n\tedges.sort(function(e1, e2)\n\t{\n\t\tvar end1 = e1.getTerminal(e1.getTerminal(false) == source);\n\t\tvar p1 = lookup.get(end1);\n\t\t\n\t\tif (p1 == null)\n\t\t{\n\t\t\tp1 = mxCellPath.create(end1).split(mxCellPath.PATH_SEPARATOR);\n\t\t\tlookup.put(end1, p1);\n\t\t}\n\n\t\tvar end2 = e2.getTerminal(e2.getTerminal(false) == source);\n\t\tvar p2 = lookup.get(end2);\n\t\t\n\t\tif (p2 == null)\n\t\t{\n\t\t\tp2 = mxCellPath.create(end2).split(mxCellPath.PATH_SEPARATOR);\n\t\t\tlookup.put(end2, p2);\n\t\t}\n\n\t\treturn mxCellPath.compare(p1, p2);\n\t});\n};\n\n/**\n * Function: findRankHeights\n * \n * Stores the maximum height (relative to the layout\n * direction) of cells in each rank\n */\nmxCompactTreeLayout.prototype.findRankHeights = function(node, rank)\n{\n\tif (this.maxRankHeight[rank] == null || this.maxRankHeight[rank] < node.height)\n\t{\n\t\tthis.maxRankHeight[rank] = node.height;\n\t}\n\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.findRankHeights(child, rank + 1);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: setCellHeights\n * \n * Set the cells heights (relative to the layout\n * direction) when the tops of each rank are to be aligned\n */\nmxCompactTreeLayout.prototype.setCellHeights = function(node, rank)\n{\n\tif (this.maxRankHeight[rank] != null && this.maxRankHeight[rank] > node.height)\n\t{\n\t\tnode.height = this.maxRankHeight[rank];\n\t}\n\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.setCellHeights(child, rank + 1);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: dfs\n * \n * Does a depth first search starting at the specified cell.\n * Makes sure the specified parent is never left by the\n * algorithm.\n */\nmxCompactTreeLayout.prototype.dfs = function(cell, parent)\n{\n\tvar id = mxCellPath.create(cell);\n\tvar node = null;\n\t\n\tif (cell != null && this.visited[id] == null && !this.isVertexIgnored(cell))\n\t{\n\t\tthis.visited[id] = cell;\n\t\tnode = this.createNode(cell);\n\n\t\tvar model = this.graph.getModel();\n\t\tvar prev = null;\n\t\tvar out = this.graph.getEdges(cell, parent, this.invert, !this.invert, false, true);\n\t\tvar view = this.graph.getView();\n\t\t\n\t\tif (this.sortEdges)\n\t\t{\n\t\t\tthis.sortOutgoingEdges(cell, out);\n\t\t}\n\n\t\tfor (var i = 0; i < out.length; i++)\n\t\t{\n\t\t\tvar edge = out[i];\n\t\t\t\n\t\t\tif (!this.isEdgeIgnored(edge))\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.setEdgePoints(edge, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.edgeRouting)\n\t\t\t\t{\n\t\t\t\t\tthis.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\tthis.setEdgePoints(edge, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Checks if terminal in same swimlane\n\t\t\t\tvar state = view.getState(edge);\n\t\t\t\tvar target = (state != null) ? state.getVisibleTerminal(this.invert) : view.getVisibleTerminal(edge, this.invert);\n\t\t\t\tvar tmp = this.dfs(target, parent);\n\t\t\t\t\n\t\t\t\tif (tmp != null && model.getGeometry(target) != null)\n\t\t\t\t{\n\t\t\t\t\tif (prev == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.child = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprev.next = tmp;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tprev = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: layout\n * \n * Starts the actual compact tree layout algorithm\n * at the given node.\n */\nmxCompactTreeLayout.prototype.layout = function(node)\n{\n\tif (node != null)\n\t{\n\t\tvar child = node.child;\n\t\t\n\t\twhile (child != null)\n\t\t{\n\t\t\tthis.layout(child);\n\t\t\tchild = child.next;\n\t\t}\n\t\t\n\t\tif (node.child != null)\n\t\t{\n\t\t\tthis.attachParent(node, this.join(node));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.layoutLeaf(node);\n\t\t}\n\t}\n};\n\n/**\n * Function: horizontalLayout\n */\nmxCompactTreeLayout.prototype.horizontalLayout = function(node, x0, y0, bounds)\n{\n\tnode.x += x0 + node.offsetX;\n\tnode.y += y0 + node.offsetY;\n\tbounds = this.apply(node, bounds);\n\tvar child = node.child;\n\t\n\tif (child != null)\n\t{\n\t\tbounds = this.horizontalLayout(child, node.x, node.y, bounds);\n\t\tvar siblingOffset = node.y + child.offsetY;\n\t\tvar s = child.next;\n\t\t\n\t\twhile (s != null)\n\t\t{\n\t\t\tbounds = this.horizontalLayout(s, node.x + child.offsetX, siblingOffset, bounds);\n\t\t\tsiblingOffset += s.offsetY;\n\t\t\ts = s.next;\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\t\n/**\n * Function: verticalLayout\n */\nmxCompactTreeLayout.prototype.verticalLayout = function(node, parent, x0, y0, bounds)\n{\n\tnode.x += x0 + node.offsetY;\n\tnode.y += y0 + node.offsetX;\n\tbounds = this.apply(node, bounds);\n\tvar child = node.child;\n\t\n\tif (child != null)\n\t{\n\t\tbounds = this.verticalLayout(child, node, node.x, node.y, bounds);\n\t\tvar siblingOffset = node.x + child.offsetY;\n\t\tvar s = child.next;\n\t\t\n\t\twhile (s != null)\n\t\t{\n\t\t\tbounds = this.verticalLayout(s, node, siblingOffset, node.y + child.offsetX, bounds);\n\t\t\tsiblingOffset += s.offsetY;\n\t\t\ts = s.next;\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: attachParent\n */\nmxCompactTreeLayout.prototype.attachParent = function(node, height)\n{\n\tvar x = this.nodeDistance + this.levelDistance;\n\tvar y2 = (height - node.width) / 2 - this.nodeDistance;\n\tvar y1 = y2 + node.width + 2 * this.nodeDistance - height;\n\t\n\tnode.child.offsetX = x + node.height;\n\tnode.child.offsetY = y1;\n\t\n\tnode.contour.upperHead = this.createLine(node.height, 0,\n\t\tthis.createLine(x, y1, node.contour.upperHead));\n\tnode.contour.lowerHead = this.createLine(node.height, 0,\n\t\tthis.createLine(x, y2, node.contour.lowerHead));\n};\n\n/**\n * Function: layoutLeaf\n */\nmxCompactTreeLayout.prototype.layoutLeaf = function(node)\n{\n\tvar dist = 2 * this.nodeDistance;\n\t\n\tnode.contour.upperTail = this.createLine(\n\t\tnode.height + dist, 0);\n\tnode.contour.upperHead = node.contour.upperTail;\n\tnode.contour.lowerTail = this.createLine(\n\t\t0, -node.width - dist);\n\tnode.contour.lowerHead = this.createLine(\n\t\tnode.height + dist, 0, node.contour.lowerTail);\n};\n\n/**\n * Function: join\n */\nmxCompactTreeLayout.prototype.join = function(node)\n{\n\tvar dist = 2 * this.nodeDistance;\n\t\n\tvar child = node.child;\n\tnode.contour = child.contour;\n\tvar h = child.width + dist;\n\tvar sum = h;\n\tchild = child.next;\n\t\n\twhile (child != null)\n\t{\n\t\tvar d = this.merge(node.contour, child.contour);\n\t\tchild.offsetY = d + h;\n\t\tchild.offsetX = 0;\n\t\th = child.width + dist;\n\t\tsum += d + h;\n\t\tchild = child.next;\n\t}\n\t\n\treturn sum;\n};\n\n/**\n * Function: merge\n */\nmxCompactTreeLayout.prototype.merge = function(p1, p2)\n{\n\tvar x = 0;\n\tvar y = 0;\n\tvar total = 0;\n\t\n\tvar upper = p1.lowerHead;\n\tvar lower = p2.upperHead;\n\t\n\twhile (lower != null && upper != null)\n\t{\n\t\tvar d = this.offset(x, y, lower.dx, lower.dy,\n\t\t\tupper.dx, upper.dy);\n\t\ty += d;\n\t\ttotal += d;\n\t\t\n\t\tif (x + lower.dx <= upper.dx)\n\t\t{\n\t\t\tx += lower.dx;\n\t\t\ty += lower.dy;\n\t\t\tlower = lower.next;\n\t\t}\n\t\telse\n\t\t{\t\t\t\t\n\t\t\tx -= upper.dx;\n\t\t\ty -= upper.dy;\n\t\t\tupper = upper.next;\n\t\t}\n\t}\n\t\n\tif (lower != null)\n\t{\n\t\tvar b = this.bridge(p1.upperTail, 0, 0, lower, x, y);\n\t\tp1.upperTail = (b.next != null) ? p2.upperTail : b;\n\t\tp1.lowerTail = p2.lowerTail;\n\t}\n\telse\n\t{\n\t\tvar b = this.bridge(p2.lowerTail, x, y, upper, 0, 0);\n\t\t\n\t\tif (b.next == null)\n\t\t{\n\t\t\tp1.lowerTail = b;\n\t\t}\n\t}\n\t\n\tp1.lowerHead = p2.lowerHead;\n\t\n\treturn total;\n};\n\n/**\n * Function: offset\n */\nmxCompactTreeLayout.prototype.offset = function(p1, p2, a1, a2, b1, b2)\n{\n\tvar d = 0;\n\t\n\tif (b1 <= p1 || p1 + a1 <= 0)\n\t{\n\t\treturn 0;\n\t}\n\n\tvar t = b1 * a2 - a1 * b2;\n\t\n\tif (t > 0)\n\t{\n\t\tif (p1 < 0)\n\t\t{\n\t\t\tvar s = p1 * a2;\n\t\t\td = s / a1 - p2;\n\t\t}\n\t\telse if (p1 > 0)\n\t\t{\n\t\t\tvar s = p1 * b2;\n\t\t\td = s / b1 - p2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\td = -p2;\n\t\t}\n\t}\n\telse if (b1 < p1 + a1)\n\t{\n\t\tvar s = (b1 - p1) * a2;\n\t\td = b2 - (p2 + s / a1);\n\t}\n\telse if (b1 > p1 + a1)\n\t{\n\t\tvar s = (a1 + p1) * b2;\n\t\td = s / b1 - (p2 + a2);\n\t}\n\telse\n\t{\n\t\td = b2 - (p2 + a2);\n\t}\n\n\tif (d > 0)\n\t{\n\t\treturn d;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n\n/**\n * Function: bridge\n */\nmxCompactTreeLayout.prototype.bridge = function(line1, x1, y1, line2, x2, y2)\n{\n\tvar dx = x2 + line2.dx - x1;\n\tvar dy = 0;\n\tvar s = 0;\n\t\n\tif (line2.dx == 0)\n\t{\n\t\tdy = line2.dy;\n\t}\n\telse\n\t{\n\t\ts = dx * line2.dy;\n\t\tdy = s / line2.dx;\n\t}\n\t\n\tvar r = this.createLine(dx, dy, line2.next);\n\tline1.next = this.createLine(0, y2 + line2.dy - dy - y1, r);\n\t\n\treturn r;\n};\n\n/**\n * Function: createNode\n */\nmxCompactTreeLayout.prototype.createNode = function(cell)\n{\n\tvar node = new Object();\n\tnode.cell = cell;\n\tnode.x = 0;\n\tnode.y = 0;\n\tnode.width = 0;\n\tnode.height = 0;\n\t\n\tvar geo = this.getVertexBounds(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tif (this.isHorizontal())\n\t\t{\n\t\t\tnode.width = geo.height;\n\t\t\tnode.height = geo.width;\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.width = geo.width;\n\t\t\tnode.height = geo.height;\n\t\t}\n\t}\n\t\n\tnode.offsetX = 0;\n\tnode.offsetY = 0;\n\tnode.contour = new Object();\n\t\n\treturn node;\n};\n\n/**\n * Function: apply\n */\nmxCompactTreeLayout.prototype.apply = function(node, bounds)\n{\n\tvar model = this.graph.getModel();\n\tvar cell = node.cell;\n\tvar g = model.getGeometry(cell);\n\n\tif (cell != null && g != null)\n\t{\n\t\tif (this.isVertexMovable(cell))\n\t\t{\n\t\t\tg = this.setVertexLocation(cell, node.x, node.y);\n\t\t\t\n\t\t\tif (this.resizeParent)\n\t\t\t{\n\t\t\t\tvar parent = model.getParent(cell);\n\t\t\t\tvar id = mxCellPath.create(parent);\n\t\t\t\t\n\t\t\t\t// Implements set semantic\n\t\t\t\tif (this.parentsChanged[id] == null)\n\t\t\t\t{\n\t\t\t\t\tthis.parentsChanged[id] = parent;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (bounds == null)\n\t\t{\n\t\t\tbounds = new mxRectangle(g.x, g.y, g.width, g.height);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds = new mxRectangle(Math.min(bounds.x, g.x),\n\t\t\t\tMath.min(bounds.y, g.y),\n\t\t\t\tMath.max(bounds.x + bounds.width, g.x + g.width),\n\t\t\t\tMath.max(bounds.y + bounds.height, g.y + g.height));\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: createLine\n */\nmxCompactTreeLayout.prototype.createLine = function(dx, dy, next)\n{\n\tvar line = new Object();\n\tline.dx = dx;\n\tline.dy = dy;\n\tline.next = next;\n\t\n\treturn line;\n};\n\n/**\n * Function: adjustParents\n * \n * Adjust parent cells whose child geometries have changed. The default \n * implementation adjusts the group to just fit around the children with \n * a padding.\n */\nmxCompactTreeLayout.prototype.adjustParents = function()\n{\n\tvar tmp = [];\n\t\n\tfor (var id in this.parentsChanged)\n\t{\n\t\ttmp.push(this.parentsChanged[id]);\n\t}\n\t\n\tthis.arrangeGroups(mxUtils.sortCells(tmp, true), this.groupPadding, this.groupPaddingTop,\n\t\tthis.groupPaddingRight, this.groupPaddingBottom, this.groupPaddingLeft);\n};\n\n/**\n * Function: localEdgeProcessing\n *\n * Moves the specified node and all of its children by the given amount.\n */\nmxCompactTreeLayout.prototype.localEdgeProcessing = function(node)\n{\n\tthis.processNodeOutgoing(node);\n\tvar child = node.child;\n\n\twhile (child != null)\n\t{\n\t\tthis.localEdgeProcessing(child);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: localEdgeProcessing\n *\n * Separates the x position of edges as they connect to vertices\n */\nmxCompactTreeLayout.prototype.processNodeOutgoing = function(node)\n{\n\tvar child = node.child;\n\tvar parentCell = node.cell;\n\n\tvar childCount = 0;\n\tvar sortedCells = [];\n\n\twhile (child != null)\n\t{\n\t\tchildCount++;\n\n\t\tvar sortingCriterion = child.x;\n\n\t\tif (this.horizontal)\n\t\t{\n\t\t\tsortingCriterion = child.y;\n\t\t}\n\n\t\tsortedCells.push(new WeightedCellSorter(child, sortingCriterion));\n\t\tchild = child.next;\n\t}\n\n\tsortedCells.sort(WeightedCellSorter.prototype.compare);\n\n\tvar availableWidth = node.width;\n\n\tvar requiredWidth = (childCount + 1) * this.prefHozEdgeSep;\n\n\t// Add a buffer on the edges of the vertex if the edge count allows\n\tif (availableWidth > requiredWidth + (2 * this.prefHozEdgeSep))\n\t{\n\t\tavailableWidth -= 2 * this.prefHozEdgeSep;\n\t}\n\n\tvar edgeSpacing = availableWidth / childCount;\n\n\tvar currentXOffset = edgeSpacing / 2.0;\n\n\tif (availableWidth > requiredWidth + (2 * this.prefHozEdgeSep))\n\t{\n\t\tcurrentXOffset += this.prefHozEdgeSep;\n\t}\n\n\tvar currentYOffset = this.minEdgeJetty - this.prefVertEdgeOff;\n\tvar maxYOffset = 0;\n\n\tvar parentBounds = this.getVertexBounds(parentCell);\n\tchild = node.child;\n\n\tfor (var j = 0; j < sortedCells.length; j++)\n\t{\n\t\tvar childCell = sortedCells[j].cell.cell;\n\t\tvar childBounds = this.getVertexBounds(childCell);\n\n\t\tvar edges = this.graph.getEdgesBetween(parentCell,\n\t\t\t\tchildCell, false);\n\t\t\n\t\tvar newPoints = [];\n\t\tvar x = 0;\n\t\tvar y = 0;\n\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tif (this.horizontal)\n\t\t\t{\n\t\t\t\t// Use opposite co-ords, calculation was done for \n\t\t\t\t// \n\t\t\t\tx = parentBounds.x + parentBounds.width;\n\t\t\t\ty = parentBounds.y + currentXOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tx = parentBounds.x + parentBounds.width\n\t\t\t\t\t\t+ currentYOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\ty = childBounds.y + childBounds.height / 2.0;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tthis.setEdgePoints(edges[i], newPoints);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx = parentBounds.x + currentXOffset;\n\t\t\t\ty = parentBounds.y + parentBounds.height;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\ty = parentBounds.y + parentBounds.height\n\t\t\t\t\t\t+ currentYOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tx = childBounds.x + childBounds.width / 2.0;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tthis.setEdgePoints(edges[i], newPoints);\n\t\t\t}\n\t\t}\n\n\t\tif (j < childCount / 2)\n\t\t{\n\t\t\tcurrentYOffset += this.prefVertEdgeOff;\n\t\t}\n\t\telse if (j > childCount / 2)\n\t\t{\n\t\t\tcurrentYOffset -= this.prefVertEdgeOff;\n\t\t}\n\t\t// Ignore the case if equals, this means the second of 2\n\t\t// jettys with the same y (even number of edges)\n\n\t\t//\t\t\t\t\t\t\t\tpos[k * 2] = currentX;\n\t\tcurrentXOffset += edgeSpacing;\n\t\t//\t\t\t\t\t\t\t\tpos[k * 2 + 1] = currentYOffset;\n\n\t\tmaxYOffset = Math.max(maxYOffset, currentYOffset);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRadialTreeLayout\n * \n * Extends <mxGraphLayout> to implement a radial tree algorithm. This\n * layout is suitable for graphs that have no cycles (trees). Vertices that are\n * not connected to the tree will be ignored by this layout.\n * \n * Example:\n * \n * (code)\n * var layout = new mxRadialTreeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxRadialTreeLayout\n * \n * Constructs a new radial tree layout for the specified graph\n */\nfunction mxRadialTreeLayout(graph)\n{\n\tmxCompactTreeLayout.call(this, graph , false);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxUtils.extend(mxRadialTreeLayout, mxCompactTreeLayout);\n\n/**\n * Variable: angleOffset\n *\n * The initial offset to compute the angle position.\n */\nmxRadialTreeLayout.prototype.angleOffset = 0.5;\n\n/**\n * Variable: rootx\n *\n * The X co-ordinate of the root cell\n */\nmxRadialTreeLayout.prototype.rootx = 0;\n\n/**\n * Variable: rooty\n *\n * The Y co-ordinate of the root cell\n */\nmxRadialTreeLayout.prototype.rooty = 0;\n\n/**\n * Variable: levelDistance\n *\n * Holds the levelDistance. Default is 120.\n */\nmxRadialTreeLayout.prototype.levelDistance = 120;\n\n/**\n * Variable: nodeDistance\n *\n * Holds the nodeDistance. Default is 10.\n */\nmxRadialTreeLayout.prototype.nodeDistance = 10;\n\n/**\n * Variable: autoRadius\n * \n * Specifies if the radios should be computed automatically\n */\nmxRadialTreeLayout.prototype.autoRadius = false;\n\n/**\n * Variable: sortEdges\n * \n * Specifies if edges should be sorted according to the order of their\n * opposite terminal cell in the model.\n */\nmxRadialTreeLayout.prototype.sortEdges = false;\n\n/**\n * Variable: rowMinX\n * \n * Array of leftmost x coordinate of each row\n */\nmxRadialTreeLayout.prototype.rowMinX = [];\n\n/**\n * Variable: rowMaxX\n * \n * Array of rightmost x coordinate of each row\n */\nmxRadialTreeLayout.prototype.rowMaxX = [];\n\n/**\n * Variable: rowMinCenX\n * \n * Array of x coordinate of leftmost vertex of each row\n */\nmxRadialTreeLayout.prototype.rowMinCenX = [];\n\n/**\n * Variable: rowMaxCenX\n * \n * Array of x coordinate of rightmost vertex of each row\n */\nmxRadialTreeLayout.prototype.rowMaxCenX = [];\n\n/**\n * Variable: rowRadi\n * \n * Array of y deltas of each row behind root vertex, also the radius in the tree\n */\nmxRadialTreeLayout.prototype.rowRadi = [];\n\n/**\n * Variable: row\n * \n * Array of vertices on each row\n */\nmxRadialTreeLayout.prototype.row = [];\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxRadialTreeLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * If the parent has any connected edges, then it is used as the root of\n * the tree. Else, <mxGraph.findTreeRoots> will be used to find a suitable\n * root node within the set of children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be laid out.\n * root - Optional <mxCell> that will be used as the root of the tree.\n */\nmxRadialTreeLayout.prototype.execute = function(parent, root)\n{\n\tthis.parent = parent;\n\t\n\tthis.useBoundingBox = false;\n\tthis.edgeRouting = false;\n\t//this.horizontal = false;\n\n\tmxCompactTreeLayout.prototype.execute.apply(this, arguments);\n\t\n\tvar bounds = null;\n\tvar rootBounds = this.getVertexBounds(this.root);\n\tthis.centerX = rootBounds.x + rootBounds.width / 2;\n\tthis.centerY = rootBounds.y + rootBounds.height / 2;\n\n\t// Calculate the bounds of the involved vertices directly from the values set in the compact tree\n\tfor (var vertex in this.visited)\n\t{\n\t\tvar vertexBounds = this.getVertexBounds(this.visited[vertex]);\n\t\tbounds = (bounds != null) ? bounds : vertexBounds.clone();\n\t\tbounds.add(vertexBounds);\n\t}\n\t\n\tthis.calcRowDims([this.node], 0);\n\t\n\tvar maxLeftGrad = 0;\n\tvar maxRightGrad = 0;\n\n\t// Find the steepest left and right gradients\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tvar leftGrad = (this.centerX - this.rowMinX[i] - this.nodeDistance) / this.rowRadi[i];\n\t\tvar rightGrad = (this.rowMaxX[i] - this.centerX - this.nodeDistance) / this.rowRadi[i];\n\t\t\n\t\tmaxLeftGrad = Math.max (maxLeftGrad, leftGrad);\n\t\tmaxRightGrad = Math.max (maxRightGrad, rightGrad);\n\t}\n\t\n\t// Extend out row so they meet the maximum gradient and convert to polar co-ords\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tvar xLeftLimit = this.centerX - this.nodeDistance - maxLeftGrad * this.rowRadi[i];\n\t\tvar xRightLimit = this.centerX + this.nodeDistance + maxRightGrad * this.rowRadi[i];\n\t\tvar fullWidth = xRightLimit - xLeftLimit;\n\t\t\n\t\tfor (var j = 0; j < this.row[i].length; j ++)\n\t\t{\n\t\t\tvar row = this.row[i];\n\t\t\tvar node = row[j];\n\t\t\tvar vertexBounds = this.getVertexBounds(node.cell);\n\t\t\tvar xProportion = (vertexBounds.x + vertexBounds.width / 2 - xLeftLimit) / (fullWidth);\n\t\t\tvar theta =  2 * Math.PI * xProportion;\n\t\t\tnode.theta = theta;\n\t\t}\n\t}\n\n\t// Post-process from outside inwards to try to align parents with children\n\tfor (var i = this.row.length - 2; i >= 0; i--)\n\t{\n\t\tvar row = this.row[i];\n\t\t\n\t\tfor (var j = 0; j < row.length; j++)\n\t\t{\n\t\t\tvar node = row[j];\n\t\t\tvar child = node.child;\n\t\t\tvar counter = 0;\n\t\t\tvar totalTheta = 0;\n\t\t\t\n\t\t\twhile (child != null)\n\t\t\t{\n\t\t\t\ttotalTheta += child.theta;\n\t\t\t\tcounter++;\n\t\t\t\tchild = child.next;\n\t\t\t}\n\t\t\t\n\t\t\tif (counter > 0)\n\t\t\t{\n\t\t\t\tvar averTheta = totalTheta / counter;\n\t\t\t\t\n\t\t\t\tif (averTheta > node.theta && j < row.length - 1)\n\t\t\t\t{\n\t\t\t\t\tvar nextTheta = row[j+1].theta;\n\t\t\t\t\tnode.theta = Math.min (averTheta, nextTheta - Math.PI/10);\n\t\t\t\t}\n\t\t\t\telse if (averTheta < node.theta && j > 0 )\n\t\t\t\t{\n\t\t\t\t\tvar lastTheta = row[j-1].theta;\n\t\t\t\t\tnode.theta = Math.max (averTheta, lastTheta + Math.PI/10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Set locations\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tfor (var j = 0; j < this.row[i].length; j ++)\n\t\t{\n\t\t\tvar row = this.row[i];\n\t\t\tvar node = row[j];\n\t\t\tvar vertexBounds = this.getVertexBounds(node.cell);\n\t\t\tthis.setVertexLocation(node.cell,\n\t\t\t\t\t\t\t\t\tthis.centerX - vertexBounds.width / 2 + this.rowRadi[i] * Math.cos(node.theta),\n\t\t\t\t\t\t\t\t\tthis.centerY - vertexBounds.height / 2 + this.rowRadi[i] * Math.sin(node.theta));\n\t\t}\n\t}\n};\n\n/**\n * Function: calcRowDims\n * \n * Recursive function to calculate the dimensions of each row\n * \n * Parameters:\n * \n * row - Array of internal nodes, the children of which are to be processed.\n * rowNum - Integer indicating which row is being processed.\n */\nmxRadialTreeLayout.prototype.calcRowDims = function(row, rowNum)\n{\n\tif (row == null || row.length == 0)\n\t{\n\t\treturn;\n\t}\n\n\t// Place root's children proportionally around the first level\n\tthis.rowMinX[rowNum] = this.centerX;\n\tthis.rowMaxX[rowNum] = this.centerX;\n\tthis.rowMinCenX[rowNum] = this.centerX;\n\tthis.rowMaxCenX[rowNum] = this.centerX;\n\tthis.row[rowNum] = [];\n\n\tvar rowHasChildren = false;\n\n\tfor (var i = 0; i < row.length; i++)\n\t{\n\t\tvar child = row[i] != null ? row[i].child : null;\n\n\t\twhile (child != null)\n\t\t{\n\t\t\tvar cell = child.cell;\n\t\t\tvar vertexBounds = this.getVertexBounds(cell);\n\t\t\t\n\t\t\tthis.rowMinX[rowNum] = Math.min(vertexBounds.x, this.rowMinX[rowNum]);\n\t\t\tthis.rowMaxX[rowNum] = Math.max(vertexBounds.x + vertexBounds.width, this.rowMaxX[rowNum]);\n\t\t\tthis.rowMinCenX[rowNum] = Math.min(vertexBounds.x + vertexBounds.width / 2, this.rowMinCenX[rowNum]);\n\t\t\tthis.rowMaxCenX[rowNum] = Math.max(vertexBounds.x + vertexBounds.width / 2, this.rowMaxCenX[rowNum]);\n\t\t\tthis.rowRadi[rowNum] = vertexBounds.y - this.getVertexBounds(this.root).y;\n\t\n\t\t\tif (child.child != null)\n\t\t\t{\n\t\t\t\trowHasChildren = true;\n\t\t\t}\n\t\t\t\n\t\t\tthis.row[rowNum].push(child);\n\t\t\tchild = child.next;\n\t\t}\n\t}\n\t\n\tif (rowHasChildren)\n\t{\n\t\tthis.calcRowDims(this.row[rowNum], rowNum + 1);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxFastOrganicLayout\n * \n * Extends <mxGraphLayout> to implement a fast organic layout algorithm.\n * The vertices need to be connected for this layout to work, vertices\n * with no connections are ignored.\n * \n * Example:\n * \n * (code)\n * var layout = new mxFastOrganicLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new fast organic layout for the specified graph.\n */\nfunction mxFastOrganicLayout(graph)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxFastOrganicLayout.prototype = new mxGraphLayout();\nmxFastOrganicLayout.prototype.constructor = mxFastOrganicLayout;\n\n/**\n * Variable: useInputOrigin\n * \n * Specifies if the top left corner of the input cells should be the origin\n * of the layout result. Default is true.\n */\nmxFastOrganicLayout.prototype.useInputOrigin = true;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxFastOrganicLayout.prototype.resetEdges = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxFastOrganicLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: forceConstant\n * \n * The force constant by which the attractive forces are divided and the\n * replusive forces are multiple by the square of. The value equates to the\n * average radius there is of free space around each node. Default is 50.\n */\nmxFastOrganicLayout.prototype.forceConstant = 50;\n\n/**\n * Variable: forceConstantSquared\n * \n * Cache of <forceConstant>^2 for performance.\n */\nmxFastOrganicLayout.prototype.forceConstantSquared = 0;\n\n/**\n * Variable: minDistanceLimit\n * \n * Minimal distance limit. Default is 2. Prevents of\n * dividing by zero.\n */\nmxFastOrganicLayout.prototype.minDistanceLimit = 2;\n\n/**\n * Variable: minDistanceLimit\n * \n * Minimal distance limit. Default is 2. Prevents of\n * dividing by zero.\n */\nmxFastOrganicLayout.prototype.maxDistanceLimit = 500;\n\n/**\n * Variable: minDistanceLimitSquared\n * \n * Cached version of <minDistanceLimit> squared.\n */\nmxFastOrganicLayout.prototype.minDistanceLimitSquared = 4;\n\n/**\n * Variable: initialTemp\n * \n * Start value of temperature. Default is 200.\n */\nmxFastOrganicLayout.prototype.initialTemp = 200;\n\n/**\n * Variable: temperature\n * \n * Temperature to limit displacement at later stages of layout.\n */\nmxFastOrganicLayout.prototype.temperature = 0;\n\n/**\n * Variable: maxIterations\n * \n * Total number of iterations to run the layout though.\n */\nmxFastOrganicLayout.prototype.maxIterations = 0;\n\n/**\n * Variable: iteration\n * \n * Current iteration count.\n */\nmxFastOrganicLayout.prototype.iteration = 0;\n\n/**\n * Variable: vertexArray\n * \n * An array of all vertices to be laid out.\n */\nmxFastOrganicLayout.prototype.vertexArray;\n\n/**\n * Variable: dispX\n * \n * An array of locally stored X co-ordinate displacements for the vertices.\n */\nmxFastOrganicLayout.prototype.dispX;\n\n/**\n * Variable: dispY\n * \n * An array of locally stored Y co-ordinate displacements for the vertices.\n */\nmxFastOrganicLayout.prototype.dispY;\n\n/**\n * Variable: cellLocation\n * \n * An array of locally stored co-ordinate positions for the vertices.\n */\nmxFastOrganicLayout.prototype.cellLocation;\n\n/**\n * Variable: radius\n * \n * The approximate radius of each cell, nodes only.\n */\nmxFastOrganicLayout.prototype.radius;\n\n/**\n * Variable: radiusSquared\n * \n * The approximate radius squared of each cell, nodes only.\n */\nmxFastOrganicLayout.prototype.radiusSquared;\n\n/**\n * Variable: isMoveable\n * \n * Array of booleans representing the movable states of the vertices.\n */\nmxFastOrganicLayout.prototype.isMoveable;\n\n/**\n * Variable: neighbours\n * \n * Local copy of cell neighbours.\n */\nmxFastOrganicLayout.prototype.neighbours;\n\n/**\n * Variable: indices\n * \n * Hashtable from cells to local indices.\n */\nmxFastOrganicLayout.prototype.indices;\n\n/**\n * Variable: allowedToRun\n * \n * Boolean flag that specifies if the layout is allowed to run. If this is\n * set to false, then the layout exits in the following iteration.\n */\nmxFastOrganicLayout.prototype.allowedToRun = true;\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxFastOrganicLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>. This operates on all children of the\n * given parent where <isVertexIgnored> returns false.\n */\nmxFastOrganicLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tthis.vertexArray = [];\n\tvar cells = this.graph.getChildVertices(parent);\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (!this.isVertexIgnored(cells[i]))\n\t\t{\n\t\t\tthis.vertexArray.push(cells[i]);\n\t\t}\n\t}\n\t\n\tvar initialBounds = (this.useInputOrigin) ?\n\t\t\tthis.graph.getBoundingBoxFromGeometry(this.vertexArray) :\n\t\t\t\tnull;\n\tvar n = this.vertexArray.length;\n\n\tthis.indices = [];\n\tthis.dispX = [];\n\tthis.dispY = [];\n\tthis.cellLocation = [];\n\tthis.isMoveable = [];\n\tthis.neighbours = [];\n\tthis.radius = [];\n\tthis.radiusSquared = [];\n\n\tif (this.forceConstant < 0.001)\n\t{\n\t\tthis.forceConstant = 0.001;\n\t}\n\n\tthis.forceConstantSquared = this.forceConstant * this.forceConstant;\n\n\t// Create a map of vertices first. This is required for the array of\n\t// arrays called neighbours which holds, for each vertex, a list of\n\t// ints which represents the neighbours cells to that vertex as\n\t// the indices into vertexArray\n\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t{\n\t\tvar vertex = this.vertexArray[i];\n\t\tthis.cellLocation[i] = [];\n\t\t\n\t\t// Set up the mapping from array indices to cells\n\t\tvar id = mxObjectIdentity.get(vertex);\n\t\tthis.indices[id] = i;\n\t\tvar bounds = this.getVertexBounds(vertex);\n\n\t\t// Set the X,Y value of the internal version of the cell to\n\t\t// the center point of the vertex for better positioning\n\t\tvar width = bounds.width;\n\t\tvar height = bounds.height;\n\t\t\n\t\t// Randomize (0, 0) locations\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\t\n\t\tthis.cellLocation[i][0] = x + width / 2.0;\n\t\tthis.cellLocation[i][1] = y + height / 2.0;\n\t\tthis.radius[i] = Math.min(width, height);\n\t\tthis.radiusSquared[i] = this.radius[i] * this.radius[i];\n\t}\n\n\t// Moves cell location back to top-left from center locations used in\n\t// algorithm, resetting the edge points is part of the transaction\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < n; i++)\n\t\t{\n\t\t\tthis.dispX[i] = 0;\n\t\t\tthis.dispY[i] = 0;\n\t\t\tthis.isMoveable[i] = this.isVertexMovable(this.vertexArray[i]);\n\n\t\t\t// Get lists of neighbours to all vertices, translate the cells\n\t\t\t// obtained in indices into vertexArray and store as an array\n\t\t\t// against the orginial cell index\n\t\t\tvar edges = this.graph.getConnections(this.vertexArray[i], parent);\n\t\t\tvar cells = this.graph.getOpposites(edges, this.vertexArray[i]);\n\t\t\tthis.neighbours[i] = [];\n\n\t\t\tfor (var j = 0; j < cells.length; j++)\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.resetEdge(edges[j]);\n\t\t\t\t}\n\n\t\t\t    if (this.disableEdgeStyle)\n\t\t\t    {\n\t\t\t    \tthis.setEdgeStyleEnabled(edges[j], false);\n\t\t\t    }\n\n\t\t\t\t// Looks the cell up in the indices dictionary\n\t\t\t\tvar id = mxObjectIdentity.get(cells[j]);\n\t\t\t\tvar index = this.indices[id];\n\n\t\t\t\t// Check the connected cell in part of the vertex list to be\n\t\t\t\t// acted on by this layout\n\t\t\t\tif (index != null)\n\t\t\t\t{\n\t\t\t\t\tthis.neighbours[i][j] = index;\n\t\t\t\t}\n\n\t\t\t\t// Else if index of the other cell doesn't correspond to\n\t\t\t\t// any cell listed to be acted upon in this layout. Set\n\t\t\t\t// the index to the value of this vertex (a dummy self-loop)\n\t\t\t\t// so the attraction force of the edge is not calculated\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.neighbours[i][j] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.temperature = this.initialTemp;\n\n\t\t// If max number of iterations has not been set, guess it\n\t\tif (this.maxIterations == 0)\n\t\t{\n\t\t\tthis.maxIterations = 20 * Math.sqrt(n);\n\t\t}\n\t\t\n\t\t// Main iteration loop\n\t\tfor (this.iteration = 0; this.iteration < this.maxIterations; this.iteration++)\n\t\t{\n\t\t\tif (!this.allowedToRun)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// Calculate repulsive forces on all vertices\n\t\t\tthis.calcRepulsion();\n\n\t\t\t// Calculate attractive forces through edges\n\t\t\tthis.calcAttraction();\n\n\t\t\tthis.calcPositions();\n\t\t\tthis.reduceTemperature();\n\t\t}\n\n\t\tvar minx = null;\n\t\tvar miny = null;\n\t\t\n\t\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t\t{\n\t\t\tvar vertex = this.vertexArray[i];\n\t\t\t\n\t\t\tif (this.isVertexMovable(vertex))\n\t\t\t{\n\t\t\t\tvar bounds = this.getVertexBounds(vertex);\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tthis.cellLocation[i][0] -= bounds.width / 2.0;\n\t\t\t\t\tthis.cellLocation[i][1] -= bounds.height / 2.0;\n\t\t\t\t\t\n\t\t\t\t\tvar x = this.graph.snap(Math.round(this.cellLocation[i][0]));\n\t\t\t\t\tvar y = this.graph.snap(Math.round(this.cellLocation[i][1]));\n\t\t\t\t\t\n\t\t\t\t\tthis.setVertexLocation(vertex, x, y);\n\t\t\t\t\t\n\t\t\t\t\tif (minx == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tminx = x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tminx = Math.min(minx, x);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (miny == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tminy = y;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tminy = Math.min(miny, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Modifies the cloned geometries in-place. Not needed\n\t\t// to clone the geometries again as we're in the same\n\t\t// undoable change.\n\t\tvar dx = -(minx || 0) + 1;\n\t\tvar dy = -(miny || 0) + 1;\n\t\t\n\t\tif (initialBounds != null)\n\t\t{\n\t\t\tdx += initialBounds.x;\n\t\t\tdy += initialBounds.y;\n\t\t}\n\t\t\n\t\tthis.graph.moveCells(this.vertexArray, dx, dy);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: calcPositions\n * \n * Takes the displacements calculated for each cell and applies them to the\n * local cache of cell positions. Limits the displacement to the current\n * temperature.\n */\nmxFastOrganicLayout.prototype.calcPositions = function()\n{\n\tfor (var index = 0; index < this.vertexArray.length; index++)\n\t{\n\t\tif (this.isMoveable[index])\n\t\t{\n\t\t\t// Get the distance of displacement for this node for this\n\t\t\t// iteration\n\t\t\tvar deltaLength = Math.sqrt(this.dispX[index] * this.dispX[index] +\n\t\t\t\tthis.dispY[index] * this.dispY[index]);\n\n\t\t\tif (deltaLength < 0.001)\n\t\t\t{\n\t\t\t\tdeltaLength = 0.001;\n\t\t\t}\n\n\t\t\t// Scale down by the current temperature if less than the\n\t\t\t// displacement distance\n\t\t\tvar newXDisp = this.dispX[index] / deltaLength\n\t\t\t\t* Math.min(deltaLength, this.temperature);\n\n\t\t\tvar newYDisp = this.dispY[index] / deltaLength\n\t\t\t\t* Math.min(deltaLength, this.temperature);\n\n\t\t\t// reset displacements\n\t\t\tthis.dispX[index] = 0;\n\t\t\tthis.dispY[index] = 0;\n\n\t\t\t// Update the cached cell locations\n\t\t\tthis.cellLocation[index][0] += newXDisp;\n\t\t\tthis.cellLocation[index][1] += newYDisp;\n\t\t}\n\t}\n};\n\n/**\n * Function: calcAttraction\n * \n * Calculates the attractive forces between all laid out nodes linked by\n * edges\n */\nmxFastOrganicLayout.prototype.calcAttraction = function()\n{\n\t// Check the neighbours of each vertex and calculate the attractive\n\t// force of the edge connecting them\n\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t{\n\t\tfor (var k = 0; k < this.neighbours[i].length; k++)\n\t\t{\n\t\t\t// Get the index of the othe cell in the vertex array\n\t\t\tvar j = this.neighbours[i][k];\n\t\t\t\n\t\t\t// Do not proceed self-loops\n\t\t\tif (i != j &&\n\t\t\t\tthis.isMoveable[i] &&\n\t\t\t\tthis.isMoveable[j])\n\t\t\t{\n\t\t\t\tvar xDelta = this.cellLocation[i][0] - this.cellLocation[j][0];\n\t\t\t\tvar yDelta = this.cellLocation[i][1] - this.cellLocation[j][1];\n\n\t\t\t\t// The distance between the nodes\n\t\t\t\tvar deltaLengthSquared = xDelta * xDelta + yDelta\n\t\t\t\t\t\t* yDelta - this.radiusSquared[i] - this.radiusSquared[j];\n\n\t\t\t\tif (deltaLengthSquared < this.minDistanceLimitSquared)\n\t\t\t\t{\n\t\t\t\t\tdeltaLengthSquared = this.minDistanceLimitSquared;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar deltaLength = Math.sqrt(deltaLengthSquared);\n\t\t\t\tvar force = (deltaLengthSquared) / this.forceConstant;\n\n\t\t\t\tvar displacementX = (xDelta / deltaLength) * force;\n\t\t\t\tvar displacementY = (yDelta / deltaLength) * force;\n\t\t\t\t\n\t\t\t\tthis.dispX[i] -= displacementX;\n\t\t\t\tthis.dispY[i] -= displacementY;\n\t\t\t\t\n\t\t\t\tthis.dispX[j] += displacementX;\n\t\t\t\tthis.dispY[j] += displacementY;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: calcRepulsion\n * \n * Calculates the repulsive forces between all laid out nodes\n */\nmxFastOrganicLayout.prototype.calcRepulsion = function()\n{\n\tvar vertexCount = this.vertexArray.length;\n\n\tfor (var i = 0; i < vertexCount; i++)\n\t{\n\t\tfor (var j = i; j < vertexCount; j++)\n\t\t{\n\t\t\t// Exits if the layout is no longer allowed to run\n\t\t\tif (!this.allowedToRun)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (j != i &&\n\t\t\t\tthis.isMoveable[i] &&\n\t\t\t\tthis.isMoveable[j])\n\t\t\t{\n\t\t\t\tvar xDelta = this.cellLocation[i][0] - this.cellLocation[j][0];\n\t\t\t\tvar yDelta = this.cellLocation[i][1] - this.cellLocation[j][1];\n\n\t\t\t\tif (xDelta == 0)\n\t\t\t\t{\n\t\t\t\t\txDelta = 0.01 + Math.random();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (yDelta == 0)\n\t\t\t\t{\n\t\t\t\t\tyDelta = 0.01 + Math.random();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Distance between nodes\n\t\t\t\tvar deltaLength = Math.sqrt((xDelta * xDelta)\n\t\t\t\t\t\t+ (yDelta * yDelta));\n\t\t\t\tvar deltaLengthWithRadius = deltaLength - this.radius[i]\n\t\t\t\t\t\t- this.radius[j];\n\n\t\t\t\tif (deltaLengthWithRadius > this.maxDistanceLimit)\n\t\t\t\t{\n\t\t\t\t\t// Ignore vertices too far apart\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (deltaLengthWithRadius < this.minDistanceLimit)\n\t\t\t\t{\n\t\t\t\t\tdeltaLengthWithRadius = this.minDistanceLimit;\n\t\t\t\t}\n\n\t\t\t\tvar force = this.forceConstantSquared / deltaLengthWithRadius;\n\n\t\t\t\tvar displacementX = (xDelta / deltaLength) * force;\n\t\t\t\tvar displacementY = (yDelta / deltaLength) * force;\n\t\t\t\t\n\t\t\t\tthis.dispX[i] += displacementX;\n\t\t\t\tthis.dispY[i] += displacementY;\n\n\t\t\t\tthis.dispX[j] -= displacementX;\n\t\t\t\tthis.dispY[j] -= displacementY;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: reduceTemperature\n * \n * Reduces the temperature of the layout from an initial setting in a linear\n * fashion to zero.\n */\nmxFastOrganicLayout.prototype.reduceTemperature = function()\n{\n\tthis.temperature = this.initialTemp * (1.0 - this.iteration / this.maxIterations);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCircleLayout\n * \n * Extends <mxGraphLayout> to implement a circluar layout for a given radius.\n * The vertices do not need to be connected for this layout to work and all\n * connections between vertices are not taken into account.\n * \n * Example:\n * \n * (code)\n * var layout = new mxCircleLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCircleLayout\n *\n * Constructs a new circular layout for the specified radius.\n *\n * Arguments:\n * \n * graph - <mxGraph> that contains the cells.\n * radius - Optional radius as an int. Default is 100.\n */\nfunction mxCircleLayout(graph, radius)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.radius = (radius != null) ? radius : 100;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCircleLayout.prototype = new mxGraphLayout();\nmxCircleLayout.prototype.constructor = mxCircleLayout;\n\n/**\n * Variable: radius\n * \n * Integer specifying the size of the radius. Default is 100.\n */\nmxCircleLayout.prototype.radius = null;\n\n/**\n * Variable: moveCircle\n * \n * Boolean specifying if the circle should be moved to the top,\n * left corner specified by <x0> and <y0>. Default is false.\n */\nmxCircleLayout.prototype.moveCircle = false;\n\n/**\n * Variable: x0\n * \n * Integer specifying the left coordinate of the circle.\n * Default is 0.\n */\nmxCircleLayout.prototype.x0 = 0;\n\n/**\n * Variable: y0\n * \n * Integer specifying the top coordinate of the circle.\n * Default is 0.\n */\nmxCircleLayout.prototype.y0 = 0;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxCircleLayout.prototype.resetEdges = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxCircleLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxCircleLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\n\t// Moves the vertices to build a circle. Makes sure the\n\t// radius is large enough for the vertices to not\n\t// overlap\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\t// Gets all vertices inside the parent and finds\n\t\t// the maximum dimension of the largest vertex\n\t\tvar max = 0;\n\t\tvar top = null;\n\t\tvar left = null;\n\t\tvar vertices = [];\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (!this.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\tvertices.push(cell);\n\t\t\t\tvar bounds = this.getVertexBounds(cell);\n\t\t\t\t\n\t\t\t\tif (top == null)\n\t\t\t\t{\n\t\t\t\t\ttop = bounds.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttop = Math.min(top, bounds.y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (left == null)\n\t\t\t\t{\n\t\t\t\t\tleft = bounds.x;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleft = Math.min(left, bounds.x);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmax = Math.max(max, Math.max(bounds.width, bounds.height));\n\t\t\t}\n\t\t\telse if (!this.isEdgeIgnored(cell))\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.resetEdge(cell);\n\t\t\t\t}\n\n\t\t\t    if (this.disableEdgeStyle)\n\t\t\t    {\n\t\t\t    \t\tthis.setEdgeStyleEnabled(cell, false);\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar r = this.getRadius(vertices.length, max);\n\n\t\t// Moves the circle to the specified origin\n\t\tif (this.moveCircle)\n\t\t{\n\t\t\tleft = this.x0;\n\t\t\ttop = this.y0;\n\t\t}\n\t\t\n\t\tthis.circle(vertices, r, left, top);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: getRadius\n * \n * Returns the radius to be used for the given vertex count. Max is the maximum\n * width or height of all vertices in the layout.\n */\nmxCircleLayout.prototype.getRadius = function(count, max)\n{\n\treturn Math.max(count * max / Math.PI, this.radius);\n};\n\n/**\n * Function: circle\n * \n * Executes the circular layout for the specified array\n * of vertices and the given radius. This is called from\n * <execute>.\n */\nmxCircleLayout.prototype.circle = function(vertices, r, left, top)\n{\n\tvar vertexCount = vertices.length;\n\tvar phi = 2 * Math.PI / vertexCount;\n\t\n\tfor (var i = 0; i < vertexCount; i++)\n\t{\n\t\tif (this.isVertexMovable(vertices[i]))\n\t\t{\n\t\t\tthis.setVertexLocation(vertices[i],\n\t\t\t\tMath.round(left + r + r * Math.sin(i * phi)),\n\t\t\t\tMath.round(top + r + r * Math.cos(i * phi)));\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxParallelEdgeLayout\n * \n * Extends <mxGraphLayout> for arranging parallel edges. This layout works\n * on edges for all pairs of vertices where there is more than one edge\n * connecting the latter.\n * \n * Example:\n * \n * (code)\n * var layout = new mxParallelEdgeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * To run the layout for the parallel edges of a changed edge only, the\n * following code can be used.\n * \n * (code)\n * var layout = new mxParallelEdgeLayout(graph);\n * \n * graph.addListener(mxEvent.CELL_CONNECTED, function(sender, evt)\n * {\n *   var model = graph.getModel();\n *   var edge = evt.getProperty('edge');\n *   var src = model.getTerminal(edge, true);\n *   var trg = model.getTerminal(edge, false);\n *   \n *   layout.isEdgeIgnored = function(edge2)\n *   {\n *     var src2 = model.getTerminal(edge2, true);\n *     var trg2 = model.getTerminal(edge2, false);\n *     \n *     return !(model.isEdge(edge2) && ((src == src2 && trg == trg2) || (src == trg2 && trg == src2)));\n *   };\n *   \n *   layout.execute(graph.getDefaultParent());\n * });\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new fast organic layout for the specified graph.\n */\nfunction mxParallelEdgeLayout(graph)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxParallelEdgeLayout.prototype = new mxGraphLayout();\nmxParallelEdgeLayout.prototype.constructor = mxParallelEdgeLayout;\n\n/**\n * Variable: spacing\n * \n * Defines the spacing between the parallels. Default is 20.\n */\nmxParallelEdgeLayout.prototype.spacing = 20;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxParallelEdgeLayout.prototype.execute = function(parent)\n{\n\tvar lookup = this.findParallels(parent);\n\t\n\tthis.graph.model.beginUpdate();\t\n\ttry\n\t{\n\t\tfor (var i in lookup)\n\t\t{\n\t\t\tvar parallels = lookup[i];\n\n\t\t\tif (parallels.length > 1)\n\t\t\t{\n\t\t\t\tthis.layout(parallels);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.graph.model.endUpdate();\n\t}\n};\n\n/**\n * Function: findParallels\n * \n * Finds the parallel edges in the given parent.\n */\nmxParallelEdgeLayout.prototype.findParallels = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tvar lookup = [];\n\tvar childCount = model.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (!this.isEdgeIgnored(child))\n\t\t{\n\t\t\tvar id = this.getEdgeId(child);\n\t\t\t\n\t\t\tif (id != null)\n\t\t\t{\n\t\t\t\tif (lookup[id] == null)\n\t\t\t\t{\n\t\t\t\t\tlookup[id] = [];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlookup[id].push(child);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn lookup;\n};\n\n/**\n * Function: getEdgeId\n * \n * Returns a unique ID for the given edge. The id is independent of the\n * edge direction and is built using the visible terminal of the given\n * edge.\n */\nmxParallelEdgeLayout.prototype.getEdgeId = function(edge)\n{\n\tvar view = this.graph.getView();\n\t\n\t// Cannot used cached visible terminal because this could be triggered in BEFORE_UNDO\n\tvar src = view.getVisibleTerminal(edge, true);\n\tvar trg = view.getVisibleTerminal(edge, false);\n\n\tif (src != null && trg != null)\n\t{\n\t\tsrc = mxObjectIdentity.get(src);\n\t\ttrg = mxObjectIdentity.get(trg);\n\t\t\n\t\treturn (src > trg) ? trg + '-' + src : src + '-' + trg;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: layout\n * \n * Lays out the parallel edges in the given array.\n */\nmxParallelEdgeLayout.prototype.layout = function(parallels)\n{\n\tvar edge = parallels[0];\n\tvar view = this.graph.getView();\n\tvar model = this.graph.getModel();\n\tvar src = model.getGeometry(view.getVisibleTerminal(edge, true));\n\tvar trg = model.getGeometry(view.getVisibleTerminal(edge, false));\n\t\n\t// Routes multiple loops\n\tif (src == trg)\n\t{\n\t\tvar x0 = src.x + src.width + this.spacing;\n\t\tvar y0 = src.y + src.height / 2;\n\n\t\tfor (var i = 0; i < parallels.length; i++)\n\t\t{\n\t\t\tthis.route(parallels[i], x0, y0);\n\t\t\tx0 += this.spacing;\n\t\t}\n\t}\n\telse if (src != null && trg != null)\n\t{\n\t\t// Routes parallel edges\n\t\tvar scx = src.x + src.width / 2;\n\t\tvar scy = src.y + src.height / 2;\n\t\t\n\t\tvar tcx = trg.x + trg.width / 2;\n\t\tvar tcy = trg.y + trg.height / 2;\n\t\t\n\t\tvar dx = tcx - scx;\n\t\tvar dy = tcy - scy;\n\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\t\n\t\tif (len > 0)\n\t\t{\n\t\t\tvar x0 = scx + dx / 2;\n\t\t\tvar y0 = scy + dy / 2;\n\t\t\t\n\t\t\tvar nx = dy * this.spacing / len;\n\t\t\tvar ny = dx * this.spacing / len;\n\t\t\t\n\t\t\tx0 += nx * (parallels.length - 1) / 2;\n\t\t\ty0 -= ny * (parallels.length - 1) / 2;\n\t\n\t\t\tfor (var i = 0; i < parallels.length; i++)\n\t\t\t{\n\t\t\t\tthis.route(parallels[i], x0, y0);\n\t\t\t\tx0 -= nx;\n\t\t\t\ty0 += ny;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: route\n * \n * Routes the given edge via the given point.\n */\nmxParallelEdgeLayout.prototype.route = function(edge, x, y)\n{\n\tif (this.graph.isCellMovable(edge))\n\t{\n\t\tthis.setEdgePoints(edge, [new mxPoint(x, y)]);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCompositeLayout\n * \n * Allows to compose multiple layouts into a single layout. The master layout\n * is the layout that handles move operations if another layout than the first\n * element in <layouts> should be used. The <master> layout is not executed as\n * the code assumes that it is part of <layouts>.\n * \n * Example:\n * (code)\n * var first = new mxFastOrganicLayout(graph);\n * var second = new mxParallelEdgeLayout(graph);\n * var layout = new mxCompositeLayout(graph, [first, second], first);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompositeLayout\n *\n * Constructs a new layout using the given layouts. The graph instance is\n * required for creating the transaction that contains all layouts.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * layouts - Array of <mxGraphLayouts>.\n * master - Optional layout that handles moves. If no layout is given then\n * the first layout of the above array is used to handle moves.\n */\nfunction mxCompositeLayout(graph, layouts, master)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.layouts = layouts;\n\tthis.master = master;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCompositeLayout.prototype = new mxGraphLayout();\nmxCompositeLayout.prototype.constructor = mxCompositeLayout;\n\t\n/**\n * Variable: layouts\n * \n * Holds the array of <mxGraphLayouts> that this layout contains.\n */\nmxCompositeLayout.prototype.layouts = null;\n\n/**\n * Variable: layouts\n * \n * Reference to the <mxGraphLayouts> that handles moves. If this is null\n * then the first layout in <layouts> is used.\n */\nmxCompositeLayout.prototype.master = null;\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell> by calling move on <master> or the first\n * layout in <layouts>.\n */\nmxCompositeLayout.prototype.moveCell = function(cell, x, y)\n{\n\tif (this.master != null)\n\t{\n\t\tthis.master.move.apply(this.master, arguments);\n\t}\n\telse\n\t{\n\t\tthis.layouts[0].move.apply(this.layouts[0], arguments);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute> by executing all <layouts> in a\n * single transaction.\n */\nmxCompositeLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < this.layouts.length; i++)\n\t\t{\n\t\t\tthis.layouts[i].execute.apply(this.layouts[i], arguments);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEdgeLabelLayout\n * \n * Extends <mxGraphLayout> to implement an edge label layout. This layout\n * makes use of cell states, which means the graph must be validated in\n * a graph view (so that the label bounds are available) before this layout\n * can be executed.\n * \n * Example:\n * \n * (code)\n * var layout = new mxEdgeLabelLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxEdgeLabelLayout\n *\n * Constructs a new edge label layout.\n *\n * Arguments:\n * \n * graph - <mxGraph> that contains the cells.\n */\nfunction mxEdgeLabelLayout(graph, radius)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxEdgeLabelLayout.prototype = new mxGraphLayout();\nmxEdgeLabelLayout.prototype.constructor = mxEdgeLabelLayout;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxEdgeLabelLayout.prototype.execute = function(parent)\n{\n\tvar view = this.graph.view;\n\tvar model = this.graph.getModel();\n\t\n\t// Gets all vertices and edges inside the parent\n\tvar edges = [];\n\tvar vertices = [];\n\tvar childCount = model.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar cell = model.getChildAt(parent, i);\n\t\tvar state = view.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tif (!this.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\tvertices.push(state);\n\t\t\t}\n\t\t\telse if (!this.isEdgeIgnored(cell))\n\t\t\t{\n\t\t\t\tedges.push(state);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.placeLabels(vertices, edges);\n};\n\n/**\n * Function: placeLabels\n * \n * Places the labels of the given edges.\n */\nmxEdgeLabelLayout.prototype.placeLabels = function(v, e)\n{\n\tvar model = this.graph.getModel();\n\t\n\t// Moves the vertices to build a circle. Makes sure the\n\t// radius is large enough for the vertices to not\n\t// overlap\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < e.length; i++)\n\t\t{\n\t\t\tvar edge = e[i];\n\t\t\t\n\t\t\tif (edge != null && edge.text != null &&\n\t\t\t\tedge.text.boundingBox != null)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < v.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar vertex = v[j];\n\t\t\t\t\t\n\t\t\t\t\tif (vertex != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.avoid(edge, vertex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: avoid\n * \n * Places the labels of the given edges.\n */\nmxEdgeLabelLayout.prototype.avoid = function(edge, vertex)\n{\n\tvar model = this.graph.getModel();\n\tvar labRect = edge.text.boundingBox;\n\t\n\tif (mxUtils.intersects(labRect, vertex))\n\t{\n\t\tvar dy1 = -labRect.y - labRect.height + vertex.y;\n\t\tvar dy2 = -labRect.y + vertex.y + vertex.height;\n\t\t\n\t\tvar dy = (Math.abs(dy1) < Math.abs(dy2)) ? dy1 : dy2;\n\t\t\n\t\tvar dx1 = -labRect.x - labRect.width + vertex.x;\n\t\tvar dx2 = -labRect.x + vertex.x + vertex.width;\n\t\n\t\tvar dx = (Math.abs(dx1) < Math.abs(dx2)) ? dx1 : dx2;\n\t\t\n\t\tif (Math.abs(dx) < Math.abs(dy))\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t\n\t\tvar g = model.getGeometry(edge.cell);\n\t\t\n\t\tif (g != null)\n\t\t{\n\t\t\tg = g.clone();\n\t\t\t\n\t\t\tif (g.offset != null)\n\t\t\t{\n\t\t\t\tg.offset.x += dx;\n\t\t\t\tg.offset.y += dy;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tg.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\t\n\t\t\tmodel.setGeometry(edge.cell, g);\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphAbstractHierarchyCell\n * \n * An abstraction of an internal hierarchy node or edge\n * \n * Constructor: mxGraphAbstractHierarchyCell\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxGraphAbstractHierarchyCell()\n{\n\tthis.x = [];\n\tthis.y = [];\n\tthis.temp = [];\n};\n\n/**\n * Variable: maxRank\n * \n * The maximum rank this cell occupies. Default is -1.\n */\nmxGraphAbstractHierarchyCell.prototype.maxRank = -1;\n\n/**\n * Variable: minRank\n * \n * The minimum rank this cell occupies. Default is -1.\n */\nmxGraphAbstractHierarchyCell.prototype.minRank = -1;\n\n/**\n * Variable: x\n * \n * The x position of this cell for each layer it occupies\n */\nmxGraphAbstractHierarchyCell.prototype.x = null;\n\n/**\n * Variable: y\n * \n * The y position of this cell for each layer it occupies\n */\nmxGraphAbstractHierarchyCell.prototype.y = null;\n\n/**\n * Variable: width\n * \n * The width of this cell\n */\nmxGraphAbstractHierarchyCell.prototype.width = 0;\n\n/**\n * Variable: height\n * \n * The height of this cell\n */\nmxGraphAbstractHierarchyCell.prototype.height = 0;\n\n/**\n * Variable: nextLayerConnectedCells\n * \n * A cached version of the cells this cell connects to on the next layer up\n */\nmxGraphAbstractHierarchyCell.prototype.nextLayerConnectedCells = null;\n\n/**\n * Variable: previousLayerConnectedCells\n * \n * A cached version of the cells this cell connects to on the next layer down\n */\nmxGraphAbstractHierarchyCell.prototype.previousLayerConnectedCells = null;\n\n/**\n * Variable: temp\n * \n * Temporary variable for general use. Generally, try to avoid\n * carrying information between stages. Currently, the longest\n * path layering sets temp to the rank position in fixRanks()\n * and the crossing reduction uses this. This meant temp couldn't\n * be used for hashing the nodes in the model dfs and so hashCode\n * was created\n */\nmxGraphAbstractHierarchyCell.prototype.temp = null;\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphAbstractHierarchyCell.prototype.getNextLayerConnectedCells = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphAbstractHierarchyCell.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: isEdge\n * \n * Returns whether or not this cell is an edge\n */\nmxGraphAbstractHierarchyCell.prototype.isEdge = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isVertex\n * \n * Returns whether or not this cell is a node\n */\nmxGraphAbstractHierarchyCell.prototype.isVertex = function()\n{\n\treturn false;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\treturn null;\n};\n\n/**\n * Function: setX\n * \n * Set the value of x for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setX = function(layer, value)\n{\n\tif (this.isVertex())\n\t{\n\t\tthis.x[0] = value;\n\t}\n\telse if (this.isEdge())\n\t{\n\t\tthis.x[layer - this.minRank - 1] = value;\n\t}\n};\n\n/**\n * Function: getX\n * \n * Gets the value of x on the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.getX = function(layer)\n{\n\tif (this.isVertex())\n\t{\n\t\treturn this.x[0];\n\t}\n\telse if (this.isEdge())\n\t{\n\t\treturn this.x[layer - this.minRank - 1];\n\t}\n\n\treturn 0.0;\n};\n\n/**\n * Function: setY\n * \n * Set the value of y for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setY = function(layer, value)\n{\n\tif (this.isVertex())\n\t{\n\t\tthis.y[0] = value;\n\t}\n\telse if (this.isEdge())\n\t{\n\t\tthis.y[layer -this. minRank - 1] = value;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyNode\n * \n * An abstraction of a hierarchical edge for the hierarchy layout\n * \n * Constructor: mxGraphHierarchyNode\n *\n * Constructs an internal node to represent the specified real graph cell\n *\n * Arguments:\n * \n * cell - the real graph cell this node represents\n */\nfunction mxGraphHierarchyNode(cell)\n{\n\tmxGraphAbstractHierarchyCell.apply(this, arguments);\n\tthis.cell = cell;\n\tthis.id = mxObjectIdentity.get(cell);\n\tthis.connectsAsTarget = [];\n\tthis.connectsAsSource = [];\n};\n\n/**\n * Extends mxGraphAbstractHierarchyCell.\n */\nmxGraphHierarchyNode.prototype = new mxGraphAbstractHierarchyCell();\nmxGraphHierarchyNode.prototype.constructor = mxGraphHierarchyNode;\n\n/**\n * Variable: cell\n * \n * The graph cell this object represents.\n */\nmxGraphHierarchyNode.prototype.cell = null;\n\n/**\n * Variable: id\n * \n * The object identity of the wrapped cell\n */\nmxGraphHierarchyNode.prototype.id = null;\n\n/**\n * Variable: connectsAsTarget\n * \n * Collection of hierarchy edges that have this node as a target\n */\nmxGraphHierarchyNode.prototype.connectsAsTarget = null;\n\n/**\n * Variable: connectsAsSource\n * \n * Collection of hierarchy edges that have this node as a source\n */\nmxGraphHierarchyNode.prototype.connectsAsSource = null;\n\n/**\n * Variable: hashCode\n * \n * Assigns a unique hashcode for each node. Used by the model dfs instead\n * of copying HashSets\n */\nmxGraphHierarchyNode.prototype.hashCode = false;\n\n/**\n * Function: getRankValue\n * \n * Returns the integer value of the layer that this node resides in\n */\nmxGraphHierarchyNode.prototype.getRankValue = function(layer)\n{\n\treturn this.maxRank;\n};\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphHierarchyNode.prototype.getNextLayerConnectedCells = function(layer)\n{\n\tif (this.nextLayerConnectedCells == null)\n\t{\n\t\tthis.nextLayerConnectedCells = [];\n\t\tthis.nextLayerConnectedCells[0] = [];\n\t\t\n\t\tfor (var i = 0; i < this.connectsAsTarget.length; i++)\n\t\t{\n\t\t\tvar edge = this.connectsAsTarget[i];\n\n\t\t\tif (edge.maxRank == -1 || edge.maxRank == layer + 1)\n\t\t\t{\n\t\t\t\t// Either edge is not in any rank or\n\t\t\t\t// no dummy nodes in edge, add node of other side of edge\n\t\t\t\tthis.nextLayerConnectedCells[0].push(edge.source);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Edge spans at least two layers, add edge\n\t\t\t\tthis.nextLayerConnectedCells[0].push(edge);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.nextLayerConnectedCells[0];\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphHierarchyNode.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\tif (this.previousLayerConnectedCells == null)\n\t{\n\t\tthis.previousLayerConnectedCells = [];\n\t\tthis.previousLayerConnectedCells[0] = [];\n\t\t\n\t\tfor (var i = 0; i < this.connectsAsSource.length; i++)\n\t\t{\n\t\t\tvar edge = this.connectsAsSource[i];\n\n\t\t\tif (edge.minRank == -1 || edge.minRank == layer - 1)\n\t\t\t{\n\t\t\t\t// No dummy nodes in edge, add node of other side of edge\n\t\t\t\tthis.previousLayerConnectedCells[0].push(edge.target);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Edge spans at least two layers, add edge\n\t\t\t\tthis.previousLayerConnectedCells[0].push(edge);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.previousLayerConnectedCells[0];\n};\n\n/**\n * Function: isVertex\n * \n * Returns true.\n */\nmxGraphHierarchyNode.prototype.isVertex = function()\n{\n\treturn true;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphHierarchyNode.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn this.temp[0];\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphHierarchyNode.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\tthis.temp[0] = value;\n};\n\n/**\n * Function: isAncestor\n */\nmxGraphHierarchyNode.prototype.isAncestor = function(otherNode)\n{\n\t// Firstly, the hash code of this node needs to be shorter than the\n\t// other node\n\tif (otherNode != null && this.hashCode != null && otherNode.hashCode != null\n\t\t\t&& this.hashCode.length < otherNode.hashCode.length)\n\t{\n\t\tif (this.hashCode == otherNode.hashCode)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tif (this.hashCode == null || this.hashCode == null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// Secondly, this hash code must match the start of the other\n\t\t// node's hash code. Arrays.equals cannot be used here since\n\t\t// the arrays are different length, and we do not want to\n\t\t// perform another array copy.\n\t\tfor (var i = 0; i < this.hashCode.length; i++)\n\t\t{\n\t\t\tif (this.hashCode[i] != otherNode.hashCode[i])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n/**\n * Function: getCoreCell\n * \n * Gets the core vertex associated with this wrapper\n */\nmxGraphHierarchyNode.prototype.getCoreCell = function()\n{\n\treturn this.cell;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyEdge\n * \n * An abstraction of a hierarchical edge for the hierarchy layout\n * \n * Constructor: mxGraphHierarchyEdge\n *\n * Constructs a hierarchy edge\n *\n * Arguments:\n * \n * edges - a list of real graph edges this abstraction represents\n */\nfunction mxGraphHierarchyEdge(edges)\n{\n\tmxGraphAbstractHierarchyCell.apply(this, arguments);\n\tthis.edges = edges;\n\tthis.ids = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tthis.ids.push(mxObjectIdentity.get(edges[i]));\n\t}\n};\n\n/**\n * Extends mxGraphAbstractHierarchyCell.\n */\nmxGraphHierarchyEdge.prototype = new mxGraphAbstractHierarchyCell();\nmxGraphHierarchyEdge.prototype.constructor = mxGraphHierarchyEdge;\n\n/**\n * Variable: edges\n * \n * The graph edge(s) this object represents. Parallel edges are all grouped\n * together within one hierarchy edge.\n */\nmxGraphHierarchyEdge.prototype.edges = null;\n\n/**\n * Variable: ids\n * \n * The object identities of the wrapped cells\n */\nmxGraphHierarchyEdge.prototype.ids = null;\n\n/**\n * Variable: source\n * \n * The node this edge is sourced at\n */\nmxGraphHierarchyEdge.prototype.source = null;\n\n/**\n * Variable: target\n * \n * The node this edge targets\n */\nmxGraphHierarchyEdge.prototype.target = null;\n\n/**\n * Variable: isReversed\n * \n * Whether or not the direction of this edge has been reversed\n * internally to create a DAG for the hierarchical layout\n */\nmxGraphHierarchyEdge.prototype.isReversed = false;\n\n/**\n * Function: invert\n * \n * Inverts the direction of this internal edge(s)\n */\nmxGraphHierarchyEdge.prototype.invert = function(layer)\n{\n\tvar temp = this.source;\n\tthis.source = this.target;\n\tthis.target = temp;\n\tthis.isReversed = !this.isReversed;\n};\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphHierarchyEdge.prototype.getNextLayerConnectedCells = function(layer)\n{\n\tif (this.nextLayerConnectedCells == null)\n\t{\n\t\tthis.nextLayerConnectedCells = [];\n\t\t\n\t\tfor (var i = 0; i < this.temp.length; i++)\n\t\t{\n\t\t\tthis.nextLayerConnectedCells[i] = [];\n\t\t\t\n\t\t\tif (i == this.temp.length - 1)\n\t\t\t{\n\t\t\t\tthis.nextLayerConnectedCells[i].push(this.source);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.nextLayerConnectedCells[i].push(this);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this.nextLayerConnectedCells[layer - this.minRank - 1];\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphHierarchyEdge.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\tif (this.previousLayerConnectedCells == null)\n\t{\n\t\tthis.previousLayerConnectedCells = [];\n\n\t\tfor (var i = 0; i < this.temp.length; i++)\n\t\t{\n\t\t\tthis.previousLayerConnectedCells[i] = [];\n\t\t\t\n\t\t\tif (i == 0)\n\t\t\t{\n\t\t\t\tthis.previousLayerConnectedCells[i].push(this.target);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.previousLayerConnectedCells[i].push(this);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.previousLayerConnectedCells[layer - this.minRank - 1];\n};\n\n/**\n * Function: isEdge\n * \n * Returns true.\n */\nmxGraphHierarchyEdge.prototype.isEdge = function()\n{\n\treturn true;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphHierarchyEdge.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn this.temp[layer - this.minRank - 1];\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphHierarchyEdge.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\tthis.temp[layer - this.minRank - 1] = value;\n};\n\n/**\n * Function: getCoreCell\n * \n * Gets the first core edge associated with this wrapper\n */\nmxGraphHierarchyEdge.prototype.getCoreCell = function()\n{\n\tif (this.edges != null && this.edges.length > 0)\n\t{\n\t\treturn this.edges[0];\n\t}\n\t\n\treturn null;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyModel\n *\n * Internal model of a hierarchical graph. This model stores nodes and edges\n * equivalent to the real graph nodes and edges, but also stores the rank of the\n * cells, the order within the ranks and the new candidate locations of cells.\n * The internal model also reverses edge direction were appropriate , ignores\n * self-loop and groups parallels together under one edge object.\n *\n * Constructor: mxGraphHierarchyModel\n *\n * Creates an internal ordered graph model using the vertices passed in. If\n * there are any, leftward edge need to be inverted in the internal model\n *\n * Arguments:\n *\n * graph - the facade describing the graph to be operated on\n * vertices - the vertices for this hierarchy\n * ordered - whether or not the vertices are already ordered\n * deterministic - whether or not this layout should be deterministic on each\n * tightenToSource - whether or not to tighten vertices towards the sources\n * scanRanksFromSinks - Whether rank assignment is from the sinks or sources.\n * usage\n */\nfunction mxGraphHierarchyModel(layout, vertices, roots, parent, tightenToSource)\n{\n\tvar graph = layout.getGraph();\n\tthis.tightenToSource = tightenToSource;\n\tthis.roots = roots;\n\tthis.parent = parent;\n\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly\n\tthis.vertexMapper = new mxDictionary();\n\tthis.edgeMapper = new mxDictionary();\n\tthis.maxRank = 0;\n\tvar internalVertices = [];\n\n\tif (vertices == null)\n\t{\n\t\tvertices = this.graph.getChildVertices(parent);\n\t}\n\n\tthis.maxRank = this.SOURCESCANSTARTRANK;\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly. Guess size by number\n\t// of edges is roughly same as number of vertices.\n\tthis.createInternalCells(layout, vertices, internalVertices);\n\n\t// Go through edges set their sink values. Also check the\n\t// ordering if and invert edges if necessary\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tvar edges = internalVertices[i].connectsAsSource;\n\n\t\tfor (var j = 0; j < edges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = edges[j];\n\t\t\tvar realEdges = internalEdge.edges;\n\n\t\t\t// Only need to process the first real edge, since\n\t\t\t// all the edges connect to the same other vertex\n\t\t\tif (realEdges != null && realEdges.length > 0)\n\t\t\t{\n\t\t\t\tvar realEdge = realEdges[0];\n\t\t\t\tvar targetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\trealEdge, false);\n\t\t\t\tvar internalTargetCell = this.vertexMapper.get(targetCell);\n\n\t\t\t\tif (internalVertices[i] == internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\t// If there are parallel edges going between two vertices and not all are in the same direction\n\t\t\t\t\t// you can have navigated across one direction when doing the cycle reversal that isn't the same\n\t\t\t\t\t// direction as the first real edge in the array above. When that happens the if above catches\n\t\t\t\t\t// that and we correct the target cell before continuing.\n\t\t\t\t\t// This branch only detects this single case\n\t\t\t\t\ttargetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\t\trealEdge, true);\n\t\t\t\t\tinternalTargetCell = this.vertexMapper.get(targetCell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (internalTargetCell != null\n\t\t\t\t\t\t&& internalVertices[i] != internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\tinternalEdge.target = internalTargetCell;\n\n\t\t\t\t\tif (internalTargetCell.connectsAsTarget.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.indexOf(internalTargetCell.connectsAsTarget, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Use the temp variable in the internal nodes to mark this\n\t\t// internal vertex as having been visited.\n\t\tinternalVertices[i].temp[0] = 1;\n\t}\n};\n\n/**\n * Variable: maxRank\n *\n * Stores the largest rank number allocated\n */\nmxGraphHierarchyModel.prototype.maxRank = null;\n\n/**\n * Variable: vertexMapper\n *\n * Map from graph vertices to internal model nodes.\n */\nmxGraphHierarchyModel.prototype.vertexMapper = null;\n\n/**\n * Variable: edgeMapper\n *\n * Map from graph edges to internal model edges\n */\nmxGraphHierarchyModel.prototype.edgeMapper = null;\n\n/**\n * Variable: ranks\n *\n * Mapping from rank number to actual rank\n */\nmxGraphHierarchyModel.prototype.ranks = null;\n\n/**\n * Variable: roots\n *\n * Store of roots of this hierarchy model, these are real graph cells, not\n * internal cells\n */\nmxGraphHierarchyModel.prototype.roots = null;\n\n/**\n * Variable: parent\n *\n * The parent cell whose children are being laid out\n */\nmxGraphHierarchyModel.prototype.parent = null;\n\n/**\n * Variable: dfsCount\n *\n * Count of the number of times the ancestor dfs has been used.\n */\nmxGraphHierarchyModel.prototype.dfsCount = 0;\n\n/**\n * Variable: SOURCESCANSTARTRANK\n *\n * High value to start source layering scan rank value from.\n */\nmxGraphHierarchyModel.prototype.SOURCESCANSTARTRANK = 100000000;\n\n/**\n * Variable: tightenToSource\n *\n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxGraphHierarchyModel.prototype.tightenToSource = false;\n\n/**\n * Function: createInternalCells\n *\n * Creates all edges in the internal model\n *\n * Parameters:\n *\n * layout - Reference to the <mxHierarchicalLayout> algorithm.\n * vertices - Array of <mxCells> that represent the vertices whom are to\n * have an internal representation created.\n * internalVertices - The array of <mxGraphHierarchyNodes> to have their\n * information filled in using the real vertices.\n */\nmxGraphHierarchyModel.prototype.createInternalCells = function(layout, vertices, internalVertices)\n{\n\tvar graph = layout.getGraph();\n\n\t// Create internal edges\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tinternalVertices[i] = new mxGraphHierarchyNode(vertices[i]);\n\t\tthis.vertexMapper.put(vertices[i], internalVertices[i]);\n\n\t\t// If the layout is deterministic, order the cells\n\t\t//List outgoingCells = graph.getNeighbours(vertices[i], deterministic);\n\t\tvar conns = layout.getEdges(vertices[i]);\n\t\tinternalVertices[i].connectsAsSource = [];\n\n\t\t// Create internal edges, but don't do any rank assignment yet\n\t\t// First use the information from the greedy cycle remover to\n\t\t// invert the leftward edges internally\n\t\tfor (var j = 0; j < conns.length; j++)\n\t\t{\n\t\t\tvar cell = layout.getVisibleTerminal(conns[j], false);\n\n\t\t\t// Looking for outgoing edges only\n\t\t\tif (cell != vertices[i] && layout.graph.model.isVertex(cell) &&\n\t\t\t\t\t!layout.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\t// We process all edge between this source and its targets\n\t\t\t\t// If there are edges going both ways, we need to collect\n\t\t\t\t// them all into one internal edges to avoid looping problems\n\t\t\t\t// later. We assume this direction (source -> target) is the \n\t\t\t\t// natural direction if at least half the edges are going in\n\t\t\t\t// that direction.\n\n\t\t\t\t// The check below for edges[0] being in the vertex mapper is\n\t\t\t\t// in case we've processed this the other way around\n\t\t\t\t// (target -> source) and the number of edges in each direction\n\t\t\t\t// are the same. All the graph edges will have been assigned to\n\t\t\t\t// an internal edge going the other way, so we don't want to \n\t\t\t\t// process them again\n\t\t\t\tvar undirectedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, false);\n\t\t\t\tvar directedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, true);\n\t\t\t\t\n\t\t\t\tif (undirectedEdges != null &&\n\t\t\t\t\t\tundirectedEdges.length > 0 &&\n\t\t\t\t\t\tthis.edgeMapper.get(undirectedEdges[0]) == null &&\n\t\t\t\t\t\tdirectedEdges.length * 2 >= undirectedEdges.length)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = new mxGraphHierarchyEdge(undirectedEdges);\n\n\t\t\t\t\tfor (var k = 0; k < undirectedEdges.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar edge = undirectedEdges[k];\n\t\t\t\t\t\tthis.edgeMapper.put(edge, internalEdge);\n\n\t\t\t\t\t\t// Resets all point on the edge and disables the edge style\n\t\t\t\t\t\t// without deleting it from the cell style\n\t\t\t\t\t\tgraph.resetEdge(edge);\n\n\t\t\t\t\t    if (layout.disableEdgeStyle)\n\t\t\t\t\t    {\n\t\t\t\t\t    \tlayout.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\t    \tlayout.setOrthogonalEdge(edge,true);\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\n\t\t\t\t\tinternalEdge.source = internalVertices[i];\n\n\t\t\t\t\tif (mxUtils.indexOf(internalVertices[i].connectsAsSource, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalVertices[i].connectsAsSource.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Ensure temp variable is cleared from any previous use\n\t\tinternalVertices[i].temp[0] = 0;\n\t}\n};\n\n/**\n * Function: initialRank\n *\n * Basic determination of minimum layer ranking by working from from sources\n * or sinks and working through each node in the relevant edge direction.\n * Starting at the sinks is basically a longest path layering algorithm.\n*/\nmxGraphHierarchyModel.prototype.initialRank = function()\n{\n\tvar startNodes = [];\n\n\tif (this.roots != null)\n\t{\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar internalNode = this.vertexMapper.get(this.roots[i]);\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tstartNodes.push(internalNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar internalNodes = this.vertexMapper.getValues();\n\t\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] = -1;\n\t}\n\n\tvar startNodesCopy = startNodes.slice();\n\n\twhile (startNodes.length > 0)\n\t{\n\t\tvar internalNode = startNodes[0];\n\t\tvar layerDeterminingEdges;\n\t\tvar edgesToBeMarked;\n\n\t\tlayerDeterminingEdges = internalNode.connectsAsTarget;\n\t\tedgesToBeMarked = internalNode.connectsAsSource;\n\n\t\t// flag to keep track of whether or not all layer determining\n\t\t// edges have been scanned\n\t\tvar allEdgesScanned = true;\n\n\t\t// Work out the layer of this node from the layer determining\n\t\t// edges. The minimum layer number of any node connected by one of\n\t\t// the layer determining edges variable\n\t\tvar minimumLayer = this.SOURCESCANSTARTRANK;\n\n\t\tfor (var i = 0; i < layerDeterminingEdges.length; i++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[i];\n\n\t\t\tif (internalEdge.temp[0] == 5270620)\n\t\t\t{\n\t\t\t\t// This edge has been scanned, get the layer of the\n\t\t\t\t// node on the other end\n\t\t\t\tvar otherNode = internalEdge.source;\n\t\t\t\tminimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tallEdgesScanned = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If all edge have been scanned, assign the layer, mark all\n\t\t// edges in the other direction and remove from the nodes list\n\t\tif (allEdgesScanned)\n\t\t{\n\t\t\tinternalNode.temp[0] = minimumLayer;\n\t\t\tthis.maxRank = Math.min(this.maxRank, minimumLayer);\n\n\t\t\tif (edgesToBeMarked != null)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < edgesToBeMarked.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = edgesToBeMarked[i];\n\n\t\t\t\t\t// Assign unique stamp ( y/m/d/h )\n\t\t\t\t\tinternalEdge.temp[0] = 5270620;\n\n\t\t\t\t\t// Add node on other end of edge to LinkedList of\n\t\t\t\t\t// nodes to be analysed\n\t\t\t\t\tvar otherNode = internalEdge.target;\n\n\t\t\t\t\t// Only add node if it hasn't been assigned a layer\n\t\t\t\t\tif (otherNode.temp[0] == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tstartNodes.push(otherNode);\n\n\t\t\t\t\t\t// Mark this other node as neither being\n\t\t\t\t\t\t// unassigned nor assigned so it isn't\n\t\t\t\t\t\t// added to this list again, but it's\n\t\t\t\t\t\t// layer isn't used in any calculation.\n\t\t\t\t\t\totherNode.temp[0] = -2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartNodes.shift();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Not all the edges have been scanned, get to the back of\n\t\t\t// the class and put the dunces cap on\n\t\t\tvar removedCell = startNodes.shift();\n\t\t\tstartNodes.push(internalNode);\n\n\t\t\tif (removedCell == internalNode && startNodes.length == 1)\n\t\t\t{\n\t\t\t\t// This is an error condition, we can't get out of\n\t\t\t\t// this loop. It could happen for more than one node\n\t\t\t\t// but that's a lot harder to detect. Log the error\n\t\t\t\t// TODO make log comment\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize the ranks down from their large starting value to place\n\t// at least 1 sink on layer 0\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] -= this.maxRank;\n\t}\n\t\n\t// Tighten the rank 0 nodes as far as possible\n\tfor ( var i = 0; i < startNodesCopy.length; i++)\n\t{\n\t\tvar internalNode = startNodesCopy[i];\n\t\tvar currentMaxLayer = 0;\n\t\tvar layerDeterminingEdges = internalNode.connectsAsSource;\n\n\t\tfor ( var j = 0; j < layerDeterminingEdges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[j];\n\t\t\tvar otherNode = internalEdge.target;\n\t\t\tinternalNode.temp[0] = Math.max(currentMaxLayer,\n\t\t\t\t\totherNode.temp[0] + 1);\n\t\t\tcurrentMaxLayer = internalNode.temp[0];\n\t\t}\n\t}\n\t\n\t// Reset the maxRank to that which would be expected for a from-sink\n\t// scan\n\tthis.maxRank = this.SOURCESCANSTARTRANK - this.maxRank;\n};\n\n/**\n * Function: fixRanks\n *\n * Fixes the layer assignments to the values stored in the nodes. Also needs\n * to create dummy nodes for edges that cross layers.\n */\nmxGraphHierarchyModel.prototype.fixRanks = function()\n{\n\tvar rankList = [];\n\tthis.ranks = [];\n\n\tfor (var i = 0; i < this.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tthis.ranks[i] = rankList[i];\n\t}\n\n\t// Perform a DFS to obtain an initial ordering for each rank.\n\t// Without doing this you would end up having to process\n\t// crossings for a standard tree.\n\tvar rootsArray = null;\n\n\tif (this.roots != null)\n\t{\n\t\tvar oldRootsArray = this.roots;\n\t\trootsArray = [];\n\n\t\tfor (var i = 0; i < oldRootsArray.length; i++)\n\t\t{\n\t\t\tvar cell = oldRootsArray[i];\n\t\t\tvar internalNode = this.vertexMapper.get(cell);\n\t\t\trootsArray[i] = internalNode;\n\t\t}\n\t}\n\n\tthis.visit(function(parent, node, edge, layer, seen)\n\t{\n\t\tif (seen == 0 && node.maxRank < 0 && node.minRank < 0)\n\t\t{\n\t\t\trankList[node.temp[0]].push(node);\n\t\t\tnode.maxRank = node.temp[0];\n\t\t\tnode.minRank = node.temp[0];\n\n\t\t\t// Set temp[0] to the nodes position in the rank\n\t\t\tnode.temp[0] = rankList[node.maxRank].length - 1;\n\t\t}\n\n\t\tif (parent != null && edge != null)\n\t\t{\n\t\t\tvar parentToCellRankDifference = parent.maxRank - node.maxRank;\n\n\t\t\tif (parentToCellRankDifference > 1)\n\t\t\t{\n\t\t\t\t// There are ranks in between the parent and current cell\n\t\t\t\tedge.maxRank = parent.maxRank;\n\t\t\t\tedge.minRank = node.maxRank;\n\t\t\t\tedge.temp = [];\n\t\t\t\tedge.x = [];\n\t\t\t\tedge.y = [];\n\n\t\t\t\tfor (var i = edge.minRank + 1; i < edge.maxRank; i++)\n\t\t\t\t{\n\t\t\t\t\t// The connecting edge must be added to the\n\t\t\t\t\t// appropriate ranks\n\t\t\t\t\trankList[i].push(edge);\n\t\t\t\t\tedge.setGeneralPurposeVariable(i, rankList[i]\n\t\t\t\t\t\t\t.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, rootsArray, false, null);\n};\n\n/**\n * Function: visit\n *\n * A depth first search through the internal heirarchy model.\n *\n * Parameters:\n *\n * visitor - The visitor function pattern to be called for each node.\n * trackAncestors - Whether or not the search is to keep track all nodes\n * directly above this one in the search path.\n */\nmxGraphHierarchyModel.prototype.visit = function(visitor, dfsRoots, trackAncestors, seenNodes)\n{\n\t// Run dfs through on all roots\n\tif (dfsRoots != null)\n\t{\n\t\tfor (var i = 0; i < dfsRoots.length; i++)\n\t\t{\n\t\t\tvar internalNode = dfsRoots[i];\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tif (seenNodes == null)\n\t\t\t\t{\n\t\t\t\t\tseenNodes = new Object();\n\t\t\t\t}\n\n\t\t\t\tif (trackAncestors)\n\t\t\t\t{\n\t\t\t\t\t// Set up hash code for root\n\t\t\t\t\tinternalNode.hashCode = [];\n\t\t\t\t\tinternalNode.hashCode[0] = this.dfsCount;\n\t\t\t\t\tinternalNode.hashCode[1] = i;\n\t\t\t\t\tthis.extendedDfs(null, internalNode, null, visitor, seenNodes,\n\t\t\t\t\t\t\tinternalNode.hashCode, i, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.dfs(null, internalNode, null, visitor, seenNodes, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dfsCount++;\n\t}\n};\n\n/**\n * Function: dfs\n *\n * Performs a depth first search on the internal hierarchy model\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs a set of all of the\n * ancestor node of the current node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxGraphHierarchyModel.prototype.dfs = function(parent, root, connectingEdge, visitor, seen, layer)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\t\n\t\t\tfor (var i = 0; i< outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.dfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\tlayer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendedDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of cells ancestors, but it\n * should be only used when necessary because of it can be computationally\n * intensive for deep searches.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs\n * ancestors - the parent hash code\n * childHash - the new hash code for this node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxGraphHierarchyModel.prototype.extendedDfs = function(parent, root, connectingEdge, visitor, seen, ancestors, childHash, layer)\n{\n\t// Explanation of custom hash set. Previously, the ancestors variable\n\t// was passed through the dfs as a HashSet. The ancestors were copied\n\t// into a new HashSet and when the new child was processed it was also\n\t// added to the set. If the current node was in its ancestor list it\n\t// meant there is a cycle in the graph and this information is passed\n\t// to the visitor.visit() in the seen parameter. The HashSet clone was\n\t// very expensive on CPU so a custom hash was developed using primitive\n\t// types. temp[] couldn't be used so hashCode[] was added to each node.\n\t// Each new child adds another int to the array, copying the prefix\n\t// from its parent. Child of the same parent add different ints (the\n\t// limit is therefore 2^32 children per parent...). If a node has a\n\t// child with the hashCode already set then the child code is compared\n\t// to the same portion of the current nodes array. If they match there\n\t// is a loop.\n\t// Note that the basic mechanism would only allow for 1 use of this\n\t// functionality, so the root nodes have two ints. The second int is\n\t// incremented through each node root and the first is incremented\n\t// through each run of the dfs algorithm (therefore the dfs is not\n\t// thread safe). The hash code of each node is set if not already set,\n\t// or if the first int does not match that of the current run.\n\tif (root != null)\n\t{\n\t\tif (parent != null)\n\t\t{\n\t\t\t// Form this nodes hash code if necessary, that is, if the\n\t\t\t// hashCode variable has not been initialized or if the\n\t\t\t// start of the parent hash code does not equal the start of\n\t\t\t// this nodes hash code, indicating the code was set on a\n\t\t\t// previous run of this dfs.\n\t\t\tif (root.hashCode == null ||\n\t\t\t\troot.hashCode[0] != parent.hashCode[0])\n\t\t\t{\n\t\t\t\tvar hashCodeLength = parent.hashCode.length + 1;\n\t\t\t\troot.hashCode = parent.hashCode.slice();\n\t\t\t\troot.hashCode[hashCodeLength - 1] = childHash;\n\t\t\t}\n\t\t}\n\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneModel\n *\n * Internal model of a hierarchical graph. This model stores nodes and edges\n * equivalent to the real graph nodes and edges, but also stores the rank of the\n * cells, the order within the ranks and the new candidate locations of cells.\n * The internal model also reverses edge direction were appropriate , ignores\n * self-loop and groups parallels together under one edge object.\n *\n * Constructor: mxSwimlaneModel\n *\n * Creates an internal ordered graph model using the vertices passed in. If\n * there are any, leftward edge need to be inverted in the internal model\n *\n * Arguments:\n *\n * graph - the facade describing the graph to be operated on\n * vertices - the vertices for this hierarchy\n * ordered - whether or not the vertices are already ordered\n * deterministic - whether or not this layout should be deterministic on each\n * tightenToSource - whether or not to tighten vertices towards the sources\n * scanRanksFromSinks - Whether rank assignment is from the sinks or sources.\n * usage\n */\nfunction mxSwimlaneModel(layout, vertices, roots, parent, tightenToSource)\n{\n\tvar graph = layout.getGraph();\n\tthis.tightenToSource = tightenToSource;\n\tthis.roots = roots;\n\tthis.parent = parent;\n\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly\n\tthis.vertexMapper = new mxDictionary();\n\tthis.edgeMapper = new mxDictionary();\n\tthis.maxRank = 0;\n\tvar internalVertices = [];\n\n\tif (vertices == null)\n\t{\n\t\tvertices = this.graph.getChildVertices(parent);\n\t}\n\n\tthis.maxRank = this.SOURCESCANSTARTRANK;\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly. Guess size by number\n\t// of edges is roughly same as number of vertices.\n\tthis.createInternalCells(layout, vertices, internalVertices);\n\n\t// Go through edges set their sink values. Also check the\n\t// ordering if and invert edges if necessary\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tvar edges = internalVertices[i].connectsAsSource;\n\n\t\tfor (var j = 0; j < edges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = edges[j];\n\t\t\tvar realEdges = internalEdge.edges;\n\n\t\t\t// Only need to process the first real edge, since\n\t\t\t// all the edges connect to the same other vertex\n\t\t\tif (realEdges != null && realEdges.length > 0)\n\t\t\t{\n\t\t\t\tvar realEdge = realEdges[0];\n\t\t\t\tvar targetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\trealEdge, false);\n\t\t\t\tvar internalTargetCell = this.vertexMapper.get(targetCell);\n\n\t\t\t\tif (internalVertices[i] == internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\t// If there are parallel edges going between two vertices and not all are in the same direction\n\t\t\t\t\t// you can have navigated across one direction when doing the cycle reversal that isn't the same\n\t\t\t\t\t// direction as the first real edge in the array above. When that happens the if above catches\n\t\t\t\t\t// that and we correct the target cell before continuing.\n\t\t\t\t\t// This branch only detects this single case\n\t\t\t\t\ttargetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\t\trealEdge, true);\n\t\t\t\t\tinternalTargetCell = this.vertexMapper.get(targetCell);\n\t\t\t\t}\n\n\t\t\t\tif (internalTargetCell != null\n\t\t\t\t\t\t&& internalVertices[i] != internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\tinternalEdge.target = internalTargetCell;\n\n\t\t\t\t\tif (internalTargetCell.connectsAsTarget.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.indexOf(internalTargetCell.connectsAsTarget, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Use the temp variable in the internal nodes to mark this\n\t\t// internal vertex as having been visited.\n\t\tinternalVertices[i].temp[0] = 1;\n\t}\n};\n\n/**\n * Variable: maxRank\n *\n * Stores the largest rank number allocated\n */\nmxSwimlaneModel.prototype.maxRank = null;\n\n/**\n * Variable: vertexMapper\n *\n * Map from graph vertices to internal model nodes.\n */\nmxSwimlaneModel.prototype.vertexMapper = null;\n\n/**\n * Variable: edgeMapper\n *\n * Map from graph edges to internal model edges\n */\nmxSwimlaneModel.prototype.edgeMapper = null;\n\n/**\n * Variable: ranks\n *\n * Mapping from rank number to actual rank\n */\nmxSwimlaneModel.prototype.ranks = null;\n\n/**\n * Variable: roots\n *\n * Store of roots of this hierarchy model, these are real graph cells, not\n * internal cells\n */\nmxSwimlaneModel.prototype.roots = null;\n\n/**\n * Variable: parent\n *\n * The parent cell whose children are being laid out\n */\nmxSwimlaneModel.prototype.parent = null;\n\n/**\n * Variable: dfsCount\n *\n * Count of the number of times the ancestor dfs has been used.\n */\nmxSwimlaneModel.prototype.dfsCount = 0;\n\n/**\n * Variable: SOURCESCANSTARTRANK\n *\n * High value to start source layering scan rank value from.\n */\nmxSwimlaneModel.prototype.SOURCESCANSTARTRANK = 100000000;\n\n/**\n * Variable: tightenToSource\n *\n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxSwimlaneModel.prototype.tightenToSource = false;\n\n/**\n * Variable: ranksPerGroup\n *\n * An array of the number of ranks within each swimlane\n */\nmxSwimlaneModel.prototype.ranksPerGroup = null;\n\n/**\n * Function: createInternalCells\n *\n * Creates all edges in the internal model\n *\n * Parameters:\n *\n * layout - Reference to the <mxHierarchicalLayout> algorithm.\n * vertices - Array of <mxCells> that represent the vertices whom are to\n * have an internal representation created.\n * internalVertices - The array of <mxGraphHierarchyNodes> to have their\n * information filled in using the real vertices.\n */\nmxSwimlaneModel.prototype.createInternalCells = function(layout, vertices, internalVertices)\n{\n\tvar graph = layout.getGraph();\n\tvar swimlanes = layout.swimlanes;\n\n\t// Create internal edges\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tinternalVertices[i] = new mxGraphHierarchyNode(vertices[i]);\n\t\tthis.vertexMapper.put(vertices[i], internalVertices[i]);\n\t\tinternalVertices[i].swimlaneIndex = -1;\n\n\t\tfor (var ii = 0; ii < swimlanes.length; ii++)\n\t\t{\n\t\t\tif (graph.model.getParent(vertices[i]) == swimlanes[ii])\n\t\t\t{\n\t\t\t\tinternalVertices[i].swimlaneIndex = ii;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If the layout is deterministic, order the cells\n\t\t//List outgoingCells = graph.getNeighbours(vertices[i], deterministic);\n\t\tvar conns = layout.getEdges(vertices[i]);\n\t\tinternalVertices[i].connectsAsSource = [];\n\n\t\t// Create internal edges, but don't do any rank assignment yet\n\t\t// First use the information from the greedy cycle remover to\n\t\t// invert the leftward edges internally\n\t\tfor (var j = 0; j < conns.length; j++)\n\t\t{\n\t\t\tvar cell = layout.getVisibleTerminal(conns[j], false);\n\n\t\t\t// Looking for outgoing edges only\n\t\t\tif (cell != vertices[i] && layout.graph.model.isVertex(cell) &&\n\t\t\t\t\t!layout.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\t// We process all edge between this source and its targets\n\t\t\t\t// If there are edges going both ways, we need to collect\n\t\t\t\t// them all into one internal edges to avoid looping problems\n\t\t\t\t// later. We assume this direction (source -> target) is the \n\t\t\t\t// natural direction if at least half the edges are going in\n\t\t\t\t// that direction.\n\n\t\t\t\t// The check below for edges[0] being in the vertex mapper is\n\t\t\t\t// in case we've processed this the other way around\n\t\t\t\t// (target -> source) and the number of edges in each direction\n\t\t\t\t// are the same. All the graph edges will have been assigned to\n\t\t\t\t// an internal edge going the other way, so we don't want to \n\t\t\t\t// process them again\n\t\t\t\tvar undirectedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, false);\n\t\t\t\tvar directedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, true);\n\t\t\t\t\n\t\t\t\tif (undirectedEdges != null &&\n\t\t\t\t\t\tundirectedEdges.length > 0 &&\n\t\t\t\t\t\tthis.edgeMapper.get(undirectedEdges[0]) == null &&\n\t\t\t\t\t\tdirectedEdges.length * 2 >= undirectedEdges.length)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = new mxGraphHierarchyEdge(undirectedEdges);\n\n\t\t\t\t\tfor (var k = 0; k < undirectedEdges.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar edge = undirectedEdges[k];\n\t\t\t\t\t\tthis.edgeMapper.put(edge, internalEdge);\n\n\t\t\t\t\t\t// Resets all point on the edge and disables the edge style\n\t\t\t\t\t\t// without deleting it from the cell style\n\t\t\t\t\t\tgraph.resetEdge(edge);\n\n\t\t\t\t\t    if (layout.disableEdgeStyle)\n\t\t\t\t\t    {\n\t\t\t\t\t    \tlayout.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\t    \tlayout.setOrthogonalEdge(edge,true);\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\n\t\t\t\t\tinternalEdge.source = internalVertices[i];\n\n\t\t\t\t\tif (mxUtils.indexOf(internalVertices[i].connectsAsSource, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalVertices[i].connectsAsSource.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Ensure temp variable is cleared from any previous use\n\t\tinternalVertices[i].temp[0] = 0;\n\t}\n};\n\n/**\n * Function: initialRank\n *\n * Basic determination of minimum layer ranking by working from from sources\n * or sinks and working through each node in the relevant edge direction.\n * Starting at the sinks is basically a longest path layering algorithm.\n*/\nmxSwimlaneModel.prototype.initialRank = function()\n{\n\tthis.ranksPerGroup = [];\n\t\n\tvar startNodes = [];\n\tvar seen = new Object();\n\n\tif (this.roots != null)\n\t{\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar internalNode = this.vertexMapper.get(this.roots[i]);\n\t\t\tthis.maxChainDfs(null, internalNode, null, seen, 0);\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tstartNodes.push(internalNode);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Calculate the lower and upper rank bounds of each swimlane\n\tvar lowerRank = [];\n\tvar upperRank = [];\n\t\n\tfor (var i = this.ranksPerGroup.length - 1; i >= 0; i--)\n\t{\n\t\tif (i == this.ranksPerGroup.length - 1)\n\t\t{\n\t\t\tlowerRank[i] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlowerRank[i] = upperRank[i+1] + 1;\n\t\t}\n\t\t\n\t\tupperRank[i] = lowerRank[i] + this.ranksPerGroup[i];\n\t}\n\t\n\tthis.maxRank = upperRank[0];\n\n\tvar internalNodes = this.vertexMapper.getValues();\n\t\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] = -1;\n\t}\n\n\tvar startNodesCopy = startNodes.slice();\n\t\n\twhile (startNodes.length > 0)\n\t{\n\t\tvar internalNode = startNodes[0];\n\t\tvar layerDeterminingEdges;\n\t\tvar edgesToBeMarked;\n\n\t\tlayerDeterminingEdges = internalNode.connectsAsTarget;\n\t\tedgesToBeMarked = internalNode.connectsAsSource;\n\n\t\t// flag to keep track of whether or not all layer determining\n\t\t// edges have been scanned\n\t\tvar allEdgesScanned = true;\n\n\t\t// Work out the layer of this node from the layer determining\n\t\t// edges. The minimum layer number of any node connected by one of\n\t\t// the layer determining edges variable\n\t\tvar minimumLayer = upperRank[0];\n\n\t\tfor (var i = 0; i < layerDeterminingEdges.length; i++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[i];\n\n\t\t\tif (internalEdge.temp[0] == 5270620)\n\t\t\t{\n\t\t\t\t// This edge has been scanned, get the layer of the\n\t\t\t\t// node on the other end\n\t\t\t\tvar otherNode = internalEdge.source;\n\t\t\t\tminimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tallEdgesScanned = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If all edge have been scanned, assign the layer, mark all\n\t\t// edges in the other direction and remove from the nodes list\n\t\tif (allEdgesScanned)\n\t\t{\n\t\t\tif (minimumLayer > upperRank[internalNode.swimlaneIndex])\n\t\t\t{\n\t\t\t\tminimumLayer = upperRank[internalNode.swimlaneIndex];\n\t\t\t}\n\n\t\t\tinternalNode.temp[0] = minimumLayer;\n\n\t\t\tif (edgesToBeMarked != null)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < edgesToBeMarked.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = edgesToBeMarked[i];\n\n\t\t\t\t\t// Assign unique stamp ( y/m/d/h )\n\t\t\t\t\tinternalEdge.temp[0] = 5270620;\n\n\t\t\t\t\t// Add node on other end of edge to LinkedList of\n\t\t\t\t\t// nodes to be analysed\n\t\t\t\t\tvar otherNode = internalEdge.target;\n\n\t\t\t\t\t// Only add node if it hasn't been assigned a layer\n\t\t\t\t\tif (otherNode.temp[0] == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tstartNodes.push(otherNode);\n\n\t\t\t\t\t\t// Mark this other node as neither being\n\t\t\t\t\t\t// unassigned nor assigned so it isn't\n\t\t\t\t\t\t// added to this list again, but it's\n\t\t\t\t\t\t// layer isn't used in any calculation.\n\t\t\t\t\t\totherNode.temp[0] = -2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartNodes.shift();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Not all the edges have been scanned, get to the back of\n\t\t\t// the class and put the dunces cap on\n\t\t\tvar removedCell = startNodes.shift();\n\t\t\tstartNodes.push(internalNode);\n\n\t\t\tif (removedCell == internalNode && startNodes.length == 1)\n\t\t\t{\n\t\t\t\t// This is an error condition, we can't get out of\n\t\t\t\t// this loop. It could happen for more than one node\n\t\t\t\t// but that's a lot harder to detect. Log the error\n\t\t\t\t// TODO make log comment\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize the ranks down from their large starting value to place\n\t// at least 1 sink on layer 0\n//\tfor (var key in this.vertexMapper)\n//\t{\n//\t\tvar internalNode = this.vertexMapper[key];\n//\t\t// Mark the node as not having had a layer assigned\n//\t\tinternalNode.temp[0] -= this.maxRank;\n//\t}\n\t\n\t// Tighten the rank 0 nodes as far as possible\n//\tfor ( var i = 0; i < startNodesCopy.length; i++)\n//\t{\n//\t\tvar internalNode = startNodesCopy[i];\n//\t\tvar currentMaxLayer = 0;\n//\t\tvar layerDeterminingEdges = internalNode.connectsAsSource;\n//\n//\t\tfor ( var j = 0; j < layerDeterminingEdges.length; j++)\n//\t\t{\n//\t\t\tvar internalEdge = layerDeterminingEdges[j];\n//\t\t\tvar otherNode = internalEdge.target;\n//\t\t\tinternalNode.temp[0] = Math.max(currentMaxLayer,\n//\t\t\t\t\totherNode.temp[0] + 1);\n//\t\t\tcurrentMaxLayer = internalNode.temp[0];\n//\t\t}\n//\t}\n};\n\n/**\n * Function: maxChainDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of chains within groups.\n * Any cycles should be removed prior to running, but previously seen cells\n * are ignored.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * seen - a set of all nodes seen by this dfs\n * chainCount - the number of edges in the chain of vertices going through\n * the current swimlane\n */\nmxSwimlaneModel.prototype.maxChainDfs = function(parent, root, connectingEdge, seen, chainCount)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = mxCellPath.create(root.cell);\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvar slIndex = root.swimlaneIndex;\n\t\t\t\n\t\t\tif (this.ranksPerGroup[slIndex] == null || this.ranksPerGroup[slIndex] < chainCount)\n\t\t\t{\n\t\t\t\tthis.ranksPerGroup[slIndex] = chainCount;\n\t\t\t}\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Only navigate in source->target direction within the same\n\t\t\t\t// swimlane, or from a lower index swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex < targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.maxChainDfs(root, targetNode, internalEdge, mxUtils.clone(seen, null , true), 0);\n\t\t\t\t}\n\t\t\t\telse if (root.swimlaneIndex == targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.maxChainDfs(root, targetNode, internalEdge, mxUtils.clone(seen, null , true), chainCount + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: fixRanks\n *\n * Fixes the layer assignments to the values stored in the nodes. Also needs\n * to create dummy nodes for edges that cross layers.\n */\nmxSwimlaneModel.prototype.fixRanks = function()\n{\n\tvar rankList = [];\n\tthis.ranks = [];\n\n\tfor (var i = 0; i < this.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tthis.ranks[i] = rankList[i];\n\t}\n\n\t// Perform a DFS to obtain an initial ordering for each rank.\n\t// Without doing this you would end up having to process\n\t// crossings for a standard tree.\n\tvar rootsArray = null;\n\n\tif (this.roots != null)\n\t{\n\t\tvar oldRootsArray = this.roots;\n\t\trootsArray = [];\n\n\t\tfor (var i = 0; i < oldRootsArray.length; i++)\n\t\t{\n\t\t\tvar cell = oldRootsArray[i];\n\t\t\tvar internalNode = this.vertexMapper.get(cell);\n\t\t\trootsArray[i] = internalNode;\n\t\t}\n\t}\n\n\tthis.visit(function(parent, node, edge, layer, seen)\n\t{\n\t\tif (seen == 0 && node.maxRank < 0 && node.minRank < 0)\n\t\t{\n\t\t\trankList[node.temp[0]].push(node);\n\t\t\tnode.maxRank = node.temp[0];\n\t\t\tnode.minRank = node.temp[0];\n\n\t\t\t// Set temp[0] to the nodes position in the rank\n\t\t\tnode.temp[0] = rankList[node.maxRank].length - 1;\n\t\t}\n\n\t\tif (parent != null && edge != null)\n\t\t{\n\t\t\tvar parentToCellRankDifference = parent.maxRank - node.maxRank;\n\n\t\t\tif (parentToCellRankDifference > 1)\n\t\t\t{\n\t\t\t\t// There are ranks in between the parent and current cell\n\t\t\t\tedge.maxRank = parent.maxRank;\n\t\t\t\tedge.minRank = node.maxRank;\n\t\t\t\tedge.temp = [];\n\t\t\t\tedge.x = [];\n\t\t\t\tedge.y = [];\n\n\t\t\t\tfor (var i = edge.minRank + 1; i < edge.maxRank; i++)\n\t\t\t\t{\n\t\t\t\t\t// The connecting edge must be added to the\n\t\t\t\t\t// appropriate ranks\n\t\t\t\t\trankList[i].push(edge);\n\t\t\t\t\tedge.setGeneralPurposeVariable(i, rankList[i]\n\t\t\t\t\t\t\t.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, rootsArray, false, null);\n};\n\n/**\n * Function: visit\n *\n * A depth first search through the internal heirarchy model.\n *\n * Parameters:\n *\n * visitor - The visitor function pattern to be called for each node.\n * trackAncestors - Whether or not the search is to keep track all nodes\n * directly above this one in the search path.\n */\nmxSwimlaneModel.prototype.visit = function(visitor, dfsRoots, trackAncestors, seenNodes)\n{\n\t// Run dfs through on all roots\n\tif (dfsRoots != null)\n\t{\n\t\tfor (var i = 0; i < dfsRoots.length; i++)\n\t\t{\n\t\t\tvar internalNode = dfsRoots[i];\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tif (seenNodes == null)\n\t\t\t\t{\n\t\t\t\t\tseenNodes = new Object();\n\t\t\t\t}\n\n\t\t\t\tif (trackAncestors)\n\t\t\t\t{\n\t\t\t\t\t// Set up hash code for root\n\t\t\t\t\tinternalNode.hashCode = [];\n\t\t\t\t\tinternalNode.hashCode[0] = this.dfsCount;\n\t\t\t\t\tinternalNode.hashCode[1] = i;\n\t\t\t\t\tthis.extendedDfs(null, internalNode, null, visitor, seenNodes,\n\t\t\t\t\t\t\tinternalNode.hashCode, i, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.dfs(null, internalNode, null, visitor, seenNodes, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dfsCount++;\n\t}\n};\n\n/**\n * Function: dfs\n *\n * Performs a depth first search on the internal hierarchy model\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs a set of all of the\n * ancestor node of the current node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxSwimlaneModel.prototype.dfs = function(parent, root, connectingEdge, visitor, seen, layer)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\t\n\t\t\tfor (var i = 0; i< outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.dfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\tlayer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendedDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of cells ancestors, but it\n * should be only used when necessary because of it can be computationally\n * intensive for deep searches.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs\n * ancestors - the parent hash code\n * childHash - the new hash code for this node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxSwimlaneModel.prototype.extendedDfs = function(parent, root, connectingEdge, visitor, seen, ancestors, childHash, layer)\n{\n\t// Explanation of custom hash set. Previously, the ancestors variable\n\t// was passed through the dfs as a HashSet. The ancestors were copied\n\t// into a new HashSet and when the new child was processed it was also\n\t// added to the set. If the current node was in its ancestor list it\n\t// meant there is a cycle in the graph and this information is passed\n\t// to the visitor.visit() in the seen parameter. The HashSet clone was\n\t// very expensive on CPU so a custom hash was developed using primitive\n\t// types. temp[] couldn't be used so hashCode[] was added to each node.\n\t// Each new child adds another int to the array, copying the prefix\n\t// from its parent. Child of the same parent add different ints (the\n\t// limit is therefore 2^32 children per parent...). If a node has a\n\t// child with the hashCode already set then the child code is compared\n\t// to the same portion of the current nodes array. If they match there\n\t// is a loop.\n\t// Note that the basic mechanism would only allow for 1 use of this\n\t// functionality, so the root nodes have two ints. The second int is\n\t// incremented through each node root and the first is incremented\n\t// through each run of the dfs algorithm (therefore the dfs is not\n\t// thread safe). The hash code of each node is set if not already set,\n\t// or if the first int does not match that of the current run.\n\tif (root != null)\n\t{\n\t\tif (parent != null)\n\t\t{\n\t\t\t// Form this nodes hash code if necessary, that is, if the\n\t\t\t// hashCode variable has not been initialized or if the\n\t\t\t// start of the parent hash code does not equal the start of\n\t\t\t// this nodes hash code, indicating the code was set on a\n\t\t\t// previous run of this dfs.\n\t\t\tif (root.hashCode == null ||\n\t\t\t\troot.hashCode[0] != parent.hashCode[0])\n\t\t\t{\n\t\t\t\tvar hashCodeLength = parent.hashCode.length + 1;\n\t\t\t\troot.hashCode = parent.hashCode.slice();\n\t\t\t\troot.hashCode[hashCodeLength - 1] = childHash;\n\t\t\t}\n\t\t}\n\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\tvar incomingEdges = root.connectsAsTarget.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\t\t\t\t\n\t\t\t\t// Only navigate in source->target direction within the same\n\t\t\t\t// swimlane, or from a lower index swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex <= targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < incomingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = incomingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.source;\n\n\t\t\t\t// Only navigate in target->source direction from a lower index \n\t\t\t\t// swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex < targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHierarchicalLayoutStage\n * \n * The specific layout interface for hierarchical layouts. It adds a\n * <code>run</code> method with a parameter for the hierarchical layout model\n * that is shared between the layout stages.\n * \n * Constructor: mxHierarchicalLayoutStage\n *\n * Constructs a new hierarchical layout stage.\n */\nfunction mxHierarchicalLayoutStage() { };\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxHierarchicalLayoutStage.prototype.execute = function(parent) { };\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMedianHybridCrossingReduction\n * \n * Sets the horizontal locations of node and edge dummy nodes on each layer.\n * Uses median down and up weighings as well heuristic to straighten edges as\n * far as possible.\n * \n * Constructor: mxMedianHybridCrossingReduction\n *\n * Creates a coordinate assignment.\n * \n * Arguments:\n * \n * intraCellSpacing - the minimum buffer between cells on the same rank\n * interRankCellSpacing - the minimum distance between cells on adjacent ranks\n * orientation - the position of the root node(s) relative to the graph\n * initialX - the leftmost coordinate node placement starts at\n */\nfunction mxMedianHybridCrossingReduction(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxMedianHybridCrossingReduction.\n */\nmxMedianHybridCrossingReduction.prototype = new mxHierarchicalLayoutStage();\nmxMedianHybridCrossingReduction.prototype.constructor = mxMedianHybridCrossingReduction;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxMedianHybridCrossingReduction.prototype.layout = null;\n\n/**\n * Variable: maxIterations\n * \n * The maximum number of iterations to perform whilst reducing edge\n * crossings. Default is 24.\n */\nmxMedianHybridCrossingReduction.prototype.maxIterations = 24;\n\n/**\n * Variable: nestedBestRanks\n * \n * Stores each rank as a collection of cells in the best order found for\n * each layer so far\n */\nmxMedianHybridCrossingReduction.prototype.nestedBestRanks = null;\n\n/**\n * Variable: currentBestCrossings\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.currentBestCrossings = 0;\n\n/**\n * Variable: iterationsWithoutImprovement\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.iterationsWithoutImprovement = 0;\n\n/**\n * Variable: maxNoImprovementIterations\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.maxNoImprovementIterations = 2;\n\n/**\n * Function: execute\n * \n * Performs a vertex ordering within ranks as described by Gansner et al\n * 1993\n */\nmxMedianHybridCrossingReduction.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\n\t// Stores initial ordering as being the best one found so far\n\tthis.nestedBestRanks = [];\n\t\n\tfor (var i = 0; i < model.ranks.length; i++)\n\t{\n\t\tthis.nestedBestRanks[i] = model.ranks[i].slice();\n\t}\n\n\tvar iterationsWithoutImprovement = 0;\n\tvar currentBestCrossings = this.calculateCrossings(model);\n\n\tfor (var i = 0; i < this.maxIterations &&\n\t\titerationsWithoutImprovement < this.maxNoImprovementIterations; i++)\n\t{\n\t\tthis.weightedMedian(i, model);\n\t\tthis.transpose(i, model);\n\t\tvar candidateCrossings = this.calculateCrossings(model);\n\n\t\tif (candidateCrossings < currentBestCrossings)\n\t\t{\n\t\t\tcurrentBestCrossings = candidateCrossings;\n\t\t\titerationsWithoutImprovement = 0;\n\n\t\t\t// Store the current rankings as the best ones\n\t\t\tfor (var j = 0; j < this.nestedBestRanks.length; j++)\n\t\t\t{\n\t\t\t\tvar rank = model.ranks[j];\n\n\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\tthis.nestedBestRanks[j][cell.getGeneralPurposeVariable(j)] = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Increase count of iterations where we haven't improved the\n\t\t\t// layout\n\t\t\titerationsWithoutImprovement++;\n\n\t\t\t// Restore the best values to the cells\n\t\t\tfor (var j = 0; j < this.nestedBestRanks.length; j++)\n\t\t\t{\n\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\tcell.setGeneralPurposeVariable(j, k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (currentBestCrossings == 0)\n\t\t{\n\t\t\t// Do nothing further\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Store the best rankings but in the model\n\tvar ranks = [];\n\tvar rankList = [];\n\n\tfor (var i = 0; i < model.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tranks[i] = rankList[i];\n\t}\n\n\tfor (var i = 0; i < this.nestedBestRanks.length; i++)\n\t{\n\t\tfor (var j = 0; j < this.nestedBestRanks[i].length; j++)\n\t\t{\n\t\t\trankList[i].push(this.nestedBestRanks[i][j]);\n\t\t}\n\t}\n\n\tmodel.ranks = ranks;\n};\n\n\n/**\n * Function: calculateCrossings\n * \n * Calculates the total number of edge crossing in the current graph.\n * Returns the current number of edge crossings in the hierarchy graph\n * model in the current candidate layout\n * \n * Parameters:\n * \n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.calculateCrossings = function(model)\n{\n\tvar numRanks = model.ranks.length;\n\tvar totalCrossings = 0;\n\n\tfor (var i = 1; i < numRanks; i++)\n\t{\n\t\ttotalCrossings += this.calculateRankCrossing(i, model);\n\t}\n\t\n\treturn totalCrossings;\n};\n\n/**\n * Function: calculateRankCrossing\n * \n * Calculates the number of edges crossings between the specified rank and\n * the rank below it. Returns the number of edges crossings with the rank\n * beneath\n * \n * Parameters:\n * \n * i -  the topmost rank of the pair ( higher rank value )\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.calculateRankCrossing = function(i, model)\n{\n\tvar totalCrossings = 0;\n\tvar rank = model.ranks[i];\n\tvar previousRank = model.ranks[i - 1];\n\n\tvar tmpIndices = [];\n\n\t// Iterate over the top rank and fill in the connection information\n\tfor (var j = 0; j < rank.length; j++)\n\t{\n\t\tvar node = rank[j];\n\t\tvar rankPosition = node.getGeneralPurposeVariable(i);\n\t\tvar connectedCells = node.getPreviousLayerConnectedCells(i);\n\t\tvar nodeIndices = [];\n\n\t\tfor (var k = 0; k < connectedCells.length; k++)\n\t\t{\n\t\t\tvar connectedNode = connectedCells[k];\n\t\t\tvar otherCellRankPosition = connectedNode.getGeneralPurposeVariable(i - 1);\n\t\t\tnodeIndices.push(otherCellRankPosition);\n\t\t}\n\t\t\n\t\tnodeIndices.sort(function(x, y) { return x - y; });\n\t\ttmpIndices[rankPosition] = nodeIndices;\n\t}\n\t\n\tvar indices = [];\n\n\tfor (var j = 0; j < tmpIndices.length; j++)\n\t{\n\t\tindices = indices.concat(tmpIndices[j]);\n\t}\n\n\tvar firstIndex = 1;\n\t\n\twhile (firstIndex < previousRank.length)\n\t{\n\t\tfirstIndex <<= 1;\n\t}\n\n\tvar treeSize = 2 * firstIndex - 1;\n\tfirstIndex -= 1;\n\n\tvar tree = [];\n\t\n\tfor (var j = 0; j < treeSize; ++j)\n\t{\n\t\ttree[j] = 0;\n\t}\n\n\tfor (var j = 0; j < indices.length; j++)\n\t{\n\t\tvar index = indices[j];\n\t    var treeIndex = index + firstIndex;\n\t    ++tree[treeIndex];\n\t    \n\t    while (treeIndex > 0)\n\t    {\n\t    \tif (treeIndex % 2)\n\t    \t{\n\t    \t\ttotalCrossings += tree[treeIndex + 1];\n\t    \t}\n\t      \n\t    \ttreeIndex = (treeIndex - 1) >> 1;\n\t    \t++tree[treeIndex];\n\t    }\n\t}\n\n\treturn totalCrossings;\n};\n\n/**\n * Function: transpose\n * \n * Takes each possible adjacent cell pair on each rank and checks if\n * swapping them around reduces the number of crossing\n * \n * Parameters:\n * \n * mainLoopIteration - the iteration number of the main loop\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.transpose = function(mainLoopIteration, model)\n{\n\tvar improved = true;\n\n\t// Track the number of iterations in case of looping\n\tvar count = 0;\n\tvar maxCount = 10;\n\twhile (improved && count++ < maxCount)\n\t{\n\t\t// On certain iterations allow allow swapping of cell pairs with\n\t\t// equal edge crossings switched or not switched. This help to\n\t\t// nudge a stuck layout into a lower crossing total.\n\t\tvar nudge = mainLoopIteration % 2 == 1 && count % 2 == 1;\n\t\timproved = false;\n\t\t\n\t\tfor (var i = 0; i < model.ranks.length; i++)\n\t\t{\n\t\t\tvar rank = model.ranks[i];\n\t\t\tvar orderedCells = [];\n\t\t\t\n\t\t\tfor (var j = 0; j < rank.length; j++)\n\t\t\t{\n\t\t\t\tvar cell = rank[j];\n\t\t\t\tvar tempRank = cell.getGeneralPurposeVariable(i);\n\t\t\t\t\n\t\t\t\t// FIXME: Workaround to avoid negative tempRanks\n\t\t\t\tif (tempRank < 0)\n\t\t\t\t{\n\t\t\t\t\ttempRank = j;\n\t\t\t\t}\n\t\t\t\torderedCells[tempRank] = cell;\n\t\t\t}\n\t\t\t\n\t\t\tvar leftCellAboveConnections = null;\n\t\t\tvar leftCellBelowConnections = null;\n\t\t\tvar rightCellAboveConnections = null;\n\t\t\tvar rightCellBelowConnections = null;\n\t\t\t\n\t\t\tvar leftAbovePositions = null;\n\t\t\tvar leftBelowPositions = null;\n\t\t\tvar rightAbovePositions = null;\n\t\t\tvar rightBelowPositions = null;\n\t\t\t\n\t\t\tvar leftCell = null;\n\t\t\tvar rightCell = null;\n\n\t\t\tfor (var j = 0; j < (rank.length - 1); j++)\n\t\t\t{\n\t\t\t\t// For each intra-rank adjacent pair of cells\n\t\t\t\t// see if swapping them around would reduce the\n\t\t\t\t// number of edges crossing they cause in total\n\t\t\t\t// On every cell pair except the first on each rank, we\n\t\t\t\t// can save processing using the previous values for the\n\t\t\t\t// right cell on the new left cell\n\t\t\t\tif (j == 0)\n\t\t\t\t{\n\t\t\t\t\tleftCell = orderedCells[j];\n\t\t\t\t\tleftCellAboveConnections = leftCell\n\t\t\t\t\t\t\t.getNextLayerConnectedCells(i);\n\t\t\t\t\tleftCellBelowConnections = leftCell\n\t\t\t\t\t\t\t.getPreviousLayerConnectedCells(i);\n\t\t\t\t\tleftAbovePositions = [];\n\t\t\t\t\tleftBelowPositions = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < leftCellAboveConnections.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tleftAbovePositions[k] = leftCellAboveConnections[k].getGeneralPurposeVariable(i + 1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < leftCellBelowConnections.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tleftBelowPositions[k] = leftCellBelowConnections[k].getGeneralPurposeVariable(i - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleftCellAboveConnections = rightCellAboveConnections;\n\t\t\t\t\tleftCellBelowConnections = rightCellBelowConnections;\n\t\t\t\t\tleftAbovePositions = rightAbovePositions;\n\t\t\t\t\tleftBelowPositions = rightBelowPositions;\n\t\t\t\t\tleftCell = rightCell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trightCell = orderedCells[j + 1];\n\t\t\t\trightCellAboveConnections = rightCell\n\t\t\t\t\t\t.getNextLayerConnectedCells(i);\n\t\t\t\trightCellBelowConnections = rightCell\n\t\t\t\t\t\t.getPreviousLayerConnectedCells(i);\n\n\t\t\t\trightAbovePositions = [];\n\t\t\t\trightBelowPositions = [];\n\n\t\t\t\tfor (var k = 0; k < rightCellAboveConnections.length; k++)\n\t\t\t\t{\n\t\t\t\t\trightAbovePositions[k] = rightCellAboveConnections[k].getGeneralPurposeVariable(i + 1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < rightCellBelowConnections.length; k++)\n\t\t\t\t{\n\t\t\t\t\trightBelowPositions[k] = rightCellBelowConnections[k].getGeneralPurposeVariable(i - 1);\n\t\t\t\t}\n\n\t\t\t\tvar totalCurrentCrossings = 0;\n\t\t\t\tvar totalSwitchedCrossings = 0;\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < leftAbovePositions.length; k++)\n\t\t\t\t{\n\t\t\t\t\tfor (var ik = 0; ik < rightAbovePositions.length; ik++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (leftAbovePositions[k] > rightAbovePositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalCurrentCrossings++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (leftAbovePositions[k] < rightAbovePositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalSwitchedCrossings++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < leftBelowPositions.length; k++)\n\t\t\t\t{\n\t\t\t\t\tfor (var ik = 0; ik < rightBelowPositions.length; ik++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (leftBelowPositions[k] > rightBelowPositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalCurrentCrossings++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (leftBelowPositions[k] < rightBelowPositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalSwitchedCrossings++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((totalSwitchedCrossings < totalCurrentCrossings) ||\n\t\t\t\t\t(totalSwitchedCrossings == totalCurrentCrossings &&\n\t\t\t\t\tnudge))\n\t\t\t\t{\n\t\t\t\t\tvar temp = leftCell.getGeneralPurposeVariable(i);\n\t\t\t\t\tleftCell.setGeneralPurposeVariable(i, rightCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(i));\n\t\t\t\t\trightCell.setGeneralPurposeVariable(i, temp);\n\n\t\t\t\t\t// With this pair exchanged we have to switch all of\n\t\t\t\t\t// values for the left cell to the right cell so the\n\t\t\t\t\t// next iteration for this rank uses it as the left\n\t\t\t\t\t// cell again\n\t\t\t\t\trightCellAboveConnections = leftCellAboveConnections;\n\t\t\t\t\trightCellBelowConnections = leftCellBelowConnections;\n\t\t\t\t\trightAbovePositions = leftAbovePositions;\n\t\t\t\t\trightBelowPositions = leftBelowPositions;\n\t\t\t\t\trightCell = leftCell;\n\t\t\t\t\t\n\t\t\t\t\tif (!nudge)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Don't count nudges as improvement or we'll end\n\t\t\t\t\t\t// up stuck in two combinations and not finishing\n\t\t\t\t\t\t// as early as we should\n\t\t\t\t\t\timproved = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: weightedMedian\n * \n * Sweeps up or down the layout attempting to minimise the median placement\n * of connected cells on adjacent ranks\n * \n * Parameters:\n * \n * iteration - the iteration number of the main loop\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.weightedMedian = function(iteration, model)\n{\n\t// Reverse sweep direction each time through this method\n\tvar downwardSweep = (iteration % 2 == 0);\n\tif (downwardSweep)\n\t{\n\t\tfor (var j = model.maxRank - 1; j >= 0; j--)\n\t\t{\n\t\t\tthis.medianRank(j, downwardSweep);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var j = 1; j < model.maxRank; j++)\n\t\t{\n\t\t\tthis.medianRank(j, downwardSweep);\n\t\t}\n\t}\n};\n\n/**\n * Function: medianRank\n * \n * Attempts to minimise the median placement of connected cells on this rank\n * and one of the adjacent ranks\n * \n * Parameters:\n * \n * rankValue - the layer number of this rank\n * downwardSweep - whether or not this is a downward sweep through the graph\n */\nmxMedianHybridCrossingReduction.prototype.medianRank = function(rankValue, downwardSweep)\n{\n\tvar numCellsForRank = this.nestedBestRanks[rankValue].length;\n\tvar medianValues = [];\n\tvar reservedPositions = [];\n\n\tfor (var i = 0; i < numCellsForRank; i++)\n\t{\n\t\tvar cell = this.nestedBestRanks[rankValue][i];\n\t\tvar sorterEntry = new MedianCellSorter();\n\t\tsorterEntry.cell = cell;\n\n\t\t// Flip whether or not equal medians are flipped on up and down\n\t\t// sweeps\n\t\t// TODO re-implement some kind of nudge\n\t\t// medianValues[i].nudge = !downwardSweep;\n\t\tvar nextLevelConnectedCells;\n\t\t\n\t\tif (downwardSweep)\n\t\t{\n\t\t\tnextLevelConnectedCells = cell\n\t\t\t\t\t.getNextLayerConnectedCells(rankValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLevelConnectedCells = cell\n\t\t\t\t\t.getPreviousLayerConnectedCells(rankValue);\n\t\t}\n\t\t\n\t\tvar nextRankValue;\n\t\t\n\t\tif (downwardSweep)\n\t\t{\n\t\t\tnextRankValue = rankValue + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextRankValue = rankValue - 1;\n\t\t}\n\n\t\tif (nextLevelConnectedCells != null\n\t\t\t\t&& nextLevelConnectedCells.length != 0)\n\t\t{\n\t\t\tsorterEntry.medianValue = this.medianValue(\n\t\t\t\t\tnextLevelConnectedCells, nextRankValue);\n\t\t\tmedianValues.push(sorterEntry);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Nodes with no adjacent vertices are flagged in the reserved array\n\t\t\t// to indicate they should be left in their current position.\n\t\t\treservedPositions[cell.getGeneralPurposeVariable(rankValue)] = true;\n\t\t}\n\t}\n\t\n\tmedianValues.sort(MedianCellSorter.prototype.compare);\n\t\n\t// Set the new position of each node within the rank using\n\t// its temp variable\n\tfor (var i = 0; i < numCellsForRank; i++)\n\t{\n\t\tif (reservedPositions[i] == null)\n\t\t{\n\t\t\tvar cell = medianValues.shift().cell;\n\t\t\tcell.setGeneralPurposeVariable(rankValue, i);\n\t\t}\n\t}\n};\n\n/**\n * Function: medianValue\n * \n * Calculates the median rank order positioning for the specified cell using\n * the connected cells on the specified rank. Returns the median rank\n * ordering value of the connected cells\n * \n * Parameters:\n * \n * connectedCells - the cells on the specified rank connected to the\n * specified cell\n * rankValue - the rank that the connected cell lie upon\n */\nmxMedianHybridCrossingReduction.prototype.medianValue = function(connectedCells, rankValue)\n{\n\tvar medianValues = [];\n\tvar arrayCount = 0;\n\t\n\tfor (var i = 0; i < connectedCells.length; i++)\n\t{\n\t\tvar cell = connectedCells[i];\n\t\tmedianValues[arrayCount++] = cell.getGeneralPurposeVariable(rankValue);\n\t}\n\n\t// Sort() sorts lexicographically by default (i.e. 11 before 9) so force\n\t// numerical order sort\n\tmedianValues.sort(function(a,b){return a - b;});\n\t\n\tif (arrayCount % 2 == 1)\n\t{\n\t\t// For odd numbers of adjacent vertices return the median\n\t\treturn medianValues[Math.floor(arrayCount / 2)];\n\t}\n\telse if (arrayCount == 2)\n\t{\n\t\treturn ((medianValues[0] + medianValues[1]) / 2.0);\n\t}\n\telse\n\t{\n\t\tvar medianPoint = arrayCount / 2;\n\t\tvar leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n\t\tvar rightMedian = medianValues[arrayCount - 1]\n\t\t\t\t- medianValues[medianPoint];\n\n\t\treturn (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint]\n\t\t\t\t* leftMedian)\n\t\t\t\t/ (leftMedian + rightMedian);\n\t}\n};\n\n/**\n * Class: MedianCellSorter\n * \n * A utility class used to track cells whilst sorting occurs on the median\n * values. Does not violate (x.compareTo(y)==0) == (x.equals(y))\n *\n * Constructor: MedianCellSorter\n * \n * Constructs a new median cell sorter.\n */\nfunction MedianCellSorter()\n{\n\t// empty\n};\n\n/**\n * Variable: medianValue\n * \n * The weighted value of the cell stored.\n */\nMedianCellSorter.prototype.medianValue = 0;\n\n/**\n * Variable: cell\n * \n * The cell whose median value is being calculated\n */\nMedianCellSorter.prototype.cell = false;\n\n/**\n * Function: compare\n * \n * Compares two MedianCellSorters.\n */\nMedianCellSorter.prototype.compare = function(a, b)\n{\n\tif (a != null && b != null)\n\t{\n\t\tif (b.medianValue > a.medianValue)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t\telse if (b.medianValue < a.medianValue)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMinimumCycleRemover\n * \n * An implementation of the first stage of the Sugiyama layout. Straightforward\n * longest path calculation of layer assignment\n * \n * Constructor: mxMinimumCycleRemover\n *\n * Creates a cycle remover for the given internal model.\n */\nfunction mxMinimumCycleRemover(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxMinimumCycleRemover.prototype = new mxHierarchicalLayoutStage();\nmxMinimumCycleRemover.prototype.constructor = mxMinimumCycleRemover;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxMinimumCycleRemover.prototype.layout = null;\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxMinimumCycleRemover.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\tvar seenNodes = new Object();\n\tvar unseenNodesArray = model.vertexMapper.getValues();\n\tvar unseenNodes = new Object();\n\t\n\tfor (var i = 0; i < unseenNodesArray.length; i++)\n\t{\n\t\tunseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n\t}\n\t\n\t// Perform a dfs through the internal model. If a cycle is found,\n\t// reverse it.\n\tvar rootsArray = null;\n\t\n\tif (model.roots != null)\n\t{\n\t\tvar modelRoots = model.roots;\n\t\trootsArray = [];\n\t\t\n\t\tfor (var i = 0; i < modelRoots.length; i++)\n\t\t{\n\t\t\trootsArray[i] = model.vertexMapper.get(modelRoots[i]);\n\t\t}\n\t}\n\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\tif (node.isAncestor(parent))\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t}\n\t\t\n\t\tseenNodes[node.id] = node;\n\t\tdelete unseenNodes[node.id];\n\t}, rootsArray, true, null);\n\n\t// If there are any nodes that should be nodes that the dfs can miss\n\t// these need to be processed with the dfs and the roots assigned\n\t// correctly to form a correct internal model\n\tvar seenNodesCopy = mxUtils.clone(seenNodes, null, true);\n\n\t// Pick a random cell and dfs from it\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\tif (node.isAncestor(parent))\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t}\n\t\t\n\t\tseenNodes[node.id] = node;\n\t\tdelete unseenNodes[node.id];\n\t}, unseenNodes, true, seenNodesCopy);\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxCoordinateAssignment\n * \n * Sets the horizontal locations of node and edge dummy nodes on each layer.\n * Uses median down and up weighings as well as heuristics to straighten edges as\n * far as possible.\n * \n * Constructor: mxCoordinateAssignment\n *\n * Creates a coordinate assignment.\n * \n * Arguments:\n * \n * intraCellSpacing - the minimum buffer between cells on the same rank\n * interRankCellSpacing - the minimum distance between cells on adjacent ranks\n * orientation - the position of the root node(s) relative to the graph\n * initialX - the leftmost coordinate node placement starts at\n */\nfunction mxCoordinateAssignment(layout, intraCellSpacing, interRankCellSpacing,\n\torientation, initialX, parallelEdgeSpacing)\n{\n\tthis.layout = layout;\n\tthis.intraCellSpacing = intraCellSpacing;\n\tthis.interRankCellSpacing = interRankCellSpacing;\n\tthis.orientation = orientation;\n\tthis.initialX = initialX;\n\tthis.parallelEdgeSpacing = parallelEdgeSpacing;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxCoordinateAssignment.prototype = new mxHierarchicalLayoutStage();\nmxCoordinateAssignment.prototype.constructor = mxCoordinateAssignment;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxCoordinateAssignment.prototype.layout = null;\n\n/**\n * Variable: intraCellSpacing\n * \n * The minimum buffer between cells on the same rank. Default is 30.\n */\nmxCoordinateAssignment.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The minimum distance between cells on adjacent ranks. Default is 10.\n */\nmxCoordinateAssignment.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges.\n * Default is 10.\n */\nmxCoordinateAssignment.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: maxIterations\n * \n * The number of heuristic iterations to run. Default is 8.\n */\nmxCoordinateAssignment.prototype.maxIterations = 8;\n\n/**\n * Variable: prefHozEdgeSep\n * \n * The preferred horizontal distance between edges exiting a vertex\n */\nmxCoordinateAssignment.prototype.prefHozEdgeSep = 5;\n\n/**\n * Variable: prefVertEdgeOff\n * \n * The preferred vertical offset between edges exiting a vertex\n */\nmxCoordinateAssignment.prototype.prefVertEdgeOff = 2;\n\n/**\n * Variable: minEdgeJetty\n * \n * The minimum distance for an edge jetty from a vertex\n */\nmxCoordinateAssignment.prototype.minEdgeJetty = 12;\n\n/**\n * Variable: channelBuffer\n * \n * The size of the vertical buffer in the center of inter-rank channels\n * where edge control points should not be placed\n */\nmxCoordinateAssignment.prototype.channelBuffer = 4;\n\n/**\n * Variable: jettyPositions\n * \n * Map of internal edges and (x,y) pair of positions of the start and end jetty\n * for that edge where it connects to the source and target vertices.\n * Note this should technically be a WeakHashMap, but since JS does not\n * have an equivalent, housekeeping must be performed before using.\n * i.e. check all edges are still in the model and clear the values.\n * Note that the y co-ord is the offset of the jetty, not the\n * absolute point\n */\nmxCoordinateAssignment.prototype.jettyPositions = null;\n\n/**\n * Variable: orientation\n * \n * The position of the root ( start ) node(s) relative to the rest of the\n * laid out graph. Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxCoordinateAssignment.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: initialX\n * \n * The minimum x position node placement starts at\n */\nmxCoordinateAssignment.prototype.initialX = null;\n\n/**\n * Variable: limitX\n * \n * The maximum x value this positioning lays up to\n */\nmxCoordinateAssignment.prototype.limitX = null;\n\n/**\n * Variable: currentXDelta\n * \n * The sum of x-displacements for the current iteration\n */\nmxCoordinateAssignment.prototype.currentXDelta = null;\n\n/**\n * Variable: widestRank\n * \n * The rank that has the widest x position\n */\nmxCoordinateAssignment.prototype.widestRank = null;\n\n/**\n * Variable: rankTopY\n * \n * Internal cache of top-most values of Y for each rank\n */\nmxCoordinateAssignment.prototype.rankTopY = null;\n\n/**\n * Variable: rankBottomY\n * \n * Internal cache of bottom-most value of Y for each rank\n */\nmxCoordinateAssignment.prototype.rankBottomY = null;\n\n/**\n * Variable: widestRankValue\n * \n * The X-coordinate of the edge of the widest rank\n */\nmxCoordinateAssignment.prototype.widestRankValue = null;\n\n/**\n * Variable: rankWidths\n * \n * The width of all the ranks\n */\nmxCoordinateAssignment.prototype.rankWidths = null;\n\n/**\n * Variable: rankY\n * \n * The Y-coordinate of all the ranks\n */\nmxCoordinateAssignment.prototype.rankY = null;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxCoordinateAssignment.prototype.fineTuning = true;\n\n/**\n * Variable: nextLayerConnectedCache\n * \n * A store of connections to the layer above for speed\n */\nmxCoordinateAssignment.prototype.nextLayerConnectedCache = null;\n\n/**\n * Variable: previousLayerConnectedCache\n * \n * A store of connections to the layer below for speed\n */\nmxCoordinateAssignment.prototype.previousLayerConnectedCache = null;\n\n/**\n * Variable: groupPadding\n * \n * Padding added to resized parents\n */\nmxCoordinateAssignment.prototype.groupPadding = 10;\n\n/**\n * Utility method to display current positions\n */\nmxCoordinateAssignment.prototype.printStatus = function()\n{\n\tvar model = this.layout.getModel();\n\tmxLog.show();\n\n\tmxLog.writeln('======Coord assignment debug=======');\n\n\tfor (var j = 0; j < model.ranks.length; j++)\n\t{\n\t\tmxLog.write('Rank ', j, ' : ' );\n\t\tvar rank = model.ranks[j];\n\t\t\n\t\tfor (var k = 0; k < rank.length; k++)\n\t\t{\n\t\t\tvar cell = rank[k];\n\t\t\t\n\t\t\tmxLog.write(cell.getGeneralPurposeVariable(j), '  ');\n\t\t}\n\t\tmxLog.writeln();\n\t}\n\t\n\tmxLog.writeln('====================================');\n};\n\n/**\n * Function: execute\n * \n * A basic horizontal coordinate assignment algorithm\n */\nmxCoordinateAssignment.prototype.execute = function(parent)\n{\n\tthis.jettyPositions = Object();\n\tvar model = this.layout.getModel();\n\tthis.currentXDelta = 0.0;\n\n\tthis.initialCoords(this.layout.getGraph(), model);\n\t\n//\tthis.printStatus();\n\t\n\tif (this.fineTuning)\n\t{\n\t\tthis.minNode(model);\n\t}\n\t\n\tvar bestXDelta = 100000000.0;\n\t\n\tif (this.fineTuning)\n\t{\n\t\tfor (var i = 0; i < this.maxIterations; i++)\n\t\t{\n//\t\t\tthis.printStatus();\n\t\t\n\t\t\t// Median Heuristic\n\t\t\tif (i != 0)\n\t\t\t{\n\t\t\t\tthis.medianPos(i, model);\n\t\t\t\tthis.minNode(model);\n\t\t\t}\n\t\t\t\n\t\t\t// if the total offset is less for the current positioning,\n\t\t\t// there are less heavily angled edges and so the current\n\t\t\t// positioning is used\n\t\t\tif (this.currentXDelta < bestXDelta)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < model.ranks.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\t\tcell.setX(j, cell.getGeneralPurposeVariable(j));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbestXDelta = this.currentXDelta;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Restore the best positions\n\t\t\t\tfor (var j = 0; j < model.ranks.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\t\tcell.setGeneralPurposeVariable(j, cell.getX(j));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.minPath(this.layout.getGraph(), model);\n\t\t\t\n\t\t\tthis.currentXDelta = 0;\n\t\t}\n\t}\n\t\n\tthis.setCellLocations(this.layout.getGraph(), model);\n};\n\n/**\n * Function: minNode\n * \n * Performs one median positioning sweep in both directions\n */\nmxCoordinateAssignment.prototype.minNode = function(model)\n{\n\t// Queue all nodes\n\tvar nodeList = [];\n\t\n\t// Need to be able to map from cell to cellWrapper\n\tvar map = new mxDictionary();\n\tvar rank = [];\n\t\n\tfor (var i = 0; i <= model.maxRank; i++)\n\t{\n\t\trank[i] = model.ranks[i];\n\t\t\n\t\tfor (var j = 0; j < rank[i].length; j++)\n\t\t{\n\t\t\t// Use the weight to store the rank and visited to store whether\n\t\t\t// or not the cell is in the list\n\t\t\tvar node = rank[i][j];\n\t\t\tvar nodeWrapper = new WeightedCellSorter(node, i);\n\t\t\tnodeWrapper.rankIndex = j;\n\t\t\tnodeWrapper.visited = true;\n\t\t\tnodeList.push(nodeWrapper);\n\t\t\t\n\t\t\tmap.put(node, nodeWrapper);\n\t\t}\n\t}\n\t\n\t// Set a limit of the maximum number of times we will access the queue\n\t// in case a loop appears\n\tvar maxTries = nodeList.length * 10;\n\tvar count = 0;\n\t\n\t// Don't move cell within this value of their median\n\tvar tolerance = 1;\n\t\n\twhile (nodeList.length > 0 && count <= maxTries)\n\t{\n\t\tvar cellWrapper = nodeList.shift();\n\t\tvar cell = cellWrapper.cell;\n\t\t\n\t\tvar rankValue = cellWrapper.weightedValue;\n\t\tvar rankIndex = parseInt(cellWrapper.rankIndex);\n\t\t\n\t\tvar nextLayerConnectedCells = cell.getNextLayerConnectedCells(rankValue);\n\t\tvar previousLayerConnectedCells = cell.getPreviousLayerConnectedCells(rankValue);\n\t\t\n\t\tvar numNextLayerConnected = nextLayerConnectedCells.length;\n\t\tvar numPreviousLayerConnected = previousLayerConnectedCells.length;\n\n\t\tvar medianNextLevel = this.medianXValue(nextLayerConnectedCells,\n\t\t\t\trankValue + 1);\n\t\tvar medianPreviousLevel = this.medianXValue(previousLayerConnectedCells,\n\t\t\t\trankValue - 1);\n\n\t\tvar numConnectedNeighbours = numNextLayerConnected\n\t\t\t\t+ numPreviousLayerConnected;\n\t\tvar currentPosition = cell.getGeneralPurposeVariable(rankValue);\n\t\tvar cellMedian = currentPosition;\n\t\t\n\t\tif (numConnectedNeighbours > 0)\n\t\t{\n\t\t\tcellMedian = (medianNextLevel * numNextLayerConnected + medianPreviousLevel\n\t\t\t\t\t* numPreviousLayerConnected)\n\t\t\t\t\t/ numConnectedNeighbours;\n\t\t}\n\n\t\t// Flag storing whether or not position has changed\n\t\tvar positionChanged = false;\n\t\t\n\t\tif (cellMedian < currentPosition - tolerance)\n\t\t{\n\t\t\tif (rankIndex == 0)\n\t\t\t{\n\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\tpositionChanged = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar leftCell = rank[rankValue][rankIndex - 1];\n\t\t\t\tvar leftLimit = leftCell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue);\n\t\t\t\tleftLimit = leftLimit + leftCell.width / 2\n\t\t\t\t\t\t+ this.intraCellSpacing + cell.width / 2;\n\n\t\t\t\tif (leftLimit < cellMedian)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t\telse if (leftLimit < cell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t- tolerance)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, leftLimit);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (cellMedian > currentPosition + tolerance)\n\t\t{\n\t\t\tvar rankSize = rank[rankValue].length;\n\t\t\t\n\t\t\tif (rankIndex == rankSize - 1)\n\t\t\t{\n\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\tpositionChanged = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar rightCell = rank[rankValue][rankIndex + 1];\n\t\t\t\tvar rightLimit = rightCell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue);\n\t\t\t\trightLimit = rightLimit - rightCell.width / 2\n\t\t\t\t\t\t- this.intraCellSpacing - cell.width / 2;\n\t\t\t\t\n\t\t\t\tif (rightLimit > cellMedian)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t\telse if (rightLimit > cell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t+ tolerance)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, rightLimit);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (positionChanged)\n\t\t{\n\t\t\t// Add connected nodes to map and list\n\t\t\tfor (var i = 0; i < nextLayerConnectedCells.length; i++)\n\t\t\t{\n\t\t\t\tvar connectedCell = nextLayerConnectedCells[i];\n\t\t\t\tvar connectedCellWrapper = map.get(connectedCell);\n\t\t\t\t\n\t\t\t\tif (connectedCellWrapper != null)\n\t\t\t\t{\n\t\t\t\t\tif (connectedCellWrapper.visited == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tconnectedCellWrapper.visited = true;\n\t\t\t\t\t\tnodeList.push(connectedCellWrapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add connected nodes to map and list\n\t\t\tfor (var i = 0; i < previousLayerConnectedCells.length; i++)\n\t\t\t{\n\t\t\t\tvar connectedCell = previousLayerConnectedCells[i];\n\t\t\t\tvar connectedCellWrapper = map.get(connectedCell);\n\n\t\t\t\tif (connectedCellWrapper != null)\n\t\t\t\t{\n\t\t\t\t\tif (connectedCellWrapper.visited == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tconnectedCellWrapper.visited = true;\n\t\t\t\t\t\tnodeList.push(connectedCellWrapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tcellWrapper.visited = false;\n\t\tcount++;\n\t}\n};\n\n/**\n * Function: medianPos\n * \n * Performs one median positioning sweep in one direction\n * \n * Parameters:\n * \n * i - the iteration of the whole process\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.medianPos = function(i, model)\n{\n\t// Reverse sweep direction each time through this method\n\tvar downwardSweep = (i % 2 == 0);\n\t\n\tif (downwardSweep)\n\t{\n\t\tfor (var j = model.maxRank; j > 0; j--)\n\t\t{\n\t\t\tthis.rankMedianPosition(j - 1, model, j);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var j = 0; j < model.maxRank - 1; j++)\n\t\t{\n\t\t\tthis.rankMedianPosition(j + 1, model, j);\n\t\t}\n\t}\n};\n\n/**\n * Function: rankMedianPosition\n * \n * Performs median minimisation over one rank.\n * \n * Parameters:\n * \n * rankValue - the layer number of this rank\n * model - an internal model of the hierarchical layout\n * nextRankValue - the layer number whose connected cels are to be laid out\n * relative to\n */\nmxCoordinateAssignment.prototype.rankMedianPosition = function(rankValue, model, nextRankValue)\n{\n\tvar rank = model.ranks[rankValue];\n\n\t// Form an array of the order in which the cell are to be processed\n\t// , the order is given by the weighted sum of the in or out edges,\n\t// depending on whether we're traveling up or down the hierarchy.\n\tvar weightedValues = [];\n\tvar cellMap = new Object();\n\n\tfor (var i = 0; i < rank.length; i++)\n\t{\n\t\tvar currentCell = rank[i];\n\t\tweightedValues[i] = new WeightedCellSorter();\n\t\tweightedValues[i].cell = currentCell;\n\t\tweightedValues[i].rankIndex = i;\n\t\tcellMap[currentCell.id] = weightedValues[i];\n\t\tvar nextLayerConnectedCells = null;\n\t\t\n\t\tif (nextRankValue < rankValue)\n\t\t{\n\t\t\tnextLayerConnectedCells = currentCell\n\t\t\t\t\t.getPreviousLayerConnectedCells(rankValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLayerConnectedCells = currentCell\n\t\t\t\t\t.getNextLayerConnectedCells(rankValue);\n\t\t}\n\n\t\t// Calculate the weighing based on this node type and those this\n\t\t// node is connected to on the next layer\n\t\tweightedValues[i].weightedValue = this.calculatedWeightedValue(\n\t\t\t\tcurrentCell, nextLayerConnectedCells);\n\t}\n\n\tweightedValues.sort(WeightedCellSorter.prototype.compare);\n\n\t// Set the new position of each node within the rank using\n\t// its temp variable\n\t\n\tfor (var i = 0; i < weightedValues.length; i++)\n\t{\n\t\tvar numConnectionsNextLevel = 0;\n\t\tvar cell = weightedValues[i].cell;\n\t\tvar nextLayerConnectedCells = null;\n\t\tvar medianNextLevel = 0;\n\n\t\tif (nextRankValue < rankValue)\n\t\t{\n\t\t\tnextLayerConnectedCells = cell.getPreviousLayerConnectedCells(\n\t\t\t\t\trankValue).slice();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLayerConnectedCells = cell.getNextLayerConnectedCells(\n\t\t\t\t\trankValue).slice();\n\t\t}\n\n\t\tif (nextLayerConnectedCells != null)\n\t\t{\n\t\t\tnumConnectionsNextLevel = nextLayerConnectedCells.length;\n\t\t\t\n\t\t\tif (numConnectionsNextLevel > 0)\n\t\t\t{\n\t\t\t\tmedianNextLevel = this.medianXValue(nextLayerConnectedCells,\n\t\t\t\t\t\tnextRankValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// For case of no connections on the next level set the\n\t\t\t\t// median to be the current position and try to be\n\t\t\t\t// positioned there\n\t\t\t\tmedianNextLevel = cell.getGeneralPurposeVariable(rankValue);\n\t\t\t}\n\t\t}\n\n\t\tvar leftBuffer = 0.0;\n\t\tvar leftLimit = -100000000.0;\n\t\t\n\t\tfor (var j = weightedValues[i].rankIndex - 1; j >= 0;)\n\t\t{\n\t\t\tvar weightedValue = cellMap[rank[j].id];\n\t\t\t\n\t\t\tif (weightedValue != null)\n\t\t\t{\n\t\t\t\tvar leftCell = weightedValue.cell;\n\t\t\t\t\n\t\t\t\tif (weightedValue.visited)\n\t\t\t\t{\n\t\t\t\t\t// The left limit is the right hand limit of that\n\t\t\t\t\t// cell plus any allowance for unallocated cells\n\t\t\t\t\t// in-between\n\t\t\t\t\tleftLimit = leftCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t\t+ leftCell.width\n\t\t\t\t\t\t\t/ 2.0\n\t\t\t\t\t\t\t+ this.intraCellSpacing\n\t\t\t\t\t\t\t+ leftBuffer + cell.width / 2.0;\n\t\t\t\t\tj = -1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleftBuffer += leftCell.width + this.intraCellSpacing;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar rightBuffer = 0.0;\n\t\tvar rightLimit = 100000000.0;\n\t\t\n\t\tfor (var j = weightedValues[i].rankIndex + 1; j < weightedValues.length;)\n\t\t{\n\t\t\tvar weightedValue = cellMap[rank[j].id];\n\t\t\t\n\t\t\tif (weightedValue != null)\n\t\t\t{\n\t\t\t\tvar rightCell = weightedValue.cell;\n\t\t\t\t\n\t\t\t\tif (weightedValue.visited)\n\t\t\t\t{\n\t\t\t\t\t// The left limit is the right hand limit of that\n\t\t\t\t\t// cell plus any allowance for unallocated cells\n\t\t\t\t\t// in-between\n\t\t\t\t\trightLimit = rightCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t\t- rightCell.width\n\t\t\t\t\t\t\t/ 2.0\n\t\t\t\t\t\t\t- this.intraCellSpacing\n\t\t\t\t\t\t\t- rightBuffer - cell.width / 2.0;\n\t\t\t\t\tj = weightedValues.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\trightBuffer += rightCell.width + this.intraCellSpacing;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (medianNextLevel >= leftLimit && medianNextLevel <= rightLimit)\n\t\t{\n\t\t\tcell.setGeneralPurposeVariable(rankValue, medianNextLevel);\n\t\t}\n\t\telse if (medianNextLevel < leftLimit)\n\t\t{\n\t\t\t// Couldn't place at median value, place as close to that\n\t\t\t// value as possible\n\t\t\tcell.setGeneralPurposeVariable(rankValue, leftLimit);\n\t\t\tthis.currentXDelta += leftLimit - medianNextLevel;\n\t\t}\n\t\telse if (medianNextLevel > rightLimit)\n\t\t{\n\t\t\t// Couldn't place at median value, place as close to that\n\t\t\t// value as possible\n\t\t\tcell.setGeneralPurposeVariable(rankValue, rightLimit);\n\t\t\tthis.currentXDelta += medianNextLevel - rightLimit;\n\t\t}\n\n\t\tweightedValues[i].visited = true;\n\t}\n};\n\n/**\n * Function: calculatedWeightedValue\n * \n * Calculates the priority the specified cell has based on the type of its\n * cell and the cells it is connected to on the next layer\n * \n * Parameters:\n * \n * currentCell - the cell whose weight is to be calculated\n * collection - the cells the specified cell is connected to\n */\nmxCoordinateAssignment.prototype.calculatedWeightedValue = function(currentCell, collection)\n{\n\tvar totalWeight = 0;\n\t\n\tfor (var i = 0; i < collection.length; i++)\n\t{\n\t\tvar cell = collection[i];\n\n\t\tif (currentCell.isVertex() && cell.isVertex())\n\t\t{\n\t\t\ttotalWeight++;\n\t\t}\n\t\telse if (currentCell.isEdge() && cell.isEdge())\n\t\t{\n\t\t\ttotalWeight += 8;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttotalWeight += 2;\n\t\t}\n\t}\n\n\treturn totalWeight;\n};\n\n/**\n * Function: medianXValue\n * \n * Calculates the median position of the connected cell on the specified\n * rank\n * \n * Parameters:\n * \n * connectedCells - the cells the candidate connects to on this level\n * rankValue - the layer number of this rank\n */\nmxCoordinateAssignment.prototype.medianXValue = function(connectedCells, rankValue)\n{\n\tif (connectedCells.length == 0)\n\t{\n\t\treturn 0;\n\t}\n\n\tvar medianValues = [];\n\n\tfor (var i = 0; i < connectedCells.length; i++)\n\t{\n\t\tmedianValues[i] = connectedCells[i].getGeneralPurposeVariable(rankValue);\n\t}\n\n\tmedianValues.sort(function(a,b){return a - b;});\n\t\n\tif (connectedCells.length % 2 == 1)\n\t{\n\t\t// For odd numbers of adjacent vertices return the median\n\t\treturn medianValues[Math.floor(connectedCells.length / 2)];\n\t}\n\telse\n\t{\n\t\tvar medianPoint = connectedCells.length / 2;\n\t\tvar leftMedian = medianValues[medianPoint - 1];\n\t\tvar rightMedian = medianValues[medianPoint];\n\n\t\treturn ((leftMedian + rightMedian) / 2);\n\t}\n};\n\n/**\n * Function: initialCoords\n * \n * Sets up the layout in an initial positioning. The ranks are all centered\n * as much as possible along the middle vertex in each rank. The other cells\n * are then placed as close as possible on either side.\n * \n * Parameters:\n * \n * facade - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.initialCoords = function(facade, model)\n{\n\tthis.calculateWidestRank(facade, model);\n\n\t// Sweep up and down from the widest rank\n\tfor (var i = this.widestRank; i >= 0; i--)\n\t{\n\t\tif (i < model.maxRank)\n\t\t{\n\t\t\tthis.rankCoordinates(i, facade, model);\n\t\t}\n\t}\n\n\tfor (var i = this.widestRank+1; i <= model.maxRank; i++)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tthis.rankCoordinates(i, facade, model);\n\t\t}\n\t}\n};\n\n/**\n * Function: rankCoordinates\n * \n * Sets up the layout in an initial positioning. All the first cells in each\n * rank are moved to the left and the rest of the rank inserted as close\n * together as their size and buffering permits. This method works on just\n * the specified rank.\n * \n * Parameters:\n * \n * rankValue - the current rank being processed\n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.rankCoordinates = function(rankValue, graph, model)\n{\n\tvar rank = model.ranks[rankValue];\n\tvar maxY = 0.0;\n\tvar localX = this.initialX + (this.widestRankValue - this.rankWidths[rankValue])\n\t\t\t/ 2;\n\n\t// Store whether or not any of the cells' bounds were unavailable so\n\t// to only issue the warning once for all cells\n\tvar boundsWarning = false;\n\t\n\tfor (var i = 0; i < rank.length; i++)\n\t{\n\t\tvar node = rank[i];\n\t\t\n\t\tif (node.isVertex())\n\t\t{\n\t\t\tvar bounds = this.layout.getVertexBounds(node.cell);\n\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnode.width = bounds.width;\n\t\t\t\t\tnode.height = bounds.height;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.width = bounds.height;\n\t\t\t\t\tnode.height = bounds.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tboundsWarning = true;\n\t\t\t}\n\n\t\t\tmaxY = Math.max(maxY, node.height);\n\t\t}\n\t\telse if (node.isEdge())\n\t\t{\n\t\t\t// The width is the number of additional parallel edges\n\t\t\t// time the parallel edge spacing\n\t\t\tvar numEdges = 1;\n\n\t\t\tif (node.edges != null)\n\t\t\t{\n\t\t\t\tnumEdges = node.edges.length;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxLog.warn('edge.edges is null');\n\t\t\t}\n\n\t\t\tnode.width = (numEdges - 1) * this.parallelEdgeSpacing;\n\t\t}\n\n\t\t// Set the initial x-value as being the best result so far\n\t\tlocalX += node.width / 2.0;\n\t\tnode.setX(rankValue, localX);\n\t\tnode.setGeneralPurposeVariable(rankValue, localX);\n\t\tlocalX += node.width / 2.0;\n\t\tlocalX += this.intraCellSpacing;\n\t}\n\n\tif (boundsWarning == true)\n\t{\n\t\tmxLog.warn('At least one cell has no bounds');\n\t}\n};\n\n/**\n * Function: calculateWidestRank\n * \n * Calculates the width rank in the hierarchy. Also set the y value of each\n * rank whilst performing the calculation\n * \n * Parameters:\n * \n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.calculateWidestRank = function(graph, model)\n{\n\t// Starting y co-ordinate\n\tvar y = -this.interRankCellSpacing;\n\t\n\t// Track the widest cell on the last rank since the y\n\t// difference depends on it\n\tvar lastRankMaxCellHeight = 0.0;\n\tthis.rankWidths = [];\n\tthis.rankY = [];\n\n\tfor (var rankValue = model.maxRank; rankValue >= 0; rankValue--)\n\t{\n\t\t// Keep track of the widest cell on this rank\n\t\tvar maxCellHeight = 0.0;\n\t\tvar rank = model.ranks[rankValue];\n\t\tvar localX = this.initialX;\n\n\t\t// Store whether or not any of the cells' bounds were unavailable so\n\t\t// to only issue the warning once for all cells\n\t\tvar boundsWarning = false;\n\t\t\n\t\tfor (var i = 0; i < rank.length; i++)\n\t\t{\n\t\t\tvar node = rank[i];\n\n\t\t\tif (node.isVertex())\n\t\t\t{\n\t\t\t\tvar bounds = this.layout.getVertexBounds(node.cell);\n\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.width = bounds.width;\n\t\t\t\t\t\tnode.height = bounds.height;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.width = bounds.height;\n\t\t\t\t\t\tnode.height = bounds.width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tboundsWarning = true;\n\t\t\t\t}\n\n\t\t\t\tmaxCellHeight = Math.max(maxCellHeight, node.height);\n\t\t\t}\n\t\t\telse if (node.isEdge())\n\t\t\t{\n\t\t\t\t// The width is the number of additional parallel edges\n\t\t\t\t// time the parallel edge spacing\n\t\t\t\tvar numEdges = 1;\n\n\t\t\t\tif (node.edges != null)\n\t\t\t\t{\n\t\t\t\t\tnumEdges = node.edges.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmxLog.warn('edge.edges is null');\n\t\t\t\t}\n\n\t\t\t\tnode.width = (numEdges - 1) * this.parallelEdgeSpacing;\n\t\t\t}\n\n\t\t\t// Set the initial x-value as being the best result so far\n\t\t\tlocalX += node.width / 2.0;\n\t\t\tnode.setX(rankValue, localX);\n\t\t\tnode.setGeneralPurposeVariable(rankValue, localX);\n\t\t\tlocalX += node.width / 2.0;\n\t\t\tlocalX += this.intraCellSpacing;\n\n\t\t\tif (localX > this.widestRankValue)\n\t\t\t{\n\t\t\t\tthis.widestRankValue = localX;\n\t\t\t\tthis.widestRank = rankValue;\n\t\t\t}\n\n\t\t\tthis.rankWidths[rankValue] = localX;\n\t\t}\n\n\t\tif (boundsWarning == true)\n\t\t{\n\t\t\tmxLog.warn('At least one cell has no bounds');\n\t\t}\n\n\t\tthis.rankY[rankValue] = y;\n\t\tvar distanceToNextRank = maxCellHeight / 2.0\n\t\t\t\t+ lastRankMaxCellHeight / 2.0 + this.interRankCellSpacing;\n\t\tlastRankMaxCellHeight = maxCellHeight;\n\n\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.orientation == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\ty += distanceToNextRank;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ty -= distanceToNextRank;\n\t\t}\n\n\t\tfor (var i = 0; i < rank.length; i++)\n\t\t{\n\t\t\tvar cell = rank[i];\n\t\t\tcell.setY(rankValue, y);\n\t\t}\n\t}\n};\n\n/**\n * Function: minPath\n * \n * Straightens out chains of virtual nodes where possibleacade to those stored after this layout\n * processing step has completed.\n * \n * Parameters:\n *\n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.minPath = function(graph, model)\n{\n\t// Work down and up each edge with at least 2 control points\n\t// trying to straighten each one out. If the same number of\n\t// straight segments are formed in both directions, the \n\t// preferred direction used is the one where the final\n\t// control points have the least offset from the connectable \n\t// region of the terminating vertices\n\tvar edges = model.edgeMapper.getValues();\n\t\n\tfor (var j = 0; j < edges.length; j++)\n\t{\n\t\tvar cell = edges[j];\n\t\t\n\t\tif (cell.maxRank - cell.minRank - 1 < 1)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At least two virtual nodes in the edge\n\t\t// Check first whether the edge is already straight\n\t\tvar referenceX = cell\n\t\t\t\t.getGeneralPurposeVariable(cell.minRank + 1);\n\t\tvar edgeStraight = true;\n\t\tvar refSegCount = 0;\n\t\t\n\t\tfor (var i = cell.minRank + 2; i < cell.maxRank; i++)\n\t\t{\n\t\t\tvar x = cell.getGeneralPurposeVariable(i);\n\n\t\t\tif (referenceX != x)\n\t\t\t{\n\t\t\t\tedgeStraight = false;\n\t\t\t\treferenceX = x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\trefSegCount++;\n\t\t\t}\n\t\t}\n\n\t\tif (!edgeStraight)\n\t\t{\n\t\t\tvar upSegCount = 0;\n\t\t\tvar downSegCount = 0;\n\t\t\tvar upXPositions = [];\n\t\t\tvar downXPositions = [];\n\n\t\t\tvar currentX = cell.getGeneralPurposeVariable(cell.minRank + 1);\n\n\t\t\tfor (var i = cell.minRank + 1; i < cell.maxRank - 1; i++)\n\t\t\t{\n\t\t\t\t// Attempt to straight out the control point on the\n\t\t\t\t// next segment up with the current control point.\n\t\t\t\tvar nextX = cell.getX(i + 1);\n\n\t\t\t\tif (currentX == nextX)\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = currentX;\n\t\t\t\t\tupSegCount++;\n\t\t\t\t}\n\t\t\t\telse if (this.repositionValid(model, cell, i + 1, currentX))\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = currentX;\n\t\t\t\t\tupSegCount++;\n\t\t\t\t\t// Leave currentX at same value\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = nextX;\n\t\t\t\t\tcurrentX = nextX;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\n\t\t\tcurrentX = cell.getX(i);\n\n\t\t\tfor (var i = cell.maxRank - 1; i > cell.minRank + 1; i--)\n\t\t\t{\n\t\t\t\t// Attempt to straight out the control point on the\n\t\t\t\t// next segment down with the current control point.\n\t\t\t\tvar nextX = cell.getX(i - 1);\n\n\t\t\t\tif (currentX == nextX)\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = currentX;\n\t\t\t\t\tdownSegCount++;\n\t\t\t\t}\n\t\t\t\telse if (this.repositionValid(model, cell, i - 1, currentX))\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = currentX;\n\t\t\t\t\tdownSegCount++;\n\t\t\t\t\t// Leave currentX at same value\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = cell.getX(i-1);\n\t\t\t\t\tcurrentX = nextX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (downSegCount > refSegCount || upSegCount > refSegCount)\n\t\t\t{\n\t\t\t\tif (downSegCount >= upSegCount)\n\t\t\t\t{\n\t\t\t\t\t// Apply down calculation values\n\t\t\t\t\tfor (var i = cell.maxRank - 2; i > cell.minRank; i--)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell.setX(i, downXPositions[i - cell.minRank - 1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (upSegCount > downSegCount)\n\t\t\t\t{\n\t\t\t\t\t// Apply up calculation values\n\t\t\t\t\tfor (var i = cell.minRank + 2; i < cell.maxRank; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell.setX(i, upXPositions[i - cell.minRank - 2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Neither direction provided a favourable result\n\t\t\t\t\t// But both calculations are better than the\n\t\t\t\t\t// existing solution, so apply the one with minimal\n\t\t\t\t\t// offset to attached vertices at either end.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: repositionValid\n * \n * Determines whether or not a node may be moved to the specified x \n * position on the specified rank\n * \n * Parameters:\n *\n * model - the layout model\n * cell - the cell being analysed\n * rank - the layer of the cell\n * position - the x position being sought\n */\nmxCoordinateAssignment.prototype.repositionValid = function(model, cell, rank, position)\n{\n\tvar rankArray = model.ranks[rank];\n\tvar rankIndex = -1;\n\n\tfor (var i = 0; i < rankArray.length; i++)\n\t{\n\t\tif (cell == rankArray[i])\n\t\t{\n\t\t\trankIndex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (rankIndex < 0)\n\t{\n\t\treturn false;\n\t}\n\n\tvar currentX = cell.getGeneralPurposeVariable(rank);\n\n\tif (position < currentX)\n\t{\n\t\t// Trying to move node to the left.\n\t\tif (rankIndex == 0)\n\t\t{\n\t\t\t// Left-most node, can move anywhere\n\t\t\treturn true;\n\t\t}\n\n\t\tvar leftCell = rankArray[rankIndex - 1];\n\t\tvar leftLimit = leftCell.getGeneralPurposeVariable(rank);\n\t\tleftLimit = leftLimit + leftCell.width / 2\n\t\t\t\t+ this.intraCellSpacing + cell.width / 2;\n\n\t\tif (leftLimit <= position)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (position > currentX)\n\t{\n\t\t// Trying to move node to the right.\n\t\tif (rankIndex == rankArray.length - 1)\n\t\t{\n\t\t\t// Right-most node, can move anywhere\n\t\t\treturn true;\n\t\t}\n\n\t\tvar rightCell = rankArray[rankIndex + 1];\n\t\tvar rightLimit = rightCell.getGeneralPurposeVariable(rank);\n\t\trightLimit = rightLimit - rightCell.width / 2\n\t\t\t\t- this.intraCellSpacing - cell.width / 2;\n\n\t\tif (rightLimit >= position)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/**\n * Function: setCellLocations\n * \n * Sets the cell locations in the facade to those stored after this layout\n * processing step has completed.\n * \n * Parameters:\n *\n * graph - the input graph\n * model - the layout model\n */\nmxCoordinateAssignment.prototype.setCellLocations = function(graph, model)\n{\n\tthis.rankTopY = [];\n\tthis.rankBottomY = [];\n\n\tfor (var i = 0; i < model.ranks.length; i++)\n\t{\n\t\tthis.rankTopY[i] = Number.MAX_VALUE;\n\t\tthis.rankBottomY[i] = -Number.MAX_VALUE;\n\t}\n\t\n\tvar vertices = model.vertexMapper.getValues();\n\n\t// Process vertices all first, since they define the lower and \n\t// limits of each rank. Between these limits lie the channels\n\t// where the edges can be routed across the graph\n\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tthis.setVertexLocation(vertices[i]);\n\t}\n\t\n\t// Post process edge styles. Needs the vertex locations set for initial\n\t// values of the top and bottoms of each rank\n\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.ORTHOGONAL\n\t\t\t|| this.layout.edgeStyle == mxHierarchicalEdgeStyle.POLYLINE\n\t\t\t|| this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t{\n\t\tthis.localEdgeProcessing(model);\n\t}\n\n\tvar edges = model.edgeMapper.getValues();\n\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tthis.setEdgePosition(edges[i]);\n\t}\n};\n\n/**\n * Function: localEdgeProcessing\n * \n * Separates the x position of edges as they connect to vertices\n * \n * Parameters:\n *\n * model - the layout model\n */\nmxCoordinateAssignment.prototype.localEdgeProcessing = function(model)\n{\n\t// Iterate through each vertex, look at the edges connected in\n\t// both directions.\n\tfor (var rankIndex = 0; rankIndex < model.ranks.length; rankIndex++)\n\t{\n\t\tvar rank = model.ranks[rankIndex];\n\n\t\tfor (var cellIndex = 0; cellIndex < rank.length; cellIndex++)\n\t\t{\n\t\t\tvar cell = rank[cellIndex];\n\n\t\t\tif (cell.isVertex())\n\t\t\t{\n\t\t\t\tvar currentCells = cell.getPreviousLayerConnectedCells(rankIndex);\n\n\t\t\t\tvar currentRank = rankIndex - 1;\n\n\t\t\t\t// Two loops, last connected cells, and next\n\t\t\t\tfor (var k = 0; k < 2; k++)\n\t\t\t\t{\n\t\t\t\t\tif (currentRank > -1\n\t\t\t\t\t\t\t&& currentRank < model.ranks.length\n\t\t\t\t\t\t\t&& currentCells != null\n\t\t\t\t\t\t\t&& currentCells.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sortedCells = [];\n\n\t\t\t\t\t\tfor (var j = 0; j < currentCells.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar sorter = new WeightedCellSorter(\n\t\t\t\t\t\t\t\t\tcurrentCells[j], currentCells[j].getX(currentRank));\n\t\t\t\t\t\t\tsortedCells.push(sorter);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsortedCells.sort(WeightedCellSorter.prototype.compare);\n\n\t\t\t\t\t\tvar leftLimit = cell.x[0] - cell.width / 2;\n\t\t\t\t\t\tvar rightLimit = leftLimit + cell.width;\n\n\t\t\t\t\t\t// Connected edge count starts at 1 to allow for buffer\n\t\t\t\t\t\t// with edge of vertex\n\t\t\t\t\t\tvar connectedEdgeCount = 0;\n\t\t\t\t\t\tvar connectedEdgeGroupCount = 0;\n\t\t\t\t\t\tvar connectedEdges = [];\n\t\t\t\t\t\t// Calculate width requirements for all connected edges\n\t\t\t\t\t\tfor (var j = 0; j < sortedCells.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar innerCell = sortedCells[j].cell;\n\t\t\t\t\t\t\tvar connections;\n\n\t\t\t\t\t\t\tif (innerCell.isVertex())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Get the connecting edge\n\t\t\t\t\t\t\t\tif (k == 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnections = cell.connectsAsSource;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnections = cell.connectsAsTarget;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor (var connIndex = 0; connIndex < connections.length; connIndex++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (connections[connIndex].source == innerCell\n\t\t\t\t\t\t\t\t\t\t\t|| connections[connIndex].target == innerCell)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconnectedEdgeCount += connections[connIndex].edges\n\t\t\t\t\t\t\t\t\t\t\t\t.length;\n\t\t\t\t\t\t\t\t\t\tconnectedEdgeGroupCount++;\n\n\t\t\t\t\t\t\t\t\t\tconnectedEdges.push(connections[connIndex]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconnectedEdgeCount += innerCell.edges.length;\n\t\t\t\t\t\t\t\tconnectedEdgeGroupCount++;\n\t\t\t\t\t\t\t\tconnectedEdges.push(innerCell);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar requiredWidth = (connectedEdgeCount + 1)\n\t\t\t\t\t\t\t\t* this.prefHozEdgeSep;\n\n\t\t\t\t\t\t// Add a buffer on the edges of the vertex if the edge count allows\n\t\t\t\t\t\tif (cell.width > requiredWidth\n\t\t\t\t\t\t\t\t+ (2 * this.prefHozEdgeSep))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tleftLimit += this.prefHozEdgeSep;\n\t\t\t\t\t\t\trightLimit -= this.prefHozEdgeSep;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar availableWidth = rightLimit - leftLimit;\n\t\t\t\t\t\tvar edgeSpacing = availableWidth / connectedEdgeCount;\n\n\t\t\t\t\t\tvar currentX = leftLimit + edgeSpacing / 2.0;\n\t\t\t\t\t\tvar currentYOffset = this.minEdgeJetty - this.prefVertEdgeOff;\n\t\t\t\t\t\tvar maxYOffset = 0;\n\n\t\t\t\t\t\tfor (var j = 0; j < connectedEdges.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar numActualEdges = connectedEdges[j].edges\n\t\t\t\t\t\t\t\t\t.length;\n\t\t\t\t\t\t\tvar pos = this.jettyPositions[connectedEdges[j].ids[0]];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (pos == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpos = [];\n\t\t\t\t\t\t\t\tthis.jettyPositions[connectedEdges[j].ids[0]] = pos;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (j < connectedEdgeCount / 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcurrentYOffset += this.prefVertEdgeOff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (j > connectedEdgeCount / 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcurrentYOffset -= this.prefVertEdgeOff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Ignore the case if equals, this means the second of 2\n\t\t\t\t\t\t\t// jettys with the same y (even number of edges)\n\n\t\t\t\t\t\t\tfor (var m = 0; m < numActualEdges; m++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpos[m * 4 + k * 2] = currentX;\n\t\t\t\t\t\t\t\tcurrentX += edgeSpacing;\n\t\t\t\t\t\t\t\tpos[m * 4 + k * 2 + 1] = currentYOffset;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmaxYOffset = Math.max(maxYOffset,\n\t\t\t\t\t\t\t\t\tcurrentYOffset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentCells = cell.getNextLayerConnectedCells(rankIndex);\n\n\t\t\t\t\tcurrentRank = rankIndex + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: setEdgePosition\n * \n * Fixes the control points\n */\nmxCoordinateAssignment.prototype.setEdgePosition = function(cell)\n{\n\t// For parallel edges we need to seperate out the points a\n\t// little\n\tvar offsetX = 0;\n\t// Only set the edge control points once\n\n\tif (cell.temp[0] != 101207)\n\t{\n\t\tvar maxRank = cell.maxRank;\n\t\tvar minRank = cell.minRank;\n\t\t\n\t\tif (maxRank == minRank)\n\t\t{\n\t\t\tmaxRank = cell.source.maxRank;\n\t\t\tminRank = cell.target.minRank;\n\t\t}\n\t\t\n\t\tvar parallelEdgeCount = 0;\n\t\tvar jettys = this.jettyPositions[cell.ids[0]];\n\n\t\tvar source = cell.isReversed ? cell.target.cell : cell.source.cell;\n\t\tvar graph = this.layout.graph;\n\t\tvar layoutReversed = this.orientation == mxConstants.DIRECTION_EAST\n\t\t\t\t|| this.orientation == mxConstants.DIRECTION_SOUTH;\n\n\t\tfor (var i = 0; i < cell.edges.length; i++)\n\t\t{\n\t\t\tvar realEdge = cell.edges[i];\n\t\t\tvar realSource = this.layout.getVisibleTerminal(realEdge, true);\n\n\t\t\t//List oldPoints = graph.getPoints(realEdge);\n\t\t\tvar newPoints = [];\n\n\t\t\t// Single length reversed edges end up with the jettys in the wrong\n\t\t\t// places. Since single length edges only have jettys, not segment\n\t\t\t// control points, we just say the edge isn't reversed in this section\n\t\t\tvar reversed = cell.isReversed;\n\t\t\t\n\t\t\tif (realSource != source)\n\t\t\t{\n\t\t\t\t// The real edges include all core model edges and these can go\n\t\t\t\t// in both directions. If the source of the hierarchical model edge\n\t\t\t\t// isn't the source of the specific real edge in this iteration\n\t\t\t\t// treat if as reversed\n\t\t\t\treversed = !reversed;\n\t\t\t}\n\n\t\t\t// First jetty of edge\n\t\t\tif (jettys != null)\n\t\t\t{\n\t\t\t\tvar arrayOffset = reversed ? 2 : 0;\n\t\t\t\tvar y = reversed ?\n\t\t\t\t\t\t(layoutReversed ? this.rankBottomY[minRank] : this.rankTopY[minRank]) :\n\t\t\t\t\t\t\t(layoutReversed ? this.rankTopY[maxRank] : this.rankBottomY[maxRank]);\n\t\t\t\tvar jetty = jettys[parallelEdgeCount * 4 + 1 + arrayOffset];\n\t\t\t\t\n\t\t\t\tif (reversed != layoutReversed)\n\t\t\t\t{\n\t\t\t\t\tjetty = -jetty;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ty += jetty;\n\t\t\t\tvar x = jettys[parallelEdgeCount * 4 + arrayOffset];\n\t\t\t\t\n\t\t\t\tvar modelSource = graph.model.getTerminal(realEdge, true);\n\n\t\t\t\tif (this.layout.isPort(modelSource) && graph.model.getParent(modelSource) == realSource)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.view.getState(modelSource);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = state.x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = realSource.geometry.x + cell.source.width * modelSource.geometry.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH\n\t\t\t\t\t\t|| this.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\t\t\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(x, y + jetty));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(y, x));\n\t\t\t\t\t\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(y + jetty, x));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Declare variables to define loop through edge points and \n\t\t\t// change direction if edge is reversed\n\n\t\t\tvar loopStart = cell.x.length - 1;\n\t\t\tvar loopLimit = -1;\n\t\t\tvar loopDelta = -1;\n\t\t\tvar currentRank = cell.maxRank - 1;\n\n\t\t\tif (reversed)\n\t\t\t{\n\t\t\t\tloopStart = 0;\n\t\t\t\tloopLimit = cell.x.length;\n\t\t\t\tloopDelta = 1;\n\t\t\t\tcurrentRank = cell.minRank + 1;\n\t\t\t}\n\t\t\t// Reversed edges need the points inserted in\n\t\t\t// reverse order\n\t\t\tfor (var j = loopStart; (cell.maxRank != cell.minRank) && j != loopLimit; j += loopDelta)\n\t\t\t{\n\t\t\t\t// The horizontal position in a vertical layout\n\t\t\t\tvar positionX = cell.x[j] + offsetX;\n\n\t\t\t\t// Work out the vertical positions in a vertical layout\n\t\t\t\t// in the edge buffer channels above and below this rank\n\t\t\t\tvar topChannelY = (this.rankTopY[currentRank] + this.rankBottomY[currentRank + 1]) / 2.0;\n\t\t\t\tvar bottomChannelY = (this.rankTopY[currentRank - 1] + this.rankBottomY[currentRank]) / 2.0;\n\n\t\t\t\tif (reversed)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = topChannelY;\n\t\t\t\t\ttopChannelY = bottomChannelY;\n\t\t\t\t\tbottomChannelY = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(positionX, topChannelY));\n\t\t\t\t\tnewPoints.push(new mxPoint(positionX, bottomChannelY));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(topChannelY, positionX));\n\t\t\t\t\tnewPoints.push(new mxPoint(bottomChannelY, positionX));\n\t\t\t\t}\n\n\t\t\t\tthis.limitX = Math.max(this.limitX, positionX);\n\t\t\t\tcurrentRank += loopDelta;\n\t\t\t}\n\n\t\t\t// Second jetty of edge\n\t\t\tif (jettys != null)\n\t\t\t{\n\t\t\t\tvar arrayOffset = reversed ? 2 : 0;\n\t\t\t\tvar rankY = reversed ?\n\t\t\t\t\t\t(layoutReversed ? this.rankTopY[maxRank] : this.rankBottomY[maxRank]) :\n\t\t\t\t\t\t\t(layoutReversed ? this.rankBottomY[minRank] : this.rankTopY[minRank]);\n\t\t\t\tvar jetty = jettys[parallelEdgeCount * 4 + 3 - arrayOffset];\n\t\t\t\t\n\t\t\t\tif (reversed != layoutReversed)\n\t\t\t\t{\n\t\t\t\t\tjetty = -jetty;\n\t\t\t\t}\n\t\t\t\tvar y = rankY - jetty;\n\t\t\t\tvar x = jettys[parallelEdgeCount * 4 + 2 - arrayOffset];\n\t\t\t\t\n\t\t\t\tvar modelTarget = graph.model.getTerminal(realEdge, false);\n\t\t\t\tvar realTarget = this.layout.getVisibleTerminal(realEdge, false);\n\n\t\t\t\tif (this.layout.isPort(modelTarget) && graph.model.getParent(modelTarget) == realTarget)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.view.getState(modelTarget);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = state.x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = realTarget.geometry.x + cell.target.width * modelTarget.geometry.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(x, y - jetty));\n\t\t\t\t\t}\n\n\t\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(y - jetty, x));\n\t\t\t\t\t}\n\n\t\t\t\t\tnewPoints.push(new mxPoint(y, x));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cell.isReversed)\n\t\t\t{\n\t\t\t\tthis.processReversedEdge(cell, realEdge);\n\t\t\t}\n\n\t\t\tthis.layout.setEdgePoints(realEdge, newPoints);\n\n\t\t\t// Increase offset so next edge is drawn next to\n\t\t\t// this one\n\t\t\tif (offsetX == 0.0)\n\t\t\t{\n\t\t\t\toffsetX = this.parallelEdgeSpacing;\n\t\t\t}\n\t\t\telse if (offsetX > 0)\n\t\t\t{\n\t\t\t\toffsetX = -offsetX;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toffsetX = -offsetX + this.parallelEdgeSpacing;\n\t\t\t}\n\t\t\t\n\t\t\tparallelEdgeCount++;\n\t\t}\n\n\t\tcell.temp[0] = 101207;\n\t}\n};\n\n\n/**\n * Function: setVertexLocation\n * \n * Fixes the position of the specified vertex.\n * \n * Parameters:\n * \n * cell - the vertex to position\n */\nmxCoordinateAssignment.prototype.setVertexLocation = function(cell)\n{\n\tvar realCell = cell.cell;\n\tvar positionX = cell.x[0] - cell.width / 2;\n\tvar positionY = cell.y[0] - cell.height / 2;\n\n\tthis.rankTopY[cell.minRank] = Math.min(this.rankTopY[cell.minRank], positionY);\n\tthis.rankBottomY[cell.minRank] = Math.max(this.rankBottomY[cell.minRank],\n\t\t\tpositionY + cell.height);\n\n\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tthis.layout.setVertexLocation(realCell, positionX, positionY);\n\t}\n\telse\n\t{\n\t\tthis.layout.setVertexLocation(realCell, positionY, positionX);\n\t}\n\n\tthis.limitX = Math.max(this.limitX, positionX + cell.width);\n};\n\n/**\n * Function: processReversedEdge\n * \n * Hook to add additional processing\n * \n * Parameters:\n * \n * edge - the hierarchical model edge\n * realEdge - the real edge in the graph\n */\nmxCoordinateAssignment.prototype.processReversedEdge = function(graph, model)\n{\n\t// hook for subclassers\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneOrdering\n * \n * An implementation of the first stage of the Sugiyama layout. Straightforward\n * longest path calculation of layer assignment\n * \n * Constructor: mxSwimlaneOrdering\n *\n * Creates a cycle remover for the given internal model.\n */\nfunction mxSwimlaneOrdering(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxSwimlaneOrdering.prototype = new mxHierarchicalLayoutStage();\nmxSwimlaneOrdering.prototype.constructor = mxSwimlaneOrdering;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxSwimlaneOrdering.prototype.layout = null;\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxSwimlaneOrdering.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\tvar seenNodes = new Object();\n\tvar unseenNodes = mxUtils.clone(model.vertexMapper, null, true);\n\t\n\t// Perform a dfs through the internal model. If a cycle is found,\n\t// reverse it.\n\tvar rootsArray = null;\n\t\n\tif (model.roots != null)\n\t{\n\t\tvar modelRoots = model.roots;\n\t\trootsArray = [];\n\t\t\n\t\tfor (var i = 0; i < modelRoots.length; i++)\n\t\t{\n\t\t\tvar nodeId = mxCellPath.create(modelRoots[i]);\n\t\t\trootsArray[i] = model.vertexMapper.get(modelRoots[i]);\n\t\t}\n\t}\n\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\t// Ancestor hashes only line up within a swimlane\n\t\tvar isAncestor = parent != null && parent.swimlaneIndex == node.swimlaneIndex && node.isAncestor(parent);\n\n\t\t// If the source->target swimlane indices go from higher to\n\t\t// lower, the edge is reverse\n\t\tvar reversedOverSwimlane = parent != null && connectingEdge != null &&\n\t\t\t\t\t\tparent.swimlaneIndex < node.swimlaneIndex && connectingEdge.source == node;\n\n\t\tif (isAncestor)\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t}\n\t\telse if (reversedOverSwimlane)\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsTarget);\n\t\t\tnode.connectsAsTarget.push(connectingEdge);\n\t\t\tparent.connectsAsSource.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsSource);\n\t\t}\n\t\t\n\t\tvar cellId = mxCellPath.create(node.cell);\n\t\tseenNodes[cellId] = node;\n\t\tdelete unseenNodes[cellId];\n\t}, rootsArray, true, null);\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxHierarchicalLayout\n * \n * A hierarchical layout algorithm.\n * \n * Constructor: mxHierarchicalLayout\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * orientation - Optional constant that defines the orientation of this\n * layout.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxHierarchicalLayout(graph, orientation, deterministic)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.orientation = (orientation != null) ? orientation : mxConstants.DIRECTION_NORTH;\n\tthis.deterministic = (deterministic != null) ? deterministic : true;\n};\n\nvar mxHierarchicalEdgeStyle =\n{\n\tORTHOGONAL: 1,\n\tPOLYLINE: 2,\n\tSTRAIGHT: 3,\n\tCURVE: 4\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxHierarchicalLayout.prototype = new mxGraphLayout();\nmxHierarchicalLayout.prototype.constructor = mxHierarchicalLayout;\n\n/**\n * Variable: roots\n * \n * Holds the array of <mxCell> that this layout contains.\n */\nmxHierarchicalLayout.prototype.roots = null;\n\n/**\n * Variable: resizeParent\n * \n * Specifies if the parent should be resized after the layout so that it\n * contains all the child cells. Default is false. See also <parentBorder>.\n */\nmxHierarchicalLayout.prototype.resizeParent = false;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxHierarchicalLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: moveParent\n * \n * Specifies if the parent should be moved if <resizeParent> is enabled.\n * Default is false.\n */\nmxHierarchicalLayout.prototype.moveParent = false;\n\n/**\n * Variable: parentBorder\n * \n * The border to be added around the children if the parent is to be\n * resized using <resizeParent>. Default is 0.\n */\nmxHierarchicalLayout.prototype.parentBorder = 0;\n\n/**\n * Variable: intraCellSpacing\n * \n * The spacing buffer added between cells on the same layer. Default is 30.\n */\nmxHierarchicalLayout.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The spacing buffer added between cell on adjacent layers. Default is 50.\n */\nmxHierarchicalLayout.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: interHierarchySpacing\n * \n * The spacing buffer between unconnected hierarchies. Default is 60.\n */\nmxHierarchicalLayout.prototype.interHierarchySpacing = 60;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges\n */\nmxHierarchicalLayout.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: orientation\n * \n * The position of the root node(s) relative to the laid out graph in.\n * Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxHierarchicalLayout.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxHierarchicalLayout.prototype.fineTuning = true;\n\n/**\n * \n * Variable: tightenToSource\n * \n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxHierarchicalLayout.prototype.tightenToSource = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxHierarchicalLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: traverseAncestors\n * \n * Whether or not to drill into child cells and layout in reverse\n * group order. This also cause the layout to navigate edges whose \n * terminal vertices have different parents but are in the same \n * ancestry chain\n */\nmxHierarchicalLayout.prototype.traverseAncestors = true;\n\n/**\n * Variable: model\n * \n * The internal <mxGraphHierarchyModel> formed of the layout.\n */\nmxHierarchicalLayout.prototype.model = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgeSourceTermCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesTargetTermCache = null;\n\n/**\n * Variable: edgeStyle\n * \n * The style to apply between cell layers to edge segments\n */\nmxHierarchicalLayout.prototype.edgeStyle = mxHierarchicalEdgeStyle.POLYLINE;\n\n/**\n * Function: getModel\n * \n * Returns the internal <mxGraphHierarchyModel> for this layout algorithm.\n */\nmxHierarchicalLayout.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: execute\n * \n * Executes the layout for the children of the specified parent.\n * \n * Parameters:\n * \n * parent - Parent <mxCell> that contains the children to be laid out.\n * roots - Optional starting roots of the layout.\n */\nmxHierarchicalLayout.prototype.execute = function(parent, roots)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.model;\n\tthis.edgesCache = new mxDictionary();\n\tthis.edgeSourceTermCache = new mxDictionary();\n\tthis.edgesTargetTermCache = new mxDictionary();\n\n\tif (roots != null && !(roots instanceof Array))\n\t{\n\t\troots = [roots];\n\t}\n\t\n\t// If the roots are set and the parent is set, only\n\t// use the roots that are some dependent of the that\n\t// parent.\n\t// If just the root are set, use them as-is\n\t// If just the parent is set use it's immediate\n\t// children as the initial set\n\n\tif (roots == null && parent == null)\n\t{\n\t\t// TODO indicate the problem\n\t\treturn;\n\t}\n\t\n\t//  Maintaining parent location\n\tthis.parentX = null;\n\tthis.parentY = null;\n\t\n\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tthis.parentX = geo.x;\n\t\t\tthis.parentY = geo.y;\n\t\t}\n\t}\n\t\n\tif (roots != null)\n\t{\n\t\tvar rootsCopy = [];\n\n\t\tfor (var i = 0; i < roots.length; i++)\n\t\t{\n\t\t\tvar ancestor = parent != null ? model.isAncestor(parent, roots[i]) : true;\n\t\t\t\n\t\t\tif (ancestor && model.isVertex(roots[i]))\n\t\t\t{\n\t\t\t\trootsCopy.push(roots[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis.roots = rootsCopy;\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tthis.run(parent);\n\t\t\n\t\tif (this.resizeParent && !this.graph.isCellCollapsed(parent))\n\t\t{\n\t\t\tthis.graph.updateGroupBounds([parent], this.parentBorder, this.moveParent);\n\t\t}\n\t\t\n\t\t// Maintaining parent location\n\t\tif (this.parentX != null && this.parentY != null)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.x = this.parentX;\n\t\t\t\tgeo.y = this.parentY;\n\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: findRoots\n * \n * Returns all visible children in the given parent which do not have\n * incoming edges. If the result is empty then the children with the\n * maximum difference between incoming and outgoing edges are returned.\n * This takes into account edges that are being promoted to the given\n * root due to invisible children or collapsed cells.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * vertices - array of vertices to limit search to\n */\nmxHierarchicalLayout.prototype.findRoots = function(parent, vertices)\n{\n\tvar roots = [];\n\t\n\tif (parent != null && vertices != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar best = null;\n\t\tvar maxDiff = -100000;\n\t\t\n\t\tfor (var i in vertices)\n\t\t{\n\t\t\tvar cell = vertices[i];\n\n\t\t\tif (model.isVertex(cell) && this.graph.isCellVisible(cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getEdges(cell);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\n\t\t\t\tfor (var k = 0; k < conns.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.getVisibleTerminal(conns[k], true);\n\n\t\t\t\t\tif (src == cell)\n\t\t\t\t\t{\n\t\t\t\t\t\tfanOut++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfanIn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fanIn == 0 && fanOut > 0)\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\n\t\t\t\tvar diff = fanOut - fanIn;\n\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: getEdges\n * \n * Returns the connected edges for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n */\nmxHierarchicalLayout.prototype.getEdges = function(cell)\n{\n\tvar cachedEdges = this.edgesCache.get(cell);\n\t\n\tif (cachedEdges != null)\n\t{\n\t\treturn cachedEdges;\n\t}\n\n\tvar model = this.graph.model;\n\tvar edges = [];\n\tvar isCollapsed = this.graph.isCellCollapsed(cell);\n\tvar childCount = model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\n\t\tif (this.isPort(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t\telse if (isCollapsed || !this.graph.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t}\n\n\tedges = edges.concat(model.getEdges(cell, true, true));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar source = this.getVisibleTerminal(edges[i], true);\n\t\tvar target = this.getVisibleTerminal(edges[i], false);\n\t\t\n\t\tif ((source == target) ||\n\t\t\t\t((source != target) &&\n\t\t\t\t\t\t((target == cell && (this.parent == null || this.isAncestor(this.parent, source, this.traverseAncestors))) ||\n\t\t\t\t\t\t \t(source == cell && (this.parent == null || this.isAncestor(this.parent, target, this.traverseAncestors))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\tthis.edgesCache.put(cell, result);\n\n\treturn result;\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Helper function to return visible terminal for edge allowing for ports\n * \n * Parameters:\n * \n * edge - <mxCell> whose edges should be returned.\n * source - Boolean that specifies whether the source or target terminal is to be returned\n */\nmxHierarchicalLayout.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar terminalCache = this.edgesTargetTermCache;\n\t\n\tif (source)\n\t{\n\t\tterminalCache = this.edgeSourceTermCache;\n\t}\n\n\tvar term = terminalCache.get(edge);\n\n\tif (term != null)\n\t{\n\t\treturn term;\n\t}\n\n\tvar state = this.graph.view.getState(edge);\n\t\n\tvar terminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t\n\tif (terminal == null)\n\t{\n\t\tterminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t}\n\n\tif (terminal != null)\n\t{\n\t\tif (this.isPort(terminal))\n\t\t{\n\t\t\tterminal = this.graph.model.getParent(terminal);\n\t\t}\n\t\t\n\t\tterminalCache.put(edge, terminal);\n\t}\n\n\treturn terminal;\n};\n\n/**\n * Function: run\n * \n * The API method used to exercise the layout upon the graph description\n * and produce a separate description of the vertex position and edge\n * routing changes made. It runs each stage of the layout that has been\n * created.\n */\nmxHierarchicalLayout.prototype.run = function(parent)\n{\n\t// Separate out unconnected hierarchies\n\tvar hierarchyVertices = [];\n\tvar allVertexSet = [];\n\n\tif (this.roots == null && parent != null)\n\t{\n\t\tvar filledVertexSet = Object();\n\t\tthis.filterDescendants(parent, filledVertexSet);\n\n\t\tthis.roots = [];\n\t\tvar filledVertexSetEmpty = true;\n\n\t\t// Poor man's isSetEmpty\n\t\tfor (var key in filledVertexSet)\n\t\t{\n\t\t\tif (filledVertexSet[key] != null)\n\t\t\t{\n\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\twhile (!filledVertexSetEmpty)\n\t\t{\n\t\t\tvar candidateRoots = this.findRoots(parent, filledVertexSet);\n\t\t\t\n\t\t\t// If the candidate root is an unconnected group cell, remove it from\n\t\t\t// the layout. We may need a custom set that holds such groups and forces\n\t\t\t// them to be processed for resizing and/or moving.\n\t\t\t\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tvar vertexSet = Object();\n\t\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\t\tthis.traverse(candidateRoots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\t\thierarchyVertices, filledVertexSet);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tthis.roots.push(candidateRoots[i]);\n\t\t\t}\n\t\t\t\n\t\t\tfilledVertexSetEmpty = true;\n\t\t\t\n\t\t\t// Poor man's isSetEmpty\n\t\t\tfor (var key in filledVertexSet)\n\t\t\t{\n\t\t\t\tif (filledVertexSet[key] != null)\n\t\t\t\t{\n\t\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Find vertex set as directed traversal from roots\n\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar vertexSet = Object();\n\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\tthis.traverse(this.roots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\thierarchyVertices, null);\n\t\t}\n\t}\n\n\t// Iterate through the result removing parents who have children in this layout\n\t\n\t// Perform a layout for each seperate hierarchy\n\t// Track initial coordinate x-positioning\n\tvar initialX = 0;\n\n\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t{\n\t\tvar vertexSet = hierarchyVertices[i];\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var key in vertexSet)\n\t\t{\n\t\t\ttmp.push(vertexSet[key]);\n\t\t}\n\t\t\n\t\tthis.model = new mxGraphHierarchyModel(this, tmp, this.roots,\n\t\t\tparent, this.tightenToSource);\n\n\t\tthis.cycleStage(parent);\n\t\tthis.layeringStage();\n\t\t\n\t\tthis.crossingStage(parent);\n\t\tinitialX = this.placementStage(initialX, parent);\n\t}\n};\n\n/**\n * Function: filterDescendants\n * \n * Creates an array of descendant cells\n */\nmxHierarchicalLayout.prototype.filterDescendants = function(cell, result)\n{\n\tvar model = this.graph.model;\n\n\tif (model.isVertex(cell) && cell != this.parent && this.graph.isCellVisible(cell))\n\t{\n\t\tresult[mxObjectIdentity.get(cell)] = cell;\n\t}\n\n\tif (this.traverseAncestors || cell == this.parent\n\t\t\t&& this.graph.isCellVisible(cell))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\n\t\t\t// Ignore ports in the layout vertex list, they are dealt with\n\t\t\t// in the traversal mechanisms\n\t\t\tif (!this.isPort(child))\n\t\t\t{\n\t\t\t\tthis.filterDescendants(child, result);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, its parent is the connecting vertex in terms of graph traversal\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxHierarchicalLayout.prototype.isPort = function(cell)\n{\n\tif (cell != null && cell.geometry != null)\n\t{\n\t\treturn cell.geometry.relative;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and ports.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxHierarchicalLayout.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar src = this.getVisibleTerminal(edges[i], true);\n\t\tvar trg = this.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * allVertices - Array of cell paths for the visited cells.\n */\nmxHierarchicalLayout.prototype.traverse = function(vertex, directed, edge, allVertices, currentComp,\n\t\t\t\t\t\t\t\t\t\t\thierarchyVertices, filledVertexSet)\n{\n\tif (vertex != null && allVertices != null)\n\t{\n\t\t// Has this vertex been seen before in any traversal\n\t\t// And if the filled vertex set is populated, only \n\t\t// process vertices in that it contains\n\t\tvar vertexID = mxObjectIdentity.get(vertex);\n\t\t\n\t\tif ((allVertices[vertexID] == null)\n\t\t\t\t&& (filledVertexSet == null ? true : filledVertexSet[vertexID] != null))\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\tcurrentComp[vertexID] = vertex;\n\t\t\t}\n\t\t\tif (allVertices[vertexID] == null)\n\t\t\t{\n\t\t\t\tallVertices[vertexID] = vertex;\n\t\t\t}\n\n\t\t\tif (filledVertexSet !== null)\n\t\t\t{\n\t\t\t\tdelete filledVertexSet[vertexID];\n\t\t\t}\n\n\t\t\tvar edges = this.getEdges(vertex);\n\t\t\tvar edgeIsSource = [];\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tedgeIsSource[i] = (this.getVisibleTerminal(edges[i], true) == vertex);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tif (!directed || edgeIsSource[i])\n\t\t\t\t{\n\t\t\t\t\tvar next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n\t\t\t\t\t\n\t\t\t\t\t// Check whether there are more edges incoming from the target vertex than outgoing\n\t\t\t\t\t// The hierarchical model treats bi-directional parallel edges as being sourced\n\t\t\t\t\t// from the more \"sourced\" terminal. If the directions are equal in number, the direction\n\t\t\t\t\t// is that of the natural direction from the roots of the layout.\n\t\t\t\t\t// The checks below are slightly more verbose than need be for performance reasons\n\t\t\t\t\tvar netCount = 1;\n\n\t\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (j == i)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar isSource2 = edgeIsSource[j];\n\t\t\t\t\t\t\tvar otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (otherTerm == next)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (isSource2)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnetCount++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnetCount--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (netCount >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrentComp = this.traverse(next, directed, edges[i], allVertices,\n\t\t\t\t\t\t\tcurrentComp, hierarchyVertices,\n\t\t\t\t\t\t\tfilledVertexSet);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\t// We've seen this vertex before, but not in the current component\n\t\t\t\t// This component and the one it's in need to be merged\n\n\t\t\t\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar comp = hierarchyVertices[i];\n\n\t\t\t\t\tif (comp[vertexID] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key in comp)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentComp[key] = comp[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remove the current component from the hierarchy set\n\t\t\t\t\t\thierarchyVertices.splice(i, 1);\n\t\t\t\t\t\treturn currentComp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn currentComp;\n};\n\n/**\n * Function: cycleStage\n * \n * Executes the cycle stage using mxMinimumCycleRemover.\n */\nmxHierarchicalLayout.prototype.cycleStage = function(parent)\n{\n\tvar cycleStage = new mxMinimumCycleRemover(this);\n\tcycleStage.execute(parent);\n};\n\n/**\n * Function: layeringStage\n * \n * Implements first stage of a Sugiyama layout.\n */\nmxHierarchicalLayout.prototype.layeringStage = function()\n{\n\tthis.model.initialRank();\n\tthis.model.fixRanks();\n};\n\n/**\n * Function: crossingStage\n * \n * Executes the crossing stage using mxMedianHybridCrossingReduction.\n */\nmxHierarchicalLayout.prototype.crossingStage = function(parent)\n{\n\tvar crossingStage = new mxMedianHybridCrossingReduction(this);\n\tcrossingStage.execute(parent);\n};\n\n/**\n * Function: placementStage\n * \n * Executes the placement stage using mxCoordinateAssignment.\n */\nmxHierarchicalLayout.prototype.placementStage = function(initialX, parent)\n{\n\tvar placementStage = new mxCoordinateAssignment(this, this.intraCellSpacing,\n\t\t\tthis.interRankCellSpacing, this.orientation, initialX,\n\t\t\tthis.parallelEdgeSpacing);\n\tplacementStage.fineTuning = this.fineTuning;\n\tplacementStage.execute(parent);\n\t\n\treturn placementStage.limitX + this.interHierarchySpacing;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneLayout\n * \n * A hierarchical layout algorithm.\n * \n * Constructor: mxSwimlaneLayout\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * orientation - Optional constant that defines the orientation of this\n * layout.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxSwimlaneLayout(graph, orientation, deterministic)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.orientation = (orientation != null) ? orientation : mxConstants.DIRECTION_NORTH;\n\tthis.deterministic = (deterministic != null) ? deterministic : true;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxSwimlaneLayout.prototype = new mxGraphLayout();\nmxSwimlaneLayout.prototype.constructor = mxSwimlaneLayout;\n\n/**\n * Variable: roots\n * \n * Holds the array of <mxCell> that this layout contains.\n */\nmxSwimlaneLayout.prototype.roots = null;\n\n/**\n * Variable: swimlanes\n * \n * Holds the array of <mxCell> of the ordered swimlanes to lay out\n */\nmxSwimlaneLayout.prototype.swimlanes = null;\n\n/**\n * Variable: dummyVertices\n * \n * Holds an array of <mxCell> of dummy vertices inserted during the layout\n * to pad out empty swimlanes\n */\nmxSwimlaneLayout.prototype.dummyVertices = null;\n\n/**\n * Variable: dummyVertexWidth\n * \n * The cell width of any dummy vertices inserted\n */\nmxSwimlaneLayout.prototype.dummyVertexWidth = 50;\n\n/**\n * Variable: resizeParent\n * \n * Specifies if the parent should be resized after the layout so that it\n * contains all the child cells. Default is false. See also <parentBorder>.\n */\nmxSwimlaneLayout.prototype.resizeParent = false;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxSwimlaneLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: moveParent\n * \n * Specifies if the parent should be moved if <resizeParent> is enabled.\n * Default is false.\n */\nmxSwimlaneLayout.prototype.moveParent = false;\n\n/**\n * Variable: parentBorder\n * \n * The border to be added around the children if the parent is to be\n * resized using <resizeParent>. Default is 0.\n */\nmxSwimlaneLayout.prototype.parentBorder = 30;\n\n/**\n * Variable: intraCellSpacing\n * \n * The spacing buffer added between cells on the same layer. Default is 30.\n */\nmxSwimlaneLayout.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The spacing buffer added between cell on adjacent layers. Default is 50.\n */\nmxSwimlaneLayout.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: interHierarchySpacing\n * \n * The spacing buffer between unconnected hierarchies. Default is 60.\n */\nmxSwimlaneLayout.prototype.interHierarchySpacing = 60;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges\n */\nmxSwimlaneLayout.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: orientation\n * \n * The position of the root node(s) relative to the laid out graph in.\n * Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxSwimlaneLayout.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxSwimlaneLayout.prototype.fineTuning = true;\n\n/**\n * \n * Variable: tightenToSource\n * \n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxSwimlaneLayout.prototype.tightenToSource = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxSwimlaneLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: traverseAncestors\n * \n * Whether or not to drill into child cells and layout in reverse\n * group order. This also cause the layout to navigate edges whose \n * terminal vertices  * have different parents but are in the same \n * ancestry chain\n */\nmxSwimlaneLayout.prototype.traverseAncestors = true;\n\n/**\n * Variable: model\n * \n * The internal <mxSwimlaneModel> formed of the layout.\n */\nmxSwimlaneLayout.prototype.model = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxSwimlaneLayout.prototype.edgesCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgeSourceTermCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesTargetTermCache = null;\n\n/**\n * Variable: edgeStyle\n * \n * The style to apply between cell layers to edge segments\n */\nmxHierarchicalLayout.prototype.edgeStyle = mxHierarchicalEdgeStyle.POLYLINE;\n\n/**\n * Function: getModel\n * \n * Returns the internal <mxSwimlaneModel> for this layout algorithm.\n */\nmxSwimlaneLayout.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: execute\n * \n * Executes the layout for the children of the specified parent.\n * \n * Parameters:\n * \n * parent - Parent <mxCell> that contains the children to be laid out.\n * swimlanes - Ordered array of swimlanes to be laid out\n */\nmxSwimlaneLayout.prototype.execute = function(parent, swimlanes)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.model;\n\tthis.edgesCache = new mxDictionary();\n\tthis.edgeSourceTermCache = new mxDictionary();\n\tthis.edgesTargetTermCache = new mxDictionary();\n\n\t// If the roots are set and the parent is set, only\n\t// use the roots that are some dependent of the that\n\t// parent.\n\t// If just the root are set, use them as-is\n\t// If just the parent is set use it's immediate\n\t// children as the initial set\n\n\tif (swimlanes == null || swimlanes.length < 1)\n\t{\n\t\t// TODO indicate the problem\n\t\treturn;\n\t}\n\n\tif (parent == null)\n\t{\n\t\tparent = model.getParent(swimlanes[0]);\n\t}\n\n\t//  Maintaining parent location\n\tthis.parentX = null;\n\tthis.parentY = null;\n\t\n\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tthis.parentX = geo.x;\n\t\t\tthis.parentY = geo.y;\n\t\t}\n\t}\n\n\tthis.swimlanes = swimlanes;\n\tthis.dummyVertices = [];\n\t// Check the swimlanes all have vertices\n\t// in them\n\tfor (var i = 0; i < swimlanes.length; i++)\n\t{\n\t\tvar children = this.graph.getChildCells(swimlanes[i]);\n\t\t\n\t\tif (children == null || children.length == 0)\n\t\t{\n\t\t\tvar vertex = this.graph.insertVertex(swimlanes[i], null, null, 0, 0, this.dummyVertexWidth, 0);\n\t\t\tthis.dummyVertices.push(vertex);\n\t\t}\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tthis.run(parent);\n\t\t\n\t\tif (this.resizeParent && !this.graph.isCellCollapsed(parent))\n\t\t{\n\t\t\tthis.graph.updateGroupBounds([parent], this.parentBorder, this.moveParent);\n\t\t}\n\t\t\n\t\t// Maintaining parent location\n\t\tif (this.parentX != null && this.parentY != null)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.x = this.parentX;\n\t\t\t\tgeo.y = this.parentY;\n\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t}\n\t\t}\n\n\t\tthis.graph.removeCells(this.dummyVertices);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: updateGroupBounds\n * \n * Updates the bounds of the given array of groups so that it includes\n * all child vertices.\n * \n */\nmxSwimlaneLayout.prototype.updateGroupBounds = function()\n{\n\t// Get all vertices and edge in the layout\n\tvar cells = [];\n\tvar model = this.model;\n\t\n\tfor (var key in model.edgeMapper)\n\t{\n\t\tvar edge = model.edgeMapper[key];\n\t\t\n\t\tfor (var i = 0; i < edge.edges.length; i++)\n\t\t{\n\t\t\tcells.push(edge.edges[i]);\n\t\t}\n\t}\n\t\n\tvar layoutBounds = this.graph.getBoundingBoxFromGeometry(cells, true);\n\tvar childBounds = [];\n\n\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t{\n\t\tvar lane = this.swimlanes[i];\n\t\tvar geo = this.graph.getCellGeometry(lane);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tvar children = this.graph.getChildCells(lane);\n\t\t\t\n\t\t\tvar size = (this.graph.isSwimlane(lane)) ?\n\t\t\t\t\tthis.graph.getStartSize(lane) : new mxRectangle();\n\n\t\t\tvar bounds = this.graph.getBoundingBoxFromGeometry(children);\n\t\t\tchildBounds[i] = bounds;\n\t\t\tvar childrenY = bounds.y + geo.y - size.height - this.parentBorder;\n\t\t\tvar maxChildrenY = bounds.y + geo.y + bounds.height;\n\n\t\t\tif (layoutBounds == null)\n\t\t\t{\n\t\t\t\tlayoutBounds = new mxRectangle(0, childrenY, 0, maxChildrenY - childrenY);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlayoutBounds.y = Math.min(layoutBounds.y, childrenY);\n\t\t\t\tvar maxY = Math.max(layoutBounds.y + layoutBounds.height, maxChildrenY);\n\t\t\t\tlayoutBounds.height = maxY - layoutBounds.y;\n\t\t\t}\n\t\t}\n\t}\n\n\t\n\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t{\n\t\tvar lane = this.swimlanes[i];\n\t\tvar geo = this.graph.getCellGeometry(lane);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tvar children = this.graph.getChildCells(lane);\n\t\t\t\n\t\t\tvar size = (this.graph.isSwimlane(lane)) ?\n\t\t\t\t\tthis.graph.getStartSize(lane) : new mxRectangle();\n\n\t\t\tvar newGeo = geo.clone();\n\t\t\t\n\t\t\tvar leftGroupBorder = (i == 0) ? this.parentBorder : this.interRankCellSpacing/2;\n\t\t\tnewGeo.x += childBounds[i].x - size.width - leftGroupBorder;\n\t\t\tnewGeo.y = newGeo.y + layoutBounds.y - geo.y - this.parentBorder;\n\t\t\t\n\t\t\tnewGeo.width = childBounds[i].width + size.width + this.interRankCellSpacing/2 + leftGroupBorder;\n\t\t\tnewGeo.height = layoutBounds.height + size.height + 2 * this.parentBorder;\n\t\t\t\n\t\t\tthis.graph.model.setGeometry(lane, newGeo);\n\t\t\tthis.graph.moveCells(children, -childBounds[i].x + size.width + leftGroupBorder, \n\t\t\t\t\tgeo.y - layoutBounds.y + this.parentBorder);\n\t\t}\n\t}\n};\n\n/**\n * Function: findRoots\n * \n * Returns all visible children in the given parent which do not have\n * incoming edges. If the result is empty then the children with the\n * maximum difference between incoming and outgoing edges are returned.\n * This takes into account edges that are being promoted to the given\n * root due to invisible children or collapsed cells.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * vertices - array of vertices to limit search to\n */\nmxSwimlaneLayout.prototype.findRoots = function(parent, vertices)\n{\n\tvar roots = [];\n\t\n\tif (parent != null && vertices != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar best = null;\n\t\tvar maxDiff = -100000;\n\t\t\n\t\tfor (var i in vertices)\n\t\t{\n\t\t\tvar cell = vertices[i];\n\n\t\t\tif (cell != null && model.isVertex(cell) && this.graph.isCellVisible(cell) && model.isAncestor(parent, cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getEdges(cell);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\n\t\t\t\tfor (var k = 0; k < conns.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.getVisibleTerminal(conns[k], true);\n\n\t\t\t\t\tif (src == cell)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Only count connection within this swimlane\n\t\t\t\t\t\tvar other = this.getVisibleTerminal(conns[k], false);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (model.isAncestor(parent, other))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfanOut++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (model.isAncestor(parent, src))\n\t\t\t\t\t{\n\t\t\t\t\t\tfanIn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fanIn == 0 && fanOut > 0)\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\n\t\t\t\tvar diff = fanOut - fanIn;\n\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: getEdges\n * \n * Returns the connected edges for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n */\nmxSwimlaneLayout.prototype.getEdges = function(cell)\n{\n\tvar cachedEdges = this.edgesCache.get(cell);\n\t\n\tif (cachedEdges != null)\n\t{\n\t\treturn cachedEdges;\n\t}\n\n\tvar model = this.graph.model;\n\tvar edges = [];\n\tvar isCollapsed = this.graph.isCellCollapsed(cell);\n\tvar childCount = model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\n\t\tif (this.isPort(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t\telse if (isCollapsed || !this.graph.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t}\n\n\tedges = edges.concat(model.getEdges(cell, true, true));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar source = this.getVisibleTerminal(edges[i], true);\n\t\tvar target = this.getVisibleTerminal(edges[i], false);\n\t\t\n\t\tif ((source == target) || ((source != target) && ((target == cell && (this.parent == null || this.graph.isValidAncestor(source, this.parent, this.traverseAncestors))) ||\n\t\t\t(source == cell && (this.parent == null ||\n\t\t\t\t\tthis.graph.isValidAncestor(target, this.parent, this.traverseAncestors))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\tthis.edgesCache.put(cell, result);\n\n\treturn result;\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Helper function to return visible terminal for edge allowing for ports\n * \n * Parameters:\n * \n * edge - <mxCell> whose edges should be returned.\n * source - Boolean that specifies whether the source or target terminal is to be returned\n */\nmxSwimlaneLayout.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar terminalCache = this.edgesTargetTermCache;\n\t\n\tif (source)\n\t{\n\t\tterminalCache = this.edgeSourceTermCache;\n\t}\n\n\tvar term = terminalCache.get(edge);\n\n\tif (term != null)\n\t{\n\t\treturn term;\n\t}\n\n\tvar state = this.graph.view.getState(edge);\n\t\n\tvar terminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t\n\tif (terminal == null)\n\t{\n\t\tterminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t}\n\n\tif (terminal != null)\n\t{\n\t\tif (this.isPort(terminal))\n\t\t{\n\t\t\tterminal = this.graph.model.getParent(terminal);\n\t\t}\n\t\t\n\t\tterminalCache.put(edge, terminal);\n\t}\n\n\treturn terminal;\n};\n\n/**\n * Function: run\n * \n * The API method used to exercise the layout upon the graph description\n * and produce a separate description of the vertex position and edge\n * routing changes made. It runs each stage of the layout that has been\n * created.\n */\nmxSwimlaneLayout.prototype.run = function(parent)\n{\n\t// Separate out unconnected hierarchies\n\tvar hierarchyVertices = [];\n\tvar allVertexSet = [];\n\n\tif (this.swimlanes != null && this.swimlanes.length > 0 && parent != null)\n\t{\n\t\tvar filledVertexSet = Object();\n\t\t\n\t\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t\t{\n\t\t\tthis.filterDescendants(this.swimlanes[i], filledVertexSet);\n\t\t}\n\n\t\tthis.roots = [];\n\t\tvar filledVertexSetEmpty = true;\n\n\t\t// Poor man's isSetEmpty\n\t\tfor (var key in filledVertexSet)\n\t\t{\n\t\t\tif (filledVertexSet[key] != null)\n\t\t\t{\n\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Only test for candidates in each swimlane in order\n\t\tvar laneCounter = 0;\n\n\t\twhile (!filledVertexSetEmpty && laneCounter < this.swimlanes.length)\n\t\t{\n\t\t\tvar candidateRoots = this.findRoots(this.swimlanes[laneCounter], filledVertexSet);\n\t\t\t\n\t\t\tif (candidateRoots.length == 0)\n\t\t\t{\n\t\t\t\tlaneCounter++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t// If the candidate root is an unconnected group cell, remove it from\n\t\t\t// the layout. We may need a custom set that holds such groups and forces\n\t\t\t// them to be processed for resizing and/or moving.\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tvar vertexSet = Object();\n\t\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\t\tthis.traverse(candidateRoots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\t\thierarchyVertices, filledVertexSet, laneCounter);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tthis.roots.push(candidateRoots[i]);\n\t\t\t}\n\t\t\t\n\t\t\tfilledVertexSetEmpty = true;\n\t\t\t\n\t\t\t// Poor man's isSetEmpty\n\t\t\tfor (var key in filledVertexSet)\n\t\t\t{\n\t\t\t\tif (filledVertexSet[key] != null)\n\t\t\t\t{\n\t\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Find vertex set as directed traversal from roots\n\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar vertexSet = Object();\n\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\tthis.traverse(this.roots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\thierarchyVertices, null);\n\t\t}\n\t}\n\n\tvar tmp = [];\n\t\n\tfor (var key in allVertexSet)\n\t{\n\t\ttmp.push(allVertexSet[key]);\n\t}\n\t\n\tthis.model = new mxSwimlaneModel(this, tmp, this.roots,\n\t\tparent, this.tightenToSource);\n\n\tthis.cycleStage(parent);\n\tthis.layeringStage();\n\t\n\tthis.crossingStage(parent);\n\tinitialX = this.placementStage(0, parent);\n};\n\n/**\n * Function: filterDescendants\n * \n * Creates an array of descendant cells\n */\nmxSwimlaneLayout.prototype.filterDescendants = function(cell, result)\n{\n\tvar model = this.graph.model;\n\n\tif (model.isVertex(cell) && cell != this.parent && model.getParent(cell) != this.parent && this.graph.isCellVisible(cell))\n\t{\n\t\tresult[mxObjectIdentity.get(cell)] = cell;\n\t}\n\n\tif (this.traverseAncestors || cell == this.parent\n\t\t\t&& this.graph.isCellVisible(cell))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\n\t\t\t// Ignore ports in the layout vertex list, they are dealt with\n\t\t\t// in the traversal mechanisms\n\t\t\tif (!this.isPort(child))\n\t\t\t{\n\t\t\t\tthis.filterDescendants(child, result);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, its parent is the connecting vertex in terms of graph traversal\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxSwimlaneLayout.prototype.isPort = function(cell)\n{\n\tif (cell.geometry.relative)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and ports.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxSwimlaneLayout.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar src = this.getVisibleTerminal(edges[i], true);\n\t\tvar trg = this.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * allVertices - Array of cell paths for the visited cells.\n * swimlaneIndex - the laid out order index of the swimlane vertex is contained in\n */\nmxSwimlaneLayout.prototype.traverse = function(vertex, directed, edge, allVertices, currentComp,\n\t\t\t\t\t\t\t\t\t\t\thierarchyVertices, filledVertexSet, swimlaneIndex)\n{\n\tif (vertex != null && allVertices != null)\n\t{\n\t\t// Has this vertex been seen before in any traversal\n\t\t// And if the filled vertex set is populated, only \n\t\t// process vertices in that it contains\n\t\tvar vertexID = mxObjectIdentity.get(vertex);\n\t\t\n\t\tif ((allVertices[vertexID] == null)\n\t\t\t\t&& (filledVertexSet == null ? true : filledVertexSet[vertexID] != null))\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\tcurrentComp[vertexID] = vertex;\n\t\t\t}\n\t\t\tif (allVertices[vertexID] == null)\n\t\t\t{\n\t\t\t\tallVertices[vertexID] = vertex;\n\t\t\t}\n\n\t\t\tif (filledVertexSet !== null)\n\t\t\t{\n\t\t\t\tdelete filledVertexSet[vertexID];\n\t\t\t}\n\n\t\t\tvar edges = this.getEdges(vertex);\n\t\t\tvar model = this.graph.model;\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tvar otherVertex = this.getVisibleTerminal(edges[i], true);\n\t\t\t\tvar isSource = otherVertex == vertex;\n\t\t\t\t\n\t\t\t\tif (isSource)\n\t\t\t\t{\n\t\t\t\t\totherVertex = this.getVisibleTerminal(edges[i], false);\n\t\t\t\t}\n\n\t\t\t\tvar otherIndex = 0;\n\t\t\t\t// Get the swimlane index of the other terminal\n\t\t\t\tfor (otherIndex = 0; otherIndex < this.swimlanes.length; otherIndex++)\n\t\t\t\t{\n\t\t\t\t\tif (model.isAncestor(this.swimlanes[otherIndex], otherVertex))\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (otherIndex >= this.swimlanes.length)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Traverse if the other vertex is within the same swimlane as\n\t\t\t\t// as the current vertex, or if the swimlane index of the other\n\t\t\t\t// vertex is greater than that of this vertex\n\t\t\t\tif ((otherIndex > swimlaneIndex) ||\n\t\t\t\t\t\t((!directed || isSource) && otherIndex == swimlaneIndex))\n\t\t\t\t{\n\t\t\t\t\tcurrentComp = this.traverse(otherVertex, directed, edges[i], allVertices,\n\t\t\t\t\t\t\tcurrentComp, hierarchyVertices,\n\t\t\t\t\t\t\tfilledVertexSet, otherIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\t// We've seen this vertex before, but not in the current component\n\t\t\t\t// This component and the one it's in need to be merged\n\t\t\t\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar comp = hierarchyVertices[i];\n\n\t\t\t\t\tif (comp[vertexID] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key in comp)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentComp[key] = comp[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remove the current component from the hierarchy set\n\t\t\t\t\t\thierarchyVertices.splice(i, 1);\n\t\t\t\t\t\treturn currentComp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn currentComp;\n};\n\n/**\n * Function: cycleStage\n * \n * Executes the cycle stage using mxMinimumCycleRemover.\n */\nmxSwimlaneLayout.prototype.cycleStage = function(parent)\n{\n\tvar cycleStage = new mxSwimlaneOrdering(this);\n\tcycleStage.execute(parent);\n};\n\n/**\n * Function: layeringStage\n * \n * Implements first stage of a Sugiyama layout.\n */\nmxSwimlaneLayout.prototype.layeringStage = function()\n{\n\tthis.model.initialRank();\n\tthis.model.fixRanks();\n};\n\n/**\n * Function: crossingStage\n * \n * Executes the crossing stage using mxMedianHybridCrossingReduction.\n */\nmxSwimlaneLayout.prototype.crossingStage = function(parent)\n{\n\tvar crossingStage = new mxMedianHybridCrossingReduction(this);\n\tcrossingStage.execute(parent);\n};\n\n/**\n * Function: placementStage\n * \n * Executes the placement stage using mxCoordinateAssignment.\n */\nmxSwimlaneLayout.prototype.placementStage = function(initialX, parent)\n{\n\tvar placementStage = new mxCoordinateAssignment(this, this.intraCellSpacing,\n\t\t\tthis.interRankCellSpacing, this.orientation, initialX,\n\t\t\tthis.parallelEdgeSpacing);\n\tplacementStage.fineTuning = this.fineTuning;\n\tplacementStage.execute(parent);\n\t\n\treturn placementStage.limitX + this.interHierarchySpacing;\n};\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxGraphModel\n * \n * Extends <mxEventSource> to implement a graph model. The graph model acts as\n * a wrapper around the cells which are in charge of storing the actual graph\n * datastructure. The model acts as a transactional wrapper with event\n * notification for all changes, whereas the cells contain the atomic\n * operations for updating the actual datastructure.\n * \n * Layers:\n * \n * The cell hierarchy in the model must have a top-level root cell which\n * contains the layers (typically one default layer), which in turn contain the\n * top-level cells of the layers. This means each cell is contained in a layer.\n * If no layers are required, then all new cells should be added to the default\n * layer.\n * \n * Layers are useful for hiding and showing groups of cells, or for placing\n * groups of cells on top of other cells in the display. To identify a layer,\n * the <isLayer> function is used. It returns true if the parent of the given\n * cell is the root of the model.\n * \n * Events:\n * \n * See events section for more details. There is a new set of events for\n * tracking transactional changes as they happen. The events are called\n * startEdit for the initial beginUpdate, executed for each executed change\n * and endEdit for the terminal endUpdate. The executed event contains a\n * property called change which represents the change after execution.\n * \n * Encoding the model:\n * \n * To encode a graph model, use the following code:\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(graph.getModel());\n * (end)\n * \n * This will create an XML node that contains all the model information.\n * \n * Encoding and decoding changes:\n * \n * For the encoding of changes, a graph model listener is required that encodes\n * each change from the given array of changes.\n * \n * (code)\n * model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n *   var nodes = [];\n *   var codec = new mxCodec();\n * \n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     nodes.push(codec.encode(changes[i]));\n *   }\n *   // do something with the nodes\n * });\n * (end)\n * \n * For the decoding and execution of changes, the codec needs a lookup function\n * that allows it to resolve cell IDs as follows:\n * \n * (code)\n * var codec = new mxCodec();\n * codec.lookup = function(id)\n * {\n *   return model.getCell(id);\n * }\n * (end)\n * \n * For each encoded change (represented by a node), the following code can be\n * used to carry out the decoding and create a change object.\n * \n * (code)\n * var changes = [];\n * var change = codec.decode(node);\n * change.model = model;\n * change.execute();\n * changes.push(change);\n * (end)\n * \n * The changes can then be dispatched using the model as follows.\n * \n * (code)\n * var edit = new mxUndoableEdit(model, false);\n * edit.changes = changes;\n * \n * edit.notify = function()\n * {\n *   edit.source.fireEvent(new mxEventObject(mxEvent.CHANGE,\n *   \t'edit', edit, 'changes', edit.changes));\n *   edit.source.fireEvent(new mxEventObject(mxEvent.NOTIFY,\n *   \t'edit', edit, 'changes', edit.changes));\n * }\n * \n * model.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n * model.fireEvent(new mxEventObject(mxEvent.CHANGE,\n * \t\t'edit', edit, 'changes', changes));\n * (end)\n *\n * Event: mxEvent.CHANGE\n *\n * Fires when an undoable edit is dispatched. The <code>edit</code> property\n * contains the <mxUndoableEdit>. The <code>changes</code> property contains\n * the array of atomic changes inside the undoable edit. The changes property\n * is <strong>deprecated</strong>, please use edit.changes instead.\n *\n * Example:\n * \n * For finding newly inserted cells, the following code can be used:\n * \n * (code)\n * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n * \n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     var change = changes[i];\n *     \n *     if (change instanceof mxChildChange &&\n *       change.change.previous == null)\n *     {\n *       graph.startEditingAtCell(change.child);\n *       break;\n *     }\n *   }\n * });\n * (end)\n * \n * \n * Event: mxEvent.NOTIFY\n *\n * Same as <mxEvent.CHANGE>, this event can be used for classes that need to\n * implement a sync mechanism between this model and, say, a remote model. In\n * such a setup, only local changes should trigger a notify event and all\n * changes should trigger a change event.\n * \n * Event: mxEvent.EXECUTE\n * \n * Fires between begin- and endUpdate and after an atomic change was executed\n * in the model. The <code>change</code> property contains the atomic change\n * that was executed.\n * \n * Event: mxEvent.EXECUTED\n * \n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The <code>change</code> property contains the change that was executed.\n *\n * Event: mxEvent.BEGIN_UPDATE\n *\n * Fires after the <updateLevel> was incremented in <beginUpdate>. This event\n * contains no properties.\n * \n * Event: mxEvent.START_EDIT\n *\n * Fires after the <updateLevel> was changed from 0 to 1. This event\n * contains no properties.\n * \n * Event: mxEvent.END_UPDATE\n * \n * Fires after the <updateLevel> was decreased in <endUpdate> but before any\n * notification or change dispatching. The <code>edit</code> property contains\n * the <currentEdit>.\n * \n * Event: mxEvent.END_EDIT\n *\n * Fires after the <updateLevel> was changed from 1 to 0. This event\n * contains no properties.\n * \n * Event: mxEvent.BEFORE_UNDO\n * \n * Fires before the change is dispatched after the update level has reached 0\n * in <endUpdate>. The <code>edit</code> property contains the <curreneEdit>.\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the change was dispatched in <endUpdate>. The <code>edit</code>\n * property contains the <currentEdit>.\n * \n * Constructor: mxGraphModel\n * \n * Constructs a new graph model. If no root is specified then a new root\n * <mxCell> with a default layer is created.\n * \n * Parameters:\n * \n * root - <mxCell> that represents the root cell.\n */\nfunction mxGraphModel(root)\n{\n\tthis.currentEdit = this.createUndoableEdit();\n\t\n\tif (root != null)\n\t{\n\t\tthis.setRoot(root);\n\t}\n\telse\n\t{\n\t\tthis.clear();\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphModel.prototype = new mxEventSource();\nmxGraphModel.prototype.constructor = mxGraphModel;\n\n/**\n * Variable: root\n * \n * Holds the root cell, which in turn contains the cells that represent the\n * layers of the diagram as child cells. That is, the actual elements of the\n * diagram are supposed to live in the third generation of cells and below.\n */\nmxGraphModel.prototype.root = null;\n\n/**\n * Variable: cells\n * \n * Maps from Ids to cells.\n */\nmxGraphModel.prototype.cells = null;\n\n/**\n * Variable: maintainEdgeParent\n * \n * Specifies if edges should automatically be moved into the nearest common\n * ancestor of their terminals. Default is true.\n */\nmxGraphModel.prototype.maintainEdgeParent = true;\n\n/**\n * Variable: ignoreRelativeEdgeParent\n * \n * Specifies if relative edge parents should be ignored for finding the nearest\n * common ancestors of an edge's terminals. Default is true.\n */\nmxGraphModel.prototype.ignoreRelativeEdgeParent = true;\n\n/**\n * Variable: createIds\n * \n * Specifies if the model should automatically create Ids for new cells.\n * Default is true.\n */\nmxGraphModel.prototype.createIds = true;\n\n/**\n * Variable: prefix\n * \n * Defines the prefix of new Ids. Default is an empty string.\n */\nmxGraphModel.prototype.prefix = '';\n\n/**\n * Variable: postfix\n * \n * Defines the postfix of new Ids. Default is an empty string.\n */\nmxGraphModel.prototype.postfix = '';\n\n/**\n * Variable: nextId\n * \n * Specifies the next Id to be created. Initial value is 0.\n */\nmxGraphModel.prototype.nextId = 0;\n\n/**\n * Variable: currentEdit\n * \n * Holds the changes for the current transaction. If the transaction is\n * closed then a new object is created for this variable using\n * <createUndoableEdit>.\n */\nmxGraphModel.prototype.currentEdit = null;\n\n/**\n * Variable: updateLevel\n * \n * Counter for the depth of nested transactions. Each call to <beginUpdate>\n * will increment this number and each call to <endUpdate> will decrement\n * it. When the counter reaches 0, the transaction is closed and the\n * respective events are fired. Initial value is 0.\n */\nmxGraphModel.prototype.updateLevel = 0;\n\n/**\n * Variable: endingUpdate\n * \n * True if the program flow is currently inside endUpdate.\n */\nmxGraphModel.prototype.endingUpdate = false;\n\n/**\n * Function: clear\n *\n * Sets a new root using <createRoot>.\n */\nmxGraphModel.prototype.clear = function()\n{\n\tthis.setRoot(this.createRoot());\n};\n\n/**\n * Function: isCreateIds\n *\n * Returns <createIds>.\n */\nmxGraphModel.prototype.isCreateIds = function()\n{\n\treturn this.createIds;\n};\n\n/**\n * Function: setCreateIds\n *\n * Sets <createIds>.\n */\nmxGraphModel.prototype.setCreateIds = function(value)\n{\n\tthis.createIds = value;\n};\n\n/**\n * Function: createRoot\n *\n * Creates a new root cell with a default layer (child 0).\n */\nmxGraphModel.prototype.createRoot = function()\n{\n\tvar cell = new mxCell();\n\tcell.insert(new mxCell());\n\t\n\treturn cell;\n};\n\n/**\n * Function: getCell\n *\n * Returns the <mxCell> for the specified Id or null if no cell can be\n * found for the given Id.\n *\n * Parameters:\n * \n * id - A string representing the Id of the cell.\n */\nmxGraphModel.prototype.getCell = function(id)\n{\n\treturn (this.cells != null) ? this.cells[id] : null;\n};\n\n/**\n * Function: filterCells\n * \n * Returns the cells from the given array where the given filter function\n * returns true.\n */\nmxGraphModel.prototype.filterCells = function(cells, filter)\n{\n\tvar result = null;\n\t\n\tif (cells != null)\n\t{\n\t\tresult = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (filter(cells[i]))\n\t\t\t{\n\t\t\t\tresult.push(cells[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getDescendants\n * \n * Returns all descendants of the given cell and the cell itself in an array.\n * \n * Parameters:\n * \n * parent - <mxCell> whose descendants should be returned.\n */\nmxGraphModel.prototype.getDescendants = function(parent)\n{\n\treturn this.filterDescendants(null, parent);\n};\n\n/**\n * Function: filterDescendants\n * \n * Visits all cells recursively and applies the specified filter function\n * to each cell. If the function returns true then the cell is added\n * to the resulting array. The parent and result paramters are optional.\n * If parent is not specified then the recursion starts at <root>.\n * \n * Example:\n * The following example extracts all vertices from a given model:\n * (code)\n * var filter = function(cell)\n * {\n * \treturn model.isVertex(cell);\n * }\n * var vertices = model.filterDescendants(filter);\n * (end)\n * \n * Parameters:\n * \n * filter - JavaScript function that takes an <mxCell> as an argument\n * and returns a boolean.\n * parent - Optional <mxCell> that is used as the root of the recursion.\n */\nmxGraphModel.prototype.filterDescendants = function(filter, parent)\n{\n\t// Creates a new array for storing the result\n\tvar result = [];\n\n\t// Recursion starts at the root of the model\n\tparent = parent || this.getRoot();\n\t\n\t// Checks if the filter returns true for the cell\n\t// and adds it to the result array\n\tif (filter == null || filter(parent))\n\t{\n\t\tresult.push(parent);\n\t}\n\t\n\t// Visits the children of the cell\n\tvar childCount = this.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(parent, i);\n\t\tresult = result.concat(this.filterDescendants(filter, child));\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getRoot\n * \n * Returns the root of the model or the topmost parent of the given cell.\n *\n * Parameters:\n * \n * cell - Optional <mxCell> that specifies the child.\n */\nmxGraphModel.prototype.getRoot = function(cell)\n{\n\tvar root = cell || this.root;\n\t\n\tif (cell != null)\n\t{\n\t\twhile (cell != null)\n\t\t{\n\t\t\troot = cell;\n\t\t\tcell = this.getParent(cell);\n\t\t}\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: setRoot\n * \n * Sets the <root> of the model using <mxRootChange> and adds the change to\n * the current transaction. This resets all datastructures in the model and\n * is the preferred way of clearing an existing model. Returns the new\n * root.\n * \n * Example:\n * \n * (code)\n * var root = new mxCell();\n * root.insert(new mxCell());\n * model.setRoot(root);\n * (end)\n *\n * Parameters:\n * \n * root - <mxCell> that specifies the new root.\n */\nmxGraphModel.prototype.setRoot = function(root)\n{\n\tthis.execute(new mxRootChange(this, root));\n\t\n\treturn root;\n};\n\n/**\n * Function: rootChanged\n * \n * Inner callback to change the root of the model and update the internal\n * datastructures, such as <cells> and <nextId>. Returns the previous root.\n *\n * Parameters:\n * \n * root - <mxCell> that specifies the new root.\n */\nmxGraphModel.prototype.rootChanged = function(root)\n{\n\tvar oldRoot = this.root;\n\tthis.root = root;\n\t\n\t// Resets counters and datastructures\n\tthis.nextId = 0;\n\tthis.cells = null;\n\tthis.cellAdded(root);\n\t\n\treturn oldRoot;\n};\n\n/**\n * Function: isRoot\n * \n * Returns true if the given cell is the root of the model and a non-null\n * value.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible root.\n */\nmxGraphModel.prototype.isRoot = function(cell)\n{\n\treturn cell != null && this.root == cell;\n};\n\n/**\n * Function: isLayer\n * \n * Returns true if <isRoot> returns true for the parent of the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible layer.\n */\nmxGraphModel.prototype.isLayer = function(cell)\n{\n\treturn this.isRoot(this.getParent(cell));\n};\n\n/**\n * Function: isAncestor\n * \n * Returns true if the given parent is an ancestor of the given child. Note \n * returns true if child == parent.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent.\n * child - <mxCell> that specifies the child.\n */\nmxGraphModel.prototype.isAncestor = function(parent, child)\n{\n\twhile (child != null && child != parent)\n\t{\n\t\tchild = this.getParent(child);\n\t}\n\t\n\treturn child == parent;\n};\n\n/**\n * Function: contains\n * \n * Returns true if the model contains the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell.\n */\nmxGraphModel.prototype.contains = function(cell)\n{\n\treturn this.isAncestor(this.root, cell);\n};\n\n/**\n * Function: getParent\n * \n * Returns the parent of the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> whose parent should be returned.\n */\nmxGraphModel.prototype.getParent = function(cell)\n{\n\treturn (cell != null) ? cell.getParent() : null;\n};\n\n/**\n * Function: add\n * \n * Adds the specified child to the parent at the given index using\n * <mxChildChange> and adds the change to the current transaction. If no\n * index is specified then the child is appended to the parent's array of\n * children. Returns the inserted child.\n * \n * Parameters:\n * \n * parent - <mxCell> that specifies the parent to contain the child.\n * child - <mxCell> that specifies the child to be inserted.\n * index - Optional integer that specifies the index of the child.\n */\nmxGraphModel.prototype.add = function(parent, child, index)\n{\n\tif (child != parent && parent != null && child != null)\n\t{\t\n\t\t// Appends the child if no index was specified\n\t\tif (index == null)\n\t\t{\n\t\t\tindex = this.getChildCount(parent);\n\t\t}\n\t\t\n\t\tvar parentChanged = parent != this.getParent(child);\n\t\tthis.execute(new mxChildChange(this, parent, child, index));\n\n\t\t// Maintains the edges parents by moving the edges\n\t\t// into the nearest common ancestor of its terminals\n\t\tif (this.maintainEdgeParent && parentChanged)\n\t\t{\n\t\t\tthis.updateEdgeParents(child);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: cellAdded\n * \n * Inner callback to update <cells> when a cell has been added. This\n * implementation resolves collisions by creating new Ids. To change the\n * ID of a cell after it was inserted into the model, use the following\n * code:\n * \n * (code\n * delete model.cells[cell.getId()];\n * cell.setId(newId);\n * model.cells[cell.getId()] = cell;\n * (end)\n *\n * If the change of the ID should be part of the command history, then the\n * cell should be removed from the model and a clone with the new ID should\n * be reinserted into the model instead.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell that has been added.\n */\nmxGraphModel.prototype.cellAdded = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\t// Creates an Id for the cell if not Id exists\n\t\tif (cell.getId() == null && this.createIds)\n\t\t{\n\t\t\tcell.setId(this.createId(cell));\n\t\t}\n\t\t\n\t\tif (cell.getId() != null)\n\t\t{\n\t\t\tvar collision = this.getCell(cell.getId());\n\t\t\t\n\t\t\tif (collision != cell)\n\t\t\t{\t\n\t\t\t\t// Creates new Id for the cell\n\t\t\t\t// as long as there is a collision\n\t\t\t\twhile (collision != null)\n\t\t\t\t{\n\t\t\t\t\tcell.setId(this.createId(cell));\n\t\t\t\t\tcollision = this.getCell(cell.getId());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Lazily creates the cells dictionary\n\t\t\t\tif (this.cells == null)\n\t\t\t\t{\n\t\t\t\t\tthis.cells = new Object();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.cells[cell.getId()] = cell;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Makes sure IDs of deleted cells are not reused\n\t\tif (mxUtils.isNumeric(cell.getId()))\n\t\t{\n\t\t\tthis.nextId = Math.max(this.nextId, cell.getId());\n\t\t}\n\t\t\n\t\t// Recursively processes child cells\n\t\tvar childCount = this.getChildCount(cell);\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tthis.cellAdded(this.getChildAt(cell, i));\n\t\t}\n\t}\n};\n\n/**\n * Function: createId\n * \n * Hook method to create an Id for the specified cell. This implementation\n * concatenates <prefix>, id and <postfix> to create the Id and increments\n * <nextId>. The cell is ignored by this implementation, but can be used in\n * overridden methods to prefix the Ids with eg. the cell type.\n *\n * Parameters:\n *\n * cell - <mxCell> to create the Id for.\n */\nmxGraphModel.prototype.createId = function(cell)\n{\n\tvar id = this.nextId;\n\tthis.nextId++;\n\t\n\treturn this.prefix + id + this.postfix;\n};\n\n/**\n * Function: updateEdgeParents\n * \n * Updates the parent for all edges that are connected to cell or one of\n * its descendants using <updateEdgeParent>.\n */\nmxGraphModel.prototype.updateEdgeParents = function(cell, root)\n{\n\t// Gets the topmost node of the hierarchy\n\troot = root || this.getRoot(cell);\n\t\n\t// Updates edges on children first\n\tvar childCount = this.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(cell, i);\n\t\tthis.updateEdgeParents(child, root);\n\t}\n\t\n\t// Updates the parents of all connected edges\n\tvar edgeCount = this.getEdgeCount(cell);\n\tvar edges = [];\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tedges.push(this.getEdgeAt(cell, i));\n\t}\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar edge = edges[i];\n\t\t\n\t\t// Updates edge parent if edge and child have\n\t\t// a common root node (does not need to be the\n\t\t// model root node)\n\t\tif (this.isAncestor(root, edge))\n\t\t{\n\t\t\tthis.updateEdgeParent(edge, root);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateEdgeParent\n *\n * Inner callback to update the parent of the specified <mxCell> to the\n * nearest-common-ancestor of its two terminals.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * root - <mxCell> that represents the current root of the model.\n */\nmxGraphModel.prototype.updateEdgeParent = function(edge, root)\n{\n\tvar source = this.getTerminal(edge, true);\n\tvar target = this.getTerminal(edge, false);\n\tvar cell = null;\n\t\n\t// Uses the first non-relative descendants of the source terminal\n\twhile (source != null && !this.isEdge(source) &&\n\t\tsource.geometry != null && source.geometry.relative)\n\t{\n\t\tsource = this.getParent(source);\n\t}\n\t\n\t// Uses the first non-relative descendants of the target terminal\n\twhile (target != null && this.ignoreRelativeEdgeParent &&\n\t\t!this.isEdge(target) && target.geometry != null && \n\t\ttarget.geometry.relative)\n\t{\n\t\ttarget = this.getParent(target);\n\t}\n\t\n\tif (this.isAncestor(root, source) && this.isAncestor(root, target))\n\t{\n\t\tif (source == target)\n\t\t{\n\t\t\tcell = this.getParent(source);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcell = this.getNearestCommonAncestor(source, target);\n\t\t}\n\n\t\tif (cell != null && (this.getParent(cell) != this.root ||\n\t\t\tthis.isAncestor(cell, edge)) && this.getParent(edge) != cell)\n\t\t{\n\t\t\tvar geo = this.getGeometry(edge);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar origin1 = this.getOrigin(this.getParent(edge));\n\t\t\t\tvar origin2 = this.getOrigin(cell);\n\t\t\t\t\n\t\t\t\tvar dx = origin2.x - origin1.x;\n\t\t\t\tvar dy = origin2.y - origin1.y;\n\t\t\t\t\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.translate(-dx, -dy);\n\t\t\t\tthis.setGeometry(edge, geo);\n\t\t\t}\n\n\t\t\tthis.add(cell, edge, this.getChildCount(cell));\n\t\t}\n\t}\n};\n\n/**\n * Function: getOrigin\n * \n * Returns the absolute, accumulated origin for the children inside the\n * given parent as an <mxPoint>.\n */\nmxGraphModel.prototype.getOrigin = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tresult = this.getOrigin(this.getParent(cell));\n\t\t\n\t\tif (!this.isEdge(cell))\n\t\t{\n\t\t\tvar geo = this.getGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tresult.x += geo.x;\n\t\t\t\tresult.y += geo.y;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = new mxPoint();\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getNearestCommonAncestor\n * \n * Returns the nearest common ancestor for the specified cells.\n *\n * Parameters:\n * \n * cell1 - <mxCell> that specifies the first cell in the tree.\n * cell2 - <mxCell> that specifies the second cell in the tree.\n */\nmxGraphModel.prototype.getNearestCommonAncestor = function(cell1, cell2)\n{\n\tif (cell1 != null && cell2 != null)\n\t{\t\t\n\t\t// Creates the cell path for the second cell\n\t\tvar path = mxCellPath.create(cell2);\n\n\t\tif (path != null && path.length > 0)\n\t\t{\n\t\t\t// Bubbles through the ancestors of the first\n\t\t\t// cell to find the nearest common ancestor.\n\t\t\tvar cell = cell1;\n\t\t\tvar current = mxCellPath.create(cell);\n\t\t\t\n\t\t\t// Inverts arguments\n\t\t\tif (path.length < current.length)\n\t\t\t{\n\t\t\t\tcell = cell2;\n\t\t\t\tvar tmp = current;\n\t\t\t\tcurrent = path;\n\t\t\t\tpath = tmp;\n\t\t\t}\n\t\t\t\n\t\t\twhile (cell != null)\n\t\t\t{\n\t\t\t\tvar parent = this.getParent(cell);\n\t\t\t\t\n\t\t\t\t// Checks if the cell path is equal to the beginning of the given cell path\n\t\t\t\tif (path.indexOf(current + mxCellPath.PATH_SEPARATOR) == 0 && parent != null)\n\t\t\t\t{\n\t\t\t\t\treturn cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrent = mxCellPath.getParentPath(current);\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: remove\n * \n * Removes the specified cell from the model using <mxChildChange> and adds\n * the change to the current transaction. This operation will remove the\n * cell and all of its children from the model. Returns the removed cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that should be removed.\n */\nmxGraphModel.prototype.remove = function(cell)\n{\n\tif (cell == this.root)\n\t{\n\t\tthis.setRoot(null);\n\t}\n\telse if (this.getParent(cell) != null)\n\t{\n\t\tthis.execute(new mxChildChange(this, null, cell));\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellRemoved\n * \n * Inner callback to update <cells> when a cell has been removed.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell that has been removed.\n */\nmxGraphModel.prototype.cellRemoved = function(cell)\n{\n\tif (cell != null && this.cells != null)\n\t{\n\t\t// Recursively processes child cells\n\t\tvar childCount = this.getChildCount(cell);\n\t\t\n\t\tfor (var i = childCount - 1; i >= 0; i--)\n\t\t{\n\t\t\tthis.cellRemoved(this.getChildAt(cell, i));\n\t\t}\n\t\t\n\t\t// Removes the dictionary entry for the cell\n\t\tif (this.cells != null && cell.getId() != null)\n\t\t{\n\t\t\tdelete this.cells[cell.getId()];\n\t\t}\n\t}\n};\n\n/**\n * Function: parentForCellChanged\n * \n * Inner callback to update the parent of a cell using <mxCell.insert>\n * on the parent and return the previous parent.\n *\n * Parameters:\n * \n * cell - <mxCell> to update the parent for.\n * parent - <mxCell> that specifies the new parent of the cell.\n * index - Optional integer that defines the index of the child\n * in the parent's child array.\n */\nmxGraphModel.prototype.parentForCellChanged = function(cell, parent, index)\n{\n\tvar previous = this.getParent(cell);\n\t\n\tif (parent != null)\n\t{\n\t\tif (parent != previous || previous.getIndex(cell) != index)\n\t\t{\n\t\t\tparent.insert(cell, index);\n\t\t}\n\t}\n\telse if (previous != null)\n\t{\n\t\tvar oldIndex = previous.getIndex(cell);\n\t\tprevious.remove(oldIndex);\n\t}\n\t\n\t// Checks if the previous parent was already in the\n\t// model and avoids calling cellAdded if it was.\n\tif (!this.contains(previous) && parent != null)\n\t{\n\t\tthis.cellAdded(cell);\n\t}\n\telse if (parent == null)\n\t{\n\t\tthis.cellRemoved(cell);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: getChildCount\n *\n * Returns the number of children in the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> whose number of children should be returned.\n */\nmxGraphModel.prototype.getChildCount = function(cell)\n{\n\treturn (cell != null) ? cell.getChildCount() : 0;\n};\n\n/**\n * Function: getChildAt\n *\n * Returns the child of the given <mxCell> at the given index.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the parent.\n * index - Integer that specifies the index of the child to be returned.\n */\nmxGraphModel.prototype.getChildAt = function(cell, index)\n{\n\treturn (cell != null) ? cell.getChildAt(index) : null;\n};\n\n/**\n * Function: getChildren\n * \n * Returns all children of the given <mxCell> as an array of <mxCells>. The\n * return value should be only be read.\n *\n * Parameters:\n * \n * cell - <mxCell> the represents the parent.\n */\nmxGraphModel.prototype.getChildren = function(cell)\n{\n\treturn (cell != null) ? cell.children : null;\n};\n\t\n/**\n * Function: getChildVertices\n * \n * Returns the child vertices of the given parent.\n *\n * Parameters:\n * \n * cell - <mxCell> whose child vertices should be returned.\n */\nmxGraphModel.prototype.getChildVertices = function(parent)\n{\n\treturn this.getChildCells(parent, true, false);\n};\n\t\t\n/**\n * Function: getChildEdges\n * \n * Returns the child edges of the given parent.\n *\n * Parameters:\n * \n * cell - <mxCell> whose child edges should be returned.\n */\nmxGraphModel.prototype.getChildEdges = function(parent)\n{\n\treturn this.getChildCells(parent, false, true);\n};\n\n/**\n * Function: getChildCells\n * \n * Returns the children of the given cell that are vertices and/or edges\n * depending on the arguments.\n *\n * Parameters:\n * \n * cell - <mxCell> the represents the parent.\n * vertices - Boolean indicating if child vertices should be returned.\n * Default is false.\n * edges - Boolean indicating if child edges should be returned.\n * Default is false.\n */\nmxGraphModel.prototype.getChildCells = function(parent, vertices, edges)\n{\n\tvertices = (vertices != null) ? vertices : false;\n\tedges = (edges != null) ? edges : false;\n\t\n\tvar childCount = this.getChildCount(parent);\n\tvar result = [];\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(parent, i);\n\n\t\tif ((!edges && !vertices) || (edges && this.isEdge(child)) ||\n\t\t\t(vertices && this.isVertex(child)))\n\t\t{\n\t\t\tresult.push(child);\n\t\t}\n\t}\n\n\treturn result;\n};\n\t\t\n/**\n * Function: getTerminal\n * \n * Returns the source or target <mxCell> of the given edge depending on the\n * value of the boolean parameter.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * isSource - Boolean indicating which end of the edge should be returned.\n */\nmxGraphModel.prototype.getTerminal = function(edge, isSource)\n{\n\treturn (edge != null) ? edge.getTerminal(isSource) : null;\n};\n\n/**\n * Function: setTerminal\n * \n * Sets the source or target terminal of the given <mxCell> using\n * <mxTerminalChange> and adds the change to the current transaction.\n * This implementation updates the parent of the edge using <updateEdgeParent>\n * if required.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * terminal - <mxCell> that specifies the new terminal.\n * isSource - Boolean indicating if the terminal is the new source or\n * target terminal of the edge.\n */\nmxGraphModel.prototype.setTerminal = function(edge, terminal, isSource)\n{\n\tvar terminalChanged = terminal != this.getTerminal(edge, isSource);\n\tthis.execute(new mxTerminalChange(this, edge, terminal, isSource));\n\t\n\tif (this.maintainEdgeParent && terminalChanged)\n\t{\n\t\tthis.updateEdgeParent(edge, this.getRoot());\n\t}\n\t\n\treturn terminal;\n};\n\t\n/**\n * Function: setTerminals\n * \n * Sets the source and target <mxCell> of the given <mxCell> in a single\n * transaction using <setTerminal> for each end of the edge.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * source - <mxCell> that specifies the new source terminal.\n * target - <mxCell> that specifies the new target terminal.\n */\nmxGraphModel.prototype.setTerminals = function(edge, source, target)\n{\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tthis.setTerminal(edge, source, true);\n\t\tthis.setTerminal(edge, target, false);\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: terminalForCellChanged\n * \n * Inner helper function to update the terminal of the edge using\n * <mxCell.insertEdge> and return the previous terminal.\n * \n * Parameters:\n * \n * edge - <mxCell> that specifies the edge to be updated.\n * terminal - <mxCell> that specifies the new terminal.\n * isSource - Boolean indicating if the terminal is the new source or\n * target terminal of the edge.\n */\nmxGraphModel.prototype.terminalForCellChanged = function(edge, terminal, isSource)\n{\n\tvar previous = this.getTerminal(edge, isSource);\n\t\n\tif (terminal != null)\n\t{\n\t\tterminal.insertEdge(edge, isSource);\n\t}\n\telse if (previous != null)\n\t{\n\t\tprevious.removeEdge(edge, isSource);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: getEdgeCount\n * \n * Returns the number of distinct edges connected to the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the vertex.\n */\nmxGraphModel.prototype.getEdgeCount = function(cell)\n{\n\treturn (cell != null) ? cell.getEdgeCount() : 0;\n};\n\n/**\n * Function: getEdgeAt\n * \n * Returns the edge of cell at the given index.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the vertex.\n * index - Integer that specifies the index of the edge\n * to return.\n */\nmxGraphModel.prototype.getEdgeAt = function(cell, index)\n{\n\treturn (cell != null) ? cell.getEdgeAt(index) : null;\n};\n\t\n/**\n * Function: getDirectedEdgeCount\n * \n * Returns the number of incoming or outgoing edges, ignoring the given\n * edge.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edge count should be returned.\n * outgoing - Boolean that specifies if the number of outgoing or\n * incoming edges should be returned.\n * ignoredEdge - <mxCell> that represents an edge to be ignored.\n */\nmxGraphModel.prototype.getDirectedEdgeCount = function(cell, outgoing, ignoredEdge)\n{\n\tvar count = 0;\n\tvar edgeCount = this.getEdgeCount(cell);\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(cell, i);\n\n\t\tif (edge != ignoredEdge && this.getTerminal(edge, outgoing) == cell)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\n\treturn count;\n};\n\n/**\n * Function: getConnections\n * \n * Returns all edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n * \n */\nmxGraphModel.prototype.getConnections = function(cell)\n{\n\treturn this.getEdges(cell, true, true, false);\n};\n\n/**\n * Function: getIncomingEdges\n * \n * Returns the incoming edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose incoming edges should be returned.\n * \n */\nmxGraphModel.prototype.getIncomingEdges = function(cell)\n{\n\treturn this.getEdges(cell, true, false, false);\n};\n\n/**\n * Function: getOutgoingEdges\n * \n * Returns the outgoing edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose outgoing edges should be returned.\n * \n */\nmxGraphModel.prototype.getOutgoingEdges = function(cell)\n{\n\treturn this.getEdges(cell, false, true, false);\n};\n\n/**\n * Function: getEdges\n * \n * Returns all distinct edges connected to this cell as a new array of\n * <mxCells>. If at least one of incoming or outgoing is true, then loops\n * are ignored, otherwise if both are false, then all edges connected to\n * the given cell are returned including loops.\n * \n * Parameters:\n * \n * cell - <mxCell> that specifies the cell.\n * incoming - Optional boolean that specifies if incoming edges should be\n * returned. Default is true.\n * outgoing - Optional boolean that specifies if outgoing edges should be\n * returned. Default is true.\n * includeLoops - Optional boolean that specifies if loops should be returned.\n * Default is true. \n */\nmxGraphModel.prototype.getEdges = function(cell, incoming, outgoing, includeLoops)\n{\n\tincoming = (incoming != null) ? incoming : true;\n\toutgoing = (outgoing != null) ? outgoing : true;\n\tincludeLoops = (includeLoops != null) ? includeLoops : true;\n\t\n\tvar edgeCount = this.getEdgeCount(cell);\n\tvar result = [];\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(cell, i);\n\t\tvar source = this.getTerminal(edge, true);\n\t\tvar target = this.getTerminal(edge, false);\n\n\t\tif ((includeLoops && source == target) || ((source != target) && ((incoming && target == cell) ||\n\t\t\t(outgoing && source == cell))))\n\t\t{\n\t\t\tresult.push(edge);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns all edges between the given source and target pair. If directed\n * is true, then only edges from the source to the target are returned,\n * otherwise, all edges between the two cells are returned.\n * \n * Parameters:\n * \n * source - <mxCell> that defines the source terminal of the edge to be\n * returned.\n * target - <mxCell> that defines the target terminal of the edge to be\n * returned.\n * directed - Optional boolean that specifies if the direction of the\n * edge should be taken into account. Default is false.\n */\nmxGraphModel.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\t\n\tvar tmp1 = this.getEdgeCount(source);\n\tvar tmp2 = this.getEdgeCount(target);\n\t\n\t// Assumes the source has less connected edges\n\tvar terminal = source;\n\tvar edgeCount = tmp1;\n\t\n\t// Uses the smaller array of connected edges\n\t// for searching the edge\n\tif (tmp2 < tmp1)\n\t{\n\t\tedgeCount = tmp2;\n\t\tterminal = target;\n\t}\n\t\n\tvar result = [];\n\t\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(terminal, i);\n\t\tvar src = this.getTerminal(edge, true);\n\t\tvar trg = this.getTerminal(edge, false);\n\t\tvar directedMatch = (src == source) && (trg == target);\n\t\tvar oppositeMatch = (trg == source) && (src == target);\n\n\t\tif (directedMatch || (!directed && oppositeMatch))\n\t\t{\n\t\t\tresult.push(edge);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getOpposites\n * \n * Returns all opposite vertices wrt terminal for the given edges, only\n * returning sources and/or targets as specified. The result is returned\n * as an array of <mxCells>.\n * \n * Parameters:\n * \n * edges - Array of <mxCells> that contain the edges to be examined.\n * terminal - <mxCell> that specifies the known end of the edges.\n * sources - Boolean that specifies if source terminals should be contained\n * in the result. Default is true.\n * targets - Boolean that specifies if target terminals should be contained\n * in the result. Default is true.\n */\nmxGraphModel.prototype.getOpposites = function(edges, terminal, sources, targets)\n{\n\tsources = (sources != null) ? sources : true;\n\ttargets = (targets != null) ? targets : true;\n\t\n\tvar terminals = [];\n\t\n\tif (edges != null)\n\t{\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar source = this.getTerminal(edges[i], true);\n\t\t\tvar target = this.getTerminal(edges[i], false);\n\t\t\t\n\t\t\t// Checks if the terminal is the source of\n\t\t\t// the edge and if the target should be\n\t\t\t// stored in the result\n\t\t\tif (source == terminal && target != null && target != terminal && targets)\n\t\t\t{\n\t\t\t\tterminals.push(target);\n\t\t\t}\n\t\t\t\n\t\t\t// Checks if the terminal is the taget of\n\t\t\t// the edge and if the source should be\n\t\t\t// stored in the result\n\t\t\telse if (target == terminal && source != null && source != terminal && sources)\n\t\t\t{\n\t\t\t\tterminals.push(source);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn terminals;\n};\n\n/**\n * Function: getTopmostCells\n * \n * Returns the topmost cells of the hierarchy in an array that contains no\n * descendants for each <mxCell> that it contains. Duplicates should be\n * removed in the cells array to improve performance.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose topmost ancestors should be returned.\n */\nmxGraphModel.prototype.getTopmostCells = function(cells)\n{\n\tvar dict = new mxDictionary();\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tdict.put(cells[i], true);\n\t}\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tvar cell = cells[i];\n\t\tvar topmost = true;\n\t\tvar parent = this.getParent(cell);\n\t\t\n\t\twhile (parent != null)\n\t\t{\n\t\t\tif (dict.get(parent))\n\t\t\t{\n\t\t\t\ttopmost = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tparent = this.getParent(parent);\n\t\t}\n\t\t\n\t\tif (topmost)\n\t\t{\n\t\t\ttmp.push(cell);\n\t\t}\n\t}\n\t\n\treturn tmp;\n};\n\n/**\n * Function: isVertex\n * \n * Returns true if the given cell is a vertex.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible vertex.\n */\nmxGraphModel.prototype.isVertex = function(cell)\n{\n\treturn (cell != null) ? cell.isVertex() : false;\n};\n\n/**\n * Function: isEdge\n * \n * Returns true if the given cell is an edge.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible edge.\n */\nmxGraphModel.prototype.isEdge = function(cell)\n{\n\treturn (cell != null) ? cell.isEdge() : false;\n};\n\n/**\n * Function: isConnectable\n * \n * Returns true if the given <mxCell> is connectable. If <edgesConnectable>\n * is false, then this function returns false for all edges else it returns\n * the return value of <mxCell.isConnectable>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose connectable state should be returned.\n */\nmxGraphModel.prototype.isConnectable = function(cell)\n{\n\treturn (cell != null) ? cell.isConnectable() : false;\n};\n\n/**\n * Function: getValue\n * \n * Returns the user object of the given <mxCell> using <mxCell.getValue>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose user object should be returned.\n */\nmxGraphModel.prototype.getValue = function(cell)\n{\n\treturn (cell != null) ? cell.getValue() : null;\n};\n\n/**\n * Function: setValue\n * \n * Sets the user object of then given <mxCell> using <mxValueChange>\n * and adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose user object should be changed.\n * value - Object that defines the new user object.\n */\nmxGraphModel.prototype.setValue = function(cell, value)\n{\n\tthis.execute(new mxValueChange(this, cell, value));\n\t\n\treturn value;\n};\n\n/**\n * Function: valueForCellChanged\n * \n * Inner callback to update the user object of the given <mxCell>\n * using <mxCell.valueChanged> and return the previous value,\n * that is, the return value of <mxCell.valueChanged>.\n * \n * To change a specific attribute in an XML node, the following code can be\n * used.\n * \n * (code)\n * graph.getModel().valueForCellChanged = function(cell, value)\n * {\n *   var previous = cell.value.getAttribute('label');\n *   cell.value.setAttribute('label', value);\n *   \n *   return previous;\n * };\n * (end) \n */\nmxGraphModel.prototype.valueForCellChanged = function(cell, value)\n{\n\treturn cell.valueChanged(value);\n};\n\n/**\n * Function: getGeometry\n * \n * Returns the <mxGeometry> of the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose geometry should be returned.\n */\nmxGraphModel.prototype.getGeometry = function(cell)\n{\n\treturn (cell != null) ? cell.getGeometry() : null;\n};\n\n/**\n * Function: setGeometry\n * \n * Sets the <mxGeometry> of the given <mxCell>. The actual update\n * of the cell is carried out in <geometryForCellChanged>. The\n * <mxGeometryChange> action is used to encapsulate the change.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be changed.\n * geometry - <mxGeometry> that defines the new geometry.\n */\nmxGraphModel.prototype.setGeometry = function(cell, geometry)\n{\n\tif (geometry != this.getGeometry(cell))\n\t{\n\t\tthis.execute(new mxGeometryChange(this, cell, geometry));\n\t}\n\t\n\treturn geometry;\n};\n\n/**\n * Function: geometryForCellChanged\n * \n * Inner callback to update the <mxGeometry> of the given <mxCell> using\n * <mxCell.setGeometry> and return the previous <mxGeometry>.\n */\nmxGraphModel.prototype.geometryForCellChanged = function(cell, geometry)\n{\n\tvar previous = this.getGeometry(cell);\n\tcell.setGeometry(geometry);\n\t\n\treturn previous;\n};\n\n/**\n * Function: getStyle\n * \n * Returns the style of the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose style should be returned.\n */\nmxGraphModel.prototype.getStyle = function(cell)\n{\n\treturn (cell != null) ? cell.getStyle() : null;\n};\n\n/**\n * Function: setStyle\n * \n * Sets the style of the given <mxCell> using <mxStyleChange> and\n * adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose style should be changed.\n * style - String of the form [stylename;|key=value;] to specify\n * the new cell style.\n */\nmxGraphModel.prototype.setStyle = function(cell, style)\n{\n\tif (style != this.getStyle(cell))\n\t{\n\t\tthis.execute(new mxStyleChange(this, cell, style));\n\t}\n\t\n\treturn style;\n};\n\n/**\n * Function: styleForCellChanged\n * \n * Inner callback to update the style of the given <mxCell>\n * using <mxCell.setStyle> and return the previous style.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * style - String of the form [stylename;|key=value;] to specify\n * the new cell style.\n */\nmxGraphModel.prototype.styleForCellChanged = function(cell, style)\n{\n\tvar previous = this.getStyle(cell);\n\tcell.setStyle(style);\n\t\n\treturn previous;\n};\n\n/**\n * Function: isCollapsed\n * \n * Returns true if the given <mxCell> is collapsed.\n *\n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be returned.\n */\nmxGraphModel.prototype.isCollapsed = function(cell)\n{\n\treturn (cell != null) ? cell.isCollapsed() : false;\n};\n\n/**\n * Function: setCollapsed\n * \n * Sets the collapsed state of the given <mxCell> using <mxCollapseChange>\n * and adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be changed.\n * collapsed - Boolean that specifies the new collpased state.\n */\nmxGraphModel.prototype.setCollapsed = function(cell, collapsed)\n{\n\tif (collapsed != this.isCollapsed(cell))\n\t{\n\t\tthis.execute(new mxCollapseChange(this, cell, collapsed));\n\t}\n\t\n\treturn collapsed;\n};\n\t\n/**\n * Function: collapsedStateForCellChanged\n *\n * Inner callback to update the collapsed state of the\n * given <mxCell> using <mxCell.setCollapsed> and return\n * the previous collapsed state.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * collapsed - Boolean that specifies the new collpased state.\n */\nmxGraphModel.prototype.collapsedStateForCellChanged = function(cell, collapsed)\n{\n\tvar previous = this.isCollapsed(cell);\n\tcell.setCollapsed(collapsed);\n\t\n\treturn previous;\n};\n\n/**\n * Function: isVisible\n * \n * Returns true if the given <mxCell> is visible.\n * \n * Parameters:\n * \n * cell - <mxCell> whose visible state should be returned.\n */\nmxGraphModel.prototype.isVisible = function(cell)\n{\n\treturn (cell != null) ? cell.isVisible() : false;\n};\n\n/**\n * Function: setVisible\n * \n * Sets the visible state of the given <mxCell> using <mxVisibleChange> and\n * adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose visible state should be changed.\n * visible - Boolean that specifies the new visible state.\n */\nmxGraphModel.prototype.setVisible = function(cell, visible)\n{\n\tif (visible != this.isVisible(cell))\n\t{\n\t\tthis.execute(new mxVisibleChange(this, cell, visible));\n\t}\n\t\n\treturn visible;\n};\n\t\n/**\n * Function: visibleStateForCellChanged\n *\n * Inner callback to update the visible state of the\n * given <mxCell> using <mxCell.setCollapsed> and return\n * the previous visible state.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * visible - Boolean that specifies the new visible state.\n */\nmxGraphModel.prototype.visibleStateForCellChanged = function(cell, visible)\n{\n\tvar previous = this.isVisible(cell);\n\tcell.setVisible(visible);\n\t\n\treturn previous;\n};\n\n/**\n * Function: execute\n * \n * Executes the given edit and fires events if required. The edit object\n * requires an execute function which is invoked. The edit is added to the\n * <currentEdit> between <beginUpdate> and <endUpdate> calls, so that\n * events will be fired if this execute is an individual transaction, that\n * is, if no previous <beginUpdate> calls have been made without calling\n * <endUpdate>. This implementation fires an <execute> event before\n * executing the given change.\n * \n * Parameters:\n * \n * change - Object that described the change.\n */\nmxGraphModel.prototype.execute = function(change)\n{\n\tchange.execute();\n\tthis.beginUpdate();\n\tthis.currentEdit.add(change);\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTE, 'change', change));\n\t// New global executed event\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\tthis.endUpdate();\n};\n\n/**\n * Function: beginUpdate\n * \n * Increments the <updateLevel> by one. The event notification\n * is queued until <updateLevel> reaches 0 by use of\n * <endUpdate>.\n *\n * All changes on <mxGraphModel> are transactional,\n * that is, they are executed in a single undoable change\n * on the model (without transaction isolation).\n * Therefore, if you want to combine any\n * number of changes into a single undoable change,\n * you should group any two or more API calls that\n * modify the graph model between <beginUpdate>\n * and <endUpdate> calls as shown here:\n * \n * (code)\n * var model = graph.getModel();\n * var parent = graph.getDefaultParent();\n * var index = model.getChildCount(parent);\n * model.beginUpdate();\n * try\n * {\n *   model.add(parent, v1, index);\n *   model.add(parent, v2, index+1);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * (end)\n * \n * Of course there is a shortcut for appending a\n * sequence of cells into the default parent:\n * \n * (code)\n * graph.addCells([v1, v2]).\n * (end)\n */\nmxGraphModel.prototype.beginUpdate = function()\n{\n\tthis.updateLevel++;\n\tthis.fireEvent(new mxEventObject(mxEvent.BEGIN_UPDATE));\n\t\n\tif (this.updateLevel == 1)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t}\n};\n\n/**\n * Function: endUpdate\n * \n * Decrements the <updateLevel> by one and fires an <undo>\n * event if the <updateLevel> reaches 0. This function\n * indirectly fires a <change> event by invoking the notify\n * function on the <currentEdit> und then creates a new\n * <currentEdit> using <createUndoableEdit>.\n *\n * The <undo> event is fired only once per edit, whereas\n * the <change> event is fired whenever the notify\n * function is invoked, that is, on undo and redo of\n * the edit.\n */\nmxGraphModel.prototype.endUpdate = function()\n{\n\tthis.updateLevel--;\n\t\n\tif (this.updateLevel == 0)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tif (!this.endingUpdate)\n\t{\n\t\tthis.endingUpdate = this.updateLevel == 0;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.END_UPDATE, 'edit', this.currentEdit));\n\n\t\ttry\n\t\t{\t\t\n\t\t\tif (this.endingUpdate && !this.currentEdit.isEmpty())\n\t\t\t{\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.BEFORE_UNDO, 'edit', this.currentEdit));\n\t\t\t\tvar tmp = this.currentEdit;\n\t\t\t\tthis.currentEdit = this.createUndoableEdit();\n\t\t\t\ttmp.notify();\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', tmp));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.endingUpdate = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: createUndoableEdit\n * \n * Creates a new <mxUndoableEdit> that implements the\n * notify function to fire a <change> and <notify> event\n * through the <mxUndoableEdit>'s source.\n * \n * Parameters:\n * \n * significant - Optional boolean that specifies if the edit to be created is\n * significant. Default is true.\n */\nmxGraphModel.prototype.createUndoableEdit = function(significant)\n{\n\tvar edit = new mxUndoableEdit(this, (significant != null) ? significant : true);\n\t\n\tedit.notify = function()\n\t{\n\t\t// LATER: Remove changes property (deprecated)\n\t\tedit.source.fireEvent(new mxEventObject(mxEvent.CHANGE,\n\t\t\t'edit', edit, 'changes', edit.changes));\n\t\tedit.source.fireEvent(new mxEventObject(mxEvent.NOTIFY,\n\t\t\t'edit', edit, 'changes', edit.changes));\n\t};\n\t\n\treturn edit;\n};\n\n/**\n * Function: mergeChildren\n * \n * Merges the children of the given cell into the given target cell inside\n * this model. All cells are cloned unless there is a corresponding cell in\n * the model with the same id, in which case the source cell is ignored and\n * all edges are connected to the corresponding cell in this model. Edges\n * are considered to have no identity and are always cloned unless the\n * cloneAllEdges flag is set to false, in which case edges with the same\n * id in the target model are reconnected to reflect the terminals of the\n * source edges.\n */\nmxGraphModel.prototype.mergeChildren = function(from, to, cloneAllEdges)\n{\n\tcloneAllEdges = (cloneAllEdges != null) ? cloneAllEdges : true;\n\t\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tvar mapping = new Object();\n\t\tthis.mergeChildrenImpl(from, to, cloneAllEdges, mapping);\n\t\t\n\t\t// Post-processes all edges in the mapping and\n\t\t// reconnects the terminals to the corresponding\n\t\t// cells in the target model\n\t\tfor (var key in mapping)\n\t\t{\n\t\t\tvar cell = mapping[key];\n\t\t\tvar terminal = this.getTerminal(cell, true);\n\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tterminal = mapping[mxCellPath.create(terminal)];\n\t\t\t\tthis.setTerminal(cell, terminal, true);\n\t\t\t}\n\t\t\t\n\t\t\tterminal = this.getTerminal(cell, false);\n\t\t\t\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tterminal = mapping[mxCellPath.create(terminal)];\n\t\t\t\tthis.setTerminal(cell, terminal, false);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: mergeChildren\n * \n * Clones the children of the source cell into the given target cell in\n * this model and adds an entry to the mapping that maps from the source\n * cell to the target cell with the same id or the clone of the source cell\n * that was inserted into this model.\n */\nmxGraphModel.prototype.mergeChildrenImpl = function(from, to, cloneAllEdges, mapping)\n{\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tvar childCount = from.getChildCount();\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar cell = from.getChildAt(i);\n\t\t\t\n\t\t\tif (typeof(cell.getId) == 'function')\n\t\t\t{\n\t\t\t\tvar id = cell.getId();\n\t\t\t\tvar target = (id != null && (!this.isEdge(cell) || !cloneAllEdges)) ?\n\t\t\t\t\t\tthis.getCell(id) : null;\n\t\t\t\t\n\t\t\t\t// Clones and adds the child if no cell exists for the id\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\tvar clone = cell.clone();\n\t\t\t\t\tclone.setId(id);\n\t\t\t\t\t\n\t\t\t\t\t// Sets the terminals from the original cell to the clone\n\t\t\t\t\t// because the lookup uses strings not cells in JS\n\t\t\t\t\tclone.setTerminal(cell.getTerminal(true), true);\n\t\t\t\t\tclone.setTerminal(cell.getTerminal(false), false);\n\t\t\t\t\t\n\t\t\t\t\t// Do *NOT* use model.add as this will move the edge away\n\t\t\t\t\t// from the parent in updateEdgeParent if maintainEdgeParent\n\t\t\t\t\t// is enabled in the target model\n\t\t\t\t\ttarget = to.insert(clone);\n\t\t\t\t\tthis.cellAdded(target);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Stores the mapping for later reconnecting edges\n\t\t\t\tmapping[mxCellPath.create(cell)] = target;\n\t\t\t\t\n\t\t\t\t// Recurses\n\t\t\t\tthis.mergeChildrenImpl(cell, target, cloneAllEdges, mapping);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: getParents\n * \n * Returns an array that represents the set (no duplicates) of all parents\n * for the given array of cells.\n * \n * Parameters:\n * \n * cells - Array of cells whose parents should be returned.\n */\nmxGraphModel.prototype.getParents = function(cells)\n{\n\tvar parents = [];\n\t\n\tif (cells != null)\n\t{\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar parent = this.getParent(cells[i]);\n\t\t\t\n\t\t\tif (parent != null && !dict.get(parent))\n\t\t\t{\n\t\t\t\tdict.put(parent, true);\n\t\t\t\tparents.push(parent);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn parents;\n};\n\n//\n// Cell Cloning\n//\n\n/**\n * Function: cloneCell\n * \n * Returns a deep clone of the given <mxCell> (including\n * the children) which is created using <cloneCells>.\n *\n * Parameters:\n * \n * cell - <mxCell> to be cloned.\n */\nmxGraphModel.prototype.cloneCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\treturn this.cloneCells([cell], true)[0];\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: cloneCells\n * \n * Returns an array of clones for the given array of <mxCells>.\n * Depending on the value of includeChildren, a deep clone is created for\n * each cell. Connections are restored based if the corresponding\n * cell is contained in the passed in array.\n *\n * Parameters:\n * \n * cells - Array of <mxCell> to be cloned.\n * includeChildren - Boolean indicating if the cells should be cloned\n * with all descendants.\n * mapping - Optional mapping for existing clones.\n */\nmxGraphModel.prototype.cloneCells = function(cells, includeChildren, mapping)\n{\n\tmapping = (mapping != null) ? mapping : new Object();\n\tvar clones = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (cells[i] != null)\n\t\t{\n\t\t\tclones.push(this.cloneCellImpl(cells[i], mapping, includeChildren));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tclones.push(null);\n\t\t}\n\t}\n\t\n\tfor (var i = 0; i < clones.length; i++)\n\t{\n\t\tif (clones[i] != null)\n\t\t{\n\t\t\tthis.restoreClone(clones[i], cells[i], mapping);\n\t\t}\n\t}\n\t\n\treturn clones;\n};\n\t\t\t\n/**\n * Function: cloneCellImpl\n * \n * Inner helper method for cloning cells recursively.\n */\nmxGraphModel.prototype.cloneCellImpl = function(cell, mapping, includeChildren)\n{\n\tvar ident = mxObjectIdentity.get(cell);\n\tvar clone = mapping[ident];\n\t\n\tif (clone == null)\n\t{\n\t\tclone = this.cellCloned(cell);\n\t\tmapping[ident] = clone;\n\n\t\tif (includeChildren)\n\t\t{\n\t\t\tvar childCount = this.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar cloneChild = this.cloneCellImpl(\n\t\t\t\t\tthis.getChildAt(cell, i), mapping, true);\n\t\t\t\tclone.insert(cloneChild);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn clone;\n};\n\n/**\n * Function: cellCloned\n * \n * Hook for cloning the cell. This returns cell.clone() or\n * any possible exceptions.\n */\nmxGraphModel.prototype.cellCloned = function(cell)\n{\n\treturn cell.clone();\n};\n\n/**\n * Function: restoreClone\n * \n * Inner helper method for restoring the connections in\n * a network of cloned cells.\n */\nmxGraphModel.prototype.restoreClone = function(clone, cell, mapping)\n{\n\tvar source = this.getTerminal(cell, true);\n\t\n\tif (source != null)\n\t{\n\t\tvar tmp = mapping[mxObjectIdentity.get(source)];\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\ttmp.insertEdge(clone, true);\n\t\t}\n\t}\n\t\n\tvar target = this.getTerminal(cell, false);\n\t\n\tif (target != null)\n\t{\n\t\tvar tmp = mapping[mxObjectIdentity.get(target)];\n\t\t\n\t\tif (tmp != null)\n\t\t{\t\n\t\t\ttmp.insertEdge(clone, false);\n\t\t}\n\t}\n\t\n\tvar childCount = this.getChildCount(clone);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.restoreClone(this.getChildAt(clone, i),\n\t\t\tthis.getChildAt(cell, i), mapping);\n\t}\n};\n\n//\n// Atomic changes\n//\n\n/**\n * Class: mxRootChange\n * \n * Action to change the root in a model.\n *\n * Constructor: mxRootChange\n * \n * Constructs a change of the root in the\n * specified model.\n */\nfunction mxRootChange(model, root)\n{\n\tthis.model = model;\n\tthis.root = root;\n\tthis.previous = root;\n};\n\n/**\n * Function: execute\n * \n * Carries out a change of the root using\n * <mxGraphModel.rootChanged>.\n */\nmxRootChange.prototype.execute = function()\n{\n\tthis.root = this.previous;\n\tthis.previous = this.model.rootChanged(this.previous);\n};\n\n/**\n * Class: mxChildChange\n * \n * Action to add or remove a child in a model.\n *\n * Constructor: mxChildChange\n * \n * Constructs a change of a child in the\n * specified model.\n */\nfunction mxChildChange(model, parent, child, index)\n{\n\tthis.model = model;\n\tthis.parent = parent;\n\tthis.previous = parent;\n\tthis.child = child;\n\tthis.index = index;\n\tthis.previousIndex = index;\n};\n\n/**\n * Function: execute\n * \n * Changes the parent of <child> using\n * <mxGraphModel.parentForCellChanged> and\n * removes or restores the cell's\n * connections.\n */\nmxChildChange.prototype.execute = function()\n{\n\tif (this.child != null)\n\t{\n\t\tvar tmp = this.model.getParent(this.child);\n\t\tvar tmp2 = (tmp != null) ? tmp.getIndex(this.child) : 0;\n\t\t\n\t\tif (this.previous == null)\n\t\t{\n\t\t\tthis.connect(this.child, false);\n\t\t}\n\t\t\n\t\ttmp = this.model.parentForCellChanged(\n\t\t\tthis.child, this.previous, this.previousIndex);\n\t\t\t\n\t\tif (this.previous != null)\n\t\t{\n\t\t\tthis.connect(this.child, true);\n\t\t}\n\t\t\n\t\tthis.parent = this.previous;\n\t\tthis.previous = tmp;\n\t\tthis.index = this.previousIndex;\n\t\tthis.previousIndex = tmp2;\n\t}\n};\n\n/**\n * Function: disconnect\n * \n * Disconnects the given cell recursively from its\n * terminals and stores the previous terminal in the\n * cell's terminals.\n */\nmxChildChange.prototype.connect = function(cell, isConnect)\n{\n\tisConnect = (isConnect != null) ? isConnect : true;\n\t\n\tvar source = cell.getTerminal(true);\n\tvar target = cell.getTerminal(false);\n\t\n\tif (source != null)\n\t{\n\t\tif (isConnect)\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, source, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, null, true);\n\t\t}\n\t}\n\t\n\tif (target != null)\n\t{\n\t\tif (isConnect)\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, target, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, null, false);\n\t\t}\n\t}\n\t\n\tcell.setTerminal(source, true);\n\tcell.setTerminal(target, false);\n\t\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i=0; i<childCount; i++)\n\t{\n\t\tthis.connect(this.model.getChildAt(cell, i), isConnect);\n\t}\n};\n\n/**\n * Class: mxTerminalChange\n * \n * Action to change a terminal in a model.\n *\n * Constructor: mxTerminalChange\n * \n * Constructs a change of a terminal in the \n * specified model.\n */\nfunction mxTerminalChange(model, cell, terminal, source)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.terminal = terminal;\n\tthis.previous = terminal;\n\tthis.source = source;\n};\n\n/**\n * Function: execute\n * \n * Changes the terminal of <cell> to <previous> using\n * <mxGraphModel.terminalForCellChanged>.\n */\nmxTerminalChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.terminal = this.previous;\n\t\tthis.previous = this.model.terminalForCellChanged(\n\t\t\tthis.cell, this.previous, this.source);\n\t}\n};\n\n/**\n * Class: mxValueChange\n * \n * Action to change a user object in a model.\n *\n * Constructor: mxValueChange\n * \n * Constructs a change of a user object in the \n * specified model.\n */\nfunction mxValueChange(model, cell, value)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.value = value;\n\tthis.previous = value;\n};\n\n/**\n * Function: execute\n * \n * Changes the value of <cell> to <previous> using\n * <mxGraphModel.valueForCellChanged>.\n */\nmxValueChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.value = this.previous;\n\t\tthis.previous = this.model.valueForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxStyleChange\n * \n * Action to change a cell's style in a model.\n *\n * Constructor: mxStyleChange\n * \n * Constructs a change of a style in the\n * specified model.\n */\nfunction mxStyleChange(model, cell, style)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.style = style;\n\tthis.previous = style;\n};\n\n/**\n * Function: execute\n * \n * Changes the style of <cell> to <previous> using\n * <mxGraphModel.styleForCellChanged>.\n */\nmxStyleChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.style = this.previous;\n\t\tthis.previous = this.model.styleForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxGeometryChange\n * \n * Action to change a cell's geometry in a model.\n *\n * Constructor: mxGeometryChange\n * \n * Constructs a change of a geometry in the\n * specified model.\n */\nfunction mxGeometryChange(model, cell, geometry)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.geometry = geometry;\n\tthis.previous = geometry;\n};\n\n/**\n * Function: execute\n * \n * Changes the geometry of <cell> ro <previous> using\n * <mxGraphModel.geometryForCellChanged>.\n */\nmxGeometryChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.geometry = this.previous;\n\t\tthis.previous = this.model.geometryForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxCollapseChange\n * \n * Action to change a cell's collapsed state in a model.\n *\n * Constructor: mxCollapseChange\n * \n * Constructs a change of a collapsed state in the\n * specified model.\n */\nfunction mxCollapseChange(model, cell, collapsed)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.collapsed = collapsed;\n\tthis.previous = collapsed;\n};\n\n/**\n * Function: execute\n * \n * Changes the collapsed state of <cell> to <previous> using\n * <mxGraphModel.collapsedStateForCellChanged>.\n */\nmxCollapseChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.collapsed = this.previous;\n\t\tthis.previous = this.model.collapsedStateForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxVisibleChange\n * \n * Action to change a cell's visible state in a model.\n *\n * Constructor: mxVisibleChange\n * \n * Constructs a change of a visible state in the\n * specified model.\n */\nfunction mxVisibleChange(model, cell, visible)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.visible = visible;\n\tthis.previous = visible;\n};\n\n/**\n * Function: execute\n * \n * Changes the visible state of <cell> to <previous> using\n * <mxGraphModel.visibleStateForCellChanged>.\n */\nmxVisibleChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.visible = this.previous;\n\t\tthis.previous = this.model.visibleStateForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxCellAttributeChange\n * \n * Action to change the attribute of a cell's user object.\n * There is no method on the graph model that uses this\n * action. To use the action, you can use the code shown\n * in the example below.\n * \n * Example:\n * \n * To change the attributeName in the cell's user object\n * to attributeValue, use the following code:\n * \n * (code)\n * model.beginUpdate();\n * try\n * {\n *   var edit = new mxCellAttributeChange(\n *     cell, attributeName, attributeValue);\n *   model.execute(edit);\n * }\n * finally\n * {\n *   model.endUpdate();\n * } \n * (end)\n *\n * Constructor: mxCellAttributeChange\n * \n * Constructs a change of a attribute of the DOM node\n * stored as the value of the given <mxCell>.\n */\nfunction mxCellAttributeChange(cell, attribute, value)\n{\n\tthis.cell = cell;\n\tthis.attribute = attribute;\n\tthis.value = value;\n\tthis.previous = value;\n};\n\n/**\n * Function: execute\n * \n * Changes the attribute of the cell's user object by\n * using <mxCell.setAttribute>.\n */\nmxCellAttributeChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tvar tmp = this.cell.getAttribute(this.attribute);\n\t\t\n\t\tif (this.previous == null)\n\t\t{\n\t\t\tthis.cell.value.removeAttribute(this.attribute);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.cell.setAttribute(this.attribute, this.previous);\n\t\t}\n\t\t\n\t\tthis.previous = tmp;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCell\n *\n * Cells are the elements of the graph model. They represent the state\n * of the groups, vertices and edges in a graph.\n * \n * Custom attributes:\n * \n * For custom attributes we recommend using an XML node as the value of a cell.\n * The following code can be used to create a cell with an XML node as the\n * value:\n * \n * (code)\n * var doc = mxUtils.createXmlDocument();\n * var node = doc.createElement('MyNode')\n * node.setAttribute('label', 'MyLabel');\n * node.setAttribute('attribute1', 'value1');\n * graph.insertVertex(graph.getDefaultParent(), null, node, 40, 40, 80, 30);\n * (end)\n * \n * For the label to work, <mxGraph.convertValueToString> and\n * <mxGraph.cellLabelChanged> should be overridden as follows:\n * \n * (code)\n * graph.convertValueToString = function(cell)\n * {\n *   if (mxUtils.isNode(cell.value))\n *   {\n *     return cell.getAttribute('label', '')\n *   }\n * };\n * \n * var cellLabelChanged = graph.cellLabelChanged;\n * graph.cellLabelChanged = function(cell, newValue, autoSize)\n * {\n *   if (mxUtils.isNode(cell.value))\n *   {\n *     // Clones the value for correct undo/redo\n *     var elt = cell.value.cloneNode(true);\n *     elt.setAttribute('label', newValue);\n *     newValue = elt;\n *   }\n *   \n *   cellLabelChanged.apply(this, arguments);\n * };\n * (end)\n * \n * Callback: onInit\n *\n * Called from within the constructor.\n * \n * Constructor: mxCell\n *\n * Constructs a new cell to be used in a graph model.\n * This method invokes <onInit> upon completion.\n * \n * Parameters:\n * \n * value - Optional object that represents the cell value.\n * geometry - Optional <mxGeometry> that specifies the geometry.\n * style - Optional formatted string that defines the style.\n */\nfunction mxCell(value, geometry, style)\n{\n\tthis.value = value;\n\tthis.setGeometry(geometry);\n\tthis.setStyle(style);\n\t\n\tif (this.onInit != null)\n\t{\n\t\tthis.onInit();\n\t}\n};\n\n/**\n * Variable: id\n *\n * Holds the Id. Default is null.\n */\nmxCell.prototype.id = null;\n\n/**\n * Variable: value\n *\n * Holds the user object. Default is null.\n */\nmxCell.prototype.value = null;\n\n/**\n * Variable: geometry\n *\n * Holds the <mxGeometry>. Default is null.\n */\nmxCell.prototype.geometry = null;\n\n/**\n * Variable: style\n *\n * Holds the style as a string of the form [(stylename|key=value);]. Default is\n * null.\n */\nmxCell.prototype.style = null;\n\n/**\n * Variable: vertex\n *\n * Specifies whether the cell is a vertex. Default is false.\n */\nmxCell.prototype.vertex = false;\n\n/**\n * Variable: edge\n *\n * Specifies whether the cell is an edge. Default is false.\n */\nmxCell.prototype.edge = false;\n\n/**\n * Variable: connectable\n *\n * Specifies whether the cell is connectable. Default is true.\n */\nmxCell.prototype.connectable = true;\n\n/**\n * Variable: visible\n *\n * Specifies whether the cell is visible. Default is true.\n */\nmxCell.prototype.visible = true;\n\n/**\n * Variable: collapsed\n *\n * Specifies whether the cell is collapsed. Default is false.\n */\nmxCell.prototype.collapsed = false;\n\n/**\n * Variable: parent\n *\n * Reference to the parent cell.\n */\nmxCell.prototype.parent = null;\n\n/**\n * Variable: source\n *\n * Reference to the source terminal.\n */\nmxCell.prototype.source = null;\n\n/**\n * Variable: target\n *\n * Reference to the target terminal.\n */\nmxCell.prototype.target = null;\n\n/**\n * Variable: children\n *\n * Holds the child cells.\n */\nmxCell.prototype.children = null;\n\n/**\n * Variable: edges\n *\n * Holds the edges.\n */\nmxCell.prototype.edges = null;\n\n/**\n * Variable: mxTransient\n *\n * List of members that should not be cloned inside <clone>. This field is\n * passed to <mxUtils.clone> and is not made persistent in <mxCellCodec>.\n * This is not a convention for all classes, it is only used in this class\n * to mark transient fields since transient modifiers are not supported by\n * the language.\n */\nmxCell.prototype.mxTransient = ['id', 'value', 'parent', 'source',\n                                'target', 'children', 'edges'];\n\n/**\n * Function: getId\n *\n * Returns the Id of the cell as a string.\n */\nmxCell.prototype.getId = function()\n{\n\treturn this.id;\n};\n\t\t\n/**\n * Function: setId\n *\n * Sets the Id of the cell to the given string.\n */\nmxCell.prototype.setId = function(id)\n{\n\tthis.id = id;\n};\n\n/**\n * Function: getValue\n *\n * Returns the user object of the cell. The user\n * object is stored in <value>.\n */\nmxCell.prototype.getValue = function()\n{\n\treturn this.value;\n};\n\t\t\n/**\n * Function: setValue\n *\n * Sets the user object of the cell. The user object\n * is stored in <value>.\n */\nmxCell.prototype.setValue = function(value)\n{\n\tthis.value = value;\n};\n\n/**\n * Function: valueChanged\n *\n * Changes the user object after an in-place edit\n * and returns the previous value. This implementation\n * replaces the user object with the given value and\n * returns the old user object.\n */\nmxCell.prototype.valueChanged = function(newValue)\n{\n\tvar previous = this.getValue();\n\tthis.setValue(newValue);\n\t\n\treturn previous;\n};\n\n/**\n * Function: getGeometry\n *\n * Returns the <mxGeometry> that describes the <geometry>.\n */\nmxCell.prototype.getGeometry = function()\n{\n\treturn this.geometry;\n};\n\n/**\n * Function: setGeometry\n *\n * Sets the <mxGeometry> to be used as the <geometry>.\n */\nmxCell.prototype.setGeometry = function(geometry)\n{\n\tthis.geometry = geometry;\n};\n\n/**\n * Function: getStyle\n *\n * Returns a string that describes the <style>.\n */\nmxCell.prototype.getStyle = function()\n{\n\treturn this.style;\n};\n\n/**\n * Function: setStyle\n *\n * Sets the string to be used as the <style>.\n */\nmxCell.prototype.setStyle = function(style)\n{\n\tthis.style = style;\n};\n\n/**\n * Function: isVertex\n *\n * Returns true if the cell is a vertex.\n */\nmxCell.prototype.isVertex = function()\n{\n\treturn this.vertex != 0;\n};\n\n/**\n * Function: setVertex\n *\n * Specifies if the cell is a vertex. This should only be assigned at\n * construction of the cell and not be changed during its lifecycle.\n * \n * Parameters:\n * \n * vertex - Boolean that specifies if the cell is a vertex.\n */\nmxCell.prototype.setVertex = function(vertex)\n{\n\tthis.vertex = vertex;\n};\n\n/**\n * Function: isEdge\n *\n * Returns true if the cell is an edge.\n */\nmxCell.prototype.isEdge = function()\n{\n\treturn this.edge != 0;\n};\n\t\n/**\n * Function: setEdge\n * \n * Specifies if the cell is an edge. This should only be assigned at\n * construction of the cell and not be changed during its lifecycle.\n * \n * Parameters:\n * \n * edge - Boolean that specifies if the cell is an edge.\n */\nmxCell.prototype.setEdge = function(edge)\n{\n\tthis.edge = edge;\n};\n\n/**\n * Function: isConnectable\n *\n * Returns true if the cell is connectable.\n */\nmxCell.prototype.isConnectable = function()\n{\n\treturn this.connectable != 0;\n};\n\n/**\n * Function: setConnectable\n *\n * Sets the connectable state.\n * \n * Parameters:\n * \n * connectable - Boolean that specifies the new connectable state.\n */\nmxCell.prototype.setConnectable = function(connectable)\n{\n\tthis.connectable = connectable;\n};\n\n/**\n * Function: isVisible\n *\n * Returns true if the cell is visibile.\n */\nmxCell.prototype.isVisible = function()\n{\n\treturn this.visible != 0;\n};\n\n/**\n * Function: setVisible\n *\n * Specifies if the cell is visible.\n * \n * Parameters:\n * \n * visible - Boolean that specifies the new visible state.\n */\nmxCell.prototype.setVisible = function(visible)\n{\n\tthis.visible = visible;\n};\n\n/**\n * Function: isCollapsed\n *\n * Returns true if the cell is collapsed.\n */\nmxCell.prototype.isCollapsed = function()\n{\n\treturn this.collapsed != 0;\n};\n\n/**\n * Function: setCollapsed\n *\n * Sets the collapsed state.\n * \n * Parameters:\n * \n * collapsed - Boolean that specifies the new collapsed state.\n */\nmxCell.prototype.setCollapsed = function(collapsed)\n{\n\tthis.collapsed = collapsed;\n};\n\n/**\n * Function: getParent\n *\n * Returns the cell's parent.\n */\nmxCell.prototype.getParent = function()\n{\n\treturn this.parent;\n};\n\n/**\n * Function: setParent\n *\n * Sets the parent cell.\n * \n * Parameters:\n * \n * parent - <mxCell> that represents the new parent.\n */\nmxCell.prototype.setParent = function(parent)\n{\n\tthis.parent = parent;\n};\n\n/**\n * Function: getTerminal\n *\n * Returns the source or target terminal.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source terminal should be\n * returned.\n */\nmxCell.prototype.getTerminal = function(source)\n{\n\treturn (source) ? this.source : this.target;\n};\n\n/**\n * Function: setTerminal\n *\n * Sets the source or target terminal and returns the new terminal.\n * \n * Parameters:\n * \n * terminal - <mxCell> that represents the new source or target terminal.\n * isSource - Boolean that specifies if the source or target terminal\n * should be set.\n */\nmxCell.prototype.setTerminal = function(terminal, isSource)\n{\n\tif (isSource)\n\t{\n\t\tthis.source = terminal;\n\t}\n\telse\n\t{\n\t\tthis.target = terminal;\n\t}\n\t\n\treturn terminal;\n};\n\n/**\n * Function: getChildCount\n *\n * Returns the number of child cells.\n */\nmxCell.prototype.getChildCount = function()\n{\n\treturn (this.children == null) ? 0 : this.children.length;\n};\n\n/**\n * Function: getIndex\n *\n * Returns the index of the specified child in the child array.\n * \n * Parameters:\n * \n * child - Child whose index should be returned.\n */\nmxCell.prototype.getIndex = function(child)\n{\n\treturn mxUtils.indexOf(this.children, child);\n};\n\n/**\n * Function: getChildAt\n *\n * Returns the child at the specified index.\n * \n * Parameters:\n * \n * index - Integer that specifies the child to be returned.\n */\nmxCell.prototype.getChildAt = function(index)\n{\n\treturn (this.children == null) ? null : this.children[index];\n};\n\n/**\n * Function: insert\n *\n * Inserts the specified child into the child array at the specified index\n * and updates the parent reference of the child. If not childIndex is\n * specified then the child is appended to the child array. Returns the\n * inserted child.\n * \n * Parameters:\n * \n * child - <mxCell> to be inserted or appended to the child array.\n * index - Optional integer that specifies the index at which the child\n * should be inserted into the child array.\n */\nmxCell.prototype.insert = function(child, index)\n{\n\tif (child != null)\n\t{\n\t\tif (index == null)\n\t\t{\n\t\t\tindex = this.getChildCount();\n\t\t\t\n\t\t\tif (child.getParent() == this)\n\t\t\t{\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\tchild.removeFromParent();\n\t\tchild.setParent(this);\n\t\t\n\t\tif (this.children == null)\n\t\t{\n\t\t\tthis.children = [];\n\t\t\tthis.children.push(child);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.children.splice(index, 0, child);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: remove\n *\n * Removes the child at the specified index from the child array and\n * returns the child that was removed. Will remove the parent reference of\n * the child.\n * \n * Parameters:\n * \n * index - Integer that specifies the index of the child to be\n * removed.\n */\nmxCell.prototype.remove = function(index)\n{\n\tvar child = null;\n\t\n\tif (this.children != null && index >= 0)\n\t{\n\t\tchild = this.getChildAt(index);\n\t\t\n\t\tif (child != null)\n\t\t{\n\t\t\tthis.children.splice(index, 1);\n\t\t\tchild.setParent(null);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: removeFromParent\n *\n * Removes the cell from its parent.\n */\nmxCell.prototype.removeFromParent = function()\n{\n\tif (this.parent != null)\n\t{\n\t\tvar index = this.parent.getIndex(this);\n\t\tthis.parent.remove(index);\n\t}\n};\n\n/**\n * Function: getEdgeCount\n *\n * Returns the number of edges in the edge array.\n */\nmxCell.prototype.getEdgeCount = function()\n{\n\treturn (this.edges == null) ? 0 : this.edges.length;\n};\n\n/**\n * Function: getEdgeIndex\n *\n * Returns the index of the specified edge in <edges>.\n * \n * Parameters:\n * \n * edge - <mxCell> whose index in <edges> should be returned.\n */\nmxCell.prototype.getEdgeIndex = function(edge)\n{\n\treturn mxUtils.indexOf(this.edges, edge);\n};\n\n/**\n * Function: getEdgeAt\n *\n * Returns the edge at the specified index in <edges>.\n * \n * Parameters:\n * \n * index - Integer that specifies the index of the edge to be returned.\n */\nmxCell.prototype.getEdgeAt = function(index)\n{\n\treturn (this.edges == null) ? null : this.edges[index];\n};\n\n/**\n * Function: insertEdge\n *\n * Inserts the specified edge into the edge array and returns the edge.\n * Will update the respective terminal reference of the edge.\n * \n * Parameters:\n * \n * edge - <mxCell> to be inserted into the edge array.\n * isOutgoing - Boolean that specifies if the edge is outgoing.\n */\nmxCell.prototype.insertEdge = function(edge, isOutgoing)\n{\n\tif (edge != null)\n\t{\n\t\tedge.removeFromTerminal(isOutgoing);\n\t\tedge.setTerminal(this, isOutgoing);\n\t\t\n\t\tif (this.edges == null ||\n\t\t\tedge.getTerminal(!isOutgoing) != this ||\n\t\t\tmxUtils.indexOf(this.edges, edge) < 0)\n\t\t{\n\t\t\tif (this.edges == null)\n\t\t\t{\n\t\t\t\tthis.edges = [];\n\t\t\t}\n\t\t\t\n\t\t\tthis.edges.push(edge);\n\t\t}\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: removeEdge\n *\n * Removes the specified edge from the edge array and returns the edge.\n * Will remove the respective terminal reference from the edge.\n * \n * Parameters:\n * \n * edge - <mxCell> to be removed from the edge array.\n * isOutgoing - Boolean that specifies if the edge is outgoing.\n */\nmxCell.prototype.removeEdge = function(edge, isOutgoing)\n{\n\tif (edge != null)\n\t{\n\t\tif (edge.getTerminal(!isOutgoing) != this &&\n\t\t\tthis.edges != null)\n\t\t{\n\t\t\tvar index = this.getEdgeIndex(edge);\n\t\t\t\n\t\t\tif (index >= 0)\n\t\t\t{\n\t\t\t\tthis.edges.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\tedge.setTerminal(null, isOutgoing);\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: removeFromTerminal\n *\n * Removes the edge from its source or target terminal.\n * \n * Parameters:\n * \n * isSource - Boolean that specifies if the edge should be removed from its\n * source or target terminal.\n */\nmxCell.prototype.removeFromTerminal = function(isSource)\n{\n\tvar terminal = this.getTerminal(isSource);\n\t\n\tif (terminal != null)\n\t{\n\t\tterminal.removeEdge(this, isSource);\n\t}\n};\n\n/**\n * Function: hasAttribute\n * \n * Returns true if the user object is an XML node that contains the given\n * attribute.\n * \n * Parameters:\n * \n * name - Name of the attribute.\n */\nmxCell.prototype.hasAttribute = function(name)\n{\n\tvar userObject = this.getValue();\n\t\n\treturn (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT && userObject.hasAttribute) ?\n\t\tuserObject.hasAttribute(name) : userObject.getAttribute(name) != null;\n};\n\n/**\n * Function: getAttribute\n *\n * Returns the specified attribute from the user object if it is an XML\n * node.\n * \n * Parameters:\n * \n * name - Name of the attribute whose value should be returned.\n * defaultValue - Optional default value to use if the attribute has no\n * value.\n */\nmxCell.prototype.getAttribute = function(name, defaultValue)\n{\n\tvar userObject = this.getValue();\n\t\n\tvar val = (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT) ?\n\t\tuserObject.getAttribute(name) : null;\n\t\t\n\treturn val || defaultValue;\n};\n\n/**\n * Function: setAttribute\n *\n * Sets the specified attribute on the user object if it is an XML node.\n * \n * Parameters:\n * \n * name - Name of the attribute whose value should be set.\n * value - New value of the attribute.\n */\nmxCell.prototype.setAttribute = function(name, value)\n{\n\tvar userObject = this.getValue();\n\t\n\tif (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tuserObject.setAttribute(name, value);\n\t}\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of the cell. Uses <cloneValue> to clone\n * the user object. All fields in <mxTransient> are ignored\n * during the cloning.\n */\nmxCell.prototype.clone = function()\n{\n\tvar clone = mxUtils.clone(this, this.mxTransient);\n\tclone.setValue(this.cloneValue());\n\t\n\treturn clone;\n};\n\n/**\n * Function: cloneValue\n *\n * Returns a clone of the cell's user object.\n */\nmxCell.prototype.cloneValue = function()\n{\n\tvar value = this.getValue();\n\t\n\tif (value != null)\n\t{\n\t\tif (typeof(value.clone) == 'function')\n\t\t{\n\t\t\tvalue = value.clone();\n\t\t}\n\t\telse if (!isNaN(value.nodeType))\n\t\t{\n\t\t\tvalue = value.cloneNode(true);\n\t\t}\n\t}\n\t\n\treturn value;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGeometry\n * \n * Extends <mxRectangle> to represent the geometry of a cell.\n * \n * For vertices, the geometry consists of the x- and y-location, and the width\n * and height. For edges, the geometry consists of the optional terminal- and\n * control points. The terminal points are only required if an edge is\n * unconnected, and are stored in the sourcePoint> and <targetPoint>\n * variables, respectively.\n * \n * Example:\n * \n * If an edge is unconnected, that is, it has no source or target terminal,\n * then a geometry with terminal points for a new edge can be defined as\n * follows.\n * \n * (code)\n * geometry.setTerminalPoint(new mxPoint(x1, y1), true);\n * geometry.points = [new mxPoint(x2, y2)];\n * geometry.setTerminalPoint(new mxPoint(x3, y3), false);\n * (end)\n * \n * Control points are used regardless of the connected state of an edge and may\n * be ignored or interpreted differently depending on the edge's <mxEdgeStyle>.\n * \n * To disable automatic reset of control points after a cell has been moved or\n * resized, the the <mxGraph.resizeEdgesOnMove> and\n * <mxGraph.resetEdgesOnResize> may be used.\n *\n * Edge Labels:\n * \n * Using the x- and y-coordinates of a cell's geometry, it is possible to\n * position the label on edges on a specific location on the actual edge shape\n * as it appears on the screen. The x-coordinate of an edge's geometry is used\n * to describe the distance from the center of the edge from -1 to 1 with 0\n * being the center of the edge and the default value. The y-coordinate of an\n * edge's geometry is used to describe the absolute, orthogonal distance in\n * pixels from that point. In addition, the <mxGeometry.offset> is used as an\n * absolute offset vector from the resulting point.\n * \n * This coordinate system is applied if <relative> is true, otherwise the\n * offset defines the absolute vector from the edge's center point to the\n * label and the values for <x> and <y> are ignored.\n * \n * The width and height parameter for edge geometries can be used to set the\n * label width and height (eg. for word wrapping).\n * \n * Ports:\n * \n * The term \"port\" refers to a relatively positioned, connectable child cell,\n * which is used to specify the connection between the parent and another cell\n * in the graph. Ports are typically modeled as vertices with relative\n * geometries.\n * \n * Offsets:\n * \n * The <offset> field is interpreted in 3 different ways, depending on the cell\n * and the geometry. For edges, the offset defines the absolute offset for the\n * edge label. For relative geometries, the offset defines the absolute offset\n * for the origin (top, left corner) of the vertex, otherwise the offset\n * defines the absolute offset for the label inside the vertex or group.\n * \n * Constructor: mxGeometry\n *\n * Constructs a new object to describe the size and location of a vertex or\n * the control points of an edge.\n */\nfunction mxGeometry(x, y, width, height)\n{\n\tmxRectangle.call(this, x, y, width, height);\n};\n\n/**\n * Extends mxRectangle.\n */\nmxGeometry.prototype = new mxRectangle();\nmxGeometry.prototype.constructor = mxGeometry;\n\n/**\n * Variable: TRANSLATE_CONTROL_POINTS\n * \n * Global switch to translate the points in translate. Default is true.\n */\nmxGeometry.prototype.TRANSLATE_CONTROL_POINTS = true;\n\n/**\n * Variable: alternateBounds\n *\n * Stores alternate values for x, y, width and height in a rectangle. See\n * <swap> to exchange the values. Default is null.\n */\nmxGeometry.prototype.alternateBounds = null;\n\n/**\n * Variable: sourcePoint\n *\n * Defines the source <mxPoint> of the edge. This is used if the\n * corresponding edge does not have a source vertex. Otherwise it is\n * ignored. Default is  null.\n */\nmxGeometry.prototype.sourcePoint = null;\n\n/**\n * Variable: targetPoint\n *\n * Defines the target <mxPoint> of the edge. This is used if the\n * corresponding edge does not have a target vertex. Otherwise it is\n * ignored. Default is null.\n */\nmxGeometry.prototype.targetPoint = null;\n\n/**\n * Variable: points\n *\n * Array of <mxPoints> which specifies the control points along the edge.\n * These points are the intermediate points on the edge, for the endpoints\n * use <targetPoint> and <sourcePoint> or set the terminals of the edge to\n * a non-null value. Default is null.\n */\nmxGeometry.prototype.points = null;\n\n/**\n * Variable: offset\n *\n * For edges, this holds the offset (in pixels) from the position defined\n * by <x> and <y> on the edge. For relative geometries (for vertices), this\n * defines the absolute offset from the point defined by the relative\n * coordinates. For absolute geometries (for vertices), this defines the\n * offset for the label. Default is null.\n */\nmxGeometry.prototype.offset = null;\n\n/**\n * Variable: relative\n *\n * Specifies if the coordinates in the geometry are to be interpreted as\n * relative coordinates. For edges, this is used to define the location of\n * the edge label relative to the edge as rendered on the display. For\n * vertices, this specifies the relative location inside the bounds of the\n * parent cell.\n * \n * If this is false, then the coordinates are relative to the origin of the\n * parent cell or, for edges, the edge label position is relative to the\n * center of the edge as rendered on screen.\n * \n * Default is false.\n */\nmxGeometry.prototype.relative = false;\n\n/**\n * Function: swap\n * \n * Swaps the x, y, width and height with the values stored in\n * <alternateBounds> and puts the previous values into <alternateBounds> as\n * a rectangle. This operation is carried-out in-place, that is, using the\n * existing geometry instance. If this operation is called during a graph\n * model transactional change, then the geometry should be cloned before\n * calling this method and setting the geometry of the cell using\n * <mxGraphModel.setGeometry>.\n */\nmxGeometry.prototype.swap = function()\n{\n\tif (this.alternateBounds != null)\n\t{\n\t\tvar old = new mxRectangle(\n\t\t\tthis.x, this.y, this.width, this.height);\n\n\t\tthis.x = this.alternateBounds.x;\n\t\tthis.y = this.alternateBounds.y;\n\t\tthis.width = this.alternateBounds.width;\n\t\tthis.height = this.alternateBounds.height;\n\n\t\tthis.alternateBounds = old;\n\t}\n};\n\n/**\n * Function: getTerminalPoint\n * \n * Returns the <mxPoint> representing the source or target point of this\n * edge. This is only used if the edge has no source or target vertex.\n * \n * Parameters:\n * \n * isSource - Boolean that specifies if the source or target point\n * should be returned.\n */\nmxGeometry.prototype.getTerminalPoint = function(isSource)\n{\n\treturn (isSource) ? this.sourcePoint : this.targetPoint;\n};\n\n/**\n * Function: setTerminalPoint\n * \n * Sets the <sourcePoint> or <targetPoint> to the given <mxPoint> and\n * returns the new point.\n * \n * Parameters:\n * \n * point - Point to be used as the new source or target point.\n * isSource - Boolean that specifies if the source or target point\n * should be set.\n */\nmxGeometry.prototype.setTerminalPoint = function(point, isSource)\n{\n\tif (isSource)\n\t{\n\t\tthis.sourcePoint = point;\n\t}\n\telse\n\t{\n\t\tthis.targetPoint = point;\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: rotate\n * \n * Rotates the geometry by the given angle around the given center. That is,\n * <x> and <y> of the geometry, the <sourcePoint>, <targetPoint> and all\n * <points> are translated by the given amount. <x> and <y> are only\n * translated if <relative> is false.\n * \n * Parameters:\n * \n * angle - Number that specifies the rotation angle in degrees.\n * cx - <mxPoint> that specifies the center of the rotation.\n */\nmxGeometry.prototype.rotate = function(angle, cx)\n{\n\tvar rad = mxUtils.toRadians(angle);\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(rad);\n\t\n\t// Rotates the geometry\n\tif (!this.relative)\n\t{\n\t\tvar ct = new mxPoint(this.getCenterX(), this.getCenterY());\n\t\tvar pt = mxUtils.getRotatedPoint(ct, cos, sin, cx);\n\t\t\n\t\tthis.x = Math.round(pt.x - this.width / 2);\n\t\tthis.y = Math.round(pt.y - this.height / 2);\n\t}\n\n\t// Rotates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tvar pt = mxUtils.getRotatedPoint(this.sourcePoint, cos, sin, cx);\n\t\tthis.sourcePoint.x = Math.round(pt.x);\n\t\tthis.sourcePoint.y = Math.round(pt.y);\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tvar pt = mxUtils.getRotatedPoint(this.targetPoint, cos, sin, cx);\n\t\tthis.targetPoint.x = Math.round(pt.x);\n\t\tthis.targetPoint.y = Math.round(pt.y);\t\n\t}\n\t\n\t// Translate the control points\n\tif (this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(this.points[i], cos, sin, cx);\n\t\t\t\tthis.points[i].x = Math.round(pt.x);\n\t\t\t\tthis.points[i].y = Math.round(pt.y);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: translate\n * \n * Translates the geometry by the specified amount. That is, <x> and <y> of the\n * geometry, the <sourcePoint>, <targetPoint> and all <points> are translated\n * by the given amount. <x> and <y> are only translated if <relative> is false.\n * If <TRANSLATE_CONTROL_POINTS> is false, then <points> are not modified by\n * this function.\n * \n * Parameters:\n * \n * dx - Number that specifies the x-coordinate of the translation.\n * dy - Number that specifies the y-coordinate of the translation.\n */\nmxGeometry.prototype.translate = function(dx, dy)\n{\n\tdx = parseFloat(dx);\n\tdy = parseFloat(dy);\n\t\n\t// Translates the geometry\n\tif (!this.relative)\n\t{\n\t\tthis.x = parseFloat(this.x) + dx;\n\t\tthis.y = parseFloat(this.y) + dy;\n\t}\n\n\t// Translates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tthis.sourcePoint.x = parseFloat(this.sourcePoint.x) + dx;\n\t\tthis.sourcePoint.y = parseFloat(this.sourcePoint.y) + dy;\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tthis.targetPoint.x = parseFloat(this.targetPoint.x) + dx;\n\t\tthis.targetPoint.y = parseFloat(this.targetPoint.y) + dy;\t\t\n\t}\n\n\t// Translate the control points\n\tif (this.TRANSLATE_CONTROL_POINTS && this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tthis.points[i].x = parseFloat(this.points[i].x) + dx;\n\t\t\t\tthis.points[i].y = parseFloat(this.points[i].y) + dy;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: scale\n * \n * Scales the geometry by the given amount. That is, <x> and <y> of the\n * geometry, the <sourcePoint>, <targetPoint> and all <points> are scaled\n * by the given amount. <x>, <y>, <width> and <height> are only scaled if\n * <relative> is false. If <fixedAspect> is true, then the smaller value\n * is used to scale the width and the height.\n * \n * Parameters:\n * \n * sx - Number that specifies the horizontal scale factor.\n * sy - Number that specifies the vertical scale factor.\n * fixedAspect - Optional boolean to keep the aspect ratio fixed.\n */\nmxGeometry.prototype.scale = function(sx, sy, fixedAspect)\n{\n\tsx = parseFloat(sx);\n\tsy = parseFloat(sy);\n\n\t// Translates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tthis.sourcePoint.x = parseFloat(this.sourcePoint.x) * sx;\n\t\tthis.sourcePoint.y = parseFloat(this.sourcePoint.y) * sy;\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tthis.targetPoint.x = parseFloat(this.targetPoint.x) * sx;\n\t\tthis.targetPoint.y = parseFloat(this.targetPoint.y) * sy;\t\t\n\t}\n\n\t// Translate the control points\n\tif (this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tthis.points[i].x = parseFloat(this.points[i].x) * sx;\n\t\t\t\tthis.points[i].y = parseFloat(this.points[i].y) * sy;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Translates the geometry\n\tif (!this.relative)\n\t{\n\t\tthis.x = parseFloat(this.x) * sx;\n\t\tthis.y = parseFloat(this.y) * sy;\n\n\t\tif (fixedAspect)\n\t\t{\n\t\t\tsy = sx = Math.min(sx, sy);\n\t\t}\n\t\t\n\t\tthis.width = parseFloat(this.width) * sx;\n\t\tthis.height = parseFloat(this.height) * sy;\n\t}\n};\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this geometry.\n */\nmxGeometry.prototype.equals = function(obj)\n{\n\treturn mxRectangle.prototype.equals.apply(this, arguments) &&\n\t\tthis.relative == obj.relative &&\n\t\t((this.sourcePoint == null && obj.sourcePoint == null) || (this.sourcePoint != null && this.sourcePoint.equals(obj.sourcePoint))) &&\n\t\t((this.targetPoint == null && obj.targetPoint == null) || (this.targetPoint != null && this.targetPoint.equals(obj.targetPoint))) &&\n\t\t((this.points == null && obj.points == null) || (this.points != null && mxUtils.equalPoints(this.points, obj.points))) &&\n\t\t((this.alternateBounds == null && obj.alternateBounds == null) || (this.alternateBounds != null && this.alternateBounds.equals(obj.alternateBounds))) &&\n\t\t((this.offset == null && obj.offset == null) || (this.offset != null && this.offset.equals(obj.offset)));\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxCellPath =\n{\n\n\t/**\n\t * Class: mxCellPath\n\t * \n\t * Implements a mechanism for temporary cell Ids.\n\t * \n\t * Variable: PATH_SEPARATOR\n\t * \n\t * Defines the separator between the path components. Default is \".\".\n\t */\n\tPATH_SEPARATOR: '.',\n\t\n\t/**\n\t * Function: create\n\t * \n\t * Creates the cell path for the given cell. The cell path is a\n\t * concatenation of the indices of all ancestors on the (finite) path to\n\t * the root, eg. \"0.0.0.1\".\n\t * \n\t * Parameters:\n\t * \n\t * cell - Cell whose path should be returned.\n\t */\n\tcreate: function(cell)\n\t{\n\t\tvar result = '';\n\t\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tvar parent = cell.getParent();\n\t\t\t\n\t\t\twhile (parent != null)\n\t\t\t{\n\t\t\t\tvar index = parent.getIndex(cell);\n\t\t\t\tresult = index + mxCellPath.PATH_SEPARATOR + result;\n\t\t\t\t\n\t\t\t\tcell = parent;\n\t\t\t\tparent = cell.getParent();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes trailing separator\n\t\tvar n = result.length;\n\t\t\n\t\tif (n > 1)\n\t\t{\n\t\t\tresult = result.substring(0, n - 1);\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: getParentPath\n\t * \n\t * Returns the path for the parent of the cell represented by the given\n\t * path. Returns null if the given path has no parent.\n\t * \n\t * Parameters:\n\t * \n\t * path - Path whose parent path should be returned.\n\t */\n\tgetParentPath: function(path)\n\t{\n\t\tif (path != null)\n\t\t{\n\t\t\tvar index = path.lastIndexOf(mxCellPath.PATH_SEPARATOR);\n\n\t\t\tif (index >= 0)\n\t\t\t{\n\t\t\t\treturn path.substring(0, index);\n\t\t\t}\n\t\t\telse if (path.length > 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: resolve\n\t * \n\t * Returns the cell for the specified cell path using the given root as the\n\t * root of the path.\n\t * \n\t * Parameters:\n\t * \n\t * root - Root cell of the path to be resolved.\n\t * path - String that defines the path.\n\t */\n\tresolve: function(root, path)\n\t{\n\t\tvar parent = root;\n\t\t\n\t\tif (path != null)\n\t\t{\n\t\t\tvar tokens = path.split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\n\t\t\tfor (var i=0; i<tokens.length; i++)\n\t\t\t{\n\t\t\t\tparent = parent.getChildAt(parseInt(tokens[i]));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn parent;\n\t},\n\t\n\t/**\n\t * Function: compare\n\t * \n\t * Compares the given cell paths and returns -1 if p1 is smaller, 0 if\n\t * p1 is equal and 1 if p1 is greater than p2.\n\t */\n\tcompare: function(p1, p2)\n\t{\n\t\tvar min = Math.min(p1.length, p2.length);\n\t\tvar comp = 0;\n\t\t\n\t\tfor (var i = 0; i < min; i++)\n\t\t{\n\t\t\tif (p1[i] != p2[i])\n\t\t\t{\n\t\t\t\tif (p1[i].length == 0 ||\n\t\t\t\t\tp2[i].length == 0)\n\t\t\t\t{\n\t\t\t\t\tcomp = (p1[i] == p2[i]) ? 0 : ((p1[i] > p2[i]) ? 1 : -1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar t1 = parseInt(p1[i]);\n\t\t\t\t\tvar t2 = parseInt(p2[i]);\n\t\t\t\t\t\n\t\t\t\t\tcomp = (t1 == t2) ? 0 : ((t1 > t2) ? 1 : -1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Compares path length if both paths are equal to this point\n\t\tif (comp == 0)\n\t\t{\n\t\t\tvar t1 = p1.length;\n\t\t\tvar t2 = p2.length;\n\t\t\t\n\t\t\tif (t1 != t2)\n\t\t\t{\n\t\t\t\tcomp = (t1 > t2) ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn comp;\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxPerimeter =\n{\n\t/**\n\t * Class: mxPerimeter\n\t * \n\t * Provides various perimeter functions to be used in a style\n\t * as the value of <mxConstants.STYLE_PERIMETER>. Perimeters for\n\t * rectangle, circle, rhombus and triangle are available.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * <add as=\"perimeter\">mxPerimeter.RectanglePerimeter</add>\n\t * (end)\n\t * \n\t * Or programmatically:\n\t * \n\t * (code)\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n\t * (end)\n\t * \n\t * When adding new perimeter functions, it is recommended to use the \n\t * mxPerimeter-namespace as follows:\n\t * \n\t * (code)\n\t * mxPerimeter.CustomPerimeter = function (bounds, vertex, next, orthogonal)\n\t * {\n\t *   var x = 0; // Calculate x-coordinate\n\t *   var y = 0; // Calculate y-coordainte\n\t *   \n\t *   return new mxPoint(x, y);\n\t * }\n\t * (end)\n\t * \n\t * The new perimeter should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('customPerimeter', mxPerimeter.CustomPerimeter);\n\t * (end)\n\t * \n\t * The custom perimeter above can now be used in a specific vertex as follows:\n\t * \n\t * (code)\n\t * model.setStyle(vertex, 'perimeter=customPerimeter');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxPerimeter.CustomPerimeter for the value in\n\t * the cell style above.\n\t * \n\t * Or it can be used for all vertices in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultVertexStyle();\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.CustomPerimeter;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * The parameters are explained in <RectanglePerimeter>.\n\t * \n\t * Function: RectanglePerimeter\n\t * \n\t * Describes a rectangular perimeter for the given bounds.\n\t *\n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the absolute bounds of the\n\t * vertex.\n\t * vertex - <mxCellState> that represents the vertex.\n\t * next - <mxPoint> that represents the nearest neighbour point on the\n\t * given edge.\n\t * orthogonal - Boolean that specifies if the orthogonal projection onto\n\t * the perimeter should be returned. If this is false then the intersection\n\t * of the perimeter and the line between the next and the center point is\n\t * returned.\n\t */\n\tRectanglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\t\tvar alpha = Math.atan2(dy, dx);\n\t\tvar p = new mxPoint(0, 0);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI/2;\n\t\tvar beta = pi2 - alpha;\n\t\tvar t = Math.atan2(bounds.height, bounds.width);\n\t\t\n\t\tif (alpha < -pi + t || alpha > pi - t)\n\t\t{\n\t\t\t// Left edge\n\t\t\tp.x = bounds.x;\n\t\t\tp.y = cy - bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse if (alpha < -t)\n\t\t{\n\t\t\t// Top Edge\n\t\t\tp.y = bounds.y;\n\t\t\tp.x = cx - bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\telse if (alpha < t)\n\t\t{\n\t\t\t// Right Edge\n\t\t\tp.x = bounds.x + bounds.width;\n\t\t\tp.y = cy + bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Bottom Edge\n\t\t\tp.y = bounds.y + bounds.height;\n\t\t\tp.x = cx + bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (next.x >= bounds.x &&\n\t\t\t\tnext.x <= bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = next.x;\n\t\t\t}\n\t\t\telse if (next.y >= bounds.y &&\n\t\t\t\t\t   next.y <= bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = next.y;\n\t\t\t}\n\t\t\tif (next.x < bounds.x)\n\t\t\t{\n\t\t\t\tp.x = bounds.x;\n\t\t\t}\n\t\t\telse if (next.x > bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = bounds.x + bounds.width;\n\t\t\t}\n\t\t\tif (next.y < bounds.y)\n\t\t\t{\n\t\t\t\tp.y = bounds.y;\n\t\t\t}\n\t\t\telse if (next.y > bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = bounds.y + bounds.height;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: EllipsePerimeter\n\t * \n\t * Describes an elliptic perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tEllipsePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar a = bounds.width / 2;\n\t\tvar b = bounds.height / 2;\n\t\tvar cx = x + a;\n\t\tvar cy = y + b;\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\t\n\t\t// Calculates straight line equation through\n\t\t// point and ellipse center y = d * x + h\n\t\tvar dx = parseInt(px - cx);\n\t\tvar dy = parseInt(py - cy);\n\t\t\n\t\tif (dx == 0 && dy != 0)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy + b * dy / Math.abs(dy));\n\t\t}\n\t\telse if (dx == 0 && dy == 0)\n\t\t{\n\t\t\treturn new mxPoint(px, py);\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (py >= y && py <= y + bounds.height)\n\t\t\t{\n\t\t\t\tvar ty = py - cy;\n\t\t\t\tvar tx = Math.sqrt(a*a*(1-(ty*ty)/(b*b))) || 0;\n\t\t\t\t\n\t\t\t\tif (px <= x)\n\t\t\t\t{\n\t\t\t\t\ttx = -tx;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(cx+tx, py);\n\t\t\t}\n\t\t\t\n\t\t\tif (px >= x && px <= x + bounds.width)\n\t\t\t{\n\t\t\t\tvar tx = px - cx;\n\t\t\t\tvar ty = Math.sqrt(b*b*(1-(tx*tx)/(a*a))) || 0;\n\t\t\t\t\n\t\t\t\tif (py <= y)\n\t\t\t\t{\n\t\t\t\t\tty = -ty;\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(px, cy+ty);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Calculates intersection\n\t\tvar d = dy / dx;\n\t\tvar h = cy - d * cx;\n\t\tvar e = a * a * d * d + b * b;\n\t\tvar f = -2 * cx * e;\n\t\tvar g = a * a * d * d * cx * cx +\n\t\t\t\tb * b * cx * cx -\n\t\t\t\ta * a * b * b;\n\t\tvar det = Math.sqrt(f * f - 4 * e * g);\n\t\t\n\t\t// Two solutions (perimeter points)\n\t\tvar xout1 = (-f + det) / (2 * e);\n\t\tvar xout2 = (-f - det) / (2 * e);\n\t\tvar yout1 = d * xout1 + h;\n\t\tvar yout2 = d * xout2 + h;\n\t\tvar dist1 = Math.sqrt(Math.pow((xout1 - px), 2)\n\t\t\t\t\t+ Math.pow((yout1 - py), 2));\n\t\tvar dist2 = Math.sqrt(Math.pow((xout2 - px), 2)\n\t\t\t\t\t+ Math.pow((yout2 - py), 2));\n\t\t\t\t\t\n\t\t// Correct solution\n\t\tvar xout = 0;\n\t\tvar yout = 0;\n\t\t\n\t\tif (dist1 < dist2)\n\t\t{\n\t\t\txout = xout1;\n\t\t\tyout = yout1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\txout = xout2;\n\t\t\tyout = yout2;\n\t\t}\n\t\t\n\t\treturn new mxPoint(xout, yout);\n\t},\n\n\t/**\n\t * Function: RhombusPerimeter\n\t * \n\t * Describes a rhombus (aka diamond) perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tRhombusPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\n\t\t// Special case for intersecting the diamond's corners\n\t\tif (cx == px)\n\t\t{\n\t\t\tif (cy > py)\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y); // top\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y + h); // bottom\n\t\t\t}\n\t\t}\n\t\telse if (cy == py)\n\t\t{\n\t\t\tif (cx > px)\n\t\t\t{\n\t\t\t\treturn new mxPoint(x, cy); // left\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(x + w, cy); // right\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar tx = cx;\n\t\tvar ty = cy;\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// In which quadrant will the intersection be?\n\t\t// set the slope and offset of the border line accordingly\n\t\tif (px < cx)\n\t\t{\n\t\t\tif (py < cy)\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x, cy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x, cy);\n\t\t\t}\n\t\t}\n\t\telse if (py < cy)\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x + w, cy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x + w, cy);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: TrianglePerimeter\n\t * \n\t * Describes a triangle perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tTrianglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar direction = (vertex != null) ?\n\t\t\tvertex.style[mxConstants.STYLE_DIRECTION] : null;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_SOUTH;\n\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\t\t\n\t\tvar start = new mxPoint(x, y);\n\t\tvar corner = new mxPoint(x + w, cy);\n\t\tvar end = new mxPoint(x, y + h);\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tstart = end;\n\t\t\tcorner = new mxPoint(cx, y);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tcorner = new mxPoint(cx, y + h);\n\t\t\tend = new mxPoint(x + w, y);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tstart = new mxPoint(x + w, y);\n\t\t\tcorner = new mxPoint(x, cy);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\n\t\tvar alpha = (vertical) ? Math.atan2(dx, dy) : Math.atan2(dy, dx);\n\t\tvar t = (vertical) ? Math.atan2(w, h) : Math.atan2(h, w);\n\t\t\n\t\tvar base = false;\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tbase = alpha > -t && alpha < t;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbase = alpha < -Math.PI + t || alpha > Math.PI - t;\t\n\t\t}\n\n\t\tvar result = null;\t\t\t\n\n\t\tif (base)\n\t\t{\n\t\t\tif (orthogonal && ((vertical && next.x >= start.x && next.x <= end.x) ||\n\t\t\t\t(!vertical && next.y >= start.y && next.y <= end.y)))\n\t\t\t{\n\t\t\t\tif (vertical)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(next.x, start.y);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(start.x, next.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 + h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty + h);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 - h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w, y + h / 2 +\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x, y + h / 2 -\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (orthogonal)\n\t\t\t{\n\t\t\t\tvar pt = new mxPoint(cx, cy);\n\t\t\n\t\t\t\tif (next.y >= y && next.y <= y + h)\n\t\t\t\t{\n\t\t\t\t\tpt.x = (vertical) ? cx : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_WEST) ?\n\t\t\t\t\t\t\tx + w : x);\n\t\t\t\t\tpt.y = next.y;\n\t\t\t\t}\n\t\t\t\telse if (next.x >= x && next.x <= x + w)\n\t\t\t\t{\n\t\t\t\t\tpt.x = next.x;\n\t\t\t\t\tpt.y = (!vertical) ? cy : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_NORTH) ?\n\t\t\t\t\t\t\ty + h : y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Compute angle\n\t\t\t\tdx = next.x - pt.x;\n\t\t\t\tdy = next.y - pt.y;\n\t\t\t\t\n\t\t\t\tcx = pt.x;\n\t\t\t\tcy = pt.y;\n\t\t\t}\n\n\t\t\tif ((vertical && next.x <= x + w / 2) ||\n\t\t\t\t(!vertical && next.y <= y + h / 2))\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tstart.x, start.y, corner.x, corner.y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tcorner.x, corner.y, end.x, end.y);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\tresult = new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: HexagonPerimeter\n\t * \n\t * Describes a hexagon perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tHexagonPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\tvar dx = px - cx;\n\t\tvar dy = py - cy;\n\t\tvar alpha = -Math.atan2(dy, dx);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI / 2;\n\n\t\tvar result = new mxPoint(cx, cy);\n\n\t\tvar direction = (vertex != null) ? mxUtils.getValue(\n\t\t\t\tvertex.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_EAST) : mxConstants.DIRECTION_EAST;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH\n\t\t\t\t|| direction == mxConstants.DIRECTION_SOUTH;\n\t\tvar a = new mxPoint();\n\t\tvar b = new mxPoint();\n\n\t\t//Only consider corrects quadrants for the orthogonal case.\n\t\tif ((px < x) && (py < y) || (px < x) && (py > y + h)\n\t\t\t\t|| (px > x + w) && (py < y) || (px > x + w) && (py > y + h))\n\t\t{\n\t\t\torthogonal = false;\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (px == cx)\n\t\t\t\t{\n\t\t\t\t\tif (py <= y)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py >= y + h)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px < x)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (py == y)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t}\n\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (py == cy)\n\t\t\t\t{\n\t\t\t\t\tif (px <= x)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px >= x + w)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py < y)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (px == x)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, cy);\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, cy);\n\t\t\t\t}\n\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar tx = cx;\n\t\t\tvar ty = cy;\n\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t\t\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tty = y + h;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tty = y;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t\t\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\ttx = x + w;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttx = x;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(tx, ty, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 4, w / 2);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == pi2)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi2))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\n\t\t\t\tif ((alpha < beta) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha > pi2) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (((alpha > (pi - beta)) && (alpha <= pi))\n\t\t\t\t\t\t|| ((alpha < (-pi + beta)) && (alpha >= -pi)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > -pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -pi2) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 2, w / 4);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha == pi) || (alpha == -pi))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == 0)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y + h);\n\t\t\t\t}\n\n\t\t\t\tif ((alpha > 0) && (alpha < beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > (pi - beta)) && (alpha < pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < 0) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < (-pi + beta)) && (alpha > -pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(cx, cy, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxPrintPreview\n * \n * Implements printing of a diagram across multiple pages. The following opens\n * a print preview for an existing graph:\n * \n * (code)\n * var preview = new mxPrintPreview(graph);\n * preview.open();\n * (end)\n * \n * Use <mxUtils.getScaleForPageCount> as follows in order to print the graph\n * across a given number of pages:\n * \n * (code)\n * var pageCount = mxUtils.prompt('Enter page count', '1');\n * \n * if (pageCount != null)\n * {\n *   var scale = mxUtils.getScaleForPageCount(pageCount, graph);\n *   var preview = new mxPrintPreview(graph, scale);\n *   preview.open();\n * }\n * (end)\n * \n * Additional pages:\n * \n * To add additional pages before and after the output, <getCoverPages> and\n * <getAppendices> can be used, respectively.\n * \n * (code)\n * var preview = new mxPrintPreview(graph, 1);\n * \n * preview.getCoverPages = function(w, h)\n * {\n *   return [this.renderPage(w, h, 0, 0, mxUtils.bind(this, function(div)\n *   {\n *     div.innerHTML = '<div style=\"position:relative;margin:4px;\">Cover Page</p>'\n *   }))];\n * };\n * \n * preview.getAppendices = function(w, h)\n * {\n *   return [this.renderPage(w, h, 0, 0, mxUtils.bind(this, function(div)\n *   {\n *     div.innerHTML = '<div style=\"position:relative;margin:4px;\">Appendix</p>'\n *   }))];\n * };\n * \n * preview.open();\n * (end)\n * \n * CSS:\n * \n * The CSS from the original page is not carried over to the print preview.\n * To add CSS to the page, use the css argument in the <open> function or\n * override <writeHead> to add the respective link tags as follows:\n * \n * (code)\n * var writeHead = preview.writeHead;\n * preview.writeHead = function(doc, css)\n * {\n *   writeHead.apply(this, arguments);\n *   doc.writeln('<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">');\n * };\n * (end)\n * \n * Padding:\n * \n * To add a padding to the page in the preview (but not the print output), use\n * the following code:\n * \n * (code)\n * preview.writeHead = function(doc)\n * {\n *   writeHead.apply(this, arguments);\n *   \n *   doc.writeln('<style type=\"text/css\">');\n *   doc.writeln('@media screen {');\n *   doc.writeln('  body > div { padding-top:30px;padding-left:40px;box-sizing:content-box; }');\n *   doc.writeln('}');\n *   doc.writeln('</style>');\n * };\n * (end)\n * \n * Headers:\n * \n * Apart from setting the title argument in the mxPrintPreview constructor you\n * can override <renderPage> as follows to add a header to any page:\n * \n * (code)\n * var oldRenderPage = mxPrintPreview.prototype.renderPage;\n * mxPrintPreview.prototype.renderPage = function(w, h, x, y, content, pageNumber)\n * {\n *   var div = oldRenderPage.apply(this, arguments);\n *   \n *   var header = document.createElement('div');\n *   header.style.position = 'absolute';\n *   header.style.top = '0px';\n *   header.style.width = '100%';\n *   header.style.textAlign = 'right';\n *   mxUtils.write(header, 'Your header here');\n *   div.firstChild.appendChild(header);\n *   \n *   return div;\n * };\n * (end)\n * \n * The pageNumber argument contains the number of the current page, starting at\n * 1. To display a header on the first page only, check pageNumber and add a\n * vertical offset in the constructor call for the height of the header.\n * \n * Page Format:\n * \n * For landscape printing, use <mxConstants.PAGE_FORMAT_A4_LANDSCAPE> as\n * the pageFormat in <mxUtils.getScaleForPageCount> and <mxPrintPreview>.\n * Keep in mind that one can not set the defaults for the print dialog\n * of the operating system from JavaScript so the user must manually choose\n * a page format that matches this setting.\n * \n * You can try passing the following CSS directive to <open> to set the\n * page format in the print dialog to landscape. However, this CSS\n * directive seems to be ignored in most major browsers, including IE.\n * \n * (code)\n * @page {\n *   size: landscape;\n * }\n * (end)\n * \n * Note that the print preview behaves differently in IE when used from the\n * filesystem or via HTTP so printing should always be tested via HTTP.\n * \n * If you are using a DOCTYPE in the source page you can override <getDoctype>\n * and provide the same DOCTYPE for the print preview if required. Here is\n * an example for IE8 standards mode.\n * \n * (code)\n * var preview = new mxPrintPreview(graph);\n * preview.getDoctype = function()\n * {\n *   return '<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=5,IE=8\" ><![endif]-->';\n * };\n * preview.open();\n * (end)\n * \n * Constructor: mxPrintPreview\n *\n * Constructs a new print preview for the given parameters.\n * \n * Parameters:\n * \n * graph - <mxGraph> to be previewed.\n * scale - Optional scale of the output. Default is 1 / <mxGraph.pageScale>.\n * border - Border in pixels along each side of every page. Note that the\n * actual print function in the browser will add another border for\n * printing.\n * pageFormat - <mxRectangle> that specifies the page format (in pixels).\n * This should match the page format of the printer. Default uses the\n * <mxGraph.pageFormat> of the given graph.\n * x0 - Optional left offset of the output. Default is 0.\n * y0 - Optional top offset of the output. Default is 0.\n * borderColor - Optional color of the page border. Default is no border.\n * Note that a border is sometimes useful to highlight the printed page\n * border in the print preview of the browser.\n * title - Optional string that is used for the window title. Default\n * is 'Printer-friendly version'.\n * pageSelector - Optional boolean that specifies if the page selector\n * should appear in the window with the print preview. Default is true.\n */\nfunction mxPrintPreview(graph, scale, pageFormat, border, x0, y0, borderColor, title, pageSelector)\n{\n\tthis.graph = graph;\n\tthis.scale = (scale != null) ? scale : 1 / graph.pageScale;\n\tthis.border = (border != null) ? border : 0;\n\tthis.pageFormat = mxRectangle.fromRectangle((pageFormat != null) ? pageFormat : graph.pageFormat);\n\tthis.title = (title != null) ? title : 'Printer-friendly version';\n\tthis.x0 = (x0 != null) ? x0 : 0;\n\tthis.y0 = (y0 != null) ? y0 : 0;\n\tthis.borderColor = borderColor;\n\tthis.pageSelector = (pageSelector != null) ? pageSelector : true;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the <mxGraph> that should be previewed.\n */\nmxPrintPreview.prototype.graph = null;\n\n/**\n * Variable: pageFormat\n *\n * Holds the <mxRectangle> that defines the page format.\n */\nmxPrintPreview.prototype.pageFormat = null;\n\n/**\n * Variable: scale\n * \n * Holds the scale of the print preview.\n */\nmxPrintPreview.prototype.scale = null;\n\n/**\n * Variable: border\n * \n * The border inset around each side of every page in the preview. This is set\n * to 0 if autoOrigin is false.\n */\nmxPrintPreview.prototype.border = 0;\n\n/**\n * Variable: marginTop\n * \n * The margin at the top of the page (number). Default is 0.\n */\nmxPrintPreview.prototype.marginTop = 0;\n\n/**\n * Variable: marginBottom\n * \n * The margin at the bottom of the page (number). Default is 0.\n */\nmxPrintPreview.prototype.marginBottom = 0;\n\n/**\n * Variable: x0\n * \n * Holds the horizontal offset of the output.\n */\nmxPrintPreview.prototype.x0 = 0;\n\n/**\n * Variable: y0\n *\n * Holds the vertical offset of the output.\n */\nmxPrintPreview.prototype.y0 = 0;\n\n/**\n * Variable: autoOrigin\n * \n * Specifies if the origin should be automatically computed based on the top,\n * left corner of the actual diagram contents. The required offset will be added\n * to <x0> and <y0> in <open>. Default is true.\n */\nmxPrintPreview.prototype.autoOrigin = true;\n\n/**\n * Variable: printOverlays\n * \n * Specifies if overlays should be printed. Default is false.\n */\nmxPrintPreview.prototype.printOverlays = false;\n\n/**\n * Variable: printControls\n * \n * Specifies if controls (such as folding icons) should be printed. Default is\n * false.\n */\nmxPrintPreview.prototype.printControls = false;\n\n/**\n * Variable: printBackgroundImage\n * \n * Specifies if the background image should be printed. Default is false.\n */\nmxPrintPreview.prototype.printBackgroundImage = false;\n\n/**\n * Variable: backgroundColor\n * \n * Holds the color value for the page background color. Default is #ffffff.\n */\nmxPrintPreview.prototype.backgroundColor = '#ffffff';\n\n/**\n * Variable: borderColor\n * \n * Holds the color value for the page border.\n */\nmxPrintPreview.prototype.borderColor = null;\n\n/**\n * Variable: title\n * \n * Holds the title of the preview window.\n */\nmxPrintPreview.prototype.title = null;\n\n/**\n * Variable: pageSelector\n * \n * Boolean that specifies if the page selector should be\n * displayed. Default is true.\n */\nmxPrintPreview.prototype.pageSelector = null;\n\n/**\n * Variable: wnd\n * \n * Reference to the preview window.\n */\nmxPrintPreview.prototype.wnd = null;\n\n/**\n * Variable: targetWindow\n * \n * Assign any window here to redirect the rendering in <open>.\n */\nmxPrintPreview.prototype.targetWindow = null;\n\n/**\n * Variable: pageCount\n * \n * Holds the actual number of pages in the preview.\n */\nmxPrintPreview.prototype.pageCount = 0;\n\n/**\n * Variable: clipping\n * \n * Specifies is clipping should be used to avoid creating too many cell states\n * in large diagrams. The bounding box of the cells in the original diagram is\n * used if this is enabled. Default is true.\n */\nmxPrintPreview.prototype.clipping = true;\n\n/**\n * Function: getWindow\n * \n * Returns <wnd>.\n */\nmxPrintPreview.prototype.getWindow = function()\n{\n\treturn this.wnd;\n};\n\n/**\n * Function: getDocType\n * \n * Returns the string that should go before the HTML tag in the print preview\n * page. This implementation returns an X-UA meta tag for IE5 in quirks mode,\n * IE8 in IE8 standards mode and edge in IE9 standards mode.\n */\nmxPrintPreview.prototype.getDoctype = function()\n{\n\tvar dt = '';\n\t\n\tif (document.documentMode == 5)\n\t{\n\t\tdt = '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=5\">';\n\t}\n\telse if (document.documentMode == 8)\n\t{\n\t\tdt = '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\">';\n\t}\n\telse if (document.documentMode > 8)\n\t{\n\t\t// Comment needed to make standards doctype apply in IE\n\t\tdt = '<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><![endif]-->';\n\t}\n\t\n\treturn dt;\n};\n\n/**\n * Function: appendGraph\n * \n * Adds the given graph to the existing print preview.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n * targetWindow - Optional window that should be used for rendering. If\n * this is specified then no HEAD tag, CSS and BODY tag will be written.\n */\nmxPrintPreview.prototype.appendGraph = function(graph, scale, x0, y0, forcePageBreaks, keepOpen)\n{\n\tthis.graph = graph;\n\tthis.scale = (scale != null) ? scale : 1 / graph.pageScale;\n\tthis.x0 = x0;\n\tthis.y0 = y0;\n\tthis.open(null, null, forcePageBreaks, keepOpen);\n};\n\n/**\n * Function: open\n * \n * Shows the print preview window. The window is created here if it does\n * not exist.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n * targetWindow - Optional window that should be used for rendering. If\n * this is specified then no HEAD tag, CSS and BODY tag will be written.\n */\nmxPrintPreview.prototype.open = function(css, targetWindow, forcePageBreaks, keepOpen)\n{\n\t// Closing the window while the page is being rendered may cause an\n\t// exception in IE. This and any other exceptions are simply ignored.\n\tvar previousInitializeOverlay = this.graph.cellRenderer.initializeOverlay;\n\tvar div = null;\n\t\n\ttry\n\t{\n\t\t// Temporarily overrides the method to redirect rendering of overlays\n\t\t// to the draw pane so that they are visible in the printout\n\t\tif (this.printOverlays)\n\t\t{\n\t\t\tthis.graph.cellRenderer.initializeOverlay = function(state, overlay)\n\t\t\t{\n\t\t\t\toverlay.init(state.view.getDrawPane());\n\t\t\t};\n\t\t}\n\t\t\n\t\tif (this.printControls)\n\t\t{\n\t\t\tthis.graph.cellRenderer.initControl = function(state, control, handleEvents, clickHandler)\n\t\t\t{\n\t\t\t\tcontrol.dialect = state.view.graph.dialect;\n\t\t\t\tcontrol.init(state.view.getDrawPane());\n\t\t\t};\n\t\t}\n\t\t\n\t\tthis.wnd = (targetWindow != null) ? targetWindow : this.wnd;\n\t\tvar isNewWindow = false;\n\t\t\n\t\tif (this.wnd == null)\n\t\t{\n\t\t\tisNewWindow = true;\n\t\t\tthis.wnd = window.open();\n\t\t}\n\t\t\n\t\tvar doc = this.wnd.document;\n\t\t\n\t\tif (isNewWindow)\n\t\t{\n\t\t\tvar dt = this.getDoctype();\n\t\t\t\n\t\t\tif (dt != null && dt.length > 0)\n\t\t\t{\n\t\t\t\tdoc.writeln(dt);\n\t\t\t}\n\t\t\t\n\t\t\tif (mxClient.IS_VML)\n\t\t\t{\n\t\t\t\tdoc.writeln('<html xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (document.compatMode === 'CSS1Compat')\n\t\t\t\t{\n\t\t\t\t\tdoc.writeln('<!DOCTYPE html>');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdoc.writeln('<html>');\n\t\t\t}\n\t\t\t\n\t\t\tdoc.writeln('<head>');\n\t\t\tthis.writeHead(doc, css);\n\t\t\tdoc.writeln('</head>');\n\t\t\tdoc.writeln('<body class=\"mxPage\">');\n\t\t}\n\n\t\t// Computes the horizontal and vertical page count\n\t\tvar bounds = this.graph.getGraphBounds().clone();\n\t\tvar currentScale = this.graph.getView().getScale();\n\t\tvar sc = currentScale / this.scale;\n\t\tvar tr = this.graph.getView().getTranslate();\n\t\t\n\t\t// Uses the absolute origin with no offset for all printing\n\t\tif (!this.autoOrigin)\n\t\t{\n\t\t\tthis.x0 -= tr.x * this.scale;\n\t\t\tthis.y0 -= tr.y * this.scale;\n\t\t\tbounds.width += bounds.x;\n\t\t\tbounds.height += bounds.y;\n\t\t\tbounds.x = 0;\n\t\t\tbounds.y = 0;\n\t\t\tthis.border = 0;\n\t\t}\n\t\t\n\t\t// Store the available page area\n\t\tvar availableWidth = this.pageFormat.width - (this.border * 2);\n\t\tvar availableHeight = this.pageFormat.height - (this.border * 2);\n\t\n\t\t// Adds margins to page format\n\t\tthis.pageFormat.height += this.marginTop + this.marginBottom;\n\n\t\t// Compute the unscaled, untranslated bounds to find\n\t\t// the number of vertical and horizontal pages\n\t\tbounds.width /= sc;\n\t\tbounds.height /= sc;\n\n\t\tvar hpages = Math.max(1, Math.ceil((bounds.width + this.x0) / availableWidth));\n\t\tvar vpages = Math.max(1, Math.ceil((bounds.height + this.y0) / availableHeight));\n\t\tthis.pageCount = hpages * vpages;\n\t\t\n\t\tvar writePageSelector = mxUtils.bind(this, function()\n\t\t{\n\t\t\tif (this.pageSelector && (vpages > 1 || hpages > 1))\n\t\t\t{\n\t\t\t\tvar table = this.createPageSelector(vpages, hpages);\n\t\t\t\tdoc.body.appendChild(table);\n\t\t\t\t\n\t\t\t\t// Implements position: fixed in IE quirks mode\n\t\t\t\tif (mxClient.IS_IE && doc.documentMode == null || doc.documentMode == 5 || doc.documentMode == 8 || doc.documentMode == 7)\n\t\t\t\t{\n\t\t\t\t\ttable.style.position = 'absolute';\n\t\t\t\t\t\n\t\t\t\t\tvar update = function()\n\t\t\t\t\t{\n\t\t\t\t\t\ttable.style.top = ((doc.body.scrollTop || doc.documentElement.scrollTop) + 10) + 'px';\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.addListener(this.wnd, 'scroll', function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.addListener(this.wnd, 'resize', function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tvar addPage = mxUtils.bind(this, function(div, addBreak)\n\t\t{\n\t\t\t// Border of the DIV (aka page) inside the document\n\t\t\tif (this.borderColor != null)\n\t\t\t{\n\t\t\t\tdiv.style.borderColor = this.borderColor;\n\t\t\t\tdiv.style.borderStyle = 'solid';\n\t\t\t\tdiv.style.borderWidth = '1px';\n\t\t\t}\n\t\t\t\n\t\t\t// Needs to be assigned directly because IE doesn't support\n\t\t\t// child selectors, eg. body > div { background: white; }\n\t\t\tdiv.style.background = this.backgroundColor;\n\t\t\t\n\t\t\tif (forcePageBreaks || addBreak)\n\t\t\t{\n\t\t\t\tdiv.style.pageBreakAfter = 'always';\n\t\t\t}\n\n\t\t\t// NOTE: We are dealing with cross-window DOM here, which\n\t\t\t// is a problem in IE, so we copy the HTML markup instead.\n\t\t\t// The underlying problem is that the graph display markup\n\t\t\t// creation (in mxShape, mxGraphView) is hardwired to using\n\t\t\t// document.createElement and hence we must use this document\n\t\t\t// to create the complete page and then copy it over to the\n\t\t\t// new window.document. This can be fixed later by using the\n\t\t\t// ownerDocument of the container in mxShape and mxGraphView.\n\t\t\tif (isNewWindow && (mxClient.IS_IE || document.documentMode >= 11 || mxClient.IS_EDGE))\n\t\t\t{\n\t\t\t\t// For some obscure reason, removing the DIV from the\n\t\t\t\t// parent before fetching its outerHTML has missing\n\t\t\t\t// fillcolor properties and fill children, so the div\n\t\t\t\t// must be removed afterwards to keep the fillcolors.\n\t\t\t\tdoc.writeln(div.outerHTML);\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t}\n\t\t\telse if (mxClient.IS_IE || document.documentMode >= 11 || mxClient.IS_EDGE)\n\t\t\t{\n\t\t\t\tvar clone = doc.createElement('div');\n\t\t\t\tclone.innerHTML = div.outerHTML;\n\t\t\t\tclone = clone.getElementsByTagName('div')[0];\n\t\t\t\tdoc.body.appendChild(clone);\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t}\n\n\t\t\tif (forcePageBreaks || addBreak)\n\t\t\t{\n\t\t\t\tthis.addPageBreak(doc);\n\t\t\t}\n\t\t});\n\t\t\n\t\tvar cov = this.getCoverPages(this.pageFormat.width, this.pageFormat.height);\n\t\t\n\t\tif (cov != null)\n\t\t{\n\t\t\tfor (var i = 0; i < cov.length; i++)\n\t\t\t{\n\t\t\t\taddPage(cov[i], true);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar apx = this.getAppendices(this.pageFormat.width, this.pageFormat.height);\n\t\t\n\t\t// Appends each page to the page output for printing, making\n\t\t// sure there will be a page break after each page (ie. div)\n\t\tfor (var i = 0; i < vpages; i++)\n\t\t{\n\t\t\tvar dy = i * availableHeight / this.scale - this.y0 / this.scale +\n\t\t\t\t\t(bounds.y - tr.y * currentScale) / currentScale;\n\t\t\t\n\t\t\tfor (var j = 0; j < hpages; j++)\n\t\t\t{\n\t\t\t\tif (this.wnd == null)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dx = j * availableWidth / this.scale - this.x0 / this.scale +\n\t\t\t\t\t\t(bounds.x - tr.x * currentScale) / currentScale;\n\t\t\t\tvar pageNum = i * hpages + j + 1;\n\t\t\t\tvar clip = new mxRectangle(dx, dy, availableWidth, availableHeight);\n\t\t\t\tdiv = this.renderPage(this.pageFormat.width, this.pageFormat.height, 0, 0, mxUtils.bind(this, function(div)\n\t\t\t\t{\n\t\t\t\t\tthis.addGraphFragment(-dx, -dy, this.scale, pageNum, div, clip);\n\t\t\t\t\t\n\t\t\t\t\tif (this.printBackgroundImage)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.insertBackgroundImage(div, -dx, -dy);\n\t\t\t\t\t}\n\t\t\t\t}), pageNum);\n\n\t\t\t\t// Gives the page a unique ID for later accessing the page\n\t\t\t\tdiv.setAttribute('id', 'mxPage-'+pageNum);\n\n\t\t\t\taddPage(div, apx != null || i < vpages - 1 || j < hpages - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (apx != null)\n\t\t{\n\t\t\tfor (var i = 0; i < apx.length; i++)\n\t\t\t{\n\t\t\t\taddPage(apx[i], i < apx.length - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (isNewWindow && !keepOpen)\n\t\t{\n\t\t\tthis.closeDocument();\n\t\t\twritePageSelector();\n\t\t}\n\t\t\n\t\tthis.wnd.focus();\n\t}\n\tcatch (e)\n\t{\n\t\t// Removes the DIV from the document in case of an error\n\t\tif (div != null && div.parentNode != null)\n\t\t{\n\t\t\tdiv.parentNode.removeChild(div);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.graph.cellRenderer.initializeOverlay = previousInitializeOverlay;\n\t}\n\n\treturn this.wnd;\n};\n\n/**\n * Function: addPageBreak\n * \n * Adds a page break to the given document.\n */\nmxPrintPreview.prototype.addPageBreak = function(doc)\n{\n\tvar hr = doc.createElement('hr');\n\thr.className = 'mxPageBreak';\n\tdoc.body.appendChild(hr);\n};\n\n/**\n * Function: closeDocument\n * \n * Writes the closing tags for body and page after calling <writePostfix>.\n */\nmxPrintPreview.prototype.closeDocument = function()\n{\n\ttry\n\t{\n\t\tif (this.wnd != null && this.wnd.document != null)\n\t\t{\n\t\t\tvar doc = this.wnd.document;\n\t\t\t\n\t\t\tthis.writePostfix(doc);\n\t\t\tdoc.writeln('</body>');\n\t\t\tdoc.writeln('</html>');\n\t\t\tdoc.close();\n\t\t\t\n\t\t\t// Removes all event handlers in the print output\n\t\t\tmxEvent.release(doc.body);\n\t\t}\n\t}\n\tcatch (e)\n\t{\n\t\t// ignore any errors resulting from wnd no longer being available\n\t}\n};\n\n/**\n * Function: writeHead\n * \n * Writes the HEAD section into the given document, without the opening\n * and closing HEAD tags.\n */\nmxPrintPreview.prototype.writeHead = function(doc, css)\n{\n\tif (this.title != null)\n\t{\n\t\tdoc.writeln('<title>' + this.title + '</title>');\n\t}\n\t\n\t// Adds required namespaces\n\tif (mxClient.IS_VML)\n\t{\n\t\tdoc.writeln('<style type=\"text/css\">v\\\\:*{behavior:url(#default#VML)}o\\\\:*{behavior:url(#default#VML)}</style>');\n\t}\n\n\t// Adds all required stylesheets\n\tmxClient.link('stylesheet', mxClient.basePath + '/css/common.css', doc);\n\n\t// Removes horizontal rules and page selector from print output\n\tdoc.writeln('<style type=\"text/css\">');\n\tdoc.writeln('@media print {');\n\tdoc.writeln('  * { -webkit-print-color-adjust: exact; }');\n\tdoc.writeln('  table.mxPageSelector { display: none; }');\n\tdoc.writeln('  hr.mxPageBreak { display: none; }');\n\tdoc.writeln('}');\n\tdoc.writeln('@media screen {');\n\t\n\t// NOTE: position: fixed is not supported in IE, so the page selector\n\t// position (absolute) needs to be updated in IE (see below)\n\tdoc.writeln('  table.mxPageSelector { position: fixed; right: 10px; top: 10px;' +\n\t\t\t'font-family: Arial; font-size:10pt; border: solid 1px darkgray;' +\n\t\t\t'background: white; border-collapse:collapse; }');\n\tdoc.writeln('  table.mxPageSelector td { border: solid 1px gray; padding:4px; }');\n\tdoc.writeln('  body.mxPage { background: gray; }');\n\tdoc.writeln('}');\n\t\n\tif (css != null)\n\t{\n\t\tdoc.writeln(css);\n\t}\n\t\n\tdoc.writeln('</style>');\n};\n\n/**\n * Function: writePostfix\n * \n * Called before closing the body of the page. This implementation is empty.\n */\nmxPrintPreview.prototype.writePostfix = function(doc)\n{\n\t// empty\n};\n\n/**\n * Function: createPageSelector\n * \n * Creates the page selector table.\n */\nmxPrintPreview.prototype.createPageSelector = function(vpages, hpages)\n{\n\tvar doc = this.wnd.document;\n\tvar table = doc.createElement('table');\n\ttable.className = 'mxPageSelector';\n\ttable.setAttribute('border', '0');\n\n\tvar tbody = doc.createElement('tbody');\n\t\n\tfor (var i = 0; i < vpages; i++)\n\t{\n\t\tvar row = doc.createElement('tr');\n\t\t\n\t\tfor (var j = 0; j < hpages; j++)\n\t\t{\n\t\t\tvar pageNum = i * hpages + j + 1;\n\t\t\tvar cell = doc.createElement('td');\n\t\t\tvar a = doc.createElement('a');\n\t\t\ta.setAttribute('href', '#mxPage-' + pageNum);\n\n\t\t\t// Workaround for FF where the anchor is appended to the URL of the original document\n\t\t\tif (mxClient.IS_NS && !mxClient.IS_SF && !mxClient.IS_GC)\n\t\t\t{\n\t\t\t\tvar js = 'var page = document.getElementById(\\'mxPage-' + pageNum + '\\');page.scrollIntoView(true);event.preventDefault();';\n\t\t\t\ta.setAttribute('onclick', js);\n\t\t\t}\n\t\t\t\n\t\t\tmxUtils.write(a, pageNum, doc);\n\t\t\tcell.appendChild(a);\n\t\t\trow.appendChild(cell);\n\t\t}\n\t\t\n\t\ttbody.appendChild(row);\n\t}\n\t\n\ttable.appendChild(tbody);\n\t\n\treturn table;\n};\n\n/**\n * Function: renderPage\n * \n * Creates a DIV that prints a single page of the given\n * graph using the given scale and returns the DIV that\n * represents the page.\n * \n * Parameters:\n * \n * w - Width of the page in pixels.\n * h - Height of the page in pixels.\n * dx - Optional horizontal page offset in pixels (used internally).\n * dy - Optional vertical page offset in pixels (used internally).\n * content - Callback that adds the HTML content to the inner div of a page.\n * Takes the inner div as the argument.\n * pageNumber - Integer representing the page number.\n */\nmxPrintPreview.prototype.renderPage = function(w, h, dx, dy, content, pageNumber)\n{\n\tvar doc = this.wnd.document;\n\tvar div = document.createElement('div');\n\tvar arg = null;\n\n\ttry\n\t{\n\t\t// Workaround for ignored clipping in IE 9 standards\n\t\t// when printing with page breaks and HTML labels.\n\t\tif (dx != 0 || dy != 0)\n\t\t{\n\t\t\tdiv.style.position = 'relative';\n\t\t\tdiv.style.width = w + 'px';\n\t\t\tdiv.style.height = h + 'px';\n\t\t\tdiv.style.pageBreakInside = 'avoid';\n\t\t\t\n\t\t\tvar innerDiv = document.createElement('div');\n\t\t\tinnerDiv.style.position = 'relative';\n\t\t\tinnerDiv.style.top = this.border + 'px';\n\t\t\tinnerDiv.style.left = this.border + 'px';\n\t\t\tinnerDiv.style.width = (w - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.height = (h - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.overflow = 'hidden';\n\t\t\t\n\t\t\tvar viewport = document.createElement('div');\n\t\t\tviewport.style.position = 'relative';\n\t\t\tviewport.style.marginLeft = dx + 'px';\n\t\t\tviewport.style.marginTop = dy + 'px';\n\n\t\t\t// FIXME: IE8 standards output problems\n\t\t\tif (doc.documentMode == 8)\n\t\t\t{\n\t\t\t\tinnerDiv.style.position = 'absolute';\n\t\t\t\tviewport.style.position = 'absolute';\n\t\t\t}\n\t\t\n\t\t\tif (doc.documentMode == 10)\n\t\t\t{\n\t\t\t\tviewport.style.width = '100%';\n\t\t\t\tviewport.style.height = '100%';\n\t\t\t}\n\t\t\t\n\t\t\tinnerDiv.appendChild(viewport);\n\t\t\tdiv.appendChild(innerDiv);\n\t\t\tdocument.body.appendChild(div);\n\t\t\targ = viewport;\n\t\t}\n\t\t// FIXME: IE10/11 too many pages\n\t\telse\n\t\t{\n\t\t\tdiv.style.width = w + 'px';\n\t\t\tdiv.style.height = h + 'px';\n\t\t\tdiv.style.overflow = 'hidden';\n\t\t\tdiv.style.pageBreakInside = 'avoid';\n\t\t\t\n\t\t\t// IE8 uses above branch currently\n\t\t\tif (doc.documentMode == 8)\n\t\t\t{\n\t\t\t\tdiv.style.position = 'relative';\n\t\t\t}\n\t\t\t\n\t\t\tvar innerDiv = document.createElement('div');\n\t\t\tinnerDiv.style.width = (w - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.height = (h - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.overflow = 'hidden';\n\n\t\t\tif (mxClient.IS_IE && (doc.documentMode == null || doc.documentMode == 5 || doc.documentMode == 8 || doc.documentMode == 7))\n\t\t\t{\n\t\t\t\tinnerDiv.style.marginTop = this.border + 'px';\n\t\t\t\tinnerDiv.style.marginLeft = this.border + 'px';\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinnerDiv.style.top = this.border + 'px';\n\t\t\t\tinnerDiv.style.left = this.border + 'px';\n\t\t\t}\n\t\n\t\t\tif (this.graph.dialect == mxConstants.DIALECT_VML)\n\t\t\t{\n\t\t\t\tinnerDiv.style.position = 'absolute';\n\t\t\t}\n\n\t\t\tdiv.appendChild(innerDiv);\n\t\t\tdocument.body.appendChild(div);\n\t\t\targ = innerDiv;\n\t\t}\n\t}\n\tcatch (e)\n\t{\n\t\tdiv.parentNode.removeChild(div);\n\t\tdiv = null;\n\t\t\n\t\tthrow e;\n\t}\n\n\tcontent(arg);\n\t \n\treturn div;\n};\n\n/**\n * Function: getRoot\n * \n * Returns the root cell for painting the graph.\n */\nmxPrintPreview.prototype.getRoot = function()\n{\n\tvar root = this.graph.view.currentRoot;\n\t\n\tif (root == null)\n\t{\n\t\troot = this.graph.getModel().getRoot();\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: addGraphFragment\n * \n * Adds a graph fragment to the given div.\n * \n * Parameters:\n * \n * dx - Horizontal translation for the diagram.\n * dy - Vertical translation for the diagram.\n * scale - Scale for the diagram.\n * pageNumber - Number of the page to be rendered.\n * div - Div that contains the output.\n * clip - Contains the clipping rectangle as an <mxRectangle>.\n */\nmxPrintPreview.prototype.addGraphFragment = function(dx, dy, scale, pageNumber, div, clip)\n{\n\tvar view = this.graph.getView();\n\tvar previousContainer = this.graph.container;\n\tthis.graph.container = div;\n\t\n\tvar canvas = view.getCanvas();\n\tvar backgroundPane = view.getBackgroundPane();\n\tvar drawPane = view.getDrawPane();\n\tvar overlayPane = view.getOverlayPane();\n\n\tif (this.graph.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tview.createSvg();\n\t\t\n\t\t// Uses CSS transform for scaling\n\t\tif (!mxClient.NO_FO)\n\t\t{\n\t\t\tvar g = view.getDrawPane().parentNode;\n\t\t\tvar prev = g.getAttribute('transform');\n\t\t\tg.setAttribute('transformOrigin', '0 0');\n\t\t\tg.setAttribute('transform', 'scale(' + scale + ',' + scale + ')' +\n\t\t\t\t'translate(' + dx + ',' + dy + ')');\n\t\t\t\n\t\t\tscale = 1;\n\t\t\tdx = 0;\n\t\t\tdy = 0;\n\t\t}\n\t}\n\telse if (this.graph.dialect == mxConstants.DIALECT_VML)\n\t{\n\t\tview.createVml();\n\t}\n\telse\n\t{\n\t\tview.createHtml();\n\t}\n\t\n\t// Disables events on the view\n\tvar eventsEnabled = view.isEventsEnabled();\n\tview.setEventsEnabled(false);\n\t\n\t// Disables the graph to avoid cursors\n\tvar graphEnabled = this.graph.isEnabled();\n\tthis.graph.setEnabled(false);\n\n\t// Resets the translation\n\tvar translate = view.getTranslate();\n\tview.translate = new mxPoint(dx, dy);\n\t\n\t// Redraws only states that intersect the clip\n\tvar redraw = this.graph.cellRenderer.redraw;\n\tvar states = view.states;\n\tvar s = view.scale;\n\n\t// Gets the transformed clip for intersection check below\n\tif (this.clipping)\n\t{\n\t\tvar tempClip = new mxRectangle((clip.x + translate.x) * s, (clip.y + translate.y) * s,\n\t\t\t\tclip.width * s / scale, clip.height * s / scale);\n\t\t\n\t\t// Checks clipping rectangle for speedup\n\t\t// Must create terminal states for edge clipping even if terminal outside of clip\n\t\tthis.graph.cellRenderer.redraw = function(state, force, rendering)\n\t\t{\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\t// Gets original state from graph to find bounding box\n\t\t\t\tvar orig = states.get(state.cell);\n\t\t\t\t\n\t\t\t\tif (orig != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = view.getBoundingBox(orig, false);\n\t\t\t\t\t\n\t\t\t\t\t// Stops rendering if outside clip for speedup\n\t\t\t\t\tif (bbox != null && !mxUtils.intersects(tempClip, bbox))\n\t\t\t\t\t{\n\t\t\t\t\t\t//return;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tredraw.apply(this, arguments);\n\t\t};\n\t}\n\t\n\tvar temp = null;\n\t\n\ttry\n\t{\n\t\t// Creates the temporary cell states in the view and\n\t\t// draws them onto the temporary DOM nodes in the view\n\t\tvar cells = [this.getRoot()];\n\t\ttemp = new mxTemporaryCellStates(view, scale, cells, null, mxUtils.bind(this, function(state)\n\t\t{\n\t\t\treturn this.getLinkForCellState(state);\n\t\t}));\n\t}\n\tfinally\n\t{\n\t\t// Removes overlay pane with selection handles\n\t\t// controls and icons from the print output\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tview.overlayPane.innerHTML = '';\n\t\t\tview.canvas.style.overflow = 'hidden';\n\t\t\tview.canvas.style.position = 'relative';\n\t\t\tview.canvas.style.top = this.marginTop + 'px';\n\t\t\tview.canvas.style.width = clip.width + 'px';\n\t\t\tview.canvas.style.height = clip.height + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Removes everything but the SVG node\n\t\t\tvar tmp = div.firstChild;\n\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\tvar next = tmp.nextSibling;\n\t\t\t\tvar name = tmp.nodeName.toLowerCase();\n\n\t\t\t\t// Note: Width and height are required in FF 11\n\t\t\t\tif (name == 'svg')\n\t\t\t\t{\n\t\t\t\t\ttmp.style.overflow = 'hidden';\n\t\t\t\t\ttmp.style.position = 'relative';\n\t\t\t\t\ttmp.style.top = this.marginTop + 'px';\n\t\t\t\t\ttmp.setAttribute('width', clip.width);\n\t\t\t\t\ttmp.setAttribute('height', clip.height);\n\t\t\t\t\ttmp.style.width = '';\n\t\t\t\t\ttmp.style.height = '';\n\t\t\t\t}\n\t\t\t\t// Tries to fetch all text labels and only text labels\n\t\t\t\telse if (tmp.style.cursor != 'default' && name != 'div')\n\t\t\t\t{\n\t\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp = next;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Puts background image behind SVG output\n\t\tif (this.printBackgroundImage)\n\t\t{\n\t\t\tvar svgs = div.getElementsByTagName('svg');\n\t\t\t\n\t\t\tif (svgs.length > 0)\n\t\t\t{\n\t\t\t\tsvgs[0].style.position = 'absolute';\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Completely removes the overlay pane to remove more handles\n\t\tview.overlayPane.parentNode.removeChild(view.overlayPane);\n\n\t\t// Restores the state of the view\n\t\tthis.graph.setEnabled(graphEnabled);\n\t\tthis.graph.container = previousContainer;\n\t\tthis.graph.cellRenderer.redraw = redraw;\n\t\tview.canvas = canvas;\n\t\tview.backgroundPane = backgroundPane;\n\t\tview.drawPane = drawPane;\n\t\tview.overlayPane = overlayPane;\n\t\tview.translate = translate;\n\t\ttemp.destroy();\n\t\tview.setEventsEnabled(eventsEnabled);\n\t}\n};\n\n/**\n * Function: getLinkForCellState\n * \n * Returns the link for the given cell state. This returns null.\n */\nmxPrintPreview.prototype.getLinkForCellState = function(state)\n{\n\treturn this.graph.getLinkForCell(state.cell);\n};\n\n/**\n * Function: insertBackgroundImage\n * \n * Inserts the background image into the given div.\n */\nmxPrintPreview.prototype.insertBackgroundImage = function(div, dx, dy)\n{\n\tvar bg = this.graph.backgroundImage;\n\t\n\tif (bg != null)\n\t{\n\t\tvar img = document.createElement('img');\n\t\timg.style.position = 'absolute';\n\t\timg.style.marginLeft = Math.round(dx * this.scale) + 'px';\n\t\timg.style.marginTop = Math.round(dy * this.scale) + 'px';\n\t\timg.setAttribute('width', Math.round(this.scale * bg.width));\n\t\timg.setAttribute('height', Math.round(this.scale * bg.height));\n\t\timg.src = bg.src;\n\t\t\n\t\tdiv.insertBefore(img, div.firstChild);\n\t}\n};\n\n/**\n * Function: getCoverPages\n * \n * Returns the pages to be added before the print output. This returns null.\n */\nmxPrintPreview.prototype.getCoverPages = function()\n{\n\treturn null;\n};\n\n/**\n * Function: getAppendices\n * \n * Returns the pages to be added after the print output. This returns null.\n */\nmxPrintPreview.prototype.getAppendices = function()\n{\n\treturn null;\n};\n\n/**\n * Function: print\n * \n * Opens the print preview and shows the print dialog.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n */\nmxPrintPreview.prototype.print = function(css)\n{\n\tvar wnd = this.open(css);\n\t\n\tif (wnd != null)\n\t{\n\t\twnd.print();\n\t}\n};\n\n/**\n * Function: close\n * \n * Closes the print preview window.\n */\nmxPrintPreview.prototype.close = function()\n{\n\tif (this.wnd != null)\n\t{\n\t\tthis.wnd.close();\n\t\tthis.wnd = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStylesheet\n * \n * Defines the appearance of the cells in a graph. See <putCellStyle> for an\n * example of creating a new cell style. It is recommended to use objects, not\n * arrays for holding cell styles. Existing styles can be cloned using\n * <mxUtils.clone> and turned into a string for debugging using\n * <mxUtils.toString>.\n *\n * Default Styles:\n * \n * The stylesheet contains two built-in styles, which are used if no style is\n * defined for a cell:\n *\n *   defaultVertex - Default style for vertices\n *   defaultEdge - Default style for edges\n * \n * Example:\n * \n * (code)\n * var vertexStyle = stylesheet.getDefaultVertexStyle();\n * vertexStyle[mxConstants.ROUNDED] = true;\n * var edgeStyle = stylesheet.getDefaultEdgeStyle();\n * edgeStyle[mxConstants.STYLE_EDGE] = mxEdgeStyle.EntityRelation;\n * (end)\n * \n * Modifies the built-in default styles.\n * \n * To avoid the default style for a cell, add a leading semicolon\n * to the style definition, eg.\n * \n * (code)\n * ;shadow=1\n * (end)\n * \n * Removing keys:\n * \n * For removing a key in a cell style of the form [stylename;|key=value;] the\n * special value none can be used, eg. highlight;fillColor=none\n * \n * See also the helper methods in mxUtils to modify strings of this format,\n * namely <mxUtils.setStyle>, <mxUtils.indexOfStylename>,\n * <mxUtils.addStylename>, <mxUtils.removeStylename>,\n * <mxUtils.removeAllStylenames> and <mxUtils.setStyleFlag>.\n * \n * Constructor: mxStylesheet\n * \n * Constructs a new stylesheet and assigns default styles.\n */\nfunction mxStylesheet()\n{\n\tthis.styles = new Object();\n\t\n\tthis.putDefaultVertexStyle(this.createDefaultVertexStyle());\n\tthis.putDefaultEdgeStyle(this.createDefaultEdgeStyle());\n};\n\n/**\n * Function: styles\n * \n * Maps from names to cell styles. Each cell style is a map of key,\n * value pairs.\n */\nmxStylesheet.prototype.styles;\n\n/**\n * Function: createDefaultVertexStyle\n * \n * Creates and returns the default vertex style.\n */\nmxStylesheet.prototype.createDefaultVertexStyle = function()\n{\n\tvar style = new Object();\n\t\n\tstyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;\n\tstyle[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n\tstyle[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\n\tstyle[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\n\tstyle[mxConstants.STYLE_FILLCOLOR] = '#C3D9FF';\n\tstyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\n\tstyle[mxConstants.STYLE_FONTCOLOR] = '#774400';\n\t\n\treturn style;\n};\n\n/**\n * Function: createDefaultEdgeStyle\n * \n * Creates and returns the default edge style.\n */\nmxStylesheet.prototype.createDefaultEdgeStyle = function()\n{\n\tvar style = new Object();\n\t\n\tstyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_CONNECTOR;\n\tstyle[mxConstants.STYLE_ENDARROW] = mxConstants.ARROW_CLASSIC;\n\tstyle[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\n\tstyle[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\n\tstyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\n\tstyle[mxConstants.STYLE_FONTCOLOR] = '#446299';\n\t\n\treturn style;\n};\n\n/**\n * Function: putDefaultVertexStyle\n * \n * Sets the default style for vertices using defaultVertex as the\n * stylename.\n * \n * Parameters:\n * style - Key, value pairs that define the style.\n */\nmxStylesheet.prototype.putDefaultVertexStyle = function(style)\n{\n\tthis.putCellStyle('defaultVertex', style);\n};\n\n/**\n * Function: putDefaultEdgeStyle\n * \n * Sets the default style for edges using defaultEdge as the stylename.\n */\nmxStylesheet.prototype.putDefaultEdgeStyle = function(style)\n{\n\tthis.putCellStyle('defaultEdge', style);\n};\n\n/**\n * Function: getDefaultVertexStyle\n * \n * Returns the default style for vertices.\n */\nmxStylesheet.prototype.getDefaultVertexStyle = function()\n{\n\treturn this.styles['defaultVertex'];\n};\n\n/**\n * Function: getDefaultEdgeStyle\n * \n * Sets the default style for edges.\n */\nmxStylesheet.prototype.getDefaultEdgeStyle = function()\n{\n\treturn this.styles['defaultEdge'];\n};\n\n/**\n * Function: putCellStyle\n * \n * Stores the given map of key, value pairs under the given name in\n * <styles>.\n *\n * Example:\n * \n * The following example adds a new style called 'rounded' into an\n * existing stylesheet:\n * \n * (code)\n * var style = new Object();\n * style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;\n * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n * style[mxConstants.STYLE_ROUNDED] = true;\n * graph.getStylesheet().putCellStyle('rounded', style);\n * (end)\n * \n * In the above example, the new style is an object. The possible keys of\n * the object are all the constants in <mxConstants> that start with STYLE\n * and the values are either JavaScript objects, such as\n * <mxPerimeter.RightAngleRectanglePerimeter> (which is in fact a function)\n * or expressions, such as true. Note that not all keys will be\n * interpreted by all shapes (eg. the line shape ignores the fill color).\n * The final call to this method associates the style with a name in the\n * stylesheet. The style is used in a cell with the following code:\n * \n * (code)\n * model.setStyle(cell, 'rounded');\n * (end)\n * \n * Parameters:\n * \n * name - Name for the style to be stored.\n * style - Key, value pairs that define the style.\n */\nmxStylesheet.prototype.putCellStyle = function(name, style)\n{\n\tthis.styles[name] = style;\n};\n\n/**\n * Function: getCellStyle\n * \n * Returns the cell style for the specified stylename or the given\n * defaultStyle if no style can be found for the given stylename.\n * \n * Parameters:\n * \n * name - String of the form [(stylename|key=value);] that represents the\n * style.\n * defaultStyle - Default style to be returned if no style can be found.\n */\nmxStylesheet.prototype.getCellStyle = function(name, defaultStyle)\n{\n\tvar style = defaultStyle;\n\t\n\tif (name != null && name.length > 0)\n\t{\n\t\tvar pairs = name.split(';');\n\n\t\tif (style != null &&\n\t\t\tname.charAt(0) != ';')\n\t\t{\n\t\t\tstyle = mxUtils.clone(style);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle = new Object();\n\t\t}\n\n\t\t// Parses each key, value pair into the existing style\n\t \tfor (var i = 0; i < pairs.length; i++)\n\t \t{\n\t \t\tvar tmp = pairs[i];\n\t \t\tvar pos = tmp.indexOf('=');\n\t \t\t\n\t \t\tif (pos >= 0)\n\t \t\t{\n\t\t \t\tvar key = tmp.substring(0, pos);\n\t\t \t\tvar value = tmp.substring(pos + 1);\n\n\t\t \t\tif (value == mxConstants.NONE)\n\t\t \t\t{\n\t\t \t\t\tdelete style[key];\n\t\t \t\t}\n\t\t \t\telse if (mxUtils.isNumeric(value))\n\t\t \t\t{\n\t\t \t\t\tstyle[key] = parseFloat(value);\n\t\t \t\t}\n\t\t \t\telse\n\t\t \t\t{\n\t\t\t \t\tstyle[key] = value;\n\t\t \t\t}\n\t\t\t}\n\t \t\telse\n\t \t\t{\n\t \t\t\t// Merges the entries from a named style\n\t\t\t\tvar tmpStyle = this.styles[tmp];\n\t\t\t\t\n\t\t\t\tif (tmpStyle != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var key in tmpStyle)\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle[key] = tmpStyle[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t \t\t}\n\t\t}\n\t}\n\t\n\treturn style;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellState\n * \n * Represents the current state of a cell in a given <mxGraphView>.\n * \n * For edges, the edge label position is stored in <absoluteOffset>.\n * \n * The size for oversize labels can be retrieved using the boundingBox property\n * of the <text> field as shown below.\n * \n * (code)\n * var bbox = (state.text != null) ? state.text.boundingBox : null;\n * (end)\n * \n * Constructor: mxCellState\n * \n * Constructs a new object that represents the current state of the given\n * cell in the specified view.\n * \n * Parameters:\n * \n * view - <mxGraphView> that contains the state.\n * cell - <mxCell> that this state represents.\n * style - Array of key, value pairs that constitute the style.\n */\nfunction mxCellState(view, cell, style)\n{\n\tthis.view = view;\n\tthis.cell = cell;\n\tthis.style = style;\n\t\n\tthis.origin = new mxPoint();\n\tthis.absoluteOffset = new mxPoint();\n};\n\n/**\n * Extends mxRectangle.\n */\nmxCellState.prototype = new mxRectangle();\nmxCellState.prototype.constructor = mxCellState;\n\n/**\n * Variable: view\n * \n * Reference to the enclosing <mxGraphView>.\n */\nmxCellState.prototype.view = null;\n\n/**\n * Variable: cell\n *\n * Reference to the <mxCell> that is represented by this state.\n */\nmxCellState.prototype.cell = null;\n\n/**\n * Variable: style\n * \n * Contains an array of key, value pairs that represent the style of the\n * cell.\n */\nmxCellState.prototype.style = null;\n\n/**\n * Variable: invalid\n * \n * Specifies if the state is invalid. Default is true.\n */\nmxCellState.prototype.invalid = true;\n\n/**\n * Variable: origin\n *\n * <mxPoint> that holds the origin for all child cells. Default is a new\n * empty <mxPoint>.\n */\nmxCellState.prototype.origin = null;\n\n/**\n * Variable: absolutePoints\n * \n * Holds an array of <mxPoints> that represent the absolute points of an\n * edge.\n */\nmxCellState.prototype.absolutePoints = null;\n\n/**\n * Variable: absoluteOffset\n *\n * <mxPoint> that holds the absolute offset. For edges, this is the\n * absolute coordinates of the label position. For vertices, this is the\n * offset of the label relative to the top, left corner of the vertex. \n */\nmxCellState.prototype.absoluteOffset = null;\n\n/**\n * Variable: visibleSourceState\n * \n * Caches the visible source terminal state.\n */\nmxCellState.prototype.visibleSourceState = null;\n\n/**\n * Variable: visibleTargetState\n * \n * Caches the visible target terminal state.\n */\nmxCellState.prototype.visibleTargetState = null;\n\n/**\n * Variable: terminalDistance\n * \n * Caches the distance between the end points for an edge.\n */\nmxCellState.prototype.terminalDistance = 0;\n\n/**\n * Variable: length\n *\n * Caches the length of an edge.\n */\nmxCellState.prototype.length = 0;\n\n/**\n * Variable: segments\n * \n * Array of numbers that represent the cached length of each segment of the\n * edge.\n */\nmxCellState.prototype.segments = null;\n\n/**\n * Variable: shape\n * \n * Holds the <mxShape> that represents the cell graphically.\n */\nmxCellState.prototype.shape = null;\n\n/**\n * Variable: text\n * \n * Holds the <mxText> that represents the label of the cell. Thi smay be\n * null if the cell has no label.\n */\nmxCellState.prototype.text = null;\n\n/**\n * Variable: unscaledWidth\n * \n * Holds the unscaled width of the state.\n */\nmxCellState.prototype.unscaledWidth = null;\n\n/**\n * Function: getPerimeterBounds\n * \n * Returns the <mxRectangle> that should be used as the perimeter of the\n * cell.\n * \n * Parameters:\n * \n * border - Optional border to be added around the perimeter bounds.\n * bounds - Optional <mxRectangle> to be used as the initial bounds.\n */\nmxCellState.prototype.getPerimeterBounds = function(border, bounds)\n{\n\tborder = border || 0;\n\tbounds = (bounds != null) ? bounds : new mxRectangle(this.x, this.y, this.width, this.height);\n\t\n\tif (this.shape != null && this.shape.stencil != null && this.shape.stencil.aspect == 'fixed')\n\t{\n\t\tvar aspect = this.shape.stencil.computeAspect(this.style, bounds.x, bounds.y, bounds.width, bounds.height);\n\t\t\n\t\tbounds.x = aspect.x;\n\t\tbounds.y = aspect.y;\n\t\tbounds.width = this.shape.stencil.w0 * aspect.width;\n\t\tbounds.height = this.shape.stencil.h0 * aspect.height;\n\t}\n\t\n\tif (border != 0)\n\t{\n\t\tbounds.grow(border);\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: setAbsoluteTerminalPoint\n * \n * Sets the first or last point in <absolutePoints> depending on isSource.\n * \n * Parameters:\n * \n * point - <mxPoint> that represents the terminal point.\n * isSource - Boolean that specifies if the first or last point should\n * be assigned.\n */\nmxCellState.prototype.setAbsoluteTerminalPoint = function(point, isSource)\n{\n\tif (isSource)\n\t{\n\t\tif (this.absolutePoints == null)\n\t\t{\n\t\t\tthis.absolutePoints = [];\n\t\t}\n\t\t\n\t\tif (this.absolutePoints.length == 0)\n\t\t{\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.absolutePoints[0] = point;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (this.absolutePoints == null)\n\t\t{\n\t\t\tthis.absolutePoints = [];\n\t\t\tthis.absolutePoints.push(null);\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse if (this.absolutePoints.length == 1)\n\t\t{\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.absolutePoints[this.absolutePoints.length - 1] = point;\n\t\t}\n\t}\n};\n\n/**\n * Function: setCursor\n * \n * Sets the given cursor on the shape and text shape.\n */\nmxCellState.prototype.setCursor = function(cursor)\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.setCursor(cursor);\n\t}\n\t\n\tif (this.text != null)\n\t{\n\t\tthis.text.setCursor(cursor);\n\t}\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Returns the visible source or target terminal cell.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source or target cell should be\n * returned.\n */\nmxCellState.prototype.getVisibleTerminal = function(source)\n{\n\tvar tmp = this.getVisibleTerminalState(source);\n\t\n\treturn (tmp != null) ? tmp.cell : null;\n};\n\n/**\n * Function: getVisibleTerminalState\n * \n * Returns the visible source or target terminal state.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source or target state should be\n * returned.\n */\nmxCellState.prototype.getVisibleTerminalState = function(source)\n{\n\treturn (source) ? this.visibleSourceState : this.visibleTargetState;\n};\n\n/**\n * Function: setVisibleTerminalState\n * \n * Sets the visible source or target terminal state.\n * \n * Parameters:\n * \n * terminalState - <mxCellState> that represents the terminal.\n * source - Boolean that specifies if the source or target state should be set.\n */\nmxCellState.prototype.setVisibleTerminalState = function(terminalState, source)\n{\n\tif (source)\n\t{\n\t\tthis.visibleSourceState = terminalState;\n\t}\n\telse\n\t{\n\t\tthis.visibleTargetState = terminalState;\n\t}\n};\n\n/**\n * Function: getCellBounds\n * \n * Returns the unscaled, untranslated bounds.\n */\nmxCellState.prototype.getCellBounds = function()\n{\n\treturn this.cellBounds;\n};\n\n/**\n * Function: getPaintBounds\n * \n * Returns the unscaled, untranslated paint bounds. This is the same as\n * <getCellBounds> but with a 90 degree rotation if the shape's\n * isPaintBoundsInverted returns true.\n */\nmxCellState.prototype.getPaintBounds = function()\n{\n\treturn this.paintBounds;\n};\n\n/**\n * Function: updateCachedBounds\n * \n * Updates the cellBounds and paintBounds.\n */\nmxCellState.prototype.updateCachedBounds = function()\n{\n\tvar tr = this.view.translate;\n\tvar s = this.view.scale;\n\tthis.cellBounds = new mxRectangle(this.x / s - tr.x, this.y / s - tr.y, this.width / s, this.height / s);\n\tthis.paintBounds = mxRectangle.fromRectangle(this.cellBounds);\n\t\n\tif (this.shape != null && this.shape.isPaintBoundsInverted())\n\t{\n\t\tthis.paintBounds.rotate90();\n\t}\n};\n\n/**\n * Destructor: setState\n * \n * Copies all fields from the given state to this state.\n */\nmxCellState.prototype.setState = function(state)\n{\n\tthis.view = state.view;\n\tthis.cell = state.cell;\n\tthis.style = state.style;\n\tthis.absolutePoints = state.absolutePoints;\n\tthis.origin = state.origin;\n\tthis.absoluteOffset = state.absoluteOffset;\n\tthis.boundingBox = state.boundingBox;\n\tthis.terminalDistance = state.terminalDistance;\n\tthis.segments = state.segments;\n\tthis.length = state.length;\n\tthis.x = state.x;\n\tthis.y = state.y;\n\tthis.width = state.width;\n\tthis.height = state.height;\n\tthis.unscaledWidth = state.unscaledWidth;\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of this <mxPoint>.\n */\nmxCellState.prototype.clone = function()\n{\n \tvar clone = new mxCellState(this.view, this.cell, this.style);\n\n\t// Clones the absolute points\n\tif (this.absolutePoints != null)\n\t{\n\t\tclone.absolutePoints = [];\n\t\t\n\t\tfor (var i = 0; i < this.absolutePoints.length; i++)\n\t\t{\n\t\t\tclone.absolutePoints[i] = this.absolutePoints[i].clone();\n\t\t}\n\t}\n\n\tif (this.origin != null)\n\t{\n\t\tclone.origin = this.origin.clone();\n\t}\n\n\tif (this.absoluteOffset != null)\n\t{\n\t\tclone.absoluteOffset = this.absoluteOffset.clone();\n\t}\n\n\tif (this.boundingBox != null)\n\t{\n\t\tclone.boundingBox = this.boundingBox.clone();\n\t}\n\n\tclone.terminalDistance = this.terminalDistance;\n\tclone.segments = this.segments;\n\tclone.length = this.length;\n\tclone.x = this.x;\n\tclone.y = this.y;\n\tclone.width = this.width;\n\tclone.height = this.height;\n\tclone.unscaledWidth = this.unscaledWidth;\n\t\n\treturn clone;\n};\n\n/**\n * Destructor: destroy\n * \n * Destroys the state and all associated resources.\n */\nmxCellState.prototype.destroy = function()\n{\n\tthis.view.graph.cellRenderer.destroy(this);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphSelectionModel\n *\n * Implements the selection model for a graph. Here is a listener that handles\n * all removed selection cells.\n * \n * (code)\n * graph.getSelectionModel().addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var cells = evt.getProperty('added');\n *   \n *   for (var i = 0; i < cells.length; i++)\n *   {\n *     // Handle cells[i]...\n *   }\n * });\n * (end)\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the selection was changed in <changeSelection>. The\n * <code>edit</code> property contains the <mxUndoableEdit> which contains the\n * <mxSelectionChange>.\n * \n * Event: mxEvent.CHANGE\n * \n * Fires after the selection changes by executing an <mxSelectionChange>. The\n * <code>added</code> and <code>removed</code> properties contain arrays of\n * cells that have been added to or removed from the selection, respectively.\n * The names are inverted due to historic reasons. This cannot be changed.\n * \n * Constructor: mxGraphSelectionModel\n *\n * Constructs a new graph selection model for the given <mxGraph>.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphSelectionModel(graph)\n{\n\tthis.graph = graph;\n\tthis.cells = [];\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphSelectionModel.prototype = new mxEventSource();\nmxGraphSelectionModel.prototype.constructor = mxGraphSelectionModel;\n\n/**\n * Variable: doneResource\n * \n * Specifies the resource key for the status message after a long operation.\n * If the resource for this key does not exist then the value is used as\n * the status message. Default is 'done'.\n */\nmxGraphSelectionModel.prototype.doneResource = (mxClient.language != 'none') ? 'done' : '';\n\n/**\n * Variable: updatingSelectionResource\n *\n * Specifies the resource key for the status message while the selection is\n * being updated. If the resource for this key does not exist then the\n * value is used as the status message. Default is 'updatingSelection'.\n */\nmxGraphSelectionModel.prototype.updatingSelectionResource = (mxClient.language != 'none') ? 'updatingSelection' : '';\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphSelectionModel.prototype.graph = null;\n\n/**\n * Variable: singleSelection\n *\n * Specifies if only one selected item at a time is allowed.\n * Default is false.\n */\nmxGraphSelectionModel.prototype.singleSelection = false;\n\n/**\n * Function: isSingleSelection\n *\n * Returns <singleSelection> as a boolean.\n */\nmxGraphSelectionModel.prototype.isSingleSelection = function()\n{\n\treturn this.singleSelection;\n};\n\n/**\n * Function: setSingleSelection\n *\n * Sets the <singleSelection> flag.\n * \n * Parameters:\n * \n * singleSelection - Boolean that specifies the new value for\n * <singleSelection>.\n */\nmxGraphSelectionModel.prototype.setSingleSelection = function(singleSelection)\n{\n\tthis.singleSelection = singleSelection;\n};\n\n/**\n * Function: isSelected\n *\n * Returns true if the given <mxCell> is selected.\n */\nmxGraphSelectionModel.prototype.isSelected = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\treturn mxUtils.indexOf(this.cells, cell) >= 0;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: isEmpty\n *\n * Returns true if no cells are currently selected.\n */\nmxGraphSelectionModel.prototype.isEmpty = function()\n{\n\treturn this.cells.length == 0;\n};\n\n/**\n * Function: clear\n *\n * Clears the selection and fires a <change> event if the selection was not\n * empty.\n */\nmxGraphSelectionModel.prototype.clear = function()\n{\n\tthis.changeSelection(null, this.cells);\n};\n\n/**\n * Function: setCell\n *\n * Selects the specified <mxCell> using <setCells>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n */\nmxGraphSelectionModel.prototype.setCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.setCells([cell]);\n\t}\n};\n\n/**\n * Function: setCells\n *\n * Selects the given array of <mxCells> and fires a <change> event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n */\nmxGraphSelectionModel.prototype.setCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tif (this.singleSelection)\n\t\t{\n\t\t\tcells = [this.getFirstSelectableCell(cells)];\n\t\t}\n\t\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\t\n\t\t}\n\n\t\tthis.changeSelection(tmp, this.cells);\n\t}\n};\n\n/**\n * Function: getFirstSelectableCell\n *\n * Returns the first selectable cell in the given array of cells.\n */\nmxGraphSelectionModel.prototype.getFirstSelectableCell = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\treturn cells[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: addCell\n * \n * Adds the given <mxCell> to the selection and fires a <select> event.\n * \n * Parameters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.addCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.addCells([cell]);\n\t}\n};\n\n/**\n * Function: addCells\n * \n * Adds the given array of <mxCells> to the selection and fires a <select>\n * event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to add to the selection.\n */\nmxGraphSelectionModel.prototype.addCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar remove = null;\n\t\t\n\t\tif (this.singleSelection)\n\t\t{\n\t\t\tremove = this.cells;\n\t\t\tcells = [this.getFirstSelectableCell(cells)];\n\t\t}\n\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (!this.isSelected(cells[i]) &&\n\t\t\t\tthis.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\t\n\t\t}\n\n\t\tthis.changeSelection(tmp, remove);\n\t}\n};\n\n/**\n * Function: removeCell\n *\n * Removes the specified <mxCell> from the selection and fires a <select>\n * event for the remaining cells.\n * \n * Parameters:\n * \n * cell - <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.removeCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.removeCells([cell]);\n\t}\n};\n\n/**\n * Function: removeCells\n */\nmxGraphSelectionModel.prototype.removeCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.isSelected(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.changeSelection(null, tmp);\t\n\t}\n};\n\n/**\n * Function: changeSelection\n *\n * Inner callback to add the specified <mxCell> to the selection. No event\n * is fired in this implementation.\n * \n * Paramters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.changeSelection = function(added, removed)\n{\n\tif ((added != null &&\n\t\tadded.length > 0 &&\n\t\tadded[0] != null) ||\n\t\t(removed != null &&\n\t\tremoved.length > 0 &&\n\t\tremoved[0] != null))\n\t{\n\t\tvar change = new mxSelectionChange(this, added, removed);\n\t\tchange.execute();\n\t\tvar edit = new mxUndoableEdit(this, false);\n\t\tedit.add(change);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n\t}\n};\n\n/**\n * Function: cellAdded\n *\n * Inner callback to add the specified <mxCell> to the selection. No event\n * is fired in this implementation.\n * \n * Paramters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.cellAdded = function(cell)\n{\n\tif (cell != null &&\n\t\t!this.isSelected(cell))\n\t{\n\t\tthis.cells.push(cell);\n\t}\n};\n\n/**\n * Function: cellRemoved\n *\n * Inner callback to remove the specified <mxCell> from the selection. No\n * event is fired in this implementation.\n * \n * Parameters:\n * \n * cell - <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.cellRemoved = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tvar index = mxUtils.indexOf(this.cells, cell);\n\t\t\n\t\tif (index >= 0)\n\t\t{\n\t\t\tthis.cells.splice(index, 1);\n\t\t}\n\t}\n};\n\n/**\n * Class: mxSelectionChange\n *\n * Action to change the current root in a view.\n *\n * Constructor: mxCurrentRootChange\n *\n * Constructs a change of the current root in the given view.\n */\nfunction mxSelectionChange(selectionModel, added, removed)\n{\n\tthis.selectionModel = selectionModel;\n\tthis.added = (added != null) ? added.slice() : null;\n\tthis.removed = (removed != null) ? removed.slice() : null;\n};\n\n/**\n * Function: execute\n *\n * Changes the current root of the view.\n */\nmxSelectionChange.prototype.execute = function()\n{\n\tvar t0 = mxLog.enter('mxSelectionChange.execute');\n\twindow.status = mxResources.get(\n\t\tthis.selectionModel.updatingSelectionResource) ||\n\t\tthis.selectionModel.updatingSelectionResource;\n\n\tif (this.removed != null)\n\t{\n\t\tfor (var i = 0; i < this.removed.length; i++)\n\t\t{\n\t\t\tthis.selectionModel.cellRemoved(this.removed[i]);\n\t\t}\n\t}\n\n\tif (this.added != null)\n\t{\n\t\tfor (var i = 0; i < this.added.length; i++)\n\t\t{\n\t\t\tthis.selectionModel.cellAdded(this.added[i]);\n\t\t}\n\t}\n\t\n\tvar tmp = this.added;\n\tthis.added = this.removed;\n\tthis.removed = tmp;\n\n\twindow.status = mxResources.get(this.selectionModel.doneResource) ||\n\t\tthis.selectionModel.doneResource;\n\tmxLog.leave('mxSelectionChange.execute', t0);\n\t\n\tthis.selectionModel.fireEvent(new mxEventObject(mxEvent.CHANGE,\n\t\t\t'added', this.added, 'removed', this.removed));\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellEditor\n *\n * In-place editor for the graph. To control this editor, use\n * <mxGraph.invokesStopCellEditing>, <mxGraph.enterStopsCellEditing> and\n * <mxGraph.escapeEnabled>. If <mxGraph.enterStopsCellEditing> is true then\n * ctrl-enter or shift-enter can be used to create a linefeed. The F2 and\n * escape keys can always be used to stop editing.\n * \n * To customize the location of the textbox in the graph, override\n * <getEditorBounds> as follows:\n * \n * (code)\n * graph.cellEditor.getEditorBounds = function(state)\n * {\n *   var result = mxCellEditor.prototype.getEditorBounds.apply(this, arguments);\n *   \n *   if (this.graph.getModel().isEdge(state.cell))\n *   {\n *     result.x = state.getCenterX() - result.width / 2;\n *     result.y = state.getCenterY() - result.height / 2;\n *   }\n *   \n *   return result;\n * };\n * (end)\n * \n * Note that this hook is only called if <autoSize> is false. If <autoSize> is true,\n * then <mxShape.getLabelBounds> is used to compute the current bounds of the textbox.\n * \n * The textarea uses the mxCellEditor CSS class. You can modify this class in\n * your custom CSS. Note: You should modify the CSS after loading the client\n * in the page.\n *\n * Example:\n * \n * To only allow numeric input in the in-place editor, use the following code.\n *\n * (code)\n * var text = graph.cellEditor.textarea;\n * \n * mxEvent.addListener(text, 'keydown', function (evt)\n * {\n *   if (!(evt.keyCode >= 48 && evt.keyCode <= 57) &&\n *       !(evt.keyCode >= 96 && evt.keyCode <= 105))\n *   {\n *     mxEvent.consume(evt);\n *   }\n * }); \n * (end)\n * \n * Placeholder:\n * \n * To implement a placeholder for cells without a label, use the\n * <emptyLabelText> variable.\n * \n * Resize in Chrome:\n * \n * Resize of the textarea is disabled by default. If you want to enable\n * this feature extend <init> and set this.textarea.style.resize = ''.\n * \n * To start editing on a key press event, the container of the graph\n * should have focus or a focusable parent should be used to add the\n * key press handler as follows.\n * \n * (code)\n * mxEvent.addListener(graph.container, 'keypress', mxUtils.bind(this, function(evt)\n * {\n *   if (!graph.isEditing() && !graph.isSelectionEmpty() && evt.which !== 0 &&\n *       !mxEvent.isAltDown(evt) && !mxEvent.isControlDown(evt) && !mxEvent.isMetaDown(evt))\n *   {\n *     graph.startEditing();\n *     \n *     if (mxClient.IS_FF)\n *     {\n *       graph.cellEditor.textarea.value = String.fromCharCode(evt.which);\n *     }\n *   }\n * }));\n * (end)\n * \n * To allow focus for a DIV, and hence to receive key press events, some browsers\n * require it to have a valid tabindex attribute. In this case the following\n * code may be used to keep the container focused.\n * \n * (code)\n * var graphFireMouseEvent = graph.fireMouseEvent;\n * graph.fireMouseEvent = function(evtName, me, sender)\n * {\n *   if (evtName == mxEvent.MOUSE_DOWN)\n *   {\n *     this.container.focus();\n *   }\n *   \n *   graphFireMouseEvent.apply(this, arguments);\n * };\n * (end)\n *\n * Constructor: mxCellEditor\n *\n * Constructs a new in-place editor for the specified graph.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxCellEditor(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Stops editing after zoom changes\n\tthis.zoomHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (this.graph.isEditing())\n\t\t{\n\t\t\tthis.resize();\n\t\t}\n\t});\n\t\n\tthis.graph.view.addListener(mxEvent.SCALE, this.zoomHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.zoomHandler);\n\t\n\t// Adds handling of deleted cells while editing\n\tthis.changeHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.editingCell != null && this.graph.getView().getState(this.editingCell) == null)\n\t\t{\n\t\t\tthis.stopEditing(true);\n\t\t}\n\t});\n\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellEditor.prototype.graph = null;\n\n/**\n * Variable: textarea\n *\n * Holds the DIV that is used for text editing. Note that this may be null before the first\n * edit. Instantiated in <init>.\n */\nmxCellEditor.prototype.textarea = null;\n\n/**\n * Variable: editingCell\n * \n * Reference to the <mxCell> that is currently being edited.\n */\nmxCellEditor.prototype.editingCell = null;\n\n/**\n * Variable: trigger\n * \n * Reference to the event that was used to start editing.\n */\nmxCellEditor.prototype.trigger = null;\n\n/**\n * Variable: modified\n * \n * Specifies if the label has been modified.\n */\nmxCellEditor.prototype.modified = false;\n\n/**\n * Variable: autoSize\n * \n * Specifies if the textarea should be resized while the text is being edited.\n * Default is true.\n */\nmxCellEditor.prototype.autoSize = true;\n\n/**\n * Variable: selectText\n * \n * Specifies if the text should be selected when editing starts. Default is\n * true.\n */\nmxCellEditor.prototype.selectText = true;\n\n/**\n * Variable: emptyLabelText\n * \n * Text to be displayed for empty labels. Default is '' or '<br>' in Firefox as\n * a workaround for the missing cursor bug for empty content editable. This can\n * be set to eg. \"[Type Here]\" to easier visualize editing of empty labels. The\n * value is only displayed before the first keystroke and is never used as the\n * actual editing value.\n */\nmxCellEditor.prototype.emptyLabelText = (mxClient.IS_FF) ? '<br>' : '';\n\n/**\n * Variable: escapeCancelsEditing\n * \n * If true, pressing the escape key will stop editing and not accept the new\n * value. Change this to false to accept the new value on escape, and cancel\n * editing on Shift+Escape instead. Default is true.\n */\nmxCellEditor.prototype.escapeCancelsEditing = true;\n\n/**\n * Variable: textNode\n * \n * Reference to the label DOM node that has been hidden.\n */\nmxCellEditor.prototype.textNode = '';\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the textarea. Default is 5.\n */\nmxCellEditor.prototype.zIndex = 5;\n\n/**\n * Variable: minResize\n * \n * Defines the minimum width and height to be used in <resize>. Default is 0x20px.\n */\nmxCellEditor.prototype.minResize = new mxRectangle(0, 20);\n\n/**\n * Variable: wordWrapPadding\n * \n * Correction factor for word wrapping width. Default is 2 in quirks, 0 in IE\n * 11 and 1 in all other browsers and modes.\n */\nmxCellEditor.prototype.wordWrapPadding = (mxClient.IS_QUIRKS) ? 2 : (!mxClient.IS_IE11) ? 1 : 0;\n\n/**\n * Variable: blurEnabled\n *\n * If <focusLost> should be called if <textarea> loses the focus. Default is false.\n */\nmxCellEditor.prototype.blurEnabled = false;\n\n/**\n * Variable: initialValue\n * \n * Holds the initial editing value to check if the current value was modified.\n */\nmxCellEditor.prototype.initialValue = null;\n\n/**\n * Function: init\n *\n * Creates the <textarea> and installs the event listeners. The key handler\n * updates the <modified> state.\n */\nmxCellEditor.prototype.init = function ()\n{\n\tthis.textarea = document.createElement('div');\n\tthis.textarea.className = 'mxCellEditor mxPlainTextEditor';\n\tthis.textarea.contentEditable = true;\n\t\n\t// Workaround for selection outside of DIV if height is 0\n\tif (mxClient.IS_GC)\n\t{\n\t\tthis.textarea.style.minHeight = '1em';\n\t}\n\n\tthis.textarea.style.position = ((this.isLegacyEditor())) ? 'absolute' : 'relative';\n\tthis.installListeners(this.textarea);\n};\n\n/**\n * Function: applyValue\n * \n * Called in <stopEditing> if cancel is false to invoke <mxGraph.labelChanged>.\n */\nmxCellEditor.prototype.applyValue = function(state, value)\n{\n\tthis.graph.labelChanged(state.cell, value, this.trigger);\n};\n\n/**\n * Function: getInitialValue\n * \n * Gets the initial editing value for the given cell.\n */\nmxCellEditor.prototype.getInitialValue = function(state, trigger)\n{\n\tvar result = mxUtils.htmlEntities(this.graph.getEditingValue(state.cell, trigger), false);\n\t\n    // Workaround for trailing line breaks being ignored in the editor\n\tif (!mxClient.IS_QUIRKS && document.documentMode != 8 && document.documentMode != 9 &&\n\t\tdocument.documentMode != 10)\n\t{\n\t\tresult = mxUtils.replaceTrailingNewlines(result, '<div><br></div>');\n\t}\n    \n    return result.replace(/\\n/g, '<br>');\n};\n\n/**\n * Function: getCurrentValue\n * \n * Returns the current editing value.\n */\nmxCellEditor.prototype.getCurrentValue = function(state)\n{\n\treturn mxUtils.extractTextWithWhitespace(this.textarea.childNodes);\n};\n\n/**\n * Function: isCancelEditingKeyEvent\n * \n * Returns true if <escapeCancelsEditing> is true and shift, control and meta\n * are not pressed.\n */\nmxCellEditor.prototype.isCancelEditingKeyEvent = function(evt)\n{\n\treturn this.escapeCancelsEditing || mxEvent.isShiftDown(evt) || mxEvent.isControlDown(evt) || mxEvent.isMetaDown(evt);\n};\n\n/**\n * Function: installListeners\n * \n * Installs listeners for focus, change and standard key event handling.\n */\nmxCellEditor.prototype.installListeners = function(elt)\n{\n\t// Applies value if focus is lost\n\tmxEvent.addListener(elt, 'blur', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.blurEnabled)\n\t\t{\n\t\t\tthis.focusLost(evt);\n\t\t}\n\t}));\n\n\t// Updates modified state and handles placeholder text\n\tmxEvent.addListener(elt, 'keydown', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (!mxEvent.isConsumed(evt))\n\t\t{\n\t\t\tif (this.isStopEditingEvent(evt))\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(false);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t\telse if (evt.keyCode == 27 /* Escape */)\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(this.isCancelEditingKeyEvent(evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t}\n\t}));\n\n\t// Keypress only fires if printable key was pressed and handles removing the empty placeholder\n\tvar keypressHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Clears the initial empty label on the first keystroke\n\t\t\t// and workaround for FF which fires keypress for delete and backspace\n\t\t\tif (this.clearOnChange && elt.innerHTML == this.getEmptyLabelText() &&\n\t\t\t\t(!mxClient.IS_FF || (evt.keyCode != 8 /* Backspace */ && evt.keyCode != 46 /* Delete */)))\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t\telt.innerHTML = '';\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, 'keypress', keypressHandler);\n\tmxEvent.addListener(elt, 'paste', keypressHandler);\n\t\n\t// Handler for updating the empty label text value after a change\n\tvar keyupHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Uses an optional text value for sempty labels which is cleared\n\t\t\t// when the first keystroke appears. This makes it easier to see\n\t\t\t// that a label is being edited even if the label is empty.\n\t\t\t// In Safari and FF, an empty text is represented by <BR> which isn't enough to force a valid size\n\t\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t\t{\n\t\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\t\tthis.clearOnChange = this.textarea.innerHTML.length > 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keyup', keyupHandler);\n\tmxEvent.addListener(elt, 'cut', keyupHandler);\n\tmxEvent.addListener(elt, 'paste', keyupHandler);\n\n\t// Adds automatic resizing of the textbox while typing using input, keyup and/or DOM change events\n\tvar evtName = (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keydown';\n\t\n\tvar resizeHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null && this.autoSize && !mxEvent.isConsumed(evt))\n\t\t{\n\t\t\t// Asynchronous is needed for keydown and shows better results for input events overall\n\t\t\t// (ie non-blocking and cases where the offsetWidth/-Height was wrong at this time)\n\t\t\tif (this.resizeThread != null)\n\t\t\t{\n\t\t\t\twindow.clearTimeout(this.resizeThread);\n\t\t\t}\n\t\t\t\n\t\t\tthis.resizeThread = window.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resizeThread = null;\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t});\n\t\n\tmxEvent.addListener(elt, evtName, resizeHandler);\n\n\tif (document.documentMode >= 9)\n\t{\n\t\tmxEvent.addListener(elt, 'DOMNodeRemoved', resizeHandler);\n\t\tmxEvent.addListener(elt, 'DOMNodeInserted', resizeHandler);\n\t}\n\telse\n\t{\n\t\tmxEvent.addListener(elt, 'cut', resizeHandler);\n\t\tmxEvent.addListener(elt, 'paste', resizeHandler);\n\t}\n};\n\n/**\n * Function: isStopEditingEvent\n * \n * Returns true if the given keydown event should stop cell editing. This\n * returns true if F2 is pressed of if <mxGraph.enterStopsCellEditing> is true\n * and enter is pressed without control or shift.\n */\nmxCellEditor.prototype.isStopEditingEvent = function(evt)\n{\n\treturn evt.keyCode == 113 /* F2 */ || (this.graph.isEnterStopsCellEditing() &&\n\t\tevt.keyCode == 13 /* Enter */ && !mxEvent.isControlDown(evt) &&\n\t\t!mxEvent.isShiftDown(evt));\n};\n\n/**\n * Function: isEventSource\n * \n * Returns true if this editor is the source for the given native event.\n */\nmxCellEditor.prototype.isEventSource = function(evt)\n{\n\treturn mxEvent.getSource(evt) == this.textarea;\n};\n\n/**\n * Function: resize\n * \n * Returns <modified>.\n */\nmxCellEditor.prototype.resize = function()\n{\n\tvar state = this.graph.getView().getState(this.editingCell);\n\t\n\tif (state == null)\n\t{\n\t\tthis.stopEditing(true);\n\t}\n\telse if (this.textarea != null)\n\t{\n\t\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n \t\tvar scale = this.graph.getView().scale;\n \t\tvar m = null;\n\t\t\n\t\tif (!this.autoSize || (state.style[mxConstants.STYLE_OVERFLOW] == 'fill'))\n\t\t{\n\t\t\t// Specifies the bounds of the editor box\n\t\t\tthis.bounds = this.getEditorBounds(state);\n\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + 'px';\n\t\t\tthis.textarea.style.height = Math.round(this.bounds.height / scale) + 'px';\n\t\t\t\n\t\t\t// FIXME: Offset when scaled\n\t\t\tif (document.documentMode == 8 || mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.round(this.bounds.x) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.round(this.bounds.y) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x + 1)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y + 1)) + 'px';\n\t\t\t}\n\t\t\t\n\t\t\t// Installs native word wrapping and avoids word wrap for empty label placeholder\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + this.wordWrapPadding + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t \t{\n\t \t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\tm = (state.text != null) ? state.text.margin : null;\n\t\t\t\n\t\t\tif (m == null)\n\t\t\t{\n\t\t\t\tm = mxUtils.getAlignmentAsPoint(mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_CENTER),\n\t\t\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE));\n\t\t\t}\n\t\t\t\n\t \t\tif (isEdge)\n\t\t\t{\n\t\t\t\tthis.bounds = new mxRectangle(state.absoluteOffset.x, state.absoluteOffset.y, 0, 0);\n\t\t\t\t\n\t\t\t\tif (lw != null)\n\t\t\t \t{\n\t\t\t\t\tvar tmp = (parseFloat(lw) + 2) * scale;\n\t\t\t\t\tthis.bounds.width = tmp;\n\t\t\t\t\tthis.bounds.x += m.x * tmp;\n\t\t\t \t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar bds = mxRectangle.fromRectangle(state);\n\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\tbds = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(bds) : bds;\n\t\t\t \t\n\t\t\t \tif (lw != null)\n\t\t\t \t{\n\t\t\t \t\tbds.width = parseFloat(lw) * scale;\n\t\t\t \t}\n\t\t\t \t\n\t\t\t \tif (!state.view.graph.cellRenderer.legacySpacing || state.style[mxConstants.STYLE_OVERFLOW] != 'width')\n\t\t\t \t{\n\t\t\t\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 2) * scale;\n\t\t\t\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\t\t\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\t\t\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\t\t\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\t\t\t\t\n\t\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\t\tbds = new mxRectangle(bds.x + spacingLeft, bds.y + spacingTop,\n\t\t\t\t\t\tbds.width - ((hpos == mxConstants.ALIGN_CENTER && lw == null) ? (spacingLeft + spacingRight) : 0),\n\t\t\t\t\t\tbds.height - ((vpos == mxConstants.ALIGN_MIDDLE) ? (spacingTop + spacingBottom) : 0));\n\t\t\t \t}\n\n\t\t\t\tthis.bounds = new mxRectangle(bds.x + state.absoluteOffset.x, bds.y + state.absoluteOffset.y, bds.width, bds.height);\n\t\t\t}\n\n\t\t\t// Needed for word wrap inside text blocks with oversize lines to match the final result where\n\t \t\t// the width of the longest line is used as the reference for text alignment in the cell\n\t \t\t// TODO: Fix word wrapping preview for edge labels in helloworld.html\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t \t\t// Forces automatic reflow if text is removed from an oversize label and normal word wrap\n\t\t\t\tvar tmp = Math.round(this.bounds.width / ((document.documentMode == 8) ? scale : scale)) + this.wordWrapPadding;\n\n\t\t\t\tif (this.textarea.style.position != 'relative')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = tmp + 'px';\n\t\t\t\t\t\n\t\t\t\t\tif (this.textarea.scrollWidth > tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.textarea.style.width = this.textarea.scrollWidth + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.maxWidth = tmp + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// KNOWN: Trailing cursor in IE9 quirks mode is not visible\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\tthis.textarea.style.width = '';\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\t// Workaround for wrong measuring in IE8 standards\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\tthis.textarea.style.zoom = '1';\n\t\t\t\tthis.textarea.style.height = 'auto';\n\t\t\t}\n\t\t\t\n\t\t\tvar ow = this.textarea.scrollWidth;\n\t\t\tvar oh = this.textarea.scrollHeight;\n\t\t\t\n\t\t\t// TODO: Update CSS width and height if smaller than minResize or remove minResize\n\t\t\t//if (this.minResize != null)\n\t\t\t//{\n\t\t\t//\tow = Math.max(ow, this.minResize.width);\n\t\t\t//\toh = Math.max(oh, this.minResize.height);\n\t\t\t//}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\t// LATER: Scaled wrapping and position is wrong in IE8\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil((this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2) / scale)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil((this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1) / scale)) + 'px';\n\t\t\t\t// Workaround for wrong event handling width and height\n\t\t\t\tthis.textarea.style.width = Math.round(ow * scale) + 'px';\n\t\t\t\tthis.textarea.style.height = Math.round(oh * scale) + 'px';\n\t\t\t}\n\t\t\telse if (mxClient.IS_QUIRKS)\n\t\t\t{\t\t\t\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil(this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil(this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1)) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x - m.x * (this.bounds.width - 2)) + 1) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y - m.y * (this.bounds.height - 4) + ((m.y == -1) ? 3 : 0)) + 1) + 'px';\n\t\t\t}\n\t \t}\n\n\t\tif (mxClient.IS_VML)\n\t\t{\n\t\t\tthis.textarea.style.zoom = scale;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transformOrigin', '0px 0px');\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transform',\n\t\t\t\t'scale(' + scale + ',' + scale + ')' + ((m == null) ? '' :\n\t\t\t\t' translate(' + (m.x * 100) + '%,' + (m.y * 100) + '%)'));\n\t\t}\n\t}\n};\n\n/**\n * Function: focusLost\n *\n * Called if the textarea has lost focus.\n */\nmxCellEditor.prototype.focusLost = function()\n{\n\tthis.stopEditing(!this.graph.isInvokesStopCellEditing());\n};\n\n/**\n * Function: getBackgroundColor\n * \n * Returns the background color for the in-place editor. This implementation\n * always returns null.\n */\nmxCellEditor.prototype.getBackgroundColor = function(state)\n{\n\treturn null;\n};\n\n/**\n * Function: isLegacyEditor\n * \n * Returns true if max-width is not supported or if the SVG root element in\n * in the graph does not have CSS position absolute. In these cases the text\n * editor must use CSS position absolute to avoid an offset but it will have\n * a less accurate line wrapping width during the text editing preview. This\n * implementation returns true for IE8- and quirks mode or if the CSS position\n * of the SVG element is not absolute.\n */\nmxCellEditor.prototype.isLegacyEditor = function()\n{\n\tif (mxClient.IS_VML)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\tvar absoluteRoot = false;\n\t\t\n\t\tif (mxClient.IS_SVG)\n\t\t{\n\t\t\tvar root = this.graph.view.getDrawPane().ownerSVGElement;\n\t\t\t\n\t\t\tif (root != null)\n\t\t\t{\n\t\t\t\tabsoluteRoot = mxUtils.getCurrentStyle(root).position == 'absolute';\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn !absoluteRoot;\n\t}\n};\n\n/**\n * Function: startEditing\n *\n * Starts the editor for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> to start editing.\n * trigger - Optional mouse event that triggered the editor.\n */\nmxCellEditor.prototype.startEditing = function(cell, trigger)\n{\n\tthis.stopEditing(true);\n\t\n\t// Creates new textarea instance\n\tif (this.textarea == null)\n\t{\n\t\tthis.init();\n\t}\n\t\n\tif (this.graph.tooltipHandler != null)\n\t{\n\t\tthis.graph.tooltipHandler.hideTooltip();\n\t}\n\t\n\tvar state = this.graph.getView().getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\t// Configures the style of the in-place editor\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar size = mxUtils.getValue(state.style, mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE);\n\t\tvar family = mxUtils.getValue(state.style, mxConstants.STYLE_FONTFAMILY, mxConstants.DEFAULT_FONTFAMILY);\n\t\tvar color = mxUtils.getValue(state.style, mxConstants.STYLE_FONTCOLOR, 'black');\n\t\tvar align = mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_LEFT);\n\t\tvar bold = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_BOLD) == mxConstants.FONT_BOLD;\n\t\tvar italic = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC;\n\t\tvar uline = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE;\n\t\t\n\t\tthis.textarea.style.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? Math.round(size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\t\tthis.textarea.style.backgroundColor = this.getBackgroundColor(state);\n\t\tthis.textarea.style.textDecoration = (uline) ? 'underline' : '';\n\t\tthis.textarea.style.fontWeight = (bold) ? 'bold' : 'normal';\n\t\tthis.textarea.style.fontStyle = (italic) ? 'italic' : '';\n\t\tthis.textarea.style.fontSize = Math.round(size) + 'px';\n\t\tthis.textarea.style.zIndex = this.zIndex;\n\t\tthis.textarea.style.fontFamily = family;\n\t\tthis.textarea.style.textAlign = align;\n\t\tthis.textarea.style.outline = 'none';\n\t\tthis.textarea.style.color = color;\n\t\t\n\t\tvar dir = this.textDirection = mxUtils.getValue(state.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO)\n\t\t{\n\t\t\tif (state != null && state.text != null && state.text.dialect != mxConstants.DIALECT_STRICTHTML &&\n\t\t\t\t!mxUtils.isNode(state.text.value))\n\t\t\t{\n\t\t\t\tdir = state.text.getAutoDirection();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tthis.textarea.setAttribute('dir', dir);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.textarea.removeAttribute('dir');\n\t\t}\n\n\t\t// Sets the initial editing value\n\t\tthis.textarea.innerHTML = this.getInitialValue(state, trigger) || '';\n\t\tthis.initialValue = this.textarea.innerHTML;\n\n\t\t// Uses an optional text value for empty labels which is cleared\n\t\t// when the first keystroke appears. This makes it easier to see\n\t\t// that a label is being edited even if the label is empty.\n\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t{\n\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\tthis.clearOnChange = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.clearOnChange = this.textarea.innerHTML == this.getEmptyLabelText();\n\t\t}\n\n\t\tthis.graph.container.appendChild(this.textarea);\n\t\t\n\t\t// Update this after firing all potential events that could update the cleanOnChange flag\n\t\tthis.editingCell = cell;\n\t\tthis.trigger = trigger;\n\t\tthis.textNode = null;\n\n\t\tif (state.text != null && this.isHideLabel(state))\n\t\t{\n\t\t\tthis.textNode = state.text.node;\n\t\t\tthis.textNode.style.visibility = 'hidden';\n\t\t}\n\n\t\t// Workaround for initial offsetHeight not ready for heading in markup\n\t\tif (this.autoSize && (this.graph.model.isEdge(state.cell) || state.style[mxConstants.STYLE_OVERFLOW] != 'fill'))\n\t\t{\n\t\t\twindow.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t\t\n\t\tthis.resize();\n\t\t\n\t\t// Workaround for NS_ERROR_FAILURE in FF\n\t\ttry\n\t\t{\n\t\t\t// Prefers blinking cursor over no selected text if empty\n\t\t\tthis.textarea.focus();\n\t\t\t\n\t\t\tif (this.isSelectText() && this.textarea.innerHTML.length > 0 &&\n\t\t\t\t(this.textarea.innerHTML != this.getEmptyLabelText() || !this.clearOnChange))\n\t\t\t{\n\t\t\t\tdocument.execCommand('selectAll', false, null);\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\t}\n};\n\n/**\n * Function: isSelectText\n * \n * Returns <selectText>.\n */\nmxCellEditor.prototype.isSelectText = function()\n{\n\treturn this.selectText;\n};\n\n/**\n * Function: isSelectText\n * \n * Returns <selectText>.\n */\nmxCellEditor.prototype.clearSelection = function()\n{\n\tvar selection = null;\n\t\n\tif (window.getSelection)\n\t{\n\t\tselection = window.getSelection();\n\t}\n\telse if (document.selection)\n\t{\n\t\tselection = document.selection;\n\t}\n\t\n\tif (selection != null)\n\t{\n\t\tif (selection.empty)\n\t\t{\n\t\t\tselection.empty();\n\t\t}\n\t\telse if (selection.removeAllRanges)\n\t\t{\n\t\t\tselection.removeAllRanges();\n\t\t}\n\t}\n};\n\n/**\n * Function: stopEditing\n *\n * Stops the editor and applies the value if cancel is false.\n */\nmxCellEditor.prototype.stopEditing = function(cancel)\n{\n\tcancel = cancel || false;\n\t\n\tif (this.editingCell != null)\n\t{\n\t\tif (this.textNode != null)\n\t\t{\n\t\t\tthis.textNode.style.visibility = 'visible';\n\t\t\tthis.textNode = null;\n\t\t}\n\n\t\tvar state = (!cancel) ? this.graph.view.getState(this.editingCell) : null;\n\n\t\tvar initial = this.initialValue;\n\t\tthis.initialValue = null;\n\t\tthis.editingCell = null;\n\t\tthis.trigger = null;\n\t\tthis.bounds = null;\n\t\tthis.textarea.blur();\n\t\tthis.clearSelection();\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tif (this.clearOnChange && this.textarea.innerHTML == this.getEmptyLabelText())\n\t\t{\n\t\t\tthis.textarea.innerHTML = '';\n\t\t\tthis.clearOnChange = false;\n\t\t}\n\t\t\n\t\tif (state != null && this.textarea.innerHTML != initial)\n\t\t{\n\t\t\tthis.prepareTextarea();\n\t\t\tvar value = this.getCurrentValue(state);\n\t\t\t\n\t\t\tif (value != null)\n\t\t\t{\n\t\t\t\tthis.applyValue(state, value);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Forces new instance on next edit for undo history reset\n\t\tmxEvent.release(this.textarea);\n\t\tthis.textarea = null;\n\t}\n};\n\n/**\n * Function: prepareTextarea\n * \n * Prepares the textarea for getting its value in <stopEditing>.\n * This implementation removes the extra trailing linefeed in Firefox.\n */\nmxCellEditor.prototype.prepareTextarea = function()\n{\n\tif (mxClient.IS_FF && this.textarea.lastChild != null &&\n\t\tthis.textarea.lastChild.nodeName == 'BR')\n\t{\n\t\tthis.textarea.removeChild(this.textarea.lastChild);\n\t}\n};\n\n/**\n * Function: isHideLabel\n * \n * Returns true if the label should be hidden while the cell is being\n * edited.\n */\nmxCellEditor.prototype.isHideLabel = function(state)\n{\n\treturn true;\n};\n\n/**\n * Function: getMinimumSize\n * \n * Returns the minimum width and height for editing the given state.\n */\nmxCellEditor.prototype.getMinimumSize = function(state)\n{\n\tvar scale = this.graph.getView().scale;\n\t\n\treturn new mxRectangle(0, 0, (state.text == null) ? 30 : state.text.size * scale + 20,\n\t\t\t(this.textarea.style.textAlign == 'left') ? 120 : 40);\n};\n\n/**\n * Function: getEditorBounds\n * \n * Returns the <mxRectangle> that defines the bounds of the editor.\n */\nmxCellEditor.prototype.getEditorBounds = function(state)\n{\n\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n\tvar scale = this.graph.getView().scale;\n\tvar minSize = this.getMinimumSize(state);\n\tvar minWidth = minSize.width;\n \tvar minHeight = minSize.height;\n \tvar result = null;\n \t\n \tif (!isEdge && state.view.graph.cellRenderer.legacySpacing && state.style[mxConstants.STYLE_OVERFLOW] == 'fill')\n \t{\n \t\tresult = state.shape.getLabelBounds(mxRectangle.fromRectangle(state));\n \t}\n \telse\n \t{\n\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 0) * scale;\n\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\n\t \tresult = new mxRectangle(state.x, state.y,\n\t \t\t Math.max(minWidth, state.width - spacingLeft - spacingRight),\n\t \t\t Math.max(minHeight, state.height - spacingTop - spacingBottom));\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\t\n\t\tresult = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(result) : result;\n\t\n\t\tif (isEdge)\n\t\t{\n\t\t\tresult.x = state.absoluteOffset.x;\n\t\t\tresult.y = state.absoluteOffset.y;\n\t\n\t\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t\t{\n\t\t\t\t// Workaround for label containing just spaces in which case\n\t\t\t\t// the bounding box location contains negative numbers \n\t\t\t\tif (state.text.boundingBox.x > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.x = state.text.boundingBox.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.y > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.y = state.text.boundingBox.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tresult.x = Math.min(result.x, state.text.boundingBox.x);\n\t\t\tresult.y = Math.min(result.y, state.text.boundingBox.y);\n\t\t}\n\t\n\t\tresult.x += spacingLeft;\n\t\tresult.y += spacingTop;\n\t\n\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tif (!isEdge)\n\t\t\t{\n\t\t\t\tresult.width = Math.max(result.width, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(result.height, state.text.boundingBox.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.width = Math.max(minWidth, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(minHeight, state.text.boundingBox.height);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Applies the horizontal and vertical label positions\n\t\tif (this.graph.getModel().isVertex(state.cell))\n\t\t{\n\t\t\tvar horizontal = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\n\t\t\tif (horizontal == mxConstants.ALIGN_LEFT)\n\t\t\t{\n\t\t\t\tresult.x -= state.width;\n\t\t\t}\n\t\t\telse if (horizontal == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tresult.x += state.width;\n\t\t\t}\n\t\n\t\t\tvar vertical = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\n\t\t\tif (vertical == mxConstants.ALIGN_TOP)\n\t\t\t{\n\t\t\t\tresult.y -= state.height;\n\t\t\t}\n\t\t\telse if (vertical == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tresult.y += state.height;\n\t\t\t}\n\t\t}\n \t}\n \t\n \treturn new mxRectangle(Math.round(result.x), Math.round(result.y), Math.round(result.width), Math.round(result.height));\n};\n\n/**\n * Function: getEmptyLabelText\n *\n * Returns the initial label value to be used of the label of the given\n * cell is empty. This label is displayed and cleared on the first keystroke.\n * This implementation returns <emptyLabelText>.\n * \n * Parameters:\n * \n * cell - <mxCell> for which a text for an empty editing box should be\n * returned.\n */\nmxCellEditor.prototype.getEmptyLabelText = function (cell)\n{\n\treturn this.emptyLabelText;\n};\n\n/**\n * Function: getEditingCell\n *\n * Returns the cell that is currently being edited or null if no cell is\n * being edited.\n */\nmxCellEditor.prototype.getEditingCell = function ()\n{\n\treturn this.editingCell;\n};\n\n/**\n * Function: destroy\n *\n * Destroys the editor and removes all associated resources.\n */\nmxCellEditor.prototype.destroy = function ()\n{\n\tif (this.textarea != null)\n\t{\n\t\tmxEvent.release(this.textarea);\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tthis.textarea = null;\n\n\t}\n\t\t\t\n\tif (this.changeHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t\tthis.changeHandler = null;\n\t}\n\n\tif (this.zoomHandler)\n\t{\n\t\tthis.graph.view.removeListener(this.zoomHandler);\n\t\tthis.zoomHandler = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxCellRenderer\n * \n * Renders cells into a document object model. The <defaultShapes> is a global\n * map of shapename, constructor pairs that is used in all instances. You can\n * get a list of all available shape names using the following code.\n * \n * In general the cell renderer is in charge of creating, redrawing and\n * destroying the shape and label associated with a cell state, as well as\n * some other graphical objects, namely controls and overlays. The shape\n * hieararchy in the display (ie. the hierarchy in which the DOM nodes\n * appear in the document) does not reflect the cell hierarchy. The shapes\n * are a (flat) sequence of shapes and labels inside the draw pane of the\n * graph view, with some exceptions, namely the HTML labels being placed\n * directly inside the graph container for certain browsers.\n * \n * (code)\n * mxLog.show();\n * for (var i in mxCellRenderer.defaultShapes)\n * {\n *   mxLog.debug(i);\n * }\n * (end)\n *\n * Constructor: mxCellRenderer\n * \n * Constructs a new cell renderer with the following built-in shapes:\n * arrow, rectangle, ellipse, rhombus, image, line, label, cylinder,\n * swimlane, connector, actor and cloud.\n */\nfunction mxCellRenderer() { };\n\n/**\n * Variable: defaultShapes\n * \n * Static array that contains the globally registered shapes which are\n * known to all instances of this class. For adding new shapes you should\n * use the static <mxCellRenderer.registerShape> function.\n */\nmxCellRenderer.defaultShapes = new Object();\n\n/**\n * Variable: defaultEdgeShape\n * \n * Defines the default shape for edges. Default is <mxConnector>.\n */\nmxCellRenderer.prototype.defaultEdgeShape = mxConnector;\n\n/**\n * Variable: defaultVertexShape\n * \n * Defines the default shape for vertices. Default is <mxRectangleShape>.\n */\nmxCellRenderer.prototype.defaultVertexShape = mxRectangleShape;\n\n/**\n * Variable: defaultTextShape\n * \n * Defines the default shape for labels. Default is <mxText>.\n */\nmxCellRenderer.prototype.defaultTextShape = mxText;\n\n/**\n * Variable: legacyControlPosition\n * \n * Specifies if the folding icon should ignore the horizontal\n * orientation of a swimlane. Default is true.\n */\nmxCellRenderer.prototype.legacyControlPosition = true;\n\n/**\n * Variable: legacySpacing\n * \n * Specifies if spacing and label position should be ignored if overflow is\n * fill or width. Default is true for backwards compatiblity.\n */\nmxCellRenderer.prototype.legacySpacing = true;\n\n/**\n * Variable: antiAlias\n * \n * Anti-aliasing option for new shapes. Default is true.\n */\nmxCellRenderer.prototype.antiAlias = true;\n\n/**\n * Variable: minSvgStrokeWidth\n * \n * Minimum stroke width for SVG output.\n */\nmxCellRenderer.prototype.minSvgStrokeWidth = 1;\n\n/**\n * Variable: forceControlClickHandler\n * \n * Specifies if the enabled state of the graph should be ignored in the control\n * click handler (to allow folding in disabled graphs). Default is false.\n */\nmxCellRenderer.prototype.forceControlClickHandler = false;\n\n/**\n * Function: registerShape\n * \n * Registers the given constructor under the specified key in this instance\n * of the renderer.\n * \n * Example:\n * \n * (code)\n * mxCellRenderer.registerShape(mxConstants.SHAPE_RECTANGLE, mxRectangleShape);\n * (end)\n * \n * Parameters:\n * \n * key - String representing the shape name.\n * shape - Constructor of the <mxShape> subclass.\n */\nmxCellRenderer.registerShape = function(key, shape)\n{\n\tmxCellRenderer.defaultShapes[key] = shape;\n};\n\n// Adds default shapes into the default shapes array\nmxCellRenderer.registerShape(mxConstants.SHAPE_RECTANGLE, mxRectangleShape);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ELLIPSE, mxEllipse);\nmxCellRenderer.registerShape(mxConstants.SHAPE_RHOMBUS, mxRhombus);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CYLINDER, mxCylinder);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CONNECTOR, mxConnector);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ACTOR, mxActor);\nmxCellRenderer.registerShape(mxConstants.SHAPE_TRIANGLE, mxTriangle);\nmxCellRenderer.registerShape(mxConstants.SHAPE_HEXAGON, mxHexagon);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CLOUD, mxCloud);\nmxCellRenderer.registerShape(mxConstants.SHAPE_LINE, mxLine);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ARROW, mxArrow);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ARROW_CONNECTOR, mxArrowConnector);\nmxCellRenderer.registerShape(mxConstants.SHAPE_DOUBLE_ELLIPSE, mxDoubleEllipse);\nmxCellRenderer.registerShape(mxConstants.SHAPE_SWIMLANE, mxSwimlane);\nmxCellRenderer.registerShape(mxConstants.SHAPE_IMAGE, mxImageShape);\nmxCellRenderer.registerShape(mxConstants.SHAPE_LABEL, mxLabel);\n\n/**\n * Function: initializeShape\n * \n * Initializes the shape in the given state by calling its init method with\n * the correct container after configuring it using <configureShape>.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be initialized.\n */\nmxCellRenderer.prototype.initializeShape = function(state)\n{\n\tstate.shape.dialect = state.view.graph.dialect;\n\tthis.configureShape(state);\n\tstate.shape.init(state.view.getDrawPane());\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be created.\n */\nmxCellRenderer.prototype.createShape = function(state)\n{\n\tvar shape = null;\n\t\n\tif (state.style != null)\n\t{\n\t\t// Checks if there is a stencil for the name and creates\n\t\t// a shape instance for the stencil if one exists\n\t\tvar stencil = mxStencilRegistry.getStencil(state.style[mxConstants.STYLE_SHAPE]);\n\t\t\n\t\tif (stencil != null)\n\t\t{\n\t\t\tshape = new mxShape(stencil);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar ctor = this.getShapeConstructor(state);\n\t\t\tshape = new ctor();\n\t\t}\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: createIndicatorShape\n * \n * Creates the indicator shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the indicator shape should be created.\n */\nmxCellRenderer.prototype.createIndicatorShape = function(state)\n{\n\tstate.shape.indicatorShape = this.getShape(state.view.graph.getIndicatorShape(state));\n};\n\n/**\n * Function: getShape\n * \n * Returns the shape for the given name from <defaultShapes>.\n */\nmxCellRenderer.prototype.getShape = function(name)\n{\n\treturn (name != null) ? mxCellRenderer.defaultShapes[name] : null;\n};\n\n/**\n * Function: getShapeConstructor\n * \n * Returns the constructor to be used for creating the shape.\n */\nmxCellRenderer.prototype.getShapeConstructor = function(state)\n{\n\tvar ctor = this.getShape(state.style[mxConstants.STYLE_SHAPE]);\n\t\n\tif (ctor == null)\n\t{\n\t\tctor = (state.view.graph.getModel().isEdge(state.cell)) ?\n\t\t\tthis.defaultEdgeShape : this.defaultVertexShape;\n\t}\n\t\n\treturn ctor;\n};\n\n/**\n * Function: configureShape\n * \n * Configures the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be configured.\n */\nmxCellRenderer.prototype.configureShape = function(state)\n{\n\tstate.shape.apply(state);\n\tstate.shape.image = state.view.graph.getImage(state);\n\tstate.shape.indicatorColor = state.view.graph.getIndicatorColor(state);\n\tstate.shape.indicatorStrokeColor = state.style[mxConstants.STYLE_INDICATOR_STROKECOLOR];\n\tstate.shape.indicatorGradientColor = state.view.graph.getIndicatorGradientColor(state);\n\tstate.shape.indicatorDirection = state.style[mxConstants.STYLE_INDICATOR_DIRECTION];\n\tstate.shape.indicatorImage = state.view.graph.getIndicatorImage(state);\n\n\tthis.postConfigureShape(state);\n};\n\n/**\n * Function: postConfigureShape\n * \n * Replaces any reserved words used for attributes, eg. inherit,\n * indicated or swimlane for colors in the shape for the given state.\n * This implementation resolves these keywords on the fill, stroke\n * and gradient color keys.\n */\nmxCellRenderer.prototype.postConfigureShape = function(state)\n{\n\tif (state.shape != null)\n\t{\n\t\tthis.resolveColor(state, 'indicatorColor', mxConstants.STYLE_FILLCOLOR);\n\t\tthis.resolveColor(state, 'indicatorGradientColor', mxConstants.STYLE_GRADIENTCOLOR);\n\t\tthis.resolveColor(state, 'fill', mxConstants.STYLE_FILLCOLOR);\n\t\tthis.resolveColor(state, 'stroke', mxConstants.STYLE_STROKECOLOR);\n\t\tthis.resolveColor(state, 'gradient', mxConstants.STYLE_GRADIENTCOLOR);\n\t}\n};\n\n/**\n * Function: checkPlaceholderStyles\n * \n * Resolves special keywords 'inherit', 'indicated' and 'swimlane' and sets\n * the respective color on the shape.\n */\nmxCellRenderer.prototype.checkPlaceholderStyles = function(state)\n{\n\t// LATER: Check if the color has actually changed\n\tif (state.style != null)\n\t{\n\t\tvar values = ['inherit', 'swimlane', 'indicated'];\n\t\tvar styles = [mxConstants.STYLE_FILLCOLOR, mxConstants.STYLE_STROKECOLOR, mxConstants.STYLE_GRADIENTCOLOR];\n\t\t\n\t\tfor (var i = 0; i < styles.length; i++)\n\t\t{\n\t\t\tif (mxUtils.indexOf(values, state.style[styles[i]]) >= 0)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: resolveColor\n * \n * Resolves special keywords 'inherit', 'indicated' and 'swimlane' and sets\n * the respective color on the shape.\n */\nmxCellRenderer.prototype.resolveColor = function(state, field, key)\n{\n\tvar value = state.shape[field];\n\tvar graph = state.view.graph;\n\tvar referenced = null;\n\t\n\tif (value == 'inherit')\n\t{\n\t\treferenced = graph.model.getParent(state.cell);\n\t}\n\telse if (value == 'swimlane')\n\t{\n\t\tstate.shape[field] = (key == mxConstants.STYLE_STROKECOLOR) ? '#000000' : '#ffffff';\n\t\t\n\t\tif (graph.model.getTerminal(state.cell, false) != null)\n\t\t{\n\t\t\treferenced = graph.model.getTerminal(state.cell, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treferenced = state.cell;\n\t\t}\n\t\t\n\t\treferenced = graph.getSwimlane(referenced);\n\t\tkey = graph.swimlaneIndicatorColorAttribute;\n\t}\n\telse if (value == 'indicated')\n\t{\n\t\tstate.shape[field] = state.shape.indicatorColor;\n\t}\n\t\n\tif (referenced != null)\n\t{\n\t\tvar rstate = graph.getView().getState(referenced);\n\t\tstate.shape[field] = null;\n\n\t\tif (rstate != null)\n\t\t{\n\t\t\tif (rstate.shape != null && field != 'indicatorColor')\n\t\t\t{\n\t\t\t\tstate.shape[field] = rstate.shape[field];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape[field] = rstate.style[key];\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getLabelValue\n * \n * Returns the value to be used for the label.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the label should be created.\n */\nmxCellRenderer.prototype.getLabelValue = function(state)\n{\n\treturn state.view.graph.getLabel(state.cell);\n};\n\n/**\n * Function: createLabel\n * \n * Creates the label for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the label should be created.\n */\nmxCellRenderer.prototype.createLabel = function(state, value)\n{\n\tvar graph = state.view.graph;\n\tvar isEdge = graph.getModel().isEdge(state.cell);\n\t\n\tif (state.style[mxConstants.STYLE_FONTSIZE] > 0 || state.style[mxConstants.STYLE_FONTSIZE] == null)\n\t{\n\t\t// Avoids using DOM node for empty labels\n\t\tvar isForceHtml = (graph.isHtmlLabel(state.cell) || (value != null && mxUtils.isNode(value)));\n\n\t\tstate.text = new this.defaultTextShape(value, new mxRectangle(),\n\t\t\t\t(state.style[mxConstants.STYLE_ALIGN] || mxConstants.ALIGN_CENTER),\n\t\t\t\tgraph.getVerticalAlign(state),\n\t\t\t\tstate.style[mxConstants.STYLE_FONTCOLOR],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTFAMILY],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTSIZE],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTSTYLE],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_TOP],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_RIGHT],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_BOTTOM],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_LEFT],\n\t\t\t\tstate.style[mxConstants.STYLE_HORIZONTAL],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_BORDERCOLOR],\n\t\t\t\tgraph.isWrapping(state.cell) && graph.isHtmlLabel(state.cell),\n\t\t\t\tgraph.isLabelClipped(state.cell),\n\t\t\t\tstate.style[mxConstants.STYLE_OVERFLOW],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_PADDING],\n\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION));\n\t\tstate.text.opacity = mxUtils.getValue(state.style, mxConstants.STYLE_TEXT_OPACITY, 100);\n\t\tstate.text.dialect = (isForceHtml) ? mxConstants.DIALECT_STRICTHTML : state.view.graph.dialect;\n\t\tstate.text.style = state.style;\n\t\tstate.text.state = state;\n\t\tthis.initializeLabel(state, state.text);\n\t\t\n\t\t// Workaround for touch devices routing all events for a mouse gesture\n\t\t// (down, move, up) via the initial DOM node. IE additionally redirects\n\t\t// the event via the initial DOM node but the event source is the node\n\t\t// under the mouse, so we need to check if this is the case and force\n\t\t// getCellAt for the subsequent mouseMoves and the final mouseUp.\n\t\tvar forceGetCell = false;\n\t\t\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\tvar result = state;\n\n\t\t\tif (mxClient.IS_TOUCH || forceGetCell)\n\t\t\t{\n\t\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\t\n\t\t\t\t// Dispatches the drop event to the graph which\n\t\t\t\t// consumes and executes the source function\n\t\t\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\t\tresult = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\treturn result;\n\t\t};\n\t\t\n\t\t// TODO: Add handling for special touch device gestures\n\t\tmxEvent.addGestureListeners(state.text.node,\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t\t\tforceGetCell = graph.dialect != mxConstants.DIALECT_SVG &&\n\t\t\t\t\t\tmxEvent.getSource(evt).nodeName == 'IMG';\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t\t\tforceGetCell = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// Uses double click timeout in mxGraph for quirks mode\n\t\tif (graph.nativeDblClickEnabled)\n\t\t{\n\t\t\tmxEvent.addListener(state.text.node, 'dblclick',\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t\t{\n\t\t\t\t\t\tgraph.dblClick(evt, state.cell);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Function: initializeLabel\n * \n * Initiailzes the label with a suitable container.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be initialized.\n */\nmxCellRenderer.prototype.initializeLabel = function(state, shape)\n{\n\tif (mxClient.IS_SVG && mxClient.NO_FO && shape.dialect != mxConstants.DIALECT_SVG)\n\t{\n\t\tshape.init(state.view.graph.container);\n\t}\n\telse\n\t{\n\t\tshape.init(state.view.getDrawPane());\n\t}\n};\n\n/**\n * Function: createCellOverlays\n * \n * Creates the actual shape for showing the overlay for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the overlay should be created.\n */\nmxCellRenderer.prototype.createCellOverlays = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar overlays = graph.getCellOverlays(state.cell);\n\tvar dict = null;\n\t\n\tif (overlays != null)\n\t{\n\t\tdict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < overlays.length; i++)\n\t\t{\n\t\t\tvar shape = (state.overlays != null) ? state.overlays.remove(overlays[i]) : null;\n\t\t\t\n\t\t\tif (shape == null)\n\t\t\t{\n\t\t\t\tvar tmp = new mxImageShape(new mxRectangle(), overlays[i].image.src);\n\t\t\t\ttmp.dialect = state.view.graph.dialect;\n\t\t\t\ttmp.preserveImageAspect = false;\n\t\t\t\ttmp.overlay = overlays[i];\n\t\t\t\tthis.initializeOverlay(state, tmp);\n\t\t\t\tthis.installCellOverlayListeners(state, overlays[i], tmp);\n\t\n\t\t\t\tif (overlays[i].cursor != null)\n\t\t\t\t{\n\t\t\t\t\ttmp.node.style.cursor = overlays[i].cursor;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdict.put(overlays[i], tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdict.put(overlays[i], shape);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Removes unused\n\tif (state.overlays != null)\n\t{\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tshape.destroy();\n\t\t});\n\t}\n\t\n\tstate.overlays = dict;\n};\n\n/**\n * Function: initializeOverlay\n * \n * Initializes the given overlay.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the overlay should be created.\n * overlay - <mxImageShape> that represents the overlay.\n */\nmxCellRenderer.prototype.initializeOverlay = function(state, overlay)\n{\n\toverlay.init(state.view.getOverlayPane());\n};\n\n/**\n * Function: installOverlayListeners\n * \n * Installs the listeners for the given <mxCellState>, <mxCellOverlay> and\n * <mxShape> that represents the overlay.\n */\nmxCellRenderer.prototype.installCellOverlayListeners = function(state, overlay, shape)\n{\n\tvar graph  = state.view.graph;\n\t\n\tmxEvent.addListener(shape.node, 'click', function (evt)\n\t{\n\t\tif (graph.isEditing())\n\t\t{\n\t\t\tgraph.stopEditing(!graph.isInvokesStopCellEditing());\n\t\t}\n\t\t\n\t\toverlay.fireEvent(new mxEventObject(mxEvent.CLICK,\n\t\t\t\t'event', evt, 'cell', state.cell));\n\t});\n\t\n\tmxEvent.addGestureListeners(shape.node,\n\t\tfunction (evt)\n\t\t{\n\t\t\tmxEvent.consume(evt);\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE,\n\t\t\t\tnew mxMouseEvent(evt, state));\n\t\t});\n\t\n\tif (mxClient.IS_TOUCH)\n\t{\n\t\tmxEvent.addListener(shape.node, 'touchend', function (evt)\n\t\t{\n\t\t\toverlay.fireEvent(new mxEventObject(mxEvent.CLICK,\n\t\t\t\t\t'event', evt, 'cell', state.cell));\n\t\t});\n\t}\n};\n\n/**\n * Function: createControl\n * \n * Creates the control for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the control should be created.\n */\nmxCellRenderer.prototype.createControl = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar image = graph.getFoldingImage(state);\n\t\n\tif (graph.foldingEnabled && image != null)\n\t{\n\t\tif (state.control == null)\n\t\t{\n\t\t\tvar b = new mxRectangle(0, 0, image.width, image.height);\n\t\t\tstate.control = new mxImageShape(b, image.src);\n\t\t\tstate.control.preserveImageAspect = false;\n\t\t\tstate.control.dialect = graph.dialect;\n\n\t\t\tthis.initControl(state, state.control, true, this.createControlClickHandler(state));\n\t\t}\n\t}\n\telse if (state.control != null)\n\t{\n\t\tstate.control.destroy();\n\t\tstate.control = null;\n\t}\n};\n\n/**\n * Function: createControlClickHandler\n * \n * Hook for creating the click handler for the folding icon.\n * \n * Parameters:\n * \n * state - <mxCellState> whose control click handler should be returned.\n */\nmxCellRenderer.prototype.createControlClickHandler = function(state)\n{\n\tvar graph = state.view.graph;\n\t\n\treturn mxUtils.bind(this, function (evt)\n\t{\n\t\tif (this.forceControlClickHandler || graph.isEnabled())\n\t\t{\n\t\t\tvar collapse = !graph.isCellCollapsed(state.cell);\n\t\t\tgraph.foldCells(collapse, false, [state.cell], null, evt);\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t});\n};\n\n/**\n * Function: initControl\n * \n * Initializes the given control and returns the corresponding DOM node.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the control should be initialized.\n * control - <mxShape> to be initialized.\n * handleEvents - Boolean indicating if mousedown and mousemove should fire events via the graph.\n * clickHandler - Optional function to implement clicks on the control.\n */\nmxCellRenderer.prototype.initControl = function(state, control, handleEvents, clickHandler)\n{\n\tvar graph = state.view.graph;\n\t\n\t// In the special case where the label is in HTML and the display is SVG the image\n\t// should go into the graph container directly in order to be clickable. Otherwise\n\t// it is obscured by the HTML label that overlaps the cell.\n\tvar isForceHtml = graph.isHtmlLabel(state.cell) && mxClient.NO_FO &&\n\t\tgraph.dialect == mxConstants.DIALECT_SVG;\n\n\tif (isForceHtml)\n\t{\n\t\tcontrol.dialect = mxConstants.DIALECT_PREFERHTML;\n\t\tcontrol.init(graph.container);\n\t\tcontrol.node.style.zIndex = 1;\n\t}\n\telse\n\t{\n\t\tcontrol.init(state.view.getOverlayPane());\n\t}\n\n\tvar node = control.innerNode || control.node;\n\t\n\t// Workaround for missing click event on iOS is to check tolerance below\n\tif (clickHandler != null && !mxClient.IS_IOS)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\tnode.style.cursor = 'pointer';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(node, 'click', clickHandler);\n\t}\n\t\n\tif (handleEvents)\n\t{\n\t\tvar first = null;\n\n\t\tmxEvent.addGestureListeners(node,\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tfirst = new mxPoint(mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t},\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, state));\n\t\t\t},\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, state));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\n\t\t// Uses capture phase for event interception to stop bubble phase\n\t\tif (clickHandler != null && mxClient.IS_IOS)\n\t\t{\n\t\t\tnode.addEventListener('touchend', function(evt)\n\t\t\t{\n\t\t\t\tif (first != null)\n\t\t\t\t{\n\t\t\t\t\tvar tol = graph.tolerance;\n\t\t\t\t\t\n\t\t\t\t\tif (Math.abs(first.x - mxEvent.getClientX(evt)) < tol &&\n\t\t\t\t\t\tMath.abs(first.y - mxEvent.getClientY(evt)) < tol)\n\t\t\t\t\t{\n\t\t\t\t\t\tclickHandler.call(clickHandler, evt);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, true);\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: isShapeEvent\n * \n * Returns true if the event is for the shape of the given state. This\n * implementation always returns true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose shape fired the event.\n * evt - Mouse event which was fired.\n */\nmxCellRenderer.prototype.isShapeEvent = function(state, evt)\n{\n\treturn true;\n};\n\n/**\n * Function: isLabelEvent\n * \n * Returns true if the event is for the label of the given state. This\n * implementation always returns true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label fired the event.\n * evt - Mouse event which was fired.\n */\nmxCellRenderer.prototype.isLabelEvent = function(state, evt)\n{\n\treturn true;\n};\n\n/**\n * Function: installListeners\n * \n * Installs the event listeners for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the event listeners should be isntalled.\n */\nmxCellRenderer.prototype.installListeners = function(state)\n{\n\tvar graph = state.view.graph;\n\n\t// Workaround for touch devices routing all events for a mouse\n\t// gesture (down, move, up) via the initial DOM node. Same for\n\t// HTML images in all IE versions (VML images are working).\n\tvar getState = function(evt)\n\t{\n\t\tvar result = state;\n\t\t\n\t\tif ((graph.dialect != mxConstants.DIALECT_SVG && mxEvent.getSource(evt).nodeName == 'IMG') || mxClient.IS_TOUCH)\n\t\t{\n\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\n\t\t\t// Dispatches the drop event to the graph which\n\t\t\t// consumes and executes the source function\n\t\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\tresult = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\n\tmxEvent.addGestureListeners(state.shape.node,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t})\n\t);\n\t\n\t// Uses double click timeout in mxGraph for quirks mode\n\tif (graph.nativeDblClickEnabled)\n\t{\n\t\tmxEvent.addListener(state.shape.node, 'dblclick',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.dblClick(evt, state.cell);\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n};\n\n/**\n * Function: redrawLabel\n * \n * Redraws the label for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be redrawn.\n */\nmxCellRenderer.prototype.redrawLabel = function(state, forced)\n{\n\tvar graph = state.view.graph;\n\tvar value = this.getLabelValue(state);\n\tvar wrapping = graph.isWrapping(state.cell);\n\tvar clipping = graph.isLabelClipped(state.cell);\n\tvar isForceHtml = (state.view.graph.isHtmlLabel(state.cell) || (value != null && mxUtils.isNode(value)));\n\tvar dialect = (isForceHtml) ? mxConstants.DIALECT_STRICTHTML : state.view.graph.dialect;\n\tvar overflow = state.style[mxConstants.STYLE_OVERFLOW] || 'visible';\n\n\tif (state.text != null && (state.text.wrap != wrapping || state.text.clipped != clipping ||\n\t\tstate.text.overflow != overflow || state.text.dialect != dialect))\n\t{\n\t\tstate.text.destroy();\n\t\tstate.text = null;\n\t}\n\t\n\tif (state.text == null && value != null && (mxUtils.isNode(value) || value.length > 0))\n\t{\n\t\tthis.createLabel(state, value);\n\t}\n\telse if (state.text != null && (value == null || value.length == 0))\n\t{\n\t\tstate.text.destroy();\n\t\tstate.text = null;\n\t}\n\n\tif (state.text != null)\n\t{\n\t\t// Forced is true if the style has changed, so to get the updated\n\t\t// result in getLabelBounds we apply the new style to the shape\n\t\tif (forced)\n\t\t{\n\t\t\t// Checks if a full repaint is needed\n\t\t\tif (state.text.lastValue != null && this.isTextShapeInvalid(state, state.text))\n\t\t\t{\n\t\t\t\t// Forces a full repaint\n\t\t\t\tstate.text.lastValue = null;\n\t\t\t}\n\t\t\t\n\t\t\tstate.text.resetStyles();\n\t\t\tstate.text.apply(state);\n\t\t\t\n\t\t\t// Special case where value is obtained via hook in graph\n\t\t\tstate.text.valign = graph.getVerticalAlign(state);\n\t\t}\n\t\t\n\t\tvar bounds = this.getLabelBounds(state);\n\t\tvar nextScale = this.getTextScale(state);\n\t\t\n\t\tif (forced || state.text.value != value || state.text.isWrapping != wrapping ||\n\t\t\tstate.text.overflow != overflow || state.text.isClipping != clipping ||\n\t\t\tstate.text.scale != nextScale || state.text.dialect != dialect ||\n\t\t\t!state.text.bounds.equals(bounds))\n\t\t{\n\t\t\t// Forces an update of the text bounding box\n\t\t\tif (state.text.bounds.width != 0 && state.unscaledWidth != null &&\n\t\t\t\tMath.round((state.text.bounds.width /\n\t\t\t\tstate.text.scale * nextScale) - bounds.width) != 0)\n\t\t\t{\n\t\t\t\tstate.unscaledWidth = null;\n\t\t\t}\n\t\t\t\n\t\t\tstate.text.dialect = dialect;\n\t\t\tstate.text.value = value;\n\t\t\tstate.text.bounds = bounds;\n\t\t\tstate.text.scale = nextScale;\n\t\t\tstate.text.wrap = wrapping;\n\t\t\tstate.text.clipped = clipping;\n\t\t\tstate.text.overflow = overflow;\n\t\t\t\n\t\t\t// Preserves visible state\n\t\t\tvar vis = state.text.node.style.visibility;\n\t\t\tthis.redrawLabelShape(state.text);\n\t\t\tstate.text.node.style.visibility = vis;\n\t\t}\n\t}\n};\n\n/**\n * Function: isTextShapeInvalid\n * \n * Returns true if the style for the text shape has changed.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be checked.\n * shape - <mxText> shape to be checked.\n */\nmxCellRenderer.prototype.isTextShapeInvalid = function(state, shape)\n{\n\tfunction check(property, stylename, defaultValue)\n\t{\n\t\t// Workaround for spacing added to directional spacing\n\t\tif (stylename == 'spacingTop' || stylename == 'spacingRight' ||\n\t\t\tstylename == 'spacingBottom' || stylename == 'spacingLeft')\n\t\t{\n\t\t\tresult = parseFloat(shape[property]) - parseFloat(shape.spacing) !=\n\t\t\t\t(state.style[stylename] || defaultValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = shape[property] != (state.style[stylename] || defaultValue);\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\n\treturn check('fontStyle', mxConstants.STYLE_FONTSTYLE, mxConstants.DEFAULT_FONTSTYLE) ||\n\t\tcheck('family', mxConstants.STYLE_FONTFAMILY, mxConstants.DEFAULT_FONTFAMILY) ||\n\t\tcheck('size', mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE) ||\n\t\tcheck('color', mxConstants.STYLE_FONTCOLOR, 'black') ||\n\t\tcheck('align', mxConstants.STYLE_ALIGN, '') ||\n\t\tcheck('valign', mxConstants.STYLE_VERTICAL_ALIGN, '') ||\n\t\tcheck('spacing', mxConstants.STYLE_SPACING, 2) ||\n\t\tcheck('spacingTop', mxConstants.STYLE_SPACING_TOP, 0) ||\n\t\tcheck('spacingRight', mxConstants.STYLE_SPACING_RIGHT, 0) ||\n\t\tcheck('spacingBottom', mxConstants.STYLE_SPACING_BOTTOM, 0) ||\n\t\tcheck('spacingLeft', mxConstants.STYLE_SPACING_LEFT, 0) ||\n\t\tcheck('horizontal', mxConstants.STYLE_HORIZONTAL, true) ||\n\t\tcheck('background', mxConstants.STYLE_LABEL_BACKGROUNDCOLOR) ||\n\t\tcheck('border', mxConstants.STYLE_LABEL_BORDERCOLOR) ||\n\t\tcheck('opacity', mxConstants.STYLE_TEXT_OPACITY, 100) ||\n\t\tcheck('textDirection', mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n};\n\n/**\n * Function: redrawLabelShape\n * \n * Called to invoked redraw on the given text shape.\n * \n * Parameters:\n * \n * shape - <mxText> shape to be redrawn.\n */\nmxCellRenderer.prototype.redrawLabelShape = function(shape)\n{\n\tshape.redraw();\n};\n\n/**\n * Function: getTextScale\n * \n * Returns the scaling used for the label of the given state\n * \n * Parameters:\n * \n * state - <mxCellState> whose label scale should be returned.\n */\nmxCellRenderer.prototype.getTextScale = function(state)\n{\n\treturn state.view.scale;\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the bounds to be used to draw the label of the given state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label bounds should be returned.\n */\nmxCellRenderer.prototype.getLabelBounds = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar scale = state.view.scale;\n\tvar isEdge = graph.getModel().isEdge(state.cell);\n\tvar bounds = new mxRectangle(state.absoluteOffset.x, state.absoluteOffset.y);\n\n\tif (isEdge)\n\t{\n\t\tvar spacing = state.text.getSpacing();\n\t\tbounds.x += spacing.x * scale;\n\t\tbounds.y += spacing.y * scale;\n\t\t\n\t\tvar geo = graph.getCellGeometry(state.cell);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tbounds.width = Math.max(0, geo.width * scale);\n\t\t\tbounds.height = Math.max(0, geo.height * scale);\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Inverts label position\n\t\tif (state.text.isPaintBoundsInverted())\n\t\t{\n\t\t\tvar tmp = bounds.x;\n\t\t\tbounds.x = bounds.y;\n\t\t\tbounds.y = tmp;\n\t\t}\n\t\t\n\t\tbounds.x += state.x;\n\t\tbounds.y += state.y;\n\t\t\n\t\t// Minimum of 1 fixes alignment bug in HTML labels\n\t\tbounds.width = Math.max(1, state.width);\n\t\tbounds.height = Math.max(1, state.height);\n\n\t\tvar sc = mxUtils.getValue(state.style, mxConstants.STYLE_STROKECOLOR, mxConstants.NONE);\n\t\t\n\t\tif (sc != mxConstants.NONE && sc != '')\n\t\t{\n\t\t\tvar s = parseFloat(mxUtils.getValue(state.style, mxConstants.STYLE_STROKEWIDTH, 1)) * scale;\n\t\t\tvar dx = 1 + Math.floor((s - 1) / 2);\n\t\t\tvar dh = Math.floor(s + 1);\n\t\t\t\n\t\t\tbounds.x += dx;\n\t\t\tbounds.y += dx;\n\t\t\tbounds.width -= dh;\n\t\t\tbounds.height -= dh;\n\t\t}\n\t}\n\n\tif (state.text.isPaintBoundsInverted())\n\t{\n\t\t// Rotates around center of state\n\t\tvar t = (state.width - state.height) / 2;\n\t\tbounds.x += t;\n\t\tbounds.y -= t;\n\t\tvar tmp = bounds.width;\n\t\tbounds.width = bounds.height;\n\t\tbounds.height = tmp;\n\t}\n\t\n\t// Shape can modify its label bounds\n\tif (state.shape != null)\n\t{\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\t\n\t\tif (hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tbounds = state.shape.getLabelBounds(bounds);\n\t\t}\n\t}\n\t\n\t// Label width style overrides actual label width\n\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\n\tif (lw != null)\n\t{\n\t\tbounds.width = parseFloat(lw) * scale;\n\t}\n\t\n\tif (!isEdge)\n\t{\n\t\tthis.rotateLabelBounds(state, bounds);\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: rotateLabelBounds\n * \n * Adds the shape rotation to the given label bounds and\n * applies the alignment and offsets.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label bounds should be rotated.\n * bounds - <mxRectangle> the rectangle to be rotated.\n */\nmxCellRenderer.prototype.rotateLabelBounds = function(state, bounds)\n{\n\tbounds.y -= state.text.margin.y * bounds.height;\n\tbounds.x -= state.text.margin.x * bounds.width;\n\t\n\tif (!this.legacySpacing || (state.style[mxConstants.STYLE_OVERFLOW] != 'fill' && state.style[mxConstants.STYLE_OVERFLOW] != 'width'))\n\t{\n\t\tvar s = state.view.scale;\n\t\tvar spacing = state.text.getSpacing();\n\t\tbounds.x += spacing.x * s;\n\t\tbounds.y += spacing.y * s;\n\t\t\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tbounds.width = Math.max(0, bounds.width - ((hpos == mxConstants.ALIGN_CENTER && lw == null) ? (state.text.spacingLeft * s + state.text.spacingRight * s) : 0));\n\t\tbounds.height = Math.max(0, bounds.height - ((vpos == mxConstants.ALIGN_MIDDLE) ? (state.text.spacingTop * s + state.text.spacingBottom * s) : 0));\n\t}\n\n\tvar theta = state.text.getTextRotation();\n\n\t// Only needed if rotated around another center\n\tif (theta != 0 && state != null && state.view.graph.model.isVertex(state.cell))\n\t{\n\t\tvar cx = state.getCenterX();\n\t\tvar cy = state.getCenterY();\n\t\t\n\t\tif (bounds.x != cx || bounds.y != cy)\n\t\t{\n\t\t\tvar rad = theta * (Math.PI / 180);\n\t\t\tpt = mxUtils.getRotatedPoint(new mxPoint(bounds.x, bounds.y),\n\t\t\t\t\tMath.cos(rad), Math.sin(rad), new mxPoint(cx, cy));\n\t\t\t\n\t\t\tbounds.x = pt.x;\n\t\t\tbounds.y = pt.y;\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawCellOverlays\n * \n * Redraws the overlays for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose overlays should be redrawn.\n */\nmxCellRenderer.prototype.redrawCellOverlays = function(state, forced)\n{\n\tthis.createCellOverlays(state);\n\n\tif (state.overlays != null)\n\t{\n\t\tvar rot = mxUtils.mod(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0), 90);\n        var rad = mxUtils.toRadians(rot);\n        var cos = Math.cos(rad);\n        var sin = Math.sin(rad);\n\t\t\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tvar bounds = shape.overlay.getBounds(state);\n\t\t\n\t\t\tif (!state.view.graph.getModel().isEdge(state.cell))\n\t\t\t{\n\t\t\t\tif (state.shape != null && rot != 0)\n\t\t\t\t{\n\t\t\t\t\tvar cx = bounds.getCenterX();\n\t\t\t\t\tvar cy = bounds.getCenterY();\n\n\t\t\t\t\tvar point = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin,\n\t\t\t        \t\tnew mxPoint(state.getCenterX(), state.getCenterY()));\n\n\t\t\t        cx = point.x;\n\t\t\t        cy = point.y;\n\t\t\t        bounds.x = Math.round(cx - bounds.width / 2);\n\t\t\t        bounds.y = Math.round(cy - bounds.height / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (forced || shape.bounds == null || shape.scale != state.view.scale ||\n\t\t\t\t!shape.bounds.equals(bounds))\n\t\t\t{\n\t\t\t\tshape.bounds = bounds;\n\t\t\t\tshape.scale = state.view.scale;\n\t\t\t\tshape.redraw();\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Function: redrawControl\n * \n * Redraws the control for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose control should be redrawn.\n */\nmxCellRenderer.prototype.redrawControl = function(state, forced)\n{\n\tvar image = state.view.graph.getFoldingImage(state);\n\t\n\tif (state.control != null && image != null)\n\t{\n\t\tvar bounds = this.getControlBounds(state, image.width, image.height);\n\t\tvar r = (this.legacyControlPosition) ?\n\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0) :\n\t\t\t\tstate.shape.getTextRotation();\n\t\tvar s = state.view.scale;\n\t\t\n\t\tif (forced || state.control.scale != s || !state.control.bounds.equals(bounds) ||\n\t\t\tstate.control.rotation != r)\n\t\t{\n\t\t\tstate.control.rotation = r;\n\t\t\tstate.control.bounds = bounds;\n\t\t\tstate.control.scale = s;\n\t\t\t\n\t\t\tstate.control.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getControlBounds\n * \n * Returns the bounds to be used to draw the control (folding icon) of the\n * given state.\n */\nmxCellRenderer.prototype.getControlBounds = function(state, w, h)\n{\n\tif (state.control != null)\n\t{\n\t\tvar s = state.view.scale;\n\t\tvar cx = state.getCenterX();\n\t\tvar cy = state.getCenterY();\n\t\n\t\tif (!state.view.graph.getModel().isEdge(state.cell))\n\t\t{\n\t\t\tcx = state.x + w * s;\n\t\t\tcy = state.y + h * s;\n\t\t\t\n\t\t\tif (state.shape != null)\n\t\t\t{\n\t\t\t\t// TODO: Factor out common code\n\t\t\t\tvar rot = state.shape.getShapeRotation();\n\t\t\t\t\n\t\t\t\tif (this.legacyControlPosition)\n\t\t\t\t{\n\t\t\t\t\trot = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (state.shape.isPaintBoundsInverted())\n\t\t\t\t\t{\n\t\t\t\t\t\tvar t = (state.width - state.height) / 2;\n\t\t\t\t\t\tcx += t;\n\t\t\t\t\t\tcy -= t;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (rot != 0)\n\t\t\t\t{\n\t\t\t        var rad = mxUtils.toRadians(rot);\n\t\t\t        var cos = Math.cos(rad);\n\t\t\t        var sin = Math.sin(rad);\n\t\t\t        \n\t\t\t        var point = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin,\n\t\t\t        \t\tnew mxPoint(state.getCenterX(), state.getCenterY()));\n\t\t\t        cx = point.x;\n\t\t\t        cy = point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (state.view.graph.getModel().isEdge(state.cell)) ? \n\t\t\tnew mxRectangle(Math.round(cx - w / 2 * s), Math.round(cy - h / 2 * s), Math.round(w * s), Math.round(h * s))\n\t\t\t: new mxRectangle(Math.round(cx - w / 2 * s), Math.round(cy - h / 2 * s), Math.round(w * s), Math.round(h * s));\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: insertStateAfter\n * \n * Inserts the given array of <mxShapes> after the given nodes in the DOM.\n * \n * Parameters:\n * \n * shapes - Array of <mxShapes> to be inserted.\n * node - Node in <drawPane> after which the shapes should be inserted.\n * htmlNode - Node in the graph container after which the shapes should be inserted that\n * will not go into the <drawPane> (eg. HTML labels without foreignObjects).\n */\nmxCellRenderer.prototype.insertStateAfter = function(state, node, htmlNode)\n{\n\tvar shapes = this.getShapesForState(state);\n\t\n\tfor (var i = 0; i < shapes.length; i++)\n\t{\n\t\tif (shapes[i] != null && shapes[i].node != null)\n\t\t{\n\t\t\tvar html = shapes[i].node.parentNode != state.view.getDrawPane() &&\n\t\t\t\tshapes[i].node.parentNode != state.view.getOverlayPane();\n\t\t\tvar temp = (html) ? htmlNode : node;\n\t\t\t\n\t\t\tif (temp != null && temp.nextSibling != shapes[i].node)\n\t\t\t{\n\t\t\t\tif (temp.nextSibling == null)\n\t\t\t\t{\n\t\t\t\t\ttemp.parentNode.appendChild(shapes[i].node);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttemp.parentNode.insertBefore(shapes[i].node, temp.nextSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (temp == null)\n\t\t\t{\n\t\t\t\t// Special case: First HTML node should be first sibling after canvas\n\t\t\t\tif (shapes[i].node.parentNode == state.view.graph.container)\n\t\t\t\t{\n\t\t\t\t\tvar canvas = state.view.canvas;\n\t\t\t\t\t\n\t\t\t\t\twhile (canvas != null && canvas.parentNode != state.view.graph.container)\n\t\t\t\t\t{\n\t\t\t\t\t\tcanvas = canvas.parentNode;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (canvas != null && canvas.nextSibling != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (canvas.nextSibling != shapes[i].node)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshapes[i].node.parentNode.insertBefore(shapes[i].node, canvas.nextSibling);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tshapes[i].node.parentNode.appendChild(shapes[i].node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (shapes[i].node.parentNode.firstChild != null && shapes[i].node.parentNode.firstChild != shapes[i].node)\n\t\t\t\t{\n\t\t\t\t\t// Inserts the node as the first child of the parent to implement the order\n\t\t\t\t\tshapes[i].node.parentNode.insertBefore(shapes[i].node, shapes[i].node.parentNode.firstChild);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (html)\n\t\t\t{\n\t\t\t\thtmlNode = shapes[i].node;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode = shapes[i].node;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [node, htmlNode];\n};\n\n/**\n * Function: getShapesForState\n * \n * Returns the <mxShapes> for the given cell state in the order in which they should\n * appear in the DOM.\n * \n * Parameters:\n * \n * state - <mxCellState> whose shapes should be returned.\n */\nmxCellRenderer.prototype.getShapesForState = function(state)\n{\n\treturn [state.shape, state.text, state.control];\n};\n\n/**\n * Function: redraw\n * \n * Updates the bounds or points and scale of the shapes for the given cell\n * state. This is called in mxGraphView.validatePoints as the last step of\n * updating all cells.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shapes should be updated.\n * force - Optional boolean that specifies if the cell should be reconfiured\n * and redrawn without any additional checks.\n * rendering - Optional boolean that specifies if the cell should actually\n * be drawn into the DOM. If this is false then redraw and/or reconfigure\n * will not be called on the shape.\n */\nmxCellRenderer.prototype.redraw = function(state, force, rendering)\n{\n\tvar shapeChanged = this.redrawShape(state, force, rendering);\n\t\n\tif (state.shape != null && (rendering == null || rendering))\n\t{\n\t\tthis.redrawLabel(state, shapeChanged);\n\t\tthis.redrawCellOverlays(state, shapeChanged);\n\t\tthis.redrawControl(state, shapeChanged);\n\t}\n};\n\n/**\n * Function: redrawShape\n * \n * Redraws the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be redrawn.\n */\nmxCellRenderer.prototype.redrawShape = function(state, force, rendering)\n{\n\tvar model = state.view.graph.model;\n\tvar shapeChanged = false;\n\n\t// Forces creation of new shape if shape style has changed\n\tif (state.shape != null && state.shape.style != null && state.style != null &&\n\t\tstate.shape.style[mxConstants.STYLE_SHAPE] != state.style[mxConstants.STYLE_SHAPE])\n\t{\n\t\tstate.shape.destroy();\n\t\tstate.shape = null;\n\t}\n\t\n\tif (state.shape == null && state.view.graph.container != null &&\n\t\tstate.cell != state.view.currentRoot &&\n\t\t(model.isVertex(state.cell) || model.isEdge(state.cell)))\n\t{\n\t\tstate.shape = this.createShape(state);\n\t\t\n\t\tif (state.shape != null)\n\t\t{\n\t\t\tstate.shape.minSvgStrokeWidth = this.minSvgStrokeWidth;\n\t\t\tstate.shape.antiAlias = this.antiAlias;\n\t\n\t\t\tthis.createIndicatorShape(state);\n\t\t\tthis.initializeShape(state);\n\t\t\tthis.createCellOverlays(state);\n\t\t\tthis.installListeners(state);\n\t\t\t\n\t\t\t// Forces a refresh of the handler if one exists\n\t\t\tstate.view.graph.selectionCellsHandler.updateHandler(state);\n\t\t}\n\t}\n\telse if (!force && state.shape != null && (!mxUtils.equalEntries(state.shape.style,\n\t\tstate.style) || this.checkPlaceholderStyles(state)))\n\t{\n\t\tstate.shape.resetStyles();\n\t\tthis.configureShape(state);\n\t\t// LATER: Ignore update for realtime to fix reset of current gesture\n\t\tstate.view.graph.selectionCellsHandler.updateHandler(state);\n\t\tforce = true;\n\t}\n\n\tif (state.shape != null)\n\t{\n\t\t// Handles changes of the collapse icon\n\t\tthis.createControl(state);\n\t\t\n\t\t// Redraws the cell if required, ignores changes to bounds if points are\n\t\t// defined as the bounds are updated for the given points inside the shape\n\t\tif (force || this.isShapeInvalid(state, state.shape))\n\t\t{\n\t\t\tif (state.absolutePoints != null)\n\t\t\t{\n\t\t\t\tstate.shape.points = state.absolutePoints.slice();\n\t\t\t\tstate.shape.bounds = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape.points = null;\n\t\t\t\tstate.shape.bounds = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\t}\n\n\t\t\tstate.shape.scale = state.view.scale;\n\t\t\t\n\t\t\tif (rendering == null || rendering)\n\t\t\t{\n\t\t\t\tthis.doRedrawShape(state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape.updateBoundingBox();\n\t\t\t}\n\t\t\t\n\t\t\tshapeChanged = true;\n\t\t}\n\t}\n\n\treturn shapeChanged;\n};\n\n/**\n * Function: doRedrawShape\n * \n * Invokes redraw on the shape of the given state.\n */\nmxCellRenderer.prototype.doRedrawShape = function(state)\n{\n\tstate.shape.redraw();\n};\n\n/**\n * Function: isShapeInvalid\n * \n * Returns true if the given shape must be repainted.\n */\nmxCellRenderer.prototype.isShapeInvalid = function(state, shape)\n{\n\treturn shape.bounds == null || shape.scale != state.view.scale ||\n\t\t(state.absolutePoints == null && !shape.bounds.equals(state)) ||\n\t\t(state.absolutePoints != null && !mxUtils.equalPoints(shape.points, state.absolutePoints))\n};\n\n/**\n * Function: destroy\n * \n * Destroys the shapes associated with the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shapes should be destroyed.\n */\nmxCellRenderer.prototype.destroy = function(state)\n{\n\tif (state.shape != null)\n\t{\n\t\tif (state.text != null)\n\t\t{\t\t\n\t\t\tstate.text.destroy();\n\t\t\tstate.text = null;\n\t\t}\n\t\t\n\t\tif (state.overlays != null)\n\t\t{\n\t\t\tstate.overlays.visit(function(id, shape)\n\t\t\t{\n\t\t\t\tshape.destroy();\n\t\t\t});\n\t\t\t\n\t\t\tstate.overlays = null;\n\t\t}\n\n\t\tif (state.control != null)\n\t\t{\n\t\t\tstate.control.destroy();\n\t\t\tstate.control = null;\n\t\t}\n\t\t\n\t\tstate.shape.destroy();\n\t\tstate.shape = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEdgeStyle =\n{\n\t/**\n\t * Class: mxEdgeStyle\n\t * \n\t * Provides various edge styles to be used as the values for\n\t * <mxConstants.STYLE_EDGE> in a cell style.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * var style = stylesheet.getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.ElbowConnector;\n\t * (end)\n\t * \n\t * Sets the default edge style to <ElbowConnector>.\n\t * \n\t * Custom edge style:\n\t * \n\t * To write a custom edge style, a function must be added to the mxEdgeStyle\n\t * object as follows:\n\t * \n\t * (code)\n\t * mxEdgeStyle.MyStyle = function(state, source, target, points, result)\n\t * {\n\t *   if (source != null && target != null)\n\t *   {\n\t *     var pt = new mxPoint(target.getCenterX(), source.getCenterY());\n\t * \n\t *     if (mxUtils.contains(source, pt.x, pt.y))\n\t *     {\n\t *       pt.y = source.y + source.height;\n\t *     }\n\t * \n\t *     result.push(pt);\n\t *   }\n\t * };\n\t * (end)\n\t * \n\t * In the above example, a right angle is created using a point on the\n\t * horizontal center of the target vertex and the vertical center of the source\n\t * vertex. The code checks if that point intersects the source vertex and makes\n\t * the edge straight if it does. The point is then added into the result array,\n\t * which acts as the return value of the function.\n\t *\n\t * The new edge style should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('myEdgeStyle', mxEdgeStyle.MyStyle);\n\t * (end)\n\t * \n\t * The custom edge style above can now be used in a specific edge as follows:\n\t * \n\t * (code)\n\t * model.setStyle(edge, 'edgeStyle=myEdgeStyle');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxEdgeStyle.MyStyle for the value in the\n\t * cell style above.\n\t * \n\t * Or it can be used for all edges in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.MyStyle;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * Function: EntityRelation\n\t * \n\t * Implements an entity relation style for edges (as used in database\n\t * schema diagrams). At the time the function is called, the result\n\t * array contains a placeholder (null) for the first absolute point,\n\t * that is, the point where the edge and source terminal are connected.\n\t * The implementation of the style then adds all intermediate waypoints\n\t * except for the last point, that is, the connection point between the\n\t * edge and the target terminal. The first ant the last point in the\n\t * result array are then replaced with mxPoints that take into account\n\t * the terminal's perimeter and next point on the edge.\n\t *\n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * source - <mxCellState> that represents the source terminal.\n\t * target - <mxCellState> that represents the target terminal.\n\t * points - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t */\n\t EntityRelation: function (state, source, target, points, result)\n\t {\n\t\tvar view = state.view;\n\t \tvar graph = view.graph;\n\t \tvar segment = mxUtils.getValue(state.style,\n\t \t\t\tmxConstants.STYLE_SEGMENT,\n\t \t\t\tmxConstants.ENTITY_SEGMENT) * view.scale;\n\t \t\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t \tvar isSourceLeft = false;\n\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\telse if (source != null)\n\t\t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(source, state, true, mxConstants.DIRECTION_MASK_NONE);\n\t\t\t\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisSourceLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t \tvar sourceGeometry = graph.getCellGeometry(source.cell);\n\t\t\n\t\t\t \tif (sourceGeometry.relative)\n\t\t\t \t{\n\t\t\t \t\tisSourceLeft = sourceGeometry.x <= 0.5;\n\t\t\t \t}\n\t\t\t \telse if (target != null)\n\t\t\t \t{\n\t\t\t \t\tisSourceLeft = target.x + target.width < source.x;\n\t\t\t \t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn;\n\t\t}\n\t \t\n\t \tvar isTargetLeft = true;\n\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\telse if (target != null)\n\t \t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(target, state, false, mxConstants.DIRECTION_MASK_NONE);\n\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisTargetLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t \tvar targetGeometry = graph.getCellGeometry(target.cell);\n\t\n\t\t\t \tif (targetGeometry.relative)\n\t\t\t \t{\n\t\t\t \t\tisTargetLeft = targetGeometry.x <= 0.5;\n\t\t\t \t}\n\t\t\t \telse if (source != null)\n\t\t\t \t{\n\t\t\t \t\tisTargetLeft = source.x + source.width < target.x;\n\t\t\t \t}\n\t\t\t}\n\t \t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar x0 = (isSourceLeft) ? source.x : source.x + source.width;\n\t\t\tvar y0 = view.getRoutingCenterY(source);\n\t\t\t\n\t\t\tvar xe = (isTargetLeft) ? target.x : target.x + target.width;\n\t\t\tvar ye = view.getRoutingCenterY(target);\n\t\n\t\t\tvar seg = segment;\n\t\n\t\t\tvar dx = (isSourceLeft) ? -seg : seg;\n\t\t\tvar dep = new mxPoint(x0 + dx, y0);\n\t\t\t\t\t\n\t\t\tdx = (isTargetLeft) ? -seg : seg;\n\t\t\tvar arr = new mxPoint(xe + dx, ye);\n\t\n\t\t\t// Adds intermediate points if both go out on same side\n\t\t\tif (isSourceLeft == isTargetLeft)\n\t\t\t{\n\t\t\t\tvar x = (isSourceLeft) ?\n\t\t\t\t\tMath.min(x0, xe)-segment :\n\t\t\t\t\tMath.max(x0, xe)+segment;\n\t\n\t\t\t\tresult.push(new mxPoint(x, y0));\n\t\t\t\tresult.push(new mxPoint(x, ye));\n\t\t\t}\n\t\t\telse if ((dep.x < arr.x) == isSourceLeft)\n\t\t\t{\n\t\t\t\tvar midY = y0 + (ye - y0) / 2;\n\t\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(new mxPoint(dep.x, midY));\n\t\t\t\tresult.push(new mxPoint(arr.x, midY));\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t}\n\t },\n\n\t /**\n\t * Function: Loop\n\t * \n\t * Implements a self-reference, aka. loop.\n\t */\n\tLoop: function (state, source, target, points, result)\n\t{\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tif (points != null && points.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar pt = points[i];\n\t\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\tresult.push(new mxPoint(pt.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tvar view = state.view;\n\t\t\tvar graph = view.graph;\n\t\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tif (mxUtils.contains(source, pt.x, pt.y))\n\t\t\t\t{\n\t\t\t\t\tpt = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = 0;\n\t\t\tvar dx = 0;\n\t\t\tvar y = 0;\n\t\t\tvar dy = 0;\n\t\t\t\n\t\t \tvar seg = mxUtils.getValue(state.style, mxConstants.STYLE_SEGMENT,\n\t\t \t\tgraph.gridSize) * view.scale;\n\t\t\tvar dir = mxUtils.getValue(state.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_WEST);\n\t\t\t\n\t\t\tif (dir == mxConstants.DIRECTION_NORTH ||\n\t\t\t\tdir == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = seg;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ty = view.getRoutingCenterY(source);\n\t\t\t\tdy = seg;\n\t\t\t}\n\t\t\t\n\t\t\tif (pt == null ||\n\t\t\t\tpt.x < source.x ||\n\t\t\t\tpt.x > source.x + source.width)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tx = pt.x;\n\t\t\t\t\tdy = Math.max(Math.abs(y - pt.y), dy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (dir == mxConstants.DIRECTION_NORTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y - 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y + source.height + 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_EAST)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x - 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x + source.width + 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pt != null)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = Math.max(Math.abs(x - pt.x), dy);\n\t\t\t\ty = pt.y;\n\t\t\t\tdy = 0;\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(x - dx, y - dy));\n\t\t\tresult.push(new mxPoint(x + dx, y + dy));\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: ElbowConnector\n\t * \n\t * Uses either <SideToSide> or <TopToBottom> depending on the horizontal\n\t * flag in the cell style. <SideToSide> is used if horizontal is true or\n\t * unspecified. See <EntityRelation> for a description of the\n\t * parameters.\n\t */\n\tElbowConnector: function (state, source, target, points, result)\n\t{\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\tvar vertical = false;\n\t\tvar horizontal = false;\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar left = Math.min(source.x, target.x);\n\t\t\t\tvar right = Math.max(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\n\t\t\t\tvar top = Math.min(source.y, target.y);\n\t\t\t\tvar bottom = Math.max(source.y + source.height,\n\t\t\t\t\ttarget.y + target.height);\n\n\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tvertical = pt.y < top || pt.y > bottom;\n\t\t\t\thorizontal = pt.x < left || pt.x > right;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar left = Math.max(source.x, target.x);\n\t\t\t\tvar right = Math.min(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\t\t\t\t\n\t\t\t\tvertical = left == right;\n\t\t\t\t\n\t\t\t\tif (!vertical)\n\t\t\t\t{\n\t\t\t\t\tvar top = Math.max(source.y, target.y);\n\t\t\t\t\tvar bottom = Math.min(source.y + source.height,\n\t\t\t\t\t\ttarget.y + target.height);\n\t\t\t\t\t\t\n\t\t\t\t\thorizontal = top == bottom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!horizontal && (vertical ||\n\t\t\tstate.style[mxConstants.STYLE_ELBOW] == mxConstants.ELBOW_VERTICAL))\n\t\t{\n\t\t\tmxEdgeStyle.TopToBottom(state, source, target, points, result);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxEdgeStyle.SideToSide(state, source, target, points, result);\n\t\t}\n\t},\n\n\t/**\n\t * Function: SideToSide\n\t * \n\t * Implements a vertical elbow edge. See <EntityRelation> for a description\n\t * of the parameters.\n\t */\n\tSideToSide: function (state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\n\t\t\tvar x = (pt != null) ? pt.x : Math.round(r + (l - r) / 2);\n\t\n\t\t\tvar y1 = view.getRoutingCenterY(source);\n\t\t\tvar y2 = view.getRoutingCenterY(target);\n\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tif (pt.y >= source.y && pt.y <= source.y + source.height)\n\t\t\t\t{\n\t\t\t\t\ty1 = pt.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (pt.y >= target.y && pt.y <= target.y + target.height)\n\t\t\t\t{\n\t\t\t\t\ty2 = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y1) &&\n\t\t\t\t!mxUtils.contains(source, x, y1))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x,  y1));\n\t\t\t}\n\t\n\t\t\tif (!mxUtils.contains(target, x, y2) &&\n\t\t\t\t!mxUtils.contains(source, x, y2))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y2));\n\t\t\t}\n\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, x, pt.y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, x, pt.y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(x, pt.y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\t\n\t\t\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(x, t + (b - t) / 2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: TopToBottom\n\t * \n\t * Implements a horizontal elbow edge. See <EntityRelation> for a\n\t * description of the parameters.\n\t */\n\tTopToBottom: function(state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\n\t\t\tvar x = view.getRoutingCenterX(source);\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= source.x &&\n\t\t\t\tpt.x <= source.x + source.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\t\n\t\t\tvar y = (pt != null) ? pt.y : Math.round(b + (t - b) / 2);\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= target.x &&\n\t\t\t\tpt.x <= target.x + target.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(target);\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null && result.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, pt.x, y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, pt.x, y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(pt.x, y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(l + (r - l) / 2, y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: SegmentConnector\n\t * \n\t * Implements an orthogonal edge style. Use <mxEdgeSegmentHandler>\n\t * as an interactive handler for this style.\n\t */\n\tSegmentConnector: function(state, source, target, hints, result)\n\t{\n\t\t// Creates array of all way- and terminalpoints\n\t\tvar pts = state.absolutePoints;\n\t\tvar tol = Math.max(1, state.view.scale);\n\t\t\n\t\t// Whether the first segment outgoing from the source end is horizontal\n\t\tvar lastPushed = (result.length > 0) ? result[0] : null;\n\t\tvar horizontal = true;\n\t\tvar hint = null;\n\t\t\n\t\t// Adds waypoints only if outside of tolerance\n\t\tfunction pushPoint(pt)\n\t\t{\n\t\t\tif (lastPushed == null || Math.abs(lastPushed.x - pt.x) >= tol || Math.abs(lastPushed.y - pt.y) >= tol)\n\t\t\t{\n\t\t\t\tresult.push(pt);\n\t\t\t\tlastPushed = pt;\n\t\t\t}\n\t\t\t\n\t\t\treturn lastPushed;\n\t\t};\n\n\t\t// Adds the first point\n\t\tvar pt = pts[0];\n\t\t\n\t\tif (pt == null && source != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(source), state.view.getRoutingCenterY(source));\n\t\t}\n\t\telse if (pt != null)\n\t\t{\n\t\t\tpt = pt.clone();\n\t\t}\n\t\t\n\t\tpt.x = Math.round(pt.x);\n\t\tpt.y = Math.round(pt.y);\n\t\t\n\t\tvar lastInx = pts.length - 1;\n\n\t\t// Adds the waypoints\n\t\tif (hints != null && hints.length > 0)\n\t\t{\n\t\t\t// Converts all hints and removes nulls\n\t\t\tvar newHints = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < hints.length; i++)\n\t\t\t{\n\t\t\t\tvar tmp = state.view.transformControlPoint(state, hints[i]);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\ttmp.x = Math.round(tmp.x);\n\t\t\t\t\ttmp.y = Math.round(tmp.y);\n\t\t\t\t\tnewHints.push(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (newHints.length == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\thints = newHints;\n\t\t\t\n\t\t\t// Aligns source and target hint to fixed points\n\t\t\tif (pt != null && hints[0] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[0].x - pt.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].x = pt.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[0].y - pt.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].y = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pe = pts[lastInx];\n\t\t\t\n\t\t\tif (pe != null && hints[hints.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[hints.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[hints.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\thint = hints[0];\n\n\t\t\tvar currentTerm = source;\n\t\t\tvar currentPt = pts[0];\n\t\t\tvar hozChan = false;\n\t\t\tvar vertChan = false;\n\t\t\tvar currentHint = hint;\n\t\t\t\n\t\t\tif (currentPt != null)\n\t\t\t{\n\t\t\t\tcurrentPt.x = Math.round(currentPt.x);\n\t\t\t\tcurrentPt.y = Math.round(currentPt.y);\n\t\t\t\tcurrentTerm = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Check for alignment with fixed points and with channels\n\t\t\t// at source and target segments only\n\t\t\tfor (var i = 0; i < 2; i++)\n\t\t\t{\n\t\t\t\tvar fixedVertAlign = currentPt != null && currentPt.x == currentHint.x;\n\t\t\t\tvar fixedHozAlign = currentPt != null && currentPt.y == currentHint.y;\n\t\t\t\t\n\t\t\t\tvar inHozChan = currentTerm != null && (currentHint.y >= currentTerm.y &&\n\t\t\t\t\t\tcurrentHint.y <= currentTerm.y + currentTerm.height);\n\t\t\t\tvar inVertChan = currentTerm != null && (currentHint.x >= currentTerm.x &&\n\t\t\t\t\t\tcurrentHint.x <= currentTerm.x + currentTerm.width);\n\n\t\t\t\thozChan = fixedHozAlign || (currentPt == null && inHozChan);\n\t\t\t\tvertChan = fixedVertAlign || (currentPt == null && inVertChan);\n\t\t\t\t\n\t\t\t\t// If the current hint falls in both the hor and vert channels in the case\n\t\t\t\t// of a floating port, or if the hint is exactly co-incident with a \n\t\t\t\t// fixed point, ignore the source and try to work out the orientation\n\t\t\t\t// from the target end\n\t\t\t\tif (i==0 && ((hozChan && vertChan) || (fixedVertAlign && fixedHozAlign)))\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (currentPt != null && (!fixedHozAlign && !fixedVertAlign) && (inHozChan || inVertChan)) \n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = inHozChan ? false : true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tif (vertChan || hozChan)\n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = hozChan;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (i == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Work back from target end\n\t\t\t\t\t\t\thorizontal = hints.length % 2 == 0 ? hozChan : vertChan;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentTerm = target;\n\t\t\t\tcurrentPt = pts[lastInx];\n\t\t\t\t\n\t\t\t\tif (currentPt != null)\n\t\t\t\t{\n\t\t\t\t\tcurrentPt.x = Math.round(currentPt.x);\n\t\t\t\t\tcurrentPt.y = Math.round(currentPt.y);\n\t\t\t\t\tcurrentTerm = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentHint = hints[hints.length - 1];\n\t\t\t\t\n\t\t\t\tif (fixedVertAlign && fixedHozAlign)\n\t\t\t\t{\n\t\t\t\t\thints = hints.slice(1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (horizontal && ((pts[0] != null && pts[0].y != hint.y) ||\n\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t(hint.y < source.y || hint.y > source.y + source.height))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t}\n\t\t\telse if (!horizontal && ((pts[0] != null && pts[0].x != hint.x) ||\n\t\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t\t(hint.x < source.x || hint.x > source.x + source.width))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\tif (horizontal)\n\t\t\t{\n\t\t\t\tpt.y = hint.y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpt.x = hint.x;\n\t\t\t}\n\t\t\n\t\t\tfor (var i = 0; i < hints.length; i++)\n\t\t\t{\n\t\t\t\thorizontal = !horizontal;\n\t\t\t\thint = hints[i];\n\t\t\t\t\n//\t\t\t\tmxLog.show();\n//\t\t\t\tmxLog.debug('hint', i, hint.x, hint.y);\n\t\t\t\t\n\t\t\t\tif (horizontal)\n\t\t\t\t{\n\t\t\t\t\tpt.y = hint.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpt.x = hint.x;\n\t\t\t\t}\n\t\t\n\t\t\t\tpushPoint(pt.clone());\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\thint = pt;\n\t\t\t// FIXME: First click in connect preview toggles orientation\n\t\t\thorizontal = true;\n\t\t}\n\n\t\t// Adds the last point\n\t\tpt = pts[lastInx];\n\n\t\tif (pt == null && target != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(target), state.view.getRoutingCenterY(target));\n\t\t}\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt.x = Math.round(pt.x);\n\t\t\tpt.y = Math.round(pt.y);\n\t\t\t\n\t\t\tif (hint != null)\n\t\t\t{\n\t\t\t\tif (horizontal && ((pts[lastInx] != null && pts[lastInx].y != hint.y) ||\n\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t(hint.y < target.y || hint.y > target.y + target.height))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t\t}\n\t\t\t\telse if (!horizontal && ((pts[lastInx] != null && pts[lastInx].x != hint.x) ||\n\t\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t\t(hint.x < target.x || hint.x > target.x + target.width))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the source terminal for floating ports\n\t\tif (pts[0] == null && source != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[1] != null &&\n\t\t\t\tmxUtils.contains(source, result[1].x, result[1].y))\n\t\t\t{\n\t\t\t\tresult.splice(1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the target terminal\n\t\tif (pts[lastInx] == null && target != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[result.length - 1] != null &&\n\t\t\t\tmxUtils.contains(target, result[result.length - 1].x, result[result.length - 1].y))\n\t\t\t{\n\t\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes last point if inside tolerance with end point\n\t\tif (pe != null && result[result.length - 1] != null &&\n\t\t\tMath.abs(pe.x - result[result.length - 1].x) < tol &&\n\t\t\tMath.abs(pe.y - result[result.length - 1].y) < tol)\n\t\t{\n\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t\n\t\t\t// Lines up second last point in result with end point\n\t\t\tif (result[result.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(result[result.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(result[result.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\torthBuffer: 10,\n\t\n\torthPointsFallback: true,\n\n\tdirVectors: [ [ -1, 0 ],\n\t\t\t[ 0, -1 ], [ 1, 0 ], [ 0, 1 ], [ -1, 0 ], [ 0, -1 ], [ 1, 0 ] ],\n\n\twayPoints1: [ [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0], [ 0, 0],  [ 0, 0],\n\t              [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0] ],\n\n\troutePatterns: [\n\t\t[ [ 513, 2308, 2081, 2562 ], [ 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 513, 1090, 514, 2564, 2184, 2562 ],\n\t\t\t[ 513, 2308, 2561, 1090, 514, 2568, 2308 ] ],\n\t[ [ 514, 1057, 513, 2308, 2081, 2562 ], [ 514, 2184, 2114, 2561 ],\n\t\t\t[ 514, 2184, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 514, 1057, 513, 2568, 2308, 2561 ] ],\n\t[ [ 1090, 514, 1057, 513, 2308, 2081, 2562 ], [ 2114, 2561 ],\n\t\t\t[ 1090, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 1090, 514, 1057, 513, 2308, 2561, 2568 ] ],\n\t[ [ 2081, 2562 ], [ 1057, 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 1057, 513, 1090, 514, 2184, 2562, 2564 ],\n\t\t\t[ 1057, 2561, 1090, 514, 2568, 2308 ] ] ],\n\t\n\tinlineRoutePatterns: [\n\t\t\t[ null, [ 2114, 2568 ], null, null ],\n\t\t\t[ null, [ 514, 2081, 2114, 2568 ] , null, null ],\n\t\t\t[ null, [ 2114, 2561 ], null, null ],\n\t\t\t[ [ 2081, 2562 ], [ 1057, 2114, 2568 ],\n\t\t\t\t\t[ 2184, 2562 ],\n\t\t\t\t\tnull ] ],\n\tvertexSeperations: [],\n\n\tlimits: [\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ],\n\n\tLEFT_MASK: 32,\n\n\tTOP_MASK: 64,\n\n\tRIGHT_MASK: 128,\n\n\tBOTTOM_MASK: 256,\n\n\tLEFT: 1,\n\n\tTOP: 2,\n\n\tRIGHT: 4,\n\n\tBOTTOM: 8,\n\n\t// TODO remove magic numbers\n\tSIDE_MASK: 480,\n\t//mxEdgeStyle.LEFT_MASK | mxEdgeStyle.TOP_MASK | mxEdgeStyle.RIGHT_MASK\n\t//| mxEdgeStyle.BOTTOM_MASK,\n\n\tCENTER_MASK: 512,\n\n\tSOURCE_MASK: 1024,\n\n\tTARGET_MASK: 2048,\n\n\tVERTEX_MASK: 3072,\n\t// mxEdgeStyle.SOURCE_MASK | mxEdgeStyle.TARGET_MASK,\n\t\n\tgetJettySize: function(state, source, target, points, isSource)\n\t{\n\t\tvar value = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_SOURCE_JETTY_SIZE :\n\t\t\tmxConstants.STYLE_TARGET_JETTY_SIZE, mxUtils.getValue(state.style,\n\t\t\t\t\tmxConstants.STYLE_JETTY_SIZE, mxEdgeStyle.orthBuffer));\n\t\t\n\t\tif (value == 'auto')\n\t\t{\n\t\t\t// Computes the automatic jetty size\n\t\t\tvar type = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW, mxConstants.NONE);\n\t\t\t\n\t\t\tif (type != mxConstants.NONE)\n\t\t\t{\n\t\t\t\tvar size = mxUtils.getNumber(state.style, (isSource) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE);\n\t\t\t\tvalue = Math.max(2, Math.ceil((size + mxEdgeStyle.orthBuffer) / mxEdgeStyle.orthBuffer)) * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvalue = 2 * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: OrthConnector\n\t * \n\t * Implements a local orthogonal router between the given\n\t * cells.\n\t * \n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * source - <mxCellState> that represents the source terminal.\n\t * target - <mxCellState> that represents the target terminal.\n\t * points - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t * \n\t */\n\tOrthConnector: function(state, source, target, points, result)\n\t{\n\t\tvar graph = state.view.graph;\n\t\tvar sourceEdge = source == null ? false : graph.getModel().isEdge(source.cell);\n\t\tvar targetEdge = target == null ? false : graph.getModel().isEdge(target.cell);\n\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t\tvar sourceX = source != null ? source.x : p0.x;\n\t\tvar sourceY = source != null ? source.y : p0.y;\n\t\tvar sourceWidth = source != null ? source.width : 0;\n\t\tvar sourceHeight = source != null ? source.height : 0;\n\t\t\n\t\tvar targetX = target != null ? target.x : pe.x;\n\t\tvar targetY = target != null ? target.y : pe.y;\n\t\tvar targetWidth = target != null ? target.width : 0;\n\t\tvar targetHeight = target != null ? target.height : 0;\n\n\t\tvar scaledSourceBuffer = state.view.scale * mxEdgeStyle.getJettySize(state, source, target, points, true);\n\t\tvar scaledTargetBuffer = state.view.scale * mxEdgeStyle.getJettySize(state, source, target, points, false);\n\t\t\n\t\t// Workaround for loop routing within buffer zone\n\t\tif (source != null && target == source)\n\t\t{\n\t\t\tscaledTargetBuffer = Math.max(scaledSourceBuffer, scaledTargetBuffer);\n\t\t\tscaledSourceBuffer = scaledTargetBuffer;\n\t\t}\n\t\t\n\t\tvar totalBuffer = scaledTargetBuffer + scaledSourceBuffer;\n\t\tvar tooShort = false;\n\t\t\n\t\t// Checks minimum distance for fixed points and falls back to segment connector\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tvar dx = pe.x - p0.x;\n\t\t\tvar dy = pe.y - p0.y;\n\t\t\t\n\t\t\ttooShort = dx * dx + dy * dy < totalBuffer * totalBuffer;\n\t\t}\n\n\t\tif (tooShort || (mxEdgeStyle.orthPointsFallback && (points != null &&\n\t\t\tpoints.length > 0)) || sourceEdge || targetEdge)\n\t\t{\n\t\t\tmxEdgeStyle.SegmentConnector(state, source, target, points, result);\n\t\t\t\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine the side(s) of the source and target vertices\n\t\t// that the edge may connect to\n\t\t// portConstraint [source, target]\n\t\tvar portConstraint = [mxConstants.DIRECTION_MASK_ALL, mxConstants.DIRECTION_MASK_ALL];\n\t\tvar rotation = 0;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tportConstraint[0] = mxUtils.getPortConstraints(source, state, true, \n\t\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(source.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(sourceX, sourceY, sourceWidth, sourceHeight), rotation);\n\t\t\t\tsourceX = newRect.x; \n\t\t\t\tsourceY = newRect.y;\n\t\t\t\tsourceWidth = newRect.width;\n\t\t\t\tsourceHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\tif (target != null)\n\t\t{\n\t\t\tportConstraint[1] = mxUtils.getPortConstraints(target, state, false,\n\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(target.style, mxConstants.STYLE_ROTATION, 0);\n\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(targetX, targetY, targetWidth, targetHeight), rotation);\n\t\t\t\ttargetX = newRect.x;\n\t\t\t\ttargetY = newRect.y;\n\t\t\t\ttargetWidth = newRect.width;\n\t\t\t\ttargetHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\t// Avoids floating point number errors\n\t\tsourceX = Math.round(sourceX * 10) / 10;\n\t\tsourceY = Math.round(sourceY * 10) / 10;\n\t\tsourceWidth = Math.round(sourceWidth * 10) / 10;\n\t\tsourceHeight = Math.round(sourceHeight * 10) / 10;\n\t\t\n\t\ttargetX = Math.round(targetX * 10) / 10;\n\t\ttargetY = Math.round(targetY * 10) / 10;\n\t\ttargetWidth = Math.round(targetWidth * 10) / 10;\n\t\ttargetHeight = Math.round(targetHeight * 10) / 10;\n\t\t\n\t\tvar dir = [0, 0];\n\n\t\t// Work out which faces of the vertices present against each other\n\t\t// in a way that would allow a 3-segment connection if port constraints\n\t\t// permitted.\n\t\t// geo -> [source, target] [x, y, width, height]\n\t\tvar geo = [ [sourceX, sourceY, sourceWidth, sourceHeight] ,\n\t\t            [targetX, targetY, targetWidth, targetHeight] ];\n\t\tvar buffer = [scaledSourceBuffer, scaledTargetBuffer];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tmxEdgeStyle.limits[i][1] = geo[i][0] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][2] = geo[i][1] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][4] = geo[i][0] + geo[i][2] + buffer[i];\n\t\t\tmxEdgeStyle.limits[i][8] = geo[i][1] + geo[i][3] + buffer[i];\n\t\t}\n\t\t\n\t\t// Work out which quad the target is in\n\t\tvar sourceCenX = geo[0][0] + geo[0][2] / 2.0;\n\t\tvar sourceCenY = geo[0][1] + geo[0][3] / 2.0;\n\t\tvar targetCenX = geo[1][0] + geo[1][2] / 2.0;\n\t\tvar targetCenY = geo[1][1] + geo[1][3] / 2.0;\n\t\t\n\t\tvar dx = sourceCenX - targetCenX;\n\t\tvar dy = sourceCenY - targetCenY;\n\n\t\tvar quad = 0;\n\n\t\tif (dx < 0)\n\t\t{\n\t\t\tif (dy < 0)\n\t\t\t{\n\t\t\t\tquad = 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (dy <= 0)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\t// Special case on x = 0 and negative y\n\t\t\t\tif (dx == 0)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for connection constraints\n\t\tvar currentTerm = null;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tcurrentTerm = p0;\n\t\t}\n\n\t\tvar constraint = [ [0.5, 0.5] , [0.5, 0.5] ];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (currentTerm != null)\n\t\t\t{\n\t\t\t\tconstraint[i][0] = (currentTerm.x - geo[i][0]) / geo[i][2];\n\t\t\t\t\n\t\t\t\tif (Math.abs(currentTerm.x - geo[i][0]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.x - geo[i][0] - geo[i][2]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t}\n\n\t\t\t\tconstraint[i][1] = (currentTerm.y - geo[i][1]) / geo[i][3];\n\n\t\t\t\tif (Math.abs(currentTerm.y - geo[i][1]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.y - geo[i][1] - geo[i][3]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentTerm = null;\n\t\t\t\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tcurrentTerm = pe;\n\t\t\t}\n\t\t}\n\n\t\tvar sourceTopDist = geo[0][1] - (geo[1][1] + geo[1][3]);\n\t\tvar sourceLeftDist = geo[0][0] - (geo[1][0] + geo[1][2]);\n\t\tvar sourceBottomDist = geo[1][1] - (geo[0][1] + geo[0][3]);\n\t\tvar sourceRightDist = geo[1][0] - (geo[0][0] + geo[0][2]);\n\n\t\tmxEdgeStyle.vertexSeperations[1] = Math.max(sourceLeftDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[2] = Math.max(sourceTopDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[4] = Math.max(sourceBottomDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[3] = Math.max(sourceRightDist - totalBuffer, 0);\n\t\t\t\t\n\t\t//==============================================================\n\t\t// Start of source and target direction determination\n\n\t\t// Work through the preferred orientations by relative positioning\n\t\t// of the vertices and list them in preferred and available order\n\t\t\n\t\tvar dirPref = [];\n\t\tvar horPref = [];\n\t\tvar vertPref = [];\n\n\t\thorPref[0] = (sourceLeftDist >= sourceRightDist) ? mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t: mxConstants.DIRECTION_MASK_EAST;\n\t\tvertPref[0] = (sourceTopDist >= sourceBottomDist) ? mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t: mxConstants.DIRECTION_MASK_SOUTH;\n\n\t\thorPref[1] = mxUtils.reversePortConstraints(horPref[0]);\n\t\tvertPref[1] = mxUtils.reversePortConstraints(vertPref[0]);\n\t\t\n\t\tvar preferredHorizDist = sourceLeftDist >= sourceRightDist ? sourceLeftDist\n\t\t\t\t: sourceRightDist;\n\t\tvar preferredVertDist = sourceTopDist >= sourceBottomDist ? sourceTopDist\n\t\t\t\t: sourceBottomDist;\n\n\t\tvar prefOrdering = [ [0, 0] , [0, 0] ];\n\t\tvar preferredOrderSet = false;\n\n\t\t// If the preferred port isn't available, switch it\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((horPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\thorPref[i] = mxUtils.reversePortConstraints(horPref[i]);\n\t\t\t}\n\n\t\t\tif ((vertPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tvertPref[i] = mxUtils\n\t\t\t\t\t\t.reversePortConstraints(vertPref[i]);\n\t\t\t}\n\n\t\t\tprefOrdering[i][0] = vertPref[i];\n\t\t\tprefOrdering[i][1] = horPref[i];\n\t\t}\n\n\t\tif (preferredVertDist > 0\n\t\t\t\t&& preferredHorizDist > 0)\n\t\t{\n\t\t\t// Possibility of two segment edge connection\n\t\t\tif (((horPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((vertPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t\telse if (((vertPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((horPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (preferredVertDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\tpreferredOrderSet = true;\n\n\t\t}\n\t\t\n\t\tif (preferredHorizDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\tpreferredOrderSet = true;\n\t\t}\n\n\t\t// The source and target prefs are now an ordered list of\n\t\t// the preferred port selections\n\t\t// It the list can contain gaps, compact it\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((prefOrdering[i][0] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tprefOrdering[i][0] = prefOrdering[i][1];\n\t\t\t}\n\n\t\t\tdirPref[i] = prefOrdering[i][0] & portConstraint[i];\n\t\t\tdirPref[i] |= (prefOrdering[i][1] & portConstraint[i]) << 8;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][i] & portConstraint[i]) << 16;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][1 - i] & portConstraint[i]) << 24;\n\n\t\t\tif ((dirPref[i] & 0xF) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = dirPref[i] << 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF00) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xF) | dirPref[i] >> 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF0000) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xFFFF)\n\t\t\t\t\t\t| ((dirPref[i] & 0xF000000) >> 8);\n\t\t\t}\n\n\t\t\tdir[i] = dirPref[i] & 0xF;\n\n\t\t\tif (portConstraint[i] == mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_EAST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_SOUTH)\n\t\t\t{\n\t\t\t\tdir[i] = portConstraint[i];\n\t\t\t}\n\t\t}\n\n\t\t//==============================================================\n\t\t// End of source and target direction determination\n\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\t\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar routePattern = mxEdgeStyle.routePatterns[sourceIndex - 1][targetIndex - 1];\n\n\t\tmxEdgeStyle.wayPoints1[0][0] = geo[0][0];\n\t\tmxEdgeStyle.wayPoints1[0][1] = geo[0][1];\n\n\t\tswitch (dir[0])\n\t\t{\n\t\t\tcase mxConstants.DIRECTION_MASK_WEST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] -= scaledSourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_SOUTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += geo[0][3] + scaledSourceBuffer;\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_EAST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += geo[0][2] + scaledSourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_NORTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] -= scaledSourceBuffer;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar currentIndex = 0;\n\n\t\t// Orientation, 0 horizontal, 1 vertical\n\t\tvar lastOrientation = (dir[0] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t: 1;\n\t\tvar initialOrientation = lastOrientation;\n\t\tvar currentOrientation = 0;\n\n\t\tfor (var i = 0; i < routePattern.length; i++)\n\t\t{\n\t\t\tvar nextDirection = routePattern[i] & 0xF;\n\n\t\t\t// Rotate the index of this direction by the quad\n\t\t\t// to get the real direction\n\t\t\tvar directionIndex = nextDirection == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t\t: nextDirection;\n\n\t\t\tdirectionIndex += quad;\n\n\t\t\tif (directionIndex > 4)\n\t\t\t{\n\t\t\t\tdirectionIndex -= 4;\n\t\t\t}\n\n\t\t\tvar direction = mxEdgeStyle.dirVectors[directionIndex - 1];\n\n\t\t\tcurrentOrientation = (directionIndex % 2 > 0) ? 0 : 1;\n\t\t\t// Only update the current index if the point moved\n\t\t\t// in the direction of the current segment move,\n\t\t\t// otherwise the same point is moved until there is \n\t\t\t// a segment direction change\n\t\t\tif (currentOrientation != lastOrientation)\n\t\t\t{\n\t\t\t\tcurrentIndex++;\n\t\t\t\t// Copy the previous way point into the new one\n\t\t\t\t// We can't base the new position on index - 1\n\t\t\t\t// because sometime elbows turn out not to exist,\n\t\t\t\t// then we'd have to rewind.\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] = mxEdgeStyle.wayPoints1[currentIndex - 1][0];\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] = mxEdgeStyle.wayPoints1[currentIndex - 1][1];\n\t\t\t}\n\n\t\t\tvar tar = (routePattern[i] & mxEdgeStyle.TARGET_MASK) > 0;\n\t\t\tvar sou = (routePattern[i] & mxEdgeStyle.SOURCE_MASK) > 0;\n\t\t\tvar side = (routePattern[i] & mxEdgeStyle.SIDE_MASK) >> 5;\n\t\t\tside = side << quad;\n\n\t\t\tif (side > 0xF)\n\t\t\t{\n\t\t\t\tside = side >> 4;\n\t\t\t}\n\n\t\t\tvar center = (routePattern[i] & mxEdgeStyle.CENTER_MASK) > 0;\n\n\t\t\tif ((sou || tar) && side < 9)\n\t\t\t{\n\t\t\t\tvar limit = 0;\n\t\t\t\tvar souTar = sou ? 0 : 1;\n\n\t\t\t\tif (center && currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][0] + constraint[souTar][0] * geo[souTar][2];\n\t\t\t\t}\n\t\t\t\telse if (center)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][1] + constraint[souTar][1] * geo[souTar][3];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlimit = mxEdgeStyle.limits[souTar][side];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tvar lastX = mxEdgeStyle.wayPoints1[currentIndex][0];\n\t\t\t\t\tvar deltaX = (limit - lastX) * direction[0];\n\n\t\t\t\t\tif (deltaX > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t\t\t* deltaX;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar lastY = mxEdgeStyle.wayPoints1[currentIndex][1];\n\t\t\t\t\tvar deltaY = (limit - lastY) * direction[1];\n\n\t\t\t\t\tif (deltaY > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t\t\t* deltaY;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (center)\n\t\t\t{\n\t\t\t\t// Which center we're travelling to depend on the current direction\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t}\n\n\t\t\tif (currentIndex > 0\n\t\t\t\t\t&& mxEdgeStyle.wayPoints1[currentIndex][currentOrientation] == mxEdgeStyle.wayPoints1[currentIndex - 1][currentOrientation])\n\t\t\t{\n\t\t\t\tcurrentIndex--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlastOrientation = currentOrientation;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= currentIndex; i++)\n\t\t{\n\t\t\tif (i == currentIndex)\n\t\t\t{\n\t\t\t\t// Last point can cause last segment to be in\n\t\t\t\t// same direction as jetty/approach. If so,\n\t\t\t\t// check the number of points is consistent\n\t\t\t\t// with the relative orientation of source and target\n\t\t\t\t// jx. Same orientation requires an even\n\t\t\t\t// number of turns (points), different requires\n\t\t\t\t// odd.\n\t\t\t\tvar targetOrientation = (dir[1] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t\t\t: 1;\n\t\t\t\tvar sameOrient = targetOrientation == initialOrientation ? 0 : 1;\n\n\t\t\t\t// (currentIndex + 1) % 2 is 0 for even number of points,\n\t\t\t\t// 1 for odd\n\t\t\t\tif (sameOrient != (currentIndex + 1) % 2)\n\t\t\t\t{\n\t\t\t\t\t// The last point isn't required\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(Math.round(mxEdgeStyle.wayPoints1[i][0]), Math.round(mxEdgeStyle.wayPoints1[i][1])));\n\t\t}\n\t\t\n\t\t// Removes duplicates\n\t\tvar index = 1;\n\t\t\n\t\twhile (index < result.length)\n\t\t{\n\t\t\tif (result[index - 1] == null || result[index] == null ||\n\t\t\t\tresult[index - 1].x != result[index].x ||\n\t\t\t\tresult[index - 1].y != result[index].y)\n\t\t\t{\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.splice(index, 1);\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetRoutePattern: function(dir, quad, dx, dy)\n\t{\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar result = routePatterns[sourceIndex - 1][targetIndex - 1];\n\n\t\tif (dx == 0 || dy == 0)\n\t\t{\n\t\t\tif (inlineRoutePatterns[sourceIndex - 1][targetIndex - 1] != null)\n\t\t\t{\n\t\t\t\tresult = inlineRoutePatterns[sourceIndex - 1][targetIndex - 1];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxStyleRegistry =\n{\n\t/**\n\t * Class: mxStyleRegistry\n\t *\n\t * Singleton class that acts as a global converter from string to object values\n\t * in a style. This is currently only used to perimeters and edge styles.\n\t * \n\t * Variable: values\n\t *\n\t * Maps from strings to objects.\n\t */\n\tvalues: [],\n\n\t/**\n\t * Function: putValue\n\t *\n\t * Puts the given object into the registry under the given name.\n\t */\n\tputValue: function(name, obj)\n\t{\n\t\tmxStyleRegistry.values[name] = obj;\n\t},\n\n\t/**\n\t * Function: getValue\n\t *\n\t * Returns the value associated with the given name.\n\t */\n\tgetValue: function(name)\n\t{\n\t\treturn mxStyleRegistry.values[name];\n\t},\n\t\n\t/**\n\t * Function: getName\n\t * \n\t * Returns the name for the given value.\n\t */\n\tgetName: function(value)\n\t{\n\t\tfor (var key in mxStyleRegistry.values)\n\t\t{\n\t\t\tif (mxStyleRegistry.values[key] == value)\n\t\t\t{\n\t\t\t\treturn key;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\n};\n\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ELBOW, mxEdgeStyle.ElbowConnector);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ENTITY_RELATION, mxEdgeStyle.EntityRelation);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_LOOP, mxEdgeStyle.Loop);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_SIDETOSIDE, mxEdgeStyle.SideToSide);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_TOPTOBOTTOM, mxEdgeStyle.TopToBottom);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ORTHOGONAL, mxEdgeStyle.OrthConnector);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_SEGMENT, mxEdgeStyle.SegmentConnector);\n\nmxStyleRegistry.putValue(mxConstants.PERIMETER_ELLIPSE, mxPerimeter.EllipsePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_RECTANGLE, mxPerimeter.RectanglePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_RHOMBUS, mxPerimeter.RhombusPerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_TRIANGLE, mxPerimeter.TrianglePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_HEXAGON, mxPerimeter.HexagonPerimeter);\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphView\n *\n * Extends <mxEventSource> to implement a view for a graph. This class is in\n * charge of computing the absolute coordinates for the relative child\n * geometries, the points for perimeters and edge styles and keeping them\n * cached in <mxCellStates> for faster retrieval. The states are updated\n * whenever the model or the view state (translate, scale) changes. The scale\n * and translate are honoured in the bounds.\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the root was changed in <setCurrentRoot>. The <code>edit</code>\n * property contains the <mxUndoableEdit> which contains the\n * <mxCurrentRootChange>.\n * \n * Event: mxEvent.SCALE_AND_TRANSLATE\n * \n * Fires after the scale and translate have been changed in <scaleAndTranslate>.\n * The <code>scale</code>, <code>previousScale</code>, <code>translate</code>\n * and <code>previousTranslate</code> properties contain the new and previous\n * scale and translate, respectively.\n * \n * Event: mxEvent.SCALE\n * \n * Fires after the scale was changed in <setScale>. The <code>scale</code> and\n * <code>previousScale</code> properties contain the new and previous scale.\n * \n * Event: mxEvent.TRANSLATE\n * \n * Fires after the translate was changed in <setTranslate>. The\n * <code>translate</code> and <code>previousTranslate</code> properties contain\n * the new and previous value for translate.\n * \n * Event: mxEvent.DOWN and mxEvent.UP\n * \n * Fire if the current root is changed by executing an <mxCurrentRootChange>.\n * The event name depends on the location of the root in the cell hierarchy\n * with respect to the current root. The <code>root</code> and\n * <code>previous</code> properties contain the new and previous root,\n * respectively.\n * \n * Constructor: mxGraphView\n *\n * Constructs a new view for the given <mxGraph>.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphView(graph)\n{\n\tthis.graph = graph;\n\tthis.translate = new mxPoint();\n\tthis.graphBounds = new mxRectangle();\n\tthis.states = new mxDictionary();\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphView.prototype = new mxEventSource();\nmxGraphView.prototype.constructor = mxGraphView;\n\n/**\n *\n */\nmxGraphView.prototype.EMPTY_POINT = new mxPoint();\n\n/**\n * Variable: doneResource\n * \n * Specifies the resource key for the status message after a long operation.\n * If the resource for this key does not exist then the value is used as\n * the status message. Default is 'done'.\n */\nmxGraphView.prototype.doneResource = (mxClient.language != 'none') ? 'done' : '';\n\n/**\n * Function: updatingDocumentResource\n *\n * Specifies the resource key for the status message while the document is\n * being updated. If the resource for this key does not exist then the\n * value is used as the status message. Default is 'updatingDocument'.\n */\nmxGraphView.prototype.updatingDocumentResource = (mxClient.language != 'none') ? 'updatingDocument' : '';\n\n/**\n * Variable: allowEval\n * \n * Specifies if string values in cell styles should be evaluated using\n * <mxUtils.eval>. This will only be used if the string values can't be mapped\n * to objects using <mxStyleRegistry>. Default is false. NOTE: Enabling this\n * switch carries a possible security risk.\n */\nmxGraphView.prototype.allowEval = false;\n\n/**\n * Variable: captureDocumentGesture\n * \n * Specifies if a gesture should be captured when it goes outside of the\n * graph container. Default is true.\n */\nmxGraphView.prototype.captureDocumentGesture = true;\n\n/**\n * Variable: optimizeVmlReflows\n * \n * Specifies if the <canvas> should be hidden while rendering in IE8 standards\n * mode and quirks mode. This will significantly improve rendering performance.\n * Default is true.\n */\nmxGraphView.prototype.optimizeVmlReflows = true;\n\n/**\n * Variable: rendering\n * \n * Specifies if shapes should be created, updated and destroyed using the\n * methods of <mxCellRenderer> in <graph>. Default is true.\n */\nmxGraphView.prototype.rendering = true;\n\n/**\n * Variable: graph\n *\n * Reference to the enclosing <mxGraph>.\n */\nmxGraphView.prototype.graph = null;\n\n/**\n * Variable: currentRoot\n *\n * <mxCell> that acts as the root of the displayed cell hierarchy.\n */\nmxGraphView.prototype.currentRoot = null;\n\n/**\n * Variable: graphBounds\n *\n * <mxRectangle> that caches the scales, translated bounds of the current view.\n */\nmxGraphView.prototype.graphBounds = null;\n\n/**\n * Variable: scale\n * \n * Specifies the scale. Default is 1 (100%).\n */\nmxGraphView.prototype.scale = 1;\n\t\n/**\n * Variable: translate\n *\n * <mxPoint> that specifies the current translation. Default is a new\n * empty <mxPoint>.\n */\nmxGraphView.prototype.translate = null;\n\n/**\n * Variable: states\n * \n * <mxDictionary> that maps from cell IDs to <mxCellStates>.\n */\nmxGraphView.prototype.states = null;\n\n/**\n * Variable: updateStyle\n * \n * Specifies if the style should be updated in each validation step. If this\n * is false then the style is only updated if the state is created or if the\n * style of the cell was changed. Default is false.\n */\nmxGraphView.prototype.updateStyle = false;\n\n/**\n * Variable: lastNode\n * \n * During validation, this contains the last DOM node that was processed.\n */\nmxGraphView.prototype.lastNode = null;\n\n/**\n * Variable: lastHtmlNode\n * \n * During validation, this contains the last HTML DOM node that was processed.\n */\nmxGraphView.prototype.lastHtmlNode = null;\n\n/**\n * Variable: lastForegroundNode\n * \n * During validation, this contains the last edge's DOM node that was processed.\n */\nmxGraphView.prototype.lastForegroundNode = null;\n\n/**\n * Variable: lastForegroundHtmlNode\n * \n * During validation, this contains the last edge HTML DOM node that was processed.\n */\nmxGraphView.prototype.lastForegroundHtmlNode = null;\n\n/**\n * Function: getGraphBounds\n *\n * Returns <graphBounds>.\n */\nmxGraphView.prototype.getGraphBounds = function()\n{\n\treturn this.graphBounds;\n};\n\n/**\n * Function: setGraphBounds\n *\n * Sets <graphBounds>.\n */\nmxGraphView.prototype.setGraphBounds = function(value)\n{\n\tthis.graphBounds = value;\n};\n\n/**\n * Function: getBounds\n * \n * Returns the union of all <mxCellStates> for the given array of <mxCells>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounds should be returned.\n */\nmxGraphView.prototype.getBounds = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (model.isVertex(cells[i]) || model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar state = this.getState(cells[i]);\n\t\t\t\n\t\t\t\tif (state != null)\n\t\t\t\t{\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(state);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: setCurrentRoot\n *\n * Sets and returns the current root and fires an <undo> event before\n * calling <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * root - <mxCell> that specifies the root of the displayed cell hierarchy.\n */\nmxGraphView.prototype.setCurrentRoot = function(root)\n{\n\tif (this.currentRoot != root)\n\t{\n\t\tvar change = new mxCurrentRootChange(this, root);\n\t\tchange.execute();\n\t\tvar edit = new mxUndoableEdit(this, false);\n\t\tedit.add(change);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n\t\tthis.graph.sizeDidChange();\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: scaleAndTranslate\n *\n * Sets the scale and translation and fires a <scale> and <translate> event\n * before calling <revalidate> followed by <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * scale - Decimal value that specifies the new scale (1 is 100%).\n * dx - X-coordinate of the translation.\n * dy - Y-coordinate of the translation.\n */\nmxGraphView.prototype.scaleAndTranslate = function(scale, dx, dy)\n{\n\tvar previousScale = this.scale;\n\tvar previousTranslate = new mxPoint(this.translate.x, this.translate.y);\n\t\n\tif (this.scale != scale || this.translate.x != dx || this.translate.y != dy)\n\t{\n\t\tthis.scale = scale;\n\t\t\n\t\tthis.translate.x = dx;\n\t\tthis.translate.y = dy;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SCALE_AND_TRANSLATE,\n\t\t'scale', scale, 'previousScale', previousScale,\n\t\t'translate', this.translate, 'previousTranslate', previousTranslate));\n};\n\n/**\n * Function: getScale\n * \n * Returns the <scale>.\n */\nmxGraphView.prototype.getScale = function()\n{\n\treturn this.scale;\n};\n\n/**\n * Function: setScale\n *\n * Sets the scale and fires a <scale> event before calling <revalidate> followed\n * by <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * value - Decimal value that specifies the new scale (1 is 100%).\n */\nmxGraphView.prototype.setScale = function(value)\n{\n\tvar previousScale = this.scale;\n\t\n\tif (this.scale != value)\n\t{\n\t\tthis.scale = value;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SCALE,\n\t\t'scale', value, 'previousScale', previousScale));\n};\n\n/**\n * Function: getTranslate\n * \n * Returns the <translate>.\n */\nmxGraphView.prototype.getTranslate = function()\n{\n\treturn this.translate;\n};\n\n/**\n * Function: setTranslate\n *\n * Sets the translation and fires a <translate> event before calling\n * <revalidate> followed by <mxGraph.sizeDidChange>. The translation is the\n * negative of the origin.\n *\n * Parameters:\n *\n * dx - X-coordinate of the translation.\n * dy - Y-coordinate of the translation.\n */\nmxGraphView.prototype.setTranslate = function(dx, dy)\n{\n\tvar previousTranslate = new mxPoint(this.translate.x, this.translate.y);\n\t\n\tif (this.translate.x != dx || this.translate.y != dy)\n\t{\n\t\tthis.translate.x = dx;\n\t\tthis.translate.y = dy;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.TRANSLATE,\n\t\t'translate', this.translate, 'previousTranslate', previousTranslate));\n};\n\n/**\n * Function: viewStateChanged\n * \n * Invoked after <scale> and/or <translate> has changed.\n */\nmxGraphView.prototype.viewStateChanged = function()\n{\n\tthis.revalidate();\n\tthis.graph.sizeDidChange();\n};\n\n/**\n * Function: refresh\n *\n * Clears the view if <currentRoot> is not null and revalidates.\n */\nmxGraphView.prototype.refresh = function()\n{\n\tif (this.currentRoot != null)\n\t{\n\t\tthis.clear();\n\t}\n\t\n\tthis.revalidate();\n};\n\n/**\n * Function: revalidate\n *\n * Revalidates the complete view with all cell states.\n */\nmxGraphView.prototype.revalidate = function()\n{\n\tthis.invalidate();\n\tthis.validate();\n};\n\n/**\n * Function: clear\n *\n * Removes the state of the given cell and all descendants if the given\n * cell is not the current root.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> for which the state should be removed. Default\n * is the root of the model.\n * force - Boolean indicating if the current root should be ignored for\n * recursion.\n */\nmxGraphView.prototype.clear = function(cell, force, recurse)\n{\n\tvar model = this.graph.getModel();\n\tcell = cell || model.getRoot();\n\tforce = (force != null) ? force : false;\n\trecurse = (recurse != null) ? recurse : true;\n\t\n\tthis.removeState(cell);\n\t\n\tif (recurse && (force || cell != this.currentRoot))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.clear(model.getChildAt(cell, i), force);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.invalidate(cell);\n\t}\n};\n\n/**\n * Function: invalidate\n * \n * Invalidates the state of the given cell, all its descendants and\n * connected edges.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be invalidated. Default is the root of the\n * model.\n */\nmxGraphView.prototype.invalidate = function(cell, recurse, includeEdges)\n{\n\tvar model = this.graph.getModel();\n\tcell = cell || model.getRoot();\n\trecurse = (recurse != null) ? recurse : true;\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tvar state = this.getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\tstate.invalid = true;\n\t}\n\t\n\t// Avoids infinite loops for invalid graphs\n\tif (!cell.invalidating)\n\t{\n\t\tcell.invalidating = true;\n\t\t\n\t\t// Recursively invalidates all descendants\n\t\tif (recurse)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\tthis.invalidate(child, recurse, includeEdges);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Propagates invalidation to all connected edges\n\t\tif (includeEdges)\n\t\t{\n\t\t\tvar edgeCount = model.getEdgeCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t{\n\t\t\t\tthis.invalidate(model.getEdgeAt(cell, i), recurse, includeEdges);\n\t\t\t}\n\t\t}\n\t\t\n\t\tdelete cell.invalidating;\n\t}\n};\n\n/**\n * Function: validate\n * \n * Calls <validateCell> and <validateCellState> and updates the <graphBounds>\n * using <getBoundingBox>. Finally the background is validated using\n * <validateBackground>.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be used as the root of the validation.\n * Default is <currentRoot> or the root of the model.\n */\nmxGraphView.prototype.validate = function(cell)\n{\n\tvar t0 = mxLog.enter('mxGraphView.validate');\n\twindow.status = mxResources.get(this.updatingDocumentResource) ||\n\t\tthis.updatingDocumentResource;\n\t\n\tthis.resetValidationState();\n\t\n\t// Improves IE rendering speed by minimizing reflows\n\tvar prevDisplay = null;\n\t\n\tif (this.optimizeVmlReflows && this.canvas != null && this.textDiv == null &&\n\t\t((document.documentMode == 8 && !mxClient.IS_EM) || mxClient.IS_QUIRKS))\n\t{\n\t\t// Placeholder keeps scrollbar positions when canvas is hidden\n\t\tthis.placeholder = document.createElement('div');\n\t\tthis.placeholder.style.position = 'absolute';\n\t\tthis.placeholder.style.width = this.canvas.clientWidth + 'px';\n\t\tthis.placeholder.style.height = this.canvas.clientHeight + 'px';\n\t\tthis.canvas.parentNode.appendChild(this.placeholder);\n\n\t\tprevDisplay = this.drawPane.style.display;\n\t\tthis.canvas.style.display = 'none';\n\t\t\n\t\t// Creates temporary DIV used for text measuring in mxText.updateBoundingBox\n\t\tthis.textDiv = document.createElement('div');\n\t\tthis.textDiv.style.position = 'absolute';\n\t\tthis.textDiv.style.whiteSpace = 'nowrap';\n\t\tthis.textDiv.style.visibility = 'hidden';\n\t\tthis.textDiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\tthis.textDiv.style.zoom = '1';\n\t\t\n\t\tdocument.body.appendChild(this.textDiv);\n\t}\n\t\n\tvar graphBounds = this.getBoundingBox(this.validateCellState(\n\t\tthis.validateCell(cell || ((this.currentRoot != null) ?\n\t\t\tthis.currentRoot : this.graph.getModel().getRoot()))));\n\tthis.setGraphBounds((graphBounds != null) ? graphBounds : this.getEmptyBounds());\n\tthis.validateBackground();\n\t\n\tif (prevDisplay != null)\n\t{\n\t\tthis.canvas.style.display = prevDisplay;\n\t\tthis.textDiv.parentNode.removeChild(this.textDiv);\n\t\t\n\t\tif (this.placeholder != null)\n\t\t{\n\t\t\tthis.placeholder.parentNode.removeChild(this.placeholder);\n\t\t}\n\t\t\t\t\n\t\t// Textdiv cannot be reused\n\t\tthis.textDiv = null;\n\t}\n\t\n\tthis.resetValidationState();\n\t\n\twindow.status = mxResources.get(this.doneResource) ||\n\t\tthis.doneResource;\n\tmxLog.leave('mxGraphView.validate', t0);\n};\n\n/**\n * Function: getEmptyBounds\n * \n * Returns the bounds for an empty graph. This returns a rectangle at\n * <translate> with the size of 0 x 0.\n */\nmxGraphView.prototype.getEmptyBounds = function()\n{\n\treturn new mxRectangle(this.translate.x * this.scale, this.translate.y * this.scale);\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the bounding box of the shape and the label for the given\n * <mxCellState> and its children if recurse is true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose bounding box should be returned.\n * recurse - Optional boolean indicating if the children should be included.\n * Default is true.\n */\nmxGraphView.prototype.getBoundingBox = function(state, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\tvar bbox = null;\n\t\n\tif (state != null)\n\t{\n\t\tif (state.shape != null && state.shape.boundingBox != null)\n\t\t{\n\t\t\tbbox = state.shape.boundingBox.clone();\n\t\t}\n\t\t\n\t\t// Adds label bounding box to graph bounds\n\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tif (bbox != null)\n\t\t\t{\n\t\t\t\tbbox.add(state.text.boundingBox);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbbox = state.text.boundingBox.clone();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (recurse)\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\tvar childCount = model.getChildCount(state.cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar bounds = this.getBoundingBox(this.getState(model.getChildAt(state.cell, i)));\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tif (bbox == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox = bounds;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox.add(bounds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn bbox;\n};\n\n/**\n * Function: createBackgroundPageShape\n *\n * Creates and returns the shape used as the background page.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that represents the bounds of the shape.\n */\nmxGraphView.prototype.createBackgroundPageShape = function(bounds)\n{\n\treturn new mxRectangleShape(bounds, 'white', 'black');\n};\n\n/**\n * Function: validateBackground\n *\n * Calls <validateBackgroundImage> and <validateBackgroundPage>.\n */\nmxGraphView.prototype.validateBackground = function()\n{\n\tthis.validateBackgroundImage();\n\tthis.validateBackgroundPage();\n};\n\n/**\n * Function: validateBackgroundImage\n * \n * Validates the background image.\n */\nmxGraphView.prototype.validateBackgroundImage = function()\n{\n\tvar bg = this.graph.getBackgroundImage();\n\t\n\tif (bg != null)\n\t{\n\t\tif (this.backgroundImage == null || this.backgroundImage.image != bg.src)\n\t\t{\n\t\t\tif (this.backgroundImage != null)\n\t\t\t{\n\t\t\t\tthis.backgroundImage.destroy();\n\t\t\t}\n\t\t\t\n\t\t\tvar bounds = new mxRectangle(0, 0, 1, 1);\n\t\t\t\n\t\t\tthis.backgroundImage = new mxImageShape(bounds, bg.src);\n\t\t\tthis.backgroundImage.dialect = this.graph.dialect;\n\t\t\tthis.backgroundImage.init(this.backgroundPane);\n\t\t\tthis.backgroundImage.redraw();\n\n\t\t\t// Workaround for ignored event on background in IE8 standards mode\n\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tmxEvent.addGestureListeners(this.backgroundImage.node,\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t\t\t}),\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t\t\t}),\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.redrawBackgroundImage(this.backgroundImage, bg);\n\t}\n\telse if (this.backgroundImage != null)\n\t{\n\t\tthis.backgroundImage.destroy();\n\t\tthis.backgroundImage = null;\n\t}\n};\n\n/**\n * Function: validateBackgroundPage\n * \n * Validates the background page.\n */\nmxGraphView.prototype.validateBackgroundPage = function()\n{\n\tif (this.graph.pageVisible)\n\t{\n\t\tvar bounds = this.getBackgroundPageBounds();\n\t\t\n\t\tif (this.backgroundPageShape == null)\n\t\t{\n\t\t\tthis.backgroundPageShape = this.createBackgroundPageShape(bounds);\n\t\t\tthis.backgroundPageShape.scale = this.scale;\n\t\t\tthis.backgroundPageShape.isShadow = true;\n\t\t\tthis.backgroundPageShape.dialect = this.graph.dialect;\n\t\t\tthis.backgroundPageShape.init(this.backgroundPane);\n\t\t\tthis.backgroundPageShape.redraw();\n\t\t\t\n\t\t\t// Adds listener for double click handling on background\n\t\t\tif (this.graph.nativeDblClickEnabled)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(this.backgroundPageShape.node, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.dblClick(evt);\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\t// Adds basic listeners for graph event dispatching outside of the\n\t\t\t// container and finishing the handling of a single gesture\n\t\t\tmxEvent.addGestureListeners(this.backgroundPageShape.node,\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\t// Hides the tooltip if mouse is outside container\n\t\t\t\t\tif (this.graph.tooltipHandler != null && this.graph.tooltipHandler.isHideOnHover())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.tooltipHandler.hide();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.graph.isMouseDown && !mxEvent.isConsumed(evt))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.backgroundPageShape.scale = this.scale;\n\t\t\tthis.backgroundPageShape.bounds = bounds;\n\t\t\tthis.backgroundPageShape.redraw();\n\t\t}\n\t}\n\telse if (this.backgroundPageShape != null)\n\t{\n\t\tthis.backgroundPageShape.destroy();\n\t\tthis.backgroundPageShape = null;\n\t}\n};\n\n/**\n * Function: getBackgroundPageBounds\n * \n * Returns the bounds for the background page.\n */\nmxGraphView.prototype.getBackgroundPageBounds = function()\n{\n\tvar fmt = this.graph.pageFormat;\n\tvar ps = this.scale * this.graph.pageScale;\n\tvar bounds = new mxRectangle(this.scale * this.translate.x, this.scale * this.translate.y,\n\t\t\tfmt.width * ps, fmt.height * ps);\n\t\n\treturn bounds;\n};\n\n/**\n * Function: redrawBackgroundImage\n *\n * Updates the bounds and redraws the background image.\n * \n * Example:\n * \n * If the background image should not be scaled, this can be replaced with\n * the following.\n * \n * (code)\n * mxGraphView.prototype.redrawBackground = function(backgroundImage, bg)\n * {\n *   backgroundImage.bounds.x = this.translate.x;\n *   backgroundImage.bounds.y = this.translate.y;\n *   backgroundImage.bounds.width = bg.width;\n *   backgroundImage.bounds.height = bg.height;\n *\n *   backgroundImage.redraw();\n * };\n * (end)\n * \n * Parameters:\n * \n * backgroundImage - <mxImageShape> that represents the background image.\n * bg - <mxImage> that specifies the image and its dimensions.\n */\nmxGraphView.prototype.redrawBackgroundImage = function(backgroundImage, bg)\n{\n\tbackgroundImage.scale = this.scale;\n\tbackgroundImage.bounds.x = this.scale * this.translate.x;\n\tbackgroundImage.bounds.y = this.scale * this.translate.y;\n\tbackgroundImage.bounds.width = this.scale * bg.width;\n\tbackgroundImage.bounds.height = this.scale * bg.height;\n\n\tbackgroundImage.redraw();\n};\n\n/**\n * Function: validateCell\n * \n * Recursively creates the cell state for the given cell if visible is true and\n * the given cell is visible. If the cell is not visible but the state exists\n * then it is removed using <removeState>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose <mxCellState> should be created.\n * visible - Optional boolean indicating if the cell should be visible. Default\n * is true.\n */\nmxGraphView.prototype.validateCell = function(cell, visible)\n{\n\tvisible = (visible != null) ? visible : true;\n\t\n\tif (cell != null)\n\t{\n\t\tvisible = visible && this.graph.isCellVisible(cell);\n\t\tvar state = this.getState(cell, visible);\n\t\t\n\t\tif (state != null && !visible)\n\t\t{\n\t\t\tthis.removeState(cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tthis.validateCell(model.getChildAt(cell, i), visible &&\n\t\t\t\t\t(!this.isCellCollapsed(cell) || cell == this.currentRoot));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: validateCellState\n * \n * Validates and repaints the <mxCellState> for the given <mxCell>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose <mxCellState> should be validated.\n * recurse - Optional boolean indicating if the children of the cell should be\n * validated. Default is true.\n */\nmxGraphView.prototype.validateCellState = function(cell, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\t\n\t\t\tif (state.invalid)\n\t\t\t{\n\t\t\t\tstate.invalid = false;\n\t\t\t\t\n\t\t\t\tif (state.style == null)\n\t\t\t\t{\n\t\t\t\t\tstate.style = this.graph.getCellStyle(state.cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (cell != this.currentRoot)\n\t\t\t\t{\n\t\t\t\t\tthis.validateCellState(model.getParent(cell), false);\n\t\t\t\t}\n\n\t\t\t\tstate.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, true), false), true);\n\t\t\t\tstate.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, false), false), false);\n\t\t\t\t\n\t\t\t\tthis.updateCellState(state);\n\t\t\t\t\n\t\t\t\t// Repaint happens immediately after the cell is validated\n\t\t\t\tif (cell != this.currentRoot && !state.invalid)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.cellRenderer.redraw(state, false, this.isRendering());\n\n\t\t\t\t\t// Handles changes to invertex paintbounds after update of rendering shape\n\t\t\t\t\tstate.updateCachedBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (recurse && !state.invalid)\n\t\t\t{\n\t\t\t\t// Updates order in DOM if recursively traversing\n\t\t\t\tif (state.shape != null)\n\t\t\t\t{\n\t\t\t\t\tthis.stateValidated(state);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.validateCellState(model.getChildAt(cell, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: updateCellState\n * \n * Updates the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to be updated.\n */\nmxGraphView.prototype.updateCellState = function(state)\n{\n\tstate.absoluteOffset.x = 0;\n\tstate.absoluteOffset.y = 0;\n\tstate.origin.x = 0;\n\tstate.origin.y = 0;\n\tstate.length = 0;\n\t\n\tif (state.cell != this.currentRoot)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\tvar pState = this.getState(model.getParent(state.cell)); \n\t\t\n\t\tif (pState != null && pState.cell != this.currentRoot)\n\t\t{\n\t\t\tstate.origin.x += pState.origin.x;\n\t\t\tstate.origin.y += pState.origin.y;\n\t\t}\n\t\t\n\t\tvar offset = this.graph.getChildOffsetForCell(state.cell);\n\t\t\n\t\tif (offset != null)\n\t\t{\n\t\t\tstate.origin.x += offset.x;\n\t\t\tstate.origin.y += offset.y;\n\t\t}\n\t\t\n\t\tvar geo = this.graph.getCellGeometry(state.cell);\t\t\t\t\n\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tif (!model.isEdge(state.cell))\n\t\t\t{\n\t\t\t\toffset = geo.offset || this.EMPTY_POINT;\n\t\n\t\t\t\tif (geo.relative && pState != null)\n\t\t\t\t{\n\t\t\t\t\tif (model.isEdge(pState.cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar origin = this.getPoint(pState, geo);\n\n\t\t\t\t\t\tif (origin != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.origin.x += (origin.x / this.scale) - pState.origin.x - this.translate.x;\n\t\t\t\t\t\t\tstate.origin.y += (origin.y / this.scale) - pState.origin.y - this.translate.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.origin.x += geo.x * pState.width / this.scale + offset.x;\n\t\t\t\t\t\tstate.origin.y += geo.y * pState.height / this.scale + offset.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstate.absoluteOffset.x = this.scale * offset.x;\n\t\t\t\t\tstate.absoluteOffset.y = this.scale * offset.y;\n\t\t\t\t\tstate.origin.x += geo.x;\n\t\t\t\t\tstate.origin.y += geo.y;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tstate.x = this.scale * (this.translate.x + state.origin.x);\n\t\t\tstate.y = this.scale * (this.translate.y + state.origin.y);\n\t\t\tstate.width = this.scale * geo.width;\n\t\t\tstate.unscaledWidth = geo.width;\n\t\t\tstate.height = this.scale * geo.height;\n\t\t\t\n\t\t\tif (model.isVertex(state.cell))\n\t\t\t{\n\t\t\t\tthis.updateVertexState(state, geo);\n\t\t\t}\n\t\t\t\n\t\t\tif (model.isEdge(state.cell))\n\t\t\t{\n\t\t\t\tthis.updateEdgeState(state, geo);\n\t\t\t}\n\t\t}\n\t}\n\n\tstate.updateCachedBounds();\n};\n\n/**\n * Function: isCellCollapsed\n * \n * Returns true if the children of the given cell should not be visible in the\n * view. This implementation uses <mxGraph.isCellVisible> but it can be\n * overidden to use a separate condition.\n */\nmxGraphView.prototype.isCellCollapsed = function(cell)\n{\n\treturn this.graph.isCellCollapsed(cell);\n};\n\n/**\n * Function: updateVertexState\n * \n * Validates the given cell state.\n */\nmxGraphView.prototype.updateVertexState = function(state, geo)\n{\n\tvar model = this.graph.getModel();\n\tvar pState = this.getState(model.getParent(state.cell));\n\t\n\tif (geo.relative && pState != null && !model.isEdge(pState.cell))\n\t{\n\t\tvar alpha = mxUtils.toRadians(pState.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(alpha);\n\t\t\tvar sin = Math.sin(alpha);\n\n\t\t\tvar ct = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\tvar cx = new mxPoint(pState.getCenterX(), pState.getCenterY());\n\t\t\tvar pt = mxUtils.getRotatedPoint(ct, cos, sin, cx);\n\t\t\tstate.x = pt.x - state.width / 2;\n\t\t\tstate.y = pt.y - state.height / 2;\n\t\t}\n\t}\n\t\n\tthis.updateVertexLabelOffset(state);\n};\n\n/**\n * Function: updateEdgeState\n * \n * Validates the given cell state.\n */\nmxGraphView.prototype.updateEdgeState = function(state, geo)\n{\n\tvar source = state.getVisibleTerminalState(true);\n\tvar target = state.getVisibleTerminalState(false);\n\t\n\t// This will remove edges with no terminals and no terminal points\n\t// as such edges are invalid and produce NPEs in the edge styles.\n\t// Also removes connected edges that have no visible terminals.\n\tif ((this.graph.model.getTerminal(state.cell, true) != null && source == null) ||\n\t\t(source == null && geo.getTerminalPoint(true) == null) ||\n\t\t(this.graph.model.getTerminal(state.cell, false) != null && target == null) ||\n\t\t(target == null && geo.getTerminalPoint(false) == null))\n\t{\n\t\tthis.clear(state.cell, true);\n\t}\n\telse\n\t{\n\t\tthis.updateFixedTerminalPoints(state, source, target);\n\t\tthis.updatePoints(state, geo.points, source, target);\n\t\tthis.updateFloatingTerminalPoints(state, source, target);\n\t\t\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tif (state.cell != this.currentRoot && (pts == null || pts.length < 2 ||\n\t\t\tpts[0] == null || pts[pts.length - 1] == null))\n\t\t{\n\t\t\t// This will remove edges with invalid points from the list of states in the view.\n\t\t\t// Happens if the one of the terminals and the corresponding terminal point is null.\n\t\t\tthis.clear(state.cell, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.updateEdgeBounds(state);\n\t\t\tthis.updateEdgeLabelOffset(state);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateVertexLabelOffset\n * \n * Updates the absoluteOffset of the given vertex cell state. This takes\n * into account the label position styles.\n * \n * Parameters:\n * \n * state - <mxCellState> whose absolute offset should be updated.\n */\nmxGraphView.prototype.updateVertexLabelOffset = function(state)\n{\n\tvar h = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\n\tif (h == mxConstants.ALIGN_LEFT)\n\t{\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tif (lw != null)\n\t\t{\n\t\t\tlw *= this.scale;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlw = state.width;\n\t\t}\n\t\t\n\t\tstate.absoluteOffset.x -= lw;\n\t}\n\telse if (h == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstate.absoluteOffset.x += state.width;\n\t}\n\telse if (h == mxConstants.ALIGN_CENTER)\n\t{\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tif (lw != null)\n\t\t{\n\t\t\t// Aligns text block with given width inside the vertex width\n\t\t\tvar align = mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_CENTER);\n\t\t\tvar dx = 0;\n\t\t\t\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tdx = 0.5;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tdx = 1;\n\t\t\t}\n\t\t\t\n\t\t\tif (dx != 0)\n\t\t\t{\n\t\t\t\tstate.absoluteOffset.x -= (lw * this.scale - state.width) * dx;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar v = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\n\tif (v == mxConstants.ALIGN_TOP)\n\t{\n\t\tstate.absoluteOffset.y -= state.height;\n\t}\n\telse if (v == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tstate.absoluteOffset.y += state.height;\n\t}\n};\n\n/**\n * Function: resetValidationState\n *\n * Resets the current validation state.\n */\nmxGraphView.prototype.resetValidationState = function()\n{\n\tthis.lastNode = null;\n\tthis.lastHtmlNode = null;\n\tthis.lastForegroundNode = null;\n\tthis.lastForegroundHtmlNode = null;\n};\n\n/**\n * Function: stateValidated\n * \n * Invoked when a state has been processed in <validatePoints>. This is used\n * to update the order of the DOM nodes of the shape.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the cell state.\n */\nmxGraphView.prototype.stateValidated = function(state)\n{\n\tvar fg = (this.graph.getModel().isEdge(state.cell) && this.graph.keepEdgesInForeground) ||\n\t\t(this.graph.getModel().isVertex(state.cell) && this.graph.keepEdgesInBackground);\n\tvar htmlNode = (fg) ? this.lastForegroundHtmlNode || this.lastHtmlNode : this.lastHtmlNode;\n\tvar node = (fg) ? this.lastForegroundNode || this.lastNode : this.lastNode;\n\tvar result = this.graph.cellRenderer.insertStateAfter(state, node, htmlNode);\n\n\tif (fg)\n\t{\n\t\tthis.lastForegroundHtmlNode = result[1];\n\t\tthis.lastForegroundNode = result[0];\n\t}\n\telse\n\t{\n\t\tthis.lastHtmlNode = result[1];\n\t\tthis.lastNode = result[0];\n\t}\n};\n\n/**\n * Function: updateFixedTerminalPoints\n *\n * Sets the initial absolute terminal points in the given state before the edge\n * style is computed.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose initial terminal points should be updated.\n * source - <mxCellState> which represents the source terminal.\n * target - <mxCellState> which represents the target terminal.\n */\nmxGraphView.prototype.updateFixedTerminalPoints = function(edge, source, target)\n{\n\tthis.updateFixedTerminalPoint(edge, source, true,\n\t\tthis.graph.getConnectionConstraint(edge, source, true));\n\tthis.updateFixedTerminalPoint(edge, target, false,\n\t\tthis.graph.getConnectionConstraint(edge, target, false));\n};\n\n/**\n * Function: updateFixedTerminalPoint\n *\n * Sets the fixed source or target terminal point on the given edge.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be updated.\n * terminal - <mxCellState> which represents the actual terminal.\n * source - Boolean that specifies if the terminal is the source.\n * constraint - <mxConnectionConstraint> that specifies the connection.\n */\nmxGraphView.prototype.updateFixedTerminalPoint = function(edge, terminal, source, constraint)\n{\n\tedge.setAbsoluteTerminalPoint(this.getFixedTerminalPoint(edge, terminal, source, constraint), source);\n};\n\n/**\n * Function: getFixedTerminalPoint\n *\n * Returns the fixed source or target terminal point for the given edge.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be returned.\n * terminal - <mxCellState> which represents the actual terminal.\n * source - Boolean that specifies if the terminal is the source.\n * constraint - <mxConnectionConstraint> that specifies the connection.\n */\nmxGraphView.prototype.getFixedTerminalPoint = function(edge, terminal, source, constraint)\n{\n\tvar pt = null;\n\t\n\tif (constraint != null)\n\t{\n\t\tpt = this.graph.getConnectionPoint(terminal, constraint);\n\t}\n\t\n\tif (pt == null && terminal == null)\n\t{\n\t\tvar s = this.scale;\n\t\tvar tr = this.translate;\n\t\tvar orig = edge.origin;\n\t\tvar geo = this.graph.getCellGeometry(edge.cell);\n\t\tpt = geo.getTerminalPoint(source);\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = new mxPoint(s * (tr.x + pt.x + orig.x),\n\t\t\t\t\t\t\t s * (tr.y + pt.y + orig.y));\n\t\t}\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: updateBoundsFromStencil\n * \n * Updates the bounds of the given cell state to reflect the bounds of the stencil\n * if it has a fixed aspect and returns the previous bounds as an <mxRectangle> if\n * the bounds have been modified or null otherwise.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose bounds should be updated.\n */\nmxGraphView.prototype.updateBoundsFromStencil = function(state)\n{\n\tvar previous = null;\n\t\n\tif (state != null && state.shape != null && state.shape.stencil != null && state.shape.stencil.aspect == 'fixed')\n\t{\n\t\tprevious = mxRectangle.fromRectangle(state);\n\t\tvar asp = state.shape.stencil.computeAspect(state.style, state.x, state.y, state.width, state.height);\n\t\tstate.setRect(asp.x, asp.y, state.shape.stencil.w0 * asp.width, state.shape.stencil.h0 * asp.height);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: updatePoints\n *\n * Updates the absolute points in the given state using the specified array\n * of <mxPoints> as the relative points.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose absolute points should be updated.\n * points - Array of <mxPoints> that constitute the relative points.\n * source - <mxCellState> that represents the source terminal.\n * target - <mxCellState> that represents the target terminal.\n */\nmxGraphView.prototype.updatePoints = function(edge, points, source, target)\n{\n\tif (edge != null)\n\t{\n\t\tvar pts = [];\n\t\tpts.push(edge.absolutePoints[0]);\n\t\tvar edgeStyle = this.getEdgeStyle(edge, points, source, target);\n\t\t\n\t\tif (edgeStyle != null)\n\t\t{\n\t\t\tvar src = this.getTerminalPort(edge, source, true);\n\t\t\tvar trg = this.getTerminalPort(edge, target, false);\n\t\t\t\n\t\t\t// Uses the stencil bounds for routing and restores after routing\n\t\t\tvar srcBounds = this.updateBoundsFromStencil(src);\n\t\t\tvar trgBounds = this.updateBoundsFromStencil(trg);\n\n\t\t\tedgeStyle(edge, src, trg, points, pts);\n\t\t\t\n\t\t\t// Restores previous bounds\n\t\t\tif (srcBounds != null)\n\t\t\t{\n\t\t\t\tsrc.setRect(srcBounds.x, srcBounds.y, srcBounds.width, srcBounds.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (trgBounds != null)\n\t\t\t{\n\t\t\t\ttrg.setRect(trgBounds.x, trgBounds.y, trgBounds.width, trgBounds.height);\n\t\t\t}\n\t\t}\n\t\telse if (points != null)\n\t\t{\n\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t{\n\t\t\t\tif (points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tvar pt = mxUtils.clone(points[i]);\n\t\t\t\t\tpts.push(this.transformControlPoint(edge, pt));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar tmp = edge.absolutePoints;\n\t\tpts.push(tmp[tmp.length-1]);\n\n\t\tedge.absolutePoints = pts;\n\t}\n};\n\n/**\n * Function: transformControlPoint\n *\n * Transforms the given control point to an absolute point.\n */\nmxGraphView.prototype.transformControlPoint = function(state, pt)\n{\n\tif (state != null && pt != null)\n\t{\n\t\tvar orig = state.origin;\n\t\t\n\t    return new mxPoint(this.scale * (pt.x + this.translate.x + orig.x),\n\t    \tthis.scale * (pt.y + this.translate.y + orig.y));\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: isLoopStyleEnabled\n * \n * Returns true if the given edge should be routed with <mxGraph.defaultLoopStyle>\n * or the <mxConstants.STYLE_LOOP> defined for the given edge. This implementation\n * returns true if the given edge is a loop and does not \n */\nmxGraphView.prototype.isLoopStyleEnabled = function(edge, points, source, target)\n{\n\tvar sc = this.graph.getConnectionConstraint(edge, source, true);\n\tvar tc = this.graph.getConnectionConstraint(edge, target, false);\n\t\n\tif ((points == null || points.length < 2) &&\n\t\t(!mxUtils.getValue(edge.style, mxConstants.STYLE_ORTHOGONAL_LOOP, false) ||\n\t\t((sc == null || sc.point == null) && (tc == null || tc.point == null))))\n\t{\n\t\treturn source != null && source == target;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getEdgeStyle\n * \n * Returns the edge style function to be used to render the given edge state.\n */\nmxGraphView.prototype.getEdgeStyle = function(edge, points, source, target)\n{\n\tvar edgeStyle = this.isLoopStyleEnabled(edge, points, source, target) ?\n\t\tmxUtils.getValue(edge.style, mxConstants.STYLE_LOOP, this.graph.defaultLoopStyle) :\n\t\t(!mxUtils.getValue(edge.style, mxConstants.STYLE_NOEDGESTYLE, false) ?\n\t\tedge.style[mxConstants.STYLE_EDGE] : null);\n\n\t// Converts string values to objects\n\tif (typeof(edgeStyle) == \"string\")\n\t{\n\t\tvar tmp = mxStyleRegistry.getValue(edgeStyle);\n\t\t\n\t\tif (tmp == null && this.isAllowEval())\n\t\t{\n \t\t\ttmp = mxUtils.eval(edgeStyle);\n\t\t}\n\t\t\n\t\tedgeStyle = tmp;\n\t}\n\t\n\tif (typeof(edgeStyle) == \"function\")\n\t{\n\t\treturn edgeStyle;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: updateFloatingTerminalPoints\n *\n * Updates the terminal points in the given state after the edge style was\n * computed for the edge.\n * \n * Parameters:\n * \n * state - <mxCellState> whose terminal points should be updated.\n * source - <mxCellState> that represents the source terminal.\n * target - <mxCellState> that represents the target terminal.\n */\nmxGraphView.prototype.updateFloatingTerminalPoints = function(state, source, target)\n{\n\tvar pts = state.absolutePoints;\n\tvar p0 = pts[0];\n\tvar pe = pts[pts.length - 1];\n\n\tif (pe == null && target != null)\n\t{\n\t\tthis.updateFloatingTerminalPoint(state, target, source, false);\n\t}\n\t\n\tif (p0 == null && source != null)\n\t{\n\t\tthis.updateFloatingTerminalPoint(state, source, target, true);\n\t}\n};\n\n/**\n * Function: updateFloatingTerminalPoint\n *\n * Updates the absolute terminal point in the given state for the given\n * start and end state, where start is the source if source is true.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be updated.\n * start - <mxCellState> for the terminal on \"this\" side of the edge.\n * end - <mxCellState> for the terminal on the other side of the edge.\n * source - Boolean indicating if start is the source terminal state.\n */\nmxGraphView.prototype.updateFloatingTerminalPoint = function(edge, start, end, source)\n{\n\tedge.setAbsoluteTerminalPoint(this.getFloatingTerminalPoint(edge, start, end, source), source);\n};\n\n/**\n * Function: getFloatingTerminalPoint\n * \n * Returns the floating terminal point for the given edge, start and end\n * state, where start is the source if source is true.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be returned.\n * start - <mxCellState> for the terminal on \"this\" side of the edge.\n * end - <mxCellState> for the terminal on the other side of the edge.\n * source - Boolean indicating if start is the source terminal state.\n */\nmxGraphView.prototype.getFloatingTerminalPoint = function(edge, start, end, source)\n{\n\tstart = this.getTerminalPort(edge, start, source);\n\tvar next = this.getNextPoint(edge, end, source);\n\t\n\tvar orth = this.graph.isOrthogonal(edge);\n\tvar alpha = mxUtils.toRadians(Number(start.style[mxConstants.STYLE_ROTATION] || '0'));\n\tvar center = new mxPoint(start.getCenterX(), start.getCenterY());\n\t\n\tif (alpha != 0)\n\t{\n\t\tvar cos = Math.cos(-alpha);\n\t\tvar sin = Math.sin(-alpha);\n\t\tnext = mxUtils.getRotatedPoint(next, cos, sin, center);\n\t}\n\t\n\tvar border = parseFloat(edge.style[mxConstants.STYLE_PERIMETER_SPACING] || 0);\n\tborder += parseFloat(edge.style[(source) ?\n\t\tmxConstants.STYLE_SOURCE_PERIMETER_SPACING :\n\t\tmxConstants.STYLE_TARGET_PERIMETER_SPACING] || 0);\n\tvar pt = this.getPerimeterPoint(start, next, alpha == 0 && orth, border);\n\n\tif (alpha != 0)\n\t{\n\t\tvar cos = Math.cos(alpha);\n\t\tvar sin = Math.sin(alpha);\n\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, center);\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: getTerminalPort\n * \n * Returns an <mxCellState> that represents the source or target terminal or\n * port for the given edge.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the edge.\n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean indicating if the given terminal is the source terminal.\n */\nmxGraphView.prototype.getTerminalPort = function(state, terminal, source)\n{\n\tvar key = (source) ? mxConstants.STYLE_SOURCE_PORT :\n\t\tmxConstants.STYLE_TARGET_PORT;\n\tvar id = mxUtils.getValue(state.style, key);\n\t\n\tif (id != null)\n\t{\n\t\tvar tmp = this.getState(this.graph.getModel().getCell(id));\n\t\t\n\t\t// Only uses ports where a cell state exists\n\t\tif (tmp != null)\n\t\t{\n\t\t\tterminal = tmp;\n\t\t}\n\t}\n\t\n\treturn terminal;\n};\n\n/**\n * Function: getPerimeterPoint\n *\n * Returns an <mxPoint> that defines the location of the intersection point between\n * the perimeter and the line between the center of the shape and the given point.\n * \n * Parameters:\n * \n * terminal - <mxCellState> for the source or target terminal.\n * next - <mxPoint> that lies outside of the given terminal.\n * orthogonal - Boolean that specifies if the orthogonal projection onto\n * the perimeter should be returned. If this is false then the intersection\n * of the perimeter and the line between the next and the center point is\n * returned.\n * border - Optional border between the perimeter and the shape.\n */\nmxGraphView.prototype.getPerimeterPoint = function(terminal, next, orthogonal, border)\n{\n\tvar point = null;\n\t\n\tif (terminal != null)\n\t{\n\t\tvar perimeter = this.getPerimeterFunction(terminal);\n\t\t\n\t\tif (perimeter != null && next != null)\n\t\t{\n\t\t\tvar bounds = this.getPerimeterBounds(terminal, border);\n\n\t\t\tif (bounds.width > 0 || bounds.height > 0)\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(next.x, next.y);\n\t\t\t\tvar flipH = false;\n\t\t\t\tvar flipV = false;\t\n\t\t\t\t\n\t\t\t\tif (this.graph.model.isVertex(terminal.cell))\n\t\t\t\t{\n\t\t\t\t\tflipH = mxUtils.getValue(terminal.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tflipV = mxUtils.getValue(terminal.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\n\t\t\t\t\t// Legacy support for stencilFlipH/V\n\t\t\t\t\tif (terminal.shape != null && terminal.shape.stencil != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflipH = (mxUtils.getValue(terminal.style, 'stencilFlipH', 0) == 1) || flipH;\n\t\t\t\t\t\tflipV = (mxUtils.getValue(terminal.style, 'stencilFlipV', 0) == 1) || flipV;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (flipH)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpoint = perimeter(bounds, terminal, point, orthogonal);\n\n\t\t\t\tif (point != null)\n\t\t\t\t{\n\t\t\t\t\tif (flipH)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (point == null)\n\t\t{\n\t\t\tpoint = this.getPoint(terminal);\n\t\t}\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getRoutingCenterX\n * \n * Returns the x-coordinate of the center point for automatic routing.\n */\nmxGraphView.prototype.getRoutingCenterX = function (state)\n{\n\tvar f = (state.style != null) ? parseFloat(state.style\n\t\t[mxConstants.STYLE_ROUTING_CENTER_X]) || 0 : 0;\n\n\treturn state.getCenterX() + f * state.width;\n};\n\n/**\n * Function: getRoutingCenterY\n * \n * Returns the y-coordinate of the center point for automatic routing.\n */\nmxGraphView.prototype.getRoutingCenterY = function (state)\n{\n\tvar f = (state.style != null) ? parseFloat(state.style\n\t\t[mxConstants.STYLE_ROUTING_CENTER_Y]) || 0 : 0;\n\n\treturn state.getCenterY() + f * state.height;\n};\n\n/**\n * Function: getPerimeterBounds\n *\n * Returns the perimeter bounds for the given terminal, edge pair as an\n * <mxRectangle>.\n * \n * If you have a model where each terminal has a relative child that should\n * act as the graphical endpoint for a connection from/to the terminal, then\n * this method can be replaced as follows:\n * \n * (code)\n * var oldGetPerimeterBounds = mxGraphView.prototype.getPerimeterBounds;\n * mxGraphView.prototype.getPerimeterBounds = function(terminal, edge, isSource)\n * {\n *   var model = this.graph.getModel();\n *   var childCount = model.getChildCount(terminal.cell);\n * \n *   if (childCount > 0)\n *   {\n *     var child = model.getChildAt(terminal.cell, 0);\n *     var geo = model.getGeometry(child);\n *\n *     if (geo != null &&\n *         geo.relative)\n *     {\n *       var state = this.getState(child);\n *       \n *       if (state != null)\n *       {\n *         terminal = state;\n *       }\n *     }\n *   }\n *   \n *   return oldGetPerimeterBounds.apply(this, arguments);\n * };\n * (end)\n * \n * Parameters:\n * \n * terminal - <mxCellState> that represents the terminal.\n * border - Number that adds a border between the shape and the perimeter.\n */\nmxGraphView.prototype.getPerimeterBounds = function(terminal, border)\n{\n\tborder = (border != null) ? border : 0;\n\n\tif (terminal != null)\n\t{\n\t\tborder += parseFloat(terminal.style[mxConstants.STYLE_PERIMETER_SPACING] || 0);\n\t}\n\n\treturn terminal.getPerimeterBounds(border * this.scale);\n};\n\n/**\n * Function: getPerimeterFunction\n *\n * Returns the perimeter function for the given state.\n */\nmxGraphView.prototype.getPerimeterFunction = function(state)\n{\n\tvar perimeter = state.style[mxConstants.STYLE_PERIMETER];\n\n\t// Converts string values to objects\n\tif (typeof(perimeter) == \"string\")\n\t{\n\t\tvar tmp = mxStyleRegistry.getValue(perimeter);\n\t\t\n\t\tif (tmp == null && this.isAllowEval())\n\t\t{\n \t\t\ttmp = mxUtils.eval(perimeter);\n\t\t}\n\n\t\tperimeter = tmp;\n\t}\n\t\n\tif (typeof(perimeter) == \"function\")\n\t{\n\t\treturn perimeter;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getNextPoint\n *\n * Returns the nearest point in the list of absolute points or the center\n * of the opposite terminal.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n * opposite - <mxCellState> that represents the opposite terminal.\n * source - Boolean indicating if the next point for the source or target\n * should be returned.\n */\nmxGraphView.prototype.getNextPoint = function(edge, opposite, source)\n{\n\tvar pts = edge.absolutePoints;\n\tvar point = null;\n\t\n\tif (pts != null && pts.length >= 2)\n\t{\n\t\tvar count = pts.length;\n\t\tpoint = pts[(source) ? Math.min(1, count - 1) : Math.max(0, count - 2)];\n\t}\n\t\n\tif (point == null && opposite != null)\n\t{\n\t\tpoint = new mxPoint(opposite.getCenterX(), opposite.getCenterY());\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getVisibleTerminal\n *\n * Returns the nearest ancestor terminal that is visible. The edge appears\n * to be connected to this terminal on the display. The result of this method\n * is cached in <mxCellState.getVisibleTerminalState>.\n * \n * Parameters:\n * \n * edge - <mxCell> whose visible terminal should be returned.\n * source - Boolean that specifies if the source or target terminal\n * should be returned.\n */\nmxGraphView.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar model = this.graph.getModel();\n\tvar result = model.getTerminal(edge, source);\n\tvar best = result;\n\t\n\twhile (result != null && result != this.currentRoot)\n\t{\n\t\tif (!this.graph.isCellVisible(best) || this.isCellCollapsed(result))\n\t\t{\n\t\t\tbest = result;\n\t\t}\n\t\t\n\t\tresult = model.getParent(result);\n\t}\n\n\t// Checks if the result is not a layer\n\tif (model.getParent(best) == model.getRoot())\n\t{\n\t\tbest = null;\n\t}\n\t\n\treturn best;\n};\n\n/**\n * Function: updateEdgeBounds\n *\n * Updates the given state using the bounding box of t\n * he absolute points.\n * Also updates <mxCellState.terminalDistance>, <mxCellState.length> and\n * <mxCellState.segments>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose bounds should be updated.\n */\nmxGraphView.prototype.updateEdgeBounds = function(state)\n{\n\tvar points = state.absolutePoints;\n\tvar p0 = points[0];\n\tvar pe = points[points.length - 1];\n\t\n\tif (p0.x != pe.x || p0.y != pe.y)\n\t{\n\t\tvar dx = pe.x - p0.x;\n\t\tvar dy = pe.y - p0.y;\n\t\tstate.terminalDistance = Math.sqrt(dx * dx + dy * dy);\n\t}\n\telse\n\t{\n\t\tstate.terminalDistance = 0;\n\t}\n\t\n\tvar length = 0;\n\tvar segments = [];\n\tvar pt = p0;\n\t\n\tif (pt != null)\n\t{\n\t\tvar minX = pt.x;\n\t\tvar minY = pt.y;\n\t\tvar maxX = minX;\n\t\tvar maxY = minY;\n\t\t\n\t\tfor (var i = 1; i < points.length; i++)\n\t\t{\n\t\t\tvar tmp = points[i];\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tvar dx = pt.x - tmp.x;\n\t\t\t\tvar dy = pt.y - tmp.y;\n\t\t\t\t\n\t\t\t\tvar segment = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tsegments.push(segment);\n\t\t\t\tlength += segment;\n\t\t\t\t\n\t\t\t\tpt = tmp;\n\t\t\t\t\n\t\t\t\tminX = Math.min(pt.x, minX);\n\t\t\t\tminY = Math.min(pt.y, minY);\n\t\t\t\tmaxX = Math.max(pt.x, maxX);\n\t\t\t\tmaxY = Math.max(pt.y, maxY);\n\t\t\t}\n\t\t}\n\t\t\n\t\tstate.length = length;\n\t\tstate.segments = segments;\n\t\t\n\t\tvar markerSize = 1; // TODO: include marker size\n\t\t\n\t\tstate.x = minX;\n\t\tstate.y = minY;\n\t\tstate.width = Math.max(markerSize, maxX - minX);\n\t\tstate.height = Math.max(markerSize, maxY - minY);\n\t}\n};\n\n/**\n * Function: getPoint\n *\n * Returns the absolute point on the edge for the given relative\n * <mxGeometry> as an <mxPoint>. The edge is represented by the given\n * <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the parent edge.\n * geometry - <mxGeometry> that represents the relative location.\n */\nmxGraphView.prototype.getPoint = function(state, geometry)\n{\n\tvar x = state.getCenterX();\n\tvar y = state.getCenterY();\n\t\n\tif (state.segments != null && (geometry == null || geometry.relative))\n\t{\n\t\tvar gx = (geometry != null) ? geometry.x / 2 : 0;\n\t\tvar pointCount = state.absolutePoints.length;\n\t\tvar dist = Math.round((gx + 0.5) * state.length);\n\t\tvar segment = state.segments[0];\n\t\tvar length = 0;\t\t\t\t\n\t\tvar index = 1;\n\n\t\twhile (dist >= Math.round(length + segment) && index < pointCount - 1)\n\t\t{\n\t\t\tlength += segment;\n\t\t\tsegment = state.segments[index++];\n\t\t}\n\n\t\tvar factor = (segment == 0) ? 0 : (dist - length) / segment;\n\t\tvar p0 = state.absolutePoints[index-1];\n\t\tvar pe = state.absolutePoints[index];\n\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tvar gy = 0;\n\t\t\tvar offsetX = 0;\n\t\t\tvar offsetY = 0;\n\n\t\t\tif (geometry != null)\n\t\t\t{\n\t\t\t\tgy = geometry.y;\n\t\t\t\tvar offset = geometry.offset;\n\t\t\t\t\n\t\t\t\tif (offset != null)\n\t\t\t\t{\n\t\t\t\t\toffsetX = offset.x;\n\t\t\t\t\toffsetY = offset.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dx = pe.x - p0.x;\n\t\t\tvar dy = pe.y - p0.y;\n\t\t\tvar nx = (segment == 0) ? 0 : dy / segment;\n\t\t\tvar ny = (segment == 0) ? 0 : dx / segment;\n\t\t\t\n\t\t\tx = p0.x + dx * factor + (nx * gy + offsetX) * this.scale;\n\t\t\ty = p0.y + dy * factor - (ny * gy - offsetY) * this.scale;\n\t\t}\n\t}\n\telse if (geometry != null)\n\t{\n\t\tvar offset = geometry.offset;\n\t\t\n\t\tif (offset != null)\n\t\t{\n\t\t\tx += offset.x;\n\t\t\ty += offset.y;\n\t\t}\n\t}\n\t\n\treturn new mxPoint(x, y);\t\t\n};\n\n/**\n * Function: getRelativePoint\n *\n * Gets the relative point that describes the given, absolute label\n * position for the given edge state.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the parent edge.\n * x - Specifies the x-coordinate of the absolute label location.\n * y - Specifies the y-coordinate of the absolute label location.\n */\nmxGraphView.prototype.getRelativePoint = function(edgeState, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(edgeState.cell);\n\t\n\tif (geometry != null)\n\t{\n\t\tvar pointCount = edgeState.absolutePoints.length;\n\t\t\n\t\tif (geometry.relative && pointCount > 1)\n\t\t{\n\t\t\tvar totalLength = edgeState.length;\n\t\t\tvar segments = edgeState.segments;\n\n\t\t\t// Works which line segment the point of the label is closest to\n\t\t\tvar p0 = edgeState.absolutePoints[0];\n\t\t\tvar pe = edgeState.absolutePoints[1];\n\t\t\tvar minDist = mxUtils.ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\tvar index = 0;\n\t\t\tvar tmp = 0;\n\t\t\tvar length = 0;\n\t\t\t\n\t\t\tfor (var i = 2; i < pointCount; i++)\n\t\t\t{\n\t\t\t\ttmp += segments[i - 2];\n\t\t\t\tpe = edgeState.absolutePoints[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\t\tif (dist <= minDist)\n\t\t\t\t{\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tindex = i - 1;\n\t\t\t\t\tlength = tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tp0 = pe;\n\t\t\t}\n\t\t\t\n\t\t\tvar seg = segments[index];\n\t\t\tp0 = edgeState.absolutePoints[index];\n\t\t\tpe = edgeState.absolutePoints[index + 1];\n\t\t\t\n\t\t\tvar x2 = p0.x;\n\t\t\tvar y2 = p0.y;\n\t\t\t\n\t\t\tvar x1 = pe.x;\n\t\t\tvar y1 = pe.y;\n\t\t\t\n\t\t\tvar px = x;\n\t\t\tvar py = y;\n\t\t\t\n\t\t\tvar xSegment = x2 - x1;\n\t\t\tvar ySegment = y2 - y1;\n\t\t\t\n\t\t\tpx -= x1;\n\t\t\tpy -= y1;\n\t\t\tvar projlenSq = 0;\n\t\t\t\n\t\t\tpx = xSegment - px;\n\t\t\tpy = ySegment - py;\n\t\t\tvar dotprod = px * xSegment + py * ySegment;\n\n\t\t\tif (dotprod <= 0.0)\n\t\t\t{\n\t\t\t\tprojlenSq = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprojlenSq = dotprod * dotprod\n\t\t\t\t\t\t/ (xSegment * xSegment + ySegment * ySegment);\n\t\t\t}\n\n\t\t\tvar projlen = Math.sqrt(projlenSq);\n\n\t\t\tif (projlen > seg)\n\t\t\t{\n\t\t\t\tprojlen = seg;\n\t\t\t}\n\n\t\t\tvar yDistance = Math.sqrt(mxUtils.ptSegDistSq(p0.x, p0.y, pe\n\t\t\t\t\t.x, pe.y, x, y));\n\t\t\tvar direction = mxUtils.relativeCcw(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\tif (direction == -1)\n\t\t\t{\n\t\t\t\tyDistance = -yDistance;\n\t\t\t}\n\n\t\t\t// Constructs the relative point for the label\n\t\t\treturn new mxPoint(((totalLength / 2 - length - projlen) / totalLength) * -2,\n\t\t\t\t\t\tyDistance / this.scale);\n\t\t}\n\t}\n\t\n\treturn new mxPoint();\n};\n\n/**\n * Function: updateEdgeLabelOffset\n *\n * Updates <mxCellState.absoluteOffset> for the given state. The absolute\n * offset is normally used for the position of the edge label. Is is\n * calculated from the geometry as an absolute offset from the center\n * between the two endpoints if the geometry is absolute, or as the\n * relative distance between the center along the line and the absolute\n * orthogonal distance if the geometry is relative.\n * \n * Parameters:\n * \n * state - <mxCellState> whose absolute offset should be updated.\n */\nmxGraphView.prototype.updateEdgeLabelOffset = function(state)\n{\n\tvar points = state.absolutePoints;\n\t\n\tstate.absoluteOffset.x = state.getCenterX();\n\tstate.absoluteOffset.y = state.getCenterY();\n\n\tif (points != null && points.length > 0 && state.segments != null)\n\t{\n\t\tvar geometry = this.graph.getCellGeometry(state.cell);\n\t\t\n\t\tif (geometry.relative)\n\t\t{\n\t\t\tvar offset = this.getPoint(state, geometry);\n\t\t\t\n\t\t\tif (offset != null)\n\t\t\t{\n\t\t\t\tstate.absoluteOffset = offset;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar p0 = points[0];\n\t\t\tvar pe = points[points.length - 1];\n\t\t\t\n\t\t\tif (p0 != null && pe != null)\n\t\t\t{\n\t\t\t\tvar dx = pe.x - p0.x;\n\t\t\t\tvar dy = pe.y - p0.y;\n\t\t\t\tvar x0 = 0;\n\t\t\t\tvar y0 = 0;\n\n\t\t\t\tvar off = geometry.offset;\n\t\t\t\t\n\t\t\t\tif (off != null)\n\t\t\t\t{\n\t\t\t\t\tx0 = off.x;\n\t\t\t\t\ty0 = off.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar x = p0.x + dx / 2 + x0 * this.scale;\n\t\t\t\tvar y = p0.y + dy / 2 + y0 * this.scale;\n\t\t\t\t\n\t\t\t\tstate.absoluteOffset.x = x;\n\t\t\t\tstate.absoluteOffset.y = y;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getState\n *\n * Returns the <mxCellState> for the given cell. If create is true, then\n * the state is created if it does not yet exist.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the <mxCellState> should be returned.\n * create - Optional boolean indicating if a new state should be created\n * if it does not yet exist. Default is false.\n */\nmxGraphView.prototype.getState = function(cell, create)\n{\n\tcreate = create || false;\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.states.get(cell);\n\t\t\n\t\tif (create && (state == null || this.updateStyle) && this.graph.isCellVisible(cell))\n\t\t{\n\t\t\tif (state == null)\n\t\t\t{\n\t\t\t\tstate = this.createState(cell);\n\t\t\t\tthis.states.put(cell, state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.style = this.graph.getCellStyle(cell);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn state;\n};\n\n/**\n * Function: isRendering\n *\n * Returns <rendering>.\n */\nmxGraphView.prototype.isRendering = function()\n{\n\treturn this.rendering;\n};\n\n/**\n * Function: setRendering\n *\n * Sets <rendering>.\n */\nmxGraphView.prototype.setRendering = function(value)\n{\n\tthis.rendering = value;\n};\n\n/**\n * Function: isAllowEval\n *\n * Returns <allowEval>.\n */\nmxGraphView.prototype.isAllowEval = function()\n{\n\treturn this.allowEval;\n};\n\n/**\n * Function: setAllowEval\n *\n * Sets <allowEval>.\n */\nmxGraphView.prototype.setAllowEval = function(value)\n{\n\tthis.allowEval = value;\n};\n\n/**\n * Function: getStates\n *\n * Returns <states>.\n */\nmxGraphView.prototype.getStates = function()\n{\n\treturn this.states;\n};\n\n/**\n * Function: setStates\n *\n * Sets <states>.\n */\nmxGraphView.prototype.setStates = function(value)\n{\n\tthis.states = value;\n};\n\n/**\n * Function: getCellStates\n *\n * Returns the <mxCellStates> for the given array of <mxCells>. The array\n * contains all states that are not null, that is, the returned array may\n * have less elements than the given array. If no argument is given, then\n * this returns <states>.\n */\nmxGraphView.prototype.getCellStates = function(cells)\n{\n\tif (cells == null)\n\t{\n\t\treturn this.states;\n\t}\n\telse\n\t{\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar state = this.getState(cells[i]);\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\tresult.push(state);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: removeState\n *\n * Removes and returns the <mxCellState> for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the <mxCellState> should be removed.\n */\nmxGraphView.prototype.removeState = function(cell)\n{\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.states.remove(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.graph.cellRenderer.destroy(state);\n\t\t\tstate.invalid = true;\n\t\t\tstate.destroy();\n\t\t}\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: createState\n *\n * Creates and returns an <mxCellState> for the given cell and initializes\n * it using <mxCellRenderer.initialize>.\n * \n * Parameters:\n * \n * cell - <mxCell> for which a new <mxCellState> should be created.\n */\nmxGraphView.prototype.createState = function(cell)\n{\n\treturn new mxCellState(this, cell, this.graph.getCellStyle(cell));\n};\n\n/**\n * Function: getCanvas\n *\n * Returns the DOM node that contains the background-, draw- and\n * overlay- and decoratorpanes.\n */\nmxGraphView.prototype.getCanvas = function()\n{\n\treturn this.canvas;\n};\n\n/**\n * Function: getBackgroundPane\n *\n * Returns the DOM node that represents the background layer.\n */\nmxGraphView.prototype.getBackgroundPane = function()\n{\n\treturn this.backgroundPane;\n};\n\n/**\n * Function: getDrawPane\n *\n * Returns the DOM node that represents the main drawing layer.\n */\nmxGraphView.prototype.getDrawPane = function()\n{\n\treturn this.drawPane;\n};\n\n/**\n * Function: getOverlayPane\n *\n * Returns the DOM node that represents the layer above the drawing layer.\n */\nmxGraphView.prototype.getOverlayPane = function()\n{\n\treturn this.overlayPane;\n};\n\n/**\n * Function: getDecoratorPane\n *\n * Returns the DOM node that represents the topmost drawing layer.\n */\nmxGraphView.prototype.getDecoratorPane = function()\n{\n\treturn this.decoratorPane;\n};\n\n/**\n * Function: isContainerEvent\n * \n * Returns true if the event origin is one of the drawing panes or\n * containers of the view.\n */\nmxGraphView.prototype.isContainerEvent = function(evt)\n{\n\tvar source = mxEvent.getSource(evt);\n\n\treturn (source == this.graph.container ||\n\t\tsource.parentNode == this.backgroundPane ||\n\t\t(source.parentNode != null &&\n\t\tsource.parentNode.parentNode == this.backgroundPane) ||\n\t\tsource == this.canvas.parentNode ||\n\t\tsource == this.canvas ||\n\t\tsource == this.backgroundPane ||\n\t\tsource == this.drawPane ||\n\t\tsource == this.overlayPane ||\n\t\tsource == this.decoratorPane);\n};\n\n/**\n * Function: isScrollEvent\n * \n * Returns true if the event origin is one of the scrollbars of the\n * container in IE. Such events are ignored.\n */\n mxGraphView.prototype.isScrollEvent = function(evt)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar pt = new mxPoint(evt.clientX - offset.x, evt.clientY - offset.y);\n\n\tvar outWidth = this.graph.container.offsetWidth;\n\tvar inWidth = this.graph.container.clientWidth;\n\n\tif (outWidth > inWidth && pt.x > inWidth + 2 && pt.x <= outWidth)\n\t{\n\t\treturn true;\n\t}\n\n\tvar outHeight = this.graph.container.offsetHeight;\n\tvar inHeight = this.graph.container.clientHeight;\n\t\n\tif (outHeight > inHeight && pt.y > inHeight + 2 && pt.y <= outHeight)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: init\n *\n * Initializes the graph event dispatch loop for the specified container\n * and invokes <create> to create the required DOM nodes for the display.\n */\nmxGraphView.prototype.init = function()\n{\n\tthis.installListeners();\n\t\n\t// Creates the DOM nodes for the respective display dialect\n\tvar graph = this.graph;\n\t\n\tif (graph.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tthis.createSvg();\n\t}\n\telse if (graph.dialect == mxConstants.DIALECT_VML)\n\t{\n\t\tthis.createVml();\n\t}\n\telse\n\t{\n\t\tthis.createHtml();\n\t}\n};\n\n/**\n * Function: installListeners\n *\n * Installs the required listeners in the container.\n */\nmxGraphView.prototype.installListeners = function()\n{\n\tvar graph = this.graph;\n\tvar container = graph.container;\n\t\n\tif (container != null)\n\t{\n\t\t// Support for touch device gestures (eg. pinch to zoom)\n\t\t// Double-tap handling is implemented in mxGraph.fireMouseEvent\n\t\tif (mxClient.IS_TOUCH)\n\t\t{\n\t\t\tmxEvent.addListener(container, 'gesturestart', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\t\t\t\n\t\t\tmxEvent.addListener(container, 'gesturechange', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\n\t\t\tmxEvent.addListener(container, 'gestureend', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\t\t}\n\t\t\n\t\t// Adds basic listeners for graph event dispatching\n\t\tmxEvent.addGestureListeners(container, mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\t// Condition to avoid scrollbar events starting a rubberband selection\n\t\t\tif (this.isContainerEvent(evt) && ((!mxClient.IS_IE && !mxClient.IS_IE11 && !mxClient.IS_GC &&\n\t\t\t\t!mxClient.IS_OP && !mxClient.IS_SF) || !this.isScrollEvent(evt)))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}));\n\t\t\n\t\t// Adds listener for double click handling on background, this does always\n\t\t// use native event handler, we assume that the DOM of the background\n\t\t// does not change during the double click\n\t\tmxEvent.addListener(container, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.dblClick(evt);\n\t\t\t}\n\t\t}));\n\n\t\t// Workaround for touch events which started on some DOM node\n\t\t// on top of the container, in which case the cells under the\n\t\t// mouse for the move and up events are not detected.\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\tvar state = null;\n\t\t\t\n\t\t\t// Workaround for touch events which started on some DOM node\n\t\t\t// on top of the container, in which case the cells under the\n\t\t\t// mouse for the move and up events are not detected.\n\t\t\tif (mxClient.IS_TOUCH)\n\t\t\t{\n\t\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\t\n\t\t\t\t// Dispatches the drop event to the graph which\n\t\t\t\t// consumes and executes the source function\n\t\t\t\tvar pt = mxUtils.convertPoint(container, x, y);\n\t\t\t\tstate = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\treturn state;\n\t\t};\n\t\t\n\t\t// Adds basic listeners for graph event dispatching outside of the\n\t\t// container and finishing the handling of a single gesture\n\t\t// Implemented via graph event dispatch loop to avoid duplicate events\n\t\t// in Firefox and Chrome\n\t\tgraph.addMouseListener(\n\t\t{\n\t\t\tmouseDown: function(sender, me)\n\t\t\t{\n\t\t\t\tgraph.popupMenuHandler.hideMenu();\n\t\t\t},\n\t\t\tmouseMove: function() { },\n\t\t\tmouseUp: function() { }\n\t\t});\n\t\t\n\t\tthis.moveHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\t// Hides the tooltip if mouse is outside container\n\t\t\tif (graph.tooltipHandler != null && graph.tooltipHandler.isHideOnHover())\n\t\t\t{\n\t\t\t\tgraph.tooltipHandler.hide();\n\t\t\t}\n\n\t\t\tif (this.captureDocumentGesture && graph.isMouseDown && graph.container != null &&\n\t\t\t\t!this.isContainerEvent(evt) && graph.container.style.display != 'none' &&\n\t\t\t\tgraph.container.style.visibility != 'hidden' && !mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.endHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.captureDocumentGesture && graph.isMouseDown && graph.container != null &&\n\t\t\t\t!this.isContainerEvent(evt) && graph.container.style.display != 'none' &&\n\t\t\t\tgraph.container.style.visibility != 'hidden')\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t}\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(document, null, this.moveHandler, this.endHandler);\n\t}\n};\n\n/**\n * Function: create\n *\n * Creates the DOM nodes for the HTML display.\n */\nmxGraphView.prototype.createHtml = function()\n{\n\tvar container = this.graph.container;\n\t\n\tif (container != null)\n\t{\n\t\tthis.canvas = this.createHtmlPane('100%', '100%');\n\t\tthis.canvas.style.overflow = 'hidden';\n\t\n\t\t// Uses minimal size for inner DIVs on Canvas. This is required\n\t\t// for correct event processing in IE. If we have an overlapping\n\t\t// DIV then the events on the cells are only fired for labels.\n\t\tthis.backgroundPane = this.createHtmlPane('1px', '1px');\n\t\tthis.drawPane = this.createHtmlPane('1px', '1px');\n\t\tthis.overlayPane = this.createHtmlPane('1px', '1px');\n\t\tthis.decoratorPane = this.createHtmlPane('1px', '1px');\n\t\t\n\t\tthis.canvas.appendChild(this.backgroundPane);\n\t\tthis.canvas.appendChild(this.drawPane);\n\t\tthis.canvas.appendChild(this.overlayPane);\n\t\tthis.canvas.appendChild(this.decoratorPane);\n\n\t\tcontainer.appendChild(this.canvas);\n\t\tthis.updateContainerStyle(container);\n\t\t\n\t\t// Implements minWidth/minHeight in quirks mode\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tvar onResize = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tvar bounds = this.getGraphBounds();\n\t\t\t\tvar width = bounds.x + bounds.width + this.graph.border;\n\t\t\t\tvar height = bounds.y + bounds.height + this.graph.border;\n\t\t\t\t\n\t\t\t\tthis.updateHtmlCanvasSize(width, height);\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addListener(window, 'resize', onResize);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateHtmlCanvasSize\n * \n * Updates the size of the HTML canvas.\n */\nmxGraphView.prototype.updateHtmlCanvasSize = function(width, height)\n{\n\tif (this.graph.container != null)\n\t{\n\t\tvar ow = this.graph.container.offsetWidth;\n\t\tvar oh = this.graph.container.offsetHeight;\n\n\t\tif (ow < width)\n\t\t{\n\t\t\tthis.canvas.style.width = width + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.canvas.style.width = '100%';\n\t\t}\n\n\t\tif (oh < height)\n\t\t{\n\t\t\tthis.canvas.style.height = height + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.canvas.style.height = '100%';\n\t\t}\n\t}\n};\n\n/**\n * Function: createHtmlPane\n * \n * Creates and returns a drawing pane in HTML (DIV).\n */\nmxGraphView.prototype.createHtmlPane = function(width, height)\n{\n\tvar pane = document.createElement('DIV');\n\t\n\tif (width != null && height != null)\n\t{\n\t\tpane.style.position = 'absolute';\n\t\tpane.style.left = '0px';\n\t\tpane.style.top = '0px';\n\n\t\tpane.style.width = width;\n\t\tpane.style.height = height;\n\t}\n\telse\n\t{\n\t\tpane.style.position = 'relative';\n\t}\n\t\n\treturn pane;\n};\n\n/**\n * Function: create\n *\n * Creates the DOM nodes for the VML display.\n */\nmxGraphView.prototype.createVml = function()\n{\n\tvar container = this.graph.container;\n\n\tif (container != null)\n\t{\n\t\tvar width = container.offsetWidth;\n\t\tvar height = container.offsetHeight;\n\t\tthis.canvas = this.createVmlPane(width, height);\n\t\tthis.canvas.style.overflow = 'hidden';\n\t\t\n\t\tthis.backgroundPane = this.createVmlPane(width, height);\n\t\tthis.drawPane = this.createVmlPane(width, height);\n\t\tthis.overlayPane = this.createVmlPane(width, height);\n\t\tthis.decoratorPane = this.createVmlPane(width, height);\n\t\t\n\t\tthis.canvas.appendChild(this.backgroundPane);\n\t\tthis.canvas.appendChild(this.drawPane);\n\t\tthis.canvas.appendChild(this.overlayPane);\n\t\tthis.canvas.appendChild(this.decoratorPane);\n\t\t\n\t\tcontainer.appendChild(this.canvas);\n\t}\n};\n\n/**\n * Function: createVmlPane\n * \n * Creates a drawing pane in VML (group).\n */\nmxGraphView.prototype.createVmlPane = function(width, height)\n{\n\tvar pane = document.createElement(mxClient.VML_PREFIX + ':group');\n\t\n\t// At this point the width and height are potentially\n\t// uninitialized. That's OK.\n\tpane.style.position = 'absolute';\n\tpane.style.left = '0px';\n\tpane.style.top = '0px';\n\n\tpane.style.width = width + 'px';\n\tpane.style.height = height + 'px';\n\n\tpane.setAttribute('coordsize', width + ',' + height);\n\tpane.setAttribute('coordorigin', '0,0');\n\t\n\treturn pane;\n};\n\n/**\n * Function: create\n *\n * Creates and returns the DOM nodes for the SVG display.\n */\nmxGraphView.prototype.createSvg = function()\n{\n\tvar container = this.graph.container;\n\tthis.canvas = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\n\t// For background image\n\tthis.backgroundPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.backgroundPane);\n\n\t// Adds two layers (background is early feature)\n\tthis.drawPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.drawPane);\n\n\tthis.overlayPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.overlayPane);\n\t\n\tthis.decoratorPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.decoratorPane);\n\t\n\tvar root = document.createElementNS(mxConstants.NS_SVG, 'svg');\n\troot.style.left = '0px';\n\troot.style.top = '0px';\n\troot.style.width = '100%';\n\troot.style.height = '100%';\n\t\n\t// NOTE: In standards mode, the SVG must have block layout\n\t// in order for the container DIV to not show scrollbars.\n\troot.style.display = 'block';\n\troot.appendChild(this.canvas);\n\t\n\t// Workaround for scrollbars in IE11 and below\n\tif (mxClient.IS_IE || mxClient.IS_IE11)\n\t{\n\t\troot.style.overflow = 'hidden';\n\t}\n\n\tif (container != null)\n\t{\n\t\tcontainer.appendChild(root);\n\t\tthis.updateContainerStyle(container);\n\t}\n};\n\n/**\n * Function: updateContainerStyle\n * \n * Updates the style of the container after installing the SVG DOM elements.\n */\nmxGraphView.prototype.updateContainerStyle = function(container)\n{\n\t// Workaround for offset of container\n\tvar style = mxUtils.getCurrentStyle(container);\n\t\n\tif (style != null && style.position == 'static')\n\t{\n\t\tcontainer.style.position = 'relative';\n\t}\n\t\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tcontainer.style.touchAction = 'none';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the view and all its resources.\n */\nmxGraphView.prototype.destroy = function()\n{\n\tvar root = (this.canvas != null) ? this.canvas.ownerSVGElement : null;\n\t\n\tif (root == null)\n\t{\n\t\troot = this.canvas;\n\t}\n\t\n\tif (root != null && root.parentNode != null)\n\t{\n\t\tthis.clear(this.currentRoot, true);\n\t\tmxEvent.removeGestureListeners(document, null, this.moveHandler, this.endHandler);\n\t\tmxEvent.release(this.graph.container);\n\t\troot.parentNode.removeChild(root);\n\t\t\n\t\tthis.moveHandler = null;\n\t\tthis.endHandler = null;\n\t\tthis.canvas = null;\n\t\tthis.backgroundPane = null;\n\t\tthis.drawPane = null;\n\t\tthis.overlayPane = null;\n\t\tthis.decoratorPane = null;\n\t}\n};\n\n/**\n * Class: mxCurrentRootChange\n *\n * Action to change the current root in a view.\n *\n * Constructor: mxCurrentRootChange\n *\n * Constructs a change of the current root in the given view.\n */\nfunction mxCurrentRootChange(view, root)\n{\n\tthis.view = view;\n\tthis.root = root;\n\tthis.previous = root;\n\tthis.isUp = root == null;\n\t\n\tif (!this.isUp)\n\t{\n\t\tvar tmp = this.view.currentRoot;\n\t\tvar model = this.view.graph.getModel();\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp == root)\n\t\t\t{\n\t\t\t\tthis.isUp = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\ttmp = model.getParent(tmp);\n\t\t}\n\t}\n};\n\n/**\n * Function: execute\n *\n * Changes the current root of the view.\n */\nmxCurrentRootChange.prototype.execute = function()\n{\n\tvar tmp = this.view.currentRoot;\n\tthis.view.currentRoot = this.previous;\n\tthis.previous = tmp;\n\n\tvar translate = this.view.graph.getTranslateForRoot(this.view.currentRoot);\n\t\n\tif (translate != null)\n\t{\n\t\tthis.view.translate = new mxPoint(-translate.x, -translate.y);\n\t}\n\n\tif (this.isUp)\n\t{\n\t\tthis.view.clear(this.view.currentRoot, true);\n\t\tthis.view.validate();\n\t}\n\telse\n\t{\n\t\tthis.view.refresh();\n\t}\n\t\n\tvar name = (this.isUp) ? mxEvent.UP : mxEvent.DOWN;\n\tthis.view.fireEvent(new mxEventObject(name,\n\t\t'root', this.view.currentRoot, 'previous', this.previous));\n\tthis.isUp = !this.isUp;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraph\n *\n * Extends <mxEventSource> to implement a graph component for\n * the browser. This is the main class of the package. To activate\n * panning and connections use <setPanning> and <setConnectable>.\n * For rubberband selection you must create a new instance of\n * <mxRubberband>. The following listeners are added to\n * <mouseListeners> by default:\n * \n * - <tooltipHandler>: <mxTooltipHandler> that displays tooltips\n * - <panningHandler>: <mxPanningHandler> for panning and popup menus\n * - <connectionHandler>: <mxConnectionHandler> for creating connections\n * - <graphHandler>: <mxGraphHandler> for moving and cloning cells\n * \n * These listeners will be called in the above order if they are enabled.\n *\n * Background Images:\n * \n * To display a background image, set the image, image width and\n * image height using <setBackgroundImage>. If one of the\n * above values has changed then the <view>'s <mxGraphView.validate>\n * should be invoked.\n * \n * Cell Images:\n * \n * To use images in cells, a shape must be specified in the default\n * vertex style (or any named style). Possible shapes are\n * <mxConstants.SHAPE_IMAGE> and <mxConstants.SHAPE_LABEL>.\n * The code to change the shape used in the default vertex style,\n * the following code is used:\n * \n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE;\n * (end)\n * \n * For the default vertex style, the image to be displayed can be\n * specified in a cell's style using the <mxConstants.STYLE_IMAGE>\n * key and the image URL as a value, for example:\n * \n * (code)\n * image=http://www.example.com/image.gif\n * (end)\n * \n * For a named style, the the stylename must be the first element\n * of the cell style:\n * \n * (code)\n * stylename;image=http://www.example.com/image.gif\n * (end)\n * \n * A cell style can have any number of key=value pairs added, divided\n * by a semicolon as follows:\n * \n * (code)\n * [stylename;|key=value;]\n * (end)\n *\n * Labels:\n * \n * The cell labels are defined by <getLabel> which uses <convertValueToString>\n * if <labelsVisible> is true. If a label must be rendered as HTML markup, then\n * <isHtmlLabel> should return true for the respective cell. If all labels\n * contain HTML markup, <htmlLabels> can be set to true. NOTE: Enabling HTML\n * labels carries a possible security risk (see the section on security in\n * the manual).\n * \n * If wrapping is needed for a label, then <isHtmlLabel> and <isWrapping> must\n * return true for the cell whose label should be wrapped. See <isWrapping> for\n * an example.\n * \n * If clipping is needed to keep the rendering of a HTML label inside the\n * bounds of its vertex, then <isClipping> should return true for the\n * respective cell.\n * \n * By default, edge labels are movable and vertex labels are fixed. This can be\n * changed by setting <edgeLabelsMovable> and <vertexLabelsMovable>, or by\n * overriding <isLabelMovable>.\n *\n * In-place Editing:\n * \n * In-place editing is started with a doubleclick or by typing F2.\n * Programmatically, <edit> is used to check if the cell is editable\n * (<isCellEditable>) and call <startEditingAtCell>, which invokes\n * <mxCellEditor.startEditing>. The editor uses the value returned\n * by <getEditingValue> as the editing value.\n * \n * After in-place editing, <labelChanged> is called, which invokes\n * <mxGraphModel.setValue>, which in turn calls\n * <mxGraphModel.valueForCellChanged> via <mxValueChange>.\n * \n * The event that triggers in-place editing is passed through to the\n * <cellEditor>, which may take special actions depending on the type of the\n * event or mouse location, and is also passed to <getEditingValue>. The event\n * is then passed back to the event processing functions which can perform\n * specific actions based on the trigger event.\n * \n * Tooltips:\n * \n * Tooltips are implemented by <getTooltip>, which calls <getTooltipForCell>\n * if a cell is under the mousepointer. The default implementation checks if\n * the cell has a getTooltip function and calls it if it exists. Hence, in order\n * to provide custom tooltips, the cell must provide a getTooltip function, or \n * one of the two above functions must be overridden.\n * \n * Typically, for custom cell tooltips, the latter function is overridden as\n * follows:\n * \n * (code)\n * graph.getTooltipForCell = function(cell)\n * {\n *   var label = this.convertValueToString(cell);\n *   return 'Tooltip for '+label;\n * }\n * (end)\n * \n * When using a config file, the function is overridden in the mxGraph section\n * using the following entry:\n * \n * (code)\n * <add as=\"getTooltipForCell\"><![CDATA[\n *   function(cell)\n *   {\n *     var label = this.convertValueToString(cell);\n *     return 'Tooltip for '+label;\n *   }\n * ]]></add>\n * (end)\n * \n * \"this\" refers to the graph in the implementation, so for example to check if \n * a cell is an edge, you use this.getModel().isEdge(cell)\n *\n * For replacing the default implementation of <getTooltipForCell> (rather than \n * replacing the function on a specific instance), the following code should be \n * used after loading the JavaScript files, but before creating a new mxGraph \n * instance using <mxGraph>:\n * \n * (code)\n * mxGraph.prototype.getTooltipForCell = function(cell)\n * {\n *   var label = this.convertValueToString(cell);\n *   return 'Tooltip for '+label;\n * }\n * (end)\n * \n * Shapes & Styles:\n * \n * The implementation of new shapes is demonstrated in the examples. We'll assume\n * that we have implemented a custom shape with the name BoxShape which we want\n * to use for drawing vertices. To use this shape, it must first be registered in\n * the cell renderer as follows:\n * \n * (code)\n * mxCellRenderer.registerShape('box', BoxShape);\n * (end)\n * \n * The code registers the BoxShape constructor under the name box in the cell\n * renderer of the graph. The shape can now be referenced using the shape-key in\n * a style definition. (The cell renderer contains a set of additional shapes,\n * namely one for each constant with a SHAPE-prefix in <mxConstants>.)\n *\n * Styles are a collection of key, value pairs and a stylesheet is a collection\n * of named styles. The names are referenced by the cellstyle, which is stored\n * in <mxCell.style> with the following format: [stylename;|key=value;]. The\n * string is resolved to a collection of key, value pairs, where the keys are\n * overridden with the values in the string.\n *\n * When introducing a new shape, the name under which the shape is registered\n * must be used in the stylesheet. There are three ways of doing this:\n * \n *   - By changing the default style, so that all vertices will use the new\n * \t\tshape\n *   - By defining a new style, so that only vertices with the respective\n * \t\tcellstyle will use the new shape\n *   - By using shape=box in the cellstyle's optional list of key, value pairs\n * \t\tto be overridden\n *\n * In the first case, the code to fetch and modify the default style for\n * vertices is as follows:\n * \n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = 'box';\n * (end)\n * \n * The code takes the default vertex style, which is used for all vertices that\n * do not have a specific cellstyle, and modifies the value for the shape-key\n * in-place to use the new BoxShape for drawing vertices. This is done by\n * assigning the box value in the second line, which refers to the name of the\n * BoxShape in the cell renderer.\n * \n * In the second case, a collection of key, value pairs is created and then\n * added to the stylesheet under a new name. In order to distinguish the\n * shapename and the stylename we'll use boxstyle for the stylename:\n * \n * (code)\n * var style = new Object();\n * style[mxConstants.STYLE_SHAPE] = 'box';\n * style[mxConstants.STYLE_STROKECOLOR] = '#000000';\n * style[mxConstants.STYLE_FONTCOLOR] = '#000000';\n * graph.getStylesheet().putCellStyle('boxstyle', style);\n * (end)\n * \n * The code adds a new style with the name boxstyle to the stylesheet. To use\n * this style with a cell, it must be referenced from the cellstyle as follows:\n * \n * (code)\n * var vertex = graph.insertVertex(parent, null, 'Hello, World!', 20, 20, 80, 20,\n * \t\t\t\t'boxstyle');\n * (end)\n * \n * To summarize, each new shape must be registered in the <mxCellRenderer> with\n * a unique name. That name is then used as the value of the shape-key in a\n * default or custom style. If there are multiple custom shapes, then there\n * should be a separate style for each shape.\n * \n * Inheriting Styles:\n * \n * For fill-, stroke-, gradient- and indicatorColors special keywords can be\n * used. The inherit keyword for one of these colors will inherit the color\n * for the same key from the parent cell. The swimlane keyword does the same,\n * but inherits from the nearest swimlane in the ancestor hierarchy. Finally,\n * the indicated keyword will use the color of the indicator as the color for\n * the given key.\n * \n * Scrollbars:\n * \n * The <containers> overflow CSS property defines if scrollbars are used to\n * display the graph. For values of 'auto' or 'scroll', the scrollbars will\n * be shown. Note that the <resizeContainer> flag is normally not used\n * together with scrollbars, as it will resize the container to match the\n * size of the graph after each change.\n * \n * Multiplicities and Validation:\n * \n * To control the possible connections in mxGraph, <getEdgeValidationError> is\n * used. The default implementation of the function uses <multiplicities>,\n * which is an array of <mxMultiplicity>. Using this class allows to establish\n * simple multiplicities, which are enforced by the graph.\n * \n * The <mxMultiplicity> uses <mxCell.is> to determine for which terminals it\n * applies. The default implementation of <mxCell.is> works with DOM nodes (XML\n * nodes) and checks if the given type parameter matches the nodeName of the\n * node (case insensitive). Optionally, an attributename and value can be\n * specified which are also checked.\n * \n * <getEdgeValidationError> is called whenever the connectivity of an edge\n * changes. It returns an empty string or an error message if the edge is\n * invalid or null if the edge is valid. If the returned string is not empty\n * then it is displayed as an error message.\n * \n * <mxMultiplicity> allows to specify the multiplicity between a terminal and\n * its possible neighbors. For example, if any rectangle may only be connected\n * to, say, a maximum of two circles you can add the following rule to\n * <multiplicities>:\n * \n * (code)\n * graph.multiplicities.push(new mxMultiplicity(\n *   true, 'rectangle', null, null, 0, 2, ['circle'],\n *   'Only 2 targets allowed',\n *   'Only shape targets allowed'));\n * (end)\n * \n * This will display the first error message whenever a rectangle is connected\n * to more than two circles and the second error message if a rectangle is\n * connected to anything but a circle.\n * \n * For certain multiplicities, such as a minimum of 1 connection, which cannot\n * be enforced at cell creation time (unless the cell is created together with\n * the connection), mxGraph offers <validate> which checks all multiplicities\n * for all cells and displays the respective error messages in an overlay icon\n * on the cells.\n * \n * If a cell is collapsed and contains validation errors, a respective warning\n * icon is attached to the collapsed cell.\n * \n * Auto-Layout:\n * \n * For automatic layout, the <getLayout> hook is provided in <mxLayoutManager>.\n * It can be overridden to return a layout algorithm for the children of a\n * given cell.\n * \n * Unconnected edges:\n * \n * The default values for all switches are designed to meet the requirements of\n * general diagram drawing applications. A very typical set of settings to\n * avoid edges that are not connected is the following:\n * \n * (code)\n * graph.setAllowDanglingEdges(false);\n * graph.setDisconnectOnMove(false);\n * (end)\n * \n * Setting the <cloneInvalidEdges> switch to true is optional. This switch\n * controls if edges are inserted after a copy, paste or clone-drag if they are\n * invalid. For example, edges are invalid if copied or control-dragged without \n * having selected the corresponding terminals and allowDanglingEdges is\n * false, in which case the edges will not be cloned if the switch is false.\n * \n * Output:\n * \n * To produce an XML representation for a diagram, the following code can be\n * used.\n * \n * (code)\n * var enc = new mxCodec(mxUtils.createXmlDocument());\n * var node = enc.encode(graph.getModel());\n * (end)\n * \n * This will produce an XML node than can be handled using the DOM API or\n * turned into a string representation using the following code:\n * \n * (code)\n * var xml = mxUtils.getXml(node);\n * (end)\n * \n * To obtain a formatted string, mxUtils.getPrettyXml can be used instead.\n * \n * This string can now be stored in a local persistent storage (for example\n * using Google Gears) or it can be passed to a backend using mxUtils.post as\n * follows. The url variable is the URL of the Java servlet, PHP page or HTTP\n * handler, depending on the server.\n * \n * (code)\n * var xmlString = encodeURIComponent(mxUtils.getXml(node));\n * mxUtils.post(url, 'xml='+xmlString, function(req)\n * {\n *   // Process server response using req of type mxXmlRequest\n * });\n * (end)\n * \n * Input:\n * \n * To load an XML representation of a diagram into an existing graph object\n * mxUtils.load can be used as follows. The url variable is the URL of the Java\n * servlet, PHP page or HTTP handler that produces the XML string.\n * \n * (code)\n * var xmlDoc = mxUtils.load(url).getXml();\n * var node = xmlDoc.documentElement;\n * var dec = new mxCodec(node.ownerDocument);\n * dec.decode(node, graph.getModel());\n * (end)\n * \n * For creating a page that loads the client and a diagram using a single\n * request please refer to the deployment examples in the backends.\n * \n * Functional dependencies:\n * \n * (see images/callgraph.png)\n * \n * Resources:\n *\n * resources/graph - Language resources for mxGraph\n *\n * Group: Events\n * \n * Event: mxEvent.ROOT\n * \n * Fires if the root in the model has changed. This event has no properties.\n * \n * Event: mxEvent.ALIGN_CELLS\n * \n * Fires between begin- and endUpdate in <alignCells>. The <code>cells</code>\n * and <code>align</code> properties contain the respective arguments that were\n * passed to <alignCells>.\n *\n * Event: mxEvent.FLIP_EDGE\n *\n * Fires between begin- and endUpdate in <flipEdge>. The <code>edge</code>\n * property contains the edge passed to <flipEdge>.\n * \n * Event: mxEvent.ORDER_CELLS\n * \n * Fires between begin- and endUpdate in <orderCells>. The <code>cells</code>\n * and <code>back</code> properties contain the respective arguments that were\n * passed to <orderCells>.\n *\n * Event: mxEvent.CELLS_ORDERED\n *\n * Fires between begin- and endUpdate in <cellsOrdered>. The <code>cells</code>\n * and <code>back</code> arguments contain the respective arguments that were\n * passed to <cellsOrdered>.\n * \n * Event: mxEvent.GROUP_CELLS\n * \n * Fires between begin- and endUpdate in <groupCells>. The <code>group</code>,\n * <code>cells</code> and <code>border</code> arguments contain the respective\n * arguments that were passed to <groupCells>.\n * \n * Event: mxEvent.UNGROUP_CELLS\n * \n * Fires between begin- and endUpdate in <ungroupCells>. The <code>cells</code>\n * property contains the array of cells that was passed to <ungroupCells>.\n * \n * Event: mxEvent.REMOVE_CELLS_FROM_PARENT\n * \n * Fires between begin- and endUpdate in <removeCellsFromParent>. The\n * <code>cells</code> property contains the array of cells that was passed to\n * <removeCellsFromParent>.\n * \n * Event: mxEvent.ADD_CELLS\n * \n * Fires between begin- and endUpdate in <addCells>. The <code>cells</code>,\n * <code>parent</code>, <code>index</code>, <code>source</code> and\n * <code>target</code> properties contain the respective arguments that were\n * passed to <addCells>.\n * \n * Event: mxEvent.CELLS_ADDED\n * \n * Fires between begin- and endUpdate in <cellsAdded>. The <code>cells</code>,\n * <code>parent</code>, <code>index</code>, <code>source</code>,\n * <code>target</code> and <code>absolute</code> properties contain the\n * respective arguments that were passed to <cellsAdded>.\n * \n * Event: mxEvent.REMOVE_CELLS\n * \n * Fires between begin- and endUpdate in <removeCells>. The <code>cells</code>\n * and <code>includeEdges</code> arguments contain the respective arguments\n * that were passed to <removeCells>.\n * \n * Event: mxEvent.CELLS_REMOVED\n * \n * Fires between begin- and endUpdate in <cellsRemoved>. The <code>cells</code>\n * argument contains the array of cells that was removed.\n * \n * Event: mxEvent.SPLIT_EDGE\n * \n * Fires between begin- and endUpdate in <splitEdge>. The <code>edge</code>\n * property contains the edge to be splitted, the <code>cells</code>,\n * <code>newEdge</code>, <code>dx</code> and <code>dy</code> properties contain\n * the respective arguments that were passed to <splitEdge>.\n * \n * Event: mxEvent.TOGGLE_CELLS\n * \n * Fires between begin- and endUpdate in <toggleCells>. The <code>show</code>,\n * <code>cells</code> and <code>includeEdges</code> properties contain the\n * respective arguments that were passed to <toggleCells>.\n * \n * Event: mxEvent.FOLD_CELLS\n * \n * Fires between begin- and endUpdate in <foldCells>. The\n * <code>collapse</code>, <code>cells</code> and <code>recurse</code>\n * properties contain the respective arguments that were passed to <foldCells>.\n * \n * Event: mxEvent.CELLS_FOLDED\n * \n * Fires between begin- and endUpdate in cellsFolded. The\n * <code>collapse</code>, <code>cells</code> and <code>recurse</code>\n * properties contain the respective arguments that were passed to\n * <cellsFolded>.\n * \n * Event: mxEvent.UPDATE_CELL_SIZE\n * \n * Fires between begin- and endUpdate in <updateCellSize>. The\n * <code>cell</code> and <code>ignoreChildren</code> properties contain the\n * respective arguments that were passed to <updateCellSize>.\n * \n * Event: mxEvent.RESIZE_CELLS\n * \n * Fires between begin- and endUpdate in <resizeCells>. The <code>cells</code>\n * and <code>bounds</code> properties contain the respective arguments that\n * were passed to <resizeCells>.\n * \n * Event: mxEvent.CELLS_RESIZED\n * \n * Fires between begin- and endUpdate in <cellsResized>. The <code>cells</code>\n * and <code>bounds</code> properties contain the respective arguments that\n * were passed to <cellsResized>.\n * \n * Event: mxEvent.MOVE_CELLS\n * \n * Fires between begin- and endUpdate in <moveCells>. The <code>cells</code>,\n * <code>dx</code>, <code>dy</code>, <code>clone</code>, <code>target</code>\n * and <code>event</code> properties contain the respective arguments that\n * were passed to <moveCells>.\n * \n * Event: mxEvent.CELLS_MOVED\n * \n * Fires between begin- and endUpdate in <cellsMoved>. The <code>cells</code>,\n * <code>dx</code>, <code>dy</code> and <code>disconnect</code> properties\n * contain the respective arguments that were passed to <cellsMoved>.\n * \n * Event: mxEvent.CONNECT_CELL\n * \n * Fires between begin- and endUpdate in <connectCell>. The <code>edge</code>,\n * <code>terminal</code> and <code>source</code> properties contain the\n * respective arguments that were passed to <connectCell>.\n * \n * Event: mxEvent.CELL_CONNECTED\n * \n * Fires between begin- and endUpdate in <cellConnected>. The\n * <code>edge</code>, <code>terminal</code> and <code>source</code> properties\n * contain the respective arguments that were passed to <cellConnected>.\n * \n * Event: mxEvent.REFRESH\n * \n * Fires after <refresh> was executed. This event has no properties.\n *\n * Event: mxEvent.CLICK\n * \n * Fires in <click> after a click event. The <code>event</code> property\n * contains the original mouse event and <code>cell</code> property contains\n * the cell under the mouse or null if the background was clicked.\n * \n * Event: mxEvent.DOUBLE_CLICK\n *\n * Fires in <dblClick> after a double click. The <code>event</code> property\n * contains the original mouse event and the <code>cell</code> property\n * contains the cell under the mouse or null if the background was clicked.\n * \n * Event: mxEvent.GESTURE\n *\n * Fires in <fireGestureEvent> after a touch gesture. The <code>event</code>\n * property contains the original gesture end event and the <code>cell</code>\n * property contains the optional cell associated with the gesture.\n *\n * Event: mxEvent.TAP_AND_HOLD\n *\n * Fires in <tapAndHold> if a tap and hold event was detected. The <code>event</code>\n * property contains the initial touch event and the <code>cell</code> property\n * contains the cell under the mouse or null if the background was clicked.\n *\n * Event: mxEvent.FIRE_MOUSE_EVENT\n *\n * Fires in <fireMouseEvent> before the mouse listeners are invoked. The\n * <code>eventName</code> property contains the event name and the\n * <code>event</code> property contains the <mxMouseEvent>.\n *\n * Event: mxEvent.SIZE\n *\n * Fires after <sizeDidChange> was executed. The <code>bounds</code> property\n * contains the new graph bounds.\n *\n * Event: mxEvent.START_EDITING\n *\n * Fires before the in-place editor starts in <startEditingAtCell>. The\n * <code>cell</code> property contains the cell that is being edited and the\n * <code>event</code> property contains the optional event argument that was\n * passed to <startEditingAtCell>.\n * \n * Event: mxEvent.EDITING_STARTED\n *\n * Fires after the in-place editor starts in <startEditingAtCell>. The\n * <code>cell</code> property contains the cell that is being edited and the\n * <code>event</code> property contains the optional event argument that was\n * passed to <startEditingAtCell>.\n * \n * Event: mxEvent.EDITING_STOPPED\n *\n * Fires after the in-place editor stops in <stopEditing>.\n *\n * Event: mxEvent.LABEL_CHANGED\n *\n * Fires between begin- and endUpdate in <cellLabelChanged>. The\n * <code>cell</code> property contains the cell, the <code>value</code>\n * property contains the new value for the cell, the <code>old</code> property\n * contains the old value and the optional <code>event</code> property contains\n * the mouse event that started the edit.\n * \n * Event: mxEvent.ADD_OVERLAY\n *\n * Fires after an overlay is added in <addCellOverlay>. The <code>cell</code>\n * property contains the cell and the <code>overlay</code> property contains\n * the <mxCellOverlay> that was added.\n *\n * Event: mxEvent.REMOVE_OVERLAY\n *\n * Fires after an overlay is removed in <removeCellOverlay> and\n * <removeCellOverlays>. The <code>cell</code> property contains the cell and\n * the <code>overlay</code> property contains the <mxCellOverlay> that was\n * removed.\n * \n * Constructor: mxGraph\n * \n * Constructs a new mxGraph in the specified container. Model is an optional\n * mxGraphModel. If no model is provided, a new mxGraphModel instance is \n * used as the model. The container must have a valid owner document prior \n * to calling this function in Internet Explorer. RenderHint is a string to\n * affect the display performance and rendering in IE, but not in SVG-based \n * browsers. The parameter is mapped to <dialect>, which may \n * be one of <mxConstants.DIALECT_SVG> for SVG-based browsers, \n * <mxConstants.DIALECT_STRICTHTML> for fastest display mode,\n * <mxConstants.DIALECT_PREFERHTML> for faster display mode,\n * <mxConstants.DIALECT_MIXEDHTML> for fast and <mxConstants.DIALECT_VML> \n * for exact display mode (slowest). The dialects are defined in mxConstants.\n * The default values are DIALECT_SVG for SVG-based browsers and\n * DIALECT_MIXED for IE.\n *\n * The possible values for the renderingHint parameter are explained below:\n * \n * fast - The parameter is based on the fact that the display performance is \n * highly improved in IE if the VML is not contained within a VML group \n * element. The lack of a group element only slightly affects the display while \n * panning, but improves the performance by almost a factor of 2, while keeping \n * the display sufficiently accurate. This also allows to render certain shapes as HTML \n * if the display accuracy is not affected, which is implemented by \n * <mxShape.isMixedModeHtml>. This is the default setting and is mapped to\n * DIALECT_MIXEDHTML.\n * faster - Same as fast, but more expensive shapes are avoided. This is \n * controlled by <mxShape.preferModeHtml>. The default implementation will \n * avoid gradients and rounded rectangles, but more significant shapes, such \n * as rhombus, ellipse, actor and cylinder will be rendered accurately. This \n * setting is mapped to DIALECT_PREFERHTML.\n * fastest - Almost anything will be rendered in Html. This allows for \n * rectangles, labels and images. This setting is mapped to\n * DIALECT_STRICTHTML.\n * exact - If accurate panning is required and if the diagram is small (up\n * to 100 cells), then this value should be used. In this mode, a group is \n * created that contains the VML. This allows for accurate panning and is \n * mapped to DIALECT_VML.\n *\n * Example:\n * \n * To create a graph inside a DOM node with an id of graph:\n * (code)\n * var container = document.getElementById('graph');\n * var graph = new mxGraph(container);\n * (end)\n * \n * Parameters:\n * \n * container - Optional DOM node that acts as a container for the graph.\n * If this is null then the container can be initialized later using\n * <init>.\n * model - Optional <mxGraphModel> that constitutes the graph data.\n * renderHint - Optional string that specifies the display accuracy and\n * performance. Default is mxConstants.DIALECT_MIXEDHTML (for IE).\n * stylesheet - Optional <mxStylesheet> to be used in the graph.\n */\nfunction mxGraph(container, model, renderHint, stylesheet)\n{\n\t// Initializes the variable in case the prototype has been\n\t// modified to hold some listeners (which is possible because\n\t// the createHandlers call is executed regardless of the\n\t// arguments passed into the ctor).\n\tthis.mouseListeners = null;\n\t\n\t// Converts the renderHint into a dialect\n\tthis.renderHint = renderHint;\n\n\tif (mxClient.IS_SVG)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_SVG;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_EXACT && mxClient.IS_VML)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_VML;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_FASTEST)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_STRICTHTML;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_FASTER)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_PREFERHTML;\n\t}\n\telse // default for VML\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_MIXEDHTML;\n\t}\n\t\n\t// Initializes the main members that do not require a container\n\tthis.model = (model != null) ? model : new mxGraphModel();\n\tthis.multiplicities = [];\n\tthis.imageBundles = [];\n\tthis.cellRenderer = this.createCellRenderer();\n\tthis.setSelectionModel(this.createSelectionModel());\n\tthis.setStylesheet((stylesheet != null) ? stylesheet : this.createStylesheet());\n\tthis.view = this.createGraphView();\n\t\n\t// Adds a graph model listener to update the view\n\tthis.graphModelChangeListener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tthis.graphModelChanged(evt.getProperty('edit').changes);\n\t});\n\t\n\tthis.model.addListener(mxEvent.CHANGE, this.graphModelChangeListener);\n\n\t// Installs basic event handlers with disabled default settings.\n\tthis.createHandlers();\n\t\n\t// Initializes the display if a container was specified\n\tif (container != null)\n\t{\n\t\tthis.init(container);\n\t}\n\t\n\tthis.view.revalidate();\n};\n\n/**\n * Installs the required language resources at class\n * loading time.\n */\nif (mxLoadResources)\n{\n\tmxResources.add(mxClient.basePath + '/resources/graph');\n}\nelse\n{\n\tmxClient.defaultBundles.push(mxClient.basePath + '/resources/graph');\n}\n\n/**\n * Extends mxEventSource.\n */\nmxGraph.prototype = new mxEventSource();\nmxGraph.prototype.constructor = mxGraph;\n\n/**\n * Variable: EMPTY_ARRAY\n *\n * Immutable empty array instance.\n */\nmxGraph.prototype.EMPTY_ARRAY = [];\n\n/**\n * Group: Variables\n */\n\n/**\n * Variable: mouseListeners\n * \n * Holds the mouse event listeners. See <fireMouseEvent>.\n */\nmxGraph.prototype.mouseListeners = null;\n\n/**\n * Variable: isMouseDown\n * \n * Holds the state of the mouse button.\n */\nmxGraph.prototype.isMouseDown = false;\n\n/**\n * Variable: model\n * \n * Holds the <mxGraphModel> that contains the cells to be displayed.\n */\nmxGraph.prototype.model = null;\n\n/**\n * Variable: view\n * \n * Holds the <mxGraphView> that caches the <mxCellStates> for the cells.\n */\nmxGraph.prototype.view = null;\n\n/**\n * Variable: stylesheet\n * \n * Holds the <mxStylesheet> that defines the appearance of the cells.\n * \n * \n * Example:\n * \n * Use the following code to read a stylesheet into an existing graph.\n * \n * (code)\n * var req = mxUtils.load('stylesheet.xml');\n * var root = req.getDocumentElement();\n * var dec = new mxCodec(root.ownerDocument);\n * dec.decode(root, graph.stylesheet);\n * (end)\n */\nmxGraph.prototype.stylesheet = null;\n\t\n/**\n * Variable: selectionModel\n * \n * Holds the <mxGraphSelectionModel> that models the current selection.\n */\nmxGraph.prototype.selectionModel = null;\n\n/**\n * Variable: cellEditor\n * \n * Holds the <mxCellEditor> that is used as the in-place editing.\n */\nmxGraph.prototype.cellEditor = null;\n\n/**\n * Variable: cellRenderer\n * \n * Holds the <mxCellRenderer> for rendering the cells in the graph.\n */\nmxGraph.prototype.cellRenderer = null;\n\n/**\n * Variable: multiplicities\n * \n * An array of <mxMultiplicities> describing the allowed\n * connections in a graph.\n */\nmxGraph.prototype.multiplicities = null;\n\n/**\n * Variable: renderHint\n * \n * RenderHint as it was passed to the constructor.\n */\nmxGraph.prototype.renderHint = null;\n\n/**\n * Variable: dialect\n * \n * Dialect to be used for drawing the graph. Possible values are all\n * constants in <mxConstants> with a DIALECT-prefix.\n */\nmxGraph.prototype.dialect = null;\n\n/**\n * Variable: gridSize\n * \n * Specifies the grid size. Default is 10.\n */\nmxGraph.prototype.gridSize = 10;\n\t\n/**\n * Variable: gridEnabled\n * \n * Specifies if the grid is enabled. This is used in <snap>. Default is\n * true.\n */\nmxGraph.prototype.gridEnabled = true;\n\n/**\n * Variable: portsEnabled\n * \n * Specifies if ports are enabled. This is used in <cellConnected> to update\n * the respective style. Default is true.\n */\nmxGraph.prototype.portsEnabled = true;\n\n/**\n * Variable: nativeDoubleClickEnabled\n * \n * Specifies if native double click events should be detected. Default is true.\n */\nmxGraph.prototype.nativeDblClickEnabled = true;\n\n/**\n * Variable: doubleTapEnabled\n * \n * Specifies if double taps on touch-based devices should be handled as a\n * double click. Default is true.\n */\nmxGraph.prototype.doubleTapEnabled = true;\n\n/**\n * Variable: doubleTapTimeout\n * \n * Specifies the timeout for double taps and non-native double clicks. Default\n * is 500 ms.\n */\nmxGraph.prototype.doubleTapTimeout = 500;\n\n/**\n * Variable: doubleTapTolerance\n * \n * Specifies the tolerance for double taps and double clicks in quirks mode.\n * Default is 25 pixels.\n */\nmxGraph.prototype.doubleTapTolerance = 25;\n\n/**\n * Variable: lastTouchX\n * \n * Holds the x-coordinate of the last touch event for double tap detection.\n */\nmxGraph.prototype.lastTouchY = 0;\n\n/**\n * Variable: lastTouchX\n * \n * Holds the y-coordinate of the last touch event for double tap detection.\n */\nmxGraph.prototype.lastTouchY = 0;\n\n/**\n * Variable: lastTouchTime\n * \n * Holds the time of the last touch event for double click detection.\n */\nmxGraph.prototype.lastTouchTime = 0;\n\n/**\n * Variable: tapAndHoldEnabled\n * \n * Specifies if tap and hold should be used for starting connections on touch-based\n * devices. Default is true.\n */\nmxGraph.prototype.tapAndHoldEnabled = true;\n\n/**\n * Variable: tapAndHoldDelay\n * \n * Specifies the time for a tap and hold. Default is 500 ms.\n */\nmxGraph.prototype.tapAndHoldDelay = 500;\n\n/**\n * Variable: tapAndHoldInProgress\n * \n * True if the timer for tap and hold events is running.\n */\nmxGraph.prototype.tapAndHoldInProgress = false;\n\n/**\n * Variable: tapAndHoldValid\n * \n * True as long as the timer is running and the touch events\n * stay within the given <tapAndHoldTolerance>.\n */\nmxGraph.prototype.tapAndHoldValid = false;\n\n/**\n * Variable: initialTouchX\n * \n * Holds the x-coordinate of the intial touch event for tap and hold.\n */\nmxGraph.prototype.initialTouchX = 0;\n\n/**\n * Variable: initialTouchY\n * \n * Holds the y-coordinate of the intial touch event for tap and hold.\n */\nmxGraph.prototype.initialTouchY = 0;\n\n/**\n * Variable: tolerance\n * \n * Tolerance for a move to be handled as a single click.\n * Default is 4 pixels.\n */\nmxGraph.prototype.tolerance = 4;\n\n/**\n * Variable: defaultOverlap\n * \n * Value returned by <getOverlap> if <isAllowOverlapParent> returns\n * true for the given cell. <getOverlap> is used in <constrainChild> if\n * <isConstrainChild> returns true. The value specifies the\n * portion of the child which is allowed to overlap the parent.\n */\nmxGraph.prototype.defaultOverlap = 0.5;\n\n/**\n * Variable: defaultParent\n * \n * Specifies the default parent to be used to insert new cells.\n * This is used in <getDefaultParent>. Default is null.\n */\nmxGraph.prototype.defaultParent = null;\n\n/**\n * Variable: alternateEdgeStyle\n * \n * Specifies the alternate edge style to be used if the main control point\n * on an edge is being doubleclicked. Default is null.\n */\nmxGraph.prototype.alternateEdgeStyle = null;\n\n/**\n * Variable: backgroundImage\n *\n * Specifies the <mxImage> to be returned by <getBackgroundImage>. Default\n * is null.\n * \n * Example:\n *\n * (code)\n * var img = new mxImage('http://www.example.com/maps/examplemap.jpg', 1024, 768);\n * graph.setBackgroundImage(img);\n * graph.view.validate();\n * (end)\n */\nmxGraph.prototype.backgroundImage = null;\n\n/**\n * Variable: pageVisible\n *\n * Specifies if the background page should be visible. Default is false.\n * Not yet implemented.\n */\nmxGraph.prototype.pageVisible = false;\n\n/**\n * Variable: pageBreaksVisible\n * \n * Specifies if a dashed line should be drawn between multiple pages. Default\n * is false. If you change this value while a graph is being displayed then you\n * should call <sizeDidChange> to force an update of the display.\n */\nmxGraph.prototype.pageBreaksVisible = false;\n\n/**\n * Variable: pageBreakColor\n * \n * Specifies the color for page breaks. Default is 'gray'.\n */\nmxGraph.prototype.pageBreakColor = 'gray';\n\n/**\n * Variable: pageBreakDashed\n * \n * Specifies the page breaks should be dashed. Default is true.\n */\nmxGraph.prototype.pageBreakDashed = true;\n\n/**\n * Variable: minPageBreakDist\n * \n * Specifies the minimum distance for page breaks to be visible. Default is\n * 20 (in pixels).\n */\nmxGraph.prototype.minPageBreakDist = 20;\n\n/**\n * Variable: preferPageSize\n * \n * Specifies if the graph size should be rounded to the next page number in\n * <sizeDidChange>. This is only used if the graph container has scrollbars.\n * Default is false.\n */\nmxGraph.prototype.preferPageSize = false;\n\n/**\n * Variable: pageFormat\n *\n * Specifies the page format for the background page. Default is\n * <mxConstants.PAGE_FORMAT_A4_PORTRAIT>. This is used as the default in\n * <mxPrintPreview> and for painting the background page if <pageVisible> is\n * true and the pagebreaks if <pageBreaksVisible> is true.\n */\nmxGraph.prototype.pageFormat = mxConstants.PAGE_FORMAT_A4_PORTRAIT;\n\n/**\n * Variable: pageScale\n *\n * Specifies the scale of the background page. Default is 1.5.\n * Not yet implemented.\n */\nmxGraph.prototype.pageScale = 1.5;\n\n/**\n * Variable: enabled\n * \n * Specifies the return value for <isEnabled>. Default is true.\n */\nmxGraph.prototype.enabled = true;\n\n/**\n * Variable: escapeEnabled\n * \n * Specifies if <mxKeyHandler> should invoke <escape> when the escape key\n * is pressed. Default is true.\n */\nmxGraph.prototype.escapeEnabled = true;\n\n/**\n * Variable: invokesStopCellEditing\n * \n * If true, when editing is to be stopped by way of selection changing,\n * data in diagram changing or other means stopCellEditing is invoked, and\n * changes are saved. This is implemented in a focus handler in\n * <mxCellEditor>. Default is true.\n */\nmxGraph.prototype.invokesStopCellEditing = true;\n\n/**\n * Variable: enterStopsCellEditing\n * \n * If true, pressing the enter key without pressing control or shift will stop\n * editing and accept the new value. This is used in <mxCellEditor> to stop\n * cell editing. Note: You can always use F2 and escape to stop editing.\n * Default is false.\n */\nmxGraph.prototype.enterStopsCellEditing = false;\n\n/**\n * Variable: useScrollbarsForPanning\n * \n * Specifies if scrollbars should be used for panning in <panGraph> if\n * any scrollbars are available. If scrollbars are enabled in CSS, but no\n * scrollbars appear because the graph is smaller than the container size,\n * then no panning occurs if this is true. Default is true.\n */\nmxGraph.prototype.useScrollbarsForPanning = true;\n\n/**\n * Variable: exportEnabled\n * \n * Specifies the return value for <canExportCell>. Default is true.\n */\nmxGraph.prototype.exportEnabled = true;\n\n/**\n * Variable: importEnabled\n * \n * Specifies the return value for <canImportCell>. Default is true.\n */\nmxGraph.prototype.importEnabled = true;\n\n/**\n * Variable: cellsLocked\n * \n * Specifies the return value for <isCellLocked>. Default is false.\n */\nmxGraph.prototype.cellsLocked = false;\n\n/**\n * Variable: cellsCloneable\n * \n * Specifies the return value for <isCellCloneable>. Default is true.\n */\nmxGraph.prototype.cellsCloneable = true;\n\n/**\n * Variable: foldingEnabled\n * \n * Specifies if folding (collapse and expand via an image icon in the graph\n * should be enabled). Default is true.\n */\nmxGraph.prototype.foldingEnabled = true;\n\n/**\n * Variable: cellsEditable\n * \n * Specifies the return value for <isCellEditable>. Default is true.\n */\nmxGraph.prototype.cellsEditable = true;\n\t\t\n/**\n * Variable: cellsDeletable\n * \n * Specifies the return value for <isCellDeletable>. Default is true.\n */\nmxGraph.prototype.cellsDeletable = true;\n\n/**\n * Variable: cellsMovable\n * \n * Specifies the return value for <isCellMovable>. Default is true.\n */\nmxGraph.prototype.cellsMovable = true;\n\t\n/**\n * Variable: edgeLabelsMovable\n * \n * Specifies the return value for edges in <isLabelMovable>. Default is true.\n */\nmxGraph.prototype.edgeLabelsMovable = true;\n\t\n/**\n * Variable: vertexLabelsMovable\n * \n * Specifies the return value for vertices in <isLabelMovable>. Default is false.\n */\nmxGraph.prototype.vertexLabelsMovable = false;\n\n/**\n * Variable: dropEnabled\n * \n * Specifies the return value for <isDropEnabled>. Default is false.\n */\nmxGraph.prototype.dropEnabled = false;\n\n/**\n * Variable: splitEnabled\n * \n * Specifies if dropping onto edges should be enabled. This is ignored if\n * <dropEnabled> is false. If enabled, it will call <splitEdge> to carry\n * out the drop operation. Default is true.\n */\nmxGraph.prototype.splitEnabled = true;\n\n/**\n * Variable: cellsResizable\n * \n * Specifies the return value for <isCellResizable>. Default is true.\n */\nmxGraph.prototype.cellsResizable = true;\n\n/**\n * Variable: cellsBendable\n * \n * Specifies the return value for <isCellsBendable>. Default is true.\n */\nmxGraph.prototype.cellsBendable = true;\n\n/**\n * Variable: cellsSelectable\n * \n * Specifies the return value for <isCellSelectable>. Default is true.\n */\nmxGraph.prototype.cellsSelectable = true;\n\n/**\n * Variable: cellsDisconnectable\n * \n * Specifies the return value for <isCellDisconntable>. Default is true.\n */\nmxGraph.prototype.cellsDisconnectable = true;\n\n/**\n * Variable: autoSizeCells\n * \n * Specifies if the graph should automatically update the cell size after an\n * edit. This is used in <isAutoSizeCell>. Default is false.\n */\nmxGraph.prototype.autoSizeCells = false;\n\n/**\n * Variable: autoSizeCellsOnAdd\n * \n * Specifies if autoSize style should be applied when cells are added. Default is false.\n */\nmxGraph.prototype.autoSizeCellsOnAdd = false;\n\n/**\n * Variable: autoScroll\n * \n * Specifies if the graph should automatically scroll if the mouse goes near\n * the container edge while dragging. This is only taken into account if the\n * container has scrollbars. Default is true.\n * \n * If you need this to work without scrollbars then set <ignoreScrollbars> to\n * true. Please consult the <ignoreScrollbars> for details. In general, with\n * no scrollbars, the use of <allowAutoPanning> is recommended.\n */\nmxGraph.prototype.autoScroll = true;\n\n/**\n * Variable: ignoreScrollbars\n * \n * Specifies if the graph should automatically scroll regardless of the\n * scrollbars. This will scroll the container using positive values for\n * scroll positions (ie usually only rightwards and downwards). To avoid\n * possible conflicts with panning, set <translateToScrollPosition> to true.\n */\nmxGraph.prototype.ignoreScrollbars = false;\n\n/**\n * Variable: translateToScrollPosition\n * \n * Specifies if the graph should automatically convert the current scroll\n * position to a translate in the graph view when a mouseUp event is received.\n * This can be used to avoid conflicts when using <autoScroll> and\n * <ignoreScrollbars> with no scrollbars in the container.\n */\nmxGraph.prototype.translateToScrollPosition = false;\n\n/**\n * Variable: timerAutoScroll\n * \n * Specifies if autoscrolling should be carried out via mxPanningManager even\n * if the container has scrollbars. This disables <scrollPointToVisible> and\n * uses <mxPanningManager> instead. If this is true then <autoExtend> is\n * disabled. It should only be used with a scroll buffer or when scollbars\n * are visible and scrollable in all directions. Default is false.\n */\nmxGraph.prototype.timerAutoScroll = false;\n\n/**\n * Variable: allowAutoPanning\n * \n * Specifies if panning via <panGraph> should be allowed to implement autoscroll\n * if no scrollbars are available in <scrollPointToVisible>. To enable panning\n * inside the container, near the edge, set <mxPanningManager.border> to a\n * positive value. Default is false.\n */\nmxGraph.prototype.allowAutoPanning = false;\n\n/**\n * Variable: autoExtend\n * \n * Specifies if the size of the graph should be automatically extended if the\n * mouse goes near the container edge while dragging. This is only taken into\n * account if the container has scrollbars. Default is true. See <autoScroll>.\n */\nmxGraph.prototype.autoExtend = true;\n\n/**\n * Variable: maximumGraphBounds\n * \n * <mxRectangle> that specifies the area in which all cells in the diagram\n * should be placed. Uses in <getMaximumGraphBounds>. Use a width or height of\n * 0 if you only want to give a upper, left corner.\n */\nmxGraph.prototype.maximumGraphBounds = null;\n\n/**\n * Variable: minimumGraphSize\n * \n * <mxRectangle> that specifies the minimum size of the graph. This is ignored\n * if the graph container has no scrollbars. Default is null.\n */\nmxGraph.prototype.minimumGraphSize = null;\n\n/**\n * Variable: minimumContainerSize\n * \n * <mxRectangle> that specifies the minimum size of the <container> if\n * <resizeContainer> is true.\n */\nmxGraph.prototype.minimumContainerSize = null;\n\t\t\n/**\n * Variable: maximumContainerSize\n * \n * <mxRectangle> that specifies the maximum size of the container if\n * <resizeContainer> is true.\n */\nmxGraph.prototype.maximumContainerSize = null;\n\n/**\n * Variable: resizeContainer\n * \n * Specifies if the container should be resized to the graph size when\n * the graph size has changed. Default is false.\n */\nmxGraph.prototype.resizeContainer = false;\n\n/**\n * Variable: border\n * \n * Border to be added to the bottom and right side when the container is\n * being resized after the graph has been changed. Default is 0.\n */\nmxGraph.prototype.border = 0;\n\t\t\n/**\n * Variable: keepEdgesInForeground\n * \n * Specifies if edges should appear in the foreground regardless of their order\n * in the model. If <keepEdgesInForeground> and <keepEdgesInBackground> are\n * both true then the normal order is applied. Default is false.\n */\nmxGraph.prototype.keepEdgesInForeground = false;\n\n/**\n * Variable: keepEdgesInBackground\n * \n * Specifies if edges should appear in the background regardless of their order\n * in the model. If <keepEdgesInForeground> and <keepEdgesInBackground> are\n * both true then the normal order is applied. Default is false.\n */\nmxGraph.prototype.keepEdgesInBackground = false;\n\n/**\n * Variable: allowNegativeCoordinates\n * \n * Specifies if negative coordinates for vertices are allowed. Default is true.\n */\nmxGraph.prototype.allowNegativeCoordinates = true;\n\n/**\n * Variable: constrainChildren\n * \n * Specifies if a child should be constrained inside the parent bounds after a\n * move or resize of the child. Default is true.\n */\nmxGraph.prototype.constrainChildren = true;\n\n/**\n * Variable: constrainRelativeChildren\n * \n * Specifies if child cells with relative geometries should be constrained\n * inside the parent bounds, if <constrainChildren> is true, and/or the\n * <maximumGraphBounds>. Default is false.\n */\nmxGraph.prototype.constrainRelativeChildren = false;\n\n/**\n * Variable: extendParents\n * \n * Specifies if a parent should contain the child bounds after a resize of\n * the child. Default is true. This has precedence over <constrainChildren>.\n */\nmxGraph.prototype.extendParents = true;\n\n/**\n * Variable: extendParentsOnAdd\n * \n * Specifies if parents should be extended according to the <extendParents>\n * switch if cells are added. Default is true.\n */\nmxGraph.prototype.extendParentsOnAdd = true;\n\n/**\n * Variable: extendParentsOnAdd\n * \n * Specifies if parents should be extended according to the <extendParents>\n * switch if cells are added. Default is false for backwards compatiblity.\n */\nmxGraph.prototype.extendParentsOnMove = false;\n\n/**\n * Variable: recursiveResize\n * \n * Specifies the return value for <isRecursiveResize>. Default is\n * false for backwards compatiblity.\n */\nmxGraph.prototype.recursiveResize = false;\n\n/**\n * Variable: collapseToPreferredSize\n * \n * Specifies if the cell size should be changed to the preferred size when\n * a cell is first collapsed. Default is true.\n */\nmxGraph.prototype.collapseToPreferredSize = true;\n\n/**\n * Variable: zoomFactor\n * \n * Specifies the factor used for <zoomIn> and <zoomOut>. Default is 1.2\n * (120%).\n */\nmxGraph.prototype.zoomFactor = 1.2;\n\n/**\n * Variable: keepSelectionVisibleOnZoom\n * \n * Specifies if the viewport should automatically contain the selection cells\n * after a zoom operation. Default is false.\n */\nmxGraph.prototype.keepSelectionVisibleOnZoom = false;\n\n/**\n * Variable: centerZoom\n * \n * Specifies if the zoom operations should go into the center of the actual\n * diagram rather than going from top, left. Default is true.\n */\nmxGraph.prototype.centerZoom = true;\n\n/**\n * Variable: resetViewOnRootChange\n * \n * Specifies if the scale and translate should be reset if the root changes in\n * the model. Default is true.\n */\nmxGraph.prototype.resetViewOnRootChange = true;\n\n/**\n * Variable: resetEdgesOnResize\n * \n * Specifies if edge control points should be reset after the resize of a\n * connected cell. Default is false.\n */\nmxGraph.prototype.resetEdgesOnResize = false;\n\n/**\n * Variable: resetEdgesOnMove\n * \n * Specifies if edge control points should be reset after the move of a\n * connected cell. Default is false.\n */\nmxGraph.prototype.resetEdgesOnMove = false;\n\n/**\n * Variable: resetEdgesOnConnect\n * \n * Specifies if edge control points should be reset after the the edge has been\n * reconnected. Default is true.\n */\nmxGraph.prototype.resetEdgesOnConnect = true;\n\n/**\n * Variable: allowLoops\n * \n * Specifies if loops (aka self-references) are allowed. Default is false.\n */\nmxGraph.prototype.allowLoops = false;\n\t\n/**\n * Variable: defaultLoopStyle\n * \n * <mxEdgeStyle> to be used for loops. This is a fallback for loops if the\n * <mxConstants.STYLE_LOOP> is undefined. Default is <mxEdgeStyle.Loop>.\n */\nmxGraph.prototype.defaultLoopStyle = mxEdgeStyle.Loop;\n\n/**\n * Variable: multigraph\n * \n * Specifies if multiple edges in the same direction between the same pair of\n * vertices are allowed. Default is true.\n */\nmxGraph.prototype.multigraph = true;\n\n/**\n * Variable: connectableEdges\n * \n * Specifies if edges are connectable. Default is false. This overrides the\n * connectable field in edges.\n */\nmxGraph.prototype.connectableEdges = false;\n\n/**\n * Variable: allowDanglingEdges\n * \n * Specifies if edges with disconnected terminals are allowed in the graph.\n * Default is true.\n */\nmxGraph.prototype.allowDanglingEdges = true;\n\n/**\n * Variable: cloneInvalidEdges\n * \n * Specifies if edges that are cloned should be validated and only inserted\n * if they are valid. Default is true.\n */\nmxGraph.prototype.cloneInvalidEdges = false;\n\n/**\n * Variable: disconnectOnMove\n * \n * Specifies if edges should be disconnected from their terminals when they\n * are moved. Default is true.\n */\nmxGraph.prototype.disconnectOnMove = true;\n\n/**\n * Variable: labelsVisible\n * \n * Specifies if labels should be visible. This is used in <getLabel>. Default\n * is true.\n */\nmxGraph.prototype.labelsVisible = true;\n\t\n/**\n * Variable: htmlLabels\n * \n * Specifies the return value for <isHtmlLabel>. Default is false.\n */\nmxGraph.prototype.htmlLabels = false;\n\n/**\n * Variable: swimlaneSelectionEnabled\n * \n * Specifies if swimlanes should be selectable via the content if the\n * mouse is released. Default is true.\n */\nmxGraph.prototype.swimlaneSelectionEnabled = true;\n\n/**\n * Variable: swimlaneNesting\n * \n * Specifies if nesting of swimlanes is allowed. Default is true.\n */\nmxGraph.prototype.swimlaneNesting = true;\n\t\n/**\n * Variable: swimlaneIndicatorColorAttribute\n * \n * The attribute used to find the color for the indicator if the indicator\n * color is set to 'swimlane'. Default is <mxConstants.STYLE_FILLCOLOR>.\n */\nmxGraph.prototype.swimlaneIndicatorColorAttribute = mxConstants.STYLE_FILLCOLOR;\n\n/**\n * Variable: imageBundles\n * \n * Holds the list of image bundles.\n */\nmxGraph.prototype.imageBundles = null;\n\n/**\n * Variable: minFitScale\n * \n * Specifies the minimum scale to be applied in <fit>. Default is 0.1. Set this\n * to null to allow any value.\n */\nmxGraph.prototype.minFitScale = 0.1;\n\n/**\n * Variable: maxFitScale\n * \n * Specifies the maximum scale to be applied in <fit>. Default is 8. Set this\n * to null to allow any value.\n */\nmxGraph.prototype.maxFitScale = 8;\n\n/**\n * Variable: panDx\n * \n * Current horizontal panning value. Default is 0.\n */\nmxGraph.prototype.panDx = 0;\n\n/**\n * Variable: panDy\n * \n * Current vertical panning value. Default is 0.\n */\nmxGraph.prototype.panDy = 0;\n\n/**\n * Variable: collapsedImage\n * \n * Specifies the <mxImage> to indicate a collapsed state.\n * Default value is mxClient.imageBasePath + '/collapsed.gif'\n */\nmxGraph.prototype.collapsedImage = new mxImage(mxClient.imageBasePath + '/collapsed.gif', 9, 9);\n\n/**\n * Variable: expandedImage\n * \n * Specifies the <mxImage> to indicate a expanded state.\n * Default value is mxClient.imageBasePath + '/expanded.gif'\n */\nmxGraph.prototype.expandedImage = new mxImage(mxClient.imageBasePath + '/expanded.gif', 9, 9);\n\n/**\n * Variable: warningImage\n * \n * Specifies the <mxImage> for the image to be used to display a warning\n * overlay. See <setCellWarning>. Default value is mxClient.imageBasePath +\n * '/warning'.  The extension for the image depends on the platform. It is\n * '.png' on the Mac and '.gif' on all other platforms.\n */\nmxGraph.prototype.warningImage = new mxImage(mxClient.imageBasePath + '/warning'+\n\t((mxClient.IS_MAC) ? '.png' : '.gif'), 16, 16);\n\n/**\n * Variable: alreadyConnectedResource\n * \n * Specifies the resource key for the error message to be displayed in\n * non-multigraphs when two vertices are already connected. If the resource\n * for this key does not exist then the value is used as the error message.\n * Default is 'alreadyConnected'.\n */\nmxGraph.prototype.alreadyConnectedResource = (mxClient.language != 'none') ? 'alreadyConnected' : '';\n\n/**\n * Variable: containsValidationErrorsResource\n * \n * Specifies the resource key for the warning message to be displayed when\n * a collapsed cell contains validation errors. If the resource for this\n * key does not exist then the value is used as the warning message.\n * Default is 'containsValidationErrors'.\n */\nmxGraph.prototype.containsValidationErrorsResource = (mxClient.language != 'none') ? 'containsValidationErrors' : '';\n\n/**\n * Variable: collapseExpandResource\n * \n * Specifies the resource key for the tooltip on the collapse/expand icon.\n * If the resource for this key does not exist then the value is used as\n * the tooltip. Default is 'collapse-expand'.\n */\nmxGraph.prototype.collapseExpandResource = (mxClient.language != 'none') ? 'collapse-expand' : '';\n\n/**\n * Function: init\n * \n * Initializes the <container> and creates the respective datastructures.\n * \n * Parameters:\n * \n * container - DOM node that will contain the graph display.\n */\nmxGraph.prototype.init = function(container)\n{\n\tthis.container = container;\n\t\n\t// Initializes the in-place editor\n\tthis.cellEditor = this.createCellEditor();\t\n\n\t// Initializes the container using the view\n\tthis.view.init();\n\t\n\t// Updates the size of the container for the current graph\n\tthis.sizeDidChange();\n\t\n\t// Hides tooltips and resets tooltip timer if mouse leaves container\n\tmxEvent.addListener(container, 'mouseleave', mxUtils.bind(this, function()\n\t{\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.hide();\n\t\t}\n\t}));\n\n\t// Automatic deallocation of memory\n\tif (mxClient.IS_IE)\n\t{\n\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.destroy();\n\t\t}));\n\t\t\n\t\t// Disable shift-click for text\n\t\tmxEvent.addListener(container, 'selectstart',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\treturn this.isEditing() || (!this.isMouseDown && !mxEvent.isShiftDown(evt));\n\t\t\t})\n\t\t);\n\t}\n\t\n\t// Workaround for missing last shape and connect preview in IE8 standards\n\t// mode if no initial graph displayed or no label for shape defined\n\tif (document.documentMode == 8)\n\t{\n\t\tcontainer.insertAdjacentHTML('beforeend', '<' + mxClient.VML_PREFIX + ':group' +\n\t\t\t' style=\"DISPLAY: none;\"></' + mxClient.VML_PREFIX + ':group>');\n\t}\n};\n\n/**\n * Function: createHandlers\n * \n * Creates the tooltip-, panning-, connection- and graph-handler (in this\n * order). This is called in the constructor before <init> is called.\n */\nmxGraph.prototype.createHandlers = function()\n{\n\tthis.tooltipHandler = this.createTooltipHandler();\n\tthis.tooltipHandler.setEnabled(false);\n\tthis.selectionCellsHandler = this.createSelectionCellsHandler();\n\tthis.connectionHandler = this.createConnectionHandler();\n\tthis.connectionHandler.setEnabled(false);\n\tthis.graphHandler = this.createGraphHandler();\n\tthis.panningHandler = this.createPanningHandler();\n\tthis.panningHandler.panningEnabled = false;\n\tthis.popupMenuHandler = this.createPopupMenuHandler();\n};\n\n/**\n * Function: createTooltipHandler\n * \n * Creates and returns a new <mxTooltipHandler> to be used in this graph.\n */\nmxGraph.prototype.createTooltipHandler = function()\n{\n\treturn new mxTooltipHandler(this);\n};\n\n/**\n * Function: createSelectionCellsHandler\n * \n * Creates and returns a new <mxTooltipHandler> to be used in this graph.\n */\nmxGraph.prototype.createSelectionCellsHandler = function()\n{\n\treturn new mxSelectionCellsHandler(this);\n};\n\n/**\n * Function: createConnectionHandler\n * \n * Creates and returns a new <mxConnectionHandler> to be used in this graph.\n */\nmxGraph.prototype.createConnectionHandler = function()\n{\n\treturn new mxConnectionHandler(this);\n};\n\n/**\n * Function: createGraphHandler\n * \n * Creates and returns a new <mxGraphHandler> to be used in this graph.\n */\nmxGraph.prototype.createGraphHandler = function()\n{\n\treturn new mxGraphHandler(this);\n};\n\n/**\n * Function: createPanningHandler\n * \n * Creates and returns a new <mxPanningHandler> to be used in this graph.\n */\nmxGraph.prototype.createPanningHandler = function()\n{\n\treturn new mxPanningHandler(this);\n};\n\n/**\n * Function: createPopupMenuHandler\n * \n * Creates and returns a new <mxPopupMenuHandler> to be used in this graph.\n */\nmxGraph.prototype.createPopupMenuHandler = function()\n{\n\treturn new mxPopupMenuHandler(this);\n};\n\n/**\n * Function: createSelectionModel\n * \n * Creates a new <mxGraphSelectionModel> to be used in this graph.\n */\nmxGraph.prototype.createSelectionModel = function()\n{\n\treturn new mxGraphSelectionModel(this);\n};\n\n/**\n * Function: createStylesheet\n * \n * Creates a new <mxGraphSelectionModel> to be used in this graph.\n */\nmxGraph.prototype.createStylesheet = function()\n{\n\treturn new mxStylesheet();\n};\n\n/**\n * Function: createGraphView\n * \n * Creates a new <mxGraphView> to be used in this graph.\n */\nmxGraph.prototype.createGraphView = function()\n{\n\treturn new mxGraphView(this);\n};\n \n/**\n * Function: createCellRenderer\n * \n * Creates a new <mxCellRenderer> to be used in this graph.\n */\nmxGraph.prototype.createCellRenderer = function()\n{\n\treturn new mxCellRenderer();\n};\n\n/**\n * Function: createCellEditor\n * \n * Creates a new <mxCellEditor> to be used in this graph.\n */\nmxGraph.prototype.createCellEditor = function()\n{\n\treturn new mxCellEditor(this);\n};\n\n/**\n * Function: getModel\n * \n * Returns the <mxGraphModel> that contains the cells.\n */\nmxGraph.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: getView\n * \n * Returns the <mxGraphView> that contains the <mxCellStates>.\n */\nmxGraph.prototype.getView = function()\n{\n\treturn this.view;\n};\n\n/**\n * Function: getStylesheet\n * \n * Returns the <mxStylesheet> that defines the style.\n */\nmxGraph.prototype.getStylesheet = function()\n{\n\treturn this.stylesheet;\n};\n\n/**\n * Function: setStylesheet\n * \n * Sets the <mxStylesheet> that defines the style.\n */\nmxGraph.prototype.setStylesheet = function(stylesheet)\n{\n\tthis.stylesheet = stylesheet;\n};\n\n/**\n * Function: getSelectionModel\n * \n * Returns the <mxGraphSelectionModel> that contains the selection.\n */\nmxGraph.prototype.getSelectionModel = function()\n{\n\treturn this.selectionModel;\n};\n\n/**\n * Function: setSelectionModel\n * \n * Sets the <mxSelectionModel> that contains the selection.\n */\nmxGraph.prototype.setSelectionModel = function(selectionModel)\n{\n\tthis.selectionModel = selectionModel;\n};\n\n/**\n * Function: getSelectionCellsForChanges\n * \n * Returns the cells to be selected for the given array of changes.\n */\nmxGraph.prototype.getSelectionCellsForChanges = function(changes)\n{\n\tvar dict = new mxDictionary();\n\tvar cells = [];\n\t\n\tvar addCell = mxUtils.bind(this, function(cell)\n\t{\n\t\tif (!dict.get(cell) && this.model.contains(cell))\n\t\t{\n\t\t\tif (this.model.isEdge(cell) || this.model.isVertex(cell))\n\t\t\t{\n\t\t\t\tdict.put(cell, true);\n\t\t\t\tcells.push(cell);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t{\n\t\t\t\t\taddCell(this.model.getChildAt(cell, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\tif (change.constructor != mxRootChange)\n\t\t{\n\t\t\tvar cell = null;\n\n\t\t\tif (change instanceof mxChildChange)\n\t\t\t{\n\t\t\t\tcell = change.child;\n\t\t\t}\n\t\t\telse if (change.cell != null && change.cell instanceof mxCell)\n\t\t\t{\n\t\t\t\tcell = change.cell;\n\t\t\t}\n\t\t\t\n\t\t\tif (cell != null)\n\t\t\t{\n\t\t\t\taddCell(cell);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: graphModelChanged\n * \n * Called when the graph model changes. Invokes <processChange> on each\n * item of the given array to update the view accordingly.\n * \n * Parameters:\n * \n * changes - Array that contains the individual changes.\n */\nmxGraph.prototype.graphModelChanged = function(changes)\n{\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tthis.processChange(changes[i]);\n\t}\n\t\n\tthis.removeSelectionCells(this.getRemovedCellsForChanges(changes));\n\tthis.view.validate();\n\tthis.sizeDidChange();\n};\n\n/**\n * Function: getRemovedCellsForChanges\n * \n * Returns the cells that have been removed from the model.\n */\nmxGraph.prototype.getRemovedCellsForChanges = function(changes)\n{\n\tvar result = [];\n\t\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\t// Resets the view settings, removes all cells and clears\n\t\t// the selection if the root changes.\n\t\tif (change instanceof mxRootChange)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse if (change instanceof mxChildChange)\n\t\t{\n\t\t\tif (this.model.contains(change.previous) && !this.model.contains(change.parent))\n\t\t\t{\n\t\t\t\tresult = result.concat(this.model.getDescendants(change.child));\n\t\t\t}\n\t\t}\n\t\telse if (change instanceof mxVisibleChange)\n\t\t{\n\t\t\tresult = result.concat(this.model.getDescendants(change.cell));\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: processChange\n * \n * Processes the given change and invalidates the respective cached data\n * in <view>. This fires a <root> event if the root has changed in the\n * model.\n * \n * Parameters:\n * \n * change - Object that represents the change on the model.\n */\nmxGraph.prototype.processChange = function(change)\n{\n\t// Resets the view settings, removes all cells and clears\n\t// the selection if the root changes.\n\tif (change instanceof mxRootChange)\n\t{\n\t\tthis.clearSelection();\n\t\tthis.setDefaultParent(null);\n\t\tthis.removeStateForCell(change.previous);\n\t\t\n\t\tif (this.resetViewOnRootChange)\n\t\t{\n\t\t\tthis.view.scale = 1;\n\t\t\tthis.view.translate.x = 0;\n\t\t\tthis.view.translate.y = 0;\n\t\t}\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t}\n\t\n\t// Adds or removes a child to the view by online invaliding\n\t// the minimal required portions of the cache, namely, the\n\t// old and new parent and the child.\n\telse if (change instanceof mxChildChange)\n\t{\n\t\tvar newParent = this.model.getParent(change.child);\n\t\tthis.view.invalidate(change.child, true, true);\n\t\t\n\t\tif (!this.model.contains(newParent) || this.isCellCollapsed(newParent))\n\t\t{\n\t\t\tthis.view.invalidate(change.child, true, true);\n\t\t\tthis.removeStateForCell(change.child);\n\t\t\t\n\t\t\t// Handles special case of current root of view being removed\n\t\t\tif (this.view.currentRoot == change.child)\n\t\t\t{\n\t\t\t\tthis.home();\n\t\t\t}\n\t\t}\n \n\t\tif (newParent != change.previous)\n\t\t{\n\t\t\t// Refreshes the collapse/expand icons on the parents\n\t\t\tif (newParent != null)\n\t\t\t{\n\t\t\t\tthis.view.invalidate(newParent, false, false);\n\t\t\t}\n\t\t\t\n\t\t\tif (change.previous != null)\n\t\t\t{\n\t\t\t\tthis.view.invalidate(change.previous, false, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handles two special cases where the shape does not need to be\n\t// recreated from scratch, it only needs to be invalidated.\n\telse if (change instanceof mxTerminalChange || change instanceof mxGeometryChange)\n\t{\n\t\t// Checks if the geometry has changed to avoid unnessecary revalidation\n\t\tif (change instanceof mxTerminalChange || ((change.previous == null && change.geometry != null) ||\n\t\t\t(change.previous != null && !change.previous.equals(change.geometry))))\n\t\t{\n\t\t\tthis.view.invalidate(change.cell);\n\t\t}\n\t}\n\n\t// Handles two special cases where only the shape, but no\n\t// descendants need to be recreated\n\telse if (change instanceof mxValueChange)\n\t{\n\t\tthis.view.invalidate(change.cell, false, false);\n\t}\n\t\n\t// Requires a new mxShape in JavaScript\n\telse if (change instanceof mxStyleChange)\n\t{\n\t\tthis.view.invalidate(change.cell, true, true);\n\t\tvar state = this.view.getState(change.cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tstate.style = null;\n\t\t}\n\t}\n\t\n\t// Removes the state from the cache by default\n\telse if (change.cell != null && change.cell instanceof mxCell)\n\t{\n\t\tthis.removeStateForCell(change.cell);\n\t}\n};\n\n/**\n * Function: removeStateForCell\n * \n * Removes all cached information for the given cell and its descendants.\n * This is called when a cell was removed from the model.\n * \n * Paramters:\n * \n * cell - <mxCell> that was removed from the model.\n */\nmxGraph.prototype.removeStateForCell = function(cell)\n{\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.removeStateForCell(this.model.getChildAt(cell, i));\n\t}\n\n\tthis.view.invalidate(cell, false, true);\n\tthis.view.removeState(cell);\n};\n\n/**\n * Group: Overlays\n */\n\n/**\n * Function: addCellOverlay\n * \n * Adds an <mxCellOverlay> for the specified cell. This method fires an\n * <addoverlay> event and returns the new <mxCellOverlay>.\n * \n * Parameters:\n * \n * cell - <mxCell> to add the overlay for.\n * overlay - <mxCellOverlay> to be added for the cell.\n */\nmxGraph.prototype.addCellOverlay = function(cell, overlay)\n{\n\tif (cell.overlays == null)\n\t{\n\t\tcell.overlays = [];\n\t}\n\t\n\tcell.overlays.push(overlay);\n\n\tvar state = this.view.getState(cell);\n\n\t// Immediately updates the cell display if the state exists\n\tif (state != null)\n\t{\n\t\tthis.cellRenderer.redraw(state);\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.ADD_OVERLAY,\n\t\t\t'cell', cell, 'overlay', overlay));\n\t\n\treturn overlay;\n};\n\n/**\n * Function: getCellOverlays\n * \n * Returns the array of <mxCellOverlays> for the given cell or null, if\n * no overlays are defined.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlays should be returned.\n */\nmxGraph.prototype.getCellOverlays = function(cell)\n{\n\treturn cell.overlays;\n};\n\n/**\n * Function: removeCellOverlay\n * \n * Removes and returns the given <mxCellOverlay> from the given cell. This\n * method fires a <removeoverlay> event. If no overlay is given, then all\n * overlays are removed using <removeOverlays>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlay should be removed.\n * overlay - Optional <mxCellOverlay> to be removed.\n */\nmxGraph.prototype.removeCellOverlay = function(cell, overlay)\n{\n\tif (overlay == null)\n\t{\n\t\tthis.removeCellOverlays(cell);\n\t}\n\telse\n\t{\n\t\tvar index = mxUtils.indexOf(cell.overlays, overlay);\n\t\t\n\t\tif (index >= 0)\n\t\t{\n\t\t\tcell.overlays.splice(index, 1);\n\t\t\t\n\t\t\tif (cell.overlays.length == 0)\n\t\t\t{\n\t\t\t\tcell.overlays = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Immediately updates the cell display if the state exists\n\t\t\tvar state = this.view.getState(cell);\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\tthis.cellRenderer.redraw(state);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_OVERLAY,\n\t\t\t\t\t'cell', cell, 'overlay', overlay));\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\toverlay = null;\n\t\t}\n\t}\n\t\n\treturn overlay;\n};\n\n/**\n * Function: removeCellOverlays\n * \n * Removes all <mxCellOverlays> from the given cell. This method\n * fires a <removeoverlay> event for each <mxCellOverlay> and returns\n * the array of <mxCellOverlays> that was removed from the cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlays should be removed\n */\nmxGraph.prototype.removeCellOverlays = function(cell)\n{\n\tvar overlays = cell.overlays;\n\t\n\tif (overlays != null)\n\t{\n\t\tcell.overlays = null;\n\t\t\n\t\t// Immediately updates the cell display if the state exists\n\t\tvar state = this.view.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.cellRenderer.redraw(state);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < overlays.length; i++)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_OVERLAY,\n\t\t\t\t\t'cell', cell, 'overlay', overlays[i]));\n\t\t}\n\t}\n\t\n\treturn overlays;\n};\n\n/**\n * Function: clearCellOverlays\n * \n * Removes all <mxCellOverlays> in the graph for the given cell and all its\n * descendants. If no cell is specified then all overlays are removed from\n * the graph. This implementation uses <removeCellOverlays> to remove the\n * overlays from the individual cells.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> that represents the root of the subtree to\n * remove the overlays from. Default is the root in the model.\n */\nmxGraph.prototype.clearCellOverlays = function(cell)\n{\n\tcell = (cell != null) ? cell : this.model.getRoot();\n\tthis.removeCellOverlays(cell);\n\t\n\t// Recursively removes all overlays from the children\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.model.getChildAt(cell, i);\n\t\tthis.clearCellOverlays(child); // recurse\n\t}\n};\n\n/**\n * Function: setCellWarning\n * \n * Creates an overlay for the given cell using the warning and image or\n * <warningImage> and returns the new <mxCellOverlay>. The warning is\n * displayed as a tooltip in a red font and may contain HTML markup. If\n * the warning is null or a zero length string, then all overlays are\n * removed from the cell.\n * \n * Example:\n * \n * (code)\n * graph.setCellWarning(cell, '<b>Warning:</b>: Hello, World!');\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose warning should be set.\n * warning - String that represents the warning to be displayed.\n * img - Optional <mxImage> to be used for the overlay. Default is\n * <warningImage>.\n * isSelect - Optional boolean indicating if a click on the overlay\n * should select the corresponding cell. Default is false.\n */\nmxGraph.prototype.setCellWarning = function(cell, warning, img, isSelect)\n{\n\tif (warning != null && warning.length > 0)\n\t{\n\t\timg = (img != null) ? img : this.warningImage;\n\t\t\n\t\t// Creates the overlay with the image and warning\n\t\tvar overlay = new mxCellOverlay(img,\n\t\t\t'<font color=red>'+warning+'</font>');\n\t\t\n\t\t// Adds a handler for single mouseclicks to select the cell\n\t\tif (isSelect)\n\t\t{\n\t\t\toverlay.addListener(mxEvent.CLICK,\n\t\t\t\tmxUtils.bind(this, function(sender, evt)\n\t\t\t\t{\n\t\t\t\t\tif (this.isEnabled())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setSelectionCell(cell);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\t\n\t\t// Sets and returns the overlay in the graph\n\t\treturn this.addCellOverlay(cell, overlay);\n\t}\n\telse\n\t{\n\t\tthis.removeCellOverlays(cell);\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Group: In-place editing\n */\n\n/**\n * Function: startEditing\n * \n * Calls <startEditingAtCell> using the given cell or the first selection\n * cell.\n * \n * Parameters:\n * \n * evt - Optional mouse event that triggered the editing.\n */\nmxGraph.prototype.startEditing = function(evt)\n{\n\tthis.startEditingAtCell(null, evt);\n};\n\n/**\n * Function: startEditingAtCell\n * \n * Fires a <startEditing> event and invokes <mxCellEditor.startEditing>\n * on <editor>. After editing was started, a <editingStarted> event is\n * fired.\n * \n * Parameters:\n * \n * cell - <mxCell> to start the in-place editor for.\n * evt - Optional mouse event that triggered the editing.\n */\nmxGraph.prototype.startEditingAtCell = function(cell, evt)\n{\n\tif (evt == null || !mxEvent.isMultiTouchEvent(evt))\n\t{\n\t\tif (cell == null)\n\t\t{\n\t\t\tcell = this.getSelectionCell();\n\t\t\t\n\t\t\tif (cell != null && !this.isCellEditable(cell))\n\t\t\t{\n\t\t\t\tcell = null;\n\t\t\t}\n\t\t}\n\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.START_EDITING,\n\t\t\t\t\t'cell', cell, 'event', evt));\n\t\t\tthis.cellEditor.startEditing(cell, evt);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.EDITING_STARTED,\n\t\t\t\t\t'cell', cell, 'event', evt));\n\t\t}\n\t}\n};\n\n/**\n * Function: getEditingValue\n * \n * Returns the initial value for in-place editing. This implementation\n * returns <convertValueToString> for the given cell. If this function is\n * overridden, then <mxGraphModel.valueForCellChanged> should take care\n * of correctly storing the actual new value inside the user object.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the initial editing value should be returned.\n * evt - Optional mouse event that triggered the editor.\n */\nmxGraph.prototype.getEditingValue = function(cell, evt)\n{\n\treturn this.convertValueToString(cell);\n};\n\n/**\n * Function: stopEditing\n * \n * Stops the current editing  and fires a <editingStopped> event.\n * \n * Parameters:\n * \n * cancel - Boolean that specifies if the current editing value\n * should be stored.\n */\nmxGraph.prototype.stopEditing = function(cancel)\n{\n\tthis.cellEditor.stopEditing(cancel);\n\tthis.fireEvent(new mxEventObject(mxEvent.EDITING_STOPPED, 'cancel', cancel));\n};\n\n/**\n * Function: labelChanged\n * \n * Sets the label of the specified cell to the given value using\n * <cellLabelChanged> and fires <mxEvent.LABEL_CHANGED> while the\n * transaction is in progress. Returns the cell whose label was changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be changed.\n * value - New label to be assigned.\n * evt - Optional event that triggered the change.\n */\nmxGraph.prototype.labelChanged = function(cell, value, evt)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar old = cell.value;\n\t\tthis.cellLabelChanged(cell, value, this.isAutoSizeCell(cell));\n\t\tthis.fireEvent(new mxEventObject(mxEvent.LABEL_CHANGED,\n\t\t\t'cell', cell, 'value', value, 'old', old, 'event', evt));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellLabelChanged\n * \n * Sets the new label for a cell. If autoSize is true then\n * <cellSizeUpdated> will be called.\n * \n * In the following example, the function is extended to map changes to\n * attributes in an XML node, as shown in <convertValueToString>.\n * Alternatively, the handling of this can be implemented as shown in\n * <mxGraphModel.valueForCellChanged> without the need to clone the\n * user object.\n * \n * (code)\n * var graphCellLabelChanged = graph.cellLabelChanged;\n * graph.cellLabelChanged = function(cell, newValue, autoSize)\n * {\n * \t// Cloned for correct undo/redo\n * \tvar elt = cell.value.cloneNode(true);\n *  elt.setAttribute('label', newValue);\n *  \n *  newValue = elt;\n *  graphCellLabelChanged.apply(this, arguments);\n * };\n * (end) \n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be changed.\n * value - New label to be assigned.\n * autoSize - Boolean that specifies if <cellSizeUpdated> should be called.\n */\nmxGraph.prototype.cellLabelChanged = function(cell, value, autoSize)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.model.setValue(cell, value);\n\t\t\n\t\tif (autoSize)\n\t\t{\n\t\t\tthis.cellSizeUpdated(cell, false);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n};\n\n/**\n * Group: Event processing\n */\n\n/**\n * Function: escape\n * \n * Processes an escape keystroke.\n * \n * Parameters:\n * \n * evt - Mouseevent that represents the keystroke.\n */\nmxGraph.prototype.escape = function(evt)\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.ESCAPE, 'event', evt));\n};\n\n/**\n * Function: click\n * \n * Processes a singleclick on an optional cell and fires a <click> event.\n * The click event is fired initially. If the graph is enabled and the\n * event has not been consumed, then the cell is selected using\n * <selectCellForEvent> or the selection is cleared using\n * <clearSelection>. The events consumed state is set to true if the\n * corresponding <mxMouseEvent> has been consumed.\n *\n * To handle a click event, use the following code.\n * \n * (code)\n * graph.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var e = evt.getProperty('event'); // mouse event\n *   var cell = evt.getProperty('cell'); // cell may be null\n *   \n *   if (cell != null)\n *   {\n *     // Do something useful with cell and consume the event\n *     evt.consume();\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the single click.\n */\nmxGraph.prototype.click = function(me)\n{\n\tvar evt = me.getEvent();\n\tvar cell = me.getCell();\n\tvar mxe = new mxEventObject(mxEvent.CLICK, 'event', evt, 'cell', cell);\n\t\n\tif (me.isConsumed())\n\t{\n\t\tmxe.consume();\n\t}\n\t\n\tthis.fireEvent(mxe);\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed())\n\t{\n\t\tif (cell != null)\n\t\t{\n\t\t\tif (this.isTransparentClickEvent(evt))\n\t\t\t{\n\t\t\t\tvar active = false;\n\t\t\t\t\n\t\t\t\tvar tmp = this.getCellAt(me.graphX, me.graphY, null, null, null, mxUtils.bind(this, function(state)\n\t\t\t\t{\n\t\t\t\t\tvar selected = this.isCellSelected(state.cell);\n\t\t\t\t\tactive = active || selected;\n\t\t\t\t\t\n\t\t\t\t\treturn !active || selected;\n\t\t\t\t}));\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tcell = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.selectCellForEvent(cell, evt);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar swimlane = null;\n\t\t\t\n\t\t\tif (this.isSwimlaneSelectionEnabled())\n\t\t\t{\n\t\t\t\t// Gets the swimlane at the location (includes\n\t\t\t\t// content area of swimlanes)\n\t\t\t\tswimlane = this.getSwimlaneAt(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\n\t\t\t// Selects the swimlane and consumes the event\n\t\t\tif (swimlane != null)\n\t\t\t{\n\t\t\t\tthis.selectCellForEvent(swimlane, evt);\n\t\t\t}\n\t\t\t\n\t\t\t// Ignores the event if the control key is pressed\n\t\t\telse if (!this.isToggleEvent(evt))\n\t\t\t{\n\t\t\t\tthis.clearSelection();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: dblClick\n * \n * Processes a doubleclick on an optional cell and fires a <dblclick>\n * event. The event is fired initially. If the graph is enabled and the\n * event has not been consumed, then <edit> is called with the given\n * cell. The event is ignored if no cell was specified.\n *\n * Example for overriding this method.\n *\n * (code)\n * graph.dblClick = function(evt, cell)\n * {\n *   var mxe = new mxEventObject(mxEvent.DOUBLE_CLICK, 'event', evt, 'cell', cell);\n *   this.fireEvent(mxe);\n *   \n *   if (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed())\n *   {\n * \t   mxUtils.alert('Hello, World!');\n *     mxe.consume();\n *   }\n * }\n * (end)\n * \n * Example listener for this event.\n * \n * (code)\n * graph.addListener(mxEvent.DOUBLE_CLICK, function(sender, evt)\n * {\n *   var cell = evt.getProperty('cell');\n *   // do something with the cell and consume the\n *   // event to prevent in-place editing from start\n * });\n * (end) \n * \n * Parameters:\n * \n * evt - Mouseevent that represents the doubleclick.\n * cell - Optional <mxCell> under the mousepointer.\n */\nmxGraph.prototype.dblClick = function(evt, cell)\n{\n\tvar mxe = new mxEventObject(mxEvent.DOUBLE_CLICK, 'event', evt, 'cell', cell);\n\tthis.fireEvent(mxe);\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed() &&\n\t\tcell != null && this.isCellEditable(cell) && !this.isEditing(cell))\n\t{\n\t\tthis.startEditingAtCell(cell, evt);\n\t\tmxEvent.consume(evt);\n\t}\n};\n\n/**\n * Function: tapAndHold\n * \n * Handles the <mxMouseEvent> by highlighting the <mxCellState>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the touch event.\n * state - Optional <mxCellState> that is associated with the event.\n */\nmxGraph.prototype.tapAndHold = function(me)\n{\n\tvar evt = me.getEvent();\n\tvar mxe = new mxEventObject(mxEvent.TAP_AND_HOLD, 'event', evt, 'cell', me.getCell());\n\n\t// LATER: Check if event should be consumed if me is consumed\n\tthis.fireEvent(mxe);\n\n\tif (mxe.isConsumed())\n\t{\n\t\t// Resets the state of the panning handler\n\t\tthis.panningHandler.panningTrigger = false;\n\t}\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed() && this.connectionHandler.isEnabled())\n\t{\n\t\tvar state = this.view.getState(this.connectionHandler.marker.getCell(me));\n\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.connectionHandler.marker.currentColor = this.connectionHandler.marker.validColor;\n\t\t\tthis.connectionHandler.marker.markedState = state;\n\t\t\tthis.connectionHandler.marker.mark();\n\t\t\t\n\t\t\tthis.connectionHandler.first = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\tthis.connectionHandler.edgeState = this.connectionHandler.createEdgeState(me);\n\t\t\tthis.connectionHandler.previous = state;\n\t\t\tthis.connectionHandler.fireEvent(new mxEventObject(mxEvent.START, 'state', this.connectionHandler.previous));\n\t\t}\n\t}\n};\n\n/**\n * Function: scrollPointToVisible\n * \n * Scrolls the graph to the given point, extending the graph container if\n * specified.\n */\nmxGraph.prototype.scrollPointToVisible = function(x, y, extend, border)\n{\n\tif (!this.timerAutoScroll && (this.ignoreScrollbars || mxUtils.hasScrollbars(this.container)))\n\t{\n\t\tvar c = this.container;\n\t\tborder = (border != null) ? border : 20;\n\t\t\n\t\tif (x >= c.scrollLeft && y >= c.scrollTop && x <= c.scrollLeft + c.clientWidth &&\n\t\t\ty <= c.scrollTop + c.clientHeight)\n\t\t{\n\t\t\tvar dx = c.scrollLeft + c.clientWidth - x;\n\t\t\t\n\t\t\tif (dx < border)\n\t\t\t{\n\t\t\t\tvar old = c.scrollLeft;\n\t\t\t\tc.scrollLeft += border - dx;\n\n\t\t\t\t// Automatically extends the canvas size to the bottom, right\n\t\t\t\t// if the event is outside of the canvas and the edge of the\n\t\t\t\t// canvas has been reached. Notes: Needs fix for IE.\n\t\t\t\tif (extend && old == c.scrollLeft)\n\t\t\t\t{\n\t\t\t\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\t\t\tvar width = this.container.scrollWidth + border - dx;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Updates the clipping region. This is an expensive\n\t\t\t\t\t\t// operation that should not be executed too often.\n\t\t\t\t\t\troot.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar width = Math.max(c.clientWidth, c.scrollWidth) + border - dx;\n\t\t\t\t\t\tvar canvas = this.view.getCanvas();\n\t\t\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tc.scrollLeft += border - dx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdx = x - c.scrollLeft;\n\t\t\t\t\n\t\t\t\tif (dx < border)\n\t\t\t\t{\n\t\t\t\t\tc.scrollLeft -= border - dx;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar dy = c.scrollTop + c.clientHeight - y;\n\t\t\t\n\t\t\tif (dy < border)\n\t\t\t{\n\t\t\t\tvar old = c.scrollTop;\n\t\t\t\tc.scrollTop += border - dy;\n\n\t\t\t\tif (old == c.scrollTop && extend)\n\t\t\t\t{\n\t\t\t\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\t\t\tvar height = this.container.scrollHeight + border - dy;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Updates the clipping region. This is an expensive\n\t\t\t\t\t\t// operation that should not be executed too often.\n\t\t\t\t\t\troot.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar height = Math.max(c.clientHeight, c.scrollHeight) + border - dy;\n\t\t\t\t\t\tvar canvas = this.view.getCanvas();\n\t\t\t\t\t\tcanvas.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tc.scrollTop += border - dy;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdy = y - c.scrollTop;\n\t\t\t\t\n\t\t\t\tif (dy < border)\n\t\t\t\t{\n\t\t\t\t\tc.scrollTop -= border - dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.allowAutoPanning && !this.panningHandler.isActive())\n\t{\n\t\tif (this.panningManager == null)\n\t\t{\n\t\t\tthis.panningManager = this.createPanningManager();\n\t\t}\n\n\t\tthis.panningManager.panTo(x + this.panDx, y + this.panDy);\n\t}\n};\n\n\n/**\n * Function: createPanningManager\n * \n * Creates and returns an <mxPanningManager>.\n */\nmxGraph.prototype.createPanningManager = function()\n{\n\treturn new mxPanningManager(this);\n};\n\n/**\n * Function: getBorderSizes\n * \n * Returns the size of the border and padding on all four sides of the\n * container. The left, top, right and bottom borders are stored in the x, y,\n * width and height of the returned <mxRectangle>, respectively.\n */\nmxGraph.prototype.getBorderSizes = function()\n{\n\tvar css = mxUtils.getCurrentStyle(this.container);\n\t\n\treturn new mxRectangle(mxUtils.parseCssNumber(css.paddingLeft) +\n\t\t\t((css.borderLeftStyle != 'none') ? mxUtils.parseCssNumber(css.borderLeftWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingTop) +\n\t\t\t((css.borderTopStyle != 'none') ? mxUtils.parseCssNumber(css.borderTopWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingRight) +\n\t\t\t((css.borderRightStyle != 'none') ? mxUtils.parseCssNumber(css.borderRightWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingBottom) +\n\t\t\t((css.borderBottomStyle != 'none') ? mxUtils.parseCssNumber(css.borderBottomWidth) : 0));\n};\n\n/**\n * Function: getPreferredPageSize\n * \n * Returns the preferred size of the background page if <preferPageSize> is true.\n */\nmxGraph.prototype.getPreferredPageSize = function(bounds, width, height)\n{\n\tvar scale = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar fmt = this.pageFormat;\n\tvar ps = this.pageScale;\n\tvar page = new mxRectangle(0, 0, Math.ceil(fmt.width * ps), Math.ceil(fmt.height * ps));\n\t\n\tvar hCount = (this.pageBreaksVisible) ? Math.ceil(width / page.width) : 1;\n\tvar vCount = (this.pageBreaksVisible) ? Math.ceil(height / page.height) : 1;\n\t\n\treturn new mxRectangle(0, 0, hCount * page.width + 2 + tr.x, vCount * page.height + 2 + tr.y);\n};\n\n/**\n * Function: fit\n *\n * Scales the graph such that the complete diagram fits into <container> and\n * returns the current scale in the view. To fit an initial graph prior to\n * rendering, set <mxGraphView.rendering> to false prior to changing the model\n * and execute the following after changing the model.\n * \n * (code)\n * graph.fit();\n * graph.view.rendering = true;\n * graph.refresh();\n * (end)\n * \n * To fit and center the graph, the following code can be used.\n * \n * (code)\n * var margin = 2;\n * var max = 3;\n * \n * var bounds = graph.getGraphBounds();\n * var cw = graph.container.clientWidth - margin;\n * var ch = graph.container.clientHeight - margin;\n * var w = bounds.width / graph.view.scale;\n * var h = bounds.height / graph.view.scale;\n * var s = Math.min(max, Math.min(cw / w, ch / h));\n * \n * graph.view.scaleAndTranslate(s,\n *   (margin + cw - w * s) / (2 * s) - bounds.x / graph.view.scale,\n *   (margin + ch - h * s) / (2 * s) - bounds.y / graph.view.scale);\n * (end)\n * \n * Parameters:\n * \n * border - Optional number that specifies the border. Default is <border>.\n * keepOrigin - Optional boolean that specifies if the translate should be\n * changed. Default is false.\n * margin - Optional margin in pixels. Default is 0.\n * enabled - Optional boolean that specifies if the scale should be set or\n * just returned. Default is true.\n * ignoreWidth - Optional boolean that specifies if the width should be\n * ignored. Default is false.\n * ignoreHeight - Optional boolean that specifies if the height should be\n * ignored. Default is false.\n * maxHeight - Optional maximum height.\n */\nmxGraph.prototype.fit = function(border, keepOrigin, margin, enabled, ignoreWidth, ignoreHeight, maxHeight)\n{\n\tif (this.container != null)\n\t{\n\t\tborder = (border != null) ? border : this.getBorder();\n\t\tkeepOrigin = (keepOrigin != null) ? keepOrigin : false;\n\t\tmargin = (margin != null) ? margin : 0;\n\t\tenabled = (enabled != null) ? enabled : true;\n\t\tignoreWidth = (ignoreWidth != null) ? ignoreWidth : false;\n\t\tignoreHeight = (ignoreHeight != null) ? ignoreHeight : false;\n\t\t\n\t\t// Adds spacing and border from css\n\t\tvar cssBorder = this.getBorderSizes();\n\t\tvar w1 = this.container.offsetWidth - cssBorder.x - cssBorder.width - 1;\n\t\tvar h1 = (maxHeight != null) ? maxHeight : this.container.offsetHeight - cssBorder.y - cssBorder.height - 1;\n\t\tvar bounds = this.view.getGraphBounds();\n\t\t\n\t\tif (bounds.width > 0 && bounds.height > 0)\n\t\t{\n\t\t\tif (keepOrigin && bounds.x != null && bounds.y != null)\n\t\t\t{\n\t\t\t\tbounds = bounds.clone();\n\t\t\t\tbounds.width += bounds.x;\n\t\t\t\tbounds.height += bounds.y;\n\t\t\t\tbounds.x = 0;\n\t\t\t\tbounds.y = 0;\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Use unscaled bounding boxes to fix rounding errors\n\t\t\tvar s = this.view.scale;\n\t\t\tvar w2 = bounds.width / s;\n\t\t\tvar h2 = bounds.height / s;\n\t\t\t\n\t\t\t// Fits to the size of the background image if required\n\t\t\tif (this.backgroundImage != null)\n\t\t\t{\n\t\t\t\tw2 = Math.max(w2, this.backgroundImage.width - bounds.x / s);\n\t\t\t\th2 = Math.max(h2, this.backgroundImage.height - bounds.y / s);\n\t\t\t}\n\t\t\t\n\t\t\tvar b = ((keepOrigin) ? border : 2 * border) + margin + 1;\n\n\t\t\tw1 -= b;\n\t\t\th1 -= b;\n\t\t\t\n\t\t\tvar s2 = (((ignoreWidth) ? h1 / h2 : (ignoreHeight) ? w1 / w2 :\n\t\t\t\tMath.min(w1 / w2, h1 / h2)));\n\t\t\t\n\t\t\tif (this.minFitScale != null)\n\t\t\t{\n\t\t\t\ts2 = Math.max(s2, this.minFitScale);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.maxFitScale != null)\n\t\t\t{\n\t\t\t\ts2 = Math.min(s2, this.maxFitScale);\n\t\t\t}\n\t\n\t\t\tif (enabled)\n\t\t\t{\n\t\t\t\tif (!keepOrigin)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.hasScrollbars(this.container))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar x0 = (bounds.x != null) ? Math.floor(this.view.translate.x - bounds.x / s + border / s2 + margin / 2) : border;\n\t\t\t\t\t\tvar y0 = (bounds.y != null) ? Math.floor(this.view.translate.y - bounds.y / s + border / s2 + margin / 2) : border;\n\n\t\t\t\t\t\tthis.view.scaleAndTranslate(s2, x0, y0);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.view.setScale(s2);\n\t\t\t\t\t\tvar b2 = this.getGraphBounds();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (b2.x != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.container.scrollLeft = b2.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (b2.y != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.container.scrollTop = b2.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.view.scale != s2)\n\t\t\t\t{\n\t\t\t\t\tthis.view.setScale(s2);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn s2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.view.scale;\n};\n\n/**\n * Function: sizeDidChange\n * \n * Called when the size of the graph has changed. This implementation fires\n * a <size> event after updating the clipping region of the SVG element in\n * SVG-bases browsers.\n */\nmxGraph.prototype.sizeDidChange = function()\n{\n\tvar bounds = this.getGraphBounds();\n\t\n\tif (this.container != null)\n\t{\n\t\tvar border = this.getBorder();\n\t\t\n\t\tvar width = Math.max(0, bounds.x + bounds.width + 2 * border * this.view.scale);\n\t\tvar height = Math.max(0, bounds.y + bounds.height + 2 * border * this.view.scale);\n\t\t\n\t\tif (this.minimumContainerSize != null)\n\t\t{\n\t\t\twidth = Math.max(width, this.minimumContainerSize.width);\n\t\t\theight = Math.max(height, this.minimumContainerSize.height);\n\t\t}\n\n\t\tif (this.resizeContainer)\n\t\t{\n\t\t\tthis.doResizeContainer(width, height);\n\t\t}\n\n\t\tif (this.preferPageSize || (!mxClient.IS_IE && this.pageVisible))\n\t\t{\n\t\t\tvar size = this.getPreferredPageSize(bounds, Math.max(1, width), Math.max(1, height));\n\t\t\t\n\t\t\tif (size != null)\n\t\t\t{\n\t\t\t\twidth = size.width * this.view.scale;\n\t\t\t\theight = size.height * this.view.scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.minimumGraphSize != null)\n\t\t{\n\t\t\twidth = Math.max(width, this.minimumGraphSize.width * this.view.scale);\n\t\t\theight = Math.max(height, this.minimumGraphSize.height * this.view.scale);\n\t\t}\n\n\t\twidth = Math.ceil(width);\n\t\theight = Math.ceil(height);\n\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\n\t\t\troot.style.minWidth = Math.max(1, width) + 'px';\n\t\t\troot.style.minHeight = Math.max(1, height) + 'px';\n\t\t\troot.style.width = '100%';\n\t\t\troot.style.height = '100%';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\t// Quirks mode does not support minWidth/-Height\n\t\t\t\tthis.view.updateHtmlCanvasSize(Math.max(1, width), Math.max(1, height));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.view.canvas.style.minWidth = Math.max(1, width) + 'px';\n\t\t\t\tthis.view.canvas.style.minHeight = Math.max(1, height) + 'px';\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.updatePageBreaks(this.pageBreaksVisible, width, height);\n\t}\n\n\tthis.fireEvent(new mxEventObject(mxEvent.SIZE, 'bounds', bounds));\n};\n\n/**\n * Function: doResizeContainer\n * \n * Resizes the container for the given graph width and height.\n */\nmxGraph.prototype.doResizeContainer = function(width, height)\n{\n\tif (this.maximumContainerSize != null)\n\t{\n\t\twidth = Math.min(this.maximumContainerSize.width, width);\n\t\theight = Math.min(this.maximumContainerSize.height, height);\n\t}\n\n\tthis.container.style.width = Math.ceil(width) + 'px';\n\tthis.container.style.height = Math.ceil(height) + 'px';\n};\n\n/**\n * Function: updatePageBreaks\n * \n * Invokes from <sizeDidChange> to redraw the page breaks.\n * \n * Parameters:\n * \n * visible - Boolean that specifies if page breaks should be shown.\n * width - Specifies the width of the container in pixels.\n * height - Specifies the height of the container in pixels.\n */\nmxGraph.prototype.updatePageBreaks = function(visible, width, height)\n{\n\tvar scale = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar fmt = this.pageFormat;\n\tvar ps = scale * this.pageScale;\n\tvar bounds = new mxRectangle(0, 0, fmt.width * ps, fmt.height * ps);\n\n\tvar gb = mxRectangle.fromRectangle(this.getGraphBounds());\n\tgb.width = Math.max(1, gb.width);\n\tgb.height = Math.max(1, gb.height);\n\t\n\tbounds.x = Math.floor((gb.x - tr.x * scale) / bounds.width) * bounds.width + tr.x * scale;\n\tbounds.y = Math.floor((gb.y - tr.y * scale) / bounds.height) * bounds.height + tr.y * scale;\n\t\n\tgb.width = Math.ceil((gb.width + (gb.x - bounds.x)) / bounds.width) * bounds.width;\n\tgb.height = Math.ceil((gb.height + (gb.y - bounds.y)) / bounds.height) * bounds.height;\n\t\n\t// Does not show page breaks if the scale is too small\n\tvisible = visible && Math.min(bounds.width, bounds.height) > this.minPageBreakDist;\n\n\tvar horizontalCount = (visible) ? Math.ceil(gb.height / bounds.height) + 1 : 0;\n\tvar verticalCount = (visible) ? Math.ceil(gb.width / bounds.width) + 1 : 0;\n\tvar right = (verticalCount - 1) * bounds.width;\n\tvar bottom = (horizontalCount - 1) * bounds.height;\n\t\n\tif (this.horizontalPageBreaks == null && horizontalCount > 0)\n\t{\n\t\tthis.horizontalPageBreaks = [];\n\t}\n\n\tif (this.verticalPageBreaks == null && verticalCount > 0)\n\t{\n\t\tthis.verticalPageBreaks = [];\n\t}\n\t\n\tvar drawPageBreaks = mxUtils.bind(this, function(breaks)\n\t{\n\t\tif (breaks != null)\n\t\t{\n\t\t\tvar count = (breaks == this.horizontalPageBreaks) ? horizontalCount : verticalCount; \n\t\t\t\n\t\t\tfor (var i = 0; i <= count; i++)\n\t\t\t{\n\t\t\t\tvar pts = (breaks == this.horizontalPageBreaks) ?\n\t\t\t\t\t[new mxPoint(Math.round(bounds.x), Math.round(bounds.y + i * bounds.height)),\n\t\t\t         new mxPoint(Math.round(bounds.x + right), Math.round(bounds.y + i * bounds.height))] :\n\t\t\t        [new mxPoint(Math.round(bounds.x + i * bounds.width), Math.round(bounds.y)),\n\t\t\t         new mxPoint(Math.round(bounds.x + i * bounds.width), Math.round(bounds.y + bottom))];\n\n\t\t\t\tif (breaks[i] != null)\n\t\t\t\t{\n\t\t\t\t\tbreaks[i].points = pts;\n\t\t\t\t\tbreaks[i].redraw();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar pageBreak = new mxPolyline(pts, this.pageBreakColor);\n\t\t\t\t\tpageBreak.dialect = this.dialect;\n\t\t\t\t\tpageBreak.pointerEvents = false;\n\t\t\t\t\tpageBreak.isDashed = this.pageBreakDashed;\n\t\t\t\t\tpageBreak.init(this.view.backgroundPane);\n\t\t\t\t\tpageBreak.redraw();\n\t\t\t\t\t\n\t\t\t\t\tbreaks[i] = pageBreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = count; i < breaks.length; i++)\n\t\t\t{\n\t\t\t\tbreaks[i].destroy();\n\t\t\t}\n\t\t\t\n\t\t\tbreaks.splice(count, breaks.length - count);\n\t\t}\n\t});\n\t\n\tdrawPageBreaks(this.horizontalPageBreaks);\n\tdrawPageBreaks(this.verticalPageBreaks);\n};\n\n/**\n * Group: Cell styles\n */\n\n/**\n * Function: getCellStyle\n * \n * Returns an array of key, value pairs representing the cell style for the\n * given cell. If no string is defined in the model that specifies the\n * style, then the default style for the cell is returned or <EMPTY_ARRAY>,\n * if not style can be found. Note: You should try and get the cell state\n * for the given cell and use the cached style in the state before using\n * this method.\n * \n * Parameters:\n * \n * cell - <mxCell> whose style should be returned as an array.\n */\nmxGraph.prototype.getCellStyle = function(cell)\n{\n\tvar stylename = this.model.getStyle(cell);\n\tvar style = null;\n\t\n\t// Gets the default style for the cell\n\tif (this.model.isEdge(cell))\n\t{\n\t\tstyle = this.stylesheet.getDefaultEdgeStyle();\n\t}\n\telse\n\t{\n\t\tstyle = this.stylesheet.getDefaultVertexStyle();\n\t}\n\t\n\t// Resolves the stylename using the above as the default\n\tif (stylename != null)\n\t{\n\t\tstyle = this.postProcessCellStyle(this.stylesheet.getCellStyle(stylename, style));\n\t}\n\t\n\t// Returns a non-null value if no style can be found\n\tif (style == null)\n\t{\n\t\tstyle = mxGraph.prototype.EMPTY_ARRAY;\n\t}\n\t\n\treturn style;\n};\n\n/**\n * Function: postProcessCellStyle\n * \n * Tries to resolve the value for the image style in the image bundles and\n * turns short data URIs as defined in mxImageBundle to data URIs as\n * defined in RFC 2397 of the IETF.\n */\nmxGraph.prototype.postProcessCellStyle = function(style)\n{\n\tif (style != null)\n\t{\n\t\tvar key = style[mxConstants.STYLE_IMAGE];\n\t\tvar image = this.getImageFromBundles(key);\n\n\t\tif (image != null)\n\t\t{\n\t\t\tstyle[mxConstants.STYLE_IMAGE] = image;\n\t\t}\n\t\telse\n\t\t{\n\t\t\timage = key;\n\t\t}\n\t\t\n\t\t// Converts short data uris to normal data uris\n\t\tif (image != null && image.substring(0, 11) == 'data:image/')\n\t\t{\n\t\t\tif (image.substring(0, 20) == 'data:image/svg+xml,<')\n\t\t\t{\n\t\t\t\t// Required for FF and IE11\n\t\t\t\timage = image.substring(0, 19) + encodeURIComponent(image.substring(19));\n\t\t\t}\n\t\t\telse if (image.substring(0, 22) != 'data:image/svg+xml,%3C')\n\t\t\t{\n\t\t\t\tvar comma = image.indexOf(',');\n\t\t\t\t\n\t\t\t\t// Adds base64 encoding prefix if needed\n\t\t\t\tif (comma > 0 && image.substring(comma - 7, comma + 1) != ';base64,')\n\t\t\t\t{\n\t\t\t\t\timage = image.substring(0, comma) + ';base64,'\n\t\t\t\t\t\t+ image.substring(comma + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tstyle[mxConstants.STYLE_IMAGE] = image;\n\t\t}\n\t}\n\n\treturn style;\n};\n\n/**\n * Function: setCellStyle\n * \n * Sets the style of the specified cells. If no cells are given, then the\n * selection cells are changed.\n * \n * Parameters:\n * \n * style - String representing the new style of the cells.\n * cells - Optional array of <mxCells> to set the style for. Default is the\n * selection cells.\n */\nmxGraph.prototype.setCellStyle = function(style, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\t\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.model.setStyle(cells[i], style);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: toggleCellStyle\n * \n * Toggles the boolean value for the given key in the style of the given cell\n * and returns the new value as 0 or 1. If no cell is specified then the\n * selection cell is used.\n * \n * Parameter:\n * \n * key - String representing the key for the boolean value to be toggled.\n * defaultValue - Optional boolean default value if no value is defined.\n * Default is false.\n * cell - Optional <mxCell> whose style should be modified. Default is\n * the selection cell.\n */\nmxGraph.prototype.toggleCellStyle = function(key, defaultValue, cell)\n{\n\tcell = cell || this.getSelectionCell();\n\t\n\treturn this.toggleCellStyles(key, defaultValue, [cell]);\n};\n\n/**\n * Function: toggleCellStyles\n * \n * Toggles the boolean value for the given key in the style of the given cells\n * and returns the new value as 0 or 1. If no cells are specified, then the\n * selection cells are used. For example, this can be used to toggle\n * <mxConstants.STYLE_ROUNDED> or any other style with a boolean value.\n * \n * Parameter:\n * \n * key - String representing the key for the boolean value to be toggled.\n * defaultValue - Optional boolean default value if no value is defined.\n * Default is false.\n * cells - Optional array of <mxCells> whose styles should be modified.\n * Default is the selection cells.\n */\nmxGraph.prototype.toggleCellStyles = function(key, defaultValue, cells)\n{\n\tdefaultValue = (defaultValue != null) ? defaultValue : false;\n\tcells = cells || this.getSelectionCells();\n\tvar value = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar state = this.view.getState(cells[0]);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cells[0]);\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvalue = (mxUtils.getValue(style, key, defaultValue)) ? 0 : 1;\n\t\t\tthis.setCellStyles(key, value, cells);\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: setCellStyles\n * \n * Sets the key to value in the styles of the given cells. This will modify\n * the existing cell styles in-place and override any existing assignment\n * for the given key. If no cells are specified, then the selection cells\n * are changed. If no value is specified, then the respective key is\n * removed from the styles.\n * \n * Parameters:\n * \n * key - String representing the key to be assigned.\n * value - String representing the new value for the key.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.setCellStyles = function(key, value, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\tmxUtils.setCellStyles(this.model, cells, key, value);\n};\n\n/**\n * Function: toggleCellStyleFlags\n * \n * Toggles the given bit for the given key in the styles of the specified\n * cells.\n * \n * Parameters:\n * \n * key - String representing the key to toggle the flag in.\n * flag - Integer that represents the bit to be toggled.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.toggleCellStyleFlags = function(key, flag, cells)\n{\n\tthis.setCellStyleFlags(key, flag, null, cells);\n};\n\n/**\n * Function: setCellStyleFlags\n * \n * Sets or toggles the given bit for the given key in the styles of the\n * specified cells.\n * \n * Parameters:\n * \n * key - String representing the key to toggle the flag in.\n * flag - Integer that represents the bit to be toggled.\n * value - Boolean value to be used or null if the value should be toggled.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.setCellStyleFlags = function(key, flag, value, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tif (value == null)\n\t\t{\n\t\t\tvar state = this.view.getState(cells[0]);\n\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cells[0]);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tvar current = parseInt(style[key] || 0);\n\t\t\t\tvalue = !((current & flag) == flag);\n\t\t\t}\n\t\t}\n\n\t\tmxUtils.setCellStyleFlags(this.model, cells, key, flag, value);\n\t}\n};\n\n/**\n * Group: Cell alignment and orientation\n */\n\n/**\n * Function: alignCells\n * \n * Aligns the given cells vertically or horizontally according to the given\n * alignment using the optional parameter as the coordinate.\n * \n * Parameters:\n * \n * align - Specifies the alignment. Possible values are all constants in\n * mxConstants with an ALIGN prefix.\n * cells - Array of <mxCells> to be aligned.\n * param - Optional coordinate for the alignment.\n */\nmxGraph.prototype.alignCells = function(align, cells, param)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tif (cells != null && cells.length > 1)\n\t{\n\t\t// Finds the required coordinate for the alignment\n\t\tif (param == null)\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\n\t\t\t\tif (state != null && !this.model.isEdge(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tif (param == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x + state.width / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x + state.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y + state.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y + state.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.max(param, state.x + state.width);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.min(param, state.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.max(param, state.y + state.height);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.min(param, state.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Aligns the cells to the coordinate\n\t\tif (param != null)\n\t\t{\n\t\t\tvar s = this.view.scale;\n\n\t\t\tthis.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (geo != null && !this.model.isEdge(cells[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x - state.width / 2) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x - state.width) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y - state.height / 2) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y - state.height) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.resizeCell(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ALIGN_CELLS,\n\t\t\t\t\t\t'align', align, 'cells', cells));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.model.endUpdate();\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: flipEdge\n * \n * Toggles the style of the given edge between null (or empty) and\n * <alternateEdgeStyle>. This method fires <mxEvent.FLIP_EDGE> while the\n * transaction is in progress. Returns the edge that was flipped.\n * \n * Here is an example that overrides this implementation to invert the\n * value of <mxConstants.STYLE_ELBOW> without removing any existing styles.\n * \n * (code)\n * graph.flipEdge = function(edge)\n * {\n *   if (edge != null)\n *   {\n *     var state = this.view.getState(edge);\n *     var style = (state != null) ? state.style : this.getCellStyle(edge);\n *     \n *     if (style != null)\n *     {\n *       var elbow = mxUtils.getValue(style, mxConstants.STYLE_ELBOW,\n *           mxConstants.ELBOW_HORIZONTAL);\n *       var value = (elbow == mxConstants.ELBOW_HORIZONTAL) ?\n *           mxConstants.ELBOW_VERTICAL : mxConstants.ELBOW_HORIZONTAL;\n *       this.setCellStyles(mxConstants.STYLE_ELBOW, value, [edge]);\n *     }\n *   }\n * };\n * (end)\n * \n * Parameters:\n * \n * edge - <mxCell> whose style should be changed.\n */\nmxGraph.prototype.flipEdge = function(edge)\n{\n\tif (edge != null &&\n\t\tthis.alternateEdgeStyle != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar style = this.model.getStyle(edge);\n\n\t\t\tif (style == null || style.length == 0)\n\t\t\t{\n\t\t\t\tthis.model.setStyle(edge, this.alternateEdgeStyle);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.model.setStyle(edge, null);\n\t\t\t}\n\n\t\t\t// Removes all existing control points\n\t\t\tthis.resetEdge(edge);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.FLIP_EDGE, 'edge', edge));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: addImageBundle\n *\n * Adds the specified <mxImageBundle>.\n */\nmxGraph.prototype.addImageBundle = function(bundle)\n{\n\tthis.imageBundles.push(bundle);\n};\n\n/**\n * Function: removeImageBundle\n * \n * Removes the specified <mxImageBundle>.\n */\nmxGraph.prototype.removeImageBundle = function(bundle)\n{\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < this.imageBundles.length; i++)\n\t{\n\t\tif (this.imageBundles[i] != bundle)\n\t\t{\n\t\t\ttmp.push(this.imageBundles[i]);\n\t\t}\n\t}\n\t\n\tthis.imageBundles = tmp;\n};\n\n/**\n * Function: getImageFromBundles\n *\n * Searches all <imageBundles> for the specified key and returns the value\n * for the first match or null if the key is not found.\n */\nmxGraph.prototype.getImageFromBundles = function(key)\n{\n\tif (key != null)\n\t{\n\t\tfor (var i = 0; i < this.imageBundles.length; i++)\n\t\t{\n\t\t\tvar image = this.imageBundles[i].getImage(key);\n\t\t\t\n\t\t\tif (image != null)\n\t\t\t{\n\t\t\t\treturn image;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Group: Order\n */\n\n/**\n * Function: orderCells\n * \n * Moves the given cells to the front or back. The change is carried out\n * using <cellsOrdered>. This method fires <mxEvent.ORDER_CELLS> while the\n * transaction is in progress.\n * \n * Parameters:\n * \n * back - Boolean that specifies if the cells should be moved to back.\n * cells - Array of <mxCells> to move to the background. If null is\n * specified then the selection cells are used.\n */\nmxGraph.prototype.orderCells = function(back, cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = mxUtils.sortCells(this.getSelectionCells(), true);\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsOrdered(cells, back);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ORDER_CELLS,\n\t\t\t\t'back', back, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsOrdered\n * \n * Moves the given cells to the front or back. This method fires\n * <mxEvent.CELLS_ORDERED> while the transaction is in progress.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose order should be changed.\n * back - Boolean that specifies if the cells should be moved to back.\n */\nmxGraph.prototype.cellsOrdered = function(cells, back)\n{\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\n\t\t\t\tif (back)\n\t\t\t\t{\n\t\t\t\t\tthis.model.add(parent, cells[i], i);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.model.add(parent, cells[i],\n\t\t\t\t\t\t\tthis.model.getChildCount(parent) - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_ORDERED,\n\t\t\t\t\t'back', back, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Grouping\n */\n\n/**\n * Function: groupCells\n * \n * Adds the cells into the given group. The change is carried out using\n * <cellsAdded>, <cellsMoved> and <cellsResized>. This method fires\n * <mxEvent.GROUP_CELLS> while the transaction is in progress. Returns the\n * new group. A group is only created if there is at least one entry in the\n * given array of cells.\n * \n * Parameters:\n * \n * group - <mxCell> that represents the target group. If null is specified\n * then a new group is created using <createGroupCell>.\n * border - Optional integer that specifies the border between the child\n * area and the group bounds. Default is 0.\n * cells - Optional array of <mxCells> to be grouped. If null is specified\n * then the selection cells are used.\n */\nmxGraph.prototype.groupCells = function(group, border, cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = mxUtils.sortCells(this.getSelectionCells(), true);\n\t}\n\n\tcells = this.getCellsForGroup(cells);\n\n\tif (group == null)\n\t{\n\t\tgroup = this.createGroupCell(cells);\n\t}\n\n\tvar bounds = this.getBoundsForGroup(group, cells, border);\n\n\tif (cells.length > 0 && bounds != null)\n\t{\n\t\t// Uses parent of group or previous parent of first child\n\t\tvar parent = this.model.getParent(group);\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.model.getParent(cells[0]);\n\t\t}\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Checks if the group has a geometry and\n\t\t\t// creates one if one does not exist\n\t\t\tif (this.getCellGeometry(group) == null)\n\t\t\t{\n\t\t\t\tthis.model.setGeometry(group, new mxGeometry());\n\t\t\t}\n\n\t\t\t// Adds the group into the parent\n\t\t\tvar index = this.model.getChildCount(parent);\n\t\t\tthis.cellsAdded([group], parent, index, null, null, false, false, false);\n\n\t\t\t// Adds the children into the group and moves\n\t\t\tindex = this.model.getChildCount(group);\n\t\t\tthis.cellsAdded(cells, group, index, null, null, false, false, false);\n\t\t\tthis.cellsMoved(cells, -bounds.x, -bounds.y, false, false, false);\n\n\t\t\t// Resizes the group\n\t\t\tthis.cellsResized([group], [bounds], false);\n\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.GROUP_CELLS,\n\t\t\t\t\t'group', group, 'border', border, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn group;\n};\n\n/**\n * Function: getCellsForGroup\n * \n * Returns the cells with the same parent as the first cell\n * in the given array.\n */\nmxGraph.prototype.getCellsForGroup = function(cells)\n{\n\tvar result = [];\n\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar parent = this.model.getParent(cells[0]);\n\t\tresult.push(cells[0]);\n\n\t\t// Filters selection cells with the same parent\n\t\tfor (var i = 1; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.getParent(cells[i]) == parent)\n\t\t\t{\n\t\t\t\tresult.push(cells[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getBoundsForGroup\n * \n * Returns the bounds to be used for the given group and children.\n */\nmxGraph.prototype.getBoundsForGroup = function(group, children, border)\n{\n\tvar result = this.getBoundingBoxFromGeometry(children, true);\n\t\n\tif (result != null)\n\t{\n\t\tif (this.isSwimlane(group))\n\t\t{\n\t\t\tvar size = this.getStartSize(group);\n\t\t\t\n\t\t\tresult.x -= size.width;\n\t\t\tresult.y -= size.height;\n\t\t\tresult.width += size.width;\n\t\t\tresult.height += size.height;\n\t\t}\n\t\t\n\t\t// Adds the border\n\t\tif (border != null)\n\t\t{\n\t\t\tresult.x -= border;\n\t\t\tresult.y -= border;\n\t\t\tresult.width += 2 * border;\n\t\t\tresult.height += 2 * border;\n\t\t}\n\t}\t\t\t\n\t\n\treturn result;\n};\n\n/**\n * Function: createGroupCell\n * \n * Hook for creating the group cell to hold the given array of <mxCells> if\n * no group cell was given to the <group> function.\n * \n * The following code can be used to set the style of new group cells.\n * \n * (code)\n * var graphCreateGroupCell = graph.createGroupCell;\n * graph.createGroupCell = function(cells)\n * {\n *   var group = graphCreateGroupCell.apply(this, arguments);\n *   group.setStyle('group');\n *   \n *   return group;\n * };\n */\nmxGraph.prototype.createGroupCell = function(cells)\n{\n\tvar group = new mxCell('');\n\tgroup.setVertex(true);\n\tgroup.setConnectable(false);\n\t\n\treturn group;\n};\n\n/**\n * Function: ungroupCells\n * \n * Ungroups the given cells by moving the children the children to their\n * parents parent and removing the empty groups. Returns the children that\n * have been removed from the groups.\n * \n * Parameters:\n * \n * cells - Array of cells to be ungrouped. If null is specified then the\n * selection cells are used.\n */\nmxGraph.prototype.ungroupCells = function(cells)\n{\n\tvar result = [];\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\n\t\t// Finds the cells with children\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.getChildCount(cells[i]) > 0)\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\n\t\t}\n\n\t\tcells = tmp;\n\t}\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\t\t\n\t\t\t\tif (children != null && children.length > 0)\n\t\t\t\t{\n\t\t\t\t\tchildren = children.slice();\n\t\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\t\t\tvar index = this.model.getChildCount(parent);\n\n\t\t\t\t\tthis.cellsAdded(children, parent, index, null, null, true);\n\t\t\t\t\tresult = result.concat(children);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.removeCellsAfterUngroup(cells);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.UNGROUP_CELLS, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: removeCellsAfterUngroup\n * \n * Hook to remove the groups after <ungroupCells>.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> that were ungrouped.\n */\nmxGraph.prototype.removeCellsAfterUngroup = function(cells)\n{\n\tthis.cellsRemoved(this.addAllEdges(cells));\n};\n\n/**\n * Function: removeCellsFromParent\n * \n * Removes the specified cells from their parents and adds them to the\n * default parent. Returns the cells that were removed from their parents.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be removed from their parents.\n */\nmxGraph.prototype.removeCellsFromParent = function(cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar parent = this.getDefaultParent();\n\t\tvar index = this.model.getChildCount(parent);\n\n\t\tthis.cellsAdded(cells, parent, index, null, null, true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_CELLS_FROM_PARENT, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: updateGroupBounds\n * \n * Updates the bounds of the given groups to include all children and returns\n * the passed-in cells. Call this with the groups in parent to child order,\n * top-most group first, the cells are processed in reverse order and cells\n * with no children are ignored.\n * \n * Parameters:\n * \n * cells - The groups whose bounds should be updated. If this is null, then\n * the selection cells are used.\n * border - Optional border to be added in the group. Default is 0.\n * moveGroup - Optional boolean that allows the group to be moved. Default\n * is false.\n * topBorder - Optional top border to be added in the group. Default is 0.\n * rightBorder - Optional top border to be added in the group. Default is 0.\n * bottomBorder - Optional top border to be added in the group. Default is 0.\n * leftBorder - Optional top border to be added in the group. Default is 0.\n */\nmxGraph.prototype.updateGroupBounds = function(cells, border, moveGroup, topBorder, rightBorder, bottomBorder, leftBorder)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tborder = (border != null) ? border : 0;\n\tmoveGroup = (moveGroup != null) ? moveGroup : false;\n\ttopBorder = (topBorder != null) ? topBorder : 0;\n\trightBorder = (rightBorder != null) ? rightBorder : 0;\n\tbottomBorder = (bottomBorder != null) ? bottomBorder : 0;\n\tleftBorder = (leftBorder != null) ? leftBorder : 0;\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = cells.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar children = this.getChildCells(cells[i]);\n\t\t\t\t\n\t\t\t\tif (children != null && children.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = this.getBoundingBoxFromGeometry(children, true);\n\t\t\t\t\t\n\t\t\t\t\tif (bounds != null && bounds.width > 0 && bounds.height > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar left = 0;\n\t\t\t\t\t\tvar top = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Adds the size of the title area for swimlanes\n\t\t\t\t\t\tif (this.isSwimlane(cells[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar size = this.getStartSize(cells[i]);\n\t\t\t\t\t\t\tleft = size.width;\n\t\t\t\t\t\t\ttop = size.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (moveGroup)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = Math.round(geo.x + bounds.x - border - left - leftBorder);\n\t\t\t\t\t\t\tgeo.y = Math.round(geo.y + bounds.y - border - top - topBorder);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo.width = Math.round(bounds.width + 2 * border + left + leftBorder + rightBorder);\n\t\t\t\t\t\tgeo.height = Math.round(bounds.height + 2 * border + top + topBorder + bottomBorder);\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\tthis.moveCells(children, border + left - bounds.x + leftBorder,\n\t\t\t\t\t\t\t\tborder + top - bounds.y + topBorder);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the bounding box for the given array of <mxCells>. The bounding box for\n * each cell and its descendants is computed using <mxGraphView.getBoundingBox>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounding box should be returned.\n */\nmxGraph.prototype.getBoundingBox = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.isVertex(cells[i]) || this.model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar bbox = this.view.getBoundingBox(this.view.getState(cells[i]), true);\n\t\t\t\n\t\t\t\tif (bbox != null)\n\t\t\t\t{\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Group: Cell cloning, insertion and removal\n */\n\n/**\n * Function: cloneCell\n * \n * Returns the clone for the given cell. Uses <cloneCells>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be cloned.\n * allowInvalidEdges - Optional boolean that specifies if invalid edges\n * should be cloned. Default is true.\n * mapping - Optional mapping for existing clones.\n * keepPosition - Optional boolean indicating if the position of the cells should\n * be updated to reflect the lost parent cell. Default is false.\n */\nmxGraph.prototype.cloneCell = function(cell, allowInvalidEdges, mapping, keepPosition)\n{\n\treturn this.cloneCells([cell], allowInvalidEdges, mapping, keepPosition)[0];\n};\n\n/**\n * Function: cloneCells\n * \n * Returns the clones for the given cells. The clones are created recursively\n * using <mxGraphModel.cloneCells>. If the terminal of an edge is not in the\n * given array, then the respective end is assigned a terminal point and the\n * terminal is removed.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be cloned.\n * allowInvalidEdges - Optional boolean that specifies if invalid edges\n * should be cloned. Default is true.\n * mapping - Optional mapping for existing clones.\n * keepPosition - Optional boolean indicating if the position of the cells should\n * be updated to reflect the lost parent cell. Default is false.\n */\nmxGraph.prototype.cloneCells = function(cells, allowInvalidEdges, mapping, keepPosition)\n{\n\tallowInvalidEdges = (allowInvalidEdges != null) ? allowInvalidEdges : true;\n\tvar clones = null;\n\t\n\tif (cells != null)\n\t{\n\t\t// Creates a dictionary for fast lookups\n\t\tvar dict = new mxDictionary();\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t\ttmp.push(cells[i]);\n\t\t}\n\t\t\n\t\tif (tmp.length > 0)\n\t\t{\n\t\t\tvar scale = this.view.scale;\n\t\t\tvar trans = this.view.translate;\n\t\t\tclones = this.model.cloneCells(cells, true, mapping);\n\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!allowInvalidEdges && this.model.isEdge(clones[i]) &&\n\t\t\t\t\tthis.getEdgeValidationError(clones[i],\n\t\t\t\t\t\tthis.model.getTerminal(clones[i], true),\n\t\t\t\t\t\tthis.model.getTerminal(clones[i], false)) != null)\n\t\t\t\t{\n\t\t\t\t\tclones[i] = null;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar g = this.model.getGeometry(clones[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (g != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\tvar pstate = this.view.getState(this.model.getParent(cells[i]));\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null && pstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar dx = (keepPosition) ? 0 : pstate.origin.x;\n\t\t\t\t\t\t\tvar dy = (keepPosition) ? 0 : pstate.origin.y;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.model.isEdge(clones[i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Checks if the source is cloned or sets the terminal point\n\t\t\t\t\t\t\t\tvar src = this.model.getTerminal(cells[i], true);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\twhile (src != null && !dict.get(src))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsrc = this.model.getParent(src);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (src == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tg.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[0].x / scale - trans.x,\n\t\t\t\t\t\t\t\t\t\t\tpts[0].y / scale - trans.y), true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Checks if the target is cloned or sets the terminal point\n\t\t\t\t\t\t\t\tvar trg = this.model.getTerminal(cells[i], false);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\twhile (trg != null && !dict.get(trg))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttrg = this.model.getParent(trg);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (trg == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar n = pts.length - 1;\n\t\t\t\t\t\t\t\t\tg.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[n].x / scale - trans.x,\n\t\t\t\t\t\t\t\t\t\t\tpts[n].y / scale - trans.y), false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Translates the control points\n\t\t\t\t\t\t\t\tvar points = g.points;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (points != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfor (var j = 0; j < points.length; j++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpoints[j].x += dx;\n\t\t\t\t\t\t\t\t\t\tpoints[j].y += dy;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tg.translate(dx, dy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tclones = [];\n\t\t}\n\t}\n\t\n\treturn clones;\n};\n\n/**\n * Function: insertVertex\n * \n * Adds a new vertex into the given parent <mxCell> using value as the user\n * object and the given coordinates as the <mxGeometry> of the new vertex.\n * The id and style are used for the respective properties of the new\n * <mxCell>, which is returned.\n *\n * When adding new vertices from a mouse event, one should take into\n * account the offset of the graph container and the scale and translation\n * of the view in order to find the correct unscaled, untranslated\n * coordinates using <mxGraph.getPointForEvent> as follows:\n * \n * (code)\n * var pt = graph.getPointForEvent(evt);\n * var parent = graph.getDefaultParent();\n * graph.insertVertex(parent, null,\n * \t\t\t'Hello, World!', x, y, 220, 30);\n * (end)\n * \n * For adding image cells, the style parameter can be assigned as\n * \n * (code)\n * stylename;image=imageUrl\n * (end)\n * \n * See <mxGraph> for more information on using images.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent of the new vertex.\n * id - Optional string that defines the Id of the new vertex.\n * value - Object to be used as the user object.\n * x - Integer that defines the x coordinate of the vertex.\n * y - Integer that defines the y coordinate of the vertex.\n * width - Integer that defines the width of the vertex.\n * height - Integer that defines the height of the vertex.\n * style - Optional string that defines the cell style.\n * relative - Optional boolean that specifies if the geometry is relative.\n * Default is false.\n */\nmxGraph.prototype.insertVertex = function(parent, id, value,\n\tx, y, width, height, style, relative)\n{\n\tvar vertex = this.createVertex(parent, id, value, x, y, width, height, style, relative);\n\n\treturn this.addCell(vertex, parent);\n};\n\n/**\n * Function: createVertex\n * \n * Hook method that creates the new vertex for <insertVertex>.\n */\nmxGraph.prototype.createVertex = function(parent, id, value,\n\t\tx, y, width, height, style, relative)\n{\n\t// Creates the geometry for the vertex\n\tvar geometry = new mxGeometry(x, y, width, height);\n\tgeometry.relative = (relative != null) ? relative : false;\n\t\n\t// Creates the vertex\n\tvar vertex = new mxCell(value, geometry, style);\n\tvertex.setId(id);\n\tvertex.setVertex(true);\n\tvertex.setConnectable(true);\n\t\n\treturn vertex;\n};\n\t\n/**\n * Function: insertEdge\n * \n * Adds a new edge into the given parent <mxCell> using value as the user\n * object and the given source and target as the terminals of the new edge.\n * The id and style are used for the respective properties of the new\n * <mxCell>, which is returned.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent of the new edge.\n * id - Optional string that defines the Id of the new edge.\n * value - JavaScript object to be used as the user object.\n * source - <mxCell> that defines the source of the edge.\n * target - <mxCell> that defines the target of the edge.\n * style - Optional string that defines the cell style.\n */\nmxGraph.prototype.insertEdge = function(parent, id, value, source, target, style)\n{\n\tvar edge = this.createEdge(parent, id, value, source, target, style);\n\t\n\treturn this.addEdge(edge, parent, source, target);\n};\n\n/**\n * Function: createEdge\n * \n * Hook method that creates the new edge for <insertEdge>. This\n * implementation does not set the source and target of the edge, these\n * are set when the edge is added to the model.\n * \n */\nmxGraph.prototype.createEdge = function(parent, id, value, source, target, style)\n{\n\t// Creates the edge\n\tvar edge = new mxCell(value, new mxGeometry(), style);\n\tedge.setId(id);\n\tedge.setEdge(true);\n\tedge.geometry.relative = true;\n\t\n\treturn edge;\n};\n\n/**\n * Function: addEdge\n * \n * Adds the edge to the parent and connects it to the given source and\n * target terminals. This is a shortcut method. Returns the edge that was\n * added.\n * \n * Parameters:\n * \n * edge - <mxCell> to be inserted into the given parent.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * source - Optional <mxCell> that represents the source terminal.\n * target - Optional <mxCell> that represents the target terminal.\n * index - Optional index to insert the cells at. Default is to append.\n */\nmxGraph.prototype.addEdge = function(edge, parent, source, target, index)\n{\n\treturn this.addCell(edge, parent, index, source, target);\n};\n\n/**\n * Function: addCell\n * \n * Adds the cell to the parent and connects it to the given source and\n * target terminals. This is a shortcut method. Returns the cell that was\n * added.\n * \n * Parameters:\n * \n * cell - <mxCell> to be inserted into the given parent.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * index - Optional index to insert the cells at. Default is to append.\n * source - Optional <mxCell> that represents the source terminal.\n * target - Optional <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.addCell = function(cell, parent, index, source, target)\n{\n\treturn this.addCells([cell], parent, index, source, target)[0];\n};\n\n/**\n * Function: addCells\n * \n * Adds the cells to the parent at the given index, connecting each cell to\n * the optional source and target terminal. The change is carried out using\n * <cellsAdded>. This method fires <mxEvent.ADD_CELLS> while the\n * transaction is in progress. Returns the cells that were added.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be inserted.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * index - Optional index to insert the cells at. Default is to append.\n * source - Optional source <mxCell> for all inserted cells.\n * target - Optional target <mxCell> for all inserted cells.\n */\nmxGraph.prototype.addCells = function(cells, parent, index, source, target)\n{\n\tif (parent == null)\n\t{\n\t\tparent = this.getDefaultParent();\n\t}\n\t\n\tif (index == null)\n\t{\n\t\tindex = this.model.getChildCount(parent);\n\t}\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsAdded(cells, parent, index, source, target, false, true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD_CELLS, 'cells', cells,\n\t\t\t\t'parent', parent, 'index', index, 'source', source, 'target', target));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsAdded\n * \n * Adds the specified cells to the given parent. This method fires\n * <mxEvent.CELLS_ADDED> while the transaction is in progress.\n */\nmxGraph.prototype.cellsAdded = function(cells, parent, index, source, target, absolute, constrain, extend)\n{\n\tif (cells != null && parent != null && index != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar parentState = (absolute) ? this.view.getState(parent) : null;\n\t\t\tvar o1 = (parentState != null) ? parentState.origin : null;\n\t\t\tvar zero = new mxPoint(0, 0);\n\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (cells[i] == null)\n\t\t\t\t{\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar previous = this.model.getParent(cells[i]);\n\t\n\t\t\t\t\t// Keeps the cell at its absolute location\n\t\t\t\t\tif (o1 != null && cells[i] != parent && parent != previous)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar oldState = this.view.getState(previous);\n\t\t\t\t\t\tvar o2 = (oldState != null) ? oldState.origin : zero;\n\t\t\t\t\t\tvar geo = this.model.getGeometry(cells[i]);\n\t\n\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar dx = o2.x - o1.x;\n\t\t\t\t\t\t\tvar dy = o2.y - o1.y;\n\t\n\t\t\t\t\t\t\t// FIXME: Cells should always be inserted first before any other edit\n\t\t\t\t\t\t\t// to avoid forward references in sessions.\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tgeo.translate(dx, dy);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!geo.relative && this.model.isVertex(cells[i]) &&\n\t\t\t\t\t\t\t\t!this.isAllowNegativeCoordinates())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x = Math.max(0, geo.x);\n\t\t\t\t\t\t\t\tgeo.y = Math.max(0, geo.y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Decrements all following indices\n\t\t\t\t\t// if cell is already in parent\n\t\t\t\t\tif (parent == previous && index + i > this.model.getChildCount(parent))\n\t\t\t\t\t{\n\t\t\t\t\t\tindex--;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model.add(parent, cells[i], index + i);\n\t\t\t\t\t\n\t\t\t\t\tif (this.autoSizeCellsOnAdd)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.autoSizeCell(cells[i], true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Extends the parent or constrains the child\n\t\t\t\t\tif ((extend == null || extend) &&\n\t\t\t\t\t\tthis.isExtendParentsOnAdd(cells[i]) && this.isExtendParent(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Additionally constrains the child after extending the parent\n\t\t\t\t\tif (constrain == null || constrain)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Sets the source terminal\n\t\t\t\t\tif (source != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.cellConnected(cells[i], source, true);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Sets the target terminal\n\t\t\t\t\tif (target != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.cellConnected(cells[i], target, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_ADDED, 'cells', cells,\n\t\t\t\t'parent', parent, 'index', index, 'source', source, 'target', target,\n\t\t\t\t'absolute', absolute));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: autoSizeCell\n * \n * Resizes the specified cell to just fit around the its label and/or children\n * \n * Parameters:\n * \n * cell - <mxCells> to be resized.\n * recurse - Optional boolean which specifies if all descendants should be\n * autosized. Default is true.\n */\nmxGraph.prototype.autoSizeCell = function(cell, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\t\n\tif (recurse)\n\t{\n\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.autoSizeCell(this.model.getChildAt(cell, i));\n\t\t}\n\t}\n\n\tif (this.getModel().isVertex(cell) && this.isAutoSizeCell(cell))\n\t{\n\t\tthis.updateCellSize(cell);\n\t}\n};\n\n/**\n * Function: removeCells\n * \n * Removes the given cells from the graph including all connected edges if\n * includeEdges is true. The change is carried out using <cellsRemoved>.\n * This method fires <mxEvent.REMOVE_CELLS> while the transaction is in\n * progress. The removed cells are returned as an array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to remove. If null is specified then the\n * selection cells which are deletable are used.\n * includeEdges - Optional boolean which specifies if all connected edges\n * should be removed as well. Default is true.\n */\nmxGraph.prototype.removeCells = function(cells, includeEdges)\n{\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getDeletableCells(this.getSelectionCells());\n\t}\n\n\t// Adds all edges to the cells\n\tif (includeEdges)\n\t{\n\t\t// FIXME: Remove duplicate cells in result or do not add if\n\t\t// in cells or descendant of cells\n\t\tcells = this.getDeletableCells(this.addAllEdges(cells));\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsRemoved(cells);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_CELLS, \n\t\t\t\t'cells', cells, 'includeEdges', includeEdges));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: cellsRemoved\n * \n * Removes the given cells from the model. This method fires\n * <mxEvent.CELLS_REMOVED> while the transaction is in progress.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to remove.\n */\nmxGraph.prototype.cellsRemoved = function(cells)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar scale = this.view.scale;\n\t\tvar tr = this.view.translate;\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Creates hashtable for faster lookup\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\t// Disconnects edges which are not in cells\n\t\t\t\tvar edges = this.getAllEdges([cells[i]]);\n\t\t\t\t\n\t\t\t\tvar disconnectTerminal = mxUtils.bind(this, function(edge, source)\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.model.getGeometry(edge);\n\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(edge);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Checks which side of the edge is being disconnected\n\t\t\t\t\t\t\tvar tmp = state.getVisibleTerminal(source);\n\t\t\t\t\t\t\tvar connected = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (cells[i] == tmp)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnected = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttmp = this.model.getParent(tmp);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (connected)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar dx = tr.x;\n\t\t\t\t\t\t\t\tvar dy = tr.y;\n\t\t\t\t\t\t\t\tvar parentState = this.view.getState(this.model.getParent(edge));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (parentState != null && this.model.isVertex(parentState.cell))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdx = parentState.x / scale;\n\t\t\t\t\t\t\t\t\tdy = parentState.y / scale;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\t\t\t\t\t\t\t\tvar n = (source) ? 0 : pts.length - 1;\n\t\t\t\t\t\t\t\tgeo.setTerminalPoint(new mxPoint(pts[n].x / scale - dx, pts[n].y / scale - dy), source);\n\t\t\t\t\t\t\t\tthis.model.setTerminal(edges[j], null, source);\n\t\t\t\t\t\t\t\tthis.model.setGeometry(edges[j], geo);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (!dict.get(edges[j]))\n\t\t\t\t\t{\n\t\t\t\t\t\tdisconnectTerminal(edges[j], true);\n\t\t\t\t\t\tdisconnectTerminal(edges[j], false);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.model.remove(cells[i]);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_REMOVED, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: splitEdge\n * \n * Splits the given edge by adding the newEdge between the previous source\n * and the given cell and reconnecting the source of the given edge to the\n * given cell. This method fires <mxEvent.SPLIT_EDGE> while the transaction\n * is in progress. Returns the new edge that was inserted.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be splitted.\n * cells - <mxCells> that represents the cells to insert into the edge.\n * newEdge - <mxCell> that represents the edge to be inserted.\n * dx - Optional integer that specifies the vector to move the cells.\n * dy - Optional integer that specifies the vector to move the cells.\n */\nmxGraph.prototype.splitEdge = function(edge, cells, newEdge, dx, dy)\n{\n\tdx = dx || 0;\n\tdy = dy || 0;\n\n\tvar parent = this.model.getParent(edge);\n\tvar source = this.model.getTerminal(edge, true);\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tif (newEdge == null)\n\t\t{\n\t\t\tnewEdge = this.cloneCell(edge);\n\t\t\t\n\t\t\t// Removes waypoints before/after new cell\n\t\t\tvar state = this.view.getState(edge);\n\t\t\tvar geo = this.getCellGeometry(newEdge);\n\t\t\t\n\t\t\tif (geo != null && geo.points != null && state != null)\n\t\t\t{\n\t\t\t\tvar t = this.view.translate;\n\t\t\t\tvar s = this.view.scale;\n\t\t\t\tvar idx = mxUtils.findNearestSegment(state, (dx + t.x) * s, (dy + t.y) * s);\n\t\t\t\tgeo.points = geo.points.slice(0, idx);\n\t\t\t\t\t\t\t\t\n\t\t\t\tgeo = this.getCellGeometry(edge);\n\t\t\t\t\n\t\t\t\tif (geo != null && geo.points != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\tgeo.points = geo.points.slice(idx);\n\t\t\t\t\tthis.model.setGeometry(edge, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.cellsMoved(cells, dx, dy, false, false);\n\t\tthis.cellsAdded(cells, parent, this.model.getChildCount(parent), null, null,\n\t\t\t\ttrue);\n\t\tthis.cellsAdded([newEdge], parent, this.model.getChildCount(parent),\n\t\t\t\tsource, cells[0], false);\n\t\tthis.cellConnected(edge, cells[0], true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SPLIT_EDGE, 'edge', edge,\n\t\t\t\t'cells', cells, 'newEdge', newEdge, 'dx', dx, 'dy', dy));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn newEdge;\n};\n\n/**\n * Group: Cell visibility\n */\n\n/**\n * Function: toggleCells\n * \n * Sets the visible state of the specified cells and all connected edges\n * if includeEdges is true. The change is carried out using <cellsToggled>.\n * This method fires <mxEvent.TOGGLE_CELLS> while the transaction is in\n * progress. Returns the cells whose visible state was changed.\n * \n * Parameters:\n * \n * show - Boolean that specifies the visible state to be assigned.\n * cells - Array of <mxCells> whose visible state should be changed. If\n * null is specified then the selection cells are used.\n * includeEdges - Optional boolean indicating if the visible state of all\n * connected edges should be changed as well. Default is true.\n */\nmxGraph.prototype.toggleCells = function(show, cells, includeEdges)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\n\t// Adds all connected edges recursively\n\tif (includeEdges)\n\t{\n\t\tcells = this.addAllEdges(cells);\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsToggled(cells, show);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.TOGGLE_CELLS,\n\t\t\t'show', show, 'cells', cells, 'includeEdges', includeEdges));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsToggled\n * \n * Sets the visible state of the specified cells.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose visible state should be changed.\n * show - Boolean that specifies the visible state to be assigned.\n */\nmxGraph.prototype.cellsToggled = function(cells, show)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.model.setVisible(cells[i], show);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Folding\n */\n\n/**\n * Function: foldCells\n * \n * Sets the collapsed state of the specified cells and all descendants\n * if recurse is true. The change is carried out using <cellsFolded>.\n * This method fires <mxEvent.FOLD_CELLS> while the transaction is in\n * progress. Returns the cells whose collapsed state was changed.\n * \n * Parameters:\n * \n * collapsed - Boolean indicating the collapsed state to be assigned.\n * recurse - Optional boolean indicating if the collapsed state of all\n * descendants should be set. Default is false.\n * cells - Array of <mxCells> whose collapsed state should be set. If\n * null is specified then the foldable selection cells are used.\n * checkFoldable - Optional boolean indicating of isCellFoldable should be\n * checked. Default is false.\n * evt - Optional native event that triggered the invocation.\n */\nmxGraph.prototype.foldCells = function(collapse, recurse, cells, checkFoldable, evt)\n{\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getFoldableCells(this.getSelectionCells(), collapse);\n\t}\n\n\tthis.stopEditing(false);\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsFolded(cells, collapse, recurse, checkFoldable);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.FOLD_CELLS,\n\t\t\t'collapse', collapse, 'recurse', recurse, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsFolded\n * \n * Sets the collapsed state of the specified cells. This method fires\n * <mxEvent.CELLS_FOLDED> while the transaction is in progress. Returns the\n * cells whose collapsed state was changed.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose collapsed state should be set.\n * collapsed - Boolean indicating the collapsed state to be assigned.\n * recurse - Boolean indicating if the collapsed state of all descendants\n * should be set.\n * checkFoldable - Optional boolean indicating of isCellFoldable should be\n * checked. Default is false.\n */\nmxGraph.prototype.cellsFolded = function(cells, collapse, recurse, checkFoldable)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif ((!checkFoldable || this.isCellFoldable(cells[i], collapse)) &&\n\t\t\t\t\tcollapse != this.isCellCollapsed(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.model.setCollapsed(cells[i], collapse);\n\t\t\t\t\tthis.swapBounds(cells[i], collapse);\n\n\t\t\t\t\tif (this.isExtendParent(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (recurse)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\t\t\t\tthis.cellsFolded(children, collapse, recurse);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_FOLDED,\n\t\t\t\t'cells', cells, 'collapse', collapse, 'recurse', recurse));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: swapBounds\n * \n * Swaps the alternate and the actual bounds in the geometry of the given\n * cell invoking <updateAlternateBounds> before carrying out the swap.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the bounds should be swapped.\n * willCollapse - Boolean indicating if the cell is going to be collapsed.\n */\nmxGraph.prototype.swapBounds = function(cell, willCollapse)\n{\n\tif (cell != null)\n\t{\n\t\tvar geo = this.model.getGeometry(cell);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\t\n\t\t\tthis.updateAlternateBounds(cell, geo, willCollapse);\n\t\t\tgeo.swap();\n\t\t\t\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateAlternateBounds\n * \n * Updates or sets the alternate bounds in the given geometry for the given\n * cell depending on whether the cell is going to be collapsed. If no\n * alternate bounds are defined in the geometry and\n * <collapseToPreferredSize> is true, then the preferred size is used for\n * the alternate bounds. The top, left corner is always kept at the same\n * location.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the geometry is being udpated.\n * g - <mxGeometry> for which the alternate bounds should be updated.\n * willCollapse - Boolean indicating if the cell is going to be collapsed.\n */\nmxGraph.prototype.updateAlternateBounds = function(cell, geo, willCollapse)\n{\n\tif (cell != null && geo != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\t\tif (geo.alternateBounds == null)\n\t\t{\n\t\t\tvar bounds = geo;\n\t\t\t\n\t\t\tif (this.collapseToPreferredSize)\n\t\t\t{\n\t\t\t\tvar tmp = this.getPreferredSizeForCell(cell);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tbounds = tmp;\n\n\t\t\t\t\tvar startSize = mxUtils.getValue(style, mxConstants.STYLE_STARTSIZE);\n\n\t\t\t\t\tif (startSize > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbounds.height = Math.max(bounds.height, startSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tgeo.alternateBounds = new mxRectangle(0, 0, bounds.width, bounds.height);\n\t\t}\n\t\t\n\t\tif (geo.alternateBounds != null)\n\t\t{\n\t\t\tgeo.alternateBounds.x = geo.x;\n\t\t\tgeo.alternateBounds.y = geo.y;\n\t\t\t\n\t\t\tvar alpha = mxUtils.toRadians(style[mxConstants.STYLE_ROTATION] || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar dx = geo.alternateBounds.getCenterX() - geo.getCenterX();\n\t\t\t\tvar dy = geo.alternateBounds.getCenterY() - geo.getCenterY();\n\t\n\t\t\t\tvar cos = Math.cos(alpha);\n\t\t\t\tvar sin = Math.sin(alpha);\n\t\n\t\t\t\tvar dx2 = cos * dx - sin * dy;\n\t\t\t\tvar dy2 = sin * dx + cos * dy;\n\t\t\t\t\n\t\t\t\tgeo.alternateBounds.x += dx2 - dx;\n\t\t\t\tgeo.alternateBounds.y += dy2 - dy;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: addAllEdges\n * \n * Returns an array with the given cells and all edges that are connected\n * to a cell or one of its descendants.\n */\nmxGraph.prototype.addAllEdges = function(cells)\n{\n\tvar allCells = cells.slice();\n\t\n\treturn mxUtils.removeDuplicates(allCells.concat(this.getAllEdges(cells)));\n};\n\n/**\n * Function: getAllEdges\n * \n * Returns all edges connected to the given cells or its descendants.\n */\nmxGraph.prototype.getAllEdges = function(cells)\n{\n\tvar edges = [];\n\t\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar edgeCount = this.model.getEdgeCount(cells[i]);\n\t\t\t\n\t\t\tfor (var j = 0; j < edgeCount; j++)\n\t\t\t{\n\t\t\t\tedges.push(this.model.getEdgeAt(cells[i], j));\n\t\t\t}\n\n\t\t\t// Recurses\n\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\tedges = edges.concat(this.getAllEdges(children));\n\t\t}\n\t}\n\t\n\treturn edges;\n};\n\n/**\n * Group: Cell sizing\n */\n\n/**\n * Function: updateCellSize\n * \n * Updates the size of the given cell in the model using <cellSizeUpdated>.\n * This method fires <mxEvent.UPDATE_CELL_SIZE> while the transaction is in\n * progress. Returns the cell whose size was updated.\n * \n * Parameters:\n * \n * cell - <mxCell> whose size should be updated.\n */\nmxGraph.prototype.updateCellSize = function(cell, ignoreChildren)\n{\n\tignoreChildren = (ignoreChildren != null) ? ignoreChildren : false;\n\t\n\tthis.model.beginUpdate();\t\t\t\t\n\ttry\n\t{\n\t\tthis.cellSizeUpdated(cell, ignoreChildren);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UPDATE_CELL_SIZE,\n\t\t\t\t'cell', cell, 'ignoreChildren', ignoreChildren));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellSizeUpdated\n * \n * Updates the size of the given cell in the model using\n * <getPreferredSizeForCell> to get the new size.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the size should be changed.\n */\nmxGraph.prototype.cellSizeUpdated = function(cell, ignoreChildren)\n{\n\tif (cell != null)\n\t{\n\t\tthis.model.beginUpdate();\t\t\t\t\n\t\ttry\n\t\t{\n\t\t\tvar size = this.getPreferredSizeForCell(cell);\n\t\t\tvar geo = this.model.getGeometry(cell);\n\t\t\t\n\t\t\tif (size != null && geo != null)\n\t\t\t{\n\t\t\t\tvar collapsed = this.isCellCollapsed(cell);\n\t\t\t\tgeo = geo.clone();\n\n\t\t\t\tif (this.isSwimlane(cell))\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(cell);\n\t\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\t\t\tvar cellStyle = this.model.getStyle(cell);\n\n\t\t\t\t\tif (cellStyle == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = mxUtils.setStyle(cellStyle,\n\t\t\t\t\t\t\t\tmxConstants.STYLE_STARTSIZE, size.height + 8);\n\n\t\t\t\t\t\tif (collapsed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.height = size.height + 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeo.width = size.width;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = mxUtils.setStyle(cellStyle,\n\t\t\t\t\t\t\t\tmxConstants.STYLE_STARTSIZE, size.width + 8);\n\n\t\t\t\t\t\tif (collapsed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.width = size.width + 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeo.height = size.height;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model.setStyle(cell, cellStyle);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tgeo.width = size.width;\n\t\t\t\t\tgeo.height = size.height;\n\t\t\t\t}\n\n\t\t\t\tif (!ignoreChildren && !collapsed)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = this.view.getBounds(this.model.getChildren(cell));\n\n\t\t\t\t\tif (bounds != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tr = this.view.translate;\n\t\t\t\t\t\tvar scale = this.view.scale;\n\n\t\t\t\t\t\tvar width = (bounds.x + bounds.width) / scale - geo.x - tr.x;\n\t\t\t\t\t\tvar height = (bounds.y + bounds.height) / scale - geo.y - tr.y;\n\n\t\t\t\t\t\tgeo.width = Math.max(geo.width, width);\n\t\t\t\t\t\tgeo.height = Math.max(geo.height, height);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.cellsResized([cell], [geo], false);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: getPreferredSizeForCell\n * \n * Returns the preferred width and height of the given <mxCell> as an\n * <mxRectangle>. To implement a minimum width, add a new style eg.\n * minWidth in the vertex and override this method as follows.\n * \n * (code)\n * var graphGetPreferredSizeForCell = graph.getPreferredSizeForCell;\n * graph.getPreferredSizeForCell = function(cell)\n * {\n *   var result = graphGetPreferredSizeForCell.apply(this, arguments);\n *   var style = this.getCellStyle(cell);\n *   \n *   if (style['minWidth'] > 0)\n *   {\n *     result.width = Math.max(style['minWidth'], result.width);\n *   }\n * \n *   return result;\n * };\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> for which the preferred size should be returned.\n */\nmxGraph.prototype.getPreferredSizeForCell = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tvar state = this.view.getState(cell) || this.view.createState(cell);\n\t\tvar style = state.style;\n\n\t\tif (!this.model.isEdge(cell))\n\t\t{\n\t\t\tvar fontSize = style[mxConstants.STYLE_FONTSIZE] || mxConstants.DEFAULT_FONTSIZE;\n\t\t\tvar dx = 0;\n\t\t\tvar dy = 0;\n\t\t\t\n\t\t\t// Adds dimension of image if shape is a label\n\t\t\tif (this.getImage(state) != null || style[mxConstants.STYLE_IMAGE] != null)\n\t\t\t{\n\t\t\t\tif (style[mxConstants.STYLE_SHAPE] == mxConstants.SHAPE_LABEL)\n\t\t\t\t{\n\t\t\t\t\tif (style[mxConstants.STYLE_VERTICAL_ALIGN] == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx += parseFloat(style[mxConstants.STYLE_IMAGE_WIDTH]) || mxLabel.prototype.imageSize;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (style[mxConstants.STYLE_ALIGN] != mxConstants.ALIGN_CENTER)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy += parseFloat(style[mxConstants.STYLE_IMAGE_HEIGHT]) || mxLabel.prototype.imageSize;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Adds spacings\n\t\t\tdx += 2 * (style[mxConstants.STYLE_SPACING] || 0);\n\t\t\tdx += style[mxConstants.STYLE_SPACING_LEFT] || 0;\n\t\t\tdx += style[mxConstants.STYLE_SPACING_RIGHT] || 0;\n\n\t\t\tdy += 2 * (style[mxConstants.STYLE_SPACING] || 0);\n\t\t\tdy += style[mxConstants.STYLE_SPACING_TOP] || 0;\n\t\t\tdy += style[mxConstants.STYLE_SPACING_BOTTOM] || 0;\n\t\t\t\n\t\t\t// Add spacing for collapse/expand icon\n\t\t\t// LATER: Check alignment and use constants\n\t\t\t// for image spacing\n\t\t\tvar image = this.getFoldingImage(state);\n\t\t\t\n\t\t\tif (image != null)\n\t\t\t{\n\t\t\t\tdx += image.width + 8;\n\t\t\t}\n\n\t\t\t// Adds space for label\n\t\t\tvar value = this.cellRenderer.getLabelValue(state);\n\n\t\t\tif (value != null && value.length > 0)\n\t\t\t{\n\t\t\t\tif (!this.isHtmlLabel(state.cell))\n\t\t\t\t{\n\t\t\t\t\tvalue = mxUtils.htmlEntities(value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue = value.replace(/\\n/g, '<br>');\n\t\t\t\t\n\t\t\t\tvar size = mxUtils.getSizeForString(value, fontSize, style[mxConstants.STYLE_FONTFAMILY]);\n\t\t\t\tvar width = size.width + dx;\n\t\t\t\tvar height = size.height + dy;\n\t\t\t\t\n\t\t\t\tif (!mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t{\n\t\t\t\t\tvar tmp = height;\n\t\t\t\t\t\n\t\t\t\t\theight = width;\n\t\t\t\t\twidth = tmp;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif (this.gridEnabled)\n\t\t\t\t{\n\t\t\t\t\twidth = this.snap(width + this.gridSize / 2);\n\t\t\t\t\theight = this.snap(height + this.gridSize / 2);\n\t\t\t\t}\n\n\t\t\t\tresult = new mxRectangle(0, 0, width, height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar gs2 = 4 * this.gridSize;\n\t\t\t\tresult = new mxRectangle(0, 0, gs2, gs2);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: resizeCell\n * \n * Sets the bounds of the given cell using <resizeCells>. Returns the\n * cell which was passed to the function.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be changed.\n * bounds - <mxRectangle> that represents the new bounds.\n */\nmxGraph.prototype.resizeCell = function(cell, bounds, recurse)\n{\n\treturn this.resizeCells([cell], [bounds], recurse)[0];\n};\n\n/**\n * Function: resizeCells\n * \n * Sets the bounds of the given cells and fires a <mxEvent.RESIZE_CELLS>\n * event while the transaction is in progress. Returns the cells which\n * have been passed to the function.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be changed.\n * bounds - Array of <mxRectangles> that represent the new bounds.\n */\nmxGraph.prototype.resizeCells = function(cells, bounds, recurse)\n{\n\trecurse = (recurse != null) ? recurse : this.isRecursiveResize();\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsResized(cells, bounds, recurse);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_CELLS,\n\t\t\t\t'cells', cells, 'bounds', bounds));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsResized\n * \n * Sets the bounds of the given cells and fires a <mxEvent.CELLS_RESIZED>\n * event. If <extendParents> is true, then the parent is extended if a\n * child size is changed so that it overlaps with the parent.\n * \n * The following example shows how to control group resizes to make sure\n * that all child cells stay within the group.\n * \n * (code)\n * graph.addListener(mxEvent.CELLS_RESIZED, function(sender, evt)\n * {\n *   var cells = evt.getProperty('cells');\n *   \n *   if (cells != null)\n *   {\n *     for (var i = 0; i < cells.length; i++)\n *     {\n *       if (graph.getModel().getChildCount(cells[i]) > 0)\n *       {\n *         var geo = graph.getCellGeometry(cells[i]);\n *         \n *         if (geo != null)\n *         {\n *           var children = graph.getChildCells(cells[i], true, true);\n *           var bounds = graph.getBoundingBoxFromGeometry(children, true);\n *           \n *           geo = geo.clone();\n *           geo.width = Math.max(geo.width, bounds.width);\n *           geo.height = Math.max(geo.height, bounds.height);\n *           \n *           graph.getModel().setGeometry(cells[i], geo);\n *         }\n *       }\n *     }\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be changed.\n * bounds - Array of <mxRectangles> that represent the new bounds.\n * recurse - Optional boolean that specifies if the children should be resized.\n */\nmxGraph.prototype.cellsResized = function(cells, bounds, recurse)\n{\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tif (cells != null && bounds != null && cells.length == bounds.length)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.cellResized(cells[i], bounds[i], false, recurse);\n\n\t\t\t\tif (this.isExtendParent(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t}\n\n\t\t\tif (this.resetEdgesOnResize)\n\t\t\t{\n\t\t\t\tthis.resetEdges(cells);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_RESIZED,\n\t\t\t\t\t'cells', cells, 'bounds', bounds));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: cellResized\n * \n * Resizes the parents recursively so that they contain the complete area\n * of the resized child cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be changed.\n * bounds - <mxRectangles> that represent the new bounds.\n * ignoreRelative - Boolean that indicates if relative cells should be ignored.\n * recurse - Optional boolean that specifies if the children should be resized.\n */\nmxGraph.prototype.cellResized = function(cell, bounds, ignoreRelative, recurse)\n{\n\tvar geo = this.model.getGeometry(cell);\n\n\tif (geo != null && (geo.x != bounds.x || geo.y != bounds.y ||\n\t\tgeo.width != bounds.width || geo.height != bounds.height))\n\t{\n\t\tgeo = geo.clone();\n\n\t\tif (!ignoreRelative && geo.relative)\n\t\t{\n\t\t\tvar offset = geo.offset;\n\n\t\t\tif (offset != null)\n\t\t\t{\n\t\t\t\toffset.x += bounds.x - geo.x;\n\t\t\t\toffset.y += bounds.y - geo.y;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeo.x = bounds.x;\n\t\t\tgeo.y = bounds.y;\n\t\t}\n\n\t\tgeo.width = bounds.width;\n\t\tgeo.height = bounds.height;\n\n\t\tif (!geo.relative && this.model.isVertex(cell) && !this.isAllowNegativeCoordinates())\n\t\t{\n\t\t\tgeo.x = Math.max(0, geo.x);\n\t\t\tgeo.y = Math.max(0, geo.y);\n\t\t}\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (recurse)\n\t\t\t{\n\t\t\t\tthis.resizeChildCells(cell, geo);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t\tthis.constrainChildCells(cell);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resizeChildCells\n * \n * Resizes the child cells of the given cell for the given new geometry with\n * respect to the current geometry of the cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n * newGeo - <mxGeometry> that represents the new bounds.\n */\nmxGraph.prototype.resizeChildCells = function(cell, newGeo)\n{\n\tvar geo = this.model.getGeometry(cell);\n\tvar dx = newGeo.width / geo.width;\n\tvar dy = newGeo.height / geo.height;\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.scaleCell(this.model.getChildAt(cell, i), dx, dy, true);\n\t}\n};\n\n/**\n * Function: constrainChildCells\n * \n * Constrains the children of the given cell using <constrainChild>.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.constrainChildCells = function(cell)\n{\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.constrainChild(this.model.getChildAt(cell, i));\n\t}\n};\n\n/**\n * Function: scaleCell\n * \n * Scales the points, position and size of the given cell according to the\n * given vertical and horizontal scaling factors.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be scaled.\n * dx - Horizontal scaling factor.\n * dy - Vertical scaling factor.\n * recurse - Boolean indicating if the child cells should be scaled.\n */\nmxGraph.prototype.scaleCell = function(cell, dx, dy, recurse)\n{\n\tvar geo = this.model.getGeometry(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\n\t\tgeo = geo.clone();\n\t\t\n\t\t// Stores values for restoring based on style\n\t\tvar x = geo.x;\n\t\tvar y = geo.y\n\t\tvar w = geo.width;\n\t\tvar h = geo.height;\n\t\t\n\t\tgeo.scale(dx, dy, style[mxConstants.STYLE_ASPECT] == 'fixed');\n\t\t\n\t\tif (style[mxConstants.STYLE_RESIZE_WIDTH] == '1')\n\t\t{\n\t\t\tgeo.width = w * dx;\n\t\t}\n\t\telse if (style[mxConstants.STYLE_RESIZE_WIDTH] == '0')\n\t\t{\n\t\t\tgeo.width = w;\n\t\t}\n\t\t\n\t\tif (style[mxConstants.STYLE_RESIZE_HEIGHT] == '1')\n\t\t{\n\t\t\tgeo.height = h * dy;\n\t\t}\n\t\telse if (style[mxConstants.STYLE_RESIZE_HEIGHT] == '0')\n\t\t{\n\t\t\tgeo.height = h;\n\t\t}\n\t\t\n\t\tif (!this.isCellMovable(cell))\n\t\t{\n\t\t\tgeo.x = x;\n\t\t\tgeo.y = y;\n\t\t}\n\t\t\n\t\tif (!this.isCellResizable(cell))\n\t\t{\n\t\t\tgeo.width = w;\n\t\t\tgeo.height = h;\n\t\t}\n\n\t\tif (this.model.isVertex(cell))\n\t\t{\n\t\t\tthis.cellResized(cell, geo, true, recurse);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendParent\n * \n * Resizes the parents recursively so that they contain the complete area\n * of the resized child cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.extendParent = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tvar parent = this.model.getParent(cell);\n\t\tvar p = this.getCellGeometry(parent);\n\t\t\n\t\tif (parent != null && p != null && !this.isCellCollapsed(parent))\n\t\t{\n\t\t\tvar geo = this.getCellGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null && !geo.relative &&\n\t\t\t\t(p.width < geo.x + geo.width ||\n\t\t\t\tp.height < geo.y + geo.height))\n\t\t\t{\n\t\t\t\tp = p.clone();\n\t\t\t\t\n\t\t\t\tp.width = Math.max(p.width, geo.x + geo.width);\n\t\t\t\tp.height = Math.max(p.height, geo.y + geo.height);\n\t\t\t\t\n\t\t\t\tthis.cellsResized([parent], [p], false);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Group: Cell moving\n */\n\n/**\n * Function: importCells\n * \n * Clones and inserts the given cells into the graph using the move\n * method and returns the inserted cells. This shortcut is used if\n * cells are inserted via datatransfer.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be imported.\n * dx - Integer that specifies the x-coordinate of the vector. Default is 0.\n * dy - Integer that specifies the y-coordinate of the vector. Default is 0.\n * target - <mxCell> that represents the new parent of the cells.\n * evt - Mouseevent that triggered the invocation.\n * mapping - Optional mapping for existing clones.\n */\nmxGraph.prototype.importCells = function(cells, dx, dy, target, evt, mapping)\n{\t\n\treturn this.moveCells(cells, dx, dy, true, target, evt, mapping);\n};\n\n/**\n * Function: moveCells\n * \n * Moves or clones the specified cells and moves the cells or clones by the\n * given amount, adding them to the optional target cell. The evt is the\n * mouse event as the mouse was released. The change is carried out using\n * <cellsMoved>. This method fires <mxEvent.MOVE_CELLS> while the\n * transaction is in progress. Returns the cells that were moved.\n * \n * Use the following code to move all cells in the graph.\n * \n * (code)\n * graph.moveCells(graph.getChildCells(null, true, true), 10, 10);\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be moved, cloned or added to the target.\n * dx - Integer that specifies the x-coordinate of the vector. Default is 0.\n * dy - Integer that specifies the y-coordinate of the vector. Default is 0.\n * clone - Boolean indicating if the cells should be cloned. Default is false.\n * target - <mxCell> that represents the new parent of the cells.\n * evt - Mouseevent that triggered the invocation.\n * mapping - Optional mapping for existing clones.\n */\nmxGraph.prototype.moveCells = function(cells, dx, dy, clone, target, evt, mapping)\n{\n\tdx = (dx != null) ? dx : 0;\n\tdy = (dy != null) ? dy : 0;\n\tclone = (clone != null) ? clone : false;\n\t\n\tif (cells != null && (dx != 0 || dy != 0 || clone || target != null))\n\t{\n\t\t// Removes descendants with ancestors in cells to avoid multiple moving\n\t\tcells = this.model.getTopmostCells(cells);\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Faster cell lookups to remove relative edge labels with selected\n\t\t\t// terminals to avoid explicit and implicit move at same time\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tvar isSelected = mxUtils.bind(this, function(cell)\n\t\t\t{\n\t\t\t\twhile (cell != null)\n\t\t\t\t{\n\t\t\t\t\tif (dict.get(cell))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcell = this.model.getParent(cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t\n\t\t\t// Removes relative edge labels with selected terminals\n\t\t\tvar checked = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\n\t\t\t\tif ((geo == null || !geo.relative) || !this.model.isEdge(parent) ||\n\t\t\t\t\t(!isSelected(this.model.getTerminal(parent, true)) &&\n\t\t\t\t\t!isSelected(this.model.getTerminal(parent, false))))\n\t\t\t\t{\n\t\t\t\t\tchecked.push(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcells = checked;\n\t\t\t\n\t\t\tif (clone)\n\t\t\t{\n\t\t\t\tcells = this.cloneCells(cells, this.isCloneInvalidEdges(), mapping);\n\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\ttarget = this.getDefaultParent();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// FIXME: Cells should always be inserted first before any other edit\n\t\t\t// to avoid forward references in sessions.\n\t\t\t// Need to disable allowNegativeCoordinates if target not null to\n\t\t\t// allow for temporary negative numbers until cellsAdded is called.\n\t\t\tvar previous = this.isAllowNegativeCoordinates();\n\t\t\t\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tthis.setAllowNegativeCoordinates(true);\n\t\t\t}\n\t\t\t\n\t\t\tthis.cellsMoved(cells, dx, dy, !clone && this.isDisconnectOnMove()\n\t\t\t\t\t&& this.isAllowDanglingEdges(), target == null,\n\t\t\t\t\tthis.isExtendParentsOnMove() && target == null);\n\t\t\t\n\t\t\tthis.setAllowNegativeCoordinates(previous);\n\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tvar index = this.model.getChildCount(target);\n\t\t\t\tthis.cellsAdded(cells, target, index, null, null, true);\n\t\t\t}\n\n\t\t\t// Dispatches a move event\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_CELLS, 'cells', cells,\n\t\t\t\t'dx', dx, 'dy', dy, 'clone', clone, 'target', target, 'event', evt));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsMoved\n * \n * Moves the specified cells by the given vector, disconnecting the cells\n * using disconnectGraph is disconnect is true. This method fires\n * <mxEvent.CELLS_MOVED> while the transaction is in progress.\n */\nmxGraph.prototype.cellsMoved = function(cells, dx, dy, disconnect, constrain, extend)\n{\n\tif (cells != null && (dx != 0 || dy != 0))\n\t{\n\t\textend = (extend != null) ? extend : false;\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (disconnect)\n\t\t\t{\n\t\t\t\tthis.disconnectGraph(cells);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.translateCell(cells[i], dx, dy);\n\t\t\t\t\n\t\t\t\tif (extend && this.isExtendParent(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t}\n\t\t\t\telse if (constrain)\n\t\t\t\t{\n\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.resetEdgesOnMove)\n\t\t\t{\n\t\t\t\tthis.resetEdges(cells);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_MOVED,\n\t\t\t\t'cells', cells, 'dx', dx, 'dy', dy, 'disconnect', disconnect));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: translateCell\n * \n * Translates the geometry of the given cell and stores the new,\n * translated geometry in the model as an atomic change.\n */\nmxGraph.prototype.translateCell = function(cell, dx, dy)\n{\n\tvar geo = this.model.getGeometry(cell);\n\n\tif (geo != null)\n\t{\n\t\tdx = parseFloat(dx);\n\t\tdy = parseFloat(dy);\n\t\tgeo = geo.clone();\n\t\tgeo.translate(dx, dy);\n\n\t\tif (!geo.relative && this.model.isVertex(cell) && !this.isAllowNegativeCoordinates())\n\t\t{\n\t\t\tgeo.x = Math.max(0, parseFloat(geo.x));\n\t\t\tgeo.y = Math.max(0, parseFloat(geo.y));\n\t\t}\n\t\t\n\t\tif (geo.relative && !this.model.isEdge(cell))\n\t\t{\n\t\t\tvar parent = this.model.getParent(cell);\n\t\t\tvar angle = 0;\n\t\t\t\n\t\t\tif (this.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(parent);\n\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(parent);\n\t\t\t\t\n\t\t\t\tangle = mxUtils.getValue(style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t}\n\t\t\t\n\t\t\tif (angle != 0)\n\t\t\t{\n\t\t\t\tvar rad = mxUtils.toRadians(-angle);\n\t\t\t\tvar cos = Math.cos(rad);\n\t\t\t\tvar sin = Math.sin(rad);\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(dx, dy), cos, sin, new mxPoint(0, 0));\n\t\t\t\tdx = pt.x;\n\t\t\t\tdy = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (geo.offset == null)\n\t\t\t{\n\t\t\t\tgeo.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeo.offset.x = parseFloat(geo.offset.x) + dx;\n\t\t\t\tgeo.offset.y = parseFloat(geo.offset.y) + dy;\n\t\t\t}\n\t\t}\n\n\t\tthis.model.setGeometry(cell, geo);\n\t}\n};\n\n/**\n * Function: getCellContainmentArea\n * \n * Returns the <mxRectangle> inside which a cell is to be kept.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the area should be returned.\n */\nmxGraph.prototype.getCellContainmentArea = function(cell)\n{\n\tif (cell != null && !this.model.isEdge(cell))\n\t{\n\t\tvar parent = this.model.getParent(cell);\n\t\t\n\t\tif (parent != null && parent != this.getDefaultParent())\n\t\t{\n\t\t\tvar g = this.model.getGeometry(parent);\n\t\t\t\n\t\t\tif (g != null)\n\t\t\t{\n\t\t\t\tvar x = 0;\n\t\t\t\tvar y = 0;\n\t\t\t\tvar w = g.width;\n\t\t\t\tvar h = g.height;\n\t\t\t\t\n\t\t\t\tif (this.isSwimlane(parent))\n\t\t\t\t{\n\t\t\t\t\tvar size = this.getStartSize(parent);\n\t\t\t\t\t\n\t\t\t\t\tvar state = this.view.getState(parent);\n\t\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(parent);\n\t\t\t\t\tvar dir = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\t\t\t\t\tvar flipH = mxUtils.getValue(style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tvar flipV = mxUtils.getValue(style, mxConstants.STYLE_FLIPV, 0) == 1;\n\t\t\t\t\t\n\t\t\t\t\tif (dir == mxConstants.DIRECTION_SOUTH || dir == mxConstants.DIRECTION_NORTH)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = size.width;\n\t\t\t\t\t\tsize.width = size.height;\n\t\t\t\t\t\tsize.height = tmp;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif ((dir == mxConstants.DIRECTION_EAST && !flipV) || (dir == mxConstants.DIRECTION_NORTH && !flipH) ||\n\t\t\t\t\t\t(dir == mxConstants.DIRECTION_WEST && flipV) || (dir == mxConstants.DIRECTION_SOUTH && flipH))\n\t\t\t\t\t{\n\t\t\t\t\t\tx = size.width;\n\t\t\t\t\t\ty = size.height;\n\t\t\t\t\t}\n\n\t\t\t\t\tw -= size.width;\n\t\t\t\t\th -= size.height;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxRectangle(x, y, w, h);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getMaximumGraphBounds\n * \n * Returns the bounds inside which the diagram should be kept as an\n * <mxRectangle>.\n */\nmxGraph.prototype.getMaximumGraphBounds = function()\n{\n\treturn this.maximumGraphBounds;\n};\n\n/**\n * Function: constrainChild\n * \n * Keeps the given cell inside the bounds returned by\n * <getCellContainmentArea> for its parent, according to the rules defined by\n * <getOverlap> and <isConstrainChild>. This modifies the cell's geometry\n * in-place and does not clone it.\n * \n * Parameters:\n * \n * cells - <mxCell> which should be constrained.\n * sizeFirst - Specifies if the size should be changed first. Default is true.\n */\nmxGraph.prototype.constrainChild = function(cell, sizeFirst)\n{\n\tsizeFirst = (sizeFirst != null) ? sizeFirst : true;\n\t\n\tif (cell != null)\n\t{\n\t\tvar geo = this.getCellGeometry(cell);\n\t\t\n\t\tif (geo != null && (this.isConstrainRelativeChildren() || !geo.relative))\n\t\t{\n\t\t\tvar parent = this.model.getParent(cell);\n\t\t\tvar pgeo = this.getCellGeometry(parent);\n\t\t\tvar max = this.getMaximumGraphBounds();\n\t\t\t\n\t\t\t// Finds parent offset\n\t\t\tif (max != null)\n\t\t\t{\n\t\t\t\tvar off = this.getBoundingBoxFromGeometry([parent], false);\n\t\t\t\t\n\t\t\t\tif (off != null)\n\t\t\t\t{\n\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\t\n\t\t\t\t\tmax.x -= off.x;\n\t\t\t\t\tmax.y -= off.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (this.isConstrainChild(cell))\n\t\t\t{\n\t\t\t\tvar tmp = this.getCellContainmentArea(cell);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tvar overlap = this.getOverlap(cell);\n\t\n\t\t\t\t\tif (overlap > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = mxRectangle.fromRectangle(tmp);\n\t\t\t\t\t\t\n\t\t\t\t\t\ttmp.x -= tmp.width * overlap;\n\t\t\t\t\t\ttmp.y -= tmp.height * overlap;\n\t\t\t\t\t\ttmp.width += 2 * tmp.width * overlap;\n\t\t\t\t\t\ttmp.height += 2 * tmp.height * overlap;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Find the intersection between max and tmp\n\t\t\t\t\tif (max == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tmax = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\t\tmax.intersect(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (max != null)\n\t\t\t{\n\t\t\t\tvar cells = [cell];\n\t\t\t\t\n\t\t\t\tif (!this.isCellCollapsed(cell))\n\t\t\t\t{\n\t\t\t\t\tvar desc = this.model.getDescendants(cell);\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < desc.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.isCellVisible(desc[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcells.push(desc[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bbox = this.getBoundingBoxFromGeometry(cells, false);\n\t\t\t\t\n\t\t\t\tif (bbox != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\t// Cumulative horizontal movement\n\t\t\t\t\tvar dx = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (geo.width > max.width)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx = geo.width - max.width;\n\t\t\t\t\t\tgeo.width -= dx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.x + bbox.width > max.x + max.width)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx -= bbox.x + bbox.width - max.x - max.width - dx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Cumulative vertical movement\n\t\t\t\t\tvar dy = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (geo.height > max.height)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy = geo.height - max.height;\n\t\t\t\t\t\tgeo.height -= dy;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.y + bbox.height > max.y + max.height)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy -= bbox.y + bbox.height - max.y - max.height - dy;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.x < max.x)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx -= bbox.x - max.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.y < max.y)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy -= bbox.y - max.y;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (dx != 0 || dy != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (geo.relative)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Relative geometries are moved via absolute offset\n\t\t\t\t\t\t\tif (geo.offset == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.offset = new mxPoint();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tgeo.offset.x += dx;\n\t\t\t\t\t\t\tgeo.offset.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x += dx;\n\t\t\t\t\t\t\tgeo.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.model.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: resetEdges\n * \n * Resets the control points of the edges that are connected to the given\n * cells if not both ends of the edge are in the given cells array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> for which the connected edges should be\n * reset.\n */\nmxGraph.prototype.resetEdges = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\t// Prepares faster cells lookup\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t}\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar edges = this.model.getEdges(cells[i]);\n\t\t\t\t\n\t\t\t\tif (edges != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(edges[j]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[j], true);\n\t\t\t\t\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[j], false);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if one of the terminals is not in the given array\n\t\t\t\t\t\tif (!dict.get(source) || !dict.get(target))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.resetEdge(edges[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.resetEdges(this.model.getChildren(cells[i]));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resetEdge\n * \n * Resets the control points of the given edge.\n * \n * Parameters:\n * \n * edge - <mxCell> whose points should be reset.\n */\nmxGraph.prototype.resetEdge = function(edge)\n{\n\tvar geo = this.model.getGeometry(edge);\n\t\n\t// Resets the control points\n\tif (geo != null && geo.points != null && geo.points.length > 0)\n\t{\n\t\tgeo = geo.clone();\n\t\tgeo.points = [];\n\t\tthis.model.setGeometry(edge, geo);\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Group: Cell connecting and connection constraints\n */\n\n/**\n * Function: getOutlineConstraint\n * \n * Returns the constraint used to connect to the outline of the given state.\n */\nmxGraph.prototype.getOutlineConstraint = function(point, terminalState, me)\n{\n\tif (terminalState.shape != null)\n\t{\n\t\tvar bounds = this.view.getPerimeterBounds(terminalState);\n\t\tvar direction = terminalState.style[mxConstants.STYLE_DIRECTION];\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tbounds.x += bounds.width / 2 - bounds.height / 2;\n\t\t\tbounds.y += bounds.height / 2 - bounds.width / 2;\n\t\t\tvar tmp = bounds.width;\n\t\t\tbounds.width = bounds.height;\n\t\t\tbounds.height = tmp;\n\t\t}\n\t\n\t\tvar alpha = mxUtils.toRadians(terminalState.shape.getShapeRotation());\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(-alpha);\n\t\t\tvar sin = Math.sin(-alpha);\n\t\n\t\t\tvar ct = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\t\t\tpoint = mxUtils.getRotatedPoint(point, cos, sin, ct);\n\t\t}\n\n\t\tvar sx = 1;\n\t\tvar sy = 1;\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\t// LATER: Add flipping support for image shapes\n\t\tif (this.getModel().isVertex(terminalState.cell))\n\t\t{\n\t\t\tvar flipH = terminalState.style[mxConstants.STYLE_FLIPH];\n\t\t\tvar flipV = terminalState.style[mxConstants.STYLE_FLIPV];\n\t\t\t\n\t\t\t// Legacy support for stencilFlipH/V\n\t\t\tif (terminalState.shape != null && terminalState.shape.stencil != null)\n\t\t\t{\n\t\t\t\tflipH = mxUtils.getValue(terminalState.style, 'stencilFlipH', 0) == 1 || flipH;\n\t\t\t\tflipV = mxUtils.getValue(terminalState.style, 'stencilFlipV', 0) == 1 || flipV;\n\t\t\t}\n\t\t\t\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tvar tmp = flipH;\n\t\t\t\tflipH = flipV;\n\t\t\t\tflipV = tmp;\n\t\t\t}\n\t\t\t\n\t\t\tif (flipH)\n\t\t\t{\n\t\t\t\tsx = -1;\n\t\t\t\tdx = -bounds.width;\n\t\t\t}\n\t\t\t\n\t\t\tif (flipV)\n\t\t\t{\n\t\t\t\tsy = -1;\n\t\t\t\tdy = -bounds.height ;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpoint = new mxPoint((point.x - bounds.x) * sx - dx + bounds.x, (point.y - bounds.y) * sy - dy + bounds.y);\n\t\t\n\t\tvar x = (bounds.width == 0) ? 0 : Math.round((point.x - bounds.x) * 1000 / bounds.width) / 1000;\n\t\tvar y = (bounds.height == 0) ? 0 : Math.round((point.y - bounds.y) * 1000 / bounds.height) / 1000;\n\t\t\n\t\treturn new mxConnectionConstraint(new mxPoint(x, y), false);\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getAllConnectionConstraints\n * \n * Returns an array of all <mxConnectionConstraints> for the given terminal. If\n * the shape of the given terminal is a <mxStencilShape> then the constraints\n * of the corresponding <mxStencil> are returned.\n * \n * Parameters:\n * \n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean that specifies if the terminal is the source or target.\n */\nmxGraph.prototype.getAllConnectionConstraints = function(terminal, source)\n{\n\tif (terminal != null && terminal.shape != null && terminal.shape.stencil != null)\n\t{\n\t\treturn terminal.shape.stencil.constraints;\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: getConnectionConstraint\n * \n * Returns an <mxConnectionConstraint> that describes the given connection\n * point. This result can then be passed to <getConnectionPoint>.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean indicating if the terminal is the source or target.\n */\nmxGraph.prototype.getConnectionConstraint = function(edge, terminal, source)\n{\n\tvar point = null;\n\tvar x = edge.style[(source) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X];\n\n\tif (x != null)\n\t{\n\t\tvar y = edge.style[(source) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y];\n\t\t\n\t\tif (y != null)\n\t\t{\n\t\t\tpoint = new mxPoint(parseFloat(x), parseFloat(y));\n\t\t}\n\t}\n\t\n\tvar perimeter = false;\n\t\n\tif (point != null)\n\t{\n\t\tperimeter = mxUtils.getValue(edge.style, (source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, true);\n\t}\n\t\n\treturn new mxConnectionConstraint(point, perimeter);\n};\n\n/**\n * Function: setConnectionConstraint\n * \n * Sets the <mxConnectionConstraint> that describes the given connection point.\n * If no constraint is given then nothing is changed. To remove an existing\n * constraint from the given edge, use an empty constraint instead.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge.\n * terminal - <mxCell> that represents the terminal.\n * source - Boolean indicating if the terminal is the source or target.\n * constraint - Optional <mxConnectionConstraint> to be used for this\n * connection.\n */\nmxGraph.prototype.setConnectionConstraint = function(edge, terminal, source, constraint)\n{\n\tif (constraint != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\t\n\t\ttry\n\t\t{\n\t\t\tif (constraint == null || constraint.point == null)\n\t\t\t{\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_X :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_X, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_Y :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_Y, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, null, [edge]);\n\t\t\t}\n\t\t\telse if (constraint.point != null)\n\t\t\t{\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_X :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_X, constraint.point.x, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_Y :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_Y, constraint.point.y, [edge]);\n\t\t\t\t\n\t\t\t\t// Only writes 0 since 1 is default\n\t\t\t\tif (!constraint.perimeter)\n\t\t\t\t{\n\t\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, '0', [edge]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, null, [edge]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: getConnectionPoint\n *\n * Returns the nearest point in the list of absolute points or the center\n * of the opposite terminal.\n * \n * Parameters:\n * \n * vertex - <mxCellState> that represents the vertex.\n * constraint - <mxConnectionConstraint> that represents the connection point\n * constraint as returned by <getConnectionConstraint>.\n */\nmxGraph.prototype.getConnectionPoint = function(vertex, constraint)\n{\n\tvar point = null;\n\t\n\tif (vertex != null && constraint.point != null)\n\t{\n\t\tvar bounds = this.view.getPerimeterBounds(vertex);\n        var cx = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\t\tvar direction = vertex.style[mxConstants.STYLE_DIRECTION];\n\t\tvar r1 = 0;\n\t\t\n\t\t// Bounds need to be rotated by 90 degrees for further computation\n\t\tif (direction != null && mxUtils.getValue(vertex.style,\n\t\t\tmxConstants.STYLE_ANCHOR_POINT_DIRECTION, 1) == 1)\n\t\t{\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t\t{\n\t\t\t\tr1 += 270;\n\t\t\t}\n\t\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t\t{\n\t\t\t\tr1 += 180;\n\t\t\t}\n\t\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tr1 += 90;\n\t\t\t}\n\n\t\t\t// Bounds need to be rotated by 90 degrees for further computation\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\t\tdirection == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tbounds.rotate90();\n\t\t\t}\n\t\t}\n\n\t\tpoint = new mxPoint(bounds.x + constraint.point.x * bounds.width,\n\t\t\t\tbounds.y + constraint.point.y * bounds.height);\n\t\t\n\t\t// Rotation for direction before projection on perimeter\n\t\tvar r2 = vertex.style[mxConstants.STYLE_ROTATION] || 0;\n\t\t\n\t\tif (constraint.perimeter)\n\t\t{\n\t\t\tif (r1 != 0)\n\t\t\t{\n\t\t\t\t// Only 90 degrees steps possible here so no trig needed\n\t\t\t\tvar cos = 0;\n\t\t\t\tvar sin = 0;\n\t\t\t\t\n\t\t\t\tif (r1 == 90)\n\t\t\t\t{\n\t\t\t\t\tsin = 1;\n\t\t\t\t}\n\t\t\t\telse if (r1 == 180)\n\t\t\t\t{\n\t\t\t\t\tcos = -1;\n\t\t\t\t}\n\t\t\t\telse if (r1 == 270)\n\t\t\t\t{\n\t\t\t\t\tsin = -1;\n\t\t\t\t}\n\t\t\t\t\n\t\t        point = mxUtils.getRotatedPoint(point, cos, sin, cx);\n\t\t\t}\n\t\n\t\t\tpoint = this.view.getPerimeterPoint(vertex, point, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr2 += r1;\n\t\t\t\n\t\t\tif (this.getModel().isVertex(vertex.cell))\n\t\t\t{\n\t\t\t\tvar flipH = vertex.style[mxConstants.STYLE_FLIPH] == 1;\n\t\t\t\tvar flipV = vertex.style[mxConstants.STYLE_FLIPV] == 1;\n\t\t\t\t\n\t\t\t\t// Legacy support for stencilFlipH/V\n\t\t\t\tif (vertex.shape != null && vertex.shape.stencil != null)\n\t\t\t\t{\n\t\t\t\t\tflipH = (mxUtils.getValue(vertex.style, 'stencilFlipH', 0) == 1) || flipH;\n\t\t\t\t\tflipV = (mxUtils.getValue(vertex.style, 'stencilFlipV', 0) == 1) || flipV;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (flipH)\n\t\t\t\t{\n\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (flipV)\n\t\t\t\t{\n\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Generic rotation after projection on perimeter\n\t\tif (r2 != 0 && point != null)\n\t\t{\n\t        var rad = mxUtils.toRadians(r2);\n\t        var cos = Math.cos(rad);\n\t        var sin = Math.sin(rad);\n\t        \n\t        point = mxUtils.getRotatedPoint(point, cos, sin, cx);\n\t\t}\n\t}\n\t\n\tif (point != null)\n\t{\n\t\tpoint.x = Math.round(point.x);\n\t\tpoint.y = Math.round(point.y);\n\t}\n\n\treturn point;\n};\n\n/**\n * Function: connectCell\n * \n * Connects the specified end of the given edge to the given terminal\n * using <cellConnected> and fires <mxEvent.CONNECT_CELL> while the\n * transaction is in progress. Returns the updated edge.\n * \n * Parameters:\n * \n * edge - <mxCell> whose terminal should be updated.\n * terminal - <mxCell> that represents the new terminal to be used.\n * source - Boolean indicating if the new terminal is the source or target.\n * constraint - Optional <mxConnectionConstraint> to be used for this\n * connection.\n */\nmxGraph.prototype.connectCell = function(edge, terminal, source, constraint)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar previous = this.model.getTerminal(edge, source);\n\t\tthis.cellConnected(edge, terminal, source, constraint);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.CONNECT_CELL,\n\t\t\t'edge', edge, 'terminal', terminal, 'source', source,\n\t\t\t'previous', previous));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: cellConnected\n * \n * Sets the new terminal for the given edge and resets the edge points if\n * <resetEdgesOnConnect> is true. This method fires\n * <mxEvent.CELL_CONNECTED> while the transaction is in progress.\n * \n * Parameters:\n * \n * edge - <mxCell> whose terminal should be updated.\n * terminal - <mxCell> that represents the new terminal to be used.\n * source - Boolean indicating if the new terminal is the source or target.\n * constraint - <mxConnectionConstraint> to be used for this connection.\n */\nmxGraph.prototype.cellConnected = function(edge, terminal, source, constraint)\n{\n\tif (edge != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar previous = this.model.getTerminal(edge, source);\n\n\t\t\t// Updates the constraint\n\t\t\tthis.setConnectionConstraint(edge, terminal, source, constraint);\n\t\t\t\n\t\t\t// Checks if the new terminal is a port, uses the ID of the port in the\n\t\t\t// style and the parent of the port as the actual terminal of the edge.\n\t\t\tif (this.isPortsEnabled())\n\t\t\t{\n\t\t\t\tvar id = null;\n\t\n\t\t\t\tif (this.isPort(terminal))\n\t\t\t\t{\n\t\t\t\t\tid = terminal.getId();\n\t\t\t\t\tterminal = this.getTerminalForPort(terminal, source);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Sets or resets all previous information for connecting to a child port\n\t\t\t\tvar key = (source) ? mxConstants.STYLE_SOURCE_PORT :\n\t\t\t\t\tmxConstants.STYLE_TARGET_PORT;\n\t\t\t\tthis.setCellStyles(key, id, [edge]);\n\t\t\t}\n\t\t\t\n\t\t\tthis.model.setTerminal(edge, terminal, source);\n\t\t\t\n\t\t\tif (this.resetEdgesOnConnect)\n\t\t\t{\n\t\t\t\tthis.resetEdge(edge);\n\t\t\t}\n\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELL_CONNECTED,\n\t\t\t\t'edge', edge, 'terminal', terminal, 'source', source,\n\t\t\t\t'previous', previous));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: disconnectGraph\n * \n * Disconnects the given edges from the terminals which are not in the\n * given array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be disconnected.\n */\nmxGraph.prototype.disconnectGraph = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\t\t\t\t\t\t\t\n\t\t\tvar scale = this.view.scale;\n\t\t\tvar tr = this.view.translate;\n\t\t\t\n\t\t\t// Fast lookup for finding cells in array\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (this.model.isEdge(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.model.getGeometry(cells[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\tvar pstate = this.view.getState(\n\t\t\t\t\t\t\tthis.model.getParent(cells[i]));\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null &&\n\t\t\t\t\t\t\tpstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar dx = -pstate.origin.x;\n\t\t\t\t\t\t\tvar dy = -pstate.origin.y;\n\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\n\t\t\t\t\t\t\tvar src = this.model.getTerminal(cells[i], true);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (src != null && this.isCellDisconnectable(cells[i], src, true))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twhile (src != null && !dict.get(src))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsrc = this.model.getParent(src);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (src == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[0].x / scale - tr.x + dx,\n\t\t\t\t\t\t\t\t\t\t\tpts[0].y / scale - tr.y + dy), true);\n\t\t\t\t\t\t\t\t\tthis.model.setTerminal(cells[i], null, true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar trg = this.model.getTerminal(cells[i], false);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (trg != null && this.isCellDisconnectable(cells[i], trg, false))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twhile (trg != null && !dict.get(trg))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttrg = this.model.getParent(trg);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (trg == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar n = pts.length - 1;\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[n].x / scale - tr.x + dx,\n\t\t\t\t\t\t\t\t\t\t\tpts[n].y / scale - tr.y + dy), false);\n\t\t\t\t\t\t\t\t\tthis.model.setTerminal(cells[i], null, false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Drilldown\n */\n\n/**\n * Function: getCurrentRoot\n * \n * Returns the current root of the displayed cell hierarchy. This is a\n * shortcut to <mxGraphView.currentRoot> in <view>.\n */\nmxGraph.prototype.getCurrentRoot = function()\n{\n\treturn this.view.currentRoot;\n};\n \n/**\n * Function: getTranslateForRoot\n * \n * Returns the translation to be used if the given cell is the root cell as\n * an <mxPoint>. This implementation returns null.\n * \n * Example:\n * \n * To keep the children at their absolute position while stepping into groups,\n * this function can be overridden as follows.\n * \n * (code)\n * var offset = new mxPoint(0, 0);\n * \n * while (cell != null)\n * {\n *   var geo = this.model.getGeometry(cell);\n * \n *   if (geo != null)\n *   {\n *     offset.x -= geo.x;\n *     offset.y -= geo.y;\n *   }\n * \n *   cell = this.model.getParent(cell);\n * }\n * \n * return offset;\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the root.\n */\nmxGraph.prototype.getTranslateForRoot = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, the cell returned by getTerminalForPort should be used as the\n * terminal and the port should be referenced by the ID in either the\n * mxConstants.STYLE_SOURCE_PORT or the or the\n * mxConstants.STYLE_TARGET_PORT. Note that a port should not be movable.\n * This implementation always returns false.\n * \n * A typical implementation is the following:\n * \n * (code)\n * graph.isPort = function(cell)\n * {\n *   var geo = this.getCellGeometry(cell);\n *   \n *   return (geo != null) ? geo.relative : false;\n * };\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxGraph.prototype.isPort = function(cell)\n{\n\treturn false;\n};\n\n/**\n * Function: getTerminalForPort\n * \n * Returns the terminal to be used for a given port. This implementation\n * always returns the parent cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n * source - If the cell is the source or target port.\n */\nmxGraph.prototype.getTerminalForPort = function(cell, source)\n{\n\treturn this.model.getParent(cell);\n};\n\n/**\n * Function: getChildOffsetForCell\n * \n * Returns the offset to be used for the cells inside the given cell. The\n * root and layer cells may be identified using <mxGraphModel.isRoot> and\n * <mxGraphModel.isLayer>. For all other current roots, the\n * <mxGraphView.currentRoot> field points to the respective cell, so that\n * the following holds: cell == this.view.currentRoot. This implementation\n * returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose offset should be returned.\n */\nmxGraph.prototype.getChildOffsetForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: enterGroup\n * \n * Uses the given cell as the root of the displayed cell hierarchy. If no\n * cell is specified then the selection cell is used. The cell is only used\n * if <isValidRoot> returns true.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be used as the new root. Default is the\n * selection cell.\n */\nmxGraph.prototype.enterGroup = function(cell)\n{\n\tcell = cell || this.getSelectionCell();\n\t\n\tif (cell != null && this.isValidRoot(cell))\n\t{\n\t\tthis.view.setCurrentRoot(cell);\n\t\tthis.clearSelection();\n\t}\n};\n\n/**\n * Function: exitGroup\n * \n * Changes the current root to the next valid root in the displayed cell\n * hierarchy.\n */\nmxGraph.prototype.exitGroup = function()\n{\n\tvar root = this.model.getRoot();\n\tvar current = this.getCurrentRoot();\n\t\n\tif (current != null)\n\t{\n\t\tvar next = this.model.getParent(current);\n\t\t\n\t\t// Finds the next valid root in the hierarchy\n\t\twhile (next != root && !this.isValidRoot(next) &&\n\t\t\t\tthis.model.getParent(next) != root)\n\t\t{\n\t\t\tnext = this.model.getParent(next);\n\t\t}\n\t\t\n\t\t// Clears the current root if the new root is\n\t\t// the model's root or one of the layers.\n\t\tif (next == root || this.model.getParent(next) == root)\n\t\t{\n\t\t\tthis.view.setCurrentRoot(null);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.view.setCurrentRoot(next);\n\t\t}\n\t\t\n\t\tvar state = this.view.getState(current);\n\t\t\n\t\t// Selects the previous root in the graph\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.setSelectionCell(current);\n\t\t}\n\t}\n};\n\n/**\n * Function: home\n * \n * Uses the root of the model as the root of the displayed cell hierarchy\n * and selects the previous root.\n */\nmxGraph.prototype.home = function()\n{\n\tvar current = this.getCurrentRoot();\n\t\n\tif (current != null)\n\t{\n\t\tthis.view.setCurrentRoot(null);\n\t\tvar state = this.view.getState(current);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.setSelectionCell(current);\n\t\t}\n\t}\n};\n\n/**\n * Function: isValidRoot\n * \n * Returns true if the given cell is a valid root for the cell display\n * hierarchy. This implementation returns true for all non-null values.\n * \n * Parameters:\n * \n * cell - <mxCell> which should be checked as a possible root.\n */\nmxGraph.prototype.isValidRoot = function(cell)\n{\n\treturn (cell != null);\n};\n\n/**\n * Group: Graph display\n */\n \n/**\n * Function: getGraphBounds\n * \n * Returns the bounds of the visible graph. Shortcut to\n * <mxGraphView.getGraphBounds>. See also: <getBoundingBoxFromGeometry>.\n */\n mxGraph.prototype.getGraphBounds = function()\n {\n \treturn this.view.getGraphBounds();\n };\n\n/**\n * Function: getCellBounds\n * \n * Returns the scaled, translated bounds for the given cell. See\n * <mxGraphView.getBounds> for arrays.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be returned.\n * includeEdge - Optional boolean that specifies if the bounds of\n * the connected edges should be included. Default is false.\n * includeDescendants - Optional boolean that specifies if the bounds\n * of all descendants should be included. Default is false.\n */\nmxGraph.prototype.getCellBounds = function(cell, includeEdges, includeDescendants)\n{\n\tvar cells = [cell];\n\t\n\t// Includes all connected edges\n\tif (includeEdges)\n\t{\n\t\tcells = cells.concat(this.model.getEdges(cell));\n\t}\n\t\n\tvar result = this.view.getBounds(cells);\n\t\n\t// Recursively includes the bounds of the children\n\tif (includeDescendants)\n\t{\n\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar tmp = this.getCellBounds(this.model.getChildAt(cell, i),\n\t\t\t\tincludeEdges, true);\n\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\tresult.add(tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = tmp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getBoundingBoxFromGeometry\n * \n * Returns the bounding box for the geometries of the vertices in the\n * given array of cells. This can be used to find the graph bounds during\n * a layout operation (ie. before the last endUpdate) as follows:\n * \n * (code)\n * var cells = graph.getChildCells(graph.getDefaultParent(), true, true);\n * var bounds = graph.getBoundingBoxFromGeometry(cells, true);\n * (end)\n * \n * This can then be used to move cells to the origin:\n * \n * (code)\n * if (bounds.x < 0 || bounds.y < 0)\n * {\n *   graph.moveCells(cells, -Math.min(bounds.x, 0), -Math.min(bounds.y, 0))\n * }\n * (end)\n * \n * Or to translate the graph view:\n * \n * (code)\n * if (bounds.x < 0 || bounds.y < 0)\n * {\n *   graph.view.setTranslate(-Math.min(bounds.x, 0), -Math.min(bounds.y, 0));\n * }\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be returned.\n * includeEdges - Specifies if edge bounds should be included by computing\n * the bounding box for all points in geometry. Default is false.\n */\nmxGraph.prototype.getBoundingBoxFromGeometry = function(cells, includeEdges)\n{\n\tincludeEdges = (includeEdges != null) ? includeEdges : false;\n\tvar result = null;\n\t\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (includeEdges || this.model.isVertex(cells[i]))\n\t\t\t{\n\t\t\t\t// Computes the bounding box for the points in the geometry\n\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\t\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = null;\n\t\t\t\t\t\n\t\t\t\t\tif (this.model.isEdge(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar addPoint = function(pt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pt != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (tmp == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp = new mxRectangle(pt.x, pt.y, 0, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp.add(new mxRectangle(pt.x, pt.y, 0, 0));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.model.getTerminal(cells[i], true) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddPoint(geo.getTerminalPoint(true));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.model.getTerminal(cells[i], false) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddPoint(geo.getTerminalPoint(false));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tvar pts = geo.points;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pts != null && pts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar tmp = new mxRectangle(pts[0].x, pts[0].y, 0, 0);\n\n\t\t\t\t\t\t\tfor (var j = 1; j < pts.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taddPoint(pts[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbbox = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (geo.relative)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (this.model.isVertex(parent) && parent != this.view.currentRoot)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar tmp = this.getBoundingBoxFromGeometry([parent], false);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbbox = new mxRectangle(geo.x * tmp.width, geo.y * tmp.height, geo.width, geo.height);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (mxUtils.indexOf(cells, parent) >= 0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tbbox.x += tmp.x;\n\t\t\t\t\t\t\t\t\t\tbbox.y += tmp.y;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbbox = mxRectangle.fromRectangle(geo);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.model.isVertex(parent) && mxUtils.indexOf(cells, parent) >= 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar tmp = this.getBoundingBoxFromGeometry([parent], false);\n\n\t\t\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbbox.x += tmp.x;\n\t\t\t\t\t\t\t\t\tbbox.y += tmp.y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bbox != null && geo.offset != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbbox.x += geo.offset.x;\n\t\t\t\t\t\t\tbbox.y += geo.offset.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (result == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: refresh\n * \n * Clears all cell states or the states for the hierarchy starting at the\n * given cell and validates the graph. This fires a refresh event as the\n * last step.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> for which the cell states should be cleared.\n */\nmxGraph.prototype.refresh = function(cell)\n{\n\tthis.view.clear(cell, cell == null);\n\tthis.view.validate();\n\tthis.sizeDidChange();\n\tthis.fireEvent(new mxEventObject(mxEvent.REFRESH));\n};\n\n/**\n * Function: snap\n * \n * Snaps the given numeric value to the grid if <gridEnabled> is true.\n * \n * Parameters:\n * \n * value - Numeric value to be snapped to the grid.\n */\nmxGraph.prototype.snap = function(value)\n{\n\tif (this.gridEnabled)\n\t{\n\t\tvalue = Math.round(value / this.gridSize ) * this.gridSize;\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: panGraph\n * \n * Shifts the graph display by the given amount. This is used to preview\n * panning operations, use <mxGraphView.setTranslate> to set a persistent\n * translation of the view. Fires <mxEvent.PAN>.\n * \n * Parameters:\n * \n * dx - Amount to shift the graph along the x-axis.\n * dy - Amount to shift the graph along the y-axis.\n */\nmxGraph.prototype.panGraph = function(dx, dy)\n{\n\tif (this.useScrollbarsForPanning && mxUtils.hasScrollbars(this.container))\n\t{\n\t\tthis.container.scrollLeft = -dx;\n\t\tthis.container.scrollTop = -dy;\n\t}\n\telse\n\t{\n\t\tvar canvas = this.view.getCanvas();\n\t\t\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\t// Puts everything inside the container in a DIV so that it\n\t\t\t// can be moved without changing the state of the container\n\t\t\tif (dx == 0 && dy == 0)\n\t\t\t{\n\t\t\t\t// Workaround for ignored removeAttribute on SVG element in IE9 standards\n\t\t\t\tif (mxClient.IS_IE)\n\t\t\t\t{\n\t\t\t\t\tcanvas.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcanvas.removeAttribute('transform');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.shiftPreview1 != null)\n\t\t\t\t{\n\t\t\t\t\tvar child = this.shiftPreview1.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tthis.container.appendChild(child);\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shiftPreview1.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shiftPreview1.parentNode.removeChild(this.shiftPreview1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview1 = null;\n\t\t\t\t\t\n\t\t\t\t\tthis.container.appendChild(canvas.parentNode);\n\t\t\t\t\t\n\t\t\t\t\tchild = this.shiftPreview2.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tthis.container.appendChild(child);\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shiftPreview2.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shiftPreview2.parentNode.removeChild(this.shiftPreview2);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview2 = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t\t\n\t\t\t\tif (this.shiftPreview1 == null)\n\t\t\t\t{\n\t\t\t\t\t// Needs two divs for stuff before and after the SVG element\n\t\t\t\t\tthis.shiftPreview1 = document.createElement('div');\n\t\t\t\t\tthis.shiftPreview1.style.position = 'absolute';\n\t\t\t\t\tthis.shiftPreview1.style.overflow = 'visible';\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview2 = document.createElement('div');\n\t\t\t\t\tthis.shiftPreview2.style.position = 'absolute';\n\t\t\t\t\tthis.shiftPreview2.style.overflow = 'visible';\n\n\t\t\t\t\tvar current = this.shiftPreview1;\n\t\t\t\t\tvar child = this.container.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// SVG element is moved via transform attribute\n\t\t\t\t\t\tif (child != canvas.parentNode)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent.appendChild(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent = this.shiftPreview2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Inserts elements only if not empty\n\t\t\t\t\tif (this.shiftPreview1.firstChild != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.container.insertBefore(this.shiftPreview1, canvas.parentNode);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.shiftPreview2.firstChild != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.container.appendChild(this.shiftPreview2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.shiftPreview1.style.left = dx + 'px';\n\t\t\t\tthis.shiftPreview1.style.top = dy + 'px';\n\t\t\t\tthis.shiftPreview2.style.left = dx + 'px';\n\t\t\t\tthis.shiftPreview2.style.top = dy + 'px';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcanvas.style.left = dx + 'px';\n\t\t\tcanvas.style.top = dy + 'px';\n\t\t}\n\t\t\n\t\tthis.panDx = dx;\n\t\tthis.panDy = dy;\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN));\n\t}\n};\n\n/**\n * Function: zoomIn\n * \n * Zooms into the graph by <zoomFactor>.\n */\nmxGraph.prototype.zoomIn = function()\n{\n\tthis.zoom(this.zoomFactor);\n};\n\n/**\n * Function: zoomOut\n * \n * Zooms out of the graph by <zoomFactor>.\n */\nmxGraph.prototype.zoomOut = function()\n{\n\tthis.zoom(1 / this.zoomFactor);\n};\n\n/**\n * Function: zoomActual\n * \n * Resets the zoom and panning in the view.\n */\nmxGraph.prototype.zoomActual = function()\n{\n\tif (this.view.scale == 1)\n\t{\n\t\tthis.view.setTranslate(0, 0);\n\t}\n\telse\n\t{\n\t\tthis.view.translate.x = 0;\n\t\tthis.view.translate.y = 0;\n\n\t\tthis.view.setScale(1);\n\t}\n};\n\n/**\n * Function: zoomTo\n * \n * Zooms the graph to the given scale with an optional boolean center\n * argument, which is passd to <zoom>.\n */\nmxGraph.prototype.zoomTo = function(scale, center)\n{\n\tthis.zoom(scale / this.view.scale, center);\n};\n\n/**\n * Function: center\n * \n * Centers the graph in the container.\n * \n * Parameters:\n * \n * horizontal - Optional boolean that specifies if the graph should be centered\n * horizontally. Default is true.\n * vertical - Optional boolean that specifies if the graph should be centered\n * vertically. Default is true.\n * cx - Optional float that specifies the horizontal center. Default is 0.5.\n * cy - Optional float that specifies the vertical center. Default is 0.5.\n */\nmxGraph.prototype.center = function(horizontal, vertical, cx, cy)\n{\n\thorizontal = (horizontal != null) ? horizontal : true;\n\tvertical = (vertical != null) ? vertical : true;\n\tcx = (cx != null) ? cx : 0.5;\n\tcy = (cy != null) ? cy : 0.5;\n\t\n\tvar hasScrollbars = mxUtils.hasScrollbars(this.container);\n\tvar cw = this.container.clientWidth;\n\tvar ch = this.container.clientHeight;\n\tvar bounds = this.getGraphBounds();\n\n\tvar t = this.view.translate;\n\tvar s = this.view.scale;\n\n\tvar dx = (horizontal) ? cw - bounds.width : 0;\n\tvar dy = (vertical) ? ch - bounds.height : 0;\n\t\n\tif (!hasScrollbars)\n\t{\n\t\tthis.view.setTranslate((horizontal) ? Math.floor(t.x - bounds.x * s + dx * cx / s) : t.x,\n\t\t\t(vertical) ? Math.floor(t.y - bounds.y * s + dy * cy / s) : t.y);\n\t}\n\telse\n\t{\n\t\tbounds.x -= t.x;\n\t\tbounds.y -= t.y;\n\t\n\t\tvar sw = this.container.scrollWidth;\n\t\tvar sh = this.container.scrollHeight;\n\t\t\n\t\tif (sw > cw)\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t\t\n\t\tif (sh > ch)\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\n\t\tthis.view.setTranslate(Math.floor(dx / 2 - bounds.x), Math.floor(dy / 2 - bounds.y));\n\t\tthis.container.scrollLeft = (sw - cw) / 2;\n\t\tthis.container.scrollTop = (sh - ch) / 2;\n\t}\n};\n\n/**\n * Function: zoom\n * \n * Zooms the graph using the given factor. Center is an optional boolean\n * argument that keeps the graph scrolled to the center. If the center argument\n * is omitted, then <centerZoom> will be used as its value.\n */\nmxGraph.prototype.zoom = function(factor, center)\n{\n\tcenter = (center != null) ? center : this.centerZoom;\n\tvar scale = Math.round(this.view.scale * factor * 100) / 100;\n\tvar state = this.view.getState(this.getSelectionCell());\n\tfactor = scale / this.view.scale;\n\t\n\tif (this.keepSelectionVisibleOnZoom && state != null)\n\t{\n\t\tvar rect = new mxRectangle(state.x * factor, state.y * factor,\n\t\t\tstate.width * factor, state.height * factor);\n\t\t\n\t\t// Refreshes the display only once if a scroll is carried out\n\t\tthis.view.scale = scale;\n\t\t\n\t\tif (!this.scrollRectToVisible(rect))\n\t\t{\n\t\t\tthis.view.revalidate();\n\t\t\t\n\t\t\t// Forces an event to be fired but does not revalidate again\n\t\t\tthis.view.setScale(scale);\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar hasScrollbars = mxUtils.hasScrollbars(this.container);\n\t\t\n\t\tif (center && !hasScrollbars)\n\t\t{\n\t\t\tvar dx = this.container.offsetWidth;\n\t\t\tvar dy = this.container.offsetHeight;\n\t\t\t\n\t\t\tif (factor > 1)\n\t\t\t{\n\t\t\t\tvar f = (factor - 1) / (scale * 2);\n\t\t\t\tdx *= -f;\n\t\t\t\tdy *= -f;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar f = (1 / factor - 1) / (this.view.scale * 2);\n\t\t\t\tdx *= f;\n\t\t\t\tdy *= f;\n\t\t\t}\n\n\t\t\tthis.view.scaleAndTranslate(scale,\n\t\t\t\tthis.view.translate.x + dx,\n\t\t\t\tthis.view.translate.y + dy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Allows for changes of translate and scrollbars during setscale\n\t\t\tvar tx = this.view.translate.x;\n\t\t\tvar ty = this.view.translate.y;\n\t\t\tvar sl = this.container.scrollLeft;\n\t\t\tvar st = this.container.scrollTop;\n\t\t\t\n\t\t\tthis.view.setScale(scale);\n\t\t\t\n\t\t\tif (hasScrollbars)\n\t\t\t{\n\t\t\t\tvar dx = 0;\n\t\t\t\tvar dy = 0;\n\t\t\t\t\n\t\t\t\tif (center)\n\t\t\t\t{\n\t\t\t\t\tdx = this.container.offsetWidth * (factor - 1) / 2;\n\t\t\t\t\tdy = this.container.offsetHeight * (factor - 1) / 2;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.container.scrollLeft = (this.view.translate.x - tx) * this.view.scale + Math.round(sl * factor + dx);\n\t\t\t\tthis.container.scrollTop = (this.view.translate.y - ty) * this.view.scale + Math.round(st * factor + dy);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: zoomToRect\n * \n * Zooms the graph to the specified rectangle. If the rectangle does not have same aspect\n * ratio as the display container, it is increased in the smaller relative dimension only\n * until the aspect match. The original rectangle is centralised within this expanded one.\n * \n * Note that the input rectangular must be un-scaled and un-translated.\n * \n * Parameters:\n * \n * rect - The un-scaled and un-translated rectangluar region that should be just visible \n * after the operation\n */\nmxGraph.prototype.zoomToRect = function(rect)\n{\n\tvar scaleX = this.container.clientWidth / rect.width;\n\tvar scaleY = this.container.clientHeight / rect.height;\n\tvar aspectFactor = scaleX / scaleY;\n\n\t// Remove any overlap of the rect outside the client area\n\trect.x = Math.max(0, rect.x);\n\trect.y = Math.max(0, rect.y);\n\tvar rectRight = Math.min(this.container.scrollWidth, rect.x + rect.width);\n\tvar rectBottom = Math.min(this.container.scrollHeight, rect.y + rect.height);\n\trect.width = rectRight - rect.x;\n\trect.height = rectBottom - rect.y;\n\n\t// The selection area has to be increased to the same aspect\n\t// ratio as the container, centred around the centre point of the \n\t// original rect passed in.\n\tif (aspectFactor < 1.0)\n\t{\n\t\t// Height needs increasing\n\t\tvar newHeight = rect.height / aspectFactor;\n\t\tvar deltaHeightBuffer = (newHeight - rect.height) / 2.0;\n\t\trect.height = newHeight;\n\t\t\n\t\t// Assign up to half the buffer to the upper part of the rect, not crossing 0\n\t\t// put the rest on the bottom\n\t\tvar upperBuffer = Math.min(rect.y , deltaHeightBuffer);\n\t\trect.y = rect.y - upperBuffer;\n\t\t\n\t\t// Check if the bottom has extended too far\n\t\trectBottom = Math.min(this.container.scrollHeight, rect.y + rect.height);\n\t\trect.height = rectBottom - rect.y;\n\t}\n\telse\n\t{\n\t\t// Width needs increasing\n\t\tvar newWidth = rect.width * aspectFactor;\n\t\tvar deltaWidthBuffer = (newWidth - rect.width) / 2.0;\n\t\trect.width = newWidth;\n\t\t\n\t\t// Assign up to half the buffer to the upper part of the rect, not crossing 0\n\t\t// put the rest on the bottom\n\t\tvar leftBuffer = Math.min(rect.x , deltaWidthBuffer);\n\t\trect.x = rect.x - leftBuffer;\n\t\t\n\t\t// Check if the right hand side has extended too far\n\t\trectRight = Math.min(this.container.scrollWidth, rect.x + rect.width);\n\t\trect.width = rectRight - rect.x;\n\t}\n\n\tvar scale = this.container.clientWidth / rect.width;\n\tvar newScale = this.view.scale * scale;\n\n\tif (!mxUtils.hasScrollbars(this.container))\n\t{\n\t\tthis.view.scaleAndTranslate(newScale, (this.view.translate.x - rect.x / this.view.scale), (this.view.translate.y - rect.y / this.view.scale));\n\t}\n\telse\n\t{\n\t\tthis.view.setScale(newScale);\n\t\tthis.container.scrollLeft = Math.round(rect.x * scale);\n\t\tthis.container.scrollTop = Math.round(rect.y * scale);\n\t}\n};\n\n/**\n * Function: scrollCellToVisible\n * \n * Pans the graph so that it shows the given cell. Optionally the cell may\n * be centered in the container.\n * \n * To center a given graph if the <container> has no scrollbars, use the following code.\n * \n * [code]\n * var bounds = graph.getGraphBounds();\n * graph.view.setTranslate(-bounds.x - (bounds.width - container.clientWidth) / 2,\n * \t\t\t\t\t\t   -bounds.y - (bounds.height - container.clientHeight) / 2);\n * [/code]\n * \n * Parameters:\n * \n * cell - <mxCell> to be made visible.\n * center - Optional boolean flag. Default is false.\n */\nmxGraph.prototype.scrollCellToVisible = function(cell, center)\n{\n\tvar x = -this.view.translate.x;\n\tvar y = -this.view.translate.y;\n\n\tvar state = this.view.getState(cell);\n\n\tif (state != null)\n\t{\n\t\tvar bounds = new mxRectangle(x + state.x, y + state.y, state.width,\n\t\t\tstate.height);\n\n\t\tif (center && this.container != null)\n\t\t{\n\t\t\tvar w = this.container.clientWidth;\n\t\t\tvar h = this.container.clientHeight;\n\n\t\t\tbounds.x = bounds.getCenterX() - w / 2;\n\t\t\tbounds.width = w;\n\t\t\tbounds.y = bounds.getCenterY() - h / 2;\n\t\t\tbounds.height = h;\n\t\t}\n\t\t\n\t\tvar tr = new mxPoint(this.view.translate.x, this.view.translate.y);\n\n\t\tif (this.scrollRectToVisible(bounds))\n\t\t{\n\t\t\t// Triggers an update via the view's event source\n\t\t\tvar tr2 = new mxPoint(this.view.translate.x, this.view.translate.y);\n\t\t\tthis.view.translate.x = tr.x;\n\t\t\tthis.view.translate.y = tr.y;\n\t\t\tthis.view.setTranslate(tr2.x, tr2.y);\n\t\t}\n\t}\n};\n\n/**\n * Function: scrollRectToVisible\n * \n * Pans the graph so that it shows the given rectangle.\n * \n * Parameters:\n * \n * rect - <mxRectangle> to be made visible.\n */\nmxGraph.prototype.scrollRectToVisible = function(rect)\n{\n\tvar isChanged = false;\n\t\n\tif (rect != null)\n\t{\n\t\tvar w = this.container.offsetWidth;\n\t\tvar h = this.container.offsetHeight;\n\n        var widthLimit = Math.min(w, rect.width);\n        var heightLimit = Math.min(h, rect.height);\n\n\t\tif (mxUtils.hasScrollbars(this.container))\n\t\t{\n\t\t\tvar c = this.container;\n\t\t\trect.x += this.view.translate.x;\n\t\t\trect.y += this.view.translate.y;\n\t\t\tvar dx = c.scrollLeft - rect.x;\n\t\t\tvar ddx = Math.max(dx - c.scrollLeft, 0);\n\n\t\t\tif (dx > 0)\n\t\t\t{\n\t\t\t\tc.scrollLeft -= dx + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdx = rect.x + widthLimit - c.scrollLeft - c.clientWidth;\n\n\t\t\t\tif (dx > 0)\n\t\t\t\t{\n\t\t\t\t\tc.scrollLeft += dx + 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dy = c.scrollTop - rect.y;\n\t\t\tvar ddy = Math.max(0, dy - c.scrollTop);\n\n\t\t\tif (dy > 0)\n\t\t\t{\n\t\t\t\tc.scrollTop -= dy + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdy = rect.y + heightLimit - c.scrollTop - c.clientHeight;\n\n\t\t\t\tif (dy > 0)\n\t\t\t\t{\n\t\t\t\t\tc.scrollTop += dy + 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.useScrollbarsForPanning && (ddx != 0 || ddy != 0))\n\t\t\t{\n\t\t\t\tthis.view.setTranslate(ddx, ddy);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar x = -this.view.translate.x;\n\t\t\tvar y = -this.view.translate.y;\n\n\t\t\tvar s = this.view.scale;\n\n\t\t\tif (rect.x + widthLimit > x + w)\n\t\t\t{\n\t\t\t\tthis.view.translate.x -= (rect.x + widthLimit - w - x) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.y + heightLimit > y + h)\n\t\t\t{\n\t\t\t\tthis.view.translate.y -= (rect.y + heightLimit - h - y) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.x < x)\n\t\t\t{\n\t\t\t\tthis.view.translate.x += (x - rect.x) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.y  < y)\n\t\t\t{\n\t\t\t\tthis.view.translate.y += (y - rect.y) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (isChanged)\n\t\t\t{\n\t\t\t\tthis.view.refresh();\n\t\t\t\t\n\t\t\t\t// Repaints selection marker (ticket 18)\n\t\t\t\tif (this.selectionCellsHandler != null)\n\t\t\t\t{\n\t\t\t\t\tthis.selectionCellsHandler.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn isChanged;\n};\n\n/**\n * Function: getCellGeometry\n * \n * Returns the <mxGeometry> for the given cell. This implementation uses\n * <mxGraphModel.getGeometry>. Subclasses can override this to implement\n * specific geometries for cells in only one graph, that is, it can return\n * geometries that depend on the current state of the view.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be returned.\n */\nmxGraph.prototype.getCellGeometry = function(cell)\n{\n\treturn this.model.getGeometry(cell);\n};\n\n/**\n * Function: isCellVisible\n * \n * Returns true if the given cell is visible in this graph. This\n * implementation uses <mxGraphModel.isVisible>. Subclassers can override\n * this to implement specific visibility for cells in only one graph, that\n * is, without affecting the visible state of the cell.\n * \n * When using dynamic filter expressions for cell visibility, then the\n * graph should be revalidated after the filter expression has changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose visible state should be returned.\n */\nmxGraph.prototype.isCellVisible = function(cell)\n{\n\treturn this.model.isVisible(cell);\n};\n\n/**\n * Function: isCellCollapsed\n * \n * Returns true if the given cell is collapsed in this graph. This\n * implementation uses <mxGraphModel.isCollapsed>. Subclassers can override\n * this to implement specific collapsed states for cells in only one graph,\n * that is, without affecting the collapsed state of the cell.\n * \n * When using dynamic filter expressions for the collapsed state, then the\n * graph should be revalidated after the filter expression has changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be returned.\n */\nmxGraph.prototype.isCellCollapsed = function(cell)\n{\n\treturn this.model.isCollapsed(cell);\n};\n\n/**\n * Function: isCellConnectable\n * \n * Returns true if the given cell is connectable in this graph. This\n * implementation uses <mxGraphModel.isConnectable>. Subclassers can override\n * this to implement specific connectable states for cells in only one graph,\n * that is, without affecting the connectable state of the cell in the model.\n * \n * Parameters:\n * \n * cell - <mxCell> whose connectable state should be returned.\n */\nmxGraph.prototype.isCellConnectable = function(cell)\n{\n\treturn this.model.isConnectable(cell);\n};\n\n/**\n * Function: isOrthogonal\n * \n * Returns true if perimeter points should be computed such that the\n * resulting edge has only horizontal or vertical segments.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n */\nmxGraph.prototype.isOrthogonal = function(edge)\n{\n\tvar orthogonal = edge.style[mxConstants.STYLE_ORTHOGONAL];\n\t\n\tif (orthogonal != null)\n\t{\n\t\treturn orthogonal;\n\t}\n\t\n\tvar tmp = this.view.getEdgeStyle(edge);\n\t\n\treturn tmp == mxEdgeStyle.SegmentConnector ||\n\t\ttmp == mxEdgeStyle.ElbowConnector ||\n\t\ttmp == mxEdgeStyle.SideToSide ||\n\t\ttmp == mxEdgeStyle.TopToBottom ||\n\t\ttmp == mxEdgeStyle.EntityRelation ||\n\t\ttmp == mxEdgeStyle.OrthConnector;\n};\n\n/**\n * Function: isLoop\n * \n * Returns true if the given cell state is a loop.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents a potential loop.\n */\nmxGraph.prototype.isLoop = function(state)\n{\n\tvar src = state.getVisibleTerminalState(true);\n\tvar trg = state.getVisibleTerminalState(false);\n\t\n\treturn (src != null && src == trg);\n};\n\n/**\n * Function: isCloneEvent\n * \n * Returns true if the given event is a clone event. This implementation\n * returns true if control is pressed.\n */\nmxGraph.prototype.isCloneEvent = function(evt)\n{\n\treturn mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: isTransparentClickEvent\n * \n * Hook for implementing click-through behaviour on selected cells. If this\n * returns true the cell behind the selected cell will be selected. This\n * implementation returns false;\n */\nmxGraph.prototype.isTransparentClickEvent = function(evt)\n{\n\treturn false;\n};\n\n/**\n * Function: isToggleEvent\n * \n * Returns true if the given event is a toggle event. This implementation\n * returns true if the meta key (Cmd) is pressed on Macs or if control is\n * pressed on any other platform.\n */\nmxGraph.prototype.isToggleEvent = function(evt)\n{\n\treturn (mxClient.IS_MAC) ? mxEvent.isMetaDown(evt) : mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: isGridEnabledEvent\n * \n * Returns true if the given mouse event should be aligned to the grid.\n */\nmxGraph.prototype.isGridEnabledEvent = function(evt)\n{\n\treturn evt != null && !mxEvent.isAltDown(evt);\n};\n\n/**\n * Function: isConstrainedEvent\n * \n * Returns true if the given mouse event should be aligned to the grid.\n */\nmxGraph.prototype.isConstrainedEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: isIgnoreTerminalEvent\n * \n * Returns true if the given mouse event should not allow any connections to be\n * made. This implementation returns false.\n */\nmxGraph.prototype.isIgnoreTerminalEvent = function(evt)\n{\n\treturn false;\n};\n\n/**\n * Group: Validation\n */\n\n/**\n * Function: validationAlert\n * \n * Displays the given validation error in a dialog. This implementation uses\n * mxUtils.alert.\n */\nmxGraph.prototype.validationAlert = function(message)\n{\n\tmxUtils.alert(message);\n};\n\n/**\n * Function: isEdgeValid\n * \n * Checks if the return value of <getEdgeValidationError> for the given\n * arguments is null.\n *  \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.isEdgeValid = function(edge, source, target)\n{\n\treturn this.getEdgeValidationError(edge, source, target) == null;\n};\n\n/**\n * Function: getEdgeValidationError\n * \n * Returns the validation error message to be displayed when inserting or\n * changing an edges' connectivity. A return value of null means the edge\n * is valid, a return value of '' means it's not valid, but do not display\n * an error message. Any other (non-empty) string returned from this method\n * is displayed as an error message when trying to connect an edge to a\n * source and target. This implementation uses the <multiplicities>, and\n * checks <multigraph>, <allowDanglingEdges> and <allowLoops> to generate\n * validation errors.\n * \n * For extending this method with specific checks for source/target cells,\n * the method can be extended as follows. Returning an empty string means\n * the edge is invalid with no error message, a non-null string specifies\n * the error message, and null means the edge is valid.\n * \n * (code)\n * graph.getEdgeValidationError = function(edge, source, target)\n * {\n *   if (source != null && target != null &&\n *     this.model.getValue(source) != null &&\n *     this.model.getValue(target) != null)\n *   {\n *     if (target is not valid for source)\n *     {\n *       return 'Invalid Target';\n *     }\n *   }\n *   \n *   // \"Supercall\"\n *   return mxGraph.prototype.getEdgeValidationError.apply(this, arguments);\n * }\n * (end)\n *  \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.getEdgeValidationError = function(edge, source, target)\n{\n\tif (edge != null && !this.isAllowDanglingEdges() && (source == null || target == null))\n\t{\n\t\treturn '';\n\t}\n\t\n\tif (edge != null && this.model.getTerminal(edge, true) == null &&\n\t\tthis.model.getTerminal(edge, false) == null)\t\n\t{\n\t\treturn null;\n\t}\n\t\n\t// Checks if we're dealing with a loop\n\tif (!this.allowLoops && source == target && source != null)\n\t{\n\t\treturn '';\n\t}\n\t\n\t// Checks if the connection is generally allowed\n\tif (!this.isValidConnection(source, target))\n\t{\n\t\treturn '';\n\t}\n\n\tif (source != null && target != null)\n\t{\n\t\tvar error = '';\n\n\t\t// Checks if the cells are already connected\n\t\t// and adds an error message if required\t\t\t\n\t\tif (!this.multigraph)\n\t\t{\n\t\t\tvar tmp = this.model.getEdgesBetween(source, target, true);\n\t\t\t\n\t\t\t// Checks if the source and target are not connected by another edge\n\t\t\tif (tmp.length > 1 || (tmp.length == 1 && tmp[0] != edge))\n\t\t\t{\n\t\t\t\terror += (mxResources.get(this.alreadyConnectedResource) ||\n\t\t\t\t\tthis.alreadyConnectedResource)+'\\n';\n\t\t\t}\n\t\t}\n\n\t\t// Gets the number of outgoing edges from the source\n\t\t// and the number of incoming edges from the target\n\t\t// without counting the edge being currently changed.\n\t\tvar sourceOut = this.model.getDirectedEdgeCount(source, true, edge);\n\t\tvar targetIn = this.model.getDirectedEdgeCount(target, false, edge);\n\n\t\t// Checks the change against each multiplicity rule\n\t\tif (this.multiplicities != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.multiplicities.length; i++)\n\t\t\t{\n\t\t\t\tvar err = this.multiplicities[i].check(this, edge, source,\n\t\t\t\t\ttarget, sourceOut, targetIn);\n\t\t\t\t\n\t\t\t\tif (err != null)\n\t\t\t\t{\n\t\t\t\t\terror += err;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Validates the source and target terminals independently\n\t\tvar err = this.validateEdge(edge, source, target);\n\t\t\n\t\tif (err != null)\n\t\t{\n\t\t\terror += err;\n\t\t}\n\t\t\n\t\treturn (error.length > 0) ? error : null;\n\t}\n\t\n\treturn (this.allowDanglingEdges) ? null : '';\n};\n\n/**\n * Function: validateEdge\n * \n * Hook method for subclassers to return an error message for the given\n * edge and terminals. This implementation returns null.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.validateEdge = function(edge, source, target)\n{\n\treturn null;\n};\n\n/**\n * Function: validateGraph\n * \n * Validates the graph by validating each descendant of the given cell or\n * the root of the model. Context is an object that contains the validation\n * state for the complete validation run. The validation errors are\n * attached to their cells using <setCellWarning>. Returns null in the case of\n * successful validation or an array of strings (warnings) in the case of\n * failed validations.\n * \n * Paramters:\n * \n * cell - Optional <mxCell> to start the validation recursion. Default is\n * the graph root.\n * context - Object that represents the global validation state.\n */\nmxGraph.prototype.validateGraph = function(cell, context)\n{\n\tcell = (cell != null) ? cell : this.model.getRoot();\n\tcontext = (context != null) ? context : new Object();\n\t\n\tvar isValid = true;\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar tmp = this.model.getChildAt(cell, i);\n\t\tvar ctx = context;\n\t\t\n\t\tif (this.isValidRoot(tmp))\n\t\t{\n\t\t\tctx = new Object();\n\t\t}\n\t\t\n\t\tvar warn = this.validateGraph(tmp, ctx);\n\t\t\n\t\tif (warn != null)\n\t\t{\n\t\t\tthis.setCellWarning(tmp, warn.replace(/\\n/g, '<br>'));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setCellWarning(tmp, null);\n\t\t}\n\t\t\n\t\tisValid = isValid && warn == null;\n\t}\n\t\n\tvar warning = '';\n\t\n\t// Adds error for invalid children if collapsed (children invisible)\n\tif (this.isCellCollapsed(cell) && !isValid)\n\t{\n\t\twarning += (mxResources.get(this.containsValidationErrorsResource) ||\n\t\t\tthis.containsValidationErrorsResource) + '\\n';\n\t}\n\t\n\t// Checks edges and cells using the defined multiplicities\n\tif (this.model.isEdge(cell))\n\t{\n\t\twarning += this.getEdgeValidationError(cell,\n\t\tthis.model.getTerminal(cell, true),\n\t\tthis.model.getTerminal(cell, false)) || '';\n\t}\n\telse\n\t{\n\t\twarning += this.getCellValidationError(cell) || '';\n\t}\n\t\n\t// Checks custom validation rules\n\tvar err = this.validateCell(cell, context);\n\t\n\tif (err != null)\n\t{\n\t\twarning += err;\n\t}\n\t\n\t// Updates the display with the warning icons\n\t// before any potential alerts are displayed.\n\t// LATER: Move this into addCellOverlay. Redraw\n\t// should check if overlay was added or removed.\n\tif (this.model.getParent(cell) == null)\n\t{\n\t\tthis.view.validate();\n\t}\n\n\treturn (warning.length > 0 || !isValid) ? warning : null;\n};\n\n/**\n * Function: getCellValidationError\n * \n * Checks all <multiplicities> that cannot be enforced while the graph is\n * being modified, namely, all multiplicities that require a minimum of\n * 1 edge.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the multiplicities should be checked.\n */\nmxGraph.prototype.getCellValidationError = function(cell)\n{\n\tvar outCount = this.model.getDirectedEdgeCount(cell, true);\n\tvar inCount = this.model.getDirectedEdgeCount(cell, false);\n\tvar value = this.model.getValue(cell);\n\tvar error = '';\n\n\tif (this.multiplicities != null)\n\t{\n\t\tfor (var i = 0; i < this.multiplicities.length; i++)\n\t\t{\n\t\t\tvar rule = this.multiplicities[i];\n\t\t\t\n\t\t\tif (rule.source && mxUtils.isNode(value, rule.type,\n\t\t\t\trule.attr, rule.value) && (outCount > rule.max ||\n\t\t\t\toutCount < rule.min))\n\t\t\t{\n\t\t\t\terror += rule.countError + '\\n';\n\t\t\t}\n\t\t\telse if (!rule.source && mxUtils.isNode(value, rule.type,\n\t\t\t\t\trule.attr, rule.value) && (inCount > rule.max ||\n\t\t\t\t\tinCount < rule.min))\n\t\t\t{\n\t\t\t\terror += rule.countError + '\\n';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (error.length > 0) ? error : null;\n};\n\n/**\n * Function: validateCell\n * \n * Hook method for subclassers to return an error message for the given\n * cell and validation context. This implementation returns null. Any HTML\n * breaks will be converted to linefeeds in the calling method.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to validate.\n * context - Object that represents the global validation state.\n */\nmxGraph.prototype.validateCell = function(cell, context)\n{\n\treturn null;\n};\n\n/**\n * Group: Graph appearance\n */\n\n/**\n * Function: getBackgroundImage\n * \n * Returns the <backgroundImage> as an <mxImage>.\n */\nmxGraph.prototype.getBackgroundImage = function()\n{\n\treturn this.backgroundImage;\n};\n\n/**\n * Function: setBackgroundImage\n * \n * Sets the new <backgroundImage>.\n * \n * Parameters:\n * \n * image - New <mxImage> to be used for the background.\n */\nmxGraph.prototype.setBackgroundImage = function(image)\n{\n\tthis.backgroundImage = image;\n};\n\n/**\n * Function: getFoldingImage\n * \n * Returns the <mxImage> used to display the collapsed state of\n * the specified cell state. This returns null for all edges.\n */\nmxGraph.prototype.getFoldingImage = function(state)\n{\n\tif (state != null && this.foldingEnabled && !this.getModel().isEdge(state.cell))\n\t{\n\t\tvar tmp = this.isCellCollapsed(state.cell);\n\t\t\n\t\tif (this.isCellFoldable(state.cell, !tmp))\n\t\t{\n\t\t\treturn (tmp) ? this.collapsedImage : this.expandedImage;\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: convertValueToString\n * \n * Returns the textual representation for the given cell. This\n * implementation returns the nodename or string-representation of the user\n * object.\n *\n * Example:\n * \n * The following returns the label attribute from the cells user\n * object if it is an XML node.\n * \n * (code)\n * graph.convertValueToString = function(cell)\n * {\n * \treturn cell.getAttribute('label');\n * }\n * (end)\n * \n * See also: <cellLabelChanged>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose textual representation should be returned.\n */\nmxGraph.prototype.convertValueToString = function(cell)\n{\n\tvar value = this.model.getValue(cell);\n\t\n\tif (value != null)\n\t{\n\t\tif (mxUtils.isNode(value))\n\t\t{\n\t\t\treturn value.nodeName;\n\t\t}\n\t\telse if (typeof(value.toString) == 'function')\n\t\t{\n\t\t\treturn value.toString();\n\t\t}\n\t}\n\t\n\treturn '';\n};\n\n/**\n * Function: getLabel\n * \n * Returns a string or DOM node that represents the label for the given\n * cell. This implementation uses <convertValueToString> if <labelsVisible>\n * is true. Otherwise it returns an empty string.\n * \n * To truncate a label to match the size of the cell, the following code\n * can be used.\n * \n * (code)\n * graph.getLabel = function(cell)\n * {\n *   var label = mxGraph.prototype.getLabel.apply(this, arguments);\n * \n *   if (label != null && this.model.isVertex(cell))\n *   {\n *     var geo = this.getCellGeometry(cell);\n * \n *     if (geo != null)\n *     {\n *       var max = parseInt(geo.width / 8);\n * \n *       if (label.length > max)\n *       {\n *         label = label.substring(0, max)+'...';\n *       }\n *     }\n *   } \n *   return mxUtils.htmlEntities(label);\n * }\n * (end)\n * \n * A resize listener is needed in the graph to force a repaint of the label\n * after a resize.\n * \n * (code)\n * graph.addListener(mxEvent.RESIZE_CELLS, function(sender, evt)\n * {\n *   var cells = evt.getProperty('cells');\n * \n *   for (var i = 0; i < cells.length; i++)\n *   {\n *     this.view.removeState(cells[i]);\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be returned.\n */\nmxGraph.prototype.getLabel = function(cell)\n{\n\tvar result = '';\n\t\n\tif (this.labelsVisible && cell != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\n\t\tif (!mxUtils.getValue(style, mxConstants.STYLE_NOLABEL, false))\n\t\t{\n\t\t\tresult = this.convertValueToString(cell);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: isHtmlLabel\n * \n * Returns true if the label must be rendered as HTML markup. The default\n * implementation returns <htmlLabels>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be displayed as HTML markup.\n */\nmxGraph.prototype.isHtmlLabel = function(cell)\n{\n\treturn this.isHtmlLabels();\n};\n \n/**\n * Function: isHtmlLabels\n * \n * Returns <htmlLabels>.\n */\nmxGraph.prototype.isHtmlLabels = function()\n{\n\treturn this.htmlLabels;\n};\n \n/**\n * Function: setHtmlLabels\n * \n * Sets <htmlLabels>.\n */\nmxGraph.prototype.setHtmlLabels = function(value)\n{\n\tthis.htmlLabels = value;\n};\n\n/**\n * Function: isWrapping\n * \n * This enables wrapping for HTML labels.\n * \n * Returns true if no white-space CSS style directive should be used for\n * displaying the given cells label. This implementation returns true if\n * <mxConstants.STYLE_WHITE_SPACE> in the style of the given cell is 'wrap'.\n * \n * This is used as a workaround for IE ignoring the white-space directive\n * of child elements if the directive appears in a parent element. It\n * should be overridden to return true if a white-space directive is used\n * in the HTML markup that represents the given cells label. In order for\n * HTML markup to work in labels, <isHtmlLabel> must also return true\n * for the given cell.\n * \n * Example:\n * \n * (code)\n * graph.getLabel = function(cell)\n * {\n *   var tmp = mxGraph.prototype.getLabel.apply(this, arguments); // \"supercall\"\n *   \n *   if (this.model.isEdge(cell))\n *   {\n *     tmp = '<div style=\"width: 150px; white-space:normal;\">'+tmp+'</div>';\n *   }\n *   \n *   return tmp;\n * }\n * \n * graph.isWrapping = function(state)\n * {\n * \t return this.model.isEdge(state.cell);\n * }\n * (end)\n * \n * Makes sure no edge label is wider than 150 pixels, otherwise the content\n * is wrapped. Note: No width must be specified for wrapped vertex labels as\n * the vertex defines the width in its geometry.\n * \n * Parameters:\n * \n * state - <mxCell> whose label should be wrapped.\n */\nmxGraph.prototype.isWrapping = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn (style != null) ? style[mxConstants.STYLE_WHITE_SPACE] == 'wrap' : false;\n};\n\n/**\n * Function: isLabelClipped\n * \n * Returns true if the overflow portion of labels should be hidden. If this\n * returns true then vertex labels will be clipped to the size of the vertices.\n * This implementation returns true if <mxConstants.STYLE_OVERFLOW> in the\n * style of the given cell is 'hidden'.\n * \n * Parameters:\n * \n * state - <mxCell> whose label should be clipped.\n */\nmxGraph.prototype.isLabelClipped = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn (style != null) ? style[mxConstants.STYLE_OVERFLOW] == 'hidden' : false;\n};\n\n/**\n * Function: getTooltip\n * \n * Returns the string or DOM node that represents the tooltip for the given\n * state, node and coordinate pair. This implementation checks if the given\n * node is a folding icon or overlay and returns the respective tooltip. If\n * this does not result in a tooltip, the handler for the cell is retrieved\n * from <selectionCellsHandler> and the optional getTooltipForNode method is\n * called. If no special tooltip exists here then <getTooltipForCell> is used\n * with the cell in the given state as the argument to return a tooltip for the\n * given state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose tooltip should be returned.\n * node - DOM node that is currently under the mouse.\n * x - X-coordinate of the mouse.\n * y - Y-coordinate of the mouse.\n */\nmxGraph.prototype.getTooltip = function(state, node, x, y)\n{\n\tvar tip = null;\n\t\n\tif (state != null)\n\t{\n\t\t// Checks if the mouse is over the folding icon\n\t\tif (state.control != null && (node == state.control.node ||\n\t\t\tnode.parentNode == state.control.node))\n\t\t{\n\t\t\ttip = this.collapseExpandResource;\n\t\t\ttip = mxUtils.htmlEntities(mxResources.get(tip) || tip).replace(/\\\\n/g, '<br>');\n\t\t}\n\n\t\tif (tip == null && state.overlays != null)\n\t\t{\n\t\t\tstate.overlays.visit(function(id, shape)\n\t\t\t{\n\t\t\t\t// LATER: Exit loop if tip is not null\n\t\t\t\tif (tip == null && (node == shape.node || node.parentNode == shape.node))\n\t\t\t\t{\n\t\t\t\t\ttip = shape.overlay.toString();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\tif (tip == null)\n\t\t{\n\t\t\tvar handler = this.selectionCellsHandler.getHandler(state.cell);\n\t\t\t\n\t\t\tif (handler != null && typeof(handler.getTooltipForNode) == 'function')\n\t\t\t{\n\t\t\t\ttip = handler.getTooltipForNode(node);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (tip == null)\n\t\t{\n\t\t\ttip = this.getTooltipForCell(state.cell);\n\t\t}\n\t}\n\t\n\treturn tip;\n};\n\n/**\n * Function: getTooltipForCell\n * \n * Returns the string or DOM node to be used as the tooltip for the given\n * cell. This implementation uses the cells getTooltip function if it\n * exists, or else it returns <convertValueToString> for the cell.\n * \n * Example:\n * \n * (code)\n * graph.getTooltipForCell = function(cell)\n * {\n *   return 'Hello, World!';\n * }\n * (end)\n * \n * Replaces all tooltips with the string Hello, World!\n * \n * Parameters:\n * \n * cell - <mxCell> whose tooltip should be returned.\n */\nmxGraph.prototype.getTooltipForCell = function(cell)\n{\n\tvar tip = null;\n\t\n\tif (cell != null && cell.getTooltip != null)\n\t{\n\t\ttip = cell.getTooltip();\n\t}\n\telse\n\t{\n\t\ttip = this.convertValueToString(cell);\n\t}\n\t\n\treturn tip;\n};\n\n/**\n * Function: getLinkForCell\n * \n * Returns the string to be used as the link for the given cell. This\n * implementation returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose tooltip should be returned.\n */\nmxGraph.prototype.getLinkForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: getCursorForMouseEvent\n * \n * Returns the cursor value to be used for the CSS of the shape for the\n * given event. This implementation calls <getCursorForCell>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> whose cursor should be returned.\n */\nmxGraph.prototype.getCursorForMouseEvent = function(me)\n{\n\treturn this.getCursorForCell(me.getCell());\n};\n\n/**\n * Function: getCursorForCell\n * \n * Returns the cursor value to be used for the CSS of the shape for the\n * given cell. This implementation returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose cursor should be returned.\n */\nmxGraph.prototype.getCursorForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: getStartSize\n * \n * Returns the start size of the given swimlane, that is, the width or\n * height of the part that contains the title, depending on the\n * horizontal style. The return value is an <mxRectangle> with either\n * width or height set as appropriate.\n * \n * Parameters:\n * \n * swimlane - <mxCell> whose start size should be returned.\n */\nmxGraph.prototype.getStartSize = function(swimlane)\n{\n\tvar result = new mxRectangle();\n\tvar state = this.view.getState(swimlane);\n\tvar style = (state != null) ? state.style : this.getCellStyle(swimlane);\n\t\n\tif (style != null)\n\t{\n\t\tvar size = parseInt(mxUtils.getValue(style,\n\t\t\tmxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE));\n\t\t\n\t\tif (mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t{\n\t\t\tresult.height = size;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.width = size;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getImage\n * \n * Returns the image URL for the given cell state. This implementation\n * returns the value stored under <mxConstants.STYLE_IMAGE> in the cell\n * style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose image URL should be returned.\n */\nmxGraph.prototype.getImage = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_IMAGE] : null;\n};\n\n/**\n * Function: getVerticalAlign\n * \n * Returns the vertical alignment for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_VERTICAL_ALIGN> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose vertical alignment should be\n * returned.\n */\nmxGraph.prototype.getVerticalAlign = function(state)\n{\n\treturn (state != null && state.style != null) ?\n\t\t(state.style[mxConstants.STYLE_VERTICAL_ALIGN] ||\n\t\tmxConstants.ALIGN_MIDDLE) : null;\n};\n\n/**\n * Function: getIndicatorColor\n * \n * Returns the indicator color for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_COLOR> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator color should be\n * returned.\n */\nmxGraph.prototype.getIndicatorColor = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_COLOR] : null;\n};\n\n/**\n * Function: getIndicatorGradientColor\n * \n * Returns the indicator gradient color for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_GRADIENTCOLOR> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator gradient color should be\n * returned.\n */\nmxGraph.prototype.getIndicatorGradientColor = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_GRADIENTCOLOR] : null;\n};\n\n/**\n * Function: getIndicatorShape\n * \n * Returns the indicator shape for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_SHAPE> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator shape should be returned.\n */\nmxGraph.prototype.getIndicatorShape = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_SHAPE] : null;\n};\n\n/**\n * Function: getIndicatorImage\n * \n * Returns the indicator image for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_IMAGE> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator image should be returned.\n */\nmxGraph.prototype.getIndicatorImage = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_IMAGE] : null;\n};\n\n/**\n * Function: getBorder\n * \n * Returns the value of <border>.\n */\nmxGraph.prototype.getBorder = function()\n{\n\treturn this.border;\n};\n\n/**\n * Function: setBorder\n * \n * Sets the value of <border>.\n * \n * Parameters:\n * \n * value - Positive integer that represents the border to be used.\n */\nmxGraph.prototype.setBorder = function(value)\n{\n\tthis.border = value;\n};\n\n/**\n * Function: isSwimlane\n * \n * Returns true if the given cell is a swimlane in the graph. A swimlane is\n * a container cell with some specific behaviour. This implementation\n * checks if the shape associated with the given cell is a <mxSwimlane>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be checked.\n */\nmxGraph.prototype.isSwimlane = function (cell)\n{\n\tif (cell != null)\n\t{\n\t\tif (this.model.getParent(cell) != this.model.getRoot())\n\t\t{\n\t\t\tvar state = this.view.getState(cell);\n\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\t\t\tif (style != null && !this.model.isEdge(cell))\n\t\t\t{\n\t\t\t\treturn style[mxConstants.STYLE_SHAPE] == mxConstants.SHAPE_SWIMLANE;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Group: Graph behaviour\n */\n\n/**\n * Function: isResizeContainer\n * \n * Returns <resizeContainer>.\n */\nmxGraph.prototype.isResizeContainer = function()\n{\n\treturn this.resizeContainer;\n};\n\n/**\n * Function: setResizeContainer\n * \n * Sets <resizeContainer>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the container should be resized.\n */\nmxGraph.prototype.setResizeContainer = function(value)\n{\n\tthis.resizeContainer = value;\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if the graph is <enabled>.\n */\nmxGraph.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Specifies if the graph should allow any interactions. This\n * implementation updates <enabled>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should be enabled.\n */\nmxGraph.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isEscapeEnabled\n * \n * Returns <escapeEnabled>.\n */\nmxGraph.prototype.isEscapeEnabled = function()\n{\n\treturn this.escapeEnabled;\n};\n\n/**\n * Function: setEscapeEnabled\n * \n * Sets <escapeEnabled>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if escape should be enabled.\n */\nmxGraph.prototype.setEscapeEnabled = function(value)\n{\n\tthis.escapeEnabled = value;\n};\n\n/**\n * Function: isInvokesStopCellEditing\n * \n * Returns <invokesStopCellEditing>.\n */\nmxGraph.prototype.isInvokesStopCellEditing = function()\n{\n\treturn this.invokesStopCellEditing;\n};\n\n/**\n * Function: setInvokesStopCellEditing\n * \n * Sets <invokesStopCellEditing>.\n */\nmxGraph.prototype.setInvokesStopCellEditing = function(value)\n{\n\tthis.invokesStopCellEditing = value;\n};\n\n/**\n * Function: isEnterStopsCellEditing\n * \n * Returns <enterStopsCellEditing>.\n */\nmxGraph.prototype.isEnterStopsCellEditing = function()\n{\n\treturn this.enterStopsCellEditing;\n};\n\n/**\n * Function: setEnterStopsCellEditing\n * \n * Sets <enterStopsCellEditing>.\n */\nmxGraph.prototype.setEnterStopsCellEditing = function(value)\n{\n\tthis.enterStopsCellEditing = value;\n};\n\n/**\n * Function: isCellLocked\n * \n * Returns true if the given cell may not be moved, sized, bended,\n * disconnected, edited or selected. This implementation returns true for\n * all vertices with a relative geometry if <locked> is false.\n * \n * Parameters:\n * \n * cell - <mxCell> whose locked state should be returned.\n */\nmxGraph.prototype.isCellLocked = function(cell)\n{\n\tvar geometry = this.model.getGeometry(cell);\n\t\n\treturn this.isCellsLocked() || (geometry != null && this.model.isVertex(cell) && geometry.relative);\n};\n\n/**\n * Function: isCellsLocked\n * \n * Returns true if the given cell may not be moved, sized, bended,\n * disconnected, edited or selected. This implementation returns true for\n * all vertices with a relative geometry if <locked> is false.\n * \n * Parameters:\n * \n * cell - <mxCell> whose locked state should be returned.\n */\nmxGraph.prototype.isCellsLocked = function()\n{\n\treturn this.cellsLocked;\n};\n\n/**\n * Function: setCellsLocked\n * \n * Sets if any cell may be moved, sized, bended, disconnected, edited or\n * selected.\n * \n * Parameters:\n * \n * value - Boolean that defines the new value for <cellsLocked>.\n */\nmxGraph.prototype.setCellsLocked = function(value)\n{\n\tthis.cellsLocked = value;\n};\n\n/**\n * Function: getCloneableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getCloneableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellCloneable(cell);\n\t}));\n};\n\n/**\n * Function: isCellCloneable\n * \n * Returns true if the given cell is cloneable. This implementation returns\n * <isCellsCloneable> for all cells unless a cell style specifies\n * <mxConstants.STYLE_CLONEABLE> to be 0. \n * \n * Parameters:\n * \n * cell - Optional <mxCell> whose cloneable state should be returned.\n */\nmxGraph.prototype.isCellCloneable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn this.isCellsCloneable() && style[mxConstants.STYLE_CLONEABLE] != 0;\n};\n\n/**\n * Function: isCellsCloneable\n * \n * Returns <cellsCloneable>, that is, if the graph allows cloning of cells\n * by using control-drag.\n */\nmxGraph.prototype.isCellsCloneable = function()\n{\n\treturn this.cellsCloneable;\n};\n\n/**\n * Function: setCellsCloneable\n * \n * Specifies if the graph should allow cloning of cells by holding down the\n * control key while cells are being moved. This implementation updates\n * <cellsCloneable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should be cloneable.\n */\nmxGraph.prototype.setCellsCloneable = function(value)\n{\n\tthis.cellsCloneable = value;\n};\n\n/**\n * Function: getExportableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getExportableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.canExportCell(cell);\n\t}));\n};\n\n/**\n * Function: canExportCell\n * \n * Returns true if the given cell may be exported to the clipboard. This\n * implementation returns <exportEnabled> for all cells.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to be exported.\n */\nmxGraph.prototype.canExportCell = function(cell)\n{\n\treturn this.exportEnabled;\n};\n\n/**\n * Function: getImportableCells\n * \n * Returns the cells which may be imported in the given array of cells.\n */\nmxGraph.prototype.getImportableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.canImportCell(cell);\n\t}));\n};\n\n/**\n * Function: canImportCell\n * \n * Returns true if the given cell may be imported from the clipboard.\n * This implementation returns <importEnabled> for all cells.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to be imported.\n */\nmxGraph.prototype.canImportCell = function(cell)\n{\n\treturn this.importEnabled;\n};\n\n/**\n * Function: isCellSelectable\n *\n * Returns true if the given cell is selectable. This implementation\n * returns <cellsSelectable>.\n * \n * To add a new style for making cells (un)selectable, use the following code.\n * \n * (code)\n * mxGraph.prototype.isCellSelectable = function(cell)\n * {\n *   var state = this.view.getState(cell);\n *   var style = (state != null) ? state.style : this.getCellStyle(cell);\n *   \n *   return this.isCellsSelectable() && !this.isCellLocked(cell) && style['selectable'] != 0;\n * };\n * (end)\n * \n * You can then use the new style as shown in this example.\n * \n * (code)\n * graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30, 'selectable=0');\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose selectable state should be returned.\n */\nmxGraph.prototype.isCellSelectable = function(cell)\n{\n\treturn this.isCellsSelectable();\n};\n\n/**\n * Function: isCellsSelectable\n *\n * Returns <cellsSelectable>.\n */\nmxGraph.prototype.isCellsSelectable = function()\n{\n\treturn this.cellsSelectable;\n};\n\n/**\n * Function: setCellsSelectable\n *\n * Sets <cellsSelectable>.\n */\nmxGraph.prototype.setCellsSelectable = function(value)\n{\n\tthis.cellsSelectable = value;\n};\n\n/**\n * Function: getDeletableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getDeletableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellDeletable(cell);\n\t}));\n};\n\n/**\n * Function: isCellDeletable\n *\n * Returns true if the given cell is moveable. This returns\n * <cellsDeletable> for all given cells if a cells style does not specify\n * <mxConstants.STYLE_DELETABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose deletable state should be returned.\n */\nmxGraph.prototype.isCellDeletable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsDeletable() && style[mxConstants.STYLE_DELETABLE] != 0;\n};\n\n/**\n * Function: isCellsDeletable\n *\n * Returns <cellsDeletable>.\n */\nmxGraph.prototype.isCellsDeletable = function()\n{\n\treturn this.cellsDeletable;\n};\n\n/**\n * Function: setCellsDeletable\n * \n * Sets <cellsDeletable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow deletion of cells.\n */\nmxGraph.prototype.setCellsDeletable = function(value)\n{\n\tthis.cellsDeletable = value;\n};\n\n/**\n * Function: isLabelMovable\n *\n * Returns true if the given edges's label is moveable. This returns\n * <movable> for all given cells if <isLocked> does not return true\n * for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be moved.\n */\nmxGraph.prototype.isLabelMovable = function(cell)\n{\n\treturn !this.isCellLocked(cell) &&\n\t\t((this.model.isEdge(cell) && this.edgeLabelsMovable) ||\n\t\t(this.model.isVertex(cell) && this.vertexLabelsMovable));\n};\n\n/**\n * Function: isCellRotatable\n *\n * Returns true if the given cell is rotatable. This returns true for the given\n * cell if its style does not specify <mxConstants.STYLE_ROTATABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose rotatable state should be returned.\n */\nmxGraph.prototype.isCellRotatable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn style[mxConstants.STYLE_ROTATABLE] != 0;\n};\n\n/**\n * Function: getMovableCells\n * \n * Returns the cells which are movable in the given array of cells.\n */\nmxGraph.prototype.getMovableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellMovable(cell);\n\t}));\n};\n\n/**\n * Function: isCellMovable\n *\n * Returns true if the given cell is moveable. This returns <cellsMovable>\n * for all given cells if <isCellLocked> does not return true for the given\n * cell and its style does not specify <mxConstants.STYLE_MOVABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose movable state should be returned.\n */\nmxGraph.prototype.isCellMovable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsMovable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_MOVABLE] != 0;\n};\n\n/**\n * Function: isCellsMovable\n *\n * Returns <cellsMovable>.\n */\nmxGraph.prototype.isCellsMovable = function()\n{\n\treturn this.cellsMovable;\n};\n\n/**\n * Function: setCellsMovable\n * \n * Specifies if the graph should allow moving of cells. This implementation\n * updates <cellsMsovable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow moving of cells.\n */\nmxGraph.prototype.setCellsMovable = function(value)\n{\n\tthis.cellsMovable = value;\n};\n\n/**\n * Function: isGridEnabled\n *\n * Returns <gridEnabled> as a boolean.\n */\nmxGraph.prototype.isGridEnabled = function()\n{\n\treturn this.gridEnabled;\n};\n\n/**\n * Function: setGridEnabled\n * \n * Specifies if the grid should be enabled.\n * \n * Parameters:\n * \n * value - Boolean indicating if the grid should be enabled.\n */\nmxGraph.prototype.setGridEnabled = function(value)\n{\n\tthis.gridEnabled = value;\n};\n\n/**\n * Function: isPortsEnabled\n *\n * Returns <portsEnabled> as a boolean.\n */\nmxGraph.prototype.isPortsEnabled = function()\n{\n\treturn this.portsEnabled;\n};\n\n/**\n * Function: setPortsEnabled\n * \n * Specifies if the ports should be enabled.\n * \n * Parameters:\n * \n * value - Boolean indicating if the ports should be enabled.\n */\nmxGraph.prototype.setPortsEnabled = function(value)\n{\n\tthis.portsEnabled = value;\n};\n\n/**\n * Function: getGridSize\n *\n * Returns <gridSize>.\n */\nmxGraph.prototype.getGridSize = function()\n{\n\treturn this.gridSize;\n};\n\n/**\n * Function: setGridSize\n * \n * Sets <gridSize>.\n */\nmxGraph.prototype.setGridSize = function(value)\n{\n\tthis.gridSize = value;\n};\n\n/**\n * Function: getTolerance\n *\n * Returns <tolerance>.\n */\nmxGraph.prototype.getTolerance = function()\n{\n\treturn this.tolerance;\n};\n\n/**\n * Function: setTolerance\n * \n * Sets <tolerance>.\n */\nmxGraph.prototype.setTolerance = function(value)\n{\n\tthis.tolerance = value;\n};\n\n/**\n * Function: isVertexLabelsMovable\n *\n * Returns <vertexLabelsMovable>.\n */\nmxGraph.prototype.isVertexLabelsMovable = function()\n{\n\treturn this.vertexLabelsMovable;\n};\n\n/**\n * Function: setVertexLabelsMovable\n * \n * Sets <vertexLabelsMovable>.\n */\nmxGraph.prototype.setVertexLabelsMovable = function(value)\n{\n\tthis.vertexLabelsMovable = value;\n};\n\n/**\n * Function: isEdgeLabelsMovable\n *\n * Returns <edgeLabelsMovable>.\n */\nmxGraph.prototype.isEdgeLabelsMovable = function()\n{\n\treturn this.edgeLabelsMovable;\n};\n\n/**\n * Function: isEdgeLabelsMovable\n * \n * Sets <edgeLabelsMovable>.\n */\nmxGraph.prototype.setEdgeLabelsMovable = function(value)\n{\n\tthis.edgeLabelsMovable = value;\n};\n\n/**\n * Function: isSwimlaneNesting\n *\n * Returns <swimlaneNesting> as a boolean.\n */\nmxGraph.prototype.isSwimlaneNesting = function()\n{\n\treturn this.swimlaneNesting;\n};\n\n/**\n * Function: setSwimlaneNesting\n * \n * Specifies if swimlanes can be nested by drag and drop. This is only\n * taken into account if dropEnabled is true.\n * \n * Parameters:\n * \n * value - Boolean indicating if swimlanes can be nested.\n */\nmxGraph.prototype.setSwimlaneNesting = function(value)\n{\n\tthis.swimlaneNesting = value;\n};\n\n/**\n * Function: isSwimlaneSelectionEnabled\n *\n * Returns <swimlaneSelectionEnabled> as a boolean.\n */\nmxGraph.prototype.isSwimlaneSelectionEnabled = function()\n{\n\treturn this.swimlaneSelectionEnabled;\n};\n\n/**\n * Function: setSwimlaneSelectionEnabled\n * \n * Specifies if swimlanes should be selected if the mouse is released\n * over their content area.\n * \n * Parameters:\n * \n * value - Boolean indicating if swimlanes content areas\n * should be selected when the mouse is released over them.\n */\nmxGraph.prototype.setSwimlaneSelectionEnabled = function(value)\n{\n\tthis.swimlaneSelectionEnabled = value;\n};\n\n/**\n * Function: isMultigraph\n *\n * Returns <multigraph> as a boolean.\n */\nmxGraph.prototype.isMultigraph = function()\n{\n\treturn this.multigraph;\n};\n\n/**\n * Function: setMultigraph\n * \n * Specifies if the graph should allow multiple connections between the\n * same pair of vertices.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph allows multiple connections\n * between the same pair of vertices.\n */\nmxGraph.prototype.setMultigraph = function(value)\n{\n\tthis.multigraph = value;\n};\n\n/**\n * Function: isAllowLoops\n *\n * Returns <allowLoops> as a boolean.\n */\nmxGraph.prototype.isAllowLoops = function()\n{\n\treturn this.allowLoops;\n};\n\n/**\n * Function: setAllowDanglingEdges\n * \n * Specifies if dangling edges are allowed, that is, if edges are allowed\n * that do not have a source and/or target terminal defined.\n * \n * Parameters:\n * \n * value - Boolean indicating if dangling edges are allowed.\n */\nmxGraph.prototype.setAllowDanglingEdges = function(value)\n{\n\tthis.allowDanglingEdges = value;\n};\n\n/**\n * Function: isAllowDanglingEdges\n *\n * Returns <allowDanglingEdges> as a boolean.\n */\nmxGraph.prototype.isAllowDanglingEdges = function()\n{\n\treturn this.allowDanglingEdges;\n};\n\n/**\n * Function: setConnectableEdges\n * \n * Specifies if edges should be connectable.\n * \n * Parameters:\n * \n * value - Boolean indicating if edges should be connectable.\n */\nmxGraph.prototype.setConnectableEdges = function(value)\n{\n\tthis.connectableEdges = value;\n};\n\n/**\n * Function: isConnectableEdges\n *\n * Returns <connectableEdges> as a boolean.\n */\nmxGraph.prototype.isConnectableEdges = function()\n{\n\treturn this.connectableEdges;\n};\n\n/**\n * Function: setCloneInvalidEdges\n * \n * Specifies if edges should be inserted when cloned but not valid wrt.\n * <getEdgeValidationError>. If false such edges will be silently ignored.\n * \n * Parameters:\n * \n * value - Boolean indicating if cloned invalid edges should be\n * inserted into the graph or ignored.\n */\nmxGraph.prototype.setCloneInvalidEdges = function(value)\n{\n\tthis.cloneInvalidEdges = value;\n};\n\n/**\n * Function: isCloneInvalidEdges\n *\n * Returns <cloneInvalidEdges> as a boolean.\n */\nmxGraph.prototype.isCloneInvalidEdges = function()\n{\n\treturn this.cloneInvalidEdges;\n};\n\n/**\n * Function: setAllowLoops\n * \n * Specifies if loops are allowed.\n * \n * Parameters:\n * \n * value - Boolean indicating if loops are allowed.\n */\nmxGraph.prototype.setAllowLoops = function(value)\n{\n\tthis.allowLoops = value;\n};\n\n/**\n * Function: isDisconnectOnMove\n *\n * Returns <disconnectOnMove> as a boolean.\n */\nmxGraph.prototype.isDisconnectOnMove = function()\n{\n\treturn this.disconnectOnMove;\n};\n\n/**\n * Function: setDisconnectOnMove\n * \n * Specifies if edges should be disconnected when moved. (Note: Cloned\n * edges are always disconnected.)\n * \n * Parameters:\n * \n * value - Boolean indicating if edges should be disconnected\n * when moved.\n */\nmxGraph.prototype.setDisconnectOnMove = function(value)\n{\n\tthis.disconnectOnMove = value;\n};\n\n/**\n * Function: isDropEnabled\n *\n * Returns <dropEnabled> as a boolean.\n */\nmxGraph.prototype.isDropEnabled = function()\n{\n\treturn this.dropEnabled;\n};\n\n/**\n * Function: setDropEnabled\n * \n * Specifies if the graph should allow dropping of cells onto or into other\n * cells.\n * \n * Parameters:\n * \n * dropEnabled - Boolean indicating if the graph should allow dropping\n * of cells into other cells.\n */\nmxGraph.prototype.setDropEnabled = function(value)\n{\n\tthis.dropEnabled = value;\n};\n\n/**\n * Function: isSplitEnabled\n *\n * Returns <splitEnabled> as a boolean.\n */\nmxGraph.prototype.isSplitEnabled = function()\n{\n\treturn this.splitEnabled;\n};\n\n/**\n * Function: setSplitEnabled\n * \n * Specifies if the graph should allow dropping of cells onto or into other\n * cells.\n * \n * Parameters:\n * \n * dropEnabled - Boolean indicating if the graph should allow dropping\n * of cells into other cells.\n */\nmxGraph.prototype.setSplitEnabled = function(value)\n{\n\tthis.splitEnabled = value;\n};\n\n/**\n * Function: isCellResizable\n *\n * Returns true if the given cell is resizable. This returns\n * <cellsResizable> for all given cells if <isCellLocked> does not return\n * true for the given cell and its style does not specify\n * <mxConstants.STYLE_RESIZABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose resizable state should be returned.\n */\nmxGraph.prototype.isCellResizable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn this.isCellsResizable() && !this.isCellLocked(cell) &&\n\t\tmxUtils.getValue(style, mxConstants.STYLE_RESIZABLE, '1') != '0';\n};\n\n/**\n * Function: isCellsResizable\n *\n * Returns <cellsResizable>.\n */\nmxGraph.prototype.isCellsResizable = function()\n{\n\treturn this.cellsResizable;\n};\n\n/**\n * Function: setCellsResizable\n * \n * Specifies if the graph should allow resizing of cells. This\n * implementation updates <cellsResizable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow resizing of\n * cells.\n */\nmxGraph.prototype.setCellsResizable = function(value)\n{\n\tthis.cellsResizable = value;\n};\n\n/**\n * Function: isTerminalPointMovable\n *\n * Returns true if the given terminal point is movable. This is independent\n * from <isCellConnectable> and <isCellDisconnectable> and controls if terminal\n * points can be moved in the graph if the edge is not connected. Note that it\n * is required for this to return true to connect unconnected edges. This\n * implementation returns true.\n * \n * Parameters:\n * \n * cell - <mxCell> whose terminal point should be moved.\n * source - Boolean indicating if the source or target terminal should be moved.\n */\nmxGraph.prototype.isTerminalPointMovable = function(cell, source)\n{\n\treturn true;\n};\n\n/**\n * Function: isCellBendable\n *\n * Returns true if the given cell is bendable. This returns <cellsBendable>\n * for all given cells if <isLocked> does not return true for the given\n * cell and its style does not specify <mxConstants.STYLE_BENDABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bendable state should be returned.\n */\nmxGraph.prototype.isCellBendable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsBendable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_BENDABLE] != 0;\n};\n\n/**\n * Function: isCellsBendable\n *\n * Returns <cellsBenadable>.\n */\nmxGraph.prototype.isCellsBendable = function()\n{\n\treturn this.cellsBendable;\n};\n\n/**\n * Function: setCellsBendable\n * \n * Specifies if the graph should allow bending of edges. This\n * implementation updates <bendable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow bending of\n * edges.\n */\nmxGraph.prototype.setCellsBendable = function(value)\n{\n\tthis.cellsBendable = value;\n};\n\n/**\n * Function: isCellEditable\n *\n * Returns true if the given cell is editable. This returns <cellsEditable> for\n * all given cells if <isCellLocked> does not return true for the given cell\n * and its style does not specify <mxConstants.STYLE_EDITABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose editable state should be returned.\n */\nmxGraph.prototype.isCellEditable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsEditable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_EDITABLE] != 0;\n};\n\n/**\n * Function: isCellsEditable\n *\n * Returns <cellsEditable>.\n */\nmxGraph.prototype.isCellsEditable = function()\n{\n\treturn this.cellsEditable;\n};\n\n/**\n * Function: setCellsEditable\n * \n * Specifies if the graph should allow in-place editing for cell labels.\n * This implementation updates <cellsEditable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow in-place\n * editing.\n */\nmxGraph.prototype.setCellsEditable = function(value)\n{\n\tthis.cellsEditable = value;\n};\n\n/**\n * Function: isCellDisconnectable\n *\n * Returns true if the given cell is disconnectable from the source or\n * target terminal. This returns <isCellsDisconnectable> for all given\n * cells if <isCellLocked> does not return true for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose disconnectable state should be returned.\n * terminal - <mxCell> that represents the source or target terminal.\n * source - Boolean indicating if the source or target terminal is to be\n * disconnected.\n */\nmxGraph.prototype.isCellDisconnectable = function(cell, terminal, source)\n{\n\treturn this.isCellsDisconnectable() && !this.isCellLocked(cell);\n};\n\n/**\n * Function: isCellsDisconnectable\n *\n * Returns <cellsDisconnectable>.\n */\nmxGraph.prototype.isCellsDisconnectable = function()\n{\n\treturn this.cellsDisconnectable;\n};\n\n/**\n * Function: setCellsDisconnectable\n *\n * Sets <cellsDisconnectable>.\n */\nmxGraph.prototype.setCellsDisconnectable = function(value)\n{\n\tthis.cellsDisconnectable = value;\n};\n\n/**\n * Function: isValidSource\n * \n * Returns true if the given cell is a valid source for new connections.\n * This implementation returns true for all non-null values and is\n * called by is called by <isValidConnection>.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents a possible source or null.\n */\nmxGraph.prototype.isValidSource = function(cell)\n{\n\treturn (cell == null && this.allowDanglingEdges) ||\n\t\t(cell != null && (!this.model.isEdge(cell) ||\n\t\tthis.connectableEdges) && this.isCellConnectable(cell));\n};\n\t\n/**\n * Function: isValidTarget\n * \n * Returns <isValidSource> for the given cell. This is called by\n * <isValidConnection>.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents a possible target or null.\n */\nmxGraph.prototype.isValidTarget = function(cell)\n{\n\treturn this.isValidSource(cell);\n};\n\n/**\n * Function: isValidConnection\n * \n * Returns true if the given target cell is a valid target for source.\n * This is a boolean implementation for not allowing connections between\n * certain pairs of vertices and is called by <getEdgeValidationError>.\n * This implementation returns true if <isValidSource> returns true for\n * the source and <isValidTarget> returns true for the target.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source cell.\n * target - <mxCell> that represents the target cell.\n */\nmxGraph.prototype.isValidConnection = function(source, target)\n{\n\treturn this.isValidSource(source) && this.isValidTarget(target);\n};\n\n/**\n * Function: setConnectable\n * \n * Specifies if the graph should allow new connections. This implementation\n * updates <mxConnectionHandler.enabled> in <connectionHandler>.\n * \n * Parameters:\n * \n * connectable - Boolean indicating if new connections should be allowed.\n */\nmxGraph.prototype.setConnectable = function(connectable)\n{\n\tthis.connectionHandler.setEnabled(connectable);\n};\n\t\n/**\n * Function: isConnectable\n * \n * Returns true if the <connectionHandler> is enabled.\n */\nmxGraph.prototype.isConnectable = function(connectable)\n{\n\treturn this.connectionHandler.isEnabled();\n};\n\n/**\n * Function: setTooltips\n * \n * Specifies if tooltips should be enabled. This implementation updates\n * <mxTooltipHandler.enabled> in <tooltipHandler>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if tooltips should be enabled.\n */\nmxGraph.prototype.setTooltips = function (enabled)\n{\n\tthis.tooltipHandler.setEnabled(enabled);\n};\n\n/**\n * Function: setPanning\n * \n * Specifies if panning should be enabled. This implementation updates\n * <mxPanningHandler.panningEnabled> in <panningHandler>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if panning should be enabled.\n */\nmxGraph.prototype.setPanning = function(enabled)\n{\n\tthis.panningHandler.panningEnabled = enabled;\n};\n\n/**\n * Function: isEditing\n * \n * Returns true if the given cell is currently being edited.\n * If no cell is specified then this returns true if any\n * cell is currently being edited.\n *\n * Parameters:\n * \n * cell - <mxCell> that should be checked.\n */\nmxGraph.prototype.isEditing = function(cell)\n{\n\tif (this.cellEditor != null)\n\t{\n\t\tvar editingCell = this.cellEditor.getEditingCell();\n\t\t\n\t\treturn (cell == null) ? editingCell != null : cell == editingCell;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: isAutoSizeCell\n * \n * Returns true if the size of the given cell should automatically be\n * updated after a change of the label. This implementation returns\n * <autoSizeCells> or checks if the cell style does specify\n * <mxConstants.STYLE_AUTOSIZE> to be 1.\n * \n * Parameters:\n * \n * cell - <mxCell> that should be resized.\n */\nmxGraph.prototype.isAutoSizeCell = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isAutoSizeCells() || style[mxConstants.STYLE_AUTOSIZE] == 1;\n};\n\n/**\n * Function: isAutoSizeCells\n * \n * Returns <autoSizeCells>.\n */\nmxGraph.prototype.isAutoSizeCells = function()\n{\n\treturn this.autoSizeCells;\n};\n\n/**\n * Function: setAutoSizeCells\n * \n * Specifies if cell sizes should be automatically updated after a label\n * change. This implementation sets <autoSizeCells> to the given parameter.\n * To update the size of cells when the cells are added, set\n * <autoSizeCellsOnAdd> to true.\n * \n * Parameters:\n * \n * value - Boolean indicating if cells should be resized\n * automatically.\n */\nmxGraph.prototype.setAutoSizeCells = function(value)\n{\n\tthis.autoSizeCells = value;\n};\n\n/**\n * Function: isExtendParent\n * \n * Returns true if the parent of the given cell should be extended if the\n * child has been resized so that it overlaps the parent. This\n * implementation returns <isExtendParents> if the cell is not an edge.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.isExtendParent = function(cell)\n{\n\treturn !this.getModel().isEdge(cell) && this.isExtendParents();\n};\n\n/**\n * Function: isExtendParents\n * \n * Returns <extendParents>.\n */\nmxGraph.prototype.isExtendParents = function()\n{\n\treturn this.extendParents;\n};\n\n/**\n * Function: setExtendParents\n * \n * Sets <extendParents>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParents>.\n */\nmxGraph.prototype.setExtendParents = function(value)\n{\n\tthis.extendParents = value;\n};\n\n/**\n * Function: isExtendParentsOnAdd\n * \n * Returns <extendParentsOnAdd>.\n */\nmxGraph.prototype.isExtendParentsOnAdd = function(cell)\n{\n\treturn this.extendParentsOnAdd;\n};\n\n/**\n * Function: setExtendParentsOnAdd\n * \n * Sets <extendParentsOnAdd>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParentsOnAdd>.\n */\nmxGraph.prototype.setExtendParentsOnAdd = function(value)\n{\n\tthis.extendParentsOnAdd = value;\n};\n\n/**\n * Function: isExtendParentsOnMove\n * \n * Returns <extendParentsOnMove>.\n */\nmxGraph.prototype.isExtendParentsOnMove = function()\n{\n\treturn this.extendParentsOnMove;\n};\n\n/**\n * Function: setExtendParentsOnMove\n * \n * Sets <extendParentsOnMove>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParentsOnAdd>.\n */\nmxGraph.prototype.setExtendParentsOnMove = function(value)\n{\n\tthis.extendParentsOnMove = value;\n};\n\n/**\n * Function: isRecursiveResize\n * \n * Returns <recursiveResize>.\n * \n * Parameters:\n * \n * state - <mxCellState> that is being resized.\n */\nmxGraph.prototype.isRecursiveResize = function(state)\n{\n\treturn this.recursiveResize;\n};\n\n/**\n * Function: setRecursiveResize\n * \n * Sets <recursiveResize>.\n * \n * Parameters:\n * \n * value - New boolean value for <recursiveResize>.\n */\nmxGraph.prototype.setRecursiveResize = function(value)\n{\n\tthis.recursiveResize = value;\n};\n\n/**\n * Function: isConstrainChild\n * \n * Returns true if the given cell should be kept inside the bounds of its\n * parent according to the rules defined by <getOverlap> and\n * <isAllowOverlapParent>. This implementation returns false for all children\n * of edges and <isConstrainChildren> otherwise.\n * \n * Parameters:\n * \n * cell - <mxCell> that should be constrained.\n */\nmxGraph.prototype.isConstrainChild = function(cell)\n{\n\treturn this.isConstrainChildren() && !this.getModel().isEdge(this.getModel().getParent(cell));\n};\n\n/**\n * Function: isConstrainChildren\n * \n * Returns <constrainChildren>.\n */\nmxGraph.prototype.isConstrainChildren = function()\n{\n\treturn this.constrainChildren;\n};\n\n/**\n * Function: setConstrainChildren\n * \n * Sets <constrainChildren>.\n */\nmxGraph.prototype.setConstrainChildren = function(value)\n{\n\tthis.constrainChildren = value;\n};\n\n/**\n * Function: isConstrainRelativeChildren\n * \n * Returns <constrainRelativeChildren>.\n */\nmxGraph.prototype.isConstrainRelativeChildren = function()\n{\n\treturn this.constrainRelativeChildren;\n};\n\n/**\n * Function: setConstrainRelativeChildren\n * \n * Sets <constrainRelativeChildren>.\n */\nmxGraph.prototype.setConstrainRelativeChildren = function(value)\n{\n\tthis.constrainRelativeChildren = value;\n};\n\n/**\n * Function: isConstrainChildren\n * \n * Returns <allowNegativeCoordinates>.\n */\nmxGraph.prototype.isAllowNegativeCoordinates = function()\n{\n\treturn this.allowNegativeCoordinates;\n};\n\n/**\n * Function: setConstrainChildren\n * \n * Sets <allowNegativeCoordinates>.\n */\nmxGraph.prototype.setAllowNegativeCoordinates = function(value)\n{\n\tthis.allowNegativeCoordinates = value;\n};\n\n/**\n * Function: getOverlap\n * \n * Returns a decimal number representing the amount of the width and height\n * of the given cell that is allowed to overlap its parent. A value of 0\n * means all children must stay inside the parent, 1 means the child is\n * allowed to be placed outside of the parent such that it touches one of\n * the parents sides. If <isAllowOverlapParent> returns false for the given\n * cell, then this method returns 0.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the overlap ratio should be returned.\n */\nmxGraph.prototype.getOverlap = function(cell)\n{\n\treturn (this.isAllowOverlapParent(cell)) ? this.defaultOverlap : 0;\n};\n\t\n/**\n * Function: isAllowOverlapParent\n * \n * Returns true if the given cell is allowed to be placed outside of the\n * parents area.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the child to be checked.\n */\nmxGraph.prototype.isAllowOverlapParent = function(cell)\n{\n\treturn false;\n};\n\n/**\n * Function: getFoldableCells\n * \n * Returns the cells which are movable in the given array of cells.\n */\nmxGraph.prototype.getFoldableCells = function(cells, collapse)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellFoldable(cell, collapse);\n\t}));\n};\n\n/**\n * Function: isCellFoldable\n * \n * Returns true if the given cell is foldable. This implementation\n * returns true if the cell has at least one child and its style\n * does not specify <mxConstants.STYLE_FOLDABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose foldable state should be returned.\n */\nmxGraph.prototype.isCellFoldable = function(cell, collapse)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.model.getChildCount(cell) > 0 && style[mxConstants.STYLE_FOLDABLE] != 0;\n};\n\n/**\n * Function: isValidDropTarget\n *\n * Returns true if the given cell is a valid drop target for the specified\n * cells. If <splitEnabled> is true then this returns <isSplitTarget> for\n * the given arguments else it returns true if the cell is not collapsed\n * and its child count is greater than 0.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the possible drop target.\n * cells - <mxCells> that should be dropped into the target.\n * evt - Mouseevent that triggered the invocation.\n */\nmxGraph.prototype.isValidDropTarget = function(cell, cells, evt)\n{\n\treturn cell != null && ((this.isSplitEnabled() &&\n\t\tthis.isSplitTarget(cell, cells, evt)) || (!this.model.isEdge(cell) &&\n\t\t(this.isSwimlane(cell) || (this.model.getChildCount(cell) > 0 &&\n\t\t!this.isCellCollapsed(cell)))));\n};\n\n/**\n * Function: isSplitTarget\n *\n * Returns true if the given edge may be splitted into two edges with the\n * given cell as a new terminal between the two.\n * \n * Parameters:\n * \n * target - <mxCell> that represents the edge to be splitted.\n * cells - <mxCells> that should split the edge.\n * evt - Mouseevent that triggered the invocation.\n */\nmxGraph.prototype.isSplitTarget = function(target, cells, evt)\n{\n\tif (this.model.isEdge(target) && cells != null && cells.length == 1 &&\n\t\tthis.isCellConnectable(cells[0]) && this.getEdgeValidationError(target,\n\t\t\tthis.model.getTerminal(target, true), cells[0]) == null)\n\t{\n\t\tvar src = this.model.getTerminal(target, true);\n\t\tvar trg = this.model.getTerminal(target, false);\n\n\t\treturn (!this.model.isAncestor(cells[0], src) &&\n\t\t\t\t!this.model.isAncestor(cells[0], trg));\n\t}\n\n\treturn false;\n};\n\n/**\n * Function: getDropTarget\n * \n * Returns the given cell if it is a drop target for the given cells or the\n * nearest ancestor that may be used as a drop target for the given cells.\n * If the given array contains a swimlane and <swimlaneNesting> is false\n * then this always returns null. If no cell is given, then the bottommost\n * swimlane at the location of the given event is returned.\n * \n * This function should only be used if <isDropEnabled> returns true.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> which are to be dropped onto the target.\n * evt - Mouseevent for the drag and drop.\n * cell - <mxCell> that is under the mousepointer.\n * clone - Optional boolean to indicate of cells will be cloned.\n */\nmxGraph.prototype.getDropTarget = function(cells, evt, cell, clone)\n{\n\tif (!this.isSwimlaneNesting())\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.isSwimlane(cells[i]))\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar pt = mxUtils.convertPoint(this.container,\n\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\tpt.x -= this.panDx;\n\tpt.y -= this.panDy;\n\tvar swimlane = this.getSwimlaneAt(pt.x, pt.y);\n\t\n\tif (cell == null)\n\t{\n\t\tcell = swimlane;\n\t}\n\telse if (swimlane != null)\n\t{\n\t\t// Checks if the cell is an ancestor of the swimlane\n\t\t// under the mouse and uses the swimlane in that case\n\t\tvar tmp = this.model.getParent(swimlane);\n\t\t\n\t\twhile (tmp != null && this.isSwimlane(tmp) && tmp != cell)\n\t\t{\n\t\t\ttmp = this.model.getParent(tmp);\n\t\t}\n\t\t\n\t\tif (tmp == cell)\n\t\t{\n\t\t\tcell = swimlane;\n\t\t}\n\t}\n\t\n\twhile (cell != null && !this.isValidDropTarget(cell, cells, evt) &&\n\t\t!this.model.isLayer(cell))\n\t{\n\t\tcell = this.model.getParent(cell);\n\t}\n\t\n\t// Checks if parent is dropped into child if not cloning\n\tif (clone == null || !clone)\n\t{\n\t\tvar parent = cell;\n\t\t\n\t\twhile (parent != null && mxUtils.indexOf(cells, parent) < 0)\n\t\t{\n\t\t\tparent = this.model.getParent(parent);\n\t\t}\n\t}\n\n\treturn (!this.model.isLayer(cell) && parent == null) ? cell : null;\n};\n\n/**\n * Group: Cell retrieval\n */\n\n/**\n * Function: getDefaultParent\n * \n * Returns <defaultParent> or <mxGraphView.currentRoot> or the first child\n * child of <mxGraphModel.root> if both are null. The value returned by\n * this function should be used as the parent for new cells (aka default\n * layer).\n */\nmxGraph.prototype.getDefaultParent = function()\n{\n\tvar parent = this.getCurrentRoot();\n\t\n\tif (parent == null)\n\t{\n\t\tparent = this.defaultParent;\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tvar root = this.model.getRoot();\n\t\t\tparent = this.model.getChildAt(root, 0);\n\t\t}\n\t}\n\t\n\treturn parent;\n};\n\n/**\n * Function: setDefaultParent\n * \n * Sets the <defaultParent> to the given cell. Set this to null to return\n * the first child of the root in getDefaultParent.\n */\nmxGraph.prototype.setDefaultParent = function(cell)\n{\n\tthis.defaultParent = cell;\n};\n\n/**\n * Function: getSwimlane\n * \n * Returns the nearest ancestor of the given cell which is a swimlane, or\n * the given cell, if it is itself a swimlane.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the ancestor swimlane should be returned.\n */\nmxGraph.prototype.getSwimlane = function(cell)\n{\n\twhile (cell != null && !this.isSwimlane(cell))\n\t{\n\t\tcell = this.model.getParent(cell);\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: getSwimlaneAt\n * \n * Returns the bottom-most swimlane that intersects the given point (x, y)\n * in the cell hierarchy that starts at the given parent.\n * \n * Parameters:\n * \n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is <defaultParent>.\n */\nmxGraph.prototype.getSwimlaneAt = function (x, y, parent)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tif (parent != null)\n\t{\n\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = this.model.getChildAt(parent, i);\n\t\t\tvar result = this.getSwimlaneAt(x, y, child);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse if (this.isSwimlane(child))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(child);\n\t\t\t\t\n\t\t\t\tif (this.intersects(state, x, y))\n\t\t\t\t{\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getCellAt\n * \n * Returns the bottom-most cell that intersects the given point (x, y) in\n * the cell hierarchy starting at the given parent. This will also return\n * swimlanes if the given location intersects the content area of the\n * swimlane. If this is not desired, then the <hitsSwimlaneContent> may be\n * used if the returned cell is a swimlane to determine if the location\n * is inside the content area or on the actual title of the swimlane.\n * \n * Parameters:\n * \n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is current root of the view or the root of the model.\n * vertices - Optional boolean indicating if vertices should be returned.\n * Default is true.\n * edges - Optional boolean indicating if edges should be returned. Default\n * is true.\n * ignoreFn - Optional function that returns true if cell should be ignored.\n * The function is passed the cell state and the x and y parameter.\n */\nmxGraph.prototype.getCellAt = function(x, y, parent, vertices, edges, ignoreFn)\n{\n\tvertices = (vertices != null) ? vertices : true;\n\tedges = (edges != null) ? edges : true;\n\n\tif (parent == null)\n\t{\n\t\tparent = this.getCurrentRoot();\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getModel().getRoot();\n\t\t}\n\t}\n\n\tif (parent != null)\n\t{\n\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\n\t\tfor (var i = childCount - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar cell = this.model.getChildAt(parent, i);\n\t\t\tvar result = this.getCellAt(x, y, cell, vertices, edges, ignoreFn);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse if (this.isCellVisible(cell) && (edges && this.model.isEdge(cell) ||\n\t\t\t\tvertices && this.model.isVertex(cell)))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(cell);\n\n\t\t\t\tif (state != null && (ignoreFn == null || !ignoreFn(state, x, y)) &&\n\t\t\t\t\tthis.intersects(state, x, y))\n\t\t\t\t{\n\t\t\t\t\treturn cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: intersects\n * \n * Returns the bottom-most cell that intersects the given point (x, y) in\n * the cell hierarchy that starts at the given parent.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the cell state.\n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n */\nmxGraph.prototype.intersects = function(state, x, y)\n{\n\tif (state != null)\n\t{\n\t\tvar pts = state.absolutePoints;\n\n\t\tif (pts != null)\n\t\t{\n\t\t\tvar t2 = this.tolerance * this.tolerance;\n\t\t\tvar pt = pts[0];\n\t\t\t\n\t\t\tfor (var i = 1; i < pts.length; i++)\n\t\t\t{\n\t\t\t\tvar next = pts[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(pt.x, pt.y, next.x, next.y, x, y);\n\t\t\t\t\n\t\t\t\tif (dist <= t2)\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpt = next;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(x, y), cos, sin, cx);\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (mxUtils.contains(state, x, y))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: hitsSwimlaneContent\n * \n * Returns true if the given coordinate pair is inside the content\n * are of the given swimlane.\n * \n * Parameters:\n * \n * swimlane - <mxCell> that specifies the swimlane.\n * x - X-coordinate of the mouse event.\n * y - Y-coordinate of the mouse event.\n */\nmxGraph.prototype.hitsSwimlaneContent = function(swimlane, x, y)\n{\n\tvar state = this.getView().getState(swimlane);\n\tvar size = this.getStartSize(swimlane);\n\t\n\tif (state != null)\n\t{\n\t\tvar scale = this.getView().getScale();\n\t\tx -= state.x;\n\t\ty -= state.y;\n\t\t\n\t\tif (size.width > 0 && x > 0 && x > size.width * scale)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if (size.height > 0 && y > 0 && y > size.height * scale)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getChildVertices\n * \n * Returns the visible child vertices of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be returned.\n */\nmxGraph.prototype.getChildVertices = function(parent)\n{\n\treturn this.getChildCells(parent, true, false);\n};\n\t\n/**\n * Function: getChildEdges\n * \n * Returns the visible child edges of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose child vertices should be returned.\n */\nmxGraph.prototype.getChildEdges = function(parent)\n{\n\treturn this.getChildCells(parent, false, true);\n};\n\n/**\n * Function: getChildCells\n * \n * Returns the visible child vertices or edges in the given parent. If\n * vertices and edges is false, then all children are returned.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be returned.\n * vertices - Optional boolean that specifies if child vertices should\n * be returned. Default is false.\n * edges - Optional boolean that specifies if child edges should\n * be returned. Default is false.\n */\nmxGraph.prototype.getChildCells = function(parent, vertices, edges)\n{\n\tparent = (parent != null) ? parent : this.getDefaultParent();\n\tvertices = (vertices != null) ? vertices : false;\n\tedges = (edges != null) ? edges : false;\n\n\tvar cells = this.model.getChildCells(parent, vertices, edges);\n\tvar result = [];\n\n\t// Filters out the non-visible child cells\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (this.isCellVisible(cells[i]))\n\t\t{\n\t\t\tresult.push(cells[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\t\n/**\n * Function: getConnections\n * \n * Returns all visible edges connected to the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose connections should be returned.\n * parent - Optional parent of the opposite end for a connection to be\n * returned.\n */\nmxGraph.prototype.getConnections = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, true, true, false);\n};\n\t\n/**\n * Function: getIncomingEdges\n * \n * Returns the visible incoming edges for the given cell. If the optional\n * parent argument is specified, then only child edges of the given parent\n * are returned.\n * \n * Parameters:\n * \n * cell - <mxCell> whose incoming edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n */\nmxGraph.prototype.getIncomingEdges = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, true, false, false);\n};\n\t\n/**\n * Function: getOutgoingEdges\n * \n * Returns the visible outgoing edges for the given cell. If the optional\n * parent argument is specified, then only child edges of the given parent\n * are returned.\n * \n * Parameters:\n * \n * cell - <mxCell> whose outgoing edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n */\nmxGraph.prototype.getOutgoingEdges = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, false, true, false);\n};\n\t\n/**\n * Function: getEdges\n * \n * Returns the incoming and/or outgoing edges for the given cell.\n * If the optional parent argument is specified, then only edges are returned\n * where the opposite is in the given parent cell. If at least one of incoming\n * or outgoing is true, then loops are ignored, if both are false, then all\n * edges connected to the given cell are returned including loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n * incoming - Optional boolean that specifies if incoming edges should\n * be included in the result. Default is true.\n * outgoing - Optional boolean that specifies if outgoing edges should\n * be included in the result. Default is true.\n * includeLoops - Optional boolean that specifies if loops should be\n * included in the result. Default is true.\n * recurse - Optional boolean the specifies if the parent specified only \n * need be an ancestral parent, true, or the direct parent, false.\n * Default is false\n */\nmxGraph.prototype.getEdges = function(cell, parent, incoming, outgoing, includeLoops, recurse)\n{\n\tincoming = (incoming != null) ? incoming : true;\n\toutgoing = (outgoing != null) ? outgoing : true;\n\tincludeLoops = (includeLoops != null) ? includeLoops : true;\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tvar edges = [];\n\tvar isCollapsed = this.isCellCollapsed(cell);\n\tvar childCount = this.model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.model.getChildAt(cell, i);\n\n\t\tif (isCollapsed || !this.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(this.model.getEdges(child, incoming, outgoing));\n\t\t}\n\t}\n\n\tedges = edges.concat(this.model.getEdges(cell, incoming, outgoing));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar state = this.view.getState(edges[i]);\n\t\t\n\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\n\t\tif ((includeLoops && source == target) || ((source != target) && ((incoming &&\n\t\t\ttarget == cell && (parent == null || this.isValidAncestor(source, parent, recurse))) ||\n\t\t\t(outgoing && source == cell && (parent == null ||\n\t\t\t\t\tthis.isValidAncestor(target, parent, recurse))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isValidAncestor\n * \n * Returns whether or not the specified parent is a valid\n * ancestor of the specified cell, either direct or indirectly\n * based on whether ancestor recursion is enabled.\n * \n * Parameters:\n * \n * cell - <mxCell> the possible child cell\n * parent - <mxCell> the possible parent cell\n * recurse - boolean whether or not to recurse the child ancestors\n */\nmxGraph.prototype.isValidAncestor = function(cell, parent, recurse)\n{\n\treturn (recurse ? this.model.isAncestor(parent, cell) : this.model\n\t\t\t.getParent(cell) == parent);\n};\n\n/**\n * Function: getOpposites\n * \n * Returns all distinct visible opposite cells for the specified terminal\n * on the given edges.\n * \n * Parameters:\n * \n * edges - Array of <mxCells> that contains the edges whose opposite\n * terminals should be returned.\n * terminal - Terminal that specifies the end whose opposite should be\n * returned.\n * source - Optional boolean that specifies if source terminals should be\n * included in the result. Default is true.\n * targets - Optional boolean that specifies if targer terminals should be\n * included in the result. Default is true.\n */\nmxGraph.prototype.getOpposites = function(edges, terminal, sources, targets)\n{\n\tsources = (sources != null) ? sources : true;\n\ttargets = (targets != null) ? targets : true;\n\t\n\tvar terminals = [];\n\t\n\t// Fast lookup to avoid duplicates in terminals array\n\tvar dict = new mxDictionary();\n\t\n\tif (edges != null)\n\t{\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar state = this.view.getState(edges[i]);\n\t\t\t\n\t\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\t\t\t\n\t\t\t// Checks if the terminal is the source of the edge and if the\n\t\t\t// target should be stored in the result\n\t\t\tif (source == terminal && target != null && target != terminal && targets)\n\t\t\t{\n\t\t\t\tif (!dict.get(target))\n\t\t\t\t{\n\t\t\t\t\tdict.put(target, true);\n\t\t\t\t\tterminals.push(target);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Checks if the terminal is the taget of the edge and if the\n\t\t\t// source should be stored in the result\n\t\t\telse if (target == terminal && source != null && source != terminal && sources)\n\t\t\t{\n\t\t\t\tif (!dict.get(source))\n\t\t\t\t{\n\t\t\t\t\tdict.put(source, true);\n\t\t\t\t\tterminals.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn terminals;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and returns the connected edges\n * as displayed on the screen.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxGraph.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar state = this.view.getState(edges[i]);\n\t\t\n\t\tvar src = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\tvar trg = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getPointForEvent\n * \n * Returns an <mxPoint> representing the given event in the unscaled,\n * non-translated coordinate space of <container> and applies the grid.\n * \n * Parameters:\n * \n * evt - Mousevent that contains the mouse pointer location.\n * addOffset - Optional boolean that specifies if the position should be\n * offset by half of the <gridSize>. Default is true.\n */\n mxGraph.prototype.getPointForEvent = function(evt, addOffset)\n {\n\tvar p = mxUtils.convertPoint(this.container,\n\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\n\tvar s = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar off = (addOffset != false) ? this.gridSize / 2 : 0;\n\t\n\tp.x = this.snap(p.x / s - tr.x - off);\n\tp.y = this.snap(p.y / s - tr.y - off);\n\t\n\treturn p;\n };\n\n/**\n * Function: getCells\n * \n * Returns the child vertices and edges of the given parent that are contained\n * in the given rectangle. The result is added to the optional result array,\n * which is returned. If no result array is specified then a new array is\n * created and returned.\n * \n * Parameters:\n * \n * x - X-coordinate of the rectangle.\n * y - Y-coordinate of the rectangle.\n * width - Width of the rectangle.\n * height - Height of the rectangle.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is current root of the view or the root of the model.\n * result - Optional array to store the result in.\n */\nmxGraph.prototype.getCells = function(x, y, width, height, parent, result)\n{\n\tresult = (result != null) ? result : [];\n\t\n\tif (width > 0 || height > 0)\n\t{\n\t\tvar model = this.getModel();\n\t\tvar right = x + width;\n\t\tvar bottom = y + height;\n\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getCurrentRoot();\n\t\t\t\n\t\t\tif (parent == null)\n\t\t\t{\n\t\t\t\tparent = model.getRoot();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\tvar state = this.view.getState(cell);\n\t\t\t\t\n\t\t\t\tif (state != null && this.isCellVisible(cell))\n\t\t\t\t{\n\t\t\t\t\tvar deg = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0;\n\t\t\t\t\tvar box = state;\n\t\t\t\t\t\n\t\t\t\t\tif (deg != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbox = mxUtils.getBoundingBox(box, deg);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif ((model.isEdge(cell) || model.isVertex(cell)) &&\n\t\t\t\t\t\tbox.x >= x && box.y + box.height <= bottom &&\n\t\t\t\t\t\tbox.y >= y && box.x + box.width <= right)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(cell);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.getCells(x, y, width, height, cell, result);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getCellsBeyond\n * \n * Returns the children of the given parent that are contained in the\n * halfpane from the given point (x0, y0) rightwards or downwards\n * depending on rightHalfpane and bottomHalfpane.\n * \n * Parameters:\n * \n * x0 - X-coordinate of the origin.\n * y0 - Y-coordinate of the origin.\n * parent - Optional <mxCell> whose children should be checked. Default is\n * <defaultParent>.\n * rightHalfpane - Boolean indicating if the cells in the right halfpane\n * from the origin should be returned.\n * bottomHalfpane - Boolean indicating if the cells in the bottom halfpane\n * from the origin should be returned.\n */\nmxGraph.prototype.getCellsBeyond = function(x0, y0, parent, rightHalfpane, bottomHalfpane)\n{\n\tvar result = [];\n\t\n\tif (rightHalfpane || bottomHalfpane)\n\t{\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getDefaultParent();\n\t\t}\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = this.model.getChildAt(parent, i);\n\t\t\t\tvar state = this.view.getState(child);\n\t\t\t\t\n\t\t\t\tif (this.isCellVisible(child) && state != null)\n\t\t\t\t{\n\t\t\t\t\tif ((!rightHalfpane || state.x >= x0) &&\n\t\t\t\t\t\t(!bottomHalfpane || state.y >= y0))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: findTreeRoots\n * \n * Returns all children in the given parent which do not have incoming\n * edges. If the result is empty then the with the greatest difference\n * between incoming and outgoing edges is returned.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * isolate - Optional boolean that specifies if edges should be ignored if\n * the opposite end is not a child of the given parent cell. Default is\n * false.\n * invert - Optional boolean that specifies if outgoing or incoming edges\n * should be counted for a tree root. If false then outgoing edges will be\n * counted. Default is false.\n */\nmxGraph.prototype.findTreeRoots = function(parent, isolate, invert)\n{\n\tisolate = (isolate != null) ? isolate : false;\n\tinvert = (invert != null) ? invert : false;\n\tvar roots = [];\n\t\n\tif (parent != null)\n\t{\n\t\tvar model = this.getModel();\n\t\tvar childCount = model.getChildCount(parent);\n\t\tvar best = null;\n\t\tvar maxDiff = 0;\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (this.model.isVertex(cell) && this.isCellVisible(cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getConnections(cell, (isolate) ? parent : null);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < conns.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.view.getVisibleTerminal(conns[j], true);\n\n                    if (src == cell)\n                    {\n                        fanOut++;\n                    }\n                    else\n                    {\n                        fanIn++;\n                    }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((invert && fanOut == 0 && fanIn > 0) ||\n\t\t\t\t\t(!invert && fanIn == 0 && fanOut > 0))\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar diff = (invert) ? fanIn - fanOut : fanOut - fanIn;\n\t\t\t\t\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: traverse\n * \n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Example:\n * \n * (code)\n * mxLog.show();\n * var cell = graph.getSelectionCell();\n * graph.traverse(cell, false, function(vertex, edge)\n * {\n *   mxLog.debug(graph.getLabel(vertex));\n * });\n * (end)\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - Optional boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * func - Visitor function that takes the current vertex and the incoming\n * edge as arguments. The traversal stops if the function returns false.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * visited - Optional <mxDictionary> from cells to true for the visited cells.\n * inverse - Optional boolean to traverse in inverse direction. Default is false.\n * This is ignored if directed is false.\n */\nmxGraph.prototype.traverse = function(vertex, directed, func, edge, visited, inverse)\n{\n\tif (func != null && vertex != null)\n\t{\n\t\tdirected = (directed != null) ? directed : true;\n\t\tinverse = (inverse != null) ? inverse : false;\n\t\tvisited = visited || new mxDictionary();\n\t\t\n\t\tif (!visited.get(vertex))\n\t\t{\n\t\t\tvisited.put(vertex, true);\n\t\t\tvar result = func(vertex, edge);\n\t\t\t\n\t\t\tif (result == null || result)\n\t\t\t{\n\t\t\t\tvar edgeCount = this.model.getEdgeCount(vertex);\n\t\t\t\t\n\t\t\t\tif (edgeCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar e = this.model.getEdgeAt(vertex, i);\n\t\t\t\t\t\tvar isSource = this.model.getTerminal(e, true) == vertex;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!directed || (!inverse == isSource))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar next = this.model.getTerminal(e, !isSource);\n\t\t\t\t\t\t\tthis.traverse(next, directed, func, e, visited, inverse);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Group: Selection\n */\n\n/**\n * Function: isCellSelected\n * \n * Returns true if the given cell is selected.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the selection state should be returned.\n */\nmxGraph.prototype.isCellSelected = function(cell)\n{\n\treturn this.getSelectionModel().isSelected(cell);\n};\n\n/**\n * Function: isSelectionEmpty\n * \n * Returns true if the selection is empty.\n */\nmxGraph.prototype.isSelectionEmpty = function()\n{\n\treturn this.getSelectionModel().isEmpty();\n};\n\n/**\n * Function: clearSelection\n * \n * Clears the selection using <mxGraphSelectionModel.clear>.\n */\nmxGraph.prototype.clearSelection = function()\n{\n\treturn this.getSelectionModel().clear();\n};\n\n/**\n * Function: getSelectionCount\n * \n * Returns the number of selected cells.\n */\nmxGraph.prototype.getSelectionCount = function()\n{\n\treturn this.getSelectionModel().cells.length;\n};\n\t\n/**\n * Function: getSelectionCell\n * \n * Returns the first cell from the array of selected <mxCells>.\n */\nmxGraph.prototype.getSelectionCell = function()\n{\n\treturn this.getSelectionModel().cells[0];\n};\n\n/**\n * Function: getSelectionCells\n * \n * Returns the array of selected <mxCells>.\n */\nmxGraph.prototype.getSelectionCells = function()\n{\n\treturn this.getSelectionModel().cells.slice();\n};\n\n/**\n * Function: setSelectionCell\n * \n * Sets the selection cell.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n */\nmxGraph.prototype.setSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().setCell(cell);\n};\n\n/**\n * Function: setSelectionCells\n * \n * Sets the selection cell.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n */\nmxGraph.prototype.setSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().setCells(cells);\n};\n\n/**\n * Function: addSelectionCell\n * \n * Adds the given cell to the selection.\n * \n * Parameters:\n * \n * cell - <mxCell> to be add to the selection.\n */\nmxGraph.prototype.addSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().addCell(cell);\n};\n\n/**\n * Function: addSelectionCells\n * \n * Adds the given cells to the selection.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be added to the selection.\n */\nmxGraph.prototype.addSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().addCells(cells);\n};\n\n/**\n * Function: removeSelectionCell\n * \n * Removes the given cell from the selection.\n * \n * Parameters:\n * \n * cell - <mxCell> to be removed from the selection.\n */\nmxGraph.prototype.removeSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().removeCell(cell);\n};\n\n/**\n * Function: removeSelectionCells\n * \n * Removes the given cells from the selection.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be removed from the selection.\n */\nmxGraph.prototype.removeSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().removeCells(cells);\n};\n\n/**\n * Function: selectRegion\n * \n * Selects and returns the cells inside the given rectangle for the\n * specified event.\n * \n * Parameters:\n * \n * rect - <mxRectangle> that represents the region to be selected.\n * evt - Mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectRegion = function(rect, evt)\n{\n\tvar cells = this.getCells(rect.x, rect.y, rect.width, rect.height);\n\tthis.selectCellsForEvent(cells, evt);\n\t\n\treturn cells;\n};\n\n/**\n * Function: selectNextCell\n * \n * Selects the next cell.\n */\nmxGraph.prototype.selectNextCell = function()\n{\n\tthis.selectCell(true);\n};\n\n/**\n * Function: selectPreviousCell\n * \n * Selects the previous cell.\n */\nmxGraph.prototype.selectPreviousCell = function()\n{\n\tthis.selectCell();\n};\n\n/**\n * Function: selectParentCell\n * \n * Selects the parent cell.\n */\nmxGraph.prototype.selectParentCell = function()\n{\n\tthis.selectCell(false, true);\n};\n\n/**\n * Function: selectChildCell\n * \n * Selects the first child cell.\n */\nmxGraph.prototype.selectChildCell = function()\n{\n\tthis.selectCell(false, false, true);\n};\n\n/**\n * Function: selectCell\n * \n * Selects the next, parent, first child or previous cell, if all arguments\n * are false.\n * \n * Parameters:\n * \n * isNext - Boolean indicating if the next cell should be selected.\n * isParent - Boolean indicating if the parent cell should be selected.\n * isChild - Boolean indicating if the first child cell should be selected.\n */\nmxGraph.prototype.selectCell = function(isNext, isParent, isChild)\n{\n\tvar sel = this.selectionModel;\n\tvar cell = (sel.cells.length > 0) ? sel.cells[0] : null;\n\t\n\tif (sel.cells.length > 1)\n\t{\n\t\tsel.clear();\n\t}\n\t\n\tvar parent = (cell != null) ?\n\t\tthis.model.getParent(cell) :\n\t\tthis.getDefaultParent();\n\t\n\tvar childCount = this.model.getChildCount(parent);\n\t\n\tif (cell == null && childCount > 0)\n\t{\n\t\tvar child = this.model.getChildAt(parent, 0);\n\t\tthis.setSelectionCell(child);\n\t}\n\telse if ((cell == null || isParent) &&\n\t\tthis.view.getState(parent) != null &&\n\t\tthis.model.getGeometry(parent) != null)\n\t{\n\t\tif (this.getCurrentRoot() != parent)\n\t\t{\n\t\t\tthis.setSelectionCell(parent);\n\t\t}\n\t}\n\telse if (cell != null && isChild)\n\t{\n\t\tvar tmp = this.model.getChildCount(cell);\n\t\t\n\t\tif (tmp > 0)\n\t\t{\n\t\t\tvar child = this.model.getChildAt(cell, 0);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t}\n\telse if (childCount > 0)\n\t{\n\t\tvar i = parent.getIndex(cell);\n\t\t\n\t\tif (isNext)\n\t\t{\n\t\t\ti++;\n\t\t\tvar child = this.model.getChildAt(parent, i % childCount);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti--;\n\t\t\tvar index =  (i < 0) ? childCount - 1 : i;\n\t\t\tvar child = this.model.getChildAt(parent, index);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t}\n};\n\n/**\n * Function: selectAll\n * \n * Selects all children of the given parent cell or the children of the\n * default parent if no parent is specified. To select leaf vertices and/or\n * edges use <selectCells>.\n * \n * Parameters:\n * \n * parent - Optional <mxCell> whose children should be selected.\n * Default is <defaultParent>.\n * descendants - Optional boolean specifying whether all descendants should be\n * selected. Default is false.\n */\nmxGraph.prototype.selectAll = function(parent, descendants)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tvar cells = (descendants) ? this.model.filterDescendants(function(cell)\n\t{\n\t\treturn cell != parent;\n\t}, parent) : this.model.getChildren(parent);\n\t\n\tif (cells != null)\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Function: selectVertices\n * \n * Select all vertices inside the given parent or the default parent.\n */\nmxGraph.prototype.selectVertices = function(parent)\n{\n\tthis.selectCells(true, false, parent);\n};\n\n/**\n * Function: selectVertices\n * \n * Select all vertices inside the given parent or the default parent.\n */\nmxGraph.prototype.selectEdges = function(parent)\n{\n\tthis.selectCells(false, true, parent);\n};\n\n/**\n * Function: selectCells\n * \n * Selects all vertices and/or edges depending on the given boolean\n * arguments recursively, starting at the given parent or the default\n * parent if no parent is specified. Use <selectAll> to select all cells.\n * For vertices, only cells with no children are selected.\n * \n * Parameters:\n * \n * vertices - Boolean indicating if vertices should be selected.\n * edges - Boolean indicating if edges should be selected.\n * parent - Optional <mxCell> that acts as the root of the recursion.\n * Default is <defaultParent>.\n */\nmxGraph.prototype.selectCells = function(vertices, edges, parent)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tvar filter = mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.view.getState(cell) != null &&\n\t\t\t((this.model.getChildCount(cell) == 0 && this.model.isVertex(cell) && vertices\n\t\t\t&& !this.model.isEdge(this.model.getParent(cell))) ||\n\t\t\t(this.model.isEdge(cell) && edges));\n\t});\n\t\n\tvar cells = this.model.filterDescendants(filter, parent);\n\tthis.setSelectionCells(cells);\n};\n\n/**\n * Function: selectCellForEvent\n * \n * Selects the given cell by either adding it to the selection or\n * replacing the selection depending on whether the given mouse event is a\n * toggle event.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n * evt - Optional mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectCellForEvent = function(cell, evt)\n{\n\tvar isSelected = this.isCellSelected(cell);\n\t\n\tif (this.isToggleEvent(evt))\n\t{\n\t\tif (isSelected)\n\t\t{\n\t\t\tthis.removeSelectionCell(cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addSelectionCell(cell);\n\t\t}\n\t}\n\telse if (!isSelected || this.getSelectionCount() != 1)\n\t{\n\t\tthis.setSelectionCell(cell);\n\t}\n};\n\n/**\n * Function: selectCellsForEvent\n * \n * Selects the given cells by either adding them to the selection or\n * replacing the selection depending on whether the given mouse event is a\n * toggle event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n * evt - Optional mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectCellsForEvent = function(cells, evt)\n{\n\tif (this.isToggleEvent(evt))\n\t{\n\t\tthis.addSelectionCells(cells);\n\t}\n\telse\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Group: Selection state\n */\n\n/**\n * Function: createHandler\n * \n * Creates a new handler for the given cell state. This implementation\n * returns a new <mxEdgeHandler> of the corresponding cell is an edge,\n * otherwise it returns an <mxVertexHandler>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose handler should be created.\n */\nmxGraph.prototype.createHandler = function(state)\n{\n\tvar result = null;\n\t\n\tif (state != null)\n\t{\n\t\tif (this.model.isEdge(state.cell))\n\t\t{\n\t\t\tvar source = state.getVisibleTerminalState(true);\n\t\t\tvar target = state.getVisibleTerminalState(false);\n\t\t\tvar geo = this.getCellGeometry(state.cell);\n\t\t\t\n\t\t\tvar edgeStyle = this.view.getEdgeStyle(state, (geo != null) ? geo.points : null, source, target);\n\t\t\tresult = this.createEdgeHandler(state, edgeStyle);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = this.createVertexHandler(state);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createVertexHandler\n * \n * Hooks to create a new <mxVertexHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createVertexHandler = function(state)\n{\n\treturn new mxVertexHandler(state);\n};\n\n/**\n * Function: createEdgeHandler\n * \n * Hooks to create a new <mxEdgeHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createEdgeHandler = function(state, edgeStyle)\n{\n\tvar result = null;\n\t\n\tif (edgeStyle == mxEdgeStyle.Loop ||\n\t\tedgeStyle == mxEdgeStyle.ElbowConnector ||\n\t\tedgeStyle == mxEdgeStyle.SideToSide ||\n\t\tedgeStyle == mxEdgeStyle.TopToBottom)\n\t{\n\t\tresult = this.createElbowEdgeHandler(state);\n\t}\n\telse if (edgeStyle == mxEdgeStyle.SegmentConnector || \n\t\t\tedgeStyle == mxEdgeStyle.OrthConnector)\n\t{\n\t\tresult = this.createEdgeSegmentHandler(state);\n\t}\n\telse\n\t{\n\t\tresult = new mxEdgeHandler(state);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createEdgeSegmentHandler\n * \n * Hooks to create a new <mxEdgeSegmentHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createEdgeSegmentHandler = function(state)\n{\n\treturn new mxEdgeSegmentHandler(state);\n};\n\n/**\n * Function: createElbowEdgeHandler\n * \n * Hooks to create a new <mxElbowEdgeHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createElbowEdgeHandler = function(state)\n{\n\treturn new mxElbowEdgeHandler(state);\n};\n\n/**\n * Group: Graph events\n */\n\n/**\n * Function: addMouseListener\n * \n * Adds a listener to the graph event dispatch loop. The listener\n * must implement the mouseDown, mouseMove and mouseUp methods\n * as shown in the <mxMouseEvent> class.\n * \n * Parameters:\n * \n * listener - Listener to be added to the graph event listeners.\n */\nmxGraph.prototype.addMouseListener = function(listener)\n{\n\tif (this.mouseListeners == null)\n\t{\n\t\tthis.mouseListeners = [];\n\t}\n\t\n\tthis.mouseListeners.push(listener);\n};\n\n/**\n * Function: removeMouseListener\n * \n * Removes the specified graph listener.\n * \n * Parameters:\n * \n * listener - Listener to be removed from the graph event listeners.\n */\nmxGraph.prototype.removeMouseListener = function(listener)\n{\n\tif (this.mouseListeners != null)\n\t{\n\t\tfor (var i = 0; i < this.mouseListeners.length; i++)\n\t\t{\n\t\t\tif (this.mouseListeners[i] == listener)\n\t\t\t{\n\t\t\t\tthis.mouseListeners.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: updateMouseEvent\n * \n * Sets the graphX and graphY properties if the given <mxMouseEvent> if\n * required and returned the event.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> to be updated.\n * evtName - Name of the mouse event.\n */\nmxGraph.prototype.updateMouseEvent = function(me, evtName)\n{\n\tif (me.graphX == null || me.graphY == null)\n\t{\n\t\tvar pt = mxUtils.convertPoint(this.container, me.getX(), me.getY());\n\t\t\n\t\tme.graphX = pt.x - this.panDx;\n\t\tme.graphY = pt.y - this.panDy;\n\t\t\n\t\t// Searches for rectangles using method if native hit detection is disabled on shape\n\t\tif (me.getCell() == null && this.isMouseDown && evtName == mxEvent.MOUSE_MOVE)\n\t\t{\n\t\t\tme.state = this.view.getState(this.getCellAt(pt.x, pt.y, null, null, null, function(state)\n\t\t\t{\n\t\t\t\treturn state.shape == null || state.shape.paintBackground != mxRectangleShape.prototype.paintBackground ||\n\t\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1' ||\n\t\t\t\t\t(state.shape.fill != null && state.shape.fill != mxConstants.NONE);\n\t\t\t}));\n\t\t}\n\t}\n\t\n\treturn me;\n};\n\n/**\n * Function: getStateForEvent\n * \n * Returns the state for the given touch event.\n */\nmxGraph.prototype.getStateForTouchEvent = function(evt)\n{\n\tvar x = mxEvent.getClientX(evt);\n\tvar y = mxEvent.getClientY(evt);\n\t\n\t// Dispatches the drop event to the graph which\n\t// consumes and executes the source function\n\tvar pt = mxUtils.convertPoint(this.container, x, y);\n\n\treturn this.view.getState(this.getCellAt(pt.x, pt.y));\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the event should be ignored in <fireMouseEvent>.\n */\nmxGraph.prototype.isEventIgnored = function(evtName, me, sender)\n{\n\tvar mouseEvent = mxEvent.isMouseEvent(me.getEvent());\n\tvar result = false;\n\n\t// Drops events that are fired more than once\n\tif (me.getEvent() == this.lastEvent)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tthis.lastEvent = me.getEvent();\n\t}\n\n\t// Installs event listeners to capture the complete gesture from the event source\n\t// for non-MS touch events as a workaround for all events for the same geture being\n\t// fired from the event source even if that was removed from the DOM.\n\tif (this.eventSource != null && evtName != mxEvent.MOUSE_MOVE)\n\t{\n\t\tmxEvent.removeGestureListeners(this.eventSource, null, this.mouseMoveRedirect, this.mouseUpRedirect);\n\t\tthis.mouseMoveRedirect = null;\n\t\tthis.mouseUpRedirect = null;\n\t\tthis.eventSource = null;\n\t}\n\telse if (!mxClient.IS_GC && this.eventSource != null && me.getSource() != this.eventSource)\n\t{\n\t\tresult = true;\n\t}\n\telse if (mxClient.IS_TOUCH && evtName == mxEvent.MOUSE_DOWN && !mouseEvent && !mxEvent.isPenEvent(me.getEvent()))\n\t{\n\t\tthis.eventSource = me.getSource();\n\n\t\tthis.mouseMoveRedirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, this.getStateForTouchEvent(evt)));\n\t\t});\n\t\tthis.mouseUpRedirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, this.getStateForTouchEvent(evt)));\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(this.eventSource, null, this.mouseMoveRedirect, this.mouseUpRedirect);\n\t}\n\n\t// Factored out the workarounds for FF to make it easier to override/remove\n\t// Note this method has side-effects!\n\tif (this.isSyntheticEventIgnored(evtName, me, sender))\n\t{\n\t\tresult = true;\n\t}\n\n\t// Never fires mouseUp/-Down for double clicks\n\tif (!mxEvent.isPopupTrigger(this.lastEvent) && evtName != mxEvent.MOUSE_MOVE && this.lastEvent.detail == 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\t// Filters out of sequence events or mixed event types during a gesture\n\tif (evtName == mxEvent.MOUSE_UP && this.isMouseDown)\n\t{\n\t\tthis.isMouseDown = false;\n\t}\n\telse if (evtName == mxEvent.MOUSE_DOWN && !this.isMouseDown)\n\t{\n\t\tthis.isMouseDown = true;\n\t\tthis.isMouseTrigger = mouseEvent;\n\t}\n\t// Drops mouse events that are fired during touch gestures as a workaround for Webkit\n\t// and mouse events that are not in sync with the current internal button state\n\telse if (!result && (((!mxClient.IS_FF || evtName != mxEvent.MOUSE_MOVE) &&\n\t\tthis.isMouseDown && this.isMouseTrigger != mouseEvent) ||\n\t\t(evtName == mxEvent.MOUSE_DOWN && this.isMouseDown) ||\n\t\t(evtName == mxEvent.MOUSE_UP && !this.isMouseDown)))\n\t{\n\t\tresult = true;\n\t}\n\t\n\tif (!result && evtName == mxEvent.MOUSE_DOWN)\n\t{\n\t\tthis.lastMouseX = me.getX();\n\t\tthis.lastMouseY = me.getY();\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isSyntheticEventIgnored\n * \n * Hook for ignoring synthetic mouse events after touchend in Firefox.\n */\nmxGraph.prototype.isSyntheticEventIgnored = function(evtName, me, sender)\n{\n\tvar result = false;\n\tvar mouseEvent = mxEvent.isMouseEvent(me.getEvent());\n\t\n\t// LATER: This does not cover all possible cases that can go wrong in FF\n\tif (this.ignoreMouseEvents && mouseEvent && evtName != mxEvent.MOUSE_MOVE)\n\t{\n\t\tthis.ignoreMouseEvents = evtName != mxEvent.MOUSE_UP;\n\t\tresult = true;\n\t}\n\telse if (mxClient.IS_FF && !mouseEvent && evtName == mxEvent.MOUSE_UP)\n\t{\n\t\tthis.ignoreMouseEvents = true;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: isEventSourceIgnored\n * \n * Returns true if the event should be ignored in <fireMouseEvent>. This\n * implementation returns true for select, option and input (if not of type\n * checkbox, radio, button, submit or file) event sources if the event is not\n * a mouse event or a left mouse button press event.\n * \n * Parameters:\n * \n * evtName - The name of the event.\n * me - <mxMouseEvent> that should be ignored.\n */\nmxGraph.prototype.isEventSourceIgnored = function(evtName, me)\n{\n\tvar source = me.getSource();\n\tvar name = (source.nodeName != null) ? source.nodeName.toLowerCase() : '';\n\tvar candidate = !mxEvent.isMouseEvent(me.getEvent()) || mxEvent.isLeftMouseButton(me.getEvent());\n\t\n\treturn evtName == mxEvent.MOUSE_DOWN && candidate && (name == 'select' || name == 'option' ||\n\t\t(name == 'input' && source.type != 'checkbox' && source.type != 'radio' &&\n\t\tsource.type != 'button' && source.type != 'submit' && source.type != 'file'));\n};\n\n/**\n * Function: getEventState\n * \n * Returns the <mxCellState> to be used when firing the mouse event for the\n * given state. This implementation returns the given state.\n * \n * Parameters:\n * \n * <mxCellState> - State whose event source should be returned.\n */\nmxGraph.prototype.getEventState = function(state)\n{\n\treturn state;\n};\n\n/**\n * Function: fireMouseEvent\n * \n * Dispatches the given event in the graph event dispatch loop. Possible\n * event names are <mxEvent.MOUSE_DOWN>, <mxEvent.MOUSE_MOVE> and\n * <mxEvent.MOUSE_UP>. All listeners are invoked for all events regardless\n * of the consumed state of the event.\n * \n * Parameters:\n * \n * evtName - String that specifies the type of event to be dispatched.\n * me - <mxMouseEvent> to be fired.\n * sender - Optional sender argument. Default is this.\n */\nmxGraph.prototype.fireMouseEvent = function(evtName, me, sender)\n{\n\tif (this.isEventSourceIgnored(evtName, me))\n\t{\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.hide();\n\t\t}\n\t\t\n\t\treturn;\n\t}\n\t\n\tif (sender == null)\n\t{\n\t\tsender = this;\n\t}\n\n\t// Updates the graph coordinates in the event\n\tme = this.updateMouseEvent(me, evtName);\n\n\t// Detects and processes double taps for touch-based devices which do not have native double click events\n\t// or where detection of double click is not always possible (quirks, IE10+). Note that this can only handle\n\t// double clicks on cells because the sequence of events in IE prevents detection on the background, it fires\n\t// two mouse ups, one of which without a cell but no mousedown for the second click which means we cannot\n\t// detect which mouseup(s) are part of the first click, ie we do not know when the first click ends.\n\tif ((!this.nativeDblClickEnabled && !mxEvent.isPopupTrigger(me.getEvent())) || (this.doubleTapEnabled &&\n\t\tmxClient.IS_TOUCH && (mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent()))))\n\t{\n\t\tvar currentTime = new Date().getTime();\n\t\t\n\t\t// NOTE: Second mouseDown for double click missing in quirks mode\n\t\tif ((!mxClient.IS_QUIRKS && evtName == mxEvent.MOUSE_DOWN) || (mxClient.IS_QUIRKS && evtName == mxEvent.MOUSE_UP && !this.fireDoubleClick))\n\t\t{\n\t\t\tif (this.lastTouchEvent != null && this.lastTouchEvent != me.getEvent() &&\n\t\t\t\tcurrentTime - this.lastTouchTime < this.doubleTapTimeout &&\n\t\t\t\tMath.abs(this.lastTouchX - me.getX()) < this.doubleTapTolerance &&\n\t\t\t\tMath.abs(this.lastTouchY - me.getY()) < this.doubleTapTolerance &&\n\t\t\t\tthis.doubleClickCounter < 2)\n\t\t\t{\n\t\t\t\tthis.doubleClickCounter++;\n\t\t\t\tvar doubleClickFired = false;\n\t\t\t\t\n\t\t\t\tif (evtName == mxEvent.MOUSE_UP)\n\t\t\t\t{\n\t\t\t\t\tif (me.getCell() == this.lastTouchCell && this.lastTouchCell != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.lastTouchTime = 0;\n\t\t\t\t\t\tvar cell = this.lastTouchCell;\n\t\t\t\t\t\tthis.lastTouchCell = null;\n\n\t\t\t\t\t\t// Fires native dblclick event via event source\n\t\t\t\t\t\t// NOTE: This fires two double click events on edges in quirks mode. While\n\t\t\t\t\t\t// trying to fix this, we realized that nativeDoubleClick can be disabled for\n\t\t\t\t\t\t// quirks and IE10+ (or we didn't find the case mentioned above where it\n\t\t\t\t\t\t// would not work), ie. all double clicks seem to be working without this.\n\t\t\t\t\t\tif (mxClient.IS_QUIRKS)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tme.getSource().fireEvent('ondblclick');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.dblClick(me.getEvent(), cell);\n\t\t\t\t\t\tdoubleClickFired = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.fireDoubleClick = true;\n\t\t\t\t\tthis.lastTouchTime = 0;\n\t\t\t\t}\n\n\t\t\t\t// Do not ignore mouse up in quirks in this case\n\t\t\t\tif (!mxClient.IS_QUIRKS || doubleClickFired)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(me.getEvent());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.lastTouchEvent == null || this.lastTouchEvent != me.getEvent())\n\t\t\t{\n\t\t\t\tthis.lastTouchCell = me.getCell();\n\t\t\t\tthis.lastTouchX = me.getX();\n\t\t\t\tthis.lastTouchY = me.getY();\n\t\t\t\tthis.lastTouchTime = currentTime;\n\t\t\t\tthis.lastTouchEvent = me.getEvent();\n\t\t\t\tthis.doubleClickCounter = 0;\n\t\t\t}\n\t\t}\n\t\telse if ((this.isMouseDown || evtName == mxEvent.MOUSE_UP) && this.fireDoubleClick)\n\t\t{\n\t\t\tthis.fireDoubleClick = false;\n\t\t\tvar cell = this.lastTouchCell;\n\t\t\tthis.lastTouchCell = null;\n\t\t\tthis.isMouseDown = false;\n\t\t\t\n\t\t\t// Workaround for Chrome/Safari not firing native double click events for double touch on background\n\t\t\tvar valid = (cell != null) || ((mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent())) &&\n\t\t\t\t(mxClient.IS_GC || mxClient.IS_SF));\n\t\t\t\n\t\t\tif (valid && Math.abs(this.lastTouchX - me.getX()) < this.doubleTapTolerance &&\n\t\t\t\tMath.abs(this.lastTouchY - me.getY()) < this.doubleTapTolerance)\n\t\t\t{\n\t\t\t\tthis.dblClick(me.getEvent(), cell);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.consume(me.getEvent());\n\t\t\t}\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (!this.isEventIgnored(evtName, me, sender))\n\t{\n\t\t// Updates the event state via getEventState\n\t\tme.state = this.getEventState(me.getState());\n\t\tthis.fireEvent(new mxEventObject(mxEvent.FIRE_MOUSE_EVENT, 'eventName', evtName, 'event', me));\n\t\t\n\t\tif ((mxClient.IS_OP || mxClient.IS_SF || mxClient.IS_GC || mxClient.IS_IE11 ||\n\t\t\t(mxClient.IS_IE && mxClient.IS_SVG) || me.getEvent().target != this.container))\n\t\t{\n\t\t\tif (evtName == mxEvent.MOUSE_MOVE && this.isMouseDown && this.autoScroll && !mxEvent.isMultiTouchEvent(me.getEvent))\n\t\t\t{\n\t\t\t\tthis.scrollPointToVisible(me.getGraphX(), me.getGraphY(), this.autoExtend);\n\t\t\t}\n\t\t\telse if (evtName == mxEvent.MOUSE_UP && this.ignoreScrollbars && this.translateToScrollPosition &&\n\t\t\t\t\t(this.container.scrollLeft != 0 || this.container.scrollTop != 0))\n\t\t\t{\n\t\t\t\tvar s = this.view.scale;\n\t\t\t\tvar tr = this.view.translate;\n\t\t\t\tthis.view.setTranslate(tr.x - this.container.scrollLeft / s, tr.y - this.container.scrollTop / s);\n\t\t\t\tthis.container.scrollLeft = 0;\n\t\t\t\tthis.container.scrollTop = 0;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.mouseListeners != null)\n\t\t\t{\n\t\t\t\tvar args = [sender, me];\n\t\n\t\t\t\t// Does not change returnValue in Opera\n\t\t\t\tif (!me.getEvent().preventDefault)\n\t\t\t\t{\n\t\t\t\t\tme.getEvent().returnValue = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < this.mouseListeners.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar l = this.mouseListeners[i];\n\t\t\t\t\t\n\t\t\t\t\tif (evtName == mxEvent.MOUSE_DOWN)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseDown.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t\telse if (evtName == mxEvent.MOUSE_MOVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseMove.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t\telse if (evtName == mxEvent.MOUSE_UP)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseUp.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Invokes the click handler\n\t\t\tif (evtName == mxEvent.MOUSE_UP)\n\t\t\t{\n\t\t\t\tthis.click(me);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Detects tapAndHold events using a timer\n\t\tif ((mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent())) &&\n\t\t\tevtName == mxEvent.MOUSE_DOWN && this.tapAndHoldEnabled && !this.tapAndHoldInProgress)\n\t\t{\n\t\t\tthis.tapAndHoldInProgress = true;\n\t\t\tthis.initialTouchX = me.getGraphX();\n\t\t\tthis.initialTouchY = me.getGraphY();\n\t\t\t\n\t\t\tvar handler = function()\n\t\t\t{\n\t\t\t\tif (this.tapAndHoldValid)\n\t\t\t\t{\n\t\t\t\t\tthis.tapAndHold(me);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.tapAndHoldInProgress = false;\n\t\t\t\tthis.tapAndHoldValid = false;\n\t\t\t};\n\t\t\t\n\t\t\tif (this.tapAndHoldThread)\n\t\t\t{\n\t\t\t\twindow.clearTimeout(this.tapAndHoldThread);\n\t\t\t}\n\t\n\t\t\tthis.tapAndHoldThread = window.setTimeout(mxUtils.bind(this, handler), this.tapAndHoldDelay);\n\t\t\tthis.tapAndHoldValid = true;\n\t\t}\n\t\telse if (evtName == mxEvent.MOUSE_UP)\n\t\t{\n\t\t\tthis.tapAndHoldInProgress = false;\n\t\t\tthis.tapAndHoldValid = false;\n\t\t}\n\t\telse if (this.tapAndHoldValid)\n\t\t{\n\t\t\tthis.tapAndHoldValid =\n\t\t\t\tMath.abs(this.initialTouchX - me.getGraphX()) < this.tolerance &&\n\t\t\t\tMath.abs(this.initialTouchY - me.getGraphY()) < this.tolerance;\n\t\t}\n\n\t\t// Stops editing for all events other than from cellEditor\n\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isEditing() && !this.cellEditor.isEventSource(me.getEvent()))\n\t\t{\n\t\t\tthis.stopEditing(!this.isInvokesStopCellEditing());\n\t\t}\n\n\t\tthis.consumeMouseEvent(evtName, me, sender);\n\t}\n};\n\n/**\n * Function: consumeMouseEvent\n * \n * Consumes the given <mxMouseEvent> if it's a touchStart event.\n */\nmxGraph.prototype.consumeMouseEvent = function(evtName, me, sender)\n{\n\t// Workaround for duplicate click in Windows 8 with Chrome/FF/Opera with touch\n\tif (evtName == mxEvent.MOUSE_DOWN && mxEvent.isTouchEvent(me.getEvent()))\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: fireGestureEvent\n * \n * Dispatches a <mxEvent.GESTURE> event. The following example will resize the\n * cell under the mouse based on the scale property of the native touch event.\n * \n * (code)\n * graph.addListener(mxEvent.GESTURE, function(sender, eo)\n * {\n *   var evt = eo.getProperty('event');\n *   var state = graph.view.getState(eo.getProperty('cell'));\n *   \n *   if (graph.isEnabled() && graph.isCellResizable(state.cell) && Math.abs(1 - evt.scale) > 0.2)\n *   {\n *     var scale = graph.view.scale;\n *     var tr = graph.view.translate;\n *     \n *     var w = state.width * evt.scale;\n *     var h = state.height * evt.scale;\n *     var x = state.x - (w - state.width) / 2;\n *     var y = state.y - (h - state.height) / 2;\n *     \n *     var bounds = new mxRectangle(graph.snap(x / scale) - tr.x,\n *     \t\tgraph.snap(y / scale) - tr.y, graph.snap(w / scale), graph.snap(h / scale));\n *     graph.resizeCell(state.cell, bounds);\n *     eo.consume();\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * evt - Gestureend event that represents the gesture.\n * cell - Optional <mxCell> associated with the gesture.\n */\nmxGraph.prototype.fireGestureEvent = function(evt, cell)\n{\n\t// Resets double tap event handling when gestures take place\n\tthis.lastTouchTime = 0;\n\tthis.fireEvent(new mxEventObject(mxEvent.GESTURE, 'event', evt, 'cell', cell));\n};\n\n/**\n * Function: destroy\n * \n * Destroys the graph and all its resources.\n */\nmxGraph.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\t\t\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.selectionCellsHandler != null)\n\t\t{\n\t\t\tthis.selectionCellsHandler.destroy();\n\t\t}\n\n\t\tif (this.panningHandler != null)\n\t\t{\n\t\t\tthis.panningHandler.destroy();\n\t\t}\n\n\t\tif (this.popupMenuHandler != null)\n\t\t{\n\t\t\tthis.popupMenuHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.connectionHandler != null)\n\t\t{\n\t\t\tthis.connectionHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.graphHandler != null)\n\t\t{\n\t\t\tthis.graphHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.cellEditor != null)\n\t\t{\n\t\t\tthis.cellEditor.destroy();\n\t\t}\n\t\t\n\t\tif (this.view != null)\n\t\t{\n\t\t\tthis.view.destroy();\n\t\t}\n\n\t\tif (this.model != null && this.graphModelChangeListener != null)\n\t\t{\n\t\t\tthis.model.removeListener(this.graphModelChangeListener);\n\t\t\tthis.graphModelChangeListener = null;\n\t\t}\n\n\t\tthis.container = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellOverlay\n *\n * Extends <mxEventSource> to implement a graph overlay, represented by an icon\n * and a tooltip. Overlays can handle and fire <click> events and are added to\n * the graph using <mxGraph.addCellOverlay>, and removed using\n * <mxGraph.removeCellOverlay>, or <mxGraph.removeCellOverlays> to remove all overlays.\n * The <mxGraph.getCellOverlays> function returns the array of overlays for a given\n * cell in a graph. If multiple overlays exist for the same cell, then\n * <getBounds> should be overridden in at least one of the overlays.\n * \n * Overlays appear on top of all cells in a special layer. If this is not\n * desirable, then the image must be rendered as part of the shape or label of\n * the cell instead.\n *\n * Example:\n * \n * The following adds a new overlays for a given vertex and selects the cell\n * if the overlay is clicked.\n *\n * (code)\n * var overlay = new mxCellOverlay(img, html);\n * graph.addCellOverlay(vertex, overlay);\n * overlay.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var cell = evt.getProperty('cell');\n *   graph.setSelectionCell(cell);\n * });\n * (end)\n * \n * For cell overlays to be printed use <mxPrintPreview.printOverlays>.\n *\n * Event: mxEvent.CLICK\n *\n * Fires when the user clicks on the overlay. The <code>event</code> property\n * contains the corresponding mouse event and the <code>cell</code> property\n * contains the cell. For touch devices this is fired if the element receives\n * a touchend event.\n * \n * Constructor: mxCellOverlay\n *\n * Constructs a new overlay using the given image and tooltip.\n * \n * Parameters:\n * \n * image - <mxImage> that represents the icon to be displayed.\n * tooltip - Optional string that specifies the tooltip.\n * align - Optional horizontal alignment for the overlay. Possible\n * values are <ALIGN_LEFT>, <ALIGN_CENTER> and <ALIGN_RIGHT>\n * (default).\n * verticalAlign - Vertical alignment for the overlay. Possible\n * values are <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>\n * (default).\n */\nfunction mxCellOverlay(image, tooltip, align, verticalAlign, offset, cursor)\n{\n\tthis.image = image;\n\tthis.tooltip = tooltip;\n\tthis.align = (align != null) ? align : this.align;\n\tthis.verticalAlign = (verticalAlign != null) ? verticalAlign : this.verticalAlign;\n\tthis.offset = (offset != null) ? offset : new mxPoint();\n\tthis.cursor = (cursor != null) ? cursor : 'help';\n};\n\n/**\n * Extends mxEventSource.\n */\nmxCellOverlay.prototype = new mxEventSource();\nmxCellOverlay.prototype.constructor = mxCellOverlay;\n\n/**\n * Variable: image\n *\n * Holds the <mxImage> to be used as the icon.\n */\nmxCellOverlay.prototype.image = null;\n\n/**\n * Variable: tooltip\n * \n * Holds the optional string to be used as the tooltip.\n */\nmxCellOverlay.prototype.tooltip = null;\n\n/**\n * Variable: align\n * \n * Holds the horizontal alignment for the overlay. Default is\n * <mxConstants.ALIGN_RIGHT>. For edges, the overlay always appears in the\n * center of the edge.\n */\nmxCellOverlay.prototype.align = mxConstants.ALIGN_RIGHT;\n\n/**\n * Variable: verticalAlign\n * \n * Holds the vertical alignment for the overlay. Default is\n * <mxConstants.ALIGN_BOTTOM>. For edges, the overlay always appears in the\n * center of the edge.\n */\nmxCellOverlay.prototype.verticalAlign = mxConstants.ALIGN_BOTTOM;\n\n/**\n * Variable: offset\n * \n * Holds the offset as an <mxPoint>. The offset will be scaled according to the\n * current scale.\n */\nmxCellOverlay.prototype.offset = null;\n\n/**\n * Variable: cursor\n * \n * Holds the cursor for the overlay. Default is 'help'.\n */\nmxCellOverlay.prototype.cursor = null;\n\n/**\n * Variable: defaultOverlap\n * \n * Defines the overlapping for the overlay, that is, the proportional distance\n * from the origin to the point defined by the alignment. Default is 0.5.\n */\nmxCellOverlay.prototype.defaultOverlap = 0.5;\n\n/**\n * Function: getBounds\n * \n * Returns the bounds of the overlay for the given <mxCellState> as an\n * <mxRectangle>. This should be overridden when using multiple overlays\n * per cell so that the overlays do not overlap.\n * \n * The following example will place the overlay along an edge (where\n * x=[-1..1] from the start to the end of the edge and y is the\n * orthogonal offset in px).\n * \n * (code)\n * overlay.getBounds = function(state)\n * {\n *   var bounds = mxCellOverlay.prototype.getBounds.apply(this, arguments);\n *   \n *   if (state.view.graph.getModel().isEdge(state.cell))\n *   {\n *     var pt = state.view.getPoint(state, {x: 0, y: 0, relative: true});\n *     \n *     bounds.x = pt.x - bounds.width / 2;\n *     bounds.y = pt.y - bounds.height / 2;\n *   }\n *   \n *   return bounds;\n * };\n * (end)\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the current state of the\n * associated cell.\n */\nmxCellOverlay.prototype.getBounds = function(state)\n{\n\tvar isEdge = state.view.graph.getModel().isEdge(state.cell);\n\tvar s = state.view.scale;\n\tvar pt = null;\n\n\tvar w = this.image.width;\n\tvar h = this.image.height;\n\t\n\tif (isEdge)\n\t{\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tif (pts.length % 2 == 1)\n\t\t{\n\t\t\tpt = pts[Math.floor(pts.length / 2)];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar idx = pts.length / 2;\n\t\t\tvar p0 = pts[idx-1];\n\t\t\tvar p1 = pts[idx];\n\t\t\tpt = new mxPoint(p0.x + (p1.x - p0.x) / 2,\n\t\t\t\tp0.y + (p1.y - p0.y) / 2);\n\t\t}\n\t}\n\telse\n\t{\n\t\tpt = new mxPoint();\n\t\t\n\t\tif (this.align == mxConstants.ALIGN_LEFT)\n\t\t{\n\t\t\tpt.x = state.x;\n\t\t}\n\t\telse if (this.align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tpt.x = state.x + state.width / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpt.x = state.x + state.width;\n\t\t}\n\t\t\n\t\tif (this.verticalAlign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tpt.y = state.y;\n\t\t}\n\t\telse if (this.verticalAlign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tpt.y = state.y + state.height / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpt.y = state.y + state.height;\n\t\t}\n\t}\n\n\treturn new mxRectangle(Math.round(pt.x - (w * this.defaultOverlap - this.offset.x) * s),\n\t\tMath.round(pt.y - (h * this.defaultOverlap - this.offset.y) * s), w * s, h * s);\n};\n\n/**\n * Function: toString\n * \n * Returns the textual representation of the overlay to be used as the\n * tooltip. This implementation returns <tooltip>.\n */\nmxCellOverlay.prototype.toString = function()\n{\n\treturn this.tooltip;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxOutline\n *\n * Implements an outline (aka overview) for a graph. Set <updateOnPan> to true\n * to enable updates while the source graph is panning.\n * \n * Example:\n * \n * (code)\n * var outline = new mxOutline(graph, div);\n * (end)\n * \n * If an outline is used in an <mxWindow> in IE8 standards mode, the following\n * code makes sure that the shadow filter is not inherited and that any\n * transparent elements in the graph do not show the page background, but the\n * background of the graph container.\n * \n * (code)\n * if (document.documentMode == 8)\n * {\n *   container.style.filter = 'progid:DXImageTransform.Microsoft.alpha(opacity=100)';\n * }\n * (end)\n * \n * To move the graph to the top, left corner the following code can be used.\n * \n * (code)\n * var scale = graph.view.scale;\n * var bounds = graph.getGraphBounds();\n * graph.view.setTranslate(-bounds.x / scale, -bounds.y / scale);\n * (end)\n * \n * To toggle the suspended mode, the following can be used.\n * \n * (code)\n * outline.suspended = !outln.suspended;\n * if (!outline.suspended)\n * {\n *   outline.update(true);\n * }\n * (end)\n * \n * Constructor: mxOutline\n *\n * Constructs a new outline for the specified graph inside the given\n * container.\n * \n * Parameters:\n * \n * source - <mxGraph> to create the outline for.\n * container - DOM node that will contain the outline.\n */\nfunction mxOutline(source, container)\n{\n\tthis.source = source;\n\n\tif (container != null)\n\t{\n\t\tthis.init(container);\n\t}\n};\n\n/**\n * Function: source\n * \n * Reference to the source <mxGraph>.\n */\nmxOutline.prototype.source = null;\n\n/**\n * Function: outline\n * \n * Reference to the <mxGraph> that renders the outline.\n */\nmxOutline.prototype.outline = null;\n\n/**\n * Function: graphRenderHint\n * \n * Renderhint to be used for the outline graph. Default is faster.\n */\nmxOutline.prototype.graphRenderHint = mxConstants.RENDERING_HINT_FASTER;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxOutline.prototype.enabled = true;\n\n/**\n * Variable: showViewport\n * \n * Specifies a viewport rectangle should be shown. Default is true.\n */\nmxOutline.prototype.showViewport = true;\n\n/**\n * Variable: border\n * \n * Border to be added at the bottom and right. Default is 10.\n */\nmxOutline.prototype.border = 10;\n\n/**\n * Variable: enabled\n * \n * Specifies the size of the sizer handler. Default is 8.\n */\nmxOutline.prototype.sizerSize = 8;\n\n/**\n * Variable: labelsVisible\n * \n * Specifies if labels should be visible in the outline. Default is false.\n */\nmxOutline.prototype.labelsVisible = false;\n\n/**\n * Variable: updateOnPan\n * \n * Specifies if <update> should be called for <mxEvent.PAN> in the source\n * graph. Default is false.\n */\nmxOutline.prototype.updateOnPan = false;\n\n/**\n * Variable: sizerImage\n * \n * Optional <mxImage> to be used for the sizer. Default is null.\n */\nmxOutline.prototype.sizerImage = null;\n\n/**\n * Variable: minScale\n * \n * Minimum scale to be used. Default is 0.001.\n */\nmxOutline.prototype.minScale = 0.0001;\n\n/**\n * Variable: suspended\n * \n * Optional boolean flag to suspend updates. Default is false. This flag will\n * also suspend repaints of the outline. To toggle this switch, use the\n * following code.\n * \n * (code)\n * nav.suspended = !nav.suspended;\n * \n * if (!nav.suspended)\n * {\n *   nav.update(true);\n * }\n * (end)\n */\nmxOutline.prototype.suspended = false;\n\n/**\n * Variable: forceVmlHandles\n * \n * Specifies if VML should be used to render the handles in this control. This\n * is true for IE8 standards mode and false for all other browsers and modes.\n * This is a workaround for rendering issues of HTML elements over elements\n * with filters in IE 8 standards mode.\n */\nmxOutline.prototype.forceVmlHandles = document.documentMode == 8;\n\n/**\n * Function: createGraph\n * \n * Creates the <mxGraph> used in the outline.\n */\nmxOutline.prototype.createGraph = function(container)\n{\n\tvar graph = new mxGraph(container, this.source.getModel(), this.graphRenderHint, this.source.getStylesheet());\n\tgraph.foldingEnabled = false;\n\tgraph.autoScroll = false;\n\t\n\treturn graph;\n};\n\n/**\n * Function: init\n * \n * Initializes the outline inside the given container.\n */\nmxOutline.prototype.init = function(container)\n{\n\tthis.outline = this.createGraph(container);\n\t\n\t// Do not repaint when suspended\n\tvar outlineGraphModelChanged = this.outline.graphModelChanged;\n\tthis.outline.graphModelChanged = mxUtils.bind(this, function(changes)\n\t{\n\t\tif (!this.suspended && this.outline != null)\n\t\t{\n\t\t\toutlineGraphModelChanged.apply(this.outline, arguments);\n\t\t}\n\t});\n\n\t// Enables faster painting in SVG\n\tif (mxClient.IS_SVG)\n\t{\n\t\tvar node = this.outline.getView().getCanvas().parentNode;\n\t\tnode.setAttribute('shape-rendering', 'optimizeSpeed');\n\t\tnode.setAttribute('image-rendering', 'optimizeSpeed');\n\t}\n\t\n\t// Hides cursors and labels\n\tthis.outline.labelsVisible = this.labelsVisible;\n\tthis.outline.setEnabled(false);\n\t\n\tthis.updateHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (!this.suspended && !this.active)\n\t\t{\n\t\t\tthis.update();\n\t\t}\n\t});\n\t\n\t// Updates the scale of the outline after a change of the main graph\n\tthis.source.getModel().addListener(mxEvent.CHANGE, this.updateHandler);\n\tthis.outline.addMouseListener(this);\n\t\n\t// Adds listeners to keep the outline in sync with the source graph\n\tvar view = this.source.getView();\n\tview.addListener(mxEvent.SCALE, this.updateHandler);\n\tview.addListener(mxEvent.TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.SCALE_AND_TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.DOWN, this.updateHandler);\n\tview.addListener(mxEvent.UP, this.updateHandler);\n\n\t// Updates blue rectangle on scroll\n\tmxEvent.addListener(this.source.container, 'scroll', this.updateHandler);\n\t\n\tthis.panHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.updateOnPan)\n\t\t{\n\t\t\tthis.updateHandler.apply(this, arguments);\n\t\t}\n\t});\n\tthis.source.addListener(mxEvent.PAN, this.panHandler);\n\t\n\t// Refreshes the graph in the outline after a refresh of the main graph\n\tthis.refreshHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.outline.setStylesheet(this.source.getStylesheet());\n\t\tthis.outline.refresh();\n\t});\n\tthis.source.addListener(mxEvent.REFRESH, this.refreshHandler);\n\n\t// Creates the blue rectangle for the viewport\n\tthis.bounds = new mxRectangle(0, 0, 0, 0);\n\tthis.selectionBorder = new mxRectangleShape(this.bounds, null,\n\t\tmxConstants.OUTLINE_COLOR, mxConstants.OUTLINE_STROKEWIDTH);\n\tthis.selectionBorder.dialect = this.outline.dialect;\n\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.selectionBorder.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.selectionBorder.init(this.outline.getView().getOverlayPane());\n\n\t// Handles event by catching the initial pointer start and then listening to the\n\t// complete gesture on the event target. This is needed because all the events\n\t// are routed via the initial element even if that element is removed from the\n\t// DOM, which happens when we repaint the selection border and zoom handles.\n\tvar handler = mxUtils.bind(this, function(evt)\n\t{\n\t\tvar t = mxEvent.getSource(evt);\n\t\t\n\t\tvar redirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tvar redirect2 = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tmxEvent.removeGestureListeners(t, null, redirect, redirect2);\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(t, null, redirect, redirect2);\n\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t});\n\t\n\tmxEvent.addGestureListeners(this.selectionBorder.node, handler);\n\n\t// Creates a small blue rectangle for sizing (sizer handle)\n\tthis.sizer = this.createSizer();\n\t\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.sizer.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.sizer.init(this.outline.getView().getOverlayPane());\n\t\n\tif (this.enabled)\n\t{\n\t\tthis.sizer.node.style.cursor = 'nwse-resize';\n\t}\n\t\n\tmxEvent.addGestureListeners(this.sizer.node, handler);\n\n\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\tthis.sizer.node.style.display = this.selectionBorder.node.style.display;\n\tthis.selectionBorder.node.style.cursor = 'move';\n\n\tthis.update(false);\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxOutline.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: setZoomEnabled\n * \n * Enables or disables the zoom handling by showing or hiding the respective\n * handle.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setZoomEnabled = function(value)\n{\n\tthis.sizer.node.style.visibility = (value) ? 'visible' : 'hidden';\n};\n\n/**\n * Function: refresh\n * \n * Invokes <update> and revalidate the outline. This method is deprecated.\n */\nmxOutline.prototype.refresh = function()\n{\n\tthis.update(true);\n};\n\n/**\n * Function: createSizer\n * \n * Creates the shape used as the sizer.\n */\nmxOutline.prototype.createSizer = function()\n{\n\tif (this.sizerImage != null)\n\t{\n\t\tvar sizer = new mxImageShape(new mxRectangle(0, 0, this.sizerImage.width, this.sizerImage.height), this.sizerImage.src);\n\t\tsizer.dialect = this.outline.dialect;\n\t\t\n\t\treturn sizer;\n\t}\n\telse\n\t{\n\t\tvar sizer = new mxRectangleShape(new mxRectangle(0, 0, this.sizerSize, this.sizerSize),\n\t\t\tmxConstants.OUTLINE_HANDLE_FILLCOLOR, mxConstants.OUTLINE_HANDLE_STROKECOLOR);\n\t\tsizer.dialect = this.outline.dialect;\n\t\n\t\treturn sizer;\n\t}\n};\n\n/**\n * Function: getSourceContainerSize\n * \n * Returns the size of the source container.\n */\nmxOutline.prototype.getSourceContainerSize = function()\n{\n\treturn new mxRectangle(0, 0, this.source.container.scrollWidth, this.source.container.scrollHeight);\n};\n\n/**\n * Function: getOutlineOffset\n * \n * Returns the offset for drawing the outline graph.\n */\nmxOutline.prototype.getOutlineOffset = function(scale)\n{\n\treturn null;\n};\n\n/**\n * Function: getOutlineOffset\n * \n * Returns the offset for drawing the outline graph.\n */\nmxOutline.prototype.getSourceGraphBounds = function()\n{\n\treturn this.source.getGraphBounds();\n};\n\n/**\n * Function: update\n * \n * Updates the outline.\n */\nmxOutline.prototype.update = function(revalidate)\n{\n\tif (this.source != null && this.source.container != null &&\n\t\tthis.outline != null && this.outline.container != null)\n\t{\n\t\tvar sourceScale = this.source.view.scale;\n\t\tvar scaledGraphBounds = this.getSourceGraphBounds();\n\t\tvar unscaledGraphBounds = new mxRectangle(scaledGraphBounds.x / sourceScale + this.source.panDx,\n\t\t\t\tscaledGraphBounds.y / sourceScale + this.source.panDy, scaledGraphBounds.width / sourceScale,\n\t\t\t\tscaledGraphBounds.height / sourceScale);\n\n\t\tvar unscaledFinderBounds = new mxRectangle(0, 0,\n\t\t\tthis.source.container.clientWidth / sourceScale,\n\t\t\tthis.source.container.clientHeight / sourceScale);\n\t\t\n\t\tvar union = unscaledGraphBounds.clone();\n\t\tunion.add(unscaledFinderBounds);\n\t\n\t\t// Zooms to the scrollable area if that is bigger than the graph\n\t\tvar size = this.getSourceContainerSize();\n\t\tvar completeWidth = Math.max(size.width / sourceScale, union.width);\n\t\tvar completeHeight = Math.max(size.height / sourceScale, union.height);\n\t\n\t\tvar availableWidth = Math.max(0, this.outline.container.clientWidth - this.border);\n\t\tvar availableHeight = Math.max(0, this.outline.container.clientHeight - this.border);\n\t\t\n\t\tvar outlineScale = Math.min(availableWidth / completeWidth, availableHeight / completeHeight);\n\t\tvar scale = (isNaN(outlineScale)) ? this.minScale : Math.max(this.minScale, outlineScale);\n\n\t\tif (scale > 0)\n\t\t{\n\t\t\tif (this.outline.getView().scale != scale)\n\t\t\t{\n\t\t\t\tthis.outline.getView().scale = scale;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\tvar navView = this.outline.getView();\n\t\t\t\n\t\t\tif (navView.currentRoot != this.source.getView().currentRoot)\n\t\t\t{\n\t\t\t\tnavView.setCurrentRoot(this.source.getView().currentRoot);\n\t\t\t}\n\n\t\t\tvar t = this.source.view.translate;\n\t\t\tvar tx = t.x + this.source.panDx;\n\t\t\tvar ty = t.y + this.source.panDy;\n\t\t\t\n\t\t\tvar off = this.getOutlineOffset(scale);\n\t\t\t\n\t\t\tif (off != null)\n\t\t\t{\n\t\t\t\ttx += off.x;\n\t\t\t\tty += off.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (unscaledGraphBounds.x < 0)\n\t\t\t{\n\t\t\t\ttx = tx - unscaledGraphBounds.x;\n\t\t\t}\n\t\t\tif (unscaledGraphBounds.y < 0)\n\t\t\t{\n\t\t\t\tty = ty - unscaledGraphBounds.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (navView.translate.x != tx || navView.translate.y != ty)\n\t\t\t{\n\t\t\t\tnavView.translate.x = tx;\n\t\t\t\tnavView.translate.y = ty;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\t// Prepares local variables for computations\n\t\t\tvar t2 = navView.translate;\n\t\t\tscale = this.source.getView().scale;\n\t\t\tvar scale2 = scale / navView.scale;\n\t\t\tvar scale3 = 1.0 / navView.scale;\n\t\t\tvar container = this.source.container;\n\t\t\t\n\t\t\t// Updates the bounds of the viewrect in the navigation\n\t\t\tthis.bounds = new mxRectangle(\n\t\t\t\t(t2.x - t.x - this.source.panDx) / scale3,\n\t\t\t\t(t2.y - t.y - this.source.panDy) / scale3,\n\t\t\t\t(container.clientWidth / scale2),\n\t\t\t\t(container.clientHeight / scale2));\n\t\t\t\n\t\t\t// Adds the scrollbar offset to the finder\n\t\t\tthis.bounds.x += this.source.container.scrollLeft * navView.scale / scale;\n\t\t\tthis.bounds.y += this.source.container.scrollTop * navView.scale / scale;\n\t\t\t\n\t\t\tvar b = this.selectionBorder.bounds;\n\t\t\t\n\t\t\tif (b.x != this.bounds.x || b.y != this.bounds.y || b.width != this.bounds.width || b.height != this.bounds.height)\n\t\t\t{\n\t\t\t\tthis.selectionBorder.bounds = this.bounds;\n\t\t\t\tthis.selectionBorder.redraw();\n\t\t\t}\n\t\t\n\t\t\t// Updates the bounds of the zoom handle at the bottom right\n\t\t\tvar b = this.sizer.bounds;\n\t\t\tvar b2 = new mxRectangle(this.bounds.x + this.bounds.width - b.width / 2,\n\t\t\t\t\tthis.bounds.y + this.bounds.height - b.height / 2, b.width, b.height);\n\n\t\t\tif (b.x != b2.x || b.y != b2.y || b.width != b2.width || b.height != b2.height)\n\t\t\t{\n\t\t\t\tthis.sizer.bounds = b2;\n\t\t\t\t\n\t\t\t\t// Avoids update of visibility in redraw for VML\n\t\t\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t\t\t{\n\t\t\t\t\tthis.sizer.redraw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (revalidate)\n\t\t\t{\n\t\t\t\tthis.outline.view.revalidate();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by starting a translation or zoom.\n */\nmxOutline.prototype.mouseDown = function(sender, me)\n{\n\tif (this.enabled && this.showViewport)\n\t{\n\t\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.source.tolerance : 0;\n\t\tvar hit = (this.source.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\t\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\t\tthis.zoom = me.isSource(this.sizer) || (hit != null && mxUtils.intersects(shape.bounds, hit));\n\t\tthis.startX = me.getX();\n\t\tthis.startY = me.getY();\n\t\tthis.active = true;\n\n\t\tif (this.source.useScrollbarsForPanning && mxUtils.hasScrollbars(this.source.container))\n\t\t{\n\t\t\tthis.dx0 = this.source.container.scrollLeft;\n\t\t\tthis.dy0 = this.source.container.scrollTop;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dx0 = 0;\n\t\t\tthis.dy0 = 0;\n\t\t}\n\t}\n\n\tme.consume();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by previewing the viewrect in <graph> and updating the\n * rectangle that represents the viewrect in the outline.\n */\nmxOutline.prototype.mouseMove = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\t\tthis.sizer.node.style.display = this.selectionBorder.node.style.display; \n\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\tvar bounds = null;\n\t\t\n\t\tif (!this.zoom)\n\t\t{\n\t\t\t// Previews the panning on the source graph\n\t\t\tvar scale = this.outline.getView().scale;\n\t\t\tbounds = new mxRectangle(this.bounds.x + dx,\n\t\t\t\tthis.bounds.y + dy, this.bounds.width, this.bounds.height);\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t\tdx /= scale;\n\t\t\tdx *= this.source.getView().scale;\n\t\t\tdy /= scale;\n\t\t\tdy *= this.source.getView().scale;\n\t\t\tthis.source.panGraph(-dx - this.dx0, -dy - this.dy0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Does *not* preview zooming on the source graph\n\t\t\tvar container = this.source.container;\n\t\t\tvar viewRatio = container.clientWidth / container.clientHeight;\n\t\t\tdy = dx / viewRatio;\n\t\t\tbounds = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y,\n\t\t\t\tMath.max(1, this.bounds.width + dx),\n\t\t\t\tMath.max(1, this.bounds.height + dy));\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t}\n\t\t\n\t\t// Updates the zoom handle\n\t\tvar b = this.sizer.bounds;\n\t\tthis.sizer.bounds = new mxRectangle(\n\t\t\tbounds.x + bounds.width - b.width / 2,\n\t\t\tbounds.y + bounds.height - b.height / 2,\n\t\t\tb.width, b.height);\n\t\t\n\t\t// Avoids update of visibility in redraw for VML\n\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t{\n\t\t\tthis.sizer.redraw();\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: getTranslateForEvent\n * \n * Gets the translate for the given mouse event. Here is an example to limit\n * the outline to stay within positive coordinates:\n * \n * (code)\n * outline.getTranslateForEvent = function(me)\n * {\n *   var pt = new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n *   \n *   if (!this.zoom)\n *   {\n *     var tr = this.source.view.translate;\n *     pt.x = Math.max(tr.x * this.outline.view.scale, pt.x);\n *     pt.y = Math.max(tr.y * this.outline.view.scale, pt.y);\n *   }\n *   \n *   return pt;\n * };\n * (end)\n */\nmxOutline.prototype.getTranslateForEvent = function(me)\n{\n\treturn new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the translation or zoom to <graph>.\n */\nmxOutline.prototype.mouseUp = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\t\n\t\tif (Math.abs(dx) > 0 || Math.abs(dy) > 0)\n\t\t{\n\t\t\tif (!this.zoom)\n\t\t\t{\n\t\t\t\t// Applies the new translation if the source\n\t\t\t\t// has no scrollbars\n\t\t\t\tif (!this.source.useScrollbarsForPanning ||\n\t\t\t\t\t!mxUtils.hasScrollbars(this.source.container))\n\t\t\t\t{\n\t\t\t\t\tthis.source.panGraph(0, 0);\n\t\t\t\t\tdx /= this.outline.getView().scale;\n\t\t\t\t\tdy /= this.outline.getView().scale;\n\t\t\t\t\tvar t = this.source.getView().translate;\n\t\t\t\t\tthis.source.getView().setTranslate(t.x - dx, t.y - dy);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Applies the new zoom\n\t\t\t\tvar w = this.selectionBorder.bounds.width;\n\t\t\t\tvar scale = this.source.getView().scale;\n\t\t\t\tthis.source.zoomTo(Math.max(this.minScale, scale - (dx * scale) / w), false);\n\t\t\t}\n\n\t\t\tthis.update();\n\t\t\tme.consume();\n\t\t}\n\t\t\t\n\t\t// Resets the state of the handler\n\t\tthis.index = null;\n\t\tthis.active = false;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroy this outline and removes all listeners from <source>.\n */\nmxOutline.prototype.destroy = function()\n{\n\tif (this.source != null)\n\t{\n\t\tthis.source.removeListener(this.panHandler);\n\t\tthis.source.removeListener(this.refreshHandler);\n\t\tthis.source.getModel().removeListener(this.updateHandler);\n\t\tthis.source.getView().removeListener(this.updateHandler);\n\t\tmxEvent.addListener(this.source.container, 'scroll', this.updateHandler);\n\t\tthis.source = null;\n\t}\n\t\n\tif (this.outline != null)\n\t{\n\t\tthis.outline.removeMouseListener(this);\n\t\tthis.outline.destroy();\n\t\tthis.outline = null;\n\t}\n\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.destroy();\n\t\tthis.selectionBorder = null;\n\t}\n\t\n\tif (this.sizer != null)\n\t{\n\t\tthis.sizer.destroy();\n\t\tthis.sizer = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMultiplicity\n * \n * Defines invalid connections along with the error messages that they produce.\n * To add or remove rules on a graph, you must add/remove instances of this\n * class to <mxGraph.multiplicities>.\n * \n * Example:\n * \n * (code)\n * graph.multiplicities.push(new mxMultiplicity(\n *   true, 'rectangle', null, null, 0, 2, ['circle'],\n *   'Only 2 targets allowed',\n *   'Only circle targets allowed'));\n * (end)\n * \n * Defines a rule where each rectangle must be connected to no more than 2\n * circles and no other types of targets are allowed.\n * \n * Constructor: mxMultiplicity\n * \n * Instantiate class mxMultiplicity in order to describe allowed\n * connections in a graph. Not all constraints can be enforced while\n * editing, some must be checked at validation time. The <countError> and\n * <typeError> are treated as resource keys in <mxResources>.\n * \n * Parameters:\n * \n * source - Boolean indicating if this rule applies to the source or target\n * terminal.\n * type - Type of the source or target terminal that this rule applies to.\n * See <type> for more information.\n * attr - Optional attribute name to match the source or target terminal.\n * value - Optional attribute value to match the source or target terminal.\n * min - Minimum number of edges for this rule. Default is 1.\n * max - Maximum number of edges for this rule. n means infinite. Default\n * is n.\n * validNeighbors - Array of types of the opposite terminal for which this\n * rule applies.\n * countError - Error to be displayed for invalid number of edges.\n * typeError - Error to be displayed for invalid opposite terminals.\n * validNeighborsAllowed - Optional boolean indicating if the array of\n * opposite types should be valid or invalid.\n */\nfunction mxMultiplicity(source, type, attr, value, min, max,\n\tvalidNeighbors, countError, typeError, validNeighborsAllowed)\n{\n\tthis.source = source;\n\tthis.type = type;\n\tthis.attr = attr;\n\tthis.value = value;\n\tthis.min = (min != null) ? min : 0;\n\tthis.max = (max != null) ? max : 'n';\n\tthis.validNeighbors = validNeighbors;\n\tthis.countError = mxResources.get(countError) || countError;\n\tthis.typeError = mxResources.get(typeError) || typeError;\n\tthis.validNeighborsAllowed = (validNeighborsAllowed != null) ?\n\t\tvalidNeighborsAllowed : true;\n};\n\n/**\n * Variable: type\n * \n * Defines the type of the source or target terminal. The type is a string\n * passed to <mxUtils.isNode> together with the source or target vertex\n * value as the first argument.\n */\nmxMultiplicity.prototype.type = null;\n\n/**\n * Variable: attr\n * \n * Optional string that specifies the attributename to be passed to\n * <mxUtils.isNode> to check if the rule applies to a cell.\n */\nmxMultiplicity.prototype.attr = null;\n\n/**\n * Variable: value\n * \n * Optional string that specifies the value of the attribute to be passed\n * to <mxUtils.isNode> to check if the rule applies to a cell.\n */\nmxMultiplicity.prototype.value = null;\n\n/**\n * Variable: source\n * \n * Boolean that specifies if the rule is applied to the source or target\n * terminal of an edge.\n */\nmxMultiplicity.prototype.source = null;\n\n/**\n * Variable: min\n * \n * Defines the minimum number of connections for which this rule applies.\n * Default is 0.\n */\nmxMultiplicity.prototype.min = null;\n\n/**\n * Variable: max\n * \n * Defines the maximum number of connections for which this rule applies.\n * A value of 'n' means unlimited times. Default is 'n'. \n */\nmxMultiplicity.prototype.max = null;\n\n/**\n * Variable: validNeighbors\n * \n * Holds an array of strings that specify the type of neighbor for which\n * this rule applies. The strings are used in <mxCell.is> on the opposite\n * terminal to check if the rule applies to the connection.\n */\nmxMultiplicity.prototype.validNeighbors = null;\n\n/**\n * Variable: validNeighborsAllowed\n * \n * Boolean indicating if the list of validNeighbors are those that are allowed\n * for this rule or those that are not allowed for this rule.\n */\nmxMultiplicity.prototype.validNeighborsAllowed = true;\n\n/**\n * Variable: countError\n * \n * Holds the localized error message to be displayed if the number of\n * connections for which the rule applies is smaller than <min> or greater\n * than <max>.\n */\nmxMultiplicity.prototype.countError = null;\n\n/**\n * Variable: typeError\n * \n * Holds the localized error message to be displayed if the type of the\n * neighbor for a connection does not match the rule.\n */\nmxMultiplicity.prototype.typeError = null;\n\n/**\n * Function: check\n * \n * Checks the multiplicity for the given arguments and returns the error\n * for the given connection or null if the multiplicity does not apply.\n *  \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph> instance.\n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * sourceOut - Number of outgoing edges from the source terminal.\n * targetIn - Number of incoming edges for the target terminal.\n */\nmxMultiplicity.prototype.check = function(graph, edge, source, target, sourceOut, targetIn)\n{\n\tvar error = '';\n\n\tif ((this.source && this.checkTerminal(graph, source, edge)) ||\n\t\t(!this.source && this.checkTerminal(graph, target, edge)))\n\t{\n\t\tif (this.countError != null && \n\t\t\t((this.source && (this.max == 0 || (sourceOut >= this.max))) ||\n\t\t\t(!this.source && (this.max == 0 || (targetIn >= this.max)))))\n\t\t{\n\t\t\terror += this.countError + '\\n';\n\t\t}\n\n\t\tif (this.validNeighbors != null && this.typeError != null && this.validNeighbors.length > 0)\n\t\t{\n\t\t\tvar isValid = this.checkNeighbors(graph, edge, source, target);\n\n\t\t\tif (!isValid)\n\t\t\t{\n\t\t\t\terror += this.typeError + '\\n';\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn (error.length > 0) ? error : null;\n};\n\n/**\n * Function: checkNeighbors\n * \n * Checks if there are any valid neighbours in <validNeighbors>. This is only\n * called if <validNeighbors> is a non-empty array.\n */\nmxMultiplicity.prototype.checkNeighbors = function(graph, edge, source, target)\n{\n\tvar sourceValue = graph.model.getValue(source);\n\tvar targetValue = graph.model.getValue(target);\n\tvar isValid = !this.validNeighborsAllowed;\n\tvar valid = this.validNeighbors;\n\t\n\tfor (var j = 0; j < valid.length; j++)\n\t{\n\t\tif (this.source &&\n\t\t\tthis.checkType(graph, targetValue, valid[j]))\n\t\t{\n\t\t\tisValid = this.validNeighborsAllowed;\n\t\t\tbreak;\n\t\t}\n\t\telse if (!this.source && \n\t\t\tthis.checkType(graph, sourceValue, valid[j]))\n\t\t{\n\t\t\tisValid = this.validNeighborsAllowed;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn isValid;\n};\n\n/**\n * Function: checkTerminal\n * \n * Checks the given terminal cell and returns true if this rule applies. The\n * given cell is the source or target of the given edge, depending on\n * <source>. This implementation uses <checkType> on the terminal's value.\n */\nmxMultiplicity.prototype.checkTerminal = function(graph, terminal, edge)\n{\n\tvar value = graph.model.getValue(terminal);\n\t\n\treturn this.checkType(graph, value, this.type, this.attr, this.value);\n};\n\n/**\n * Function: checkType\n * \n * Checks the type of the given value.\n */\nmxMultiplicity.prototype.checkType = function(graph, value, type, attr, attrValue)\n{\n\tif (value != null)\n\t{\n\t\tif (!isNaN(value.nodeType)) // Checks if value is a DOM node\n\t\t{\n\t\t\treturn mxUtils.isNode(value, type, attr, attrValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn value == type;\n\t\t}\n\t}\n\t\n\treturn false;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLayoutManager\n * \n * Implements a layout manager that runs a given layout after any changes to the graph:\n * \n * Example:\n * \n * (code)\n * var layoutMgr = new mxLayoutManager(graph);\n * layoutMgr.getLayout = function(cell)\n * {\n *   return layout;\n * };\n * (end)\n * \n * Event: mxEvent.LAYOUT_CELLS\n * \n * Fires between begin- and endUpdate after all cells have been layouted in\n * <layoutCells>. The <code>cells</code> property contains all cells that have\n * been passed to <layoutCells>.\n * \n * Constructor: mxLayoutManager\n *\n * Constructs a new automatic layout for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxLayoutManager(graph)\n{\n\t// Executes the layout before the changes are dispatched\n\tthis.undoHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.beforeUndo(evt.getProperty('edit'));\n\t\t}\n\t});\n\t\n\t// Notifies the layout of a move operation inside a parent\n\tthis.moveHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.cellsMoved(evt.getProperty('cells'), evt.getProperty('event'));\n\t\t}\n\t});\n\t\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxLayoutManager.prototype = new mxEventSource();\nmxLayoutManager.prototype.constructor = mxLayoutManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxLayoutManager.prototype.graph = null;\n\n/**\n * Variable: bubbling\n * \n * Specifies if the layout should bubble along\n * the cell hierarchy. Default is true.\n */\nmxLayoutManager.prototype.bubbling = true;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxLayoutManager.prototype.enabled = true;\n\n/**\n * Variable: updateHandler\n * \n * Holds the function that handles the endUpdate event.\n */\nmxLayoutManager.prototype.updateHandler = null;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxLayoutManager.prototype.moveHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxLayoutManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxLayoutManager.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isBubbling\n * \n * Returns true if a layout should bubble, that is, if the parent layout\n * should be executed whenever a cell layout (layout of the children of\n * a cell) has been executed. This implementation returns <bubbling>.\n */\nmxLayoutManager.prototype.isBubbling = function()\n{\n\treturn this.bubbling;\n};\n\n/**\n * Function: setBubbling\n * \n * Sets <bubbling>.\n */\nmxLayoutManager.prototype.setBubbling = function(value)\n{\n\tthis.bubbling = value;\n};\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this layout operates on.\n */\nmxLayoutManager.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the layouts operate on.\n */\nmxLayoutManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tvar model = this.graph.getModel();\t\t\n\t\tmodel.removeListener(this.undoHandler);\n\t\tthis.graph.removeListener(this.moveHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tvar model = this.graph.getModel();\t\n\t\tmodel.addListener(mxEvent.BEFORE_UNDO, this.undoHandler);\n\t\tthis.graph.addListener(mxEvent.MOVE_CELLS, this.moveHandler);\n\t}\n};\n\n/**\n * Function: getLayout\n * \n * Returns the layout to be executed for the given graph and parent.\n */\nmxLayoutManager.prototype.getLayout = function(parent)\n{\n\treturn null;\n};\n\n/**\n * Function: beforeUndo\n * \n * Called from the undoHandler.\n *\n * Parameters:\n * \n * cell - Array of <mxCells> that have been moved.\n * evt - Mouse event that represents the mousedown.\n */\nmxLayoutManager.prototype.beforeUndo = function(undoableEdit)\n{\n\tvar cells = this.getCellsForChanges(undoableEdit.changes);\n\tvar model = this.getGraph().getModel();\n\n\t// Adds all descendants\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\ttmp = tmp.concat(model.getDescendants(cells[i]));\n\t}\n\t\n\tcells = tmp;\n\t\n\t// Adds all parent ancestors\n\tif (this.isBubbling())\n\t{\n\t\ttmp = model.getParents(cells);\n\t\t\n\t\twhile (tmp.length > 0)\n\t\t{\n\t\t\tcells = cells.concat(tmp);\n\t\t\ttmp = model.getParents(tmp);\n\t\t}\n\t}\n\t\n\tthis.executeLayoutForCells(cells);\n};\n\n/**\n * Function: executeLayout\n * \n * Executes the given layout on the given parent.\n */\nmxLayoutManager.prototype.executeLayoutForCells = function(cells)\n{\n\t// Adds reverse to this array to avoid duplicate execution of leafes\n\t// Works like capture/bubble for events, first executes all layout\n\t// from top to bottom and in reverse order and removes duplicates.\n\tvar sorted = mxUtils.sortCells(cells, true);\n\tsorted = sorted.concat(sorted.slice().reverse());\n\tthis.layoutCells(sorted);\n};\n\n/**\n * Function: cellsMoved\n * \n * Called from the moveHandler.\n *\n * Parameters:\n * \n * cell - Array of <mxCells> that have been moved.\n * evt - Mouse event that represents the mousedown.\n */\nmxLayoutManager.prototype.cellsMoved = function(cells, evt)\n{\n\tif (cells != null && evt != null)\n\t{\n\t\tvar point = mxUtils.convertPoint(this.getGraph().container,\n\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\t// Checks if a layout exists to take care of the moving if the\n\t\t// parent itself is not being moved\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar parent = model.getParent(cells[i]);\n\t\t\t\n\t\t\tif (mxUtils.indexOf(cells, parent) < 0)\n\t\t\t{\n\t\t\t\tvar layout = this.getLayout(parent);\n\t\n\t\t\t\tif (layout != null)\n\t\t\t\t{\n\t\t\t\t\tlayout.moveCell(cells[i], point.x, point.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getCellsForEdit\n * \n * Returns the cells to be layouted for the given sequence of changes.\n */\nmxLayoutManager.prototype.getCellsForChanges = function(changes)\n{\n\tvar dict = new mxDictionary();\n\tvar result = [];\n\t\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\tif (change instanceof mxRootChange)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar cells = this.getCellsForChange(change);\n\t\t\t\n\t\t\tfor (var j = 0; j < cells.length; j++)\n\t\t\t{\n\t\t\t\tif (cells[j] != null && !dict.get(cells[j]))\n\t\t\t\t{\n\t\t\t\t\tdict.put(cells[j], true);\n\t\t\t\t\tresult.push(cells[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getCellsForChange\n * \n * Executes all layouts which have been scheduled during the\n * changes.\n */\nmxLayoutManager.prototype.getCellsForChange = function(change)\n{\n\tvar model = this.getGraph().getModel();\n\t\n\tif (change instanceof mxChildChange)\n\t{\n\t\treturn [change.child, change.previous, model.getParent(change.child)];\n\t}\n\telse if (change instanceof mxTerminalChange || change instanceof mxGeometryChange)\n\t{\n\t\treturn [change.cell, model.getParent(change.cell)];\n\t}\n\telse if (change instanceof mxVisibleChange || change instanceof mxStyleChange)\n\t{\n\t\treturn [change.cell];\n\t}\n\t\n\treturn [];\n};\n\n/**\n * Function: layoutCells\n * \n * Executes all layouts which have been scheduled during the\n * changes.\n */\nmxLayoutManager.prototype.layoutCells = function(cells)\n{\n\tif (cells.length > 0)\n\t{\n\t\t// Invokes the layouts while removing duplicates\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tmodel.beginUpdate();\n\t\ttry \n\t\t{\n\t\t\tvar last = null;\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (cells[i] != model.getRoot() && cells[i] != last)\n\t\t\t\t{\n\t\t\t\t\tif (this.executeLayout(this.getLayout(cells[i]), cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tlast = cells[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.LAYOUT_CELLS, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: executeLayout\n * \n * Executes the given layout on the given parent.\n */\nmxLayoutManager.prototype.executeLayout = function(layout, parent)\n{\n\tvar result = false;\n\t\n\tif (layout != null && parent != null)\n\t{\n\t\tlayout.execute(parent);\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxLayoutManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneManager\n * \n * Manager for swimlanes and nested swimlanes that sets the size of newly added\n * swimlanes to that of their siblings, and propagates changes to the size of a\n * swimlane to its siblings, if <siblings> is true, and its ancestors, if\n * <bubbling> is true.\n * \n * Constructor: mxSwimlaneManager\n *\n * Constructs a new swimlane manager for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxSwimlaneManager(graph, horizontal, addEnabled, resizeEnabled)\n{\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.addEnabled = (addEnabled != null) ? addEnabled : true;\n\tthis.resizeEnabled = (resizeEnabled != null) ? resizeEnabled : true;\n\n\tthis.addHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled() && this.isAddEnabled())\n\t\t{\n\t\t\tthis.cellsAdded(evt.getProperty('cells'));\n\t\t}\n\t});\n\t\n\tthis.resizeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled() && this.isResizeEnabled())\n\t\t{\n\t\t\tthis.cellsResized(evt.getProperty('cells'));\n\t\t}\n\t});\n\t\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxSwimlaneManager.prototype = new mxEventSource();\nmxSwimlaneManager.prototype.constructor = mxSwimlaneManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxSwimlaneManager.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxSwimlaneManager.prototype.enabled = true;\n\n/**\n * Variable: horizontal\n * \n * Specifies the orientation of the swimlanes. Default is true.\n */\nmxSwimlaneManager.prototype.horizontal = true;\n\n/**\n * Variable: addEnabled\n * \n * Specifies if newly added cells should be resized to match the size of their\n * existing siblings. Default is true.\n */\nmxSwimlaneManager.prototype.addEnabled = true;\n\n/**\n * Variable: resizeEnabled\n * \n * Specifies if resizing of swimlanes should be handled. Default is true.\n */\nmxSwimlaneManager.prototype.resizeEnabled = true;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxSwimlaneManager.prototype.addHandler = null;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxSwimlaneManager.prototype.resizeHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxSwimlaneManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxSwimlaneManager.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxSwimlaneManager.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: setHorizontal\n * \n * Sets <horizontal>.\n */\nmxSwimlaneManager.prototype.setHorizontal = function(value)\n{\n\tthis.horizontal = value;\n};\n\n/**\n * Function: isAddEnabled\n * \n * Returns <addEnabled>.\n */\nmxSwimlaneManager.prototype.isAddEnabled = function()\n{\n\treturn this.addEnabled;\n};\n\n/**\n * Function: setAddEnabled\n * \n * Sets <addEnabled>.\n */\nmxSwimlaneManager.prototype.setAddEnabled = function(value)\n{\n\tthis.addEnabled = value;\n};\n\n/**\n * Function: isResizeEnabled\n * \n * Returns <resizeEnabled>.\n */\nmxSwimlaneManager.prototype.isResizeEnabled = function()\n{\n\treturn this.resizeEnabled;\n};\n\n/**\n * Function: setResizeEnabled\n * \n * Sets <resizeEnabled>.\n */\nmxSwimlaneManager.prototype.setResizeEnabled = function(value)\n{\n\tthis.resizeEnabled = value;\n};\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this manager operates on.\n */\nmxSwimlaneManager.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the manager operates on.\n */\nmxSwimlaneManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.removeListener(this.addHandler);\n\t\tthis.graph.removeListener(this.resizeHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.addListener(mxEvent.ADD_CELLS, this.addHandler);\n\t\tthis.graph.addListener(mxEvent.CELLS_RESIZED, this.resizeHandler);\n\t}\n};\n\n/**\n * Function: isSwimlaneIgnored\n * \n * Returns true if the given swimlane should be ignored.\n */\nmxSwimlaneManager.prototype.isSwimlaneIgnored = function(swimlane)\n{\n\treturn !this.getGraph().isSwimlane(swimlane);\n};\n\n/**\n * Function: isCellHorizontal\n * \n * Returns true if the given cell is horizontal. If the given cell is not a\n * swimlane, then the global orientation is returned.\n */\nmxSwimlaneManager.prototype.isCellHorizontal = function(cell)\n{\n\tif (this.graph.isSwimlane(cell))\n\t{\n\t\tvar style = this.graph.getCellStyle(cell);\n\t\t\n\t\treturn mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, 1) == 1;\n\t}\n\t\n\treturn !this.isHorizontal();\n};\n\n/**\n * Function: cellsAdded\n * \n * Called if any cells have been added.\n * \n * Parameters:\n * \n * cell - Array of <mxCells> that have been added.\n */\nmxSwimlaneManager.prototype.cellsAdded = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar model = this.getGraph().getModel();\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!this.isSwimlaneIgnored(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.swimlaneAdded(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: swimlaneAdded\n * \n * Updates the size of the given swimlane to match that of any existing\n * siblings swimlanes.\n * \n * Parameters:\n * \n * swimlane - <mxCell> that represents the new swimlane.\n */\nmxSwimlaneManager.prototype.swimlaneAdded = function(swimlane)\n{\n\tvar model = this.getGraph().getModel();\n\tvar parent = model.getParent(swimlane);\n\tvar childCount = model.getChildCount(parent);\n\tvar geo = null;\n\t\n\t// Finds the first valid sibling swimlane as reference\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (child != swimlane && !this.isSwimlaneIgnored(child))\n\t\t{\n\t\t\tgeo = model.getGeometry(child);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Applies the size of the refernece to the newly added swimlane\n\tif (geo != null)\n\t{\n\t\tvar parentHorizontal = (parent != null) ? this.isCellHorizontal(parent) : this.horizontal;\n\t\tthis.resizeSwimlane(swimlane, geo.width, geo.height, parentHorizontal);\n\t}\n};\n\n/**\n * Function: cellsResized\n * \n * Called if any cells have been resizes. Calls <swimlaneResized> for all\n * swimlanes where <isSwimlaneIgnored> returns false.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose size was changed.\n */\nmxSwimlaneManager.prototype.cellsResized = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Finds the top-level swimlanes and adds offsets\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!this.isSwimlaneIgnored(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tvar geo = model.getGeometry(cells[i]);\n\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar size = new mxRectangle(0, 0, geo.width, geo.height);\n\t\t\t\t\t\tvar top = cells[i];\n\t\t\t\t\t\tvar current = top;\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (current != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttop = current;\n\t\t\t\t\t\t\tcurrent = model.getParent(current);\n\t\t\t\t\t\t\tvar tmp = (this.graph.isSwimlane(current)) ?\n\t\t\t\t\t\t\t\t\tthis.graph.getStartSize(current) :\n\t\t\t\t\t\t\t\t\tnew mxRectangle();\n\t\t\t\t\t\t\tsize.width += tmp.width;\n\t\t\t\t\t\t\tsize.height += tmp.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar parentHorizontal = (current != null) ? this.isCellHorizontal(current) : this.horizontal;\n\t\t\t\t\t\tthis.resizeSwimlane(top, size.width, size.height, parentHorizontal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resizeSwimlane\n * \n * Called from <cellsResized> for all swimlanes that are not ignored to update\n * the size of the siblings and the size of the parent swimlanes, recursively,\n * if <bubbling> is true.\n * \n * Parameters:\n * \n * swimlane - <mxCell> whose size has changed.\n */\nmxSwimlaneManager.prototype.resizeSwimlane = function(swimlane, w, h, parentHorizontal)\n{\n\tvar model = this.getGraph().getModel();\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvar horizontal = this.isCellHorizontal(swimlane);\n\t\t\n\t\tif (!this.isSwimlaneIgnored(swimlane))\n\t\t{\n\t\t\tvar geo = model.getGeometry(swimlane);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tif ((parentHorizontal && geo.height != h) || (!parentHorizontal && geo.width != w))\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tif (parentHorizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.height = h;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.width = w;\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.setGeometry(swimlane, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar tmp = (this.graph.isSwimlane(swimlane)) ?\n\t\t\t\tthis.graph.getStartSize(swimlane) :\n\t\t\t\tnew mxRectangle();\n\t\tw -= tmp.width;\n\t\th -= tmp.height;\n\t\t\n\t\tvar childCount = model.getChildCount(swimlane);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(swimlane, i);\n\t\t\tthis.resizeSwimlane(child, w, h, horizontal);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxSwimlaneManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxTemporaryCellStates\n * \n * Creates a temporary set of cell states.\n */\nfunction mxTemporaryCellStates(view, scale, cells, isCellVisibleFn, getLinkForCellState)\n{\n\tscale = (scale != null) ? scale : 1;\n\tthis.view = view;\n\t\n\t// Stores the previous state\n\tthis.oldValidateCellState = view.validateCellState;\n\tthis.oldBounds = view.getGraphBounds();\n\tthis.oldStates = view.getStates();\n\tthis.oldScale = view.getScale();\n\tthis.oldDoRedrawShape = view.graph.cellRenderer.doRedrawShape;\n\n\tvar self = this;\n\n\t// Overrides doRedrawShape and paint shape to add links on shapes\n\tif (getLinkForCellState != null)\n\t{\n\t\tview.graph.cellRenderer.doRedrawShape = function(state)\n\t\t{\n\t\t\tvar oldPaint = state.shape.paint;\n\t\t\t\n\t\t\tstate.shape.paint = function(c)\n\t\t\t{\n\t\t\t\tvar link = getLinkForCellState(state);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(link);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toldPaint.apply(this, arguments);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(null);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tself.oldDoRedrawShape.apply(view.graph.cellRenderer, arguments);\n\t\t\tstate.shape.paint = oldPaint;\n\t\t};\n\t}\n\n\t// Overrides validateCellState to ignore invisible cells\n\tview.validateCellState = function(cell, resurse)\n\t{\n\t\tif (cell == null || isCellVisibleFn == null || isCellVisibleFn(cell))\n\t\t{\n\t\t\treturn self.oldValidateCellState.apply(view, arguments);\n\t\t}\n\t\t\n\t\treturn null;\n\t};\n\t\n\t// Creates space for new states\n\tview.setStates(new mxDictionary());\n\tview.setScale(scale);\n\t\n\tif (cells != null)\n\t{\n\t\tview.resetValidationState();\n\t\tvar bbox = null;\n\n\t\t// Validates the vertices and edges without adding them to\n\t\t// the model so that the original cells are not modified\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar bounds = view.getBoundingBox(view.validateCellState(view.validateCell(cells[i])));\n\t\t\t\n\t\t\tif (bbox == null)\n\t\t\t{\n\t\t\t\tbbox = bounds;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbbox.add(bounds);\n\t\t\t}\n\t\t}\n\n\t\tview.setGraphBounds(bbox || new mxRectangle());\n\t}\n};\n\n/**\n * Variable: view\n *\n * Holds the width of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.view = null;\n\n/**\n * Variable: oldStates\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldStates = null;\n\n/**\n * Variable: oldBounds\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldBounds = null;\n\n/**\n * Variable: oldScale\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldScale = null;\n\n/**\n * Function: destroy\n * \n * Returns the top, left corner as a new <mxPoint>.\n */\nmxTemporaryCellStates.prototype.destroy = function()\n{\n\tthis.view.setScale(this.oldScale);\n\tthis.view.setStates(this.oldStates);\n\tthis.view.setGraphBounds(this.oldBounds);\n\tthis.view.validateCellState = this.oldValidateCellState;\n\tthis.view.graph.cellRenderer.doRedrawShape = this.oldDoRedrawShape;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxCellStatePreview\n * \n * Implements a live preview for moving cells.\n * \n * Constructor: mxCellStatePreview\n * \n * Constructs a move preview for the given graph.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxCellStatePreview(graph)\n{\n\tthis.deltas = new mxDictionary();\n\tthis.graph = graph;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellStatePreview.prototype.graph = null;\n\n/**\n * Variable: deltas\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellStatePreview.prototype.deltas = null;\n\n/**\n * Variable: count\n * \n * Contains the number of entries in the map.\n */\nmxCellStatePreview.prototype.count = 0;\n\n/**\n * Function: isEmpty\n * \n * Returns true if this contains no entries.\n */\nmxCellStatePreview.prototype.isEmpty = function()\n{\n\treturn this.count == 0;\n};\n\n/**\n * Function: moveState\n */\nmxCellStatePreview.prototype.moveState = function(state, dx, dy, add, includeEdges)\n{\n\tadd = (add != null) ? add : true;\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tvar delta = this.deltas.get(state.cell);\n\n\tif (delta == null)\n\t{\n\t\t// Note: Deltas stores the point and the state since the key is a string.\n\t\tdelta = {point: new mxPoint(dx, dy), state: state};\n\t\tthis.deltas.put(state.cell, delta);\n\t\tthis.count++;\n\t}\n\telse if (add)\n\t{\n\t\tdelta.point.x += dx;\n\t\tdelta.point.y += dy;\n\t}\n\telse\n\t{\n\t\tdelta.point.x = dx;\n\t\tdelta.point.y = dy;\n\t}\n\t\n\tif (includeEdges)\n\t{\n\t\tthis.addEdges(state);\n\t}\n\t\n\treturn delta.point;\n};\n\n/**\n * Function: show\n */\nmxCellStatePreview.prototype.show = function(visitor)\n{\n\tthis.deltas.visit(mxUtils.bind(this, function(key, delta)\n\t{\n\t\tthis.translateState(delta.state, delta.point.x, delta.point.y);\n\t}));\n\t\n\tthis.deltas.visit(mxUtils.bind(this, function(key, delta)\n\t{\n\t\tthis.revalidateState(delta.state, delta.point.x, delta.point.y, visitor);\n\t}));\n};\n\n/**\n * Function: translateState\n */\nmxCellStatePreview.prototype.translateState = function(state, dx, dy)\n{\n\tif (state != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tif (model.isVertex(state.cell))\n\t\t{\n\t\t\tstate.view.updateCellState(state);\n\t\t\tvar geo = model.getGeometry(state.cell);\n\t\t\t\n\t\t\t// Moves selection cells and non-relative vertices in\n\t\t\t// the first phase so that edge terminal points will\n\t\t\t// be updated in the second phase\n\t\t\tif ((dx != 0 || dy != 0) && geo != null && (!geo.relative || this.deltas.get(state.cell) != null))\n\t\t\t{\n\t\t\t\tstate.x += dx;\n\t\t\t\tstate.y += dy;\n\t\t\t}\n\t\t}\n\t    \n\t    var childCount = model.getChildCount(state.cell);\n\t    \n\t    for (var i = 0; i < childCount; i++)\n\t    {\n\t    \tthis.translateState(state.view.getState(model.getChildAt(state.cell, i)), dx, dy);\n\t    }\n\t}\n};\n\n/**\n * Function: revalidateState\n */\nmxCellStatePreview.prototype.revalidateState = function(state, dx, dy, visitor)\n{\n\tif (state != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\t// Updates the edge terminal points and restores the\n\t\t// (relative) positions of any (relative) children\n\t\tif (model.isEdge(state.cell))\n\t\t{\n\t\t\tstate.view.updateCellState(state);\n\t\t}\n\n\t\tvar geo = this.graph.getCellGeometry(state.cell);\n\t\tvar pState = state.view.getState(model.getParent(state.cell));\n\t\t\n\t\t// Moves selection vertices which are relative\n\t\tif ((dx != 0 || dy != 0) && geo != null && geo.relative &&\n\t\t\tmodel.isVertex(state.cell) && (pState == null ||\n\t\t\tmodel.isVertex(pState.cell) || this.deltas.get(state.cell) != null))\n\t\t{\n\t\t\tstate.x += dx;\n\t\t\tstate.y += dy;\n\t\t}\n\t\t\n\t\tthis.graph.cellRenderer.redraw(state);\n\t\n\t\t// Invokes the visitor on the given state\n\t\tif (visitor != null)\n\t\t{\n\t\t\tvisitor(state);\n\t\t}\n\t\t\t\t\t\t\n\t    var childCount = model.getChildCount(state.cell);\n\t    \n\t    for (var i = 0; i < childCount; i++)\n\t    {\n\t    \tthis.revalidateState(this.graph.view.getState(model.getChildAt(state.cell, i)), dx, dy, visitor);\n\t    }\n\t}\n};\n\n/**\n * Function: addEdges\n */\nmxCellStatePreview.prototype.addEdges = function(state)\n{\n\tvar model = this.graph.getModel();\n\tvar edgeCount = model.getEdgeCount(state.cell);\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar s = state.view.getState(model.getEdgeAt(state.cell, i));\n\n\t\tif (s != null)\n\t\t{\n\t\t\tthis.moveState(s, 0, 0);\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConnectionConstraint\n * \n * Defines an object that contains the constraints about how to connect one\n * side of an edge to its terminal.\n * \n * Constructor: mxConnectionConstraint\n * \n * Constructs a new connection constraint for the given point and boolean\n * arguments.\n * \n * Parameters:\n * \n * point - Optional <mxPoint> that specifies the fixed location of the point\n * in relative coordinates. Default is null.\n * perimeter - Optional boolean that specifies if the fixed point should be\n * projected onto the perimeter of the terminal. Default is true.\n */\nfunction mxConnectionConstraint(point, perimeter, name)\n{\n\tthis.point = point;\n\tthis.perimeter = (perimeter != null) ? perimeter : true;\n\tthis.name = name;\n};\n\n/**\n * Variable: point\n * \n * <mxPoint> that specifies the fixed location of the connection point.\n */\nmxConnectionConstraint.prototype.point = null;\n\n/**\n * Variable: perimeter\n * \n * Boolean that specifies if the point should be projected onto the perimeter\n * of the terminal.\n */\nmxConnectionConstraint.prototype.perimeter = null;\n\n/**\n * Variable: name\n * \n * Optional string that specifies the name of the constraint.\n */\nmxConnectionConstraint.prototype.name = null;\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHandler\n * \n * Graph event handler that handles selection. Individual cells are handled\n * separately using <mxVertexHandler> or one of the edge handlers. These\n * handlers are created using <mxGraph.createHandler> in\n * <mxGraphSelectionModel.cellAdded>.\n * \n * To avoid the container to scroll a moved cell into view, set\n * <scrollAfterMove> to false.\n * \n * Constructor: mxGraphHandler\n * \n * Constructs an event handler that creates handles for the\n * selection cells.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphHandler(graph)\n{\n\tthis.graph = graph;\n\tthis.graph.addMouseListener(this);\n\t\n\t// Repaints the handler after autoscroll\n\tthis.panHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.updatePreviewShape();\n\t\tthis.updateHint();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.PAN, this.panHandler);\n\t\n\t// Handles escape keystrokes\n\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tthis.reset();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t\n\t// Updates the preview box for remote changes\n\tthis.refreshHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.first != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tthis.bounds = this.graph.getView().getBounds(this.cells);\n\t\t\t\tthis.pBounds = this.getPreviewBounds(this.cells);\n\t\t\t\tthis.updatePreviewShape();\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// Resets the handler if cells have vanished\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}\n\t});\n\t\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphHandler.prototype.graph = null;\n\n/**\n * Variable: maxCells\n * \n * Defines the maximum number of cells to paint subhandles\n * for. Default is 50 for Firefox and 20 for IE. Set this\n * to 0 if you want an unlimited number of handles to be\n * displayed. This is only recommended if the number of\n * cells in the graph is limited to a small number, eg.\n * 500.\n */\nmxGraphHandler.prototype.maxCells = (mxClient.IS_IE) ? 20 : 50;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxGraphHandler.prototype.enabled = true;\n\n/**\n * Variable: highlightEnabled\n * \n * Specifies if drop targets under the mouse should be enabled. Default is\n * true.\n */\nmxGraphHandler.prototype.highlightEnabled = true;\n\n/**\n * Variable: cloneEnabled\n * \n * Specifies if cloning by control-drag is enabled. Default is true.\n */\nmxGraphHandler.prototype.cloneEnabled = true;\n\n/**\n * Variable: moveEnabled\n * \n * Specifies if moving is enabled. Default is true.\n */\nmxGraphHandler.prototype.moveEnabled = true;\n\n/**\n * Variable: guidesEnabled\n * \n * Specifies if other cells should be used for snapping the right, center or\n * left side of the current selection. Default is false.\n */\nmxGraphHandler.prototype.guidesEnabled = false;\n\n/**\n * Variable: guide\n * \n * Holds the <mxGuide> instance that is used for alignment.\n */\nmxGraphHandler.prototype.guide = null;\n\n/**\n * Variable: currentDx\n * \n * Stores the x-coordinate of the current mouse move.\n */\nmxGraphHandler.prototype.currentDx = null;\n\n/**\n * Variable: currentDy\n * \n * Stores the y-coordinate of the current mouse move.\n */\nmxGraphHandler.prototype.currentDy = null;\n\n/**\n * Variable: updateCursor\n * \n * Specifies if a move cursor should be shown if the mouse is over a movable\n * cell. Default is true.\n */\nmxGraphHandler.prototype.updateCursor = true;\n\n/**\n * Variable: selectEnabled\n * \n * Specifies if selecting is enabled. Default is true.\n */\nmxGraphHandler.prototype.selectEnabled = true;\n\n/**\n * Variable: removeCellsFromParent\n * \n * Specifies if cells may be moved out of their parents. Default is true.\n */\nmxGraphHandler.prototype.removeCellsFromParent = true;\n\n/**\n * Variable: connectOnDrop\n * \n * Specifies if drop events are interpreted as new connections if no other\n * drop action is defined. Default is false.\n */\nmxGraphHandler.prototype.connectOnDrop = false;\n\n/**\n * Variable: scrollOnMove\n * \n * Specifies if the view should be scrolled so that a moved cell is\n * visible. Default is true.\n */\nmxGraphHandler.prototype.scrollOnMove = true;\n\n/**\n * Variable: minimumSize\n * \n * Specifies the minimum number of pixels for the width and height of a\n * selection border. Default is 6.\n */\nmxGraphHandler.prototype.minimumSize = 6;\n\n/**\n * Variable: previewColor\n * \n * Specifies the color of the preview shape. Default is black.\n */\nmxGraphHandler.prototype.previewColor = 'black';\n\n/**\n * Variable: htmlPreview\n * \n * Specifies if the graph container should be used for preview. If this is used\n * then drop target detection relies entirely on <mxGraph.getCellAt> because\n * the HTML preview does not \"let events through\". Default is false.\n */\nmxGraphHandler.prototype.htmlPreview = false;\n\n/**\n * Variable: shape\n * \n * Reference to the <mxShape> that represents the preview.\n */\nmxGraphHandler.prototype.shape = null;\n\n/**\n * Variable: scaleGrid\n * \n * Specifies if the grid should be scaled. Default is false.\n */\nmxGraphHandler.prototype.scaleGrid = false;\n\n/**\n * Variable: rotationEnabled\n * \n * Specifies if the bounding box should allow for rotation. Default is true.\n */\nmxGraphHandler.prototype.rotationEnabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxGraphHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxGraphHandler.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isCloneEnabled\n * \n * Returns <cloneEnabled>.\n */\nmxGraphHandler.prototype.isCloneEnabled = function()\n{\n\treturn this.cloneEnabled;\n};\n\n/**\n * Function: setCloneEnabled\n * \n * Sets <cloneEnabled>.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new clone enabled state.\n */\nmxGraphHandler.prototype.setCloneEnabled = function(value)\n{\n\tthis.cloneEnabled = value;\n};\n\n/**\n * Function: isMoveEnabled\n * \n * Returns <moveEnabled>.\n */\nmxGraphHandler.prototype.isMoveEnabled = function()\n{\n\treturn this.moveEnabled;\n};\n\n/**\n * Function: setMoveEnabled\n * \n * Sets <moveEnabled>.\n */\nmxGraphHandler.prototype.setMoveEnabled = function(value)\n{\n\tthis.moveEnabled = value;\n};\n\n/**\n * Function: isSelectEnabled\n * \n * Returns <selectEnabled>.\n */\nmxGraphHandler.prototype.isSelectEnabled = function()\n{\n\treturn this.selectEnabled;\n};\n\n/**\n * Function: setSelectEnabled\n * \n * Sets <selectEnabled>.\n */\nmxGraphHandler.prototype.setSelectEnabled = function(value)\n{\n\tthis.selectEnabled = value;\n};\n\n/**\n * Function: isRemoveCellsFromParent\n * \n * Returns <removeCellsFromParent>.\n */\nmxGraphHandler.prototype.isRemoveCellsFromParent = function()\n{\n\treturn this.removeCellsFromParent;\n};\n\n/**\n * Function: setRemoveCellsFromParent\n * \n * Sets <removeCellsFromParent>.\n */\nmxGraphHandler.prototype.setRemoveCellsFromParent = function(value)\n{\n\tthis.removeCellsFromParent = value;\n};\n\n/**\n * Function: getInitialCellForEvent\n * \n * Hook to return initial cell for the given event.\n */\nmxGraphHandler.prototype.getInitialCellForEvent = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: isDelayedSelection\n * \n * Hook to return true for delayed selections.\n */\nmxGraphHandler.prototype.isDelayedSelection = function(cell, me)\n{\n\treturn this.graph.isCellSelected(cell);\n};\n\n/**\n * Function: consumeMouseEvent\n * \n * Consumes the given mouse event. NOTE: This may be used to enable click\n * events for links in labels on iOS as follows as consuming the initial\n * touchStart disables firing the subsequent click evnent on the link.\n * \n * <code>\n * mxGraphHandler.prototype.consumeMouseEvent = function(evtName, me)\n * {\n *   var source = mxEvent.getSource(me.getEvent());\n *   \n *   if (!mxEvent.isTouchEvent(me.getEvent()) || source.nodeName != 'A')\n *   {\n *     me.consume();\n *   }\n * }\n * </code>\n */\nmxGraphHandler.prototype.consumeMouseEvent = function(evtName, me)\n{\n\tme.consume();\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by selecing the given cell and creating a handle for\n * it. By consuming the event all subsequent events of the gesture are\n * redirected to this handler.\n */\nmxGraphHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isEnabled() && this.graph.isEnabled() &&\n\t\tme.getState() != null && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\tvar cell = this.getInitialCellForEvent(me);\n\t\tthis.delayedSelection = this.isDelayedSelection(cell, me);\n\t\tthis.cell = null;\n\t\t\n\t\tif (this.isSelectEnabled() && !this.delayedSelection)\n\t\t{\n\t\t\tthis.graph.selectCellForEvent(cell, me.getEvent());\n\t\t}\n\n\t\tif (this.isMoveEnabled())\n\t\t{\n\t\t\tvar model = this.graph.model;\n\t\t\tvar geo = model.getGeometry(cell);\n\n\t\t\tif (this.graph.isCellMovable(cell) && ((!model.isEdge(cell) || this.graph.getSelectionCount() > 1 ||\n\t\t\t\t(geo.points != null && geo.points.length > 0) || model.getTerminal(cell, true) == null ||\n\t\t\t\tmodel.getTerminal(cell, false) == null) || this.graph.allowDanglingEdges || \n\t\t\t\t(this.graph.isCloneEvent(me.getEvent()) && this.graph.isCellsCloneable())))\n\t\t\t{\n\t\t\t\tthis.start(cell, me.getX(), me.getY());\n\t\t\t}\n\t\t\telse if (this.delayedSelection)\n\t\t\t{\n\t\t\t\tthis.cell = cell;\n\t\t\t}\n\n\t\t\tthis.cellWasClicked = true;\n\t\t\tthis.consumeMouseEvent(mxEvent.MOUSE_DOWN, me);\n\t\t}\n\t}\n};\n\n/**\n * Function: getGuideStates\n * \n * Creates an array of cell states which should be used as guides.\n */\nmxGraphHandler.prototype.getGuideStates = function()\n{\n\tvar parent = this.graph.getDefaultParent();\n\tvar model = this.graph.getModel();\n\t\n\tvar filter = mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.graph.view.getState(cell) != null &&\n\t\t\tmodel.isVertex(cell) &&\n\t\t\tmodel.getGeometry(cell) != null &&\n\t\t\t!model.getGeometry(cell).relative;\n\t});\n\t\n\treturn this.graph.view.getCellStates(model.filterDescendants(filter, parent));\n};\n\n/**\n * Function: getCells\n * \n * Returns the cells to be modified by this handler. This implementation\n * returns all selection cells that are movable, or the given initial cell if\n * the given cell is not selected and movable. This handles the case of moving\n * unselectable or unselected cells.\n * \n * Parameters:\n * \n * initialCell - <mxCell> that triggered this handler.\n */\nmxGraphHandler.prototype.getCells = function(initialCell)\n{\n\tif (!this.delayedSelection && this.graph.isCellMovable(initialCell))\n\t{\n\t\treturn [initialCell];\n\t}\n\telse\n\t{\n\t\treturn this.graph.getMovableCells(this.graph.getSelectionCells());\n\t}\n};\n\n/**\n * Function: getPreviewBounds\n * \n * Returns the <mxRectangle> used as the preview bounds for\n * moving the given cells.\n */\nmxGraphHandler.prototype.getPreviewBounds = function(cells)\n{\n\tvar bounds = this.getBoundingBox(cells);\n\t\n\tif (bounds != null)\n\t{\n\t\t// Corrects width and height\n\t\tbounds.width = Math.max(0, bounds.width - 1);\n\t\tbounds.height = Math.max(0, bounds.height - 1);\n\t\t\n\t\tif (bounds.width < this.minimumSize)\n\t\t{\n\t\t\tvar dx = this.minimumSize - bounds.width;\n\t\t\tbounds.x -= dx / 2;\n\t\t\tbounds.width = this.minimumSize;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds.x = Math.round(bounds.x);\n\t\t\tbounds.width = Math.ceil(bounds.width);\n\t\t}\n\t\t\n\t\tvar tr = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\t\n\t\tif (bounds.height < this.minimumSize)\n\t\t{\n\t\t\tvar dy = this.minimumSize - bounds.height;\n\t\t\tbounds.y -= dy / 2;\n\t\t\tbounds.height = this.minimumSize;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds.y = Math.round(bounds.y);\n\t\t\tbounds.height = Math.ceil(bounds.height);\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the union of the <mxCellStates> for the given array of <mxCells>.\n * For vertices, this method uses the bounding box of the corresponding shape\n * if one exists. The bounding box of the corresponding text label and all\n * controls and overlays are ignored. See also: <mxGraphView.getBounds> and\n * <mxGraph.getBoundingBox>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounding box should be returned.\n */\nmxGraphHandler.prototype.getBoundingBox = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (model.isVertex(cells[i]) || model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar state = this.graph.view.getState(cells[i]);\n\t\t\t\n\t\t\t\tif (state != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = state;\n\t\t\t\t\t\n\t\t\t\t\tif (model.isVertex(cells[i]) && state.shape != null && state.shape.boundingBox != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox = state.shape.boundingBox;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createPreviewShape\n * \n * Creates the shape used to draw the preview for the given bounds.\n */\nmxGraphHandler.prototype.createPreviewShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.previewColor);\n\tshape.isDashed = true;\n\t\n\tif (this.htmlPreview)\n\t{\n\t\tshape.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tshape.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t// event-transparency on the background area of the rectangle since\n\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\tshape.init(this.graph.getView().getOverlayPane());\n\t\tshape.pointerEvents = false;\n\t\t\n\t\t// Workaround for artifacts on iOS\n\t\tif (mxClient.IS_IOS)\n\t\t{\n\t\t\tshape.getSvgScreenOffset = function()\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxGraphHandler.prototype.start = function(cell, x, y)\n{\n\tthis.cell = cell;\n\tthis.first = mxUtils.convertPoint(this.graph.container, x, y);\n\tthis.cells = this.getCells(this.cell);\n\tthis.bounds = this.graph.getView().getBounds(this.cells);\n\tthis.pBounds = this.getPreviewBounds(this.cells);\n\n\tif (this.guidesEnabled)\n\t{\n\t\tthis.guide = new mxGuide(this.graph, this.getGuideStates());\n\t}\n};\n\n/**\n * Function: useGuidesForEvent\n * \n * Returns true if the guides should be used for the given <mxMouseEvent>.\n * This implementation returns <mxGuide.isEnabledForEvent>.\n */\nmxGraphHandler.prototype.useGuidesForEvent = function(me)\n{\n\treturn (this.guide != null) ? this.guide.isEnabledForEvent(me.getEvent()) : true;\n};\n\n\n/**\n * Function: snap\n * \n * Snaps the given vector to the grid and returns the given mxPoint instance.\n */\nmxGraphHandler.prototype.snap = function(vector)\n{\n\tvar scale = (this.scaleGrid) ? this.graph.view.scale : 1;\n\t\n\tvector.x = this.graph.snap(vector.x / scale) * scale;\n\tvector.y = this.graph.snap(vector.y / scale) * scale;\n\t\n\treturn vector;\n};\n\n/**\n * Function: getDelta\n * \n * Returns an <mxPoint> that represents the vector for moving the cells\n * for the given <mxMouseEvent>.\n */\nmxGraphHandler.prototype.getDelta = function(me)\n{\n\tvar point = mxUtils.convertPoint(this.graph.container, me.getX(), me.getY());\n\tvar s = this.graph.view.scale;\n\t\n\treturn new mxPoint(this.roundLength((point.x - this.first.x) / s) * s,\n\t\tthis.roundLength((point.y - this.first.y) / s) * s);\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxGraphHandler.prototype.updateHint = function(me) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxGraphHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled vector. This uses Math.round.\n */\nmxGraphHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length * 2) / 2;\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by highlighting possible drop targets and updating the\n * preview.\n */\nmxGraphHandler.prototype.mouseMove = function(sender, me)\n{\n\tvar graph = this.graph;\n\n\tif (!me.isConsumed() && graph.isMouseDown && this.cell != null &&\n\t\tthis.first != null && this.bounds != null)\n\t{\n\t\t// Stops moving if a multi touch event is received\n\t\tif (mxEvent.isMultiTouchEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar delta = this.getDelta(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\tvar tol = graph.tolerance;\n\n\t\tif (this.shape != null || Math.abs(dx) > tol || Math.abs(dy) > tol)\n\t\t{\n\t\t\t// Highlight is used for highlighting drop targets\n\t\t\tif (this.highlight == null)\n\t\t\t{\n\t\t\t\tthis.highlight = new mxCellHighlight(this.graph,\n\t\t\t\t\tmxConstants.DROP_TARGET_COLOR, 3);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.shape == null)\n\t\t\t{\n\t\t\t\tthis.shape = this.createPreviewShape(this.bounds);\n\t\t\t}\n\t\t\t\n\t\t\tvar clone = graph.isCloneEvent(me.getEvent()) && graph.isCellsCloneable() && this.isCloneEnabled();\n\t\t\tvar gridEnabled = graph.isGridEnabledEvent(me.getEvent());\n\t\t\tvar hideGuide = true;\n\t\t\t\n\t\t\tif (this.guide != null && this.useGuidesForEvent(me))\n\t\t\t{\n\t\t\t\tdelta = this.guide.move(this.bounds, new mxPoint(dx, dy), gridEnabled, clone);\n\t\t\t\thideGuide = false;\n\t\t\t\tdx = delta.x;\n\t\t\t\tdy = delta.y;\n\t\t\t}\n\t\t\telse if (gridEnabled)\n\t\t\t{\n\t\t\t\tvar trx = graph.getView().translate;\n\t\t\t\tvar scale = graph.getView().scale;\t\t\t\t\n\t\t\t\t\n\t\t\t\tvar tx = this.bounds.x - (graph.snap(this.bounds.x / scale - trx.x) + trx.x) * scale;\n\t\t\t\tvar ty = this.bounds.y - (graph.snap(this.bounds.y / scale - trx.y) + trx.y) * scale;\n\t\t\t\tvar v = this.snap(new mxPoint(dx, dy));\n\t\t\t\n\t\t\t\tdx = v.x - tx;\n\t\t\t\tdy = v.y - ty;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.guide != null && hideGuide)\n\t\t\t{\n\t\t\t\tthis.guide.hide();\n\t\t\t}\n\n\t\t\t// Constrained movement if shift key is pressed\n\t\t\tif (graph.isConstrainedEvent(me.getEvent()))\n\t\t\t{\n\t\t\t\tif (Math.abs(dx) > Math.abs(dy))\n\t\t\t\t{\n\t\t\t\t\tdy = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdx = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.currentDx = dx;\n\t\t\tthis.currentDy = dy;\n\t\t\tthis.updatePreviewShape();\n\n\t\t\tvar target = null;\n\t\t\tvar cell = me.getCell();\n\n\t\t\tif (graph.isDropEnabled() && this.highlightEnabled)\n\t\t\t{\n\t\t\t\t// Contains a call to getCellAt to find the cell under the mouse\n\t\t\t\ttarget = graph.getDropTarget(this.cells, me.getEvent(), cell, clone);\n\t\t\t}\n\n\t\t\tvar state = graph.getView().getState(target);\n\t\t\tvar highlight = false;\n\t\t\t\n\t\t\tif (state != null && (graph.model.getParent(this.cell) != target || clone))\n\t\t\t{\n\t\t\t    if (this.target != target)\n\t\t\t    {\n\t\t\t\t    this.target = target;\n\t\t\t\t    this.setHighlightColor(mxConstants.DROP_TARGET_COLOR);\n\t\t\t\t}\n\t\t\t    \n\t\t\t    highlight = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.target = null;\n\n\t\t\t\tif (this.connectOnDrop && cell != null && this.cells.length == 1 &&\n\t\t\t\t\tgraph.getModel().isVertex(cell) && graph.isCellConnectable(cell))\n\t\t\t\t{\n\t\t\t\t\tstate = graph.getView().getState(cell);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar error = graph.getEdgeValidationError(null, this.cell, cell);\n\t\t\t\t\t\tvar color = (error == null) ?\n\t\t\t\t\t\t\tmxConstants.VALID_COLOR :\n\t\t\t\t\t\t\tmxConstants.INVALID_CONNECT_TARGET_COLOR;\n\t\t\t\t\t\tthis.setHighlightColor(color);\n\t\t\t\t\t\thighlight = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (state != null && highlight)\n\t\t\t{\n\t\t\t\tthis.highlight.highlight(state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.highlight.hide();\n\t\t\t}\n\t\t}\n\n\t\tthis.updateHint(me);\n\t\tthis.consumeMouseEvent(mxEvent.MOUSE_MOVE, me);\n\t\t\n\t\t// Cancels the bubbling of events to the container so\n\t\t// that the droptarget is not reset due to an mouseMove\n\t\t// fired on the container with no associated state.\n\t\tmxEvent.consume(me.getEvent());\n\t}\n\telse if ((this.isMoveEnabled() || this.isCloneEnabled()) && this.updateCursor && !me.isConsumed() &&\n\t\t(me.getState() != null || me.sourceState != null) && !graph.isMouseDown)\n\t{\n\t\tvar cursor = graph.getCursorForMouseEvent(me);\n\t\t\n\t\tif (cursor == null && graph.isEnabled() && graph.isCellMovable(me.getCell()))\n\t\t{\n\t\t\tif (graph.getModel().isEdge(me.getCell()))\n\t\t\t{\n\t\t\t\tcursor = mxConstants.CURSOR_MOVABLE_EDGE;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcursor = mxConstants.CURSOR_MOVABLE_VERTEX;\n\t\t\t}\n\t\t}\n\n\t\t// Sets the cursor on the original source state under the mouse\n\t\t// instead of the event source state which can be the parent\n\t\tif (cursor != null && me.sourceState != null)\n\t\t{\n\t\t\tme.sourceState.setCursor(cursor);\n\t\t}\n\t}\n};\n\n/**\n * Function: updatePreviewShape\n * \n * Updates the bounds of the preview shape.\n */\nmxGraphHandler.prototype.updatePreviewShape = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.bounds = new mxRectangle(Math.round(this.pBounds.x + this.currentDx - this.graph.panDx),\n\t\t\t\tMath.round(this.pBounds.y + this.currentDy - this.graph.panDy), this.pBounds.width, this.pBounds.height);\n\t\tthis.shape.redraw();\n\t}\n};\n\n/**\n * Function: setHighlightColor\n * \n * Sets the color of the rectangle used to highlight drop targets.\n * \n * Parameters:\n * \n * color - String that represents the new highlight color.\n */\nmxGraphHandler.prototype.setHighlightColor = function(color)\n{\n\tif (this.highlight != null)\n\t{\n\t\tthis.highlight.setHighlightColor(color);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the changes to the selection cells.\n */\nmxGraphHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (!me.isConsumed())\n\t{\n\t\tvar graph = this.graph;\n\t\t\n\t\tif (this.cell != null && this.first != null && this.shape != null &&\n\t\t\tthis.currentDx != null && this.currentDy != null)\n\t\t{\n\t\t\tvar cell = me.getCell();\n\t\t\t\n\t\t\tif (this.connectOnDrop && this.target == null && cell != null && graph.getModel().isVertex(cell) &&\n\t\t\t\tgraph.isCellConnectable(cell) && graph.isEdgeValid(null, this.cell, cell))\n\t\t\t{\n\t\t\t\tgraph.connectionHandler.connect(this.cell, cell, me.getEvent());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar clone = graph.isCloneEvent(me.getEvent()) && graph.isCellsCloneable() && this.isCloneEnabled();\n\t\t\t\tvar scale = graph.getView().scale;\n\t\t\t\tvar dx = this.roundLength(this.currentDx / scale);\n\t\t\t\tvar dy = this.roundLength(this.currentDy / scale);\n\t\t\t\tvar target = this.target;\n\t\t\t\t\n\t\t\t\tif (graph.isSplitEnabled() && graph.isSplitTarget(target, this.cells, me.getEvent()))\n\t\t\t\t{\n\t\t\t\t\tgraph.splitEdge(target, this.cells, null, dx, dy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.moveCells(this.cells, dx, dy, clone, this.target, me.getEvent());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.isSelectEnabled() && this.delayedSelection && this.cell != null)\n\t\t{\n\t\t\tthis.selectDelayed(me);\n\t\t}\n\t}\n\n\t// Consumes the event if a cell was initially clicked\n\tif (this.cellWasClicked)\n\t{\n\t\tthis.consumeMouseEvent(mxEvent.MOUSE_UP, me);\n\t}\n\n\tthis.reset();\n};\n\n/**\n * Function: selectDelayed\n * \n * Implements the delayed selection for the given mouse event.\n */\nmxGraphHandler.prototype.selectDelayed = function(me)\n{\n\tif (!this.graph.isCellSelected(this.cell) || !this.graph.popupMenuHandler.isPopupTrigger(me))\n\t{\n\t\tthis.graph.selectCellForEvent(this.cell, me.getEvent());\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxGraphHandler.prototype.reset = function()\n{\n\tthis.destroyShapes();\n\tthis.removeHint();\n\t\n\tthis.cellWasClicked = false;\n\tthis.delayedSelection = false;\n\tthis.currentDx = null;\n\tthis.currentDy = null;\n\tthis.guides = null;\n\tthis.first = null;\n\tthis.cell = null;\n\tthis.target = null;\n};\n\n/**\n * Function: shouldRemoveCellsFromParent\n * \n * Returns true if the given cells should be removed from the parent for the specified\n * mousereleased event.\n */\nmxGraphHandler.prototype.shouldRemoveCellsFromParent = function(parent, cells, evt)\n{\n\tif (this.graph.getModel().isVertex(parent))\n\t{\n\t\tvar pState = this.graph.getView().getState(parent);\n\t\t\n\t\tif (pState != null)\n\t\t{\n\t\t\tvar pt = mxUtils.convertPoint(this.graph.container,\n\t\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(pState.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(pState.getCenterX(), pState.getCenterY());\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, cx);\n\t\t\t}\n\t\t\n\t\t\treturn !mxUtils.contains(pState, pt.x, pt.y);\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: moveCells\n * \n * Moves the given cells by the specified amount.\n */\nmxGraphHandler.prototype.moveCells = function(cells, dx, dy, clone, target, evt)\n{\n\tif (clone)\n\t{\n\t\tcells = this.graph.getCloneableCells(cells);\n\t}\n\t\n\t// Removes cells from parent\n\tif (target == null && this.isRemoveCellsFromParent() &&\n\t\tthis.shouldRemoveCellsFromParent(this.graph.getModel().getParent(this.cell), cells, evt))\n\t{\n\t\ttarget = this.graph.getDefaultParent();\n\t}\n\t\n\t// Cloning into locked cells is not allowed\n\tclone = clone && !this.graph.isCellLocked(target || this.graph.getDefaultParent());\n\t\n\t// Passes all selected cells in order to correctly clone or move into\n\t// the target cell. The method checks for each cell if its movable.\n\tcells = this.graph.moveCells(cells, dx - this.graph.panDx / this.graph.view.scale,\n\t\t\tdy - this.graph.panDy / this.graph.view.scale, clone, target, evt);\n\t\n\tif (this.isSelectEnabled() && this.scrollOnMove)\n\t{\n\t\tthis.graph.scrollCellToVisible(cells[0]);\n\t}\n\t\t\t\n\t// Selects the new cells if cells have been cloned\n\tif (clone)\n\t{\n\t\tthis.graph.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Function: destroyShapes\n * \n * Destroy the preview and highlight shapes.\n */\nmxGraphHandler.prototype.destroyShapes = function()\n{\n\t// Destroys the preview dashed rectangle\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.guide != null)\n\t{\n\t\tthis.guide.destroy();\n\t\tthis.guide = null;\n\t}\n\t\n\t// Destroys the drop target highlight\n\tif (this.highlight != null)\n\t{\n\t\tthis.highlight.destroy();\n\t\tthis.highlight = null;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxGraphHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.panHandler);\n\t\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.refreshHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.refreshHandler);\n\t\tthis.refreshHandler = null;\n\t}\n\t\n\tthis.destroyShapes();\n\tthis.removeHint();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPanningHandler\n * \n * Event handler that pans and creates popupmenus. To use the left\n * mousebutton for panning without interfering with cell moving and\n * resizing, use <isUseLeftButton> and <isIgnoreCell>. For grid size\n * steps while panning, use <useGrid>. This handler is built-into\n * <mxGraph.panningHandler> and enabled using <mxGraph.setPanning>.\n * \n * Constructor: mxPanningHandler\n * \n * Constructs an event handler that creates a <mxPopupMenu>\n * and pans the graph.\n *\n * Event: mxEvent.PAN_START\n *\n * Fires when the panning handler changes its <active> state to true. The\n * <code>event</code> property contains the corresponding <mxMouseEvent>.\n *\n * Event: mxEvent.PAN\n *\n * Fires while handle is processing events. The <code>event</code> property contains\n * the corresponding <mxMouseEvent>.\n *\n * Event: mxEvent.PAN_END\n *\n * Fires when the panning handler changes its <active> state to false. The\n * <code>event</code> property contains the corresponding <mxMouseEvent>.\n */\nfunction mxPanningHandler(graph)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.graph.addMouseListener(this);\n\n\t\t// Handles force panning event\n\t\tthis.forcePanningHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar evtName = evt.getProperty('eventName');\n\t\t\tvar me = evt.getProperty('event');\n\t\t\t\n\t\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isForcePanningEvent(me))\n\t\t\t{\n\t\t\t\tthis.start(me);\n\t\t\t\tthis.active = true;\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_START, 'event', me));\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.forcePanningHandler);\n\t\t\n\t\t// Handles pinch gestures\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tif (this.isPinchEnabled())\n\t\t\t{\n\t\t\t\tvar evt = eo.getProperty('event');\n\t\t\t\t\n\t\t\t\tif (!mxEvent.isConsumed(evt) && evt.type == 'gesturestart')\n\t\t\t\t{\n\t\t\t\t\tthis.initialScale = this.graph.view.scale;\n\t\t\t\t\n\t\t\t\t\t// Forces start of panning when pinch gesture starts\n\t\t\t\t\tif (!this.active && this.mouseDownEvent != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.start(this.mouseDownEvent);\n\t\t\t\t\t\tthis.mouseDownEvent = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (evt.type == 'gestureend' && this.initialScale != null)\n\t\t\t\t{\n\t\t\t\t\tthis.initialScale = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.initialScale != null)\n\t\t\t\t{\n\t\t\t\t\tvar value = Math.round(this.initialScale * evt.scale * 100) / 100;\n\t\t\t\t\t\n\t\t\t\t\tif (this.minScale != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue = Math.max(this.minScale, value);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.maxScale != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue = Math.min(this.maxScale, value);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (this.graph.view.scale != value)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.zoomTo(value);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\tthis.mouseUpListener = mxUtils.bind(this, function()\n\t\t{\n\t\t    \tif (this.active)\n\t\t    \t{\n\t\t    \t\tthis.reset();\n\t\t    \t}\n\t\t});\n\t\t\n\t\t// Stops scrolling on every mouseup anywhere in the document\n\t\tmxEvent.addListener(document, 'mouseup', this.mouseUpListener);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxPanningHandler.prototype = new mxEventSource();\nmxPanningHandler.prototype.constructor = mxPanningHandler;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxPanningHandler.prototype.graph = null;\n\n/**\n * Variable: useLeftButtonForPanning\n * \n * Specifies if panning should be active for the left mouse button.\n * Setting this to true may conflict with <mxRubberband>. Default is false.\n */\nmxPanningHandler.prototype.useLeftButtonForPanning = false;\n\n/**\n * Variable: usePopupTrigger\n * \n * Specifies if <mxEvent.isPopupTrigger> should also be used for panning.\n */\nmxPanningHandler.prototype.usePopupTrigger = true;\n\n/**\n * Variable: ignoreCell\n * \n * Specifies if panning should be active even if there is a cell under the\n * mousepointer. Default is false.\n */\nmxPanningHandler.prototype.ignoreCell = false;\n\n/**\n * Variable: previewEnabled\n * \n * Specifies if the panning should be previewed. Default is true.\n */\nmxPanningHandler.prototype.previewEnabled = true;\n\n/**\n * Variable: useGrid\n * \n * Specifies if the panning steps should be aligned to the grid size.\n * Default is false.\n */\nmxPanningHandler.prototype.useGrid = false;\n\n/**\n * Variable: panningEnabled\n * \n * Specifies if panning should be enabled. Default is true.\n */\nmxPanningHandler.prototype.panningEnabled = true;\n\n/**\n * Variable: pinchEnabled\n * \n * Specifies if pinch gestures should be handled as zoom. Default is true.\n */\nmxPanningHandler.prototype.pinchEnabled = true;\n\n/**\n * Variable: maxScale\n * \n * Specifies the maximum scale. Default is 8.\n */\nmxPanningHandler.prototype.maxScale = 8;\n\n/**\n * Variable: minScale\n * \n * Specifies the minimum scale. Default is 0.01.\n */\nmxPanningHandler.prototype.minScale = 0.01;\n\n/**\n * Variable: dx\n * \n * Holds the current horizontal offset.\n */\nmxPanningHandler.prototype.dx = null;\n\n/**\n * Variable: dy\n * \n * Holds the current vertical offset.\n */\nmxPanningHandler.prototype.dy = null;\n\n/**\n * Variable: startX\n * \n * Holds the x-coordinate of the start point.\n */\nmxPanningHandler.prototype.startX = 0;\n\n/**\n * Variable: startY\n * \n * Holds the y-coordinate of the start point.\n */\nmxPanningHandler.prototype.startY = 0;\n\n/**\n * Function: isActive\n * \n * Returns true if the handler is currently active.\n */\nmxPanningHandler.prototype.isActive = function()\n{\n\treturn this.active || this.initialScale != null;\n};\n\n/**\n * Function: isPanningEnabled\n * \n * Returns <panningEnabled>.\n */\nmxPanningHandler.prototype.isPanningEnabled = function()\n{\n\treturn this.panningEnabled;\n};\n\n/**\n * Function: setPanningEnabled\n * \n * Sets <panningEnabled>.\n */\nmxPanningHandler.prototype.setPanningEnabled = function(value)\n{\n\tthis.panningEnabled = value;\n};\n\n/**\n * Function: isPinchEnabled\n * \n * Returns <pinchEnabled>.\n */\nmxPanningHandler.prototype.isPinchEnabled = function()\n{\n\treturn this.pinchEnabled;\n};\n\n/**\n * Function: setPinchEnabled\n * \n * Sets <pinchEnabled>.\n */\nmxPanningHandler.prototype.setPinchEnabled = function(value)\n{\n\tthis.pinchEnabled = value;\n};\n\n/**\n * Function: isPanningTrigger\n * \n * Returns true if the given event is a panning trigger for the optional\n * given cell. This returns true if control-shift is pressed or if\n * <usePopupTrigger> is true and the event is a popup trigger.\n */\nmxPanningHandler.prototype.isPanningTrigger = function(me)\n{\n\tvar evt = me.getEvent();\n\t\n\treturn (this.useLeftButtonForPanning && me.getState() == null &&\n\t\t\tmxEvent.isLeftMouseButton(evt)) || (mxEvent.isControlDown(evt) &&\n\t\t\tmxEvent.isShiftDown(evt)) || (this.usePopupTrigger && mxEvent.isPopupTrigger(evt));\n};\n\n/**\n * Function: isForcePanningEvent\n * \n * Returns true if the given <mxMouseEvent> should start panning. This\n * implementation always returns true if <ignoreCell> is true or for\n * multi touch events.\n */\nmxPanningHandler.prototype.isForcePanningEvent = function(me)\n{\n\treturn this.ignoreCell || mxEvent.isMultiTouchEvent(me.getEvent());\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating the panning. By consuming the event all\n * subsequent events of the gesture are redirected to this handler.\n */\nmxPanningHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.mouseDownEvent = me;\n\t\n\tif (!me.isConsumed() && this.isPanningEnabled() && !this.active && this.isPanningTrigger(me))\n\t{\n\t\tthis.start(me);\n\t\tthis.consumePanningTrigger(me);\n\t}\n};\n\n/**\n * Function: start\n * \n * Starts panning at the given event.\n */\nmxPanningHandler.prototype.start = function(me)\n{\n\tthis.dx0 = -this.graph.container.scrollLeft;\n\tthis.dy0 = -this.graph.container.scrollTop;\n\n\t// Stores the location of the trigger event\n\tthis.startX = me.getX();\n\tthis.startY = me.getY();\n\tthis.dx = null;\n\tthis.dy = null;\n\t\n\tthis.panningTrigger = true;\n};\n\n/**\n * Function: consumePanningTrigger\n * \n * Consumes the given <mxMouseEvent> if it was a panning trigger in\n * <mouseDown>. The default is to invoke <mxMouseEvent.consume>. Note that this\n * will block any further event processing. If you haven't disabled built-in\n * context menus and require immediate selection of the cell on mouseDown in\n * Safari and/or on the Mac, then use the following code:\n * \n * (code)\n * mxPanningHandler.prototype.consumePanningTrigger = function(me)\n * {\n *   if (me.evt.preventDefault)\n *   {\n *     me.evt.preventDefault();\n *   }\n *   \n *   // Stops event processing in IE\n *   me.evt.returnValue = false;\n *   \n *   // Sets local consumed state\n *   if (!mxClient.IS_SF && !mxClient.IS_MAC)\n *   {\n *     me.consumed = true;\n *   }\n * };\n * (end)\n */\nmxPanningHandler.prototype.consumePanningTrigger = function(me)\n{\n\tme.consume();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the panning on the graph.\n */\nmxPanningHandler.prototype.mouseMove = function(sender, me)\n{\n\tthis.dx = me.getX() - this.startX;\n\tthis.dy = me.getY() - this.startY;\n\t\n\tif (this.active)\n\t{\n\t\tif (this.previewEnabled)\n\t\t{\n\t\t\t// Applies the grid to the panning steps\n\t\t\tif (this.useGrid)\n\t\t\t{\n\t\t\t\tthis.dx = this.graph.snap(this.dx);\n\t\t\t\tthis.dy = this.graph.snap(this.dy);\n\t\t\t}\n\t\t\t\n\t\t\tthis.graph.panGraph(this.dx + this.dx0, this.dy + this.dy0);\n\t\t}\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN, 'event', me));\n\t}\n\telse if (this.panningTrigger)\n\t{\n\t\tvar tmp = this.active;\n\n\t\t// Panning is activated only if the mouse is moved\n\t\t// beyond the graph tolerance\n\t\tthis.active = Math.abs(this.dx) > this.graph.tolerance || Math.abs(this.dy) > this.graph.tolerance;\n\n\t\tif (!tmp && this.active)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_START, 'event', me));\n\t\t}\n\t}\n\t\n\tif (this.active || this.panningTrigger)\n\t{\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPanningHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tif (this.dx != null && this.dy != null)\n\t\t{\n\t\t\t// Ignores if scrollbars have been used for panning\n\t\t\tif (!this.graph.useScrollbarsForPanning || !mxUtils.hasScrollbars(this.graph.container))\n\t\t\t{\n\t\t\t\tvar scale = this.graph.getView().scale;\n\t\t\t\tvar t = this.graph.getView().translate;\n\t\t\t\tthis.graph.panGraph(0, 0);\n\t\t\t\tthis.panGraph(t.x + this.dx / scale, t.y + this.dy / scale);\n\t\t\t}\n\t\t\t\n\t\t\tme.consume();\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_END, 'event', me));\n\t}\n\t\n\tthis.reset();\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPanningHandler.prototype.reset = function()\n{\n\tthis.panningTrigger = false;\n\tthis.mouseDownEvent = null;\n\tthis.active = false;\n\tthis.dx = null;\n\tthis.dy = null;\n};\n\n/**\n * Function: panGraph\n * \n * Pans <graph> by the given amount.\n */\nmxPanningHandler.prototype.panGraph = function(dx, dy)\n{\n\tthis.graph.getView().setTranslate(dx, dy);\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPanningHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.forcePanningHandler);\n\tthis.graph.removeListener(this.gestureHandler);\n\tmxEvent.removeListener(document, 'mouseup', this.mouseUpListener);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPopupMenuHandler\n * \n * Event handler that creates popupmenus.\n * \n * Constructor: mxPopupMenuHandler\n * \n * Constructs an event handler that creates a <mxPopupMenu>.\n */\nfunction mxPopupMenuHandler(graph, factoryMethod)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.factoryMethod = factoryMethod;\n\t\tthis.graph.addMouseListener(this);\n\t\t\n\t\t// Does not show menu if any touch gestures take place after the trigger\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\tthis.init();\n\t}\n};\n\n/**\n * Extends mxPopupMenu.\n */\nmxPopupMenuHandler.prototype = new mxPopupMenu();\nmxPopupMenuHandler.prototype.constructor = mxPopupMenuHandler;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxPopupMenuHandler.prototype.graph = null;\n\n/**\n * Variable: selectOnPopup\n * \n * Specifies if cells should be selected if a popupmenu is displayed for\n * them. Default is true.\n */\nmxPopupMenuHandler.prototype.selectOnPopup = true;\n\n/**\n * Variable: clearSelectionOnBackground\n * \n * Specifies if cells should be deselected if a popupmenu is displayed for\n * the diagram background. Default is true.\n */\nmxPopupMenuHandler.prototype.clearSelectionOnBackground = true;\n\n/**\n * Variable: triggerX\n * \n * X-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.triggerX = null;\n\n/**\n * Variable: triggerY\n * \n * Y-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.triggerY = null;\n\n/**\n * Variable: screenX\n * \n * Screen X-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.screenX = null;\n\n/**\n * Variable: screenY\n * \n * Screen Y-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.screenY = null;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxPopupMenuHandler.prototype.init = function()\n{\n\t// Supercall\n\tmxPopupMenu.prototype.init.apply(this);\n\n\t// Hides the tooltip if the mouse is over\n\t// the context menu\n\tmxEvent.addGestureListeners(this.div, mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.graph.tooltipHandler.hide();\n\t}));\n};\n\n/**\n * Function: isSelectOnPopup\n * \n * Hook for returning if a cell should be selected for a given <mxMouseEvent>.\n * This implementation returns <selectOnPopup>.\n */\nmxPopupMenuHandler.prototype.isSelectOnPopup = function(me)\n{\n\treturn this.selectOnPopup;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating the panning. By consuming the event all\n * subsequent events of the gesture are redirected to this handler.\n */\nmxPopupMenuHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (this.isEnabled() && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\t// Hides the popupmenu if is is being displayed\n\t\tthis.hideMenu();\n\t\tthis.triggerX = me.getGraphX();\n\t\tthis.triggerY = me.getGraphY();\n\t\tthis.screenX = mxEvent.getMainEvent(me.getEvent()).screenX;\n\t\tthis.screenY = mxEvent.getMainEvent(me.getEvent()).screenY;\n\t\tthis.popupTrigger = this.isPopupTrigger(me);\n\t\tthis.inTolerance = true;\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the panning on the graph.\n */\nmxPopupMenuHandler.prototype.mouseMove = function(sender, me)\n{\n\t// Popup trigger may change on mouseUp so ignore it\n\tif (this.inTolerance && this.screenX != null && this.screenY != null)\n\t{\n\t\tif (Math.abs(mxEvent.getMainEvent(me.getEvent()).screenX - this.screenX) > this.graph.tolerance ||\n\t\t\tMath.abs(mxEvent.getMainEvent(me.getEvent()).screenY - this.screenY) > this.graph.tolerance)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPopupMenuHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.popupTrigger && this.inTolerance && this.triggerX != null && this.triggerY != null)\n\t{\n\t\tvar cell = this.getCellForPopupEvent(me);\n\n\t\t// Selects the cell for which the context menu is being displayed\n\t\tif (this.graph.isEnabled() && this.isSelectOnPopup(me) &&\n\t\t\tcell != null && !this.graph.isCellSelected(cell))\n\t\t{\n\t\t\tthis.graph.setSelectionCell(cell);\n\t\t}\n\t\telse if (this.clearSelectionOnBackground && cell == null)\n\t\t{\n\t\t\tthis.graph.clearSelection();\n\t\t}\n\t\t\n\t\t// Hides the tooltip if there is one\n\t\tthis.graph.tooltipHandler.hide();\n\n\t\t// Menu is shifted by 1 pixel so that the mouse up event\n\t\t// is routed via the underlying shape instead of the DIV\n\t\tvar origin = mxUtils.getScrollOrigin();\n\t\tthis.popup(me.getX() + origin.x + 1, me.getY() + origin.y + 1, cell, me.getEvent());\n\t\tme.consume();\n\t}\n\t\n\tthis.popupTrigger = false;\n\tthis.inTolerance = false;\n};\n\n/**\n * Function: getCellForPopupEvent\n * \n * Hook to return the cell for the mouse up popup trigger handling.\n */\nmxPopupMenuHandler.prototype.getCellForPopupEvent = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPopupMenuHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.gestureHandler);\n\t\n\t// Supercall\n\tmxPopupMenu.prototype.destroy.apply(this);\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellMarker\n * \n * A helper class to process mouse locations and highlight cells.\n * \n * Helper class to highlight cells. To add a cell marker to an existing graph\n * for highlighting all cells, the following code is used:\n * \n * (code)\n * var marker = new mxCellMarker(graph);\n * graph.addMouseListener({\n *   mouseDown: function() {},\n *   mouseMove: function(sender, me)\n *   {\n *     marker.process(me);\n *   },\n *   mouseUp: function() {}\n * });\n * (end)\n *\n * Event: mxEvent.MARK\n * \n * Fires after a cell has been marked or unmarked. The <code>state</code>\n * property contains the marked <mxCellState> or null if no state is marked.\n * \n * Constructor: mxCellMarker\n * \n * Constructs a new cell marker.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * validColor - Optional marker color for valid states. Default is\n * <mxConstants.DEFAULT_VALID_COLOR>.\n * invalidColor - Optional marker color for invalid states. Default is\n * <mxConstants.DEFAULT_INVALID_COLOR>.\n * hotspot - Portion of the width and hight where a state intersects a\n * given coordinate pair. A value of 0 means always highlight. Default is\n * <mxConstants.DEFAULT_HOTSPOT>.\n */\nfunction mxCellMarker(graph, validColor, invalidColor, hotspot)\n{\n\tmxEventSource.call(this);\n\t\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.validColor = (validColor != null) ? validColor : mxConstants.DEFAULT_VALID_COLOR;\n\t\tthis.invalidColor = (invalidColor != null) ? invalidColor : mxConstants.DEFAULT_INVALID_COLOR;\n\t\tthis.hotspot = (hotspot != null) ? hotspot : mxConstants.DEFAULT_HOTSPOT;\n\t\t\n\t\tthis.highlight = new mxCellHighlight(graph);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxCellMarker, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellMarker.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if the marker is enabled. Default is true.\n */\nmxCellMarker.prototype.enabled = true;\n\n/**\n * Variable: hotspot\n * \n * Specifies the portion of the width and height that should trigger\n * a highlight. The area around the center of the cell to be marked is used\n * as the hotspot. Possible values are between 0 and 1. Default is\n * mxConstants.DEFAULT_HOTSPOT.\n */\nmxCellMarker.prototype.hotspot = mxConstants.DEFAULT_HOTSPOT; \n\n/**\n * Variable: hotspotEnabled\n * \n * Specifies if the hotspot is enabled. Default is false.\n */\nmxCellMarker.prototype.hotspotEnabled = false;\n\n/**\n * Variable: validColor\n * \n * Holds the valid marker color.\n */\nmxCellMarker.prototype.validColor = null;\n\n/**\n * Variable: invalidColor\n * \n * Holds the invalid marker color.\n */\nmxCellMarker.prototype.invalidColor = null;\n\n/**\n * Variable: currentColor\n * \n * Holds the current marker color.\n */\nmxCellMarker.prototype.currentColor = null;\n\n/**\n * Variable: validState\n * \n * Holds the marked <mxCellState> if it is valid.\n */\nmxCellMarker.prototype.validState = null; \n\n/**\n * Variable: markedState\n * \n * Holds the marked <mxCellState>.\n */\nmxCellMarker.prototype.markedState = null;\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxCellMarker.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxCellMarker.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setHotspot\n * \n * Sets the <hotspot>.\n */\nmxCellMarker.prototype.setHotspot = function(hotspot)\n{\n\tthis.hotspot = hotspot;\n};\n\n/**\n * Function: getHotspot\n * \n * Returns the <hotspot>.\n */\nmxCellMarker.prototype.getHotspot = function()\n{\n\treturn this.hotspot;\n};\n\n/**\n * Function: setHotspotEnabled\n * \n * Specifies whether the hotspot should be used in <intersects>.\n */\nmxCellMarker.prototype.setHotspotEnabled = function(enabled)\n{\n\tthis.hotspotEnabled = enabled;\n};\n\n/**\n * Function: isHotspotEnabled\n * \n * Returns true if hotspot is used in <intersects>.\n */\nmxCellMarker.prototype.isHotspotEnabled = function()\n{\n\treturn this.hotspotEnabled;\n};\n\n/**\n * Function: hasValidState\n * \n * Returns true if <validState> is not null.\n */\nmxCellMarker.prototype.hasValidState = function()\n{\n\treturn this.validState != null;\n};\n\n/**\n * Function: getValidState\n * \n * Returns the <validState>.\n */\nmxCellMarker.prototype.getValidState = function()\n{\n\treturn this.validState;\n};\n\n/**\n * Function: getMarkedState\n * \n * Returns the <markedState>.\n */\nmxCellMarker.prototype.getMarkedState = function()\n{\n\treturn this.markedState;\n};\n\n/**\n * Function: reset\n * \n * Resets the state of the cell marker.\n */\nmxCellMarker.prototype.reset = function()\n{\n\tthis.validState = null;\n\t\n\tif (this.markedState != null)\n\t{\n\t\tthis.markedState = null;\n\t\tthis.unmark();\n\t}\n};\n\n/**\n * Function: process\n * \n * Processes the given event and cell and marks the state returned by\n * <getState> with the color returned by <getMarkerColor>. If the\n * markerColor is not null, then the state is stored in <markedState>. If\n * <isValidState> returns true, then the state is stored in <validState>\n * regardless of the marker color. The state is returned regardless of the\n * marker color and valid state. \n */\nmxCellMarker.prototype.process = function(me)\n{\n\tvar state = null;\n\t\n\tif (this.isEnabled())\n\t{\n\t\tstate = this.getState(me);\n\t\tthis.setCurrentState(state, me);\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: setCurrentState\n * \n * Sets and marks the current valid state.\n */\nmxCellMarker.prototype.setCurrentState = function(state, me, color)\n{\n\tvar isValid = (state != null) ? this.isValidState(state) : false;\n\tcolor = (color != null) ? color : this.getMarkerColor(me.getEvent(), state, isValid);\n\t\n\tif (isValid)\n\t{\n\t\tthis.validState = state;\n\t}\n\telse\n\t{\n\t\tthis.validState = null;\n\t}\n\t\n\tif (state != this.markedState || color != this.currentColor)\n\t{\n\t\tthis.currentColor = color;\n\t\t\n\t\tif (state != null && this.currentColor != null)\n\t\t{\n\t\t\tthis.markedState = state;\n\t\t\tthis.mark();\t\t\n\t\t}\n\t\telse if (this.markedState != null)\n\t\t{\n\t\t\tthis.markedState = null;\n\t\t\tthis.unmark();\n\t\t}\n\t}\n};\n\n/**\n * Function: markCell\n * \n * Marks the given cell using the given color, or <validColor> if no color is specified.\n */\nmxCellMarker.prototype.markCell = function(cell, color)\n{\n\tvar state = this.graph.getView().getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\tthis.currentColor = (color != null) ? color : this.validColor;\n\t\tthis.markedState = state;\n\t\tthis.mark();\n\t}\n};\n\n/**\n * Function: mark\n * \n * Marks the <markedState> and fires a <mark> event.\n */\nmxCellMarker.prototype.mark = function()\n{\n\tthis.highlight.setHighlightColor(this.currentColor);\n\tthis.highlight.highlight(this.markedState);\n\tthis.fireEvent(new mxEventObject(mxEvent.MARK, 'state', this.markedState));\n};\n\n/**\n * Function: unmark\n * \n * Hides the marker and fires a <mark> event.\n */\nmxCellMarker.prototype.unmark = function()\n{\n\tthis.mark();\n};\n\n/**\n * Function: isValidState\n * \n * Returns true if the given <mxCellState> is a valid state. If this\n * returns true, then the state is stored in <validState>. The return value\n * of this method is used as the argument for <getMarkerColor>.\n */\nmxCellMarker.prototype.isValidState = function(state)\n{\n\treturn true;\n};\n\n/**\n * Function: getMarkerColor\n * \n * Returns the valid- or invalidColor depending on the value of isValid.\n * The given <mxCellState> is ignored by this implementation.\n */\nmxCellMarker.prototype.getMarkerColor = function(evt, state, isValid)\n{\n\treturn (isValid) ? this.validColor : this.invalidColor;\n};\n\n/**\n * Function: getState\n * \n * Uses <getCell>, <getStateToMark> and <intersects> to return the\n * <mxCellState> for the given <mxMouseEvent>.\n */\nmxCellMarker.prototype.getState = function(me)\n{\n\tvar view = this.graph.getView();\n\tvar cell = this.getCell(me);\n\tvar state = this.getStateToMark(view.getState(cell));\n\n\treturn (state != null && this.intersects(state, me)) ? state : null;\n};\n\n/**\n * Function: getCell\n * \n * Returns the <mxCell> for the given event and cell. This returns the\n * given cell.\n */\nmxCellMarker.prototype.getCell = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: getStateToMark\n * \n * Returns the <mxCellState> to be marked for the given <mxCellState> under\n * the mouse. This returns the given state.\n */\nmxCellMarker.prototype.getStateToMark = function(state)\n{\n\treturn state;\n};\n\n/**\n * Function: intersects\n * \n * Returns true if the given coordinate pair intersects the given state.\n * This returns true if the <hotspot> is 0 or the coordinates are inside\n * the hotspot for the given cell state.\n */\nmxCellMarker.prototype.intersects = function(state, me)\n{\n\tif (this.hotspotEnabled)\n\t{\n\t\treturn mxUtils.intersectsHotspot(state, me.getGraphX(), me.getGraphY(),\n\t\t\tthis.hotspot, mxConstants.MIN_HOTSPOT_SIZE,\n\t\t\tmxConstants.MAX_HOTSPOT_SIZE);\n\t}\n\t\n\treturn true;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxCellMarker.prototype.destroy = function()\n{\n\tthis.graph.getView().removeListener(this.resetHandler);\n\tthis.graph.getModel().removeListener(this.resetHandler);\n\tthis.highlight.destroy();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSelectionCellsHandler\n * \n * An event handler that manages cell handlers and invokes their mouse event\n * processing functions.\n * \n * Group: Events\n * \n * Event: mxEvent.ADD\n * \n * Fires if a cell has been added to the selection. The <code>state</code>\n * property contains the <mxCellState> that has been added.\n * \n * Event: mxEvent.REMOVE\n * \n * Fires if a cell has been remove from the selection. The <code>state</code>\n * property contains the <mxCellState> that has been removed.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxSelectionCellsHandler(graph)\n{\n\tmxEventSource.call(this);\n\t\n\tthis.graph = graph;\n\tthis.handlers = new mxDictionary();\n\tthis.graph.addMouseListener(this);\n\t\n\tthis.refreshHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.refresh();\n\t\t}\n\t});\n\t\n\tthis.graph.getSelectionModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.DOWN, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.UP, this.refreshHandler);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxSelectionCellsHandler, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxSelectionCellsHandler.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxSelectionCellsHandler.prototype.enabled = true;\n\n/**\n * Variable: refreshHandler\n * \n * Keeps a reference to an event listener for later removal.\n */\nmxSelectionCellsHandler.prototype.refreshHandler = null;\n\n/**\n * Variable: maxHandlers\n * \n * Defines the maximum number of handlers to paint individually. Default is 100.\n */\nmxSelectionCellsHandler.prototype.maxHandlers = 100;\n\n/**\n * Variable: handlers\n * \n * <mxDictionary> that maps from cells to handlers.\n */\nmxSelectionCellsHandler.prototype.handlers = null;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxSelectionCellsHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxSelectionCellsHandler.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: getHandler\n * \n * Returns the handler for the given cell.\n */\nmxSelectionCellsHandler.prototype.getHandler = function(cell)\n{\n\treturn this.handlers.get(cell);\n};\n\n/**\n * Function: reset\n * \n * Resets all handlers.\n */\nmxSelectionCellsHandler.prototype.reset = function()\n{\n\tthis.handlers.visit(function(key, handler)\n\t{\n\t\thandler.reset.apply(handler);\n\t});\n};\n\n/**\n * Function: refresh\n * \n * Reloads or updates all handlers.\n */\nmxSelectionCellsHandler.prototype.refresh = function()\n{\n\t// Removes all existing handlers\n\tvar oldHandlers = this.handlers;\n\tthis.handlers = new mxDictionary();\n\t\n\t// Creates handles for all selection cells\n\tvar tmp = this.graph.getSelectionCells();\n\n\tfor (var i = 0; i < tmp.length; i++)\n\t{\n\t\tvar state = this.graph.view.getState(tmp[i]);\n\n\t\tif (state != null)\n\t\t{\n\t\t\tvar handler = oldHandlers.remove(tmp[i]);\n\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tif (handler.state != state)\n\t\t\t\t{\n\t\t\t\t\thandler.destroy();\n\t\t\t\t\thandler = null;\n\t\t\t\t}\n\t\t\t\telse if (!this.isHandlerActive(handler))\n\t\t\t\t{\n\t\t\t\t\tif (handler.refresh != null)\n\t\t\t\t\t{\n\t\t\t\t\t\thandler.refresh();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\thandler.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (handler == null)\n\t\t\t{\n\t\t\t\thandler = this.graph.createHandler(state);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD, 'state', state));\n\t\t\t}\n\t\t\t\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tthis.handlers.put(tmp[i], handler);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Destroys all unused handlers\n\toldHandlers.visit(mxUtils.bind(this, function(key, handler)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE, 'state', handler.state));\n\t\thandler.destroy();\n\t}));\n};\n\n/**\n * Function: isHandlerActive\n * \n * Returns true if the given handler is active and should not be redrawn.\n */\nmxSelectionCellsHandler.prototype.isHandlerActive = function(handler)\n{\n\treturn handler.index != null;\n};\n\n/**\n * Function: updateHandler\n * \n * Updates the handler for the given shape if one exists.\n */\nmxSelectionCellsHandler.prototype.updateHandler = function(state)\n{\n\tvar handler = this.handlers.remove(state.cell);\n\t\n\tif (handler != null)\n\t{\n\t\thandler.destroy();\n\t\thandler = this.graph.createHandler(state);\n\t\t\n\t\tif (handler != null)\n\t\t{\n\t\t\tthis.handlers.put(state.cell, handler);\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseDown\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseDown.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseMove.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseUp.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxSelectionCellsHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\t\n\tif (this.refreshHandler != null)\n\t{\n\t\tthis.graph.getSelectionModel().removeListener(this.refreshHandler);\n\t\tthis.graph.getModel().removeListener(this.refreshHandler);\n\t\tthis.graph.getView().removeListener(this.refreshHandler);\n\t\tthis.refreshHandler = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\n/**\n * Class: mxConnectionHandler\n *\n * Graph event handler that creates new connections. Uses <mxTerminalMarker>\n * for finding and highlighting the source and target vertices and\n * <factoryMethod> to create the edge instance. This handler is built-into\n * <mxGraph.connectionHandler> and enabled using <mxGraph.setConnectable>.\n *\n * Example:\n * \n * (code)\n * new mxConnectionHandler(graph, function(source, target, style)\n * {\n *   edge = new mxCell('', new mxGeometry());\n *   edge.setEdge(true);\n *   edge.setStyle(style);\n *   edge.geometry.relative = true;\n *   return edge;\n * });\n * (end)\n * \n * Here is an alternative solution that just sets a specific user object for\n * new edges by overriding <insertEdge>.\n *\n * (code)\n * mxConnectionHandlerInsertEdge = mxConnectionHandler.prototype.insertEdge;\n * mxConnectionHandler.prototype.insertEdge = function(parent, id, value, source, target, style)\n * {\n *   value = 'Test';\n * \n *   return mxConnectionHandlerInsertEdge.apply(this, arguments);\n * };\n * (end)\n * \n * Using images to trigger connections:\n * \n * This handler uses mxTerminalMarker to find the source and target cell for\n * the new connection and creates a new edge using <connect>. The new edge is\n * created using <createEdge> which in turn uses <factoryMethod> or creates a\n * new default edge.\n * \n * The handler uses a \"highlight-paradigm\" for indicating if a cell is being\n * used as a source or target terminal, as seen in other diagramming products.\n * In order to allow both, moving and connecting cells at the same time,\n * <mxConstants.DEFAULT_HOTSPOT> is used in the handler to determine the hotspot\n * of a cell, that is, the region of the cell which is used to trigger a new\n * connection. The constant is a value between 0 and 1 that specifies the\n * amount of the width and height around the center to be used for the hotspot\n * of a cell and its default value is 0.5. In addition,\n * <mxConstants.MIN_HOTSPOT_SIZE> defines the minimum number of pixels for the\n * width and height of the hotspot.\n * \n * This solution, while standards compliant, may be somewhat confusing because\n * there is no visual indicator for the hotspot and the highlight is seen to\n * switch on and off while the mouse is being moved in and out. Furthermore,\n * this paradigm does not allow to create different connections depending on\n * the highlighted hotspot as there is only one hotspot per cell and it\n * normally does not allow cells to be moved and connected at the same time as\n * there is no clear indication of the connectable area of the cell.\n * \n * To come across these issues, the handle has an additional <createIcons> hook\n * with a default implementation that allows to create one icon to be used to\n * trigger new connections. If this icon is specified, then new connections can\n * only be created if the image is clicked while the cell is being highlighted.\n * The <createIcons> hook may be overridden to create more than one\n * <mxImageShape> for creating new connections, but the default implementation\n * supports one image and is used as follows:\n * \n * In order to display the \"connect image\" whenever the mouse is over the cell,\n * an DEFAULT_HOTSPOT of 1 should be used:\n * \n * (code)\n * mxConstants.DEFAULT_HOTSPOT = 1;\n * (end)\n * \n * In order to avoid confusion with the highlighting, the highlight color\n * should not be used with a connect image:\n * \n * (code)\n * mxConstants.HIGHLIGHT_COLOR = null;\n * (end)\n * \n * To install the image, the connectImage field of the mxConnectionHandler must\n * be assigned a new <mxImage> instance:\n * \n * (code)\n * mxConnectionHandler.prototype.connectImage = new mxImage('images/green-dot.gif', 14, 14);\n * (end)\n * \n * This will use the green-dot.gif with a width and height of 14 pixels as the\n * image to trigger new connections. In createIcons the icon field of the\n * handler will be set in order to remember the icon that has been clicked for\n * creating the new connection. This field will be available under selectedIcon\n * in the connect method, which may be overridden to take the icon that\n * triggered the new connection into account. This is useful if more than one\n * icon may be used to create a connection.\n *\n * Group: Events\n * \n * Event: mxEvent.START\n * \n * Fires when a new connection is being created by the user. The <code>state</code>\n * property contains the state of the source cell.\n * \n * Event: mxEvent.CONNECT\n * \n * Fires between begin- and endUpdate in <connect>. The <code>cell</code>\n * property contains the inserted edge, the <code>event</code> and <code>target</code> \n * properties contain the respective arguments that were passed to <connect> (where\n * target corresponds to the dropTarget argument). Finally, the <code>terminal</code>\n * property corresponds to the target argument in <connect> or the clone of the source\n * terminal if <createTarget> is enabled.\n * \n * Note that the target is the cell under the mouse where the mouse button was released.\n * Depending on the logic in the handler, this doesn't necessarily have to be the target\n * of the inserted edge. To print the source, target or any optional ports IDs that the\n * edge is connected to, the following code can be used. To get more details about the\n * actual connection point, <mxGraph.getConnectionConstraint> can be used. To resolve\n * the port IDs, use <mxGraphModel.getCell>.\n * \n * (code)\n * graph.connectionHandler.addListener(mxEvent.CONNECT, function(sender, evt)\n * {\n *   var edge = evt.getProperty('cell');\n *   var source = graph.getModel().getTerminal(edge, true);\n *   var target = graph.getModel().getTerminal(edge, false);\n *   \n *   var style = graph.getCellStyle(edge);\n *   var sourcePortId = style[mxConstants.STYLE_SOURCE_PORT];\n *   var targetPortId = style[mxConstants.STYLE_TARGET_PORT];\n *   \n *   mxLog.show();\n *   mxLog.debug('connect', edge, source.id, target.id, sourcePortId, targetPortId);\n * });\n * (end)\n *\n * Event: mxEvent.RESET\n * \n * Fires when the <reset> method is invoked.\n *\n * Constructor: mxConnectionHandler\n *\n * Constructs an event handler that connects vertices using the specified\n * factory method to create the new edges. Modify\n * <mxConstants.ACTIVE_REGION> to setup the region on a cell which triggers\n * the creation of a new connection or use connect icons as explained\n * above.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * factoryMethod - Optional function to create the edge. The function takes\n * the source and target <mxCell> as the first and second argument and an\n * optional cell style from the preview as the third argument. It returns\n * the <mxCell> that represents the new edge.\n */\nfunction mxConnectionHandler(graph, factoryMethod)\n{\n\tmxEventSource.call(this);\n\t\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.factoryMethod = factoryMethod;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tthis.reset();\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxConnectionHandler, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxConnectionHandler.prototype.graph = null;\n\n/**\n * Variable: factoryMethod\n * \n * Function that is used for creating new edges. The function takes the\n * source and target <mxCell> as the first and second argument and returns\n * a new <mxCell> that represents the edge. This is used in <createEdge>.\n */\nmxConnectionHandler.prototype.factoryMethod = true;\n\n/**\n * Variable: moveIconFront\n * \n * Specifies if icons should be displayed inside the graph container instead\n * of the overlay pane. This is used for HTML labels on vertices which hide\n * the connect icon. This has precendence over <moveIconBack> when set\n * to true. Default is false.\n */\nmxConnectionHandler.prototype.moveIconFront = false;\n\n/**\n * Variable: moveIconBack\n * \n * Specifies if icons should be moved to the back of the overlay pane. This can\n * be set to true if the icons of the connection handler conflict with other\n * handles, such as the vertex label move handle. Default is false.\n */\nmxConnectionHandler.prototype.moveIconBack = false;\n\n/**\n * Variable: connectImage\n * \n * <mxImage> that is used to trigger the creation of a new connection. This\n * is used in <createIcons>. Default is null.\n */\nmxConnectionHandler.prototype.connectImage = null;\n\n/**\n * Variable: targetConnectImage\n * \n * Specifies if the connect icon should be centered on the target state\n * while connections are being previewed. Default is false.\n */\nmxConnectionHandler.prototype.targetConnectImage = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxConnectionHandler.prototype.enabled = true;\n\n/**\n * Variable: select\n * \n * Specifies if new edges should be selected. Default is true.\n */\nmxConnectionHandler.prototype.select = true;\n\n/**\n * Variable: createTarget\n * \n * Specifies if <createTargetVertex> should be called if no target was under the\n * mouse for the new connection. Setting this to true means the connection\n * will be drawn as valid if no target is under the mouse, and\n * <createTargetVertex> will be called before the connection is created between\n * the source cell and the newly created vertex in <createTargetVertex>, which\n * can be overridden to create a new target. Default is false.\n */\nmxConnectionHandler.prototype.createTarget = false;\n\n/**\n * Variable: marker\n * \n * Holds the <mxTerminalMarker> used for finding source and target cells.\n */\nmxConnectionHandler.prototype.marker = null;\n\n/**\n * Variable: constraintHandler\n * \n * Holds the <mxConstraintHandler> used for drawing and highlighting\n * constraints.\n */\nmxConnectionHandler.prototype.constraintHandler = null;\n\n/**\n * Variable: error\n * \n * Holds the current validation error while connections are being created.\n */\nmxConnectionHandler.prototype.error = null;\n\n/**\n * Variable: waypointsEnabled\n * \n * Specifies if single clicks should add waypoints on the new edge. Default is\n * false.\n */\nmxConnectionHandler.prototype.waypointsEnabled = false;\n\n/**\n * Variable: ignoreMouseDown\n * \n * Specifies if the connection handler should ignore the state of the mouse\n * button when highlighting the source. Default is false, that is, the\n * handler only highlights the source if no button is being pressed.\n */\nmxConnectionHandler.prototype.ignoreMouseDown = false;\n\n/**\n * Variable: first\n * \n * Holds the <mxPoint> where the mouseDown took place while the handler is\n * active.\n */\nmxConnectionHandler.prototype.first = null;\n\n/**\n * Variable: connectIconOffset\n * \n * Holds the offset for connect icons during connection preview.\n * Default is mxPoint(0, <mxConstants.TOOLTIP_VERTICAL_OFFSET>).\n * Note that placing the icon under the mouse pointer with an\n * offset of (0,0) will affect hit detection.\n */\nmxConnectionHandler.prototype.connectIconOffset = new mxPoint(0, mxConstants.TOOLTIP_VERTICAL_OFFSET);\n\n/**\n * Variable: edgeState\n * \n * Optional <mxCellState> that represents the preview edge while the\n * handler is active. This is created in <createEdgeState>.\n */\nmxConnectionHandler.prototype.edgeState = null;\n\n/**\n * Variable: changeHandler\n * \n * Holds the change event listener for later removal.\n */\nmxConnectionHandler.prototype.changeHandler = null;\n\n/**\n * Variable: drillHandler\n * \n * Holds the drill event listener for later removal.\n */\nmxConnectionHandler.prototype.drillHandler = null;\n\n/**\n * Variable: mouseDownCounter\n * \n * Counts the number of mouseDown events since the start. The initial mouse\n * down event counts as 1.\n */\nmxConnectionHandler.prototype.mouseDownCounter = 0;\n\n/**\n * Variable: movePreviewAway\n * \n * Switch to enable moving the preview away from the mousepointer. This is required in browsers\n * where the preview cannot be made transparent to events and if the built-in hit detection on\n * the HTML elements in the page should be used. Default is the value of <mxClient.IS_VML>.\n */\nmxConnectionHandler.prototype.movePreviewAway = mxClient.IS_VML;\n\n/**\n * Variable: outlineConnect\n * \n * Specifies if connections to the outline of a highlighted target should be\n * enabled. This will allow to place the connection point along the outline of\n * the highlighted target. Default is false.\n */\nmxConnectionHandler.prototype.outlineConnect = false;\n\n/**\n * Variable: livePreview\n * \n * Specifies if the actual shape of the edge state should be used for the preview.\n * Default is false. (Ignored if no edge state is created in <createEdgeState>.)\n */\nmxConnectionHandler.prototype.livePreview = false;\n\n/**\n * Variable: cursor\n * \n * Specifies the cursor to be used while the handler is active. Default is null.\n */\nmxConnectionHandler.prototype.cursor = null;\n\n/**\n * Variable: insertBeforeSource\n * \n * Specifies if new edges should be inserted before the source vertex in the\n * cell hierarchy. Default is false for backwards compatibility.\n */\nmxConnectionHandler.prototype.insertBeforeSource = false;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxConnectionHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxConnectionHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isInsertBefore\n * \n * Returns <insertBeforeSource> for non-loops and false for loops.\n *\n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be inserted.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * evt - Mousedown event of the connect gesture.\n * dropTarget - <mxCell> that represents the cell under the mouse when it was\n * released.\n */\nmxConnectionHandler.prototype.isInsertBefore = function(edge, source, target, evt, dropTarget)\n{\n\treturn this.insertBeforeSource && source != target;\n};\n\n/**\n * Function: isCreateTarget\n * \n * Returns <createTarget>.\n *\n * Parameters:\n *\n * evt - Current active native pointer event.\n */\nmxConnectionHandler.prototype.isCreateTarget = function(evt)\n{\n\treturn this.createTarget;\n};\n\n/**\n * Function: setCreateTarget\n * \n * Sets <createTarget>.\n */\nmxConnectionHandler.prototype.setCreateTarget = function(value)\n{\n\tthis.createTarget = value;\n};\n\n/**\n * Function: createShape\n * \n * Creates the preview shape for new connections.\n */\nmxConnectionHandler.prototype.createShape = function()\n{\n\t// Creates the edge preview\n\tvar shape = (this.livePreview && this.edgeState != null) ?\n\t\tthis.graph.cellRenderer.createShape(this.edgeState) :\n\t\tnew mxPolyline([], mxConstants.INVALID_COLOR);\n\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tshape.scale = this.graph.view.scale;\n\tshape.pointerEvents = false;\n\tshape.isDashed = true;\n\tshape.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(shape.node, this.graph, null);\n\n\treturn shape;\n};\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this connection handler. This should\n * be invoked if <mxGraph.container> is assigned after the connection\n * handler has been created.\n */\nmxConnectionHandler.prototype.init = function()\n{\n\tthis.graph.addMouseListener(this);\n\tthis.marker = this.createMarker();\n\tthis.constraintHandler = new mxConstraintHandler(this.graph);\n\n\t// Redraws the icons if the graph changes\n\tthis.changeHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.iconState != null)\n\t\t{\n\t\t\tthis.iconState = this.graph.getView().getState(this.iconState.cell);\n\t\t}\n\t\t\n\t\tif (this.iconState != null)\n\t\t{\n\t\t\tthis.redrawIcons(this.icons, this.iconState);\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\telse if (this.previous != null && this.graph.view.getState(this.previous.cell) == null)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t});\n\t\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.changeHandler);\n\t\n\t// Removes the icon if we step into/up or start editing\n\tthis.drillHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.reset();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.START_EDITING, this.drillHandler);\n\tthis.graph.getView().addListener(mxEvent.DOWN, this.drillHandler);\n\tthis.graph.getView().addListener(mxEvent.UP, this.drillHandler);\n};\n\n/**\n * Function: isConnectableCell\n * \n * Returns true if the given cell is connectable. This is a hook to\n * disable floating connections. This implementation returns true.\n */\nmxConnectionHandler.prototype.isConnectableCell = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: createMarker\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxConnectionHandler.prototype.createMarker = function()\n{\n\tvar marker = new mxCellMarker(this.graph);\n\tmarker.hotspotEnabled = true;\n\n\t// Overrides to return cell at location only if valid (so that\n\t// there is no highlight for invalid cells)\n\tmarker.getCell = mxUtils.bind(this, function(me)\n\t{\n\t\tvar cell = mxCellMarker.prototype.getCell.apply(marker, arguments);\n\t\tthis.error = null;\n\t\t\n\t\t// Checks for cell at preview point (with grid)\n\t\tif (cell == null && this.currentPoint != null)\n\t\t{\n\t\t\tcell = this.graph.getCellAt(this.currentPoint.x, this.currentPoint.y);\n\t\t}\n\t\t\n\t\t// Uses connectable parent vertex if one exists\n\t\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\t\n\t\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t\t{\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ((this.graph.isSwimlane(cell) && this.currentPoint != null &&\n\t\t\tthis.graph.hitsSwimlaneContent(cell, this.currentPoint.x, this.currentPoint.y)) ||\n\t\t\t!this.isConnectableCell(cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tif (this.isConnecting())\n\t\t\t{\n\t\t\t\tif (this.previous != null)\n\t\t\t\t{\n\t\t\t\t\tthis.error = this.validateConnection(this.previous.cell, cell);\n\t\t\t\t\t\n\t\t\t\t\tif (this.error != null && this.error.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell = null;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Enables create target inside groups\n\t\t\t\t\t\tif (this.isCreateTarget(me.getEvent()))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.error = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!this.isValidSource(cell, me))\n\t\t\t{\n\t\t\t\tcell = null;\n\t\t\t}\n\t\t}\n\t\telse if (this.isConnecting() && !this.isCreateTarget(me.getEvent()) &&\n\t\t\t\t!this.graph.allowDanglingEdges)\n\t\t{\n\t\t\tthis.error = '';\n\t\t}\n\n\t\treturn cell;\n\t});\n\n\t// Sets the highlight color according to validateConnection\n\tmarker.isValidState = mxUtils.bind(this, function(state)\n\t{\n\t\tif (this.isConnecting())\n\t\t{\n\t\t\treturn this.error == null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn mxCellMarker.prototype.isValidState.apply(marker, arguments);\n\t\t}\n\t});\n\n\t// Overrides to use marker color only in highlight mode or for\n\t// target selection\n\tmarker.getMarkerColor = mxUtils.bind(this, function(evt, state, isValid)\n\t{\n\t\treturn (this.connectImage == null || this.isConnecting()) ?\n\t\t\tmxCellMarker.prototype.getMarkerColor.apply(marker, arguments) :\n\t\t\tnull;\n\t});\n\n\t// Overrides to use hotspot only for source selection otherwise\n\t// intersects always returns true when over a cell\n\tmarker.intersects = mxUtils.bind(this, function(state, evt)\n\t{\n\t\tif (this.connectImage != null || this.isConnecting())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn mxCellMarker.prototype.intersects.apply(marker, arguments);\n\t});\n\n\treturn marker;\n};\n\n/**\n * Function: start\n * \n * Starts a new connection for the given state and coordinates.\n */\nmxConnectionHandler.prototype.start = function(state, x, y, edgeState)\n{\n\tthis.previous = state;\n\tthis.first = new mxPoint(x, y);\n\tthis.edgeState = (edgeState != null) ? edgeState : this.createEdgeState(null);\n\t\n\t// Marks the source state\n\tthis.marker.currentColor = this.marker.validColor;\n\tthis.marker.markedState = state;\n\tthis.marker.mark();\n\n\tthis.fireEvent(new mxEventObject(mxEvent.START, 'state', this.previous));\n};\n\n/**\n * Function: isConnecting\n * \n * Returns true if the source terminal has been clicked and a new\n * connection is currently being previewed.\n */\nmxConnectionHandler.prototype.isConnecting = function()\n{\n\treturn this.first != null && this.shape != null;\n};\n\n/**\n * Function: isValidSource\n * \n * Returns <mxGraph.isValidSource> for the given source terminal.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the source terminal.\n * me - <mxMouseEvent> that is associated with this call.\n */\nmxConnectionHandler.prototype.isValidSource = function(cell, me)\n{\n\treturn this.graph.isValidSource(cell);\n};\n\n/**\n * Function: isValidTarget\n * \n * Returns true. The call to <mxGraph.isValidTarget> is implicit by calling\n * <mxGraph.getEdgeValidationError> in <validateConnection>. This is an\n * additional hook for disabling certain targets in this specific handler.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the target terminal.\n */\nmxConnectionHandler.prototype.isValidTarget = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: validateConnection\n * \n * Returns the error message or an empty string if the connection for the\n * given source target pair is not valid. Otherwise it returns null. This\n * implementation uses <mxGraph.getEdgeValidationError>.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxConnectionHandler.prototype.validateConnection = function(source, target)\n{\n\tif (!this.isValidTarget(target))\n\t{\n\t\treturn '';\n\t}\n\t\n\treturn this.graph.getEdgeValidationError(null, source, target);\n};\n\n/**\n * Function: getConnectImage\n * \n * Hook to return the <mxImage> used for the connection icon of the given\n * <mxCellState>. This implementation returns <connectImage>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect image should be returned.\n */\nmxConnectionHandler.prototype.getConnectImage = function(state)\n{\n\treturn this.connectImage;\n};\n\n/**\n * Function: isMoveIconToFrontForState\n * \n * Returns true if the state has a HTML label in the graph's container, otherwise\n * it returns <moveIconFront>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect icons should be returned.\n */\nmxConnectionHandler.prototype.isMoveIconToFrontForState = function(state)\n{\n\tif (state.text != null && state.text.node.parentNode == this.graph.container)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn this.moveIconFront;\n};\n\n/**\n * Function: createIcons\n * \n * Creates the array <mxImageShapes> that represent the connect icons for\n * the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect icons should be returned.\n */\nmxConnectionHandler.prototype.createIcons = function(state)\n{\n\tvar image = this.getConnectImage(state);\n\t\n\tif (image != null && state != null)\n\t{\n\t\tthis.iconState = state;\n\t\tvar icons = [];\n\n\t\t// Cannot use HTML for the connect icons because the icon receives all\n\t\t// mouse move events in IE, must use VML and SVG instead even if the\n\t\t// connect-icon appears behind the selection border and the selection\n\t\t// border consumes the events before the icon gets a chance\n\t\tvar bounds = new mxRectangle(0, 0, image.width, image.height);\n\t\tvar icon = new mxImageShape(bounds, image.src, null, null, 0);\n\t\ticon.preserveImageAspect = false;\n\t\t\n\t\tif (this.isMoveIconToFrontForState(state))\n\t\t{\n\t\t\ticon.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\t\ticon.init(this.graph.container);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ticon.dialect = (this.graph.dialect == mxConstants.DIALECT_SVG) ?\n\t\t\t\tmxConstants.DIALECT_SVG : mxConstants.DIALECT_VML;\n\t\t\ticon.init(this.graph.getView().getOverlayPane());\n\n\t\t\t// Move the icon back in the overlay pane\n\t\t\tif (this.moveIconBack && icon.node.previousSibling != null)\n\t\t\t{\n\t\t\t\ticon.node.parentNode.insertBefore(icon.node, icon.node.parentNode.firstChild);\n\t\t\t}\n\t\t}\n\n\t\ticon.node.style.cursor = mxConstants.CURSOR_CONNECT;\n\n\t\t// Events transparency\n\t\tvar getState = mxUtils.bind(this, function()\n\t\t{\n\t\t\treturn (this.currentState != null) ? this.currentState : state;\n\t\t});\n\t\t\n\t\t// Updates the local icon before firing the mouse down event.\n\t\tvar mouseDown = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tthis.icon = icon;\n\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN,\n\t\t\t\t\tnew mxMouseEvent(evt, getState()));\n\t\t\t}\n\t\t});\n\n\t\tmxEvent.redirectMouseEvents(icon.node, this.graph, getState, mouseDown);\n\t\t\n\t\ticons.push(icon);\n\t\tthis.redrawIcons(icons, this.iconState);\n\t\t\n\t\treturn icons;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: redrawIcons\n * \n * Redraws the given array of <mxImageShapes>.\n * \n * Parameters:\n * \n * icons - Optional array of <mxImageShapes> to be redrawn.\n */\nmxConnectionHandler.prototype.redrawIcons = function(icons, state)\n{\n\tif (icons != null && icons[0] != null && state != null)\n\t{\n\t\tvar pos = this.getIconPosition(icons[0], state);\n\t\ticons[0].bounds.x = pos.x;\n\t\ticons[0].bounds.y = pos.y;\n\t\ticons[0].redraw();\n\t}\n};\n\n/**\n * Function: redrawIcons\n * \n * Redraws the given array of <mxImageShapes>.\n * \n * Parameters:\n * \n * icons - Optional array of <mxImageShapes> to be redrawn.\n */\nmxConnectionHandler.prototype.getIconPosition = function(icon, state)\n{\n\tvar scale = this.graph.getView().scale;\n\tvar cx = state.getCenterX();\n\tvar cy = state.getCenterY();\n\t\n\tif (this.graph.isSwimlane(state.cell))\n\t{\n\t\tvar size = this.graph.getStartSize(state.cell);\n\t\t\n\t\tcx = (size.width != 0) ? state.x + size.width * scale / 2 : cx;\n\t\tcy = (size.height != 0) ? state.y + size.height * scale / 2 : cy;\n\t\t\n\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(alpha);\n\t\t\tvar sin = Math.sin(alpha);\n\t\t\tvar ct = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin, ct);\n\t\t\tcx = pt.x;\n\t\t\tcy = pt.y;\n\t\t}\n\t}\n\n\treturn new mxPoint(cx - icon.bounds.width / 2,\n\t\t\tcy - icon.bounds.height / 2);\n};\n\n/**\n * Function: destroyIcons\n * \n * Destroys the connect icons and resets the respective state.\n */\nmxConnectionHandler.prototype.destroyIcons = function()\n{\n\tif (this.icons != null)\n\t{\n\t\tfor (var i = 0; i < this.icons.length; i++)\n\t\t{\n\t\t\tthis.icons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.icons = null;\n\t\tthis.icon = null;\n\t\tthis.selectedIcon = null;\n\t\tthis.iconState = null;\n\t}\n};\n\n/**\n * Function: isStartEvent\n * \n * Returns true if the given mouse down event should start this handler. The\n * This implementation returns true if the event does not force marquee\n * selection, and the currentConstraint and currentFocus of the\n * <constraintHandler> are not null, or <previous> and <error> are not null and\n * <icons> is null or <icons> and <icon> are not null.\n */\nmxConnectionHandler.prototype.isStartEvent = function(me)\n{\n\treturn ((this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null) ||\n\t\t(this.previous != null && this.error == null && (this.icons == null || (this.icons != null &&\n\t\tthis.icon != null))));\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a new connection.\n */\nmxConnectionHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.mouseDownCounter++;\n\t\n\tif (this.isEnabled() && this.graph.isEnabled() && !me.isConsumed() &&\n\t\t!this.isConnecting() && this.isStartEvent(me))\n\t{\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t{\n\t\t\tthis.sourceConstraint = this.constraintHandler.currentConstraint;\n\t\t\tthis.previous = this.constraintHandler.currentFocus;\n\t\t\tthis.first = this.constraintHandler.currentPoint.clone();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Stores the location of the initial mousedown\n\t\t\tthis.first = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t}\n\t\n\t\tthis.edgeState = this.createEdgeState(me);\n\t\tthis.mouseDownCounter = 1;\n\t\t\n\t\tif (this.waypointsEnabled && this.shape == null)\n\t\t{\n\t\t\tthis.waypoints = null;\n\t\t\tthis.shape = this.createShape();\n\t\t\t\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tthis.shape.apply(this.edgeState);\n\t\t\t}\n\t\t}\n\n\t\t// Stores the starting point in the geometry of the preview\n\t\tif (this.previous == null && this.edgeState != null)\n\t\t{\n\t\t\tvar pt = this.graph.getPointForEvent(me.getEvent());\n\t\t\tthis.edgeState.cell.geometry.setTerminalPoint(pt, true);\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.START, 'state', this.previous));\n\n\t\tme.consume();\n\t}\n\n\tthis.selectedIcon = this.icon;\n\tthis.icon = null;\n};\n\n/**\n * Function: isImmediateConnectSource\n * \n * Returns true if a tap on the given source state should immediately start\n * connecting. This implementation returns true if the state is not movable\n * in the graph. \n */\nmxConnectionHandler.prototype.isImmediateConnectSource = function(state)\n{\n\treturn !this.graph.isCellMovable(state.cell);\n};\n\n/**\n * Function: createEdgeState\n * \n * Hook to return an <mxCellState> which may be used during the preview.\n * This implementation returns null.\n * \n * Use the following code to create a preview for an existing edge style:\n * \n * (code)\n * graph.connectionHandler.createEdgeState = function(me)\n * {\n *   var edge = graph.createEdge(null, null, null, null, null, 'edgeStyle=elbowEdgeStyle');\n *   \n *   return new mxCellState(this.graph.view, edge, this.graph.getCellStyle(edge));\n * };\n * (end)\n */\nmxConnectionHandler.prototype.createEdgeState = function(me)\n{\n\treturn null;\n};\n\n/**\n * Function: isOutlineConnectEvent\n * \n * Returns true if <outlineConnect> is true and the source of the event is the outline shape\n * or shift is pressed.\n */\nmxConnectionHandler.prototype.isOutlineConnectEvent = function(me)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar evt = me.getEvent();\n\t\n\tvar clientX = mxEvent.getClientX(evt);\n\tvar clientY = mxEvent.getClientY(evt);\n\t\n\tvar doc = document.documentElement;\n\tvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n\tvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\t\n\tvar gridX = this.currentPoint.x - this.graph.container.scrollLeft + offset.x - left;\n\tvar gridY = this.currentPoint.y - this.graph.container.scrollTop + offset.y - top;\n\n\treturn this.outlineConnect && !mxEvent.isShiftDown(me.getEvent()) &&\n\t\t(me.isSource(this.marker.highlight.shape) ||\n\t\t(mxEvent.isAltDown(me.getEvent()) && me.getState() != null) ||\n\t\tthis.marker.highlight.isHighlightAt(clientX, clientY) ||\n\t\t((gridX != clientX || gridY != clientY) && me.getState() == null &&\n\t\tthis.marker.highlight.isHighlightAt(gridX, gridY)));\n};\n\n/**\n * Function: updateCurrentState\n * \n * Updates the current state for a given mouse move event by using\n * the <marker>.\n */\nmxConnectionHandler.prototype.updateCurrentState = function(me, point)\n{\n\tthis.constraintHandler.update(me, this.first == null, false, (this.first == null ||\n\t\tme.isSource(this.marker.highlight.shape)) ? null : point);\n\t\n\tif (this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null)\n\t{\n\t\t// Handles special case where grid is large and connection point is at actual point in which\n\t\t// case the outline is not followed as long as we're < gridSize / 2 away from that point\n\t\tif (this.marker.highlight != null && this.marker.highlight.state != null &&\n\t\t\tthis.marker.highlight.state.cell == this.constraintHandler.currentFocus.cell)\n\t\t{\n\t\t\t// Direct repaint needed if cell already highlighted\n\t\t\tif (this.marker.highlight.shape.stroke != 'transparent')\n\t\t\t{\n\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.markCell(this.constraintHandler.currentFocus.cell, 'transparent');\n\t\t}\n\n\t\t// Updates validation state\n\t\tif (this.previous != null)\n\t\t{\n\t\t\tthis.error = this.validateConnection(this.previous.cell, this.constraintHandler.currentFocus.cell);\n\t\t\t\n\t\t\tif (this.error == null)\n\t\t\t{\n\t\t\t\tthis.currentState = this.constraintHandler.currentFocus;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.constraintHandler.reset();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (this.graph.isIgnoreTerminalEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.marker.reset();\n\t\t\tthis.currentState = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.process(me);\n\t\t\tthis.currentState = this.marker.getValidState();\n\t\t\t\n\t\t\tif (this.currentState != null && !this.isCellEnabled(this.currentState.cell))\n\t\t\t{\n\t\t\t\tthis.currentState = null;\n\t\t\t}\n\t\t}\n\n\t\tvar outline = this.isOutlineConnectEvent(me);\n\t\t\n\t\tif (this.currentState != null && outline)\n\t\t{\n\t\t\t// Handles special case where mouse is on outline away from actual end point\n\t\t\t// in which case the grid is ignored and mouse point is used instead\n\t\t\tif (me.isSource(this.marker.highlight.shape))\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\t\t\t\n\t\t\tvar constraint = this.graph.getOutlineConstraint(point, this.currentState, me);\n\t\t\tthis.constraintHandler.setFocus(me, this.currentState, false);\n\t\t\tthis.constraintHandler.currentConstraint = constraint;\n\t\t\tthis.constraintHandler.currentPoint = point;\n\t\t}\n\n\t\tif (this.outlineConnect)\n\t\t{\n\t\t\tif (this.marker.highlight != null && this.marker.highlight.shape != null)\n\t\t\t{\n\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\n\t\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t\t\t{\n\t\t\t\t\tthis.marker.highlight.shape.stroke = mxConstants.OUTLINE_HIGHLIGHT_COLOR;\n\t\t\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.OUTLINE_HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t} \n\t\t\t\telse if (this.marker.hasValidState())\n\t\t\t\t{\n\t\t\t\t\t// Handles special case where actual end point of edge and current mouse point\n\t\t\t\t\t// are not equal (due to grid snapping) and there is no hit on shape or highlight\n\t\t\t\t\tif (this.marker.getValidState() != me.getState())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\t\t\tthis.currentState = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.marker.highlight.shape.stroke = mxConstants.DEFAULT_VALID_COLOR;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isCellEnabled\n * \n * Returns true if the given cell does not allow new connections to be created.\n */\nmxConnectionHandler.prototype.isCellEnabled = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: convertWaypoint\n * \n * Converts the given point from screen coordinates to model coordinates.\n */\nmxConnectionHandler.prototype.convertWaypoint = function(point)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\t\n\tpoint.x = point.x / scale - tr.x;\n\tpoint.y = point.y / scale - tr.y;\n};\n\n/**\n * Function: snapToPreview\n * \n * Called to snap the given point to the current preview. This snaps to the\n * first point of the preview if alt is not pressed.\n */\nmxConnectionHandler.prototype.snapToPreview = function(me, point)\n{\n\tif (!mxEvent.isAltDown(me.getEvent()) && this.previous != null)\n\t{\n\t\tvar tol = this.graph.gridSize * this.graph.view.scale / 2;\t\n\t\tvar tmp = (this.sourceConstraint != null) ? this.first :\n\t\t\tnew mxPoint(this.previous.getCenterX(), this.previous.getCenterY());\n\n\t\tif (Math.abs(tmp.x - me.getGraphX()) < tol)\n\t\t{\n\t\t\tpoint.x = tmp.x;\n\t\t}\n\t\t\n\t\tif (Math.abs(tmp.y - me.getGraphY()) < tol)\n\t\t{\n\t\t\tpoint.y = tmp.y;\n\t\t}\n\t}\t\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview edge or by highlighting\n * a possible source or target terminal.\n */\nmxConnectionHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && (this.ignoreMouseDown || this.first != null || !this.graph.isMouseDown))\n\t{\n\t\t// Handles special case when handler is disabled during highlight\n\t\tif (!this.isEnabled() && this.currentState != null)\n\t\t{\n\t\t\tthis.destroyIcons();\n\t\t\tthis.currentState = null;\n\t\t}\n\n\t\tvar view = this.graph.getView();\n\t\tvar scale = view.scale;\n\t\tvar tr = view.translate;\n\t\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\tthis.error = null;\n\n\t\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t\t{\n\t\t\tpoint = new mxPoint((this.graph.snap(point.x / scale - tr.x) + tr.x) * scale,\n\t\t\t\t(this.graph.snap(point.y / scale - tr.y) + tr.y) * scale);\n\t\t}\n\t\t\n\t\tthis.snapToPreview(me, point);\n\t\tthis.currentPoint = point;\n\t\t\n\t\tif ((this.first != null || (this.isEnabled() && this.graph.isEnabled())) &&\n\t\t\t(this.shape != null || this.first == null ||\n\t\t\tMath.abs(me.getGraphX() - this.first.x) > this.graph.tolerance ||\n\t\t\tMath.abs(me.getGraphY() - this.first.y) > this.graph.tolerance))\n\t\t{\n\t\t\tthis.updateCurrentState(me, point);\n\t\t}\n\n\t\tif (this.first != null)\n\t\t{\n\t\t\tvar constraint = null;\n\t\t\tvar current = point;\n\t\t\t\n\t\t\t// Uses the current point from the constraint handler if available\n\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t\t{\n\t\t\t\tconstraint = this.constraintHandler.currentConstraint;\n\t\t\t\tcurrent = this.constraintHandler.currentPoint.clone();\n\t\t\t}\n\t\t\telse if (this.previous != null && !this.graph.isIgnoreTerminalEvent(me.getEvent()) &&\n\t\t\t\tmxEvent.isShiftDown(me.getEvent()))\n\t\t\t{\n\t\t\t\tif (Math.abs(this.previous.getCenterX() - point.x) <\n\t\t\t\t\tMath.abs(this.previous.getCenterY() - point.y))\n\t\t\t\t{\n\t\t\t\t\tpoint.x = this.previous.getCenterX();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpoint.y = this.previous.getCenterY();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pt2 = this.first;\n\t\t\t\n\t\t\t// Moves the connect icon with the mouse\n\t\t\tif (this.selectedIcon != null)\n\t\t\t{\n\t\t\t\tvar w = this.selectedIcon.bounds.width;\n\t\t\t\tvar h = this.selectedIcon.bounds.height;\n\t\t\t\t\n\t\t\t\tif (this.currentState != null && this.targetConnectImage)\n\t\t\t\t{\n\t\t\t\t\tvar pos = this.getIconPosition(this.selectedIcon, this.currentState);\n\t\t\t\t\tthis.selectedIcon.bounds.x = pos.x;\n\t\t\t\t\tthis.selectedIcon.bounds.y = pos.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar bounds = new mxRectangle(me.getGraphX() + this.connectIconOffset.x,\n\t\t\t\t\t\tme.getGraphY() + this.connectIconOffset.y, w, h);\n\t\t\t\t\tthis.selectedIcon.bounds = bounds;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.selectedIcon.redraw();\n\t\t\t}\n\n\t\t\t// Uses edge state to compute the terminal points\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tthis.updateEdgeState(current, constraint);\n\t\t\t\tcurrent = this.edgeState.absolutePoints[this.edgeState.absolutePoints.length - 1];\n\t\t\t\tpt2 = this.edgeState.absolutePoints[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.currentState != null)\n\t\t\t\t{\n\t\t\t\t\tif (this.constraintHandler.currentConstraint == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = this.getTargetPerimeterPoint(this.currentState, me);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Computes the source perimeter point\n\t\t\t\tif (this.sourceConstraint == null && this.previous != null)\n\t\t\t\t{\n\t\t\t\t\tvar next = (this.waypoints != null && this.waypoints.length > 0) ?\n\t\t\t\t\t\t\tthis.waypoints[0] : current;\n\t\t\t\t\tvar tmp = this.getSourcePerimeterPoint(this.previous, next, me);\n\t\t\t\t\t\n\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt2 = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Makes sure the cell under the mousepointer can be detected\n\t\t\t// by moving the preview shape away from the mouse. This\n\t\t\t// makes sure the preview shape does not prevent the detection\n\t\t\t// of the cell under the mousepointer even for slow gestures.\n\t\t\tif (this.currentState == null && this.movePreviewAway)\n\t\t\t{\n\t\t\t\tvar tmp = pt2; \n\t\t\t\t\n\t\t\t\tif (this.edgeState != null && this.edgeState.absolutePoints.length >= 2)\n\t\t\t\t{\n\t\t\t\t\tvar tmp2 = this.edgeState.absolutePoints[this.edgeState.absolutePoints.length - 2];\n\t\t\t\t\t\n\t\t\t\t\tif (tmp2 != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = tmp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dx = current.x - tmp.x;\n\t\t\t\tvar dy = current.y - tmp.y;\n\t\t\t\t\n\t\t\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\t\n\t\t\t\tif (len == 0)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Stores old point to reuse when creating edge\n\t\t\t\tthis.originalPoint = current.clone();\n\t\t\t\tcurrent.x -= dx * 4 / len;\n\t\t\t\tcurrent.y -= dy * 4 / len;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.originalPoint = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Creates the preview shape (lazy)\n\t\t\tif (this.shape == null)\n\t\t\t{\n\t\t\t\tvar dx = Math.abs(me.getGraphX() - this.first.x);\n\t\t\t\tvar dy = Math.abs(me.getGraphY() - this.first.y);\n\n\t\t\t\tif (dx > this.graph.tolerance || dy > this.graph.tolerance)\n\t\t\t\t{\n\t\t\t\t\tthis.shape = this.createShape();\n\n\t\t\t\t\tif (this.edgeState != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shape.apply(this.edgeState);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Revalidates current connection\n\t\t\t\t\tthis.updateCurrentState(me, point);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Updates the points in the preview edge\n\t\t\tif (this.shape != null)\n\t\t\t{\n\t\t\t\tif (this.edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tthis.shape.points = this.edgeState.absolutePoints;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar pts = [pt2];\n\t\t\t\t\t\n\t\t\t\t\tif (this.waypoints != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpts = pts.concat(this.waypoints);\n\t\t\t\t\t}\n\n\t\t\t\t\tpts.push(current);\n\t\t\t\t\tthis.shape.points = pts;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.drawPreview();\n\t\t\t}\n\t\t\t\n\t\t\t// Makes sure endpoint of edge is visible during connect\n\t\t\tif (this.cursor != null)\n\t\t\t{\n\t\t\t\tthis.graph.container.style.cursor = this.cursor;\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(me.getEvent());\n\t\t\tme.consume();\n\t\t}\n\t\telse if (!this.isEnabled() || !this.graph.isEnabled())\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\telse if (this.previous != this.currentState && this.edgeState == null)\n\t\t{\n\t\t\tthis.destroyIcons();\n\t\t\t\n\t\t\t// Sets the cursor on the current shape\t\t\t\t\n\t\t\tif (this.currentState != null && this.error == null && this.constraintHandler.currentConstraint == null)\n\t\t\t{\n\t\t\t\tthis.icons = this.createIcons(this.currentState);\n\n\t\t\t\tif (this.icons == null)\n\t\t\t\t{\n\t\t\t\t\tthis.currentState.setCursor(mxConstants.CURSOR_CONNECT);\n\t\t\t\t\tme.consume();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.previous = this.currentState;\n\t\t}\n\t\telse if (this.previous == this.currentState && this.currentState != null && this.icons == null &&\n\t\t\t!this.graph.isMouseDown)\n\t\t{\n\t\t\t// Makes sure that no cursors are changed\n\t\t\tme.consume();\n\t\t}\n\n\t\tif (!this.graph.isMouseDown && this.currentState != null && this.icons != null)\n\t\t{\n\t\t\tvar hitsIcon = false;\n\t\t\tvar target = me.getSource();\n\t\t\t\n\t\t\tfor (var i = 0; i < this.icons.length && !hitsIcon; i++)\n\t\t\t{\n\t\t\t\thitsIcon = target == this.icons[i].node || target.parentNode == this.icons[i].node;\n\t\t\t}\n\n\t\t\tif (!hitsIcon)\n\t\t\t{\n\t\t\t\tthis.updateIcons(this.currentState, this.icons, me);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.constraintHandler.reset();\n\t}\n};\n\n/**\n * Function: updateEdgeState\n * \n * Updates <edgeState>.\n */\nmxConnectionHandler.prototype.updateEdgeState = function(current, constraint)\n{\n\t// TODO: Use generic method for writing constraint to style\n\tif (this.sourceConstraint != null && this.sourceConstraint.point != null)\n\t{\n\t\tthis.edgeState.style[mxConstants.STYLE_EXIT_X] = this.sourceConstraint.point.x;\n\t\tthis.edgeState.style[mxConstants.STYLE_EXIT_Y] = this.sourceConstraint.point.y;\n\t}\n\n\tif (constraint != null && constraint.point != null)\n\t{\n\t\tthis.edgeState.style[mxConstants.STYLE_ENTRY_X] = constraint.point.x;\n\t\tthis.edgeState.style[mxConstants.STYLE_ENTRY_Y] = constraint.point.y;\n\t}\n\telse\n\t{\n\t\tdelete this.edgeState.style[mxConstants.STYLE_ENTRY_X];\n\t\tdelete this.edgeState.style[mxConstants.STYLE_ENTRY_Y];\n\t}\n\t\n\tthis.edgeState.absolutePoints = [null, (this.currentState != null) ? null : current];\n\tthis.graph.view.updateFixedTerminalPoint(this.edgeState, this.previous, true, this.sourceConstraint);\n\t\n\tif (this.currentState != null)\n\t{\n\t\tif (constraint == null)\n\t\t{\n\t\t\tconstraint = this.graph.getConnectionConstraint(this.edgeState, this.previous, false);\n\t\t}\n\t\t\n\t\tthis.edgeState.setAbsoluteTerminalPoint(null, false);\n\t\tthis.graph.view.updateFixedTerminalPoint(this.edgeState, this.currentState, false, constraint);\n\t}\n\t\n\t// Scales and translates the waypoints to the model\n\tvar realPoints = null;\n\t\n\tif (this.waypoints != null)\n\t{\n\t\trealPoints = [];\n\t\t\n\t\tfor (var i = 0; i < this.waypoints.length; i++)\n\t\t{\n\t\t\tvar pt = this.waypoints[i].clone();\n\t\t\tthis.convertWaypoint(pt);\n\t\t\trealPoints[i] = pt;\n\t\t}\n\t}\n\t\n\tthis.graph.view.updatePoints(this.edgeState, realPoints, this.previous, this.currentState);\n\tthis.graph.view.updateFloatingTerminalPoints(this.edgeState, this.previous, this.currentState);\n};\n\n/**\n * Function: getTargetPerimeterPoint\n * \n * Returns the perimeter point for the given target state.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the target cell state.\n * me - <mxMouseEvent> that represents the mouse move.\n */\nmxConnectionHandler.prototype.getTargetPerimeterPoint = function(state, me)\n{\n\tvar result = null;\n\tvar view = state.view;\n\tvar targetPerimeter = view.getPerimeterFunction(state);\n\t\n\tif (targetPerimeter != null)\n\t{\n\t\tvar next = (this.waypoints != null && this.waypoints.length > 0) ?\n\t\t\t\tthis.waypoints[this.waypoints.length - 1] :\n\t\t\t\tnew mxPoint(this.previous.getCenterX(), this.previous.getCenterY());\n\t\tvar tmp = targetPerimeter(view.getPerimeterBounds(state),\n\t\t\tthis.edgeState, next, false);\n\t\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tresult = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = new mxPoint(state.getCenterX(), state.getCenterY());\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getSourcePerimeterPoint\n * \n * Hook to update the icon position(s) based on a mouseOver event. This is\n * an empty implementation.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the target cell state.\n * next - <mxPoint> that represents the next point along the previewed edge.\n * me - <mxMouseEvent> that represents the mouse move.\n */\nmxConnectionHandler.prototype.getSourcePerimeterPoint = function(state, next, me)\n{\n\tvar result = null;\n\tvar view = state.view;\n\tvar sourcePerimeter = view.getPerimeterFunction(state);\n\tvar c = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\n\tif (sourcePerimeter != null)\n\t{\n\t\tvar theta = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0);\n\t\tvar rad = -theta * (Math.PI / 180);\n\t\t\n\t\tif (theta != 0)\n\t\t{\n\t\t\tnext = mxUtils.getRotatedPoint(new mxPoint(next.x, next.y), Math.cos(rad), Math.sin(rad), c);\n\t\t}\n\t\t\n\t\tvar tmp = sourcePerimeter(view.getPerimeterBounds(state), state, next, false);\n\t\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tif (theta != 0)\n\t\t\t{\n\t\t\t\ttmp = mxUtils.getRotatedPoint(new mxPoint(tmp.x, tmp.y), Math.cos(-rad), Math.sin(-rad), c);\n\t\t\t}\n\t\t\t\n\t\t\tresult = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = c;\n\t}\n\t\n\treturn result;\n};\n\n\n/**\n * Function: updateIcons\n * \n * Hook to update the icon position(s) based on a mouseOver event. This is\n * an empty implementation.\n * \n * Parameters:\n * \n * state - <mxCellState> under the mouse.\n * icons - Array of currently displayed icons.\n * me - <mxMouseEvent> that contains the mouse event.\n */\nmxConnectionHandler.prototype.updateIcons = function(state, icons, me)\n{\n\t// empty\n};\n\n/**\n * Function: isStopEvent\n * \n * Returns true if the given mouse up event should stop this handler. The\n * connection will be created if <error> is null. Note that this is only\n * called if <waypointsEnabled> is true. This implemtation returns true\n * if there is a cell state in the given event.\n */\nmxConnectionHandler.prototype.isStopEvent = function(me)\n{\n\treturn me.getState() != null;\n};\n\n/**\n * Function: addWaypoint\n * \n * Adds the waypoint for the given event to <waypoints>.\n */\nmxConnectionHandler.prototype.addWaypointForEvent = function(me)\n{\n\tvar point = mxUtils.convertPoint(this.graph.container, me.getX(), me.getY());\n\tvar dx = Math.abs(point.x - this.first.x);\n\tvar dy = Math.abs(point.y - this.first.y);\n\tvar addPoint = this.waypoints != null || (this.mouseDownCounter > 1 &&\n\t\t\t(dx > this.graph.tolerance || dy > this.graph.tolerance));\n\n\tif (addPoint)\n\t{\n\t\tif (this.waypoints == null)\n\t\t{\n\t\t\tthis.waypoints = [];\n\t\t}\n\t\t\n\t\tvar scale = this.graph.view.scale;\n\t\tvar point = new mxPoint(this.graph.snap(me.getGraphX() / scale) * scale,\n\t\t\t\tthis.graph.snap(me.getGraphY() / scale) * scale);\n\t\tthis.waypoints.push(point);\n\t}\n};\n\n/**\n * Function: checkConstraints\n * \n * Returns true if the connection for the given constraints is valid. This\n * implementation returns true if the constraints are not pointing to the\n * same fixed connection point.\n */\nmxConnectionHandler.prototype.checkConstraints = function(c1, c2)\n{\n\treturn (c1 == null || c2 == null || c1.point == null || c2.point == null ||\n\t\t!c1.point.equals(c2.point) || c1.perimeter != c2.perimeter);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by inserting the new connection.\n */\nmxConnectionHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isConnecting())\n\t{\n\t\tif (this.waypointsEnabled && !this.isStopEvent(me))\n\t\t{\n\t\t\tthis.addWaypointForEvent(me);\n\t\t\tme.consume();\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar c1 = this.sourceConstraint;\n\t\tvar c2 = this.constraintHandler.currentConstraint;\n\n\t\tvar source = (this.previous != null) ? this.previous.cell : null;\n\t\tvar target = null;\n\t\t\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t{\n\t\t\ttarget = this.constraintHandler.currentFocus.cell;\n\t\t}\n\t\t\n\t\tif (target == null && this.currentState != null)\n\t\t{\n\t\t\ttarget = this.currentState.cell;\n\t\t}\n\t\t\n\t\t// Inserts the edge if no validation error exists and if constraints differ\n\t\tif (this.error == null && (source == null || target == null ||\n\t\t\tsource != target || this.checkConstraints(c1, c2)))\n\t\t{\n\t\t\tthis.connect(source, target, me.getEvent(), me.getCell());\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Selects the source terminal for self-references\n\t\t\tif (this.previous != null && this.marker.validState != null &&\n\t\t\t\tthis.previous.cell == this.marker.validState.cell)\n\t\t\t{\n\t\t\t\tthis.graph.selectCellForEvent(this.marker.source, me.getEvent());\n\t\t\t}\n\t\t\t\n\t\t\t// Displays the error message if it is not an empty string,\n\t\t\t// for empty error messages, the event is silently dropped\n\t\t\tif (this.error != null && this.error.length > 0)\n\t\t\t{\n\t\t\t\tthis.graph.validationAlert(this.error);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Redraws the connect icons and resets the handler state\n\t\tthis.destroyIcons();\n\t\tme.consume();\n\t}\n\n\tif (this.first != null)\n\t{\n\t\tthis.reset();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxConnectionHandler.prototype.reset = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\t// Resets the cursor on the container\n\tif (this.cursor != null && this.graph.container != null)\n\t{\n\t\tthis.graph.container.style.cursor = '';\n\t}\n\t\n\tthis.destroyIcons();\n\tthis.marker.reset();\n\tthis.constraintHandler.reset();\n\tthis.originalPoint = null;\n\tthis.currentPoint = null;\n\tthis.edgeState = null;\n\tthis.previous = null;\n\tthis.error = null;\n\tthis.sourceConstraint = null;\n\tthis.mouseDownCounter = 0;\n\tthis.first = null;\n\n\tthis.fireEvent(new mxEventObject(mxEvent.RESET));\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview edge using the color and width returned by\n * <getEdgeColor> and <getEdgeWidth>.\n */\nmxConnectionHandler.prototype.drawPreview = function()\n{\n\tthis.updatePreview(this.error == null);\n\tthis.shape.redraw();\n};\n\n/**\n * Function: getEdgeColor\n * \n * Returns the color used to draw the preview edge. This returns green if\n * there is no edge validation error and red otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the color for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.updatePreview = function(valid)\n{\n\tthis.shape.strokewidth = this.getEdgeWidth(valid);\n\tthis.shape.stroke = this.getEdgeColor(valid);\n};\n\n/**\n * Function: getEdgeColor\n * \n * Returns the color used to draw the preview edge. This returns green if\n * there is no edge validation error and red otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the color for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.getEdgeColor = function(valid)\n{\n\treturn (valid) ? mxConstants.VALID_COLOR : mxConstants.INVALID_COLOR;\n};\n\t\n/**\n * Function: getEdgeWidth\n * \n * Returns the width used to draw the preview edge. This returns 3 if\n * there is no edge validation error and 1 otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the width for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.getEdgeWidth = function(valid)\n{\n\treturn (valid) ? 3 : 1;\n};\n\n/**\n * Function: connect\n * \n * Connects the given source and target using a new edge. This\n * implementation uses <createEdge> to create the edge.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * evt - Mousedown event of the connect gesture.\n * dropTarget - <mxCell> that represents the cell under the mouse when it was\n * released.\n */\nmxConnectionHandler.prototype.connect = function(source, target, evt, dropTarget)\n{\n\tif (target != null || this.isCreateTarget(evt) || this.graph.allowDanglingEdges)\n\t{\n\t\t// Uses the common parent of source and target or\n\t\t// the default parent to insert the edge\n\t\tvar model = this.graph.getModel();\n\t\tvar terminalInserted = false;\n\t\tvar edge = null;\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (source != null && target == null && !this.graph.isIgnoreTerminalEvent(evt) && this.isCreateTarget(evt))\n\t\t\t{\n\t\t\t\ttarget = this.createTargetVertex(evt, source);\n\t\t\t\t\n\t\t\t\tif (target != null)\n\t\t\t\t{\n\t\t\t\t\tdropTarget = this.graph.getDropTarget([target], evt, dropTarget);\n\t\t\t\t\tterminalInserted = true;\n\t\t\t\t\t\n\t\t\t\t\t// Disables edges as drop targets if the target cell was created\n\t\t\t\t\t// FIXME: Should not shift if vertex was aligned (same in Java)\n\t\t\t\t\tif (dropTarget == null || !this.graph.getModel().isEdge(dropTarget))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pstate = this.graph.getView().getState(dropTarget);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar tmp = model.getGeometry(target);\n\t\t\t\t\t\t\ttmp.x -= pstate.origin.x;\n\t\t\t\t\t\t\ttmp.y -= pstate.origin.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdropTarget = this.graph.getDefaultParent();\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tthis.graph.addCell(target, dropTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar parent = this.graph.getDefaultParent();\n\n\t\t\tif (source != null && target != null &&\n\t\t\t\tmodel.getParent(source) == model.getParent(target) &&\n\t\t\t\tmodel.getParent(model.getParent(source)) != model.getRoot())\n\t\t\t{\n\t\t\t\tparent = model.getParent(source);\n\n\t\t\t\tif ((source.geometry != null && source.geometry.relative) &&\n\t\t\t\t\t(target.geometry != null && target.geometry.relative))\n\t\t\t\t{\n\t\t\t\t\tparent = model.getParent(parent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Uses the value of the preview edge state for inserting\n\t\t\t// the new edge into the graph\n\t\t\tvar value = null;\n\t\t\tvar style = null;\n\t\t\t\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tvalue = this.edgeState.cell.value;\n\t\t\t\tstyle = this.edgeState.cell.style;\n\t\t\t}\n\n\t\t\tedge = this.insertEdge(parent, null, value, source, target, style);\n\t\t\t\n\t\t\tif (edge != null)\n\t\t\t{\n\t\t\t\t// Updates the connection constraints\n\t\t\t\tthis.graph.setConnectionConstraint(edge, source, true, this.sourceConstraint);\n\t\t\t\tthis.graph.setConnectionConstraint(edge, target, false, this.constraintHandler.currentConstraint);\n\t\t\t\t\n\t\t\t\t// Uses geometry of the preview edge state\n\t\t\t\tif (this.edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tmodel.setGeometry(edge, this.edgeState.cell.geometry);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar parent = model.getParent(source);\n\t\t\t\t\n\t\t\t\t// Inserts edge before source\n\t\t\t\tif (this.isInsertBefore(edge, source, target, evt, dropTarget))\n\t\t\t\t{\n\t\t\t\t\tvar index = null;\n\t\t\t\t\tvar tmp = source;\n\n\t\t\t\t\twhile (tmp.parent != null && tmp.geometry != null &&\n\t\t\t\t\t\ttmp.geometry.relative && tmp.parent != edge.parent)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = this.graph.model.getParent(tmp);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tmp != null && tmp.parent != null && tmp.parent == edge.parent)\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.add(parent, edge, tmp.parent.getIndex(tmp));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Makes sure the edge has a non-null, relative geometry\n\t\t\t\tvar geo = model.getGeometry(edge);\n\n\t\t\t\tif (geo == null)\n\t\t\t\t{\n\t\t\t\t\tgeo = new mxGeometry();\n\t\t\t\t\tgeo.relative = true;\n\t\t\t\t\t\n\t\t\t\t\tmodel.setGeometry(edge, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Uses scaled waypoints in geometry\n\t\t\t\tif (this.waypoints != null && this.waypoints.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\tvar tr = this.graph.view.translate;\n\t\t\t\t\tgeo.points = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < this.waypoints.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pt = this.waypoints[i];\n\t\t\t\t\t\tgeo.points.push(new mxPoint(pt.x / s - tr.x, pt.y / s - tr.y));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\tvar t = this.graph.view.translate;\n\t\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\tvar pt = (this.originalPoint != null) ?\n\t\t\t\t\t\t\tnew mxPoint(this.originalPoint.x / s - t.x, this.originalPoint.y / s - t.y) :\n\t\t\t\t\t\tnew mxPoint(this.currentPoint.x / s - t.x, this.currentPoint.y / s - t.y);\n\t\t\t\t\tpt.x -= this.graph.panDx / this.graph.view.scale;\n\t\t\t\t\tpt.y -= this.graph.panDy / this.graph.view.scale;\n\t\t\t\t\tgeo.setTerminalPoint(pt, false);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CONNECT, 'cell', edge, 'terminal', target,\n\t\t\t\t\t'event', evt, 'target', dropTarget, 'terminalInserted', terminalInserted));\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxLog.show();\n\t\t\tmxLog.debug(e.message);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t\t\n\t\tif (this.select)\n\t\t{\n\t\t\tthis.selectCells(edge, (terminalInserted) ? target : null);\n\t\t}\n\t}\n};\n\n/**\n * Function: selectCells\n * \n * Selects the given edge after adding a new connection. The target argument\n * contains the target vertex if one has been inserted.\n */\nmxConnectionHandler.prototype.selectCells = function(edge, target)\n{\n\tthis.graph.setSelectionCell(edge);\n};\n\n/**\n * Function: insertEdge\n * \n * Creates, inserts and returns the new edge for the given parameters. This\n * implementation does only use <createEdge> if <factoryMethod> is defined,\n * otherwise <mxGraph.insertEdge> will be used.\n */\nmxConnectionHandler.prototype.insertEdge = function(parent, id, value, source, target, style)\n{\n\tif (this.factoryMethod == null)\n\t{\n\t\treturn this.graph.insertEdge(parent, id, value, source, target, style);\n\t}\n\telse\n\t{\n\t\tvar edge = this.createEdge(value, source, target, style);\n\t\tedge = this.graph.addEdge(edge, parent, source, target);\n\t\t\n\t\treturn edge;\n\t}\n};\n\n/**\n * Function: createTargetVertex\n * \n * Hook method for creating new vertices on the fly if no target was\n * under the mouse. This is only called if <createTarget> is true and\n * returns null.\n * \n * Parameters:\n * \n * evt - Mousedown event of the connect gesture.\n * source - <mxCell> that represents the source terminal.\n */\nmxConnectionHandler.prototype.createTargetVertex = function(evt, source)\n{\n\t// Uses the first non-relative source\n\tvar geo = this.graph.getCellGeometry(source);\n\t\n\twhile (geo != null && geo.relative)\n\t{\n\t\tsource = this.graph.getModel().getParent(source);\n\t\tgeo = this.graph.getCellGeometry(source);\n\t}\n\t\n\tvar clone = this.graph.cloneCell(source);\n\tvar geo = this.graph.getModel().getGeometry(clone);\n\t\n\tif (geo != null)\n\t{\n\t\tvar t = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\tvar point = new mxPoint(this.currentPoint.x / s - t.x, this.currentPoint.y / s - t.y);\n\t\tgeo.x = Math.round(point.x - geo.width / 2 - this.graph.panDx / s);\n\t\tgeo.y = Math.round(point.y - geo.height / 2 - this.graph.panDy / s);\n\n\t\t// Aligns with source if within certain tolerance\n\t\tvar tol = this.getAlignmentTolerance();\n\t\t\n\t\tif (tol > 0)\n\t\t{\n\t\t\tvar sourceState = this.graph.view.getState(source);\n\t\t\t\n\t\t\tif (sourceState != null)\n\t\t\t{\n\t\t\t\tvar x = sourceState.x / s - t.x;\n\t\t\t\tvar y = sourceState.y / s - t.y;\n\t\t\t\t\n\t\t\t\tif (Math.abs(x - geo.x) <= tol)\n\t\t\t\t{\n\t\t\t\t\tgeo.x = Math.round(x);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(y - geo.y) <= tol)\n\t\t\t\t{\n\t\t\t\t\tgeo.y = Math.round(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn clone;\t\t\n};\n\n/**\n * Function: getAlignmentTolerance\n * \n * Returns the tolerance for aligning new targets to sources. This returns the grid size / 2.\n */\nmxConnectionHandler.prototype.getAlignmentTolerance = function(evt)\n{\n\treturn (this.graph.isGridEnabled()) ? this.graph.gridSize / 2 : this.graph.tolerance;\n};\n\n/**\n * Function: createEdge\n * \n * Creates and returns a new edge using <factoryMethod> if one exists. If\n * no factory method is defined, then a new default edge is returned. The\n * source and target arguments are informal, the actual connection is\n * setup later by the caller of this function.\n * \n * Parameters:\n * \n * value - Value to be used for creating the edge.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * style - Optional style from the preview edge.\n */\nmxConnectionHandler.prototype.createEdge = function(value, source, target, style)\n{\n\tvar edge = null;\n\t\n\t// Creates a new edge using the factoryMethod\n\tif (this.factoryMethod != null)\n\t{\n\t\tedge = this.factoryMethod(source, target, style);\n\t}\n\t\n\tif (edge == null)\n\t{\n\t\tedge = new mxCell(value || '');\n\t\tedge.setEdge(true);\n\t\tedge.setStyle(style);\n\t\t\n\t\tvar geo = new mxGeometry();\n\t\tgeo.relative = true;\n\t\tedge.setGeometry(geo);\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This should be\n * called on all instances. It is called automatically for the built-in\n * instance created for each <mxGraph>.\n */\nmxConnectionHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.destroy();\n\t\tthis.marker = null;\n\t}\n\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.destroy();\n\t\tthis.constraintHandler = null;\n\t}\n\n\tif (this.changeHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t\tthis.graph.getView().removeListener(this.changeHandler);\n\t\tthis.changeHandler = null;\n\t}\n\t\n\tif (this.drillHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.drillHandler);\n\t\tthis.graph.getView().removeListener(this.drillHandler);\n\t\tthis.drillHandler = null;\n\t}\n\t\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConstraintHandler\n *\n * Handles constraints on connection targets. This class is in charge of\n * showing fixed points when the mouse is over a vertex and handles constraints\n * to establish new connections.\n *\n * Constructor: mxConstraintHandler\n *\n * Constructs an new constraint handler.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * factoryMethod - Optional function to create the edge. The function takes\n * the source and target <mxCell> as the first and second argument and\n * returns the <mxCell> that represents the new edge.\n */\nfunction mxConstraintHandler(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Adds a graph model listener to update the current focus on changes\n\tthis.resetHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.currentFocus != null && this.graph.view.getState(this.currentFocus.cell) == null)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.redraw();\n\t\t}\n\t});\n\t\n\tthis.graph.model.addListener(mxEvent.CHANGE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE, this.resetHandler);\n\tthis.graph.addListener(mxEvent.ROOT, this.resetHandler);\n};\n\n/**\n * Variable: pointImage\n * \n * <mxImage> to be used as the image for fixed connection points.\n */\nmxConstraintHandler.prototype.pointImage = new mxImage(mxClient.imageBasePath + '/point.gif', 5, 5);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxConstraintHandler.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxConstraintHandler.prototype.enabled = true;\n\n/**\n * Variable: highlightColor\n * \n * Specifies the color for the highlight. Default is <mxConstants.DEFAULT_VALID_COLOR>.\n */\nmxConstraintHandler.prototype.highlightColor = mxConstants.DEFAULT_VALID_COLOR;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxConstraintHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxConstraintHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxConstraintHandler.prototype.reset = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t}\n\t\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n\t\n\tthis.currentConstraint = null;\n\tthis.currentFocusArea = null;\n\tthis.currentPoint = null;\n\tthis.currentFocus = null;\n\tthis.focusPoints = null;\n};\n\n/**\n * Function: getTolerance\n * \n * Returns the tolerance to be used for intersecting connection points. This\n * implementation returns <mxGraph.tolerance>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> whose tolerance should be returned.\n */\nmxConstraintHandler.prototype.getTolerance = function(me)\n{\n\treturn this.graph.getTolerance();\n};\n\n/**\n * Function: getImageForConstraint\n * \n * Returns the tolerance to be used for intersecting connection points.\n */\nmxConstraintHandler.prototype.getImageForConstraint = function(state, constraint, point)\n{\n\treturn this.pointImage;\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the given <mxMouseEvent> should be ignored in <update>. This\n * implementation always returns false.\n */\nmxConstraintHandler.prototype.isEventIgnored = function(me, source)\n{\n\treturn false;\n};\n\n/**\n * Function: isStateIgnored\n * \n * Returns true if the given state should be ignored. This always returns false.\n */\nmxConstraintHandler.prototype.isStateIgnored = function(state, source)\n{\n\treturn false;\n};\n\n/**\n * Function: destroyIcons\n * \n * Destroys the <focusIcons> if they exist.\n */\nmxConstraintHandler.prototype.destroyIcons = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t\tthis.focusPoints = null;\n\t}\n};\n\n/**\n * Function: destroyFocusHighlight\n * \n * Destroys the <focusHighlight> if one exists.\n */\nmxConstraintHandler.prototype.destroyFocusHighlight = function()\n{\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n};\n\n/**\n * Function: isKeepFocusEvent\n * \n * Returns true if the current focused state should not be changed for the given event.\n * This returns true if shift and alt are pressed.\n */\nmxConstraintHandler.prototype.isKeepFocusEvent = function(me)\n{\n\treturn mxEvent.isShiftDown(me.getEvent());\n};\n\n/**\n * Function: getCellForEvent\n * \n * Returns the cell for the given event.\n */\nmxConstraintHandler.prototype.getCellForEvent = function(me, point)\n{\n\tvar cell = me.getCell();\n\t\n\t// Gets cell under actual point if different from event location\n\tif (cell == null && point != null && (me.getGraphX() != point.x || me.getGraphY() != point.y))\n\t{\n\t\tcell = this.graph.getCellAt(point.x, point.y);\n\t}\n\t\n\t// Uses connectable parent vertex if one exists\n\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\n\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t{\n\t\t\tcell = parent;\n\t\t}\n\t}\n\t\n\treturn (this.graph.isCellLocked(cell)) ? null : cell;\n};\n\n/**\n * Function: update\n * \n * Updates the state of this handler based on the given <mxMouseEvent>.\n * Source is a boolean indicating if the cell is a source or target.\n */\nmxConstraintHandler.prototype.update = function(me, source, existingEdge, point)\n{\n\tif (this.isEnabled() && !this.isEventIgnored(me))\n\t{\n\t\t// Lazy installation of mouseleave handler\n\t\tif (this.mouseleaveHandler == null && this.graph.container != null)\n\t\t{\n\t\t\tthis.mouseleaveHandler = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.reset();\n\t\t\t});\n\n\t\t\tmxEvent.addListener(this.graph.container, 'mouseleave', this.resetHandler);\t\n\t\t}\n\t\t\n\t\tvar tol = this.getTolerance(me);\n\t\tvar x = (point != null) ? point.x : me.getGraphX();\n\t\tvar y = (point != null) ? point.y : me.getGraphY();\n\t\tvar grid = new mxRectangle(x - tol, y - tol, 2 * tol, 2 * tol);\n\t\tvar mouse = new mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol);\n\t\tvar state = this.graph.view.getState(this.getCellForEvent(me, point));\n\n\t\t// Keeps focus icons visible while over vertex bounds and no other cell under mouse or shift is pressed\n\t\tif (!this.isKeepFocusEvent(me) && (this.currentFocusArea == null || this.currentFocus == null ||\n\t\t\t(state != null) || !this.graph.getModel().isVertex(this.currentFocus.cell) ||\n\t\t\t!mxUtils.intersects(this.currentFocusArea, mouse)) && (state != this.currentFocus))\n\t\t{\n\t\t\tthis.currentFocusArea = null;\n\t\t\tthis.currentFocus = null;\n\t\t\tthis.setFocus(me, state, source);\n\t\t}\n\n\t\tthis.currentConstraint = null;\n\t\tthis.currentPoint = null;\n\t\tvar minDistSq = null;\n\t\t\n\t\tif (this.focusIcons != null && this.constraints != null &&\n\t\t\t(state == null || this.currentFocus == state))\n\t\t{\n\t\t\tvar cx = mouse.getCenterX();\n\t\t\tvar cy = mouse.getCenterY();\n\t\t\t\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tvar dx = cx - this.focusIcons[i].bounds.getCenterX();\n\t\t\t\tvar dy = cy - this.focusIcons[i].bounds.getCenterY();\n\t\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\t\n\t\t\t\tif ((this.intersects(this.focusIcons[i], mouse, source, existingEdge) || (point != null &&\n\t\t\t\t\tthis.intersects(this.focusIcons[i], grid, source, existingEdge))) &&\n\t\t\t\t\t(minDistSq == null || tmp < minDistSq))\n\t\t\t\t{\n\t\t\t\t\tthis.currentConstraint = this.constraints[i];\n\t\t\t\t\tthis.currentPoint = this.focusPoints[i];\n\t\t\t\t\tminDistSq = tmp;\n\t\t\t\t\t\n\t\t\t\t\tvar tmp = this.focusIcons[i].bounds.clone();\n\t\t\t\t\ttmp.grow(mxConstants.HIGHLIGHT_SIZE + 1);\n\t\t\t\t\ttmp.width -= 1;\n\t\t\t\t\ttmp.height -= 1;\n\t\t\t\t\t\n\t\t\t\t\tif (this.focusHighlight == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar hl = this.createHighlightShape();\n\t\t\t\t\t\thl.dialect = (this.graph.dialect == mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\t\t\tmxConstants.DIALECT_SVG : mxConstants.DIALECT_VML;\n\t\t\t\t\t\thl.pointerEvents = false;\n\n\t\t\t\t\t\thl.init(this.graph.getView().getOverlayPane());\n\t\t\t\t\t\tthis.focusHighlight = hl;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\tmxEvent.redirectMouseEvents(hl.node, this.graph, getState);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.focusHighlight.bounds = tmp;\n\t\t\t\t\tthis.focusHighlight.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.currentConstraint == null)\n\t\t{\n\t\t\tthis.destroyFocusHighlight();\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.currentConstraint = null;\n\t\tthis.currentFocus = null;\n\t\tthis.currentPoint = null;\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.redraw = function()\n{\n\tif (this.currentFocus != null && this.constraints != null && this.focusIcons != null)\n\t{\n\t\tvar state = this.graph.view.getState(this.currentFocus.cell);\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tthis.focusIcons[i].bounds = bounds;\n\t\t\tthis.focusIcons[i].redraw();\n\t\t\tthis.currentFocusArea.add(this.focusIcons[i].bounds);\n\t\t\tthis.focusPoints[i] = cp;\n\t\t}\n\t}\t\n};\n\n/**\n * Function: setFocus\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.setFocus = function(me, state, source)\n{\n\tthis.constraints = (state != null && !this.isStateIgnored(state, source) &&\n\t\tthis.graph.isCellConnectable(state.cell)) ? ((this.isEnabled()) ?\n\t\t(this.graph.getAllConnectionConstraints(state, source) || []) : []) : null;\n\n\t// Only uses cells which have constraints\n\tif (this.constraints != null)\n\t{\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tif (this.focusIcons != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tthis.focusIcons[i].destroy();\n\t\t\t}\n\t\t\t\n\t\t\tthis.focusIcons = null;\n\t\t\tthis.focusPoints = null;\n\t\t}\n\t\t\n\t\tthis.focusPoints = [];\n\t\tthis.focusIcons = [];\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar src = img.src;\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tvar icon = new mxImageShape(bounds, src);\n\t\t\ticon.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\ticon.preserveImageAspect = false;\n\t\t\ticon.init(this.graph.getView().getDecoratorPane());\n\t\t\t\n\t\t\t// Fixes lost event tracking for images in quirks / IE8 standards\n\t\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(icon.node, 'dragstart', function(evt)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// Move the icon behind all other overlays\n\t\t\tif (icon.node.previousSibling != null)\n\t\t\t{\n\t\t\t\ticon.node.parentNode.insertBefore(icon.node, icon.node.parentNode.firstChild);\n\t\t\t}\n\n\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t});\n\t\t\t\n\t\t\ticon.redraw();\n\n\t\t\tmxEvent.redirectMouseEvents(icon.node, this.graph, getState);\n\t\t\tthis.currentFocusArea.add(icon.bounds);\n\t\t\tthis.focusIcons.push(icon);\n\t\t\tthis.focusPoints.push(cp);\n\t\t}\n\t\t\n\t\tthis.currentFocusArea.grow(this.getTolerance(me));\n\t}\n\telse\n\t{\n\t\tthis.destroyIcons();\n\t\tthis.destroyFocusHighlight();\n\t}\n};\n\n/**\n * Function: createHighlightShape\n * \n * Create the shape used to paint the highlight.\n * \n * Returns true if the given icon intersects the given point.\n */\nmxConstraintHandler.prototype.createHighlightShape = function()\n{\n\tvar hl = new mxRectangleShape(null, this.highlightColor, this.highlightColor, mxConstants.HIGHLIGHT_STROKEWIDTH);\n\thl.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\t\n\treturn hl;\n};\n\n/**\n * Function: intersects\n * \n * Returns true if the given icon intersects the given rectangle.\n */\nmxConstraintHandler.prototype.intersects = function(icon, mouse, source, existingEdge)\n{\n\treturn mxUtils.intersects(icon.bounds, mouse);\n};\n\n/**\n * Function: destroy\n * \n * Destroy this handler.\n */\nmxConstraintHandler.prototype.destroy = function()\n{\n\tthis.reset();\n\t\n\tif (this.resetHandler != null)\n\t{\n\t\tthis.graph.model.removeListener(this.resetHandler);\n\t\tthis.graph.view.removeListener(this.resetHandler);\n\t\tthis.graph.removeListener(this.resetHandler);\n\t\tthis.resetHandler = null;\n\t}\n\t\n\tif (this.mouseleaveHandler != null && this.graph.container != null)\n\t{\n\t\tmxEvent.removeListener(this.graph.container, 'mouseleave', this.mouseleaveHandler);\n\t\tthis.mouseleaveHandler = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\n/**\n * Class: mxRubberband\n * \n * Event handler that selects rectangular regions. This is not built-into\n * <mxGraph>. To enable rubberband selection in a graph, use the following code.\n * \n * Example:\n * \n * (code)\n * var rubberband = new mxRubberband(graph);\n * (end)\n * \n * Constructor: mxRubberband\n * \n * Constructs an event handler that selects rectangular regions in the graph\n * using rubberband selection.\n */\nfunction mxRubberband(graph)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.graph.addMouseListener(this);\n\n\t\t// Handles force rubberband event\n\t\tthis.forceRubberbandHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar evtName = evt.getProperty('eventName');\n\t\t\tvar me = evt.getProperty('event');\n\t\t\t\n\t\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isForceRubberbandEvent(me))\n\t\t\t{\n\t\t\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\t\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\t\t\torigin.x -= offset.x;\n\t\t\t\torigin.y -= offset.y;\n\t\t\t\tthis.start(me.getX() + origin.x, me.getY() + origin.y);\n\t\t\t\tme.consume(false);\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.forceRubberbandHandler);\n\t\t\n\t\t// Repaints the marquee after autoscroll\n\t\tthis.panHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.repaint();\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.PAN, this.panHandler);\n\t\t\n\t\t// Does not show menu if any touch gestures take place after the trigger\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tif (this.first != null)\n\t\t\t{\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\t// Automatic deallocation of memory\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload',\n\t\t\t\tmxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tthis.destroy();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Variable: defaultOpacity\n * \n * Specifies the default opacity to be used for the rubberband div. Default\n * is 20.\n */\nmxRubberband.prototype.defaultOpacity = 20;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxRubberband.prototype.enabled = true;\n\n/**\n * Variable: div\n * \n * Holds the DIV element which is currently visible.\n */\nmxRubberband.prototype.div = null;\n\n/**\n * Variable: sharedDiv\n * \n * Holds the DIV element which is used to display the rubberband.\n */\nmxRubberband.prototype.sharedDiv = null;\n\n/**\n * Variable: currentX\n * \n * Holds the value of the x argument in the last call to <update>.\n */\nmxRubberband.prototype.currentX = 0;\n\n/**\n * Variable: currentY\n * \n * Holds the value of the y argument in the last call to <update>.\n */\nmxRubberband.prototype.currentY = 0;\n\n/**\n * Variable: fadeOut\n * \n * Optional fade out effect. Default is false.\n */\nmxRubberband.prototype.fadeOut = false;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation returns\n * <enabled>.\n */\nmxRubberband.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation updates\n * <enabled>.\n */\nmxRubberband.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isForceRubberbandEvent\n * \n * Returns true if the given <mxMouseEvent> should start rubberband selection.\n * This implementation returns true if the alt key is pressed.\n */\nmxRubberband.prototype.isForceRubberbandEvent = function(me)\n{\n\treturn mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a rubberband selection. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxRubberband.prototype.mouseDown = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isEnabled() && this.graph.isEnabled() &&\n\t\tme.getState() == null && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\torigin.x -= offset.x;\n\t\torigin.y -= offset.y;\n\t\tthis.start(me.getX() + origin.x, me.getY() + origin.y);\n\n\t\t// Does not prevent the default for this event so that the\n\t\t// event processing chain is still executed even if we start\n\t\t// rubberbanding. This is required eg. in ExtJs to hide the\n\t\t// current context menu. In mouseMove we'll make sure we're\n\t\t// not selecting anything while we're rubberbanding.\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: start\n * \n * Sets the start point for the rubberband selection.\n */\nmxRubberband.prototype.start = function(x, y)\n{\n\tthis.first = new mxPoint(x, y);\n\n\tvar container = this.graph.container;\n\t\n\tfunction createMouseEvent(evt)\n\t{\n\t\tvar me = new mxMouseEvent(evt);\n\t\tvar pt = mxUtils.convertPoint(container, me.getX(), me.getY());\n\t\t\n\t\tme.graphX = pt.x;\n\t\tme.graphY = pt.y;\n\t\t\n\t\treturn me;\n\t};\n\n\tthis.dragHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseMove(this.graph, createMouseEvent(evt));\n\t});\n\n\tthis.dropHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseUp(this.graph, createMouseEvent(evt));\n\t});\n\n\t// Workaround for rubberband stopping if the mouse leaves the container in Firefox\n\tif (mxClient.IS_FF)\n\t{\n\t\tmxEvent.addGestureListeners(document, null, this.dragHandler, this.dropHandler);\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating therubberband selection.\n */\nmxRubberband.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && this.first != null)\n\t{\n\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\torigin.x -= offset.x;\n\t\torigin.y -= offset.y;\n\t\tvar x = me.getX() + origin.x;\n\t\tvar y = me.getY() + origin.y;\n\t\tvar dx = this.first.x - x;\n\t\tvar dy = this.first.y - y;\n\t\tvar tol = this.graph.tolerance;\n\t\t\n\t\tif (this.div != null || Math.abs(dx) > tol ||  Math.abs(dy) > tol)\n\t\t{\n\t\t\tif (this.div == null)\n\t\t\t{\n\t\t\t\tthis.div = this.createShape();\n\t\t\t}\n\t\t\t\n\t\t\t// Clears selection while rubberbanding. This is required because\n\t\t\t// the event is not consumed in mouseDown.\n\t\t\tmxUtils.clearSelection();\n\t\t\t\n\t\t\tthis.update(x, y);\n\t\t\tme.consume();\n\t\t}\n\t}\n};\n\n/**\n * Function: createShape\n * \n * Creates the rubberband selection shape.\n */\nmxRubberband.prototype.createShape = function()\n{\n\tif (this.sharedDiv == null)\n\t{\n\t\tthis.sharedDiv = document.createElement('div');\n\t\tthis.sharedDiv.className = 'mxRubberband';\n\t\tmxUtils.setOpacity(this.sharedDiv, this.defaultOpacity);\n\t}\n\n\tthis.graph.container.appendChild(this.sharedDiv);\n\tvar result = this.sharedDiv;\n\t\n\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10) && this.fadeOut)\n\t{\n\t\tthis.sharedDiv = null;\n\t}\n\t\t\n\treturn result;\n};\n\n/**\n * Function: isActive\n * \n * Returns true if this handler is active.\n */\nmxRubberband.prototype.isActive = function(sender, me)\n{\n\treturn this.div != null && this.div.style.display != 'none';\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by selecting the region of the rubberband using\n * <mxGraph.selectRegion>.\n */\nmxRubberband.prototype.mouseUp = function(sender, me)\n{\n\tvar active = this.isActive();\n\tthis.reset();\n\t\n\tif (active)\n\t{\n\t\tthis.execute(me.getEvent());\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: execute\n * \n * Resets the state of this handler and selects the current region\n * for the given event.\n */\nmxRubberband.prototype.execute = function(evt)\n{\n\tvar rect = new mxRectangle(this.x, this.y, this.width, this.height);\n\tthis.graph.selectRegion(rect, evt);\n};\n\n/**\n * Function: reset\n * \n * Resets the state of the rubberband selection.\n */\nmxRubberband.prototype.reset = function()\n{\n\tif (this.div != null)\n\t{\n\t\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10) && this.fadeOut)\n\t\t{\n\t\t\tvar temp = this.div;\n\t\t\tmxUtils.setPrefixedStyle(temp.style, 'transition', 'all 0.2s linear');\n\t\t\ttemp.style.pointerEvents = 'none';\n\t\t\ttemp.style.opacity = 0;\n\t\t    \n\t\t    window.setTimeout(function()\n\t\t    \t{\n\t\t    \t\ttemp.parentNode.removeChild(temp);\n\t\t    \t}, 200);\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t}\n\n\tmxEvent.removeGestureListeners(document, null, this.dragHandler, this.dropHandler);\n\tthis.dragHandler = null;\n\tthis.dropHandler = null;\n\t\n\tthis.currentX = 0;\n\tthis.currentY = 0;\n\tthis.first = null;\n\tthis.div = null;\n};\n\n/**\n * Function: update\n * \n * Sets <currentX> and <currentY> and calls <repaint>.\n */\nmxRubberband.prototype.update = function(x, y)\n{\n\tthis.currentX = x;\n\tthis.currentY = y;\n\t\n\tthis.repaint();\n};\n\n/**\n * Function: repaint\n * \n * Computes the bounding box and updates the style of the <div>.\n */\nmxRubberband.prototype.repaint = function()\n{\n\tif (this.div != null)\n\t{\n\t\tvar x = this.currentX - this.graph.panDx;\n\t\tvar y = this.currentY - this.graph.panDy;\n\t\t\n\t\tthis.x = Math.min(this.first.x, x);\n\t\tthis.y = Math.min(this.first.y, y);\n\t\tthis.width = Math.max(this.first.x, x) - this.x;\n\t\tthis.height =  Math.max(this.first.y, y) - this.y;\n\n\t\tvar dx = (mxClient.IS_VML) ? this.graph.panDx : 0;\n\t\tvar dy = (mxClient.IS_VML) ? this.graph.panDy : 0;\n\t\t\n\t\tthis.div.style.left = (this.x + dx) + 'px';\n\t\tthis.div.style.top = (this.y + dy) + 'px';\n\t\tthis.div.style.width = Math.max(1, this.width) + 'px';\n\t\tthis.div.style.height = Math.max(1, this.height) + 'px';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This does\n * normally not need to be called, it is called automatically when the\n * window unloads.\n */\nmxRubberband.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\t\tthis.graph.removeMouseListener(this);\n\t\tthis.graph.removeListener(this.forceRubberbandHandler);\n\t\tthis.graph.removeListener(this.panHandler);\n\t\tthis.reset();\n\t\t\n\t\tif (this.sharedDiv != null)\n\t\t{\n\t\t\tthis.sharedDiv = null;\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHandle\n * \n * Implements a single custom handle for vertices.\n * \n * Constructor: mxHandle\n * \n * Constructs a new handle for the given state.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxHandle(state, cursor, image)\n{\n\tthis.graph = state.view.graph;\n\tthis.state = state;\n\tthis.cursor = (cursor != null) ? cursor : this.cursor;\n\tthis.image = (image != null) ? image : this.image;\n\tthis.init();\n};\n\n/**\n * Variable: cursor\n * \n * Specifies the cursor to be used for this handle. Default is 'default'.\n */\nmxHandle.prototype.cursor = 'default';\n\n/**\n * Variable: image\n * \n * Specifies the <mxImage> to be used to render the handle. Default is null.\n */\nmxHandle.prototype.image = null;\n\n/**\n * Variable: image\n * \n * Specifies the <mxImage> to be used to render the handle. Default is null.\n */\nmxHandle.prototype.ignoreGrid = false;\n\n/**\n * Function: getPosition\n * \n * Hook for subclassers to return the current position of the handle.\n */\nmxHandle.prototype.getPosition = function(bounds) { };\n\n/**\n * Function: setPosition\n * \n * Hooks for subclassers to update the style in the <state>.\n */\nmxHandle.prototype.setPosition = function(bounds, pt, me) { };\n\n/**\n * Function: execute\n * \n * Hook for subclassers to execute the handle.\n */\nmxHandle.prototype.execute = function() { };\n\n/**\n * Function: copyStyle\n * \n * Sets the cell style with the given name to the corresponding value in <state>.\n */\nmxHandle.prototype.copyStyle = function(key)\n{\n\tthis.graph.setCellStyles(key, this.state.style[key], [this.state.cell]);\n};\n\n/**\n * Function: processEvent\n * \n * Processes the given <mxMouseEvent> and invokes <setPosition>.\n */\nmxHandle.prototype.processEvent = function(me)\n{\n\tvar scale = this.graph.view.scale;\n\tvar tr = this.graph.view.translate;\n\tvar pt = new mxPoint(me.getGraphX() / scale - tr.x, me.getGraphY() / scale - tr.y);\n\t\n\t// Center shape on mouse cursor\n\tif (this.shape != null && this.shape.bounds != null)\n\t{\n\t\tpt.x -= this.shape.bounds.width / scale / 4;\n\t\tpt.y -= this.shape.bounds.height / scale / 4;\n\t}\n\n\t// Snaps to grid for the rotated position then applies the rotation for the direction after that\n\tvar alpha1 = -mxUtils.toRadians(this.getRotation());\n\tvar alpha2 = -mxUtils.toRadians(this.getTotalRotation()) - alpha1;\n\tpt = this.flipPoint(this.rotatePoint(this.snapPoint(this.rotatePoint(pt, alpha1),\n\t\t\tthis.ignoreGrid || !this.graph.isGridEnabledEvent(me.getEvent())), alpha2));\n\tthis.setPosition(this.state.getPaintBounds(), pt, me);\n\tthis.positionChanged();\n\tthis.redraw();\n};\n\n/**\n * Function: positionChanged\n * \n * Called after <setPosition> has been called in <processEvent>. This repaints\n * the state using <mxCellRenderer>.\n */\nmxHandle.prototype.positionChanged = function()\n{\n\tif (this.state.text != null)\n\t{\n\t\tthis.state.text.apply(this.state);\n\t}\n\t\n\tif (this.state.shape != null)\n\t{\n\t\tthis.state.shape.apply(this.state);\n\t}\n\t\n\tthis.graph.cellRenderer.redraw(this.state, true);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation defined in the style of the cell.\n */\nmxHandle.prototype.getRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: getTotalRotation\n * \n * Returns the rotation from the style and the rotation from the direction of\n * the cell.\n */\nmxHandle.prototype.getTotalRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getShapeRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: init\n * \n * Creates and initializes the shapes required for this handle.\n */\nmxHandle.prototype.init = function()\n{\n\tvar html = this.isHtmlRequired();\n\t\n\tif (this.image != null)\n\t{\n\t\tthis.shape = new mxImageShape(new mxRectangle(0, 0, this.image.width, this.image.height), this.image.src);\n\t\tthis.shape.preserveImageAspect = false;\n\t}\n\telse\n\t{\n\t\tthis.shape = this.createShape(html);\n\t}\n\t\n\tthis.initShape(html);\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the shape for this handle.\n */\nmxHandle.prototype.createShape = function(html)\n{\n\tvar bounds = new mxRectangle(0, 0, mxConstants.HANDLE_SIZE, mxConstants.HANDLE_SIZE);\n\t\n\treturn new mxRectangleShape(bounds, mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n};\n\n/**\n * Function: initShape\n * \n * Initializes <shape> and sets its cursor.\n */\nmxHandle.prototype.initShape = function(html)\n{\n\tif (html && this.shape.isHtmlAllowed())\n\t{\n\t\tthis.shape.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tthis.shape.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\n\t\tif (this.cursor != null)\n\t\t{\n\t\t\tthis.shape.init(this.graph.getView().getOverlayPane());\n\t\t}\n\t}\n\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\tthis.shape.node.style.cursor = this.cursor;\n};\n\n/**\n * Function: redraw\n * \n * Renders the shape for this handle.\n */\nmxHandle.prototype.redraw = function()\n{\n\tif (this.shape != null && this.state.shape != null)\n\t{\n\t\tvar pt = this.getPosition(this.state.getPaintBounds());\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tvar alpha = mxUtils.toRadians(this.getTotalRotation());\n\t\t\tpt = this.rotatePoint(this.flipPoint(pt), alpha);\n\t\n\t\t\tvar scale = this.graph.view.scale;\n\t\t\tvar tr = this.graph.view.translate;\n\t\t\tthis.shape.bounds.x = Math.floor((pt.x + tr.x) * scale - this.shape.bounds.width / 2);\n\t\t\tthis.shape.bounds.y = Math.floor((pt.y + tr.y) * scale - this.shape.bounds.height / 2);\n\t\t\t\n\t\t\t// Needed to force update of text bounds\n\t\t\tthis.shape.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHtmlRequired\n * \n * Returns true if this handle should be rendered in HTML. This returns true if\n * the text node is in the graph container.\n */\nmxHandle.prototype.isHtmlRequired = function()\n{\n\treturn this.state.text != null && this.state.text.node.parentNode == this.graph.container;\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the point by the given angle.\n */\nmxHandle.prototype.rotatePoint = function(pt, alpha)\n{\n\tvar bounds = this.state.getCellBounds();\n\tvar cx = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\tvar cos = Math.cos(alpha);\n\tvar sin = Math.sin(alpha); \n\n\treturn mxUtils.getRotatedPoint(pt, cos, sin, cx);\n};\n\n/**\n * Function: flipPoint\n * \n * Flips the given point vertically and/or horizontally.\n */\nmxHandle.prototype.flipPoint = function(pt)\n{\n\tif (this.state.shape != null)\n\t{\n\t\tvar bounds = this.state.getCellBounds();\n\t\t\n\t\tif (this.state.shape.flipH)\n\t\t{\n\t\t\tpt.x = 2 * bounds.x + bounds.width - pt.x;\n\t\t}\n\t\t\n\t\tif (this.state.shape.flipV)\n\t\t{\n\t\t\tpt.y = 2 * bounds.y + bounds.height - pt.y;\n\t\t}\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: snapPoint\n * \n * Snaps the given point to the grid if ignore is false. This modifies\n * the given point in-place and also returns it.\n */\nmxHandle.prototype.snapPoint = function(pt, ignore)\n{\n\tif (!ignore)\n\t{\n\t\tpt.x = this.graph.snap(pt.x);\n\t\tpt.y = this.graph.snap(pt.y);\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides this handle.\n */\nmxHandle.prototype.setVisible = function(visible)\n{\n\tif (this.shape != null && this.shape.node != null)\n\t{\n\t\tthis.shape.node.style.display = (visible) ? '' : 'none';\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handle by setting its visibility to true.\n */\nmxHandle.prototype.reset = function()\n{\n\tthis.setVisible(true);\n\tthis.state.style = this.graph.getCellStyle(this.state.cell);\n\tthis.positionChanged();\n};\n\n/**\n * Function: destroy\n * \n * Destroys this handle.\n */\nmxHandle.prototype.destroy = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxVertexHandler\n * \n * Event handler for resizing cells. This handler is automatically created in\n * <mxGraph.createHandler>.\n * \n * Constructor: mxVertexHandler\n * \n * Constructs an event handler that allows to resize vertices\n * and groups.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be resized.\n */\nfunction mxVertexHandler(state)\n{\n\tif (state != null)\n\t{\n\t\tthis.state = state;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tif (this.livePreview && this.index != null)\n\t\t\t{\n\t\t\t\t// Redraws the live preview\n\t\t\t\tthis.state.view.graph.cellRenderer.redraw(this.state, true);\n\t\t\t\t\n\t\t\t\t// Redraws connected edges\n\t\t\t\tthis.state.view.invalidate(this.state.cell);\n\t\t\t\tthis.state.invalid = false;\n\t\t\t\tthis.state.view.validate();\n\t\t\t}\n\t\t\t\n\t\t\tthis.reset();\n\t\t});\n\t\t\n\t\tthis.state.view.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxVertexHandler.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState> being modified.\n */\nmxVertexHandler.prototype.state = null;\n\n/**\n * Variable: singleSizer\n * \n * Specifies if only one sizer handle at the bottom, right corner should be\n * used. Default is false.\n */\nmxVertexHandler.prototype.singleSizer = false;\n\n/**\n * Variable: index\n * \n * Holds the index of the current handle.\n */\nmxVertexHandler.prototype.index = null;\n\n/**\n * Variable: allowHandleBoundsCheck\n * \n * Specifies if the bounds of handles should be used for hit-detection in IE or\n * if <tolerance> > 0. Default is true.\n */\nmxVertexHandler.prototype.allowHandleBoundsCheck = true;\n\n/**\n * Variable: handleImage\n * \n * Optional <mxImage> to be used as handles. Default is null.\n */\nmxVertexHandler.prototype.handleImage = null;\n\n/**\n * Variable: tolerance\n * \n * Optional tolerance for hit-detection in <getHandleForEvent>. Default is 0.\n */\nmxVertexHandler.prototype.tolerance = 0;\n\n/**\n * Variable: rotationEnabled\n * \n * Specifies if a rotation handle should be visible. Default is false.\n */\nmxVertexHandler.prototype.rotationEnabled = false;\n\n/**\n * Variable: parentHighlightEnabled\n * \n * Specifies if the parent should be highlighted if a child cell is selected.\n * Default is false.\n */\nmxVertexHandler.prototype.parentHighlightEnabled = false;\n\n/**\n * Variable: rotationRaster\n * \n * Specifies if rotation steps should be \"rasterized\" depening on the distance\n * to the handle. Default is true.\n */\nmxVertexHandler.prototype.rotationRaster = true;\n\n/**\n * Variable: rotationCursor\n * \n * Specifies the cursor for the rotation handle. Default is 'crosshair'.\n */\nmxVertexHandler.prototype.rotationCursor = 'crosshair';\n\n/**\n * Variable: livePreview\n * \n * Specifies if resize should change the cell in-place. This is an experimental\n * feature for non-touch devices. Default is false.\n */\nmxVertexHandler.prototype.livePreview = false;\n\n/**\n * Variable: manageSizers\n * \n * Specifies if sizers should be hidden and spaced if the vertex is small.\n * Default is false.\n */\nmxVertexHandler.prototype.manageSizers = false;\n\n/**\n * Variable: constrainGroupByChildren\n * \n * Specifies if the size of groups should be constrained by the children.\n * Default is false.\n */\nmxVertexHandler.prototype.constrainGroupByChildren = false;\n\n/**\n * Variable: rotationHandleVSpacing\n * \n * Vertical spacing for rotation icon. Default is -16.\n */\nmxVertexHandler.prototype.rotationHandleVSpacing = -16;\n\n/**\n * Variable: horizontalOffset\n * \n * The horizontal offset for the handles. This is updated in <redrawHandles>\n * if <manageSizers> is true and the sizers are offset horizontally.\n */\nmxVertexHandler.prototype.horizontalOffset = 0;\n\n/**\n * Variable: verticalOffset\n * \n * The horizontal offset for the handles. This is updated in <redrawHandles>\n * if <manageSizers> is true and the sizers are offset vertically.\n */\nmxVertexHandler.prototype.verticalOffset = 0;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxVertexHandler.prototype.init = function()\n{\n\tthis.graph = this.state.view.graph;\n\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y, this.selectionBounds.width, this.selectionBounds.height);\n\tthis.selectionBorder = this.createSelectionShape(this.bounds);\n\t// VML dialect required here for event transparency in IE\n\tthis.selectionBorder.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tthis.selectionBorder.pointerEvents = false;\n\tthis.selectionBorder.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\tthis.selectionBorder.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(this.selectionBorder.node, this.graph, this.state);\n\t\n\tif (this.graph.isCellMovable(this.state.cell))\n\t{\n\t\tthis.selectionBorder.setCursor(mxConstants.CURSOR_MOVABLE_VERTEX);\n\t}\n\n\t// Adds the sizer handles\n\tif (mxGraphHandler.prototype.maxCells <= 0 || this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells)\n\t{\n\t\tvar resizable = this.graph.isCellResizable(this.state.cell);\n\t\tthis.sizers = [];\n\n\t\tif (resizable || (this.graph.isLabelMovable(this.state.cell) &&\n\t\t\tthis.state.width >= 2 && this.state.height >= 2))\n\t\t{\n\t\t\tvar i = 0;\n\n\t\t\tif (resizable)\n\t\t\t{\n\t\t\t\tif (!this.singleSizer)\n\t\t\t\t{\n\t\t\t\t\tthis.sizers.push(this.createSizer('nw-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('n-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('ne-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('w-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('e-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('sw-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('s-resize', i++));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.sizers.push(this.createSizer('se-resize', i++));\n\t\t\t}\n\t\t\t\n\t\t\tvar geo = this.graph.model.getGeometry(this.state.cell);\n\t\t\t\n\t\t\tif (geo != null && !geo.relative && !this.graph.isSwimlane(this.state.cell) &&\n\t\t\t\tthis.graph.isLabelMovable(this.state.cell))\n\t\t\t{\n\t\t\t\t// Marks this as the label handle for getHandleForEvent\n\t\t\t\tthis.labelShape = this.createSizer(mxConstants.CURSOR_LABEL_HANDLE, mxEvent.LABEL_HANDLE, mxConstants.LABEL_HANDLE_SIZE, mxConstants.LABEL_HANDLE_FILLCOLOR);\n\t\t\t\tthis.sizers.push(this.labelShape);\n\t\t\t}\n\t\t}\n\t\telse if (this.graph.isCellMovable(this.state.cell) && !this.graph.isCellResizable(this.state.cell) &&\n\t\t\tthis.state.width < 2 && this.state.height < 2)\n\t\t{\n\t\t\tthis.labelShape = this.createSizer(mxConstants.CURSOR_MOVABLE_VERTEX,\n\t\t\t\tmxEvent.LABEL_HANDLE, null, mxConstants.LABEL_HANDLE_FILLCOLOR);\n\t\t\tthis.sizers.push(this.labelShape);\n\t\t}\n\t}\n\t\n\t// Adds the rotation handler\n\tif (this.isRotationHandleVisible())\n\t{\n\t\tthis.rotationShape = this.createSizer(this.rotationCursor, mxEvent.ROTATION_HANDLE,\n\t\t\tmxConstants.HANDLE_SIZE + 3, mxConstants.HANDLE_FILLCOLOR);\n\t\tthis.sizers.push(this.rotationShape);\n\t}\n\n\tthis.customHandles = this.createCustomHandles();\n\tthis.redraw();\n\t\n\tif (this.constrainGroupByChildren)\n\t{\n\t\tthis.updateMinBounds();\n\t}\n};\n\n/**\n * Function: isRotationHandleVisible\n * \n * Returns true if the rotation handle should be showing.\n */\nmxVertexHandler.prototype.isRotationHandleVisible = function()\n{\n\treturn this.graph.isEnabled() && this.rotationEnabled && this.graph.isCellRotatable(this.state.cell) &&\n\t\t(mxGraphHandler.prototype.maxCells <= 0 || this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells) &&\n\t\tthis.state.width >= 2 && this.state.height >= 2;\n};\n\n/**\n * Function: isConstrainedEvent\n * \n * Returns true if the aspect ratio if the cell should be maintained.\n */\nmxVertexHandler.prototype.isConstrainedEvent = function(me)\n{\n\treturn mxEvent.isShiftDown(me.getEvent()) || this.state.style[mxConstants.STYLE_ASPECT] == 'fixed';\n};\n\n/**\n * Function: isCenteredEvent\n * \n * Returns true if the center of the vertex should be maintained during the resize.\n */\nmxVertexHandler.prototype.isCenteredEvent = function(state, me)\n{\n\treturn false;\n};\n\n/**\n * Function: createCustomHandles\n * \n * Returns an array of custom handles. This implementation returns null.\n */\nmxVertexHandler.prototype.createCustomHandles = function()\n{\n\treturn null;\n};\n\n/**\n * Function: updateMinBounds\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxVertexHandler.prototype.updateMinBounds = function()\n{\n\tvar children = this.graph.getChildCells(this.state.cell);\n\t\n\tif (children.length > 0)\n\t{\n\t\tthis.minBounds = this.graph.view.getBounds(children);\n\t\t\n\t\tif (this.minBounds != null)\n\t\t{\n\t\t\tvar s = this.state.view.scale;\n\t\t\tvar t = this.state.view.translate;\n\n\t\t\tthis.minBounds.x -= this.state.x;\n\t\t\tthis.minBounds.y -= this.state.y;\n\t\t\tthis.minBounds.x /= s;\n\t\t\tthis.minBounds.y /= s;\n\t\t\tthis.minBounds.width /= s;\n\t\t\tthis.minBounds.height /= s;\n\t\t\tthis.x0 = this.state.x / s - t.x;\n\t\t\tthis.y0 = this.state.y / s - t.y;\n\t\t}\n\t}\n};\n\n/**\n * Function: getSelectionBounds\n * \n * Returns the mxRectangle that defines the bounds of the selection\n * border.\n */\nmxVertexHandler.prototype.getSelectionBounds = function(state)\n{\n\treturn new mxRectangle(Math.round(state.x), Math.round(state.y), Math.round(state.width), Math.round(state.height));\n};\n\n/**\n * Function: createParentHighlightShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxVertexHandler.prototype.createParentHighlightShape = function(bounds)\n{\n\treturn this.createSelectionShape(bounds);\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxVertexHandler.prototype.createSelectionShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.getSelectionColor());\n\tshape.strokewidth = this.getSelectionStrokeWidth();\n\tshape.isDashed = this.isSelectionDashed();\n\t\n\treturn shape;\n};\n\n/**\n * Function: getSelectionColor\n * \n * Returns <mxConstants.VERTEX_SELECTION_COLOR>.\n */\nmxVertexHandler.prototype.getSelectionColor = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_COLOR;\n};\n\n/**\n * Function: getSelectionStrokeWidth\n * \n * Returns <mxConstants.VERTEX_SELECTION_STROKEWIDTH>.\n */\nmxVertexHandler.prototype.getSelectionStrokeWidth = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_STROKEWIDTH;\n};\n\n/**\n * Function: isSelectionDashed\n * \n * Returns <mxConstants.VERTEX_SELECTION_DASHED>.\n */\nmxVertexHandler.prototype.isSelectionDashed = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_DASHED;\n};\n\n/**\n * Function: createSizer\n * \n * Creates a sizer handle for the specified cursor and index and returns\n * the new <mxRectangleShape> that represents the handle.\n */\nmxVertexHandler.prototype.createSizer = function(cursor, index, size, fillColor)\n{\n\tsize = size || mxConstants.HANDLE_SIZE;\n\t\n\tvar bounds = new mxRectangle(0, 0, size, size);\n\tvar sizer = this.createSizerShape(bounds, index, fillColor);\n\n\tif (sizer.isHtmlAllowed() && this.state.text != null && this.state.text.node.parentNode == this.graph.container)\n\t{\n\t\tsizer.bounds.height -= 1;\n\t\tsizer.bounds.width -= 1;\n\t\tsizer.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tsizer.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tsizer.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\tsizer.init(this.graph.getView().getOverlayPane());\n\t}\n\n\tmxEvent.redirectMouseEvents(sizer.node, this.graph, this.state);\n\t\n\tif (this.graph.isEnabled())\n\t{\n\t\tsizer.setCursor(cursor);\n\t}\n\t\n\tif (!this.isSizerVisible(index))\n\t{\n\t\tsizer.visible = false;\n\t}\n\t\n\treturn sizer;\n};\n\n/**\n * Function: isSizerVisible\n * \n * Returns true if the sizer for the given index is visible.\n * This returns true for all given indices.\n */\nmxVertexHandler.prototype.isSizerVisible = function(index)\n{\n\treturn true;\n};\n\n/**\n * Function: createSizerShape\n * \n * Creates the shape used for the sizer handle for the specified bounds an\n * index. Only images and rectangles should be returned if support for HTML\n * labels with not foreign objects is required.\n */\nmxVertexHandler.prototype.createSizerShape = function(bounds, index, fillColor)\n{\n\tif (this.handleImage != null)\n\t{\n\t\tbounds = new mxRectangle(bounds.x, bounds.y, this.handleImage.width, this.handleImage.height);\n\t\tvar shape = new mxImageShape(bounds, this.handleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse if (index == mxEvent.ROTATION_HANDLE)\n\t{\n\t\treturn new mxEllipse(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n\telse\n\t{\n\t\treturn new mxRectangleShape(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: createBounds\n * \n * Helper method to create an <mxRectangle> around the given centerpoint\n * with a width and height of 2*s or 6, if no s is given.\n */\nmxVertexHandler.prototype.moveSizerTo = function(shape, x, y)\n{\n\tif (shape != null)\n\t{\n\t\tshape.bounds.x = Math.floor(x - shape.bounds.width / 2);\n\t\tshape.bounds.y = Math.floor(y - shape.bounds.height / 2);\n\t\t\n\t\t// Fixes visible inactive handles in VML\n\t\tif (shape.node != null && shape.node.style.display != 'none')\n\t\t{\n\t\t\tshape.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getHandleForEvent\n * \n * Returns the index of the handle for the given event. This returns the index\n * of the sizer from where the event originated or <mxEvent.LABEL_INDEX>.\n */\nmxVertexHandler.prototype.getHandleForEvent = function(me)\n{\n\t// Connection highlight may consume events before they reach sizer handle\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 1;\n\tvar hit = (this.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\t\n\tfunction checkShape(shape)\n\t{\n\t\treturn shape != null && (me.isSource(shape) || (hit != null && mxUtils.intersects(shape.bounds, hit) &&\n\t\t\tshape.node.style.display != 'none' && shape.node.style.visibility != 'hidden'));\n\t}\n\n\tif (this.customHandles != null && this.isCustomHandleEvent(me))\n\t{\n\t\t// Inverse loop order to match display order\n\t\tfor (var i = this.customHandles.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (checkShape(this.customHandles[i].shape))\n\t\t\t{\n\t\t\t\t// LATER: Return reference to active shape\n\t\t\t\treturn mxEvent.CUSTOM_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (checkShape(this.rotationShape))\n\t{\n\t\treturn mxEvent.ROTATION_HANDLE;\n\t}\n\telse if (checkShape(this.labelShape))\n\t{\n\t\treturn mxEvent.LABEL_HANDLE;\n\t}\n\t\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.sizers[i]))\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: isCustomHandleEvent\n * \n * Returns true if the given event allows custom handles to be changed. This\n * implementation returns true.\n */\nmxVertexHandler.prototype.isCustomHandleEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event if a handle has been clicked. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxVertexHandler.prototype.mouseDown = function(sender, me)\n{\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 0;\n\t\n\tif (!me.isConsumed() && this.graph.isEnabled() && (tol > 0 || me.getState() == this.state))\n\t{\n\t\tvar handle = this.getHandleForEvent(me);\n\n\t\tif (handle != null)\n\t\t{\n\t\t\tthis.start(me.getGraphX(), me.getGraphY(), handle);\n\t\t\tme.consume();\n\t\t}\n\t}\n};\n\n/**\n * Function: isLivePreviewBorder\n * \n * Called if <livePreview> is enabled to check if a border should be painted.\n * This implementation returns true if the shape is transparent.\n */\nmxVertexHandler.prototype.isLivePreviewBorder = function()\n{\n\treturn this.state.shape != null && this.state.shape.fill == null && this.state.shape.stroke == null;\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxVertexHandler.prototype.start = function(x, y, index)\n{\n\tthis.inTolerance = true;\n\tthis.childOffsetX = 0;\n\tthis.childOffsetY = 0;\n\tthis.index = index;\n\tthis.startX = x;\n\tthis.startY = y;\n\t\n\t// Saves reference to parent state\n\tvar model = this.state.view.graph.model;\n\tvar parent = model.getParent(this.state.cell);\n\t\n\tif (this.state.view.currentRoot != parent && (model.isVertex(parent) || model.isEdge(parent)))\n\t{\n\t\tthis.parentState = this.state.view.graph.view.getState(parent);\n\t}\n\t\n\t// Creates a preview that can be on top of any HTML label\n\tthis.selectionBorder.node.style.display = (index == mxEvent.ROTATION_HANDLE) ? 'inline' : 'none';\n\t\n\t// Creates the border that represents the new bounds\n\tif (!this.livePreview || this.isLivePreviewBorder())\n\t{\n\t\tthis.preview = this.createSelectionShape(this.bounds);\n\t\t\n\t\tif (!(mxClient.IS_SVG && Number(this.state.style[mxConstants.STYLE_ROTATION] || '0') != 0) &&\n\t\t\tthis.state.text != null && this.state.text.node.parentNode == this.graph.container)\n\t\t{\n\t\t\tthis.preview.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\t\tthis.preview.init(this.graph.container);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.preview.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\tthis.preview.init(this.graph.view.getOverlayPane());\n\t\t}\n\t}\n\t\n\t// Prepares the handles for live preview\n\tif (this.livePreview)\n\t{\n\t\tthis.hideSizers();\n\t\t\n\t\tif (index == mxEvent.ROTATION_HANDLE)\n\t\t{\n\t\t\tthis.rotationShape.node.style.display = '';\n\t\t}\n\t\telse if (index == mxEvent.LABEL_HANDLE)\n\t\t{\n\t\t\tthis.labelShape.node.style.display = '';\n\t\t}\n\t\telse if (this.sizers != null && this.sizers[index] != null)\n\t\t{\n\t\t\tthis.sizers[index].node.style.display = '';\n\t\t}\n\t\telse if (index <= mxEvent.CUSTOM_HANDLE && this.customHandles != null)\n\t\t{\n\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].setVisible(true);\n\t\t}\n\t\t\n\t\t// Gets the array of connected edge handlers for redrawing\n\t\tvar edges = this.graph.getEdges(this.state.cell);\n\t\tthis.edgeHandlers = [];\n\t\t\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar handler = this.graph.selectionCellsHandler.getHandler(edges[i]);\n\t\t\t\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tthis.edgeHandlers.push(handler);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: hideHandles\n * \n * Shortcut to <hideSizers>.\n */\nmxVertexHandler.prototype.setHandlesVisible = function(visible)\n{\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tthis.sizers[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].setVisible(visible);\n\t\t}\n\t}\n};\n\n/**\n * Function: hideSizers\n * \n * Hides all sizers except.\n * \n * Starts the handling of the mouse gesture.\n */\nmxVertexHandler.prototype.hideSizers = function()\n{\n\tthis.setHandlesVisible(false);\n};\n\n/**\n * Function: checkTolerance\n * \n * Checks if the coordinates for the given event are within the\n * <mxGraph.tolerance>. If the event is a mouse event then the tolerance is\n * ignored.\n */\nmxVertexHandler.prototype.checkTolerance = function(me)\n{\n\tif (this.inTolerance && this.startX != null && this.startY != null)\n\t{\n\t\tif (mxEvent.isMouseEvent(me.getEvent()) ||\n\t\t\tMath.abs(me.getGraphX() - this.startX) > this.graph.tolerance ||\n\t\t\tMath.abs(me.getGraphY() - this.startY) > this.graph.tolerance)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxVertexHandler.prototype.updateHint = function(me) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxVertexHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundAngle\n * \n * Hook for rounding the angle. This uses Math.round.\n */\nmxVertexHandler.prototype.roundAngle = function(angle)\n{\n\treturn Math.round(angle * 10) / 10;\n};\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled width or height. This uses Math.round.\n */\nmxVertexHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length);\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview.\n */\nmxVertexHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && this.index != null)\n\t{\n\t\t// Checks tolerance for ignoring single clicks\n\t\tthis.checkTolerance(me);\n\n\t\tif (!this.inTolerance)\n\t\t{\n\t\t\tif (this.index <= mxEvent.CUSTOM_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].processEvent(me);\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].active = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.index == mxEvent.LABEL_HANDLE)\n\t\t\t{\n\t\t\t\tthis.moveLabel(me);\n\t\t\t}\n\t\t\telse if (this.index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\tthis.rotateVertex(me);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.resizeVertex(me);\n\t\t\t}\n\n\t\t\tthis.updateHint(me);\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n\t// Workaround for disabling the connect highlight when over handle\n\telse if (!this.graph.isMouseDown && this.getHandleForEvent(me) != null)\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.moveLabel = function(me)\n{\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar tr = this.graph.view.translate;\n\tvar scale = this.graph.view.scale;\n\t\n\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tpoint.x = (this.graph.snap(point.x / scale - tr.x) + tr.x) * scale;\n\t\tpoint.y = (this.graph.snap(point.y / scale - tr.y) + tr.y) * scale;\n\t}\n\n\tvar index = (this.rotationShape != null) ? this.sizers.length - 2 : this.sizers.length - 1;\n\tthis.moveSizerTo(this.sizers[index], point.x, point.y);\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.rotateVertex = function(me)\n{\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar dx = this.state.x + this.state.width / 2 - point.x;\n\tvar dy = this.state.y + this.state.height / 2 - point.y;\n\tthis.currentAlpha = (dx != 0) ? Math.atan(dy / dx) * 180 / Math.PI + 90 : ((dy < 0) ? 180 : 0);\n\t\n\tif (dx > 0)\n\t{\n\t\tthis.currentAlpha -= 180;\n\t}\n\n\t// Rotation raster\n\tif (this.rotationRaster && this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tvar dx = point.x - this.state.getCenterX();\n\t\tvar dy = point.y - this.state.getCenterY();\n\t\tvar dist = Math.abs(Math.sqrt(dx * dx + dy * dy) - 20) * 3;\n\t\tvar raster = Math.max(1, 5 * Math.min(3, Math.max(0, Math.round(80 / Math.abs(dist)))));\n\t\t\n\t\tthis.currentAlpha = Math.round(this.currentAlpha / raster) * raster;\n\t}\n\telse\n\t{\n\t\tthis.currentAlpha = this.roundAngle(this.currentAlpha);\n\t}\n\n\tthis.selectionBorder.rotation = this.currentAlpha;\n\tthis.selectionBorder.redraw();\n\t\t\t\t\t\n\tif (this.livePreview)\n\t{\n\t\tthis.redrawHandles();\n\t}\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.resizeVertex = function(me)\n{\n\tvar ct = new mxPoint(this.state.getCenterX(), this.state.getCenterY());\n\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar tr = this.graph.view.translate;\n\tvar scale = this.graph.view.scale;\n\tvar cos = Math.cos(-alpha);\n\tvar sin = Math.sin(-alpha);\n\t\n\tvar dx = point.x - this.startX;\n\tvar dy = point.y - this.startY;\n\n\t// Rotates vector for mouse gesture\n\tvar tx = cos * dx - sin * dy;\n\tvar ty = sin * dx + cos * dy;\n\t\n\tdx = tx;\n\tdy = ty;\n\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\tthis.unscaledBounds = this.union(geo, dx / scale, dy / scale, this.index,\n\t\tthis.graph.isGridEnabledEvent(me.getEvent()), 1,\n\t\tnew mxPoint(0, 0), this.isConstrainedEvent(me),\n\t\tthis.isCenteredEvent(this.state, me));\n\t\n\t// Keeps vertex within maximum graph or parent bounds\n\tif (!geo.relative)\n\t{\n\t\tvar max = this.graph.getMaximumGraphBounds();\n\t\t\n\t\t// Handles child cells\n\t\tif (max != null && this.parentState != null)\n\t\t{\n\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\n\t\t\tmax.x -= (this.parentState.x - tr.x * scale) / scale;\n\t\t\tmax.y -= (this.parentState.y - tr.y * scale) / scale;\n\t\t}\n\t\t\n\t\tif (this.graph.isConstrainChild(this.state.cell))\n\t\t{\n\t\t\tvar tmp = this.graph.getCellContainmentArea(this.state.cell);\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tvar overlap = this.graph.getOverlap(this.state.cell);\n\t\t\t\t\n\t\t\t\tif (overlap > 0)\n\t\t\t\t{\n\t\t\t\t\ttmp = mxRectangle.fromRectangle(tmp);\n\t\t\t\t\t\n\t\t\t\t\ttmp.x -= tmp.width * overlap;\n\t\t\t\t\ttmp.y -= tmp.height * overlap;\n\t\t\t\t\ttmp.width += 2 * tmp.width * overlap;\n\t\t\t\t\ttmp.height += 2 * tmp.height * overlap;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (max == null)\n\t\t\t\t{\n\t\t\t\t\tmax = tmp;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\tmax.intersect(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif (max != null)\n\t\t{\n\t\t\tif (this.unscaledBounds.x < max.x)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.width -= max.x - this.unscaledBounds.x;\n\t\t\t\tthis.unscaledBounds.x = max.x;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.y < max.y)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.height -= max.y - this.unscaledBounds.y;\n\t\t\t\tthis.unscaledBounds.y = max.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.x + this.unscaledBounds.width > max.x + max.width)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.width -= this.unscaledBounds.x +\n\t\t\t\t\tthis.unscaledBounds.width - max.x - max.width;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.y + this.unscaledBounds.height > max.y + max.height)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.height -= this.unscaledBounds.y +\n\t\t\t\t\tthis.unscaledBounds.height - max.y - max.height;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.bounds = new mxRectangle(((this.parentState != null) ? this.parentState.x : tr.x * scale) +\n\t\t(this.unscaledBounds.x) * scale, ((this.parentState != null) ? this.parentState.y : tr.y * scale) +\n\t\t(this.unscaledBounds.y) * scale, this.unscaledBounds.width * scale, this.unscaledBounds.height * scale);\n\n\tif (geo.relative && this.parentState != null)\n\t{\n\t\tthis.bounds.x += this.state.x - this.parentState.x;\n\t\tthis.bounds.y += this.state.y - this.parentState.y;\n\t}\n\n\tcos = Math.cos(alpha);\n\tsin = Math.sin(alpha);\n\t\n\tvar c2 = new mxPoint(this.bounds.getCenterX(), this.bounds.getCenterY());\n\n\tvar dx = c2.x - ct.x;\n\tvar dy = c2.y - ct.y;\n\t\n\tvar dx2 = cos * dx - sin * dy;\n\tvar dy2 = sin * dx + cos * dy;\n\t\n\tvar dx3 = dx2 - dx;\n\tvar dy3 = dy2 - dy;\n\t\n\tvar dx4 = this.bounds.x - this.state.x;\n\tvar dy4 = this.bounds.y - this.state.y;\n\t\n\tvar dx5 = cos * dx4 - sin * dy4;\n\tvar dy5 = sin * dx4 + cos * dy4;\n\t\n\tthis.bounds.x += dx3;\n\tthis.bounds.y += dy3;\n\t\n\t// Rounds unscaled bounds to int\n\tthis.unscaledBounds.x = this.roundLength(this.unscaledBounds.x + dx3 / scale);\n\tthis.unscaledBounds.y = this.roundLength(this.unscaledBounds.y + dy3 / scale);\n\tthis.unscaledBounds.width = this.roundLength(this.unscaledBounds.width);\n\tthis.unscaledBounds.height = this.roundLength(this.unscaledBounds.height);\n\t\n\t// Shifts the children according to parent offset\n\tif (!this.graph.isCellCollapsed(this.state.cell) && (dx3 != 0 || dy3 != 0))\n\t{\n\t\tthis.childOffsetX = this.state.x - this.bounds.x + dx5;\n\t\tthis.childOffsetY = this.state.y - this.bounds.y + dy5;\n\t}\n\telse\n\t{\n\t\tthis.childOffsetX = 0;\n\t\tthis.childOffsetY = 0;\n\t}\n\t\n\tif (this.livePreview)\n\t{\n\t\tthis.updateLivePreview(me);\n\t}\n\t\n\tif (this.preview != null)\n\t{\n\t\tthis.drawPreview();\n\t}\n};\n\n/**\n * Function: updateLivePreview\n * \n * Repaints the live preview.\n */\nmxVertexHandler.prototype.updateLivePreview = function(me)\n{\n\t// TODO: Apply child offset to children in live preview\n\tvar scale = this.graph.view.scale;\n\tvar tr = this.graph.view.translate;\n\t\n\t// Saves current state\n\tvar tempState = this.state.clone();\n\n\t// Temporarily changes size and origin\n\tthis.state.x = this.bounds.x;\n\tthis.state.y = this.bounds.y;\n\tthis.state.origin = new mxPoint(this.state.x / scale - tr.x, this.state.y / scale - tr.y);\n\tthis.state.width = this.bounds.width;\n\tthis.state.height = this.bounds.height;\n\t\n\t// Needed to force update of text bounds\n\tthis.state.unscaledWidth = null;\n\t\n\t// Redraws cell and handles\n\tvar off = this.state.absoluteOffset;\n\toff = new mxPoint(off.x, off.y);\n\n\t// Required to store and reset absolute offset for updating label position\n\tthis.state.absoluteOffset.x = 0;\n\tthis.state.absoluteOffset.y = 0;\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\t\t\t\t\n\n\tif (geo != null)\n\t{\n\t\tvar offset = geo.offset || this.EMPTY_POINT;\n\n\t\tif (offset != null && !geo.relative)\n\t\t{\n\t\t\tthis.state.absoluteOffset.x = this.state.view.scale * offset.x;\n\t\t\tthis.state.absoluteOffset.y = this.state.view.scale * offset.y;\n\t\t}\n\t\t\n\t\tthis.state.view.updateVertexLabelOffset(this.state);\n\t}\n\t\n\t// Draws the live preview\n\tthis.state.view.graph.cellRenderer.redraw(this.state, true);\n\t\n\t// Redraws connected edges TODO: Include child edges\n\tthis.state.view.invalidate(this.state.cell);\n\tthis.state.invalid = false;\n\tthis.state.view.validate();\n\tthis.redrawHandles();\n\t\n\t// Restores current state\n\tthis.state.setState(tempState);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the changes to the geometry.\n */\nmxVertexHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.index != null && this.state != null)\n\t{\n\t\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\n\t\tthis.graph.getModel().beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (this.index <= mxEvent.CUSTOM_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].active = false;\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].execute();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.currentAlpha != null)\n\t\t\t\t{\n\t\t\t\t\tvar delta = this.currentAlpha - (this.state.style[mxConstants.STYLE_ROTATION] || 0);\n\t\t\t\t\t\n\t\t\t\t\tif (delta != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.rotateCell(this.state.cell, delta);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.rotateClick();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar gridEnabled = this.graph.isGridEnabledEvent(me.getEvent());\n\t\t\t\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\t\n\t\t\t\tvar dx = point.x - this.startX;\n\t\t\t\tvar dy = point.y - this.startY;\n\t\t\t\t\n\t\t\t\t// Rotates vector for mouse gesture\n\t\t\t\tvar tx = cos * dx - sin * dy;\n\t\t\t\tvar ty = sin * dx + cos * dy;\n\t\t\t\t\n\t\t\t\tdx = tx;\n\t\t\t\tdy = ty;\n\t\t\t\t\n\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\tvar recurse = this.isRecursiveResize(this.state, me);\n\t\t\t\tthis.resizeCell(this.state.cell, this.roundLength(dx / s), this.roundLength(dy / s),\n\t\t\t\t\tthis.index, gridEnabled, this.isConstrainedEvent(me), recurse);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.graph.getModel().endUpdate();\n\t\t}\n\n\t\tme.consume();\n\t\tthis.reset();\n\t}\n};\n\n/**\n * Function: rotateCell\n * \n * Rotates the given cell to the given rotation.\n */\nmxVertexHandler.prototype.isRecursiveResize = function(state, me)\n{\n\treturn this.graph.isRecursiveResize(this.state);\n};\n\n/**\n * Function: rotateClick\n * \n * Hook for subclassers to implement a single click on the rotation handle.\n * This code is executed as part of the model transaction. This implementation\n * is empty.\n */\nmxVertexHandler.prototype.rotateClick = function() { };\n\n/**\n * Function: rotateCell\n * \n * Rotates the given cell and its children by the given angle in degrees.\n * \n * Parameters:\n * \n * cell - <mxCell> to be rotated.\n * angle - Angle in degrees.\n */\nmxVertexHandler.prototype.rotateCell = function(cell, angle, parent)\n{\n\tif (angle != 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\n\t\tif (model.isVertex(cell) || model.isEdge(cell))\n\t\t{\n\t\t\tif (!model.isEdge(cell))\n\t\t\t{\n\t\t\t\tvar state = this.graph.view.getState(cell);\n\t\t\t\tvar style = (state != null) ? state.style : this.graph.getCellStyle(cell);\n\t\t\n\t\t\t\tif (style != null)\n\t\t\t\t{\n\t\t\t\t\tvar total = (style[mxConstants.STYLE_ROTATION] || 0) + angle;\n\t\t\t\t\tthis.graph.setCellStyles(mxConstants.STYLE_ROTATION, total, [cell]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar geo = this.graph.getCellGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar pgeo = this.graph.getCellGeometry(parent);\n\t\t\t\t\n\t\t\t\tif (pgeo != null && !model.isEdge(parent))\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\tgeo.rotate(angle, new mxPoint(pgeo.width / 2, pgeo.height / 2));\n\t\t\t\t\tmodel.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((model.isVertex(cell) && !geo.relative) || model.isEdge(cell))\n\t\t\t\t{\n\t\t\t\t\t// Recursive rotation\n\t\t\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.rotateCell(model.getChildAt(cell, i), angle, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxVertexHandler.prototype.reset = function()\n{\n\tif (this.sizers != null && this.index != null && this.sizers[this.index] != null &&\n\t\tthis.sizers[this.index].node.style.display == 'none')\n\t{\n\t\tthis.sizers[this.index].node.style.display = '';\n\t}\n\n\tthis.currentAlpha = null;\n\tthis.inTolerance = null;\n\tthis.index = null;\n\n\t// TODO: Reset and redraw cell states for live preview\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.destroy();\n\t\tthis.preview = null;\n\t}\n\n\tif (this.livePreview && this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (this.sizers[i] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[i].node.style.display = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tif (this.customHandles[i].active)\n\t\t\t{\n\t\t\t\tthis.customHandles[i].active = false;\n\t\t\t\tthis.customHandles[i].reset();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.customHandles[i].setVisible(true);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Checks if handler has been destroyed\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.node.style.display = 'inline';\n\t\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\t\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y,\n\t\t\tthis.selectionBounds.width, this.selectionBounds.height);\n\t\tthis.drawPreview();\n\t}\n\n\tthis.removeHint();\n\tthis.redrawHandles();\n\tthis.edgeHandlers = null;\n\tthis.unscaledBounds = null;\n};\n\n/**\n * Function: resizeCell\n * \n * Uses the given vector to change the bounds of the given cell\n * in the graph using <mxGraph.resizeCell>.\n */\nmxVertexHandler.prototype.resizeCell = function(cell, dx, dy, index, gridEnabled, constrained, recurse)\n{\n\tvar geo = this.graph.model.getGeometry(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tif (index == mxEvent.LABEL_HANDLE)\n\t\t{\n\t\t\tvar scale = this.graph.view.scale;\n\t\t\tdx = Math.round((this.labelShape.bounds.getCenterX() - this.startX) / scale);\n\t\t\tdy = Math.round((this.labelShape.bounds.getCenterY() - this.startY) / scale);\n\t\t\t\n\t\t\tgeo = geo.clone();\n\t\t\t\n\t\t\tif (geo.offset == null)\n\t\t\t{\n\t\t\t\tgeo.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeo.offset.x += dx;\n\t\t\t\tgeo.offset.y += dy;\n\t\t\t}\n\t\t\t\n\t\t\tthis.graph.model.setGeometry(cell, geo);\n\t\t}\n\t\telse if (this.unscaledBounds != null)\n\t\t{\n\t\t\tvar scale = this.graph.view.scale;\n\n\t\t\tif (this.childOffsetX != 0 || this.childOffsetY != 0)\n\t\t\t{\n\t\t\t\tthis.moveChildren(cell, Math.round(this.childOffsetX / scale), Math.round(this.childOffsetY / scale));\n\t\t\t}\n\n\t\t\tthis.graph.resizeCell(cell, this.unscaledBounds, recurse);\n\t\t}\n\t}\n};\n\n/**\n * Function: moveChildren\n * \n * Moves the children of the given cell by the given vector.\n */\nmxVertexHandler.prototype.moveChildren = function(cell, dx, dy)\n{\n\tvar model = this.graph.getModel();\n\tvar childCount = model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\t\tvar geo = this.graph.getCellGeometry(child);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.translate(dx, dy);\n\t\t\tmodel.setGeometry(child, geo);\n\t\t}\n\t}\n};\n/**\n * Function: union\n * \n * Returns the union of the given bounds and location for the specified\n * handle index.\n * \n * To override this to limit the size of vertex via a minWidth/-Height style,\n * the following code can be used.\n * \n * (code)\n * var vertexHandlerUnion = mxVertexHandler.prototype.union;\n * mxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained)\n * {\n *   var result = vertexHandlerUnion.apply(this, arguments);\n *   \n *   result.width = Math.max(result.width, mxUtils.getNumber(this.state.style, 'minWidth', 0));\n *   result.height = Math.max(result.height, mxUtils.getNumber(this.state.style, 'minHeight', 0));\n *   \n *   return result;\n * };\n * (end)\n * \n * The minWidth/-Height style can then be used as follows:\n * \n * (code)\n * graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30, 'minWidth=100;minHeight=100;');\n * (end)\n * \n * To override this to update the height for a wrapped text if the width of a vertex is\n * changed, the following can be used.\n * \n * (code)\n * var mxVertexHandlerUnion = mxVertexHandler.prototype.union;\n * mxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained)\n * {\n *   var result = mxVertexHandlerUnion.apply(this, arguments);\n *   var s = this.state;\n *   \n *   if (this.graph.isHtmlLabel(s.cell) && (index == 3 || index == 4) &&\n *       s.text != null && s.style[mxConstants.STYLE_WHITE_SPACE] == 'wrap')\n *   {\n *     var label = this.graph.getLabel(s.cell);\n *     var fontSize = mxUtils.getNumber(s.style, mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE);\n *     var ww = result.width / s.view.scale - s.text.spacingRight - s.text.spacingLeft\n *     \n *     result.height = mxUtils.getSizeForString(label, fontSize, s.style[mxConstants.STYLE_FONTFAMILY], ww).height;\n *   }\n *   \n *   return result;\n * };\n * (end)\n */\nmxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained, centered)\n{\n\tif (this.singleSizer)\n\t{\n\t\tvar x = bounds.x + bounds.width + dx;\n\t\tvar y = bounds.y + bounds.height + dy;\n\t\t\n\t\tif (gridEnabled)\n\t\t{\n\t\t\tx = this.graph.snap(x / scale) * scale;\n\t\t\ty = this.graph.snap(y / scale) * scale;\n\t\t}\n\t\t\n\t\tvar rect = new mxRectangle(bounds.x, bounds.y, 0, 0);\n\t\trect.add(new mxRectangle(x, y, 0, 0));\n\t\t\n\t\treturn rect;\n\t}\n\telse\n\t{\n\t\tvar w0 = bounds.width;\n\t\tvar h0 = bounds.height;\n\t\tvar left = bounds.x - tr.x * scale;\n\t\tvar right = left + w0;\n\t\tvar top = bounds.y - tr.y * scale;\n\t\tvar bottom = top + h0;\n\t\t\n\t\tvar cx = left + w0 / 2;\n\t\tvar cy = top + h0 / 2;\n\t\t\n\t\tif (index > 4 /* Bottom Row */)\n\t\t{\n\t\t\tbottom = bottom + dy;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tbottom = this.graph.snap(bottom / scale) * scale;\n\t\t\t}\n\t\t}\n\t\telse if (index < 3 /* Top Row */)\n\t\t{\n\t\t\ttop = top + dy;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\ttop = this.graph.snap(top / scale) * scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (index == 0 || index == 3 || index == 5 /* Left */)\n\t\t{\n\t\t\tleft += dx;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tleft = this.graph.snap(left / scale) * scale;\n\t\t\t}\n\t\t}\n\t\telse if (index == 2 || index == 4 || index == 7 /* Right */)\n\t\t{\n\t\t\tright += dx;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tright = this.graph.snap(right / scale) * scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar width = right - left;\n\t\tvar height = bottom - top;\n\n\t\tif (constrained)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar aspect = geo.width / geo.height;\n\t\t\t\t\n\t\t\t\tif (index== 1 || index== 2 || index == 7 || index == 6)\n\t\t\t\t{\n\t\t\t\t\twidth = height * aspect;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\theight = width / aspect;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (index == 0)\n\t\t\t\t{\n\t\t\t\t\tleft = right - width;\n\t\t\t\t\ttop = bottom - height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (centered)\n\t\t{\n\t\t\twidth += (width - w0);\n\t\t\theight += (height - h0);\n\t\t\t\n\t\t\tvar cdx = cx - (left + width / 2);\n\t\t\tvar cdy = cy - (top + height / 2);\n\n\t\t\tleft += cdx;\n\t\t\ttop += cdy;\n\t\t\tright += cdx;\n\t\t\tbottom += cdy;\n\t\t}\n\n\t\t// Flips over left side\n\t\tif (width < 0)\n\t\t{\n\t\t\tleft += width;\n\t\t\twidth = Math.abs(width);\n\t\t}\n\t\t\n\t\t// Flips over top side\n\t\tif (height < 0)\n\t\t{\n\t\t\ttop += height;\n\t\t\theight = Math.abs(height);\n\t\t}\n\n\t\tvar result = new mxRectangle(left + tr.x * scale, top + tr.y * scale, width, height);\n\t\t\n\t\tif (this.minBounds != null)\n\t\t{\n\t\t\tresult.width = Math.max(result.width, this.minBounds.x * scale + this.minBounds.width * scale +\n\t\t\t\tMath.max(0, this.x0 * scale - result.x));\n\t\t\tresult.height = Math.max(result.height, this.minBounds.y * scale + this.minBounds.height * scale +\n\t\t\t\tMath.max(0, this.y0 * scale - result.y));\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Redraws the handles and the preview.\n */\nmxVertexHandler.prototype.redraw = function()\n{\n\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y, this.selectionBounds.width, this.selectionBounds.height);\n\t\n\tthis.redrawHandles();\n\tthis.drawPreview();\n};\n\n/**\n * Returns the padding to be used for drawing handles for the current <bounds>.\n */\nmxVertexHandler.prototype.getHandlePadding = function()\n{\n\t// KNOWN: Tolerance depends on event type (eg. 0 for mouse events)\n\tvar result = new mxPoint(0, 0);\n\tvar tol = this.tolerance;\n\n\tif (this.sizers != null && this.sizers.length > 0 && this.sizers[0] != null &&\n\t\t(this.bounds.width < 2 * this.sizers[0].bounds.width + 2 * tol ||\n\t\tthis.bounds.height < 2 * this.sizers[0].bounds.height + 2 * tol))\n\t{\n\t\ttol /= 2;\n\t\t\n\t\tresult.x = this.sizers[0].bounds.width + tol;\n\t\tresult.y = this.sizers[0].bounds.height + tol;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the handles. To hide certain handles the following code can be used.\n * \n * (code)\n * mxVertexHandler.prototype.redrawHandles = function()\n * {\n *   mxVertexHandlerRedrawHandles.apply(this, arguments);\n *   \n *   if (this.sizers != null && this.sizers.length > 7)\n *   {\n *     this.sizers[1].node.style.display = 'none';\n *     this.sizers[6].node.style.display = 'none';\n *   }\n * };\n * (end)\n */\nmxVertexHandler.prototype.redrawHandles = function()\n{\n\tvar tol = this.tolerance;\n\tthis.horizontalOffset = 0;\n\tthis.verticalOffset = 0;\n\tvar s = this.bounds;\n\n\tif (this.sizers != null && this.sizers.length > 0 && this.sizers[0] != null)\n\t{\n\t\tif (this.index == null && this.manageSizers && this.sizers.length >= 8)\n\t\t{\n\t\t\t// KNOWN: Tolerance depends on event type (eg. 0 for mouse events)\n\t\t\tvar padding = this.getHandlePadding();\n\t\t\tthis.horizontalOffset = padding.x;\n\t\t\tthis.verticalOffset = padding.y;\n\t\t\t\n\t\t\tif (this.horizontalOffset != 0 || this.verticalOffset != 0)\n\t\t\t{\n\t\t\t\ts = new mxRectangle(s.x, s.y, s.width, s.height);\n\n\t\t\t\ts.x -= this.horizontalOffset / 2;\n\t\t\t\ts.width += this.horizontalOffset;\n\t\t\t\ts.y -= this.verticalOffset / 2;\n\t\t\t\ts.height += this.verticalOffset;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.sizers.length >= 8)\n\t\t\t{\n\t\t\t\tif ((s.width < 2 * this.sizers[0].bounds.width + 2 * tol) ||\n\t\t\t\t\t(s.height < 2 * this.sizers[0].bounds.height + 2 * tol))\n\t\t\t\t{\n\t\t\t\t\tthis.sizers[0].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[2].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[5].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[7].node.style.display = 'none';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.sizers[0].node.style.display = '';\n\t\t\t\t\tthis.sizers[2].node.style.display = '';\n\t\t\t\t\tthis.sizers[5].node.style.display = '';\n\t\t\t\t\tthis.sizers[7].node.style.display = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar r = s.x + s.width;\n\t\tvar b = s.y + s.height;\n\t\t\n\t\tif (this.singleSizer)\n\t\t{\n\t\t\tthis.moveSizerTo(this.sizers[0], r, b);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar cx = s.x + s.width / 2;\n\t\t\tvar cy = s.y + s.height / 2;\n\t\t\t\n\t\t\tif (this.sizers.length >= 8)\n\t\t\t{\n\t\t\t\tvar crs = ['nw-resize', 'n-resize', 'ne-resize', 'e-resize', 'se-resize', 's-resize', 'sw-resize', 'w-resize'];\n\t\t\t\t\n\t\t\t\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tvar cos = Math.cos(alpha);\n\t\t\t\tvar sin = Math.sin(alpha);\n\t\t\t\t\n\t\t\t\tvar da = Math.round(alpha * 4 / Math.PI);\n\t\t\t\t\n\t\t\t\tvar ct = new mxPoint(s.getCenterX(), s.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(s.x, s.y), cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[0], pt.x, pt.y);\n\t\t\t\tthis.sizers[0].setCursor(crs[mxUtils.mod(0 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = cx;\n\t\t\t\tpt.y = s.y;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[1], pt.x, pt.y);\n\t\t\t\tthis.sizers[1].setCursor(crs[mxUtils.mod(1 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = s.y;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[2], pt.x, pt.y);\n\t\t\t\tthis.sizers[2].setCursor(crs[mxUtils.mod(2 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = s.x;\n\t\t\t\tpt.y = cy;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[3], pt.x, pt.y);\n\t\t\t\tthis.sizers[3].setCursor(crs[mxUtils.mod(7 + da, crs.length)]);\n\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = cy;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[4], pt.x, pt.y);\n\t\t\t\tthis.sizers[4].setCursor(crs[mxUtils.mod(3 + da, crs.length)]);\n\n\t\t\t\tpt.x = s.x;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[5], pt.x, pt.y);\n\t\t\t\tthis.sizers[5].setCursor(crs[mxUtils.mod(6 + da, crs.length)]);\n\n\t\t\t\tpt.x = cx;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[6], pt.x, pt.y);\n\t\t\t\tthis.sizers[6].setCursor(crs[mxUtils.mod(5 + da, crs.length)]);\n\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[7], pt.x, pt.y);\n\t\t\t\tthis.sizers[7].setCursor(crs[mxUtils.mod(4 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[8], cx + this.state.absoluteOffset.x, cy + this.state.absoluteOffset.y);\n\t\t\t}\n\t\t\telse if (this.state.width >= 2 && this.state.height >= 2)\n\t\t\t{\n\t\t\t\tthis.moveSizerTo(this.sizers[0], cx + this.state.absoluteOffset.x, cy + this.state.absoluteOffset.y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.moveSizerTo(this.sizers[0], this.state.x, this.state.y);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.rotationShape != null)\n\t{\n\t\tvar alpha = mxUtils.toRadians((this.currentAlpha != null) ? this.currentAlpha : this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\tvar cos = Math.cos(alpha);\n\t\tvar sin = Math.sin(alpha);\n\t\t\n\t\tvar ct = new mxPoint(this.state.getCenterX(), this.state.getCenterY());\n\t\tvar pt = mxUtils.getRotatedPoint(this.getRotationHandlePosition(), cos, sin, ct);\n\n\t\tif (this.rotationShape.node != null)\n\t\t{\n\t\t\tthis.moveSizerTo(this.rotationShape, pt.x, pt.y);\n\n\t\t\t// Hides rotation handle during text editing\n\t\t\tthis.rotationShape.node.style.visibility = (this.state.view.graph.isEditing()) ? 'hidden' : '';\n\t\t}\n\t}\n\t\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t}\n\t\n\tif (this.edgeHandlers != null)\n\t{\t\t\n\t\tfor (var i = 0; i < this.edgeHandlers.length; i++)\n\t\t{\n\t\t\tthis.edgeHandlers[i].redraw();\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tvar temp = this.customHandles[i].shape.node.style.display;\n\t\t\tthis.customHandles[i].redraw();\n\t\t\tthis.customHandles[i].shape.node.style.display = temp;\n\n\t\t\t// Hides custom handles during text editing\n\t\t\tthis.customHandles[i].shape.node.style.visibility = (this.graph.isEditing()) ? 'hidden' : '';\n\t\t}\n\t}\n\n\tthis.updateParentHighlight();\n};\n\n/**\n * Function: getRotationHandlePosition\n * \n * Returns an <mxPoint> that defines the rotation handle position.\n */\nmxVertexHandler.prototype.getRotationHandlePosition = function()\n{\n\treturn new mxPoint(this.bounds.x + this.bounds.width / 2, this.bounds.y + this.rotationHandleVSpacing)\n};\n\n/**\n * Function: updateParentHighlight\n * \n * Updates the highlight of the parent if <parentHighlightEnabled> is true.\n */\nmxVertexHandler.prototype.updateParentHighlight = function()\n{\n\t// If not destroyed\n\tif (this.selectionBorder != null)\n\t{\n\t\tif (this.parentHighlight != null)\n\t\t{\n\t\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\n\t\t\tif (this.graph.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\tvar b = this.parentHighlight.bounds;\n\t\t\t\t\n\t\t\t\tif (pstate != null && (b.x != pstate.x || b.y != pstate.y ||\n\t\t\t\t\tb.width != pstate.width || b.height != pstate.height))\n\t\t\t\t{\n\t\t\t\t\tthis.parentHighlight.bounds = pstate;\n\t\t\t\t\tthis.parentHighlight.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.parentHighlight.destroy();\n\t\t\t\tthis.parentHighlight = null;\n\t\t\t}\n\t\t}\n\t\telse if (this.parentHighlightEnabled)\n\t\t{\n\t\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\t\n\t\t\tif (this.graph.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\t\n\t\t\t\tif (pstate != null)\n\t\t\t\t{\n\t\t\t\t\tthis.parentHighlight = this.createParentHighlightShape(pstate);\n\t\t\t\t\t// VML dialect required here for event transparency in IE\n\t\t\t\t\tthis.parentHighlight.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.parentHighlight.pointerEvents = false;\n\t\t\t\t\tthis.parentHighlight.rotation = Number(pstate.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\t\tthis.parentHighlight.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview.\n */\nmxVertexHandler.prototype.drawPreview = function()\n{\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.bounds = this.bounds;\n\t\t\n\t\tif (this.preview.node.parentNode == this.graph.container)\n\t\t{\n\t\t\tthis.preview.bounds.width = Math.max(0, this.preview.bounds.width - 1);\n\t\t\tthis.preview.bounds.height = Math.max(0, this.preview.bounds.height - 1);\n\t\t}\n\t\n\t\tthis.preview.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\tthis.preview.redraw();\n\t}\n\t\n\tthis.selectionBorder.bounds = this.bounds;\n\tthis.selectionBorder.redraw();\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.redraw();\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxVertexHandler.prototype.destroy = function()\n{\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.state.view.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.destroy();\n\t\tthis.preview = null;\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.destroy();\n\t\tthis.parentHighlight = null;\n\t}\n\t\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.destroy();\n\t\tthis.selectionBorder = null;\n\t}\n\t\n\tthis.labelShape = null;\n\tthis.removeHint();\n\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tthis.sizers[i].destroy();\n\t\t}\n\t\t\n\t\tthis.sizers = null;\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].destroy();\n\t\t}\n\t\t\n\t\tthis.customHandles = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEdgeHandler\n *\n * Graph event handler that reconnects edges and modifies control points and\n * the edge label location. Uses <mxTerminalMarker> for finding and\n * highlighting new source and target vertices. This handler is automatically\n * created in <mxGraph.createHandler> for each selected edge.\n * \n * To enable adding/removing control points, the following code can be used:\n * \n * (code)\n * mxEdgeHandler.prototype.addEnabled = true;\n * mxEdgeHandler.prototype.removeEnabled = true;\n * (end)\n * \n * Note: This experimental feature is not recommended for production use.\n * \n * Constructor: mxEdgeHandler\n *\n * Constructs an edge handler for the specified <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxEdgeHandler(state)\n{\n\tif (state != null)\n\t{\n\t\tthis.state = state;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar dirty = this.index != null;\n\t\t\tthis.reset();\n\t\t\t\n\t\t\tif (dirty)\n\t\t\t{\n\t\t\t\tthis.graph.cellRenderer.redraw(this.state, false, state.view.isRendering());\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.state.view.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxEdgeHandler.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState> being modified.\n */\nmxEdgeHandler.prototype.state = null;\n\n/**\n * Variable: marker\n * \n * Holds the <mxTerminalMarker> which is used for highlighting terminals.\n */\nmxEdgeHandler.prototype.marker = null;\n\n/**\n * Variable: constraintHandler\n * \n * Holds the <mxConstraintHandler> used for drawing and highlighting\n * constraints.\n */\nmxEdgeHandler.prototype.constraintHandler = null;\n\n/**\n * Variable: error\n * \n * Holds the current validation error while a connection is being changed.\n */\nmxEdgeHandler.prototype.error = null;\n\n/**\n * Variable: shape\n * \n * Holds the <mxShape> that represents the preview edge.\n */\nmxEdgeHandler.prototype.shape = null;\n\n/**\n * Variable: bends\n * \n * Holds the <mxShapes> that represent the points.\n */\nmxEdgeHandler.prototype.bends = null;\n\n/**\n * Variable: labelShape\n * \n * Holds the <mxShape> that represents the label position.\n */\nmxEdgeHandler.prototype.labelShape = null;\n\n/**\n * Variable: cloneEnabled\n * \n * Specifies if cloning by control-drag is enabled. Default is true.\n */\nmxEdgeHandler.prototype.cloneEnabled = true;\n\n/**\n * Variable: addEnabled\n * \n * Specifies if adding bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.addEnabled = false;\n\n/**\n * Variable: removeEnabled\n * \n * Specifies if removing bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.removeEnabled = false;\n\n/**\n * Variable: dblClickRemoveEnabled\n * \n * Specifies if removing bends by double click is enabled. Default is false.\n */\nmxEdgeHandler.prototype.dblClickRemoveEnabled = false;\n\n/**\n * Variable: mergeRemoveEnabled\n * \n * Specifies if removing bends by dropping them on other bends is enabled.\n * Default is false.\n */\nmxEdgeHandler.prototype.mergeRemoveEnabled = false;\n\n/**\n * Variable: straightRemoveEnabled\n * \n * Specifies if removing bends by creating straight segments should be enabled.\n * If enabled, this can be overridden by holding down the alt key while moving.\n * Default is false.\n */\nmxEdgeHandler.prototype.straightRemoveEnabled = false;\n\n/**\n * Variable: virtualBendsEnabled\n * \n * Specifies if virtual bends should be added in the center of each\n * segments. These bends can then be used to add new waypoints.\n * Default is false.\n */\nmxEdgeHandler.prototype.virtualBendsEnabled = false;\n\n/**\n * Variable: virtualBendOpacity\n * \n * Opacity to be used for virtual bends (see <virtualBendsEnabled>).\n * Default is 20.\n */\nmxEdgeHandler.prototype.virtualBendOpacity = 20;\n\n/**\n * Variable: parentHighlightEnabled\n * \n * Specifies if the parent should be highlighted if a child cell is selected.\n * Default is false.\n */\nmxEdgeHandler.prototype.parentHighlightEnabled = false;\n\n/**\n * Variable: preferHtml\n * \n * Specifies if bends should be added to the graph container. This is updated\n * in <init> based on whether the edge or one of its terminals has an HTML\n * label in the container.\n */\nmxEdgeHandler.prototype.preferHtml = false;\n\n/**\n * Variable: allowHandleBoundsCheck\n * \n * Specifies if the bounds of handles should be used for hit-detection in IE\n * Default is true.\n */\nmxEdgeHandler.prototype.allowHandleBoundsCheck = true;\n\n/**\n * Variable: snapToTerminals\n * \n * Specifies if waypoints should snap to the routing centers of terminals.\n * Default is false.\n */\nmxEdgeHandler.prototype.snapToTerminals = false;\n\n/**\n * Variable: handleImage\n * \n * Optional <mxImage> to be used as handles. Default is null.\n */\nmxEdgeHandler.prototype.handleImage = null;\n\n/**\n * Variable: tolerance\n * \n * Optional tolerance for hit-detection in <getHandleForEvent>. Default is 0.\n */\nmxEdgeHandler.prototype.tolerance = 0;\n\n/**\n * Variable: outlineConnect\n * \n * Specifies if connections to the outline of a highlighted target should be\n * enabled. This will allow to place the connection point along the outline of\n * the highlighted target. Default is false.\n */\nmxEdgeHandler.prototype.outlineConnect = false;\n\n/**\n * Variable: manageLabelHandle\n * \n * Specifies if the label handle should be moved if it intersects with another\n * handle. Uses <checkLabelHandle> for checking and moving. Default is false.\n */\nmxEdgeHandler.prototype.manageLabelHandle = false;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this edge handler.\n */\nmxEdgeHandler.prototype.init = function()\n{\n\tthis.graph = this.state.view.graph;\n\tthis.marker = this.createMarker();\n\tthis.constraintHandler = new mxConstraintHandler(this.graph);\n\t\n\t// Clones the original points from the cell\n\t// and makes sure at least one point exists\n\tthis.points = [];\n\t\n\t// Uses the absolute points of the state\n\t// for the initial configuration and preview\n\tthis.abspoints = this.getSelectionPoints(this.state);\n\tthis.shape = this.createSelectionShape(this.abspoints);\n\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\tthis.shape.init(this.graph.getView().getOverlayPane());\n\tthis.shape.pointerEvents = false;\n\tthis.shape.setCursor(mxConstants.CURSOR_MOVABLE_EDGE);\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\n\t// Updates preferHtml\n\tthis.preferHtml = this.state.text != null &&\n\t\tthis.state.text.node.parentNode == this.graph.container;\n\t\n\tif (!this.preferHtml)\n\t{\n\t\t// Checks source terminal\n\t\tvar sourceState = this.state.getVisibleTerminalState(true);\n\t\t\n\t\tif (sourceState != null)\n\t\t{\n\t\t\tthis.preferHtml = sourceState.text != null &&\n\t\t\t\tsourceState.text.node.parentNode == this.graph.container;\n\t\t}\n\t\t\n\t\tif (!this.preferHtml)\n\t\t{\n\t\t\t// Checks target terminal\n\t\t\tvar targetState = this.state.getVisibleTerminalState(false);\n\t\t\t\n\t\t\tif (targetState != null)\n\t\t\t{\n\t\t\t\tthis.preferHtml = targetState.text != null &&\n\t\t\t\ttargetState.text.node.parentNode == this.graph.container;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Adds highlight for parent group\n\tif (this.parentHighlightEnabled)\n\t{\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\n\t\tif (this.graph.model.isVertex(parent))\n\t\t{\n\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\n\t\t\tif (pstate != null)\n\t\t\t{\n\t\t\t\tthis.parentHighlight = this.createParentHighlightShape(pstate);\n\t\t\t\t// VML dialect required here for event transparency in IE\n\t\t\t\tthis.parentHighlight.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\tthis.parentHighlight.pointerEvents = false;\n\t\t\t\tthis.parentHighlight.rotation = Number(pstate.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tthis.parentHighlight.init(this.graph.getView().getOverlayPane());\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Creates bends for the non-routed absolute points\n\t// or bends that don't correspond to points\n\tif (this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells ||\n\t\tmxGraphHandler.prototype.maxCells <= 0)\n\t{\n\t\tthis.bends = this.createBends();\n\n\t\tif (this.isVirtualBendsEnabled())\n\t\t{\n\t\t\tthis.virtualBends = this.createVirtualBends();\n\t\t}\n\t}\n\n\t// Adds a rectangular handle for the label position\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape = this.createLabelHandleShape();\n\tthis.initBend(this.labelShape);\n\tthis.labelShape.setCursor(mxConstants.CURSOR_LABEL_HANDLE);\n\t\n\tthis.customHandles = this.createCustomHandles();\n\t\n\tthis.redraw();\n};\n\n/**\n * Function: createCustomHandles\n * \n * Returns an array of custom handles. This implementation returns null.\n */\nmxEdgeHandler.prototype.createCustomHandles = function()\n{\n\treturn null;\n};\n\n/**\n * Function: isVirtualBendsEnabled\n * \n * Returns true if virtual bends should be added. This returns true if\n * <virtualBendsEnabled> is true and the current style allows and\n * renders custom waypoints.\n */\nmxEdgeHandler.prototype.isVirtualBendsEnabled = function(evt)\n{\n\treturn this.virtualBendsEnabled && (this.state.style[mxConstants.STYLE_EDGE] == null ||\n\t\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.NONE ||\n\t\t\tthis.state.style[mxConstants.STYLE_NOEDGESTYLE] == 1)  &&\n\t\t\tmxUtils.getValue(this.state.style, mxConstants.STYLE_SHAPE, null) != 'arrow';\n};\n\n/**\n * Function: isAddPointEvent\n * \n * Returns true if the given event is a trigger to add a new point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isAddPointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: isRemovePointEvent\n * \n * Returns true if the given event is a trigger to remove a point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isRemovePointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: getSelectionPoints\n * \n * Returns the list of points that defines the selection stroke.\n */\nmxEdgeHandler.prototype.getSelectionPoints = function(state)\n{\n\treturn state.absolutePoints;\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createParentHighlightShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.getSelectionColor());\n\tshape.strokewidth = this.getSelectionStrokeWidth();\n\tshape.isDashed = this.isSelectionDashed();\n\t\n\treturn shape;\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createSelectionShape = function(points)\n{\n\tvar shape = new this.state.shape.constructor();\n\tshape.outline = true;\n\tshape.apply(this.state);\n\t\n\tshape.isDashed = this.isSelectionDashed();\n\tshape.stroke = this.getSelectionColor();\n\tshape.isShadow = false;\n\t\n\treturn shape;\n};\n\n/**\n * Function: getSelectionColor\n * \n * Returns <mxConstants.EDGE_SELECTION_COLOR>.\n */\nmxEdgeHandler.prototype.getSelectionColor = function()\n{\n\treturn mxConstants.EDGE_SELECTION_COLOR;\n};\n\n/**\n * Function: getSelectionStrokeWidth\n * \n * Returns <mxConstants.EDGE_SELECTION_STROKEWIDTH>.\n */\nmxEdgeHandler.prototype.getSelectionStrokeWidth = function()\n{\n\treturn mxConstants.EDGE_SELECTION_STROKEWIDTH;\n};\n\n/**\n * Function: isSelectionDashed\n * \n * Returns <mxConstants.EDGE_SELECTION_DASHED>.\n */\nmxEdgeHandler.prototype.isSelectionDashed = function()\n{\n\treturn mxConstants.EDGE_SELECTION_DASHED;\n};\n\n/**\n * Function: isConnectableCell\n * \n * Returns true if the given cell is connectable. This is a hook to\n * disable floating connections. This implementation returns true.\n */\nmxEdgeHandler.prototype.isConnectableCell = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: getCellAt\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.getCellAt = function(x, y)\n{\n\treturn (!this.outlineConnect) ? this.graph.getCellAt(x, y) : null;\n};\n\n/**\n * Function: createMarker\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.createMarker = function()\n{\n\tvar marker = new mxCellMarker(this.graph);\n\tvar self = this; // closure\n\n\t// Only returns edges if they are connectable and never returns\n\t// the edge that is currently being modified\n\tmarker.getCell = function(me)\n\t{\n\t\tvar cell = mxCellMarker.prototype.getCell.apply(this, arguments);\n\n\t\t// Checks for cell at preview point (with grid)\n\t\tif ((cell == self.state.cell || cell == null) && self.currentPoint != null)\n\t\t{\n\t\t\tcell = self.graph.getCellAt(self.currentPoint.x, self.currentPoint.y);\n\t\t}\n\t\t\n\t\t// Uses connectable parent vertex if one exists\n\t\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\t\n\t\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t\t{\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar model = self.graph.getModel();\n\t\t\n\t\tif ((this.graph.isSwimlane(cell) && self.currentPoint != null &&\n\t\t\tthis.graph.hitsSwimlaneContent(cell, self.currentPoint.x, self.currentPoint.y)) ||\n\t\t\t(!self.isConnectableCell(cell)) || (cell == self.state.cell ||\n\t\t\t(cell != null && !self.graph.connectableEdges && model.isEdge(cell))) ||\n\t\t\tmodel.isAncestor(self.state.cell, cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\tif (!this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\treturn cell;\n\t};\n\n\t// Sets the highlight color according to validateConnection\n\tmarker.isValidState = function(state)\n\t{\n\t\tvar model = self.graph.getModel();\n\t\tvar other = self.graph.view.getTerminalPort(state,\n\t\t\tself.graph.view.getState(model.getTerminal(self.state.cell,\n\t\t\t!self.isSource)), !self.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (self.isSource) ? state.cell : otherCell;\n\t\tvar target = (self.isSource) ? otherCell : state.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tself.error = self.validateConnection(source, target);\n\n\t\treturn self.error == null;\n\t};\n\t\n\treturn marker;\n};\n\n/**\n * Function: validateConnection\n * \n * Returns the error message or an empty string if the connection for the\n * given source, target pair is not valid. Otherwise it returns null. This\n * implementation uses <mxGraph.getEdgeValidationError>.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxEdgeHandler.prototype.validateConnection = function(source, target)\n{\n\treturn this.graph.getEdgeValidationError(this.state.cell, source, target);\n};\n\n/**\n * Function: createBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar bends = [];\n\n\tfor (var i = 0; i < this.abspoints.length; i++)\n\t{\n\t\tif (this.isHandleVisible(i))\n\t\t{\n\t\t\tvar source = i == 0;\n\t\t\tvar target = i == this.abspoints.length - 1;\n\t\t\tvar terminal = source || target;\n\n\t\t\tif (terminal || this.graph.isCellBendable(cell))\n\t\t\t{\n\t\t\t\t(mxUtils.bind(this, function(index)\n\t\t\t\t{\n\t\t\t\t\tvar bend = this.createHandleShape(index);\n\t\t\t\t\tthis.initBend(bend, mxUtils.bind(this, mxUtils.bind(this, function()\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.dblClickRemoveEnabled)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.removePoint(this.state, index);\n\t\t\t\t\t\t}\n\t\t\t\t\t})));\n\t\n\t\t\t\t\tif (this.isHandleEnabled(i))\n\t\t\t\t\t{\n\t\t\t\t\t\tbend.setCursor((terminal) ? mxConstants.CURSOR_TERMINAL_HANDLE : mxConstants.CURSOR_BEND_HANDLE);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbends.push(bend);\n\t\t\t\t\n\t\t\t\t\tif (!terminal)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.points.push(new mxPoint(0,0));\n\t\t\t\t\t\tbend.node.style.visibility = 'hidden';\n\t\t\t\t\t}\n\t\t\t\t}))(i);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: createVirtualBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createVirtualBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar last = this.abspoints[0];\n\tvar bends = [];\n\n\tif (this.graph.isCellBendable(cell))\n\t{\n\t\tfor (var i = 1; i < this.abspoints.length; i++)\n\t\t{\n\t\t\t(mxUtils.bind(this, function(bend)\n\t\t\t{\n\t\t\t\tthis.initBend(bend);\n\t\t\t\tbend.setCursor(mxConstants.CURSOR_VIRTUAL_BEND_HANDLE);\n\t\t\t\tbends.push(bend);\n\t\t\t}))(this.createHandleShape());\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: isHandleEnabled\n * \n * Creates the shape used to display the given bend.\n */\nmxEdgeHandler.prototype.isHandleEnabled = function(index)\n{\n\treturn true;\n};\n\n/**\n * Function: isHandleVisible\n * \n * Returns true if the handle at the given index is visible.\n */\nmxEdgeHandler.prototype.isHandleVisible = function(index)\n{\n\tvar source = this.state.getVisibleTerminalState(true);\n\tvar target = this.state.getVisibleTerminalState(false);\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\tvar edgeStyle = (geo != null) ? this.graph.view.getEdgeStyle(this.state, geo.points, source, target) : null;\n\n\treturn edgeStyle != mxEdgeStyle.EntityRelation || index == 0 || index == this.abspoints.length - 1;\n};\n\n/**\n * Function: createHandleShape\n * \n * Creates the shape used to display the given bend. Note that the index may be\n * null for special cases, such as when called from\n * <mxElbowEdgeHandler.createVirtualBend>. Only images and rectangles should be\n * returned if support for HTML labels with not foreign objects is required.\n * Index if null for virtual handles.\n */\nmxEdgeHandler.prototype.createHandleShape = function(index)\n{\n\tif (this.handleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.handleImage.width, this.handleImage.height), this.handleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.HANDLE_SIZE;\n\t\t\n\t\tif (this.preferHtml)\n\t\t{\n\t\t\ts -= 1;\n\t\t}\n\t\t\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: createLabelHandleShape\n * \n * Creates the shape used to display the the label handle.\n */\nmxEdgeHandler.prototype.createLabelHandleShape = function()\n{\n\tif (this.labelHandleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.labelHandleImage.width, this.labelHandleImage.height), this.labelHandleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.LABEL_HANDLE_SIZE;\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.LABEL_HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: initBend\n * \n * Helper method to initialize the given bend.\n * \n * Parameters:\n * \n * bend - <mxShape> that represents the bend to be initialized.\n */\nmxEdgeHandler.prototype.initBend = function(bend, dblClick)\n{\n\tif (this.preferHtml)\n\t{\n\t\tbend.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tbend.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tbend.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\tbend.init(this.graph.getView().getOverlayPane());\n\t}\n\n\tmxEvent.redirectMouseEvents(bend.node, this.graph, this.state,\n\t\t\tnull, null, null, dblClick);\n\t\n\t// Fixes lost event tracking for images in quirks / IE8 standards\n\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t{\n\t\tmxEvent.addListener(bend.node, 'dragstart', function(evt)\n\t\t{\n\t\t\tmxEvent.consume(evt);\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t}\n\t\n\tif (mxClient.IS_TOUCH)\n\t{\n\t\tbend.node.setAttribute('pointer-events', 'none');\n\t}\n};\n\n/**\n * Function: getHandleForEvent\n * \n * Returns the index of the handle for the given event.\n */\nmxEdgeHandler.prototype.getHandleForEvent = function(me)\n{\n\t// Connection highlight may consume events before they reach sizer handle\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 1;\n\tvar hit = (this.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\tvar minDistSq = null;\n\tvar result = null;\n\n\tfunction checkShape(shape)\n\t{\n\t\tif (shape != null && shape.node.style.display != 'none' && shape.node.style.visibility != 'hidden' &&\n\t\t\t(me.isSource(shape) || (hit != null && mxUtils.intersects(shape.bounds, hit))))\n\t\t{\n\t\t\tvar dx = me.getGraphX() - shape.bounds.getCenterX();\n\t\t\tvar dy = me.getGraphY() - shape.bounds.getCenterY();\n\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\n\t\t\tif (minDistSq == null || tmp <= minDistSq)\n\t\t\t{\n\t\t\t\tminDistSq = tmp;\n\t\t\t\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tif (this.customHandles != null && this.isCustomHandleEvent(me))\n\t{\n\t\t// Inverse loop order to match display order\n\t\tfor (var i = this.customHandles.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (checkShape(this.customHandles[i].shape))\n\t\t\t{\n\t\t\t\t// LATER: Return reference to active shape\n\t\t\t\treturn mxEvent.CUSTOM_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (me.isSource(this.state.text) || checkShape(this.labelShape))\n\t{\n\t\tresult = mxEvent.LABEL_HANDLE;\n\t}\n\t\n\tif (this.bends != null)\n\t{\n\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.bends[i]))\n\t\t\t{\n\t\t\t\tresult = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.virtualBends != null && this.isAddVirtualBendEvent(me))\n\t{\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.virtualBends[i]))\n\t\t\t{\n\t\t\t\tresult = mxEvent.VIRTUAL_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isAddVirtualBendEvent\n * \n * Returns true if the given event allows virtual bends to be added. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isAddVirtualBendEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: isCustomHandleEvent\n * \n * Returns true if the given event allows custom handles to be changed. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isCustomHandleEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by checking if a special element of the handler\n * was clicked, in which case the index parameter is non-null. The\n * indices may be one of <LABEL_HANDLE> or the number of the respective\n * control point. The source and target points are used for reconnecting\n * the edge.\n */\nmxEdgeHandler.prototype.mouseDown = function(sender, me)\n{\n\tvar handle = this.getHandleForEvent(me);\n\t\n\tif (this.bends != null && this.bends[handle] != null)\n\t{\n\t\tvar b = this.bends[handle].bounds;\n\t\tthis.snapPoint = new mxPoint(b.getCenterX(), b.getCenterY());\n\t}\n\t\n\tif (this.addEnabled && handle == null && this.isAddPointEvent(me.getEvent()))\n\t{\n\t\tthis.addPoint(this.state, me.getEvent());\n\t\tme.consume();\n\t}\n\telse if (handle != null && !me.isConsumed() && this.graph.isEnabled())\n\t{\n\t\tif (this.removeEnabled && this.isRemovePointEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.removePoint(this.state, handle);\n\t\t}\n\t\telse if (handle != mxEvent.LABEL_HANDLE || this.graph.isLabelMovable(me.getCell()))\n\t\t{\n\t\t\tif (handle <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(this.virtualBends[mxEvent.VIRTUAL_HANDLE - handle].node, 100);\n\t\t\t}\n\t\t\t\n\t\t\tthis.start(me.getX(), me.getY(), handle);\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxEdgeHandler.prototype.start = function(x, y, index)\n{\n\tthis.startX = x;\n\tthis.startY = y;\n\n\tthis.isSource = (this.bends == null) ? false : index == 0;\n\tthis.isTarget = (this.bends == null) ? false : index == this.bends.length - 1;\n\tthis.isLabel = index == mxEvent.LABEL_HANDLE;\n\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tvar cell = this.state.cell;\n\t\tvar terminal = this.graph.model.getTerminal(cell, this.isSource);\n\n\t\tif ((terminal == null && this.graph.isTerminalPointMovable(cell, this.isSource)) ||\n\t\t\t(terminal != null && this.graph.isCellDisconnectable(cell, terminal, this.isSource)))\n\t\t{\n\t\t\tthis.index = index;\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.index = index;\n\t}\n\t\n\t// Hides other custom handles\n\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t{\n\t\tif (this.customHandles != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t\t{\n\t\t\t\tif (i != mxEvent.CUSTOM_HANDLE - this.index)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[i].setVisible(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: clonePreviewState\n * \n * Returns a clone of the current preview state for the given point and terminal.\n */\nmxEdgeHandler.prototype.clonePreviewState = function(point, terminal)\n{\n\treturn this.state.clone();\n};\n\n/**\n * Function: getSnapToTerminalTolerance\n * \n * Returns the tolerance for the guides. Default value is\n * gridSize * scale / 2.\n */\nmxEdgeHandler.prototype.getSnapToTerminalTolerance = function()\n{\n\treturn this.graph.gridSize * this.graph.view.scale / 2;\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxEdgeHandler.prototype.updateHint = function(me, point) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxEdgeHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled width or height. This uses Math.round.\n */\nmxEdgeHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length);\n};\n\n/**\n * Function: isSnapToTerminalsEvent\n * \n * Returns true if <snapToTerminals> is true and if alt is not pressed.\n */\nmxEdgeHandler.prototype.isSnapToTerminalsEvent = function(me)\n{\n\treturn this.snapToTerminals && !mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: getPointForEvent\n * \n * Returns the point for the given event.\n */\nmxEdgeHandler.prototype.getPointForEvent = function(me)\n{\n\tvar view = this.graph.getView();\n\tvar scale = view.scale;\n\tvar point = new mxPoint(this.roundLength(me.getGraphX() / scale) * scale,\n\t\tthis.roundLength(me.getGraphY() / scale) * scale);\n\t\n\tvar tt = this.getSnapToTerminalTolerance();\n\tvar overrideX = false;\n\tvar overrideY = false;\t\t\n\t\n\tif (tt > 0 && this.isSnapToTerminalsEvent(me))\n\t{\n\t\tfunction snapToPoint(pt)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar x = pt.x;\n\n\t\t\t\tif (Math.abs(point.x - x) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.x = x;\n\t\t\t\t\toverrideX = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar y = pt.y;\n\n\t\t\t\tif (Math.abs(point.y - y) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.y = y;\n\t\t\t\t\toverrideY = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Temporary function\n\t\tfunction snapToTerminal(terminal)\n\t\t{\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, new mxPoint(view.getRoutingCenterX(terminal),\n\t\t\t\t\t\tview.getRoutingCenterY(terminal)));\n\t\t\t}\n\t\t};\n\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(true));\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(false));\n\n\t\tif (this.state.absolutePoints != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, this.state.absolutePoints[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tvar tr = view.translate;\n\t\t\n\t\tif (!overrideX)\n\t\t{\n\t\t\tpoint.x = (this.graph.snap(point.x / scale - tr.x) + tr.x) * scale;\n\t\t}\n\t\t\n\t\tif (!overrideY)\n\t\t{\n\t\t\tpoint.y = (this.graph.snap(point.y / scale - tr.y) + tr.y) * scale;\n\t\t}\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getPreviewTerminalState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.getPreviewTerminalState = function(me)\n{\n\tthis.constraintHandler.update(me, this.isSource, true, me.isSource(this.marker.highlight.shape) ? null : this.currentPoint);\n\t\n\tif (this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null)\n\t{\n\t\t// Handles special case where grid is large and connection point is at actual point in which\n\t\t// case the outline is not followed as long as we're < gridSize / 2 away from that point\n\t\tif (this.marker.highlight != null && this.marker.highlight.state != null &&\n\t\t\tthis.marker.highlight.state.cell == this.constraintHandler.currentFocus.cell)\n\t\t{\n\t\t\t// Direct repaint needed if cell already highlighted\n\t\t\tif (this.marker.highlight.shape.stroke != 'transparent')\n\t\t\t{\n\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.markCell(this.constraintHandler.currentFocus.cell, 'transparent');\n\t\t}\n\t\t\n\t\tvar model = this.graph.getModel();\n\t\tvar other = this.graph.view.getTerminalPort(this.state,\n\t\t\t\tthis.graph.view.getState(model.getTerminal(this.state.cell,\n\t\t\t!this.isSource)), !this.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (this.isSource) ? this.constraintHandler.currentFocus.cell : otherCell;\n\t\tvar target = (this.isSource) ? otherCell : this.constraintHandler.currentFocus.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tthis.error = this.validateConnection(source, target);\n\t\tvar result = null;\n\t\t\n\t\tif (this.error == null)\n\t\t{\n\t\t\tresult = this.constraintHandler.currentFocus;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\telse if (!this.graph.isIgnoreTerminalEvent(me.getEvent()))\n\t{\n\t\tthis.marker.process(me);\n\t\tvar state = this.marker.getValidState();\n\t\t\n\t\tif (state != null && this.graph.isCellLocked(state.cell))\n\t\t{\n\t\t\tthis.marker.reset();\n\t\t}\n\t\t\n\t\treturn this.marker.getValidState();\n\t}\n\telse\n\t{\n\t\tthis.marker.reset();\n\t\t\n\t\treturn null;\n\t}\n};\n\n/**\n * Function: getPreviewPoints\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n * \n * Parameters:\n * \n * pt - <mxPoint> that contains the current pointer position.\n * me - Optional <mxMouseEvent> that contains the current event.\n */\nmxEdgeHandler.prototype.getPreviewPoints = function(pt, me)\n{\n\tvar geometry = this.graph.getCellGeometry(this.state.cell);\n\tvar points = (geometry.points != null) ? geometry.points.slice() : null;\n\tvar point = new mxPoint(pt.x, pt.y);\n\tvar result = null;\n\t\n\tif (!this.isSource && !this.isTarget)\n\t{\n\t\tthis.convertPoint(point, false);\n\t\t\n\t\tif (points == null)\n\t\t{\n\t\t\tpoints = [point];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Adds point from virtual bend\n\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 0, point);\n\t\t\t}\n\n\t\t\t// Removes point if dragged on terminal point\n\t\t\tif (!this.isSource && !this.isTarget)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i != this.index)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar bend = this.bends[i];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bend != null && mxUtils.contains(bend.bounds, pt.x, pt.y))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(this.index - 1, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Removes point if user tries to straighten a segment\n\t\t\t\tif (result == null && this.straightRemoveEnabled && (me == null || !mxEvent.isAltDown(me.getEvent())))\n\t\t\t\t{\n\t\t\t\t\tvar tol = this.graph.tolerance * this.graph.tolerance;\n\t\t\t\t\tvar abs = this.state.absolutePoints.slice();\n\t\t\t\t\tabs[this.index] = pt;\n\t\t\t\t\t\n\t\t\t\t\t// Handes special case where removing waypoint affects tolerance (flickering)\n\t\t\t\t\tvar src = this.state.getVisibleTerminalState(true);\n\t\t\t\t\t\n\t\t\t\t\tif (src != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, src, true);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(src, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[0] = new mxPoint(src.view.getRoutingCenterX(src), src.view.getRoutingCenterY(src));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar trg = this.state.getVisibleTerminalState(false);\n\t\t\t\t\t\n\t\t\t\t\tif (trg != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, trg, false);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(trg, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[abs.length - 1] = new mxPoint(trg.view.getRoutingCenterX(trg), trg.view.getRoutingCenterY(trg));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction checkRemove(idx, tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (idx > 0 && idx < abs.length - 1 &&\n\t\t\t\t\t\t\tmxUtils.ptSegDistSq(abs[idx - 1].x, abs[idx - 1].y,\n\t\t\t\t\t\t\t\tabs[idx + 1].x, abs[idx + 1].y, tmp.x, tmp.y) < tol)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpoints.splice(idx - 1, 1);\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// LATER: Check if other points can be removed if a segment is made straight\n\t\t\t\t\tcheckRemove(this.index, pt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Updates existing point\n\t\t\tif (result == null && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints[this.index - 1] = point;\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.graph.resetEdgesOnConnect)\n\t{\n\t\tpoints = null;\n\t}\n\t\n\treturn (result != null) ? result : points;\n};\n\n/**\n * Function: isOutlineConnectEvent\n * \n * Returns true if <outlineConnect> is true and the source of the event is the outline shape\n * or shift is pressed.\n */\nmxEdgeHandler.prototype.isOutlineConnectEvent = function(me)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar evt = me.getEvent();\n\t\n\tvar clientX = mxEvent.getClientX(evt);\n\tvar clientY = mxEvent.getClientY(evt);\n\t\n\tvar doc = document.documentElement;\n\tvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n\tvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\t\n\tvar gridX = this.currentPoint.x - this.graph.container.scrollLeft + offset.x - left;\n\tvar gridY = this.currentPoint.y - this.graph.container.scrollTop + offset.y - top;\n\n\treturn this.outlineConnect && !mxEvent.isShiftDown(me.getEvent()) &&\n\t\t(me.isSource(this.marker.highlight.shape) ||\n\t\t(mxEvent.isAltDown(me.getEvent()) && me.getState() != null) ||\n\t\tthis.marker.highlight.isHighlightAt(clientX, clientY) ||\n\t\t((gridX != clientX || gridY != clientY) && me.getState() == null &&\n\t\tthis.marker.highlight.isHighlightAt(gridX, gridY)));\n};\n\n/**\n * Function: updatePreviewState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.updatePreviewState = function(edge, point, terminalState, me, outline)\n{\n\t// Computes the points for the edge style and terminals\n\tvar sourceState = (this.isSource) ? terminalState : this.state.getVisibleTerminalState(true);\n\tvar targetState = (this.isTarget) ? terminalState : this.state.getVisibleTerminalState(false);\n\t\n\tvar sourceConstraint = this.graph.getConnectionConstraint(edge, sourceState, true);\n\tvar targetConstraint = this.graph.getConnectionConstraint(edge, targetState, false);\n\n\tvar constraint = this.constraintHandler.currentConstraint;\n\n\tif (constraint == null && outline)\n\t{\n\t\tif (terminalState != null)\n\t\t{\n\t\t\t// Handles special case where mouse is on outline away from actual end point\n\t\t\t// in which case the grid is ignored and mouse point is used instead\n\t\t\tif (me.isSource(this.marker.highlight.shape))\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\t\t\t\n\t\t\tconstraint = this.graph.getOutlineConstraint(point, terminalState, me);\n\t\t\tthis.constraintHandler.setFocus(me, terminalState, this.isSource);\n\t\t\tthis.constraintHandler.currentConstraint = constraint;\n\t\t\tthis.constraintHandler.currentPoint = point;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\t}\n\t\n\tif (this.outlineConnect && this.marker.highlight != null && this.marker.highlight.shape != null)\n\t{\n\t\tvar s = this.graph.view.scale;\n\t\t\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (outline) ? mxConstants.OUTLINE_HIGHLIGHT_COLOR : 'transparent';\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.OUTLINE_HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t\telse if (this.marker.hasValidState())\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (this.marker.getValidState() == me.getState()) ?\n\t\t\t\tmxConstants.DEFAULT_VALID_COLOR : 'transparent';\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t}\n\t\n\tif (this.isSource)\n\t{\n\t\tsourceConstraint = constraint;\n\t}\n\telse if (this.isTarget)\n\t{\n\t\ttargetConstraint = constraint;\n\t}\n\t\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tif (constraint != null && constraint.point != null)\n\t\t{\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X] = constraint.point.x;\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y] = constraint.point.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X];\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y];\n\t\t}\n\t}\n\t\n\tedge.setVisibleTerminalState(sourceState, true);\n\tedge.setVisibleTerminalState(targetState, false);\n\t\n\tif (!this.isSource || sourceState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, sourceState, true, sourceConstraint);\n\t}\n\t\n\tif (!this.isTarget || targetState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, targetState, false, targetConstraint);\n\t}\n\t\n\tif ((this.isSource || this.isTarget) && terminalState == null)\n\t{\n\t\tedge.setAbsoluteTerminalPoint(point, this.isSource);\n\n\t\tif (this.marker.getMarkedState() == null)\n\t\t{\n\t\t\tthis.error = (this.graph.allowDanglingEdges) ? null : '';\n\t\t}\n\t}\n\t\n\tedge.view.updatePoints(edge, this.points, sourceState, targetState);\n\tedge.view.updateFloatingTerminalPoints(edge, sourceState, targetState);\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview.\n */\nmxEdgeHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tthis.currentPoint = this.getPointForEvent(me);\n\t\tthis.error = null;\n\t\t\n\t\t// Uses the current point from the constraint handler if available\n\t\tif (!this.graph.isIgnoreTerminalEvent(me.getEvent()) && mxEvent.isShiftDown(me.getEvent()) && this.snapPoint != null)\n\t\t{\n\t\t\tif (Math.abs(this.snapPoint.x - this.currentPoint.x) < Math.abs(this.snapPoint.y - this.currentPoint.y))\n\t\t\t{\n\t\t\t\tthis.currentPoint.x = this.snapPoint.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.currentPoint.y = this.snapPoint.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t{\n\t\t\tif (this.customHandles != null)\n\t\t\t{\n\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].processEvent(me);\n\t\t\t}\n\t\t}\n\t\telse if (this.isLabel)\n\t\t{\n\t\t\tthis.label.x = this.currentPoint.x;\n\t\t\tthis.label.y = this.currentPoint.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.points = this.getPreviewPoints(this.currentPoint, me);\n\t\t\tvar terminalState = (this.isSource || this.isTarget) ? this.getPreviewTerminalState(me) : null;\n\n\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t\t{\n\t\t\t\tthis.currentPoint = this.constraintHandler.currentPoint.clone();\n\t\t\t}\n\t\t\telse if (this.outlineConnect)\n\t\t\t{\n\t\t\t\t// Need to check outline before cloning terminal state\n\t\t\t\tvar outline = (this.isSource || this.isTarget) ? this.isOutlineConnectEvent(me) : false\n\t\t\t\t\t\t\n\t\t\t\tif (outline)\n\t\t\t\t{\n\t\t\t\t\tterminalState = this.marker.highlight.state;\n\t\t\t\t}\n\t\t\t\telse if (terminalState != null && terminalState != me.getState() && this.marker.highlight.shape != null)\n\t\t\t\t{\n\t\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t\tterminalState = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (terminalState != null && this.graph.isCellLocked(terminalState.cell))\n\t\t\t{\n\t\t\t\tterminalState = null;\n\t\t\t\tthis.marker.reset();\n\t\t\t}\n\t\t\t\n\t\t\tvar clone = this.clonePreviewState(this.currentPoint, (terminalState != null) ? terminalState.cell : null);\n\t\t\tthis.updatePreviewState(clone, this.currentPoint, terminalState, me, outline);\n\n\t\t\t// Sets the color of the preview to valid or invalid, updates the\n\t\t\t// points of the preview and redraws\n\t\t\tvar color = (this.error == null) ? this.marker.validColor : this.marker.invalidColor;\n\t\t\tthis.setPreviewColor(color);\n\t\t\tthis.abspoints = clone.absolutePoints;\n\t\t\tthis.active = true;\n\t\t}\n\n\t\t// This should go before calling isOutlineConnectEvent above. As a workaround\n\t\t// we add an offset of gridSize to the hint to avoid problem with hit detection\n\t\t// in highlight.isHighlightAt (which uses comonentFromPoint)\n\t\tthis.updateHint(me, this.currentPoint);\n\t\tthis.drawPreview();\n\t\tmxEvent.consume(me.getEvent());\n\t\tme.consume();\n\t}\n\t// Workaround for disabling the connect highlight when over handle\n\telse if (mxClient.IS_IE && this.getHandleForEvent(me) != null)\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event to applying the previewed changes on the edge by\n * using <moveLabel>, <connect> or <changePoints>.\n */\nmxEdgeHandler.prototype.mouseUp = function(sender, me)\n{\n\t// Workaround for wrong event source in Webkit\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tvar edge = this.state.cell;\n\t\t\n\t\t// Ignores event if mouse has not been moved\n\t\tif (me.getX() != this.startX || me.getY() != this.startY)\n\t\t{\n\t\t\tvar clone = !this.graph.isIgnoreTerminalEvent(me.getEvent()) && this.graph.isCloneEvent(me.getEvent()) &&\n\t\t\t\tthis.cloneEnabled && this.graph.isCellsCloneable();\n\t\t\t\n\t\t\t// Displays the reason for not carriying out the change\n\t\t\t// if there is an error message with non-zero length\n\t\t\tif (this.error != null)\n\t\t\t{\n\t\t\t\tif (this.error.length > 0)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.validationAlert(this.error);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].execute();\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.isLabel)\n\t\t\t{\n\t\t\t\tthis.moveLabel(this.state, this.label.x, this.label.y);\n\t\t\t}\n\t\t\telse if (this.isSource || this.isTarget)\n\t\t\t{\n\t\t\t\tvar terminal = null;\n\t\t\t\t\n\t\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t\t\t{\n\t\t\t\t\tterminal = this.constraintHandler.currentFocus.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal == null && this.marker.hasValidState() && this.marker.highlight != null &&\n\t\t\t\t\tthis.marker.highlight.shape != null &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'transparent' &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'white')\n\t\t\t\t{\n\t\t\t\t\tterminal = this.marker.validState.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\tvar parent = model.getParent(edge);\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Clones and adds the cell\n\t\t\t\t\t\tif (clone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar geo = model.getGeometry(edge);\n\t\t\t\t\t\t\tvar clone = this.graph.cloneCell(edge);\n\t\t\t\t\t\t\tmodel.add(parent, clone, model.getChildCount(parent));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\tmodel.setGeometry(clone, geo);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar other = model.getTerminal(edge, !this.isSource);\n\t\t\t\t\t\t\tthis.graph.connectCell(clone, other, !this.isSource);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tedge = clone;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tedge = this.connect(edge, terminal, this.isSource, clone, me);\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.graph.isAllowDanglingEdges())\n\t\t\t\t{\n\t\t\t\t\tvar pt = this.abspoints[(this.isSource) ? 0 : this.abspoints.length - 1];\n\t\t\t\t\tpt.x = this.roundLength(pt.x / this.graph.view.scale - this.graph.view.translate.x);\n\t\t\t\t\tpt.y = this.roundLength(pt.y / this.graph.view.scale - this.graph.view.translate.y);\n\n\t\t\t\t\tvar pstate = this.graph.getView().getState(\n\t\t\t\t\t\t\tthis.graph.getModel().getParent(edge));\n\t\t\t\t\t\t\t\n\t\t\t\t\tif (pstate != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt.x -= pstate.origin.x;\n\t\t\t\t\t\tpt.y -= pstate.origin.y;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpt.x -= this.graph.panDx / this.graph.view.scale;\n\t\t\t\t\tpt.y -= this.graph.panDy / this.graph.view.scale;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t// Destroys and recreates this handler\n\t\t\t\t\tedge = this.changeTerminalPoint(edge, pt, this.isSource, clone);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.active)\n\t\t\t{\n\t\t\t\tedge = this.changePoints(edge, this.points, clone);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.graph.getView().invalidate(this.state.cell);\n\t\t\t\tthis.graph.getView().validate(this.state.cell);\t\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Resets the preview color the state of the handler if this\n\t\t// handler has not been recreated\n\t\tif (this.marker != null)\n\t\t{\n\t\t\tthis.reset();\n\n\t\t\t// Updates the selection if the edge has been cloned\n\t\t\tif (edge != this.state.cell)\n\t\t\t{\n\t\t\t\tthis.graph.setSelectionCell(edge);\n\t\t\t}\n\t\t}\n\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxEdgeHandler.prototype.reset = function()\n{\n\tif (this.active)\n\t{\n\t\tthis.refresh();\n\t}\n\t\n\tthis.error = null;\n\tthis.index = null;\n\tthis.label = null;\n\tthis.points = null;\n\tthis.snapPoint = null;\n\tthis.isLabel = false;\n\tthis.isSource = false;\n\tthis.isTarget = false;\n\tthis.active = false;\n\t\n\tif (this.livePreview && this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (this.sizers[i] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[i].node.style.display = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.reset();\n\t}\n\t\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.reset();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].reset();\n\t\t}\n\t}\n\n\tthis.setPreviewColor(mxConstants.EDGE_SELECTION_COLOR);\n\tthis.removeHint();\n\tthis.redraw();\n};\n\n/**\n * Function: setPreviewColor\n * \n * Sets the color of the preview to the given value.\n */\nmxEdgeHandler.prototype.setPreviewColor = function(color)\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n\n/**\n * Function: convertPoint\n * \n * Converts the given point in-place from screen to unscaled, untranslated\n * graph coordinates and applies the grid. Returns the given, modified\n * point instance.\n * \n * Parameters:\n * \n * point - <mxPoint> to be converted.\n * gridEnabled - Boolean that specifies if the grid should be applied.\n */\nmxEdgeHandler.prototype.convertPoint = function(point, gridEnabled)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\t\t\n\tif (gridEnabled)\n\t{\n\t\tpoint.x = this.graph.snap(point.x);\n\t\tpoint.y = this.graph.snap(point.y);\n\t}\n\t\n\tpoint.x = Math.round(point.x / scale - tr.x);\n\tpoint.y = Math.round(point.y / scale - tr.y);\n\n\tvar pstate = this.graph.getView().getState(\n\t\tthis.graph.getModel().getParent(this.state.cell));\n\n\tif (pstate != null)\n\t{\n\t\tpoint.x -= pstate.origin.x;\n\t\tpoint.y -= pstate.origin.y;\n\t}\n\n\treturn point;\n};\n\n/**\n * Function: moveLabel\n * \n * Changes the coordinates for the label of the given edge.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge.\n * x - Integer that specifies the x-coordinate of the new location.\n * y - Integer that specifies the y-coordinate of the new location.\n */\nmxEdgeHandler.prototype.moveLabel = function(edgeState, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(edgeState.cell);\n\t\n\tif (geometry != null)\n\t{\n\t\tvar scale = this.graph.getView().scale;\n\t\tgeometry = geometry.clone();\n\t\t\n\t\tif (geometry.relative)\n\t\t{\n\t\t\t// Resets the relative location stored inside the geometry\n\t\t\tvar pt = this.graph.getView().getRelativePoint(edgeState, x, y);\n\t\t\tgeometry.x = Math.round(pt.x * 10000) / 10000;\n\t\t\tgeometry.y = Math.round(pt.y);\n\t\t\t\n\t\t\t// Resets the offset inside the geometry to find the offset\n\t\t\t// from the resulting point\n\t\t\tgeometry.offset = new mxPoint(0, 0);\n\t\t\tvar pt = this.graph.view.getPoint(edgeState, geometry);\n\t\t\tgeometry.offset = new mxPoint(Math.round((x - pt.x) / scale), Math.round((y - pt.y) / scale));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar points = edgeState.absolutePoints;\n\t\t\tvar p0 = points[0];\n\t\t\tvar pe = points[points.length - 1];\n\t\t\t\n\t\t\tif (p0 != null && pe != null)\n\t\t\t{\n\t\t\t\tvar cx = p0.x + (pe.x - p0.x) / 2;\n\t\t\t\tvar cy = p0.y + (pe.y - p0.y) / 2;\n\t\t\t\t\n\t\t\t\tgeometry.offset = new mxPoint(Math.round((x - cx) / scale), Math.round((y - cy) / scale));\n\t\t\t\tgeometry.x = 0;\n\t\t\t\tgeometry.y = 0;\n\t\t\t}\n\t\t}\n\n\t\tmodel.setGeometry(edgeState.cell, geometry);\n\t}\n};\n\n/**\n * Function: connect\n * \n * Changes the terminal or terminal point of the given edge in the graph\n * model.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be reconnected.\n * terminal - <mxCell> that represents the new terminal.\n * isSource - Boolean indicating if the new terminal is the source or\n * target terminal.\n * isClone - Boolean indicating if the new connection should be a clone of\n * the old edge.\n * me - <mxMouseEvent> that contains the mouse up event.\n */\nmxEdgeHandler.prototype.connect = function(edge, terminal, isSource, isClone, me)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(edge);\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvar constraint = this.constraintHandler.currentConstraint;\n\t\t\n\t\tif (constraint == null)\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\n\t\tthis.graph.connectCell(edge, terminal, isSource, constraint);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changeTerminalPoint\n * \n * Changes the terminal point of the given edge.\n */\nmxEdgeHandler.prototype.changeTerminalPoint = function(edge, point, isSource, clone)\n{\n\tvar model = this.graph.getModel();\n\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar terminal = model.getTerminal(edge, !isSource);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, terminal, !isSource);\n\t\t}\n\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.setTerminalPoint(point, isSource);\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t\tthis.graph.connectCell(edge, null, isSource, new mxConnectionConstraint());\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changePoints\n * \n * Changes the control points of the given edge in the graph model.\n */\nmxEdgeHandler.prototype.changePoints = function(edge, points, clone)\n{\n\tvar model = this.graph.getModel();\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar source = model.getTerminal(edge, true);\n\t\t\tvar target = model.getTerminal(edge, false);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, source, true);\n\t\t\tmodel.setTerminal(edge, target, false);\n\t\t}\n\t\t\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points = points;\n\t\t\t\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: addPoint\n * \n * Adds a control point for the given state and event.\n */\nmxEdgeHandler.prototype.addPoint = function(state, evt)\n{\n\tvar pt = mxUtils.convertPoint(this.graph.container, mxEvent.getClientX(evt),\n\t\t\tmxEvent.getClientY(evt));\n\tvar gridEnabled = this.graph.isGridEnabledEvent(evt);\n\tthis.convertPoint(pt, gridEnabled);\n\tthis.addPointAt(state, pt.x, pt.y);\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: addPointAt\n * \n * Adds a control point at the given point.\n */\nmxEdgeHandler.prototype.addPointAt = function(state, x, y)\n{\n\tvar geo = this.graph.getCellGeometry(state.cell);\n\tvar pt = new mxPoint(x, y);\n\t\n\tif (geo != null)\n\t{\n\t\tgeo = geo.clone();\n\t\tvar t = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\tvar offset = new mxPoint(t.x * s, t.y * s);\n\t\t\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\n\t\tif (this.graph.model.isVertex(parent))\n\t\t{\n\t\t\tvar pState = this.graph.view.getState(parent);\n\t\t\toffset = new mxPoint(pState.x, pState.y);\n\t\t}\n\t\t\n\t\tvar index = mxUtils.findNearestSegment(state, pt.x * s + offset.x, pt.y * s + offset.y);\n\n\t\tif (geo.points == null)\n\t\t{\n\t\t\tgeo.points = [pt];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeo.points.splice(index, 0, pt);\n\t\t}\n\t\t\n\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\tthis.refresh();\t\n\t\tthis.redraw();\n\t}\n};\n\n/**\n * Function: removePoint\n * \n * Removes the control point at the given index from the given state.\n */\nmxEdgeHandler.prototype.removePoint = function(state, index)\n{\n\tif (index > 0 && index < this.abspoints.length - 1)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\t\t\n\t\tif (geo != null && geo.points != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points.splice(index - 1, 1);\n\t\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\t\tthis.refresh();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getHandleFillColor\n * \n * Returns the fillcolor for the handle at the given index.\n */\nmxEdgeHandler.prototype.getHandleFillColor = function(index)\n{\n\tvar isSource = index == 0;\n\tvar cell = this.state.cell;\n\tvar terminal = this.graph.getModel().getTerminal(cell, isSource);\n\tvar color = mxConstants.HANDLE_FILLCOLOR;\n\t\n\tif ((terminal != null && !this.graph.isCellDisconnectable(cell, terminal, isSource)) ||\n\t\t(terminal == null && !this.graph.isTerminalPointMovable(cell, isSource)))\n\t{\n\t\tcolor = mxConstants.LOCKED_HANDLE_FILLCOLOR;\n\t}\n\telse if (terminal != null && this.graph.isCellDisconnectable(cell, terminal, isSource))\n\t{\n\t\tcolor = mxConstants.CONNECT_HANDLE_FILLCOLOR;\n\t}\n\t\n\treturn color;\n};\n\n/**\n * Function: redraw\n * \n * Redraws the preview, and the bends- and label control points.\n */\nmxEdgeHandler.prototype.redraw = function()\n{\n\tthis.abspoints = this.state.absolutePoints.slice();\n\tthis.redrawHandles();\n\t\n\tvar g = this.graph.getModel().getGeometry(this.state.cell);\n\tvar pts = g.points;\n\n\tif (this.bends != null && this.bends.length > 0)\n\t{\n\t\tif (pts != null)\n\t\t{\n\t\t\tif (this.points == null)\n\t\t\t{\n\t\t\t\tthis.points = [];\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t\t\t{\n\t\t\t\tif (this.bends[i] != null && this.abspoints[i] != null)\n\t\t\t\t{\n\t\t\t\t\tthis.points[i - 1] = pts[i - 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.drawPreview();\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the handles.\n */\nmxEdgeHandler.prototype.redrawHandles = function()\n{\n\tvar cell = this.state.cell;\n\n\t// Updates the handle for the label position\n\tvar b = this.labelShape.bounds;\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape.bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\n\t// Shows or hides the label handle depending on the label\n\tvar lab = this.graph.getLabel(cell);\n\tthis.labelShape.visible = (lab != null && lab.length > 0 && this.graph.isLabelMovable(cell));\n\t\n\tif (this.bends != null && this.bends.length > 0)\n\t{\n\t\tvar n = this.abspoints.length - 1;\n\t\t\n\t\tvar p0 = this.abspoints[0];\n\t\tvar x0 = p0.x;\n\t\tvar y0 = p0.y;\n\t\t\n\t\tb = this.bends[0].bounds;\n\t\tthis.bends[0].bounds = new mxRectangle(Math.floor(x0 - b.width / 2),\n\t\t\t\tMath.floor(y0 - b.height / 2), b.width, b.height);\n\t\tthis.bends[0].fill = this.getHandleFillColor(0);\n\t\tthis.bends[0].redraw();\n\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[0].bounds);\n\t\t}\n\t\t\t\t\n\t\tvar pe = this.abspoints[n];\n\t\tvar xn = pe.x;\n\t\tvar yn = pe.y;\n\t\t\n\t\tvar bn = this.bends.length - 1;\n\t\tb = this.bends[bn].bounds;\n\t\tthis.bends[bn].bounds = new mxRectangle(Math.floor(xn - b.width / 2),\n\t\t\t\tMath.floor(yn - b.height / 2), b.width, b.height);\n\t\tthis.bends[bn].fill = this.getHandleFillColor(bn);\n\t\tthis.bends[bn].redraw();\n\t\t\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[bn].bounds);\n\t\t}\n\t\t\n\t\tthis.redrawInnerBends(p0, pe);\n\t}\n\n\tif (this.abspoints != null && this.virtualBends != null && this.virtualBends.length > 0)\n\t{\n\t\tvar last = this.abspoints[0];\n\t\t\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tif (this.virtualBends[i] != null && this.abspoints[i + 1] != null)\n\t\t\t{\n\t\t\t\tvar pt = this.abspoints[i + 1];\n\t\t\t\tvar b = this.virtualBends[i];\n\t\t\t\tvar x = last.x + (pt.x - last.x) / 2;\n\t\t\t\tvar y = last.y + (pt.y - last.y) / 2;\n\t\t\t\tb.bounds = new mxRectangle(Math.floor(x - b.bounds.width / 2),\n\t\t\t\t\t\tMath.floor(y - b.bounds.height / 2), b.bounds.width, b.bounds.height);\n\t\t\t\tb.redraw();\n\t\t\t\tmxUtils.setOpacity(b.node, this.virtualBendOpacity);\n\t\t\t\tlast = pt;\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(b.bounds);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.redraw();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: hideHandles\n * \n * Shortcut to <hideSizers>.\n */\nmxEdgeHandler.prototype.setHandlesVisible = function(visible)\n{\n\tif (this.bends != null)\n\t{\n\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t{\n\t\t\tthis.bends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\t\n\tif (this.virtualBends != null)\n\t{\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tthis.virtualBends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.node.style.display = (visible) ? '' : 'none';\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].setVisible(visible);\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates and redraws the inner bends.\n * \n * Parameters:\n * \n * p0 - <mxPoint> that represents the location of the first point.\n * pe - <mxPoint> that represents the location of the last point.\n */\nmxEdgeHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t{\n\t\tif (this.bends[i] != null)\n\t\t{\n\t\t\tif (this.abspoints[i] != null)\n\t\t\t{\n\t\t\t\tvar x = this.abspoints[i].x;\n\t\t\t\tvar y = this.abspoints[i].y;\n\t\t\t\t\n\t\t\t\tvar b = this.bends[i].bounds;\n\t\t\t\tthis.bends[i].node.style.visibility = 'visible';\n\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - b.width / 2),\n\t\t\t\t\t\tMath.round(y - b.height / 2), b.width, b.height);\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(this.bends[i].bounds);\n\t\t\t\t}\n\t\t\t\telse if (this.handleImage == null && this.labelShape.visible && mxUtils.intersects(this.bends[i].bounds, this.labelShape.bounds))\n\t\t\t\t{\n\t\t\t\t\tw = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\th = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - w / 2), Math.round(y - h / 2), w, h);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.bends[i].redraw();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.bends[i].destroy();\n\t\t\t\tthis.bends[i] = null;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: checkLabelHandle\n * \n * Checks if the label handle intersects the given bounds and moves it if it\n * intersects.\n */\nmxEdgeHandler.prototype.checkLabelHandle = function(b)\n{\n\tif (this.labelShape != null)\n\t{\n\t\tvar b2 = this.labelShape.bounds;\n\t\t\n\t\tif (mxUtils.intersects(b, b2))\n\t\t{\n\t\t\tif (b.getCenterY() < b2.getCenterY())\n\t\t\t{\n\t\t\t\tb2.y = b.y + b.height;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb2.y = b.y - b2.height;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview.\n */\nmxEdgeHandler.prototype.drawPreview = function()\n{\n\tif (this.isLabel)\n\t{\n\t\tvar b = this.labelShape.bounds;\n\t\tvar bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\t\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\t\tthis.labelShape.bounds = bounds;\n\t\tthis.labelShape.redraw();\n\t}\n\telse if (this.shape != null)\n\t{\n\t\tthis.shape.apply(this.state);\n\t\tthis.shape.points = this.abspoints;\n\t\tthis.shape.scale = this.state.view.scale;\n\t\tthis.shape.isDashed = this.isSelectionDashed();\n\t\tthis.shape.stroke = this.getSelectionColor();\n\t\tthis.shape.strokewidth = this.getSelectionStrokeWidth() / this.shape.scale / this.shape.scale;\n\t\tthis.shape.isShadow = false;\n\t\tthis.shape.redraw();\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.redraw();\n\t}\n};\n\n/**\n * Function: refresh\n * \n * Refreshes the bends of this handler.\n */\nmxEdgeHandler.prototype.refresh = function()\n{\n\tthis.abspoints = this.getSelectionPoints(this.state);\n\tthis.points = [];\n\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.points = this.abspoints;\n\t}\n\t\n\tif (this.bends != null)\n\t{\n\t\tthis.destroyBends(this.bends);\n\t\tthis.bends = this.createBends();\n\t}\n\t\n\tif (this.virtualBends != null)\n\t{\n\t\tthis.destroyBends(this.virtualBends);\n\t\tthis.virtualBends = this.createVirtualBends();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tthis.destroyBends(this.customHandles);\n\t\tthis.customHandles = this.createCustomHandles();\n\t}\n\t\n\t// Puts label node on top of bends\n\tif (this.labelShape != null && this.labelShape.node != null && this.labelShape.node.parentNode != null)\n\t{\n\t\tthis.labelShape.node.parentNode.appendChild(this.labelShape.node);\n\t}\n};\n\n/**\n * Function: destroyBends\n * \n * Destroys all elements in <bends>.\n */\nmxEdgeHandler.prototype.destroyBends = function(bends)\n{\n\tif (bends != null)\n\t{\n\t\tfor (var i = 0; i < bends.length; i++)\n\t\t{\n\t\t\tif (bends[i] != null)\n\t\t\t{\n\t\t\t\tbends[i].destroy();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This does\n * normally not need to be called as handlers are destroyed automatically\n * when the corresponding cell is deselected.\n */\nmxEdgeHandler.prototype.destroy = function()\n{\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.state.view.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.destroy();\n\t\tthis.marker = null;\n\t}\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.destroy();\n\t\tthis.parentHighlight = null;\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.destroy();\n\t\tthis.labelShape = null;\n\t}\n\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.destroy();\n\t\tthis.constraintHandler = null;\n\t}\n\t\n\tthis.destroyBends(this.virtualBends);\n\tthis.virtualBends = null;\n\t\n\tthis.destroyBends(this.customHandles);\n\tthis.customHandles = null;\n\n\tthis.destroyBends(this.bends);\n\tthis.bends = null;\n\t\n\tthis.removeHint();\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxElbowEdgeHandler\n *\n * Graph event handler that reconnects edges and modifies control points and\n * the edge label location. Uses <mxTerminalMarker> for finding and\n * highlighting new source and target vertices. This handler is automatically\n * created in <mxGraph.createHandler>. It extends <mxEdgeHandler>.\n * \n * Constructor: mxEdgeHandler\n *\n * Constructs an edge handler for the specified <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be modified.\n */\nfunction mxElbowEdgeHandler(state)\n{\n\tmxEdgeHandler.call(this, state);\n};\n\n/**\n * Extends mxEdgeHandler.\n */\nmxUtils.extend(mxElbowEdgeHandler, mxEdgeHandler);\n\n/**\n * Specifies if a double click on the middle handle should call\n * <mxGraph.flipEdge>. Default is true.\n */\nmxElbowEdgeHandler.prototype.flipEnabled = true;\n\n/**\n * Variable: doubleClickOrientationResource\n * \n * Specifies the resource key for the tooltip to be displayed on the single\n * control point for routed edges. If the resource for this key does not\n * exist then the value is used as the error message. Default is\n * 'doubleClickOrientation'.\n */\nmxElbowEdgeHandler.prototype.doubleClickOrientationResource =\n\t(mxClient.language != 'none') ? 'doubleClickOrientation' : '';\n\n/**\n * Function: createBends\n * \n * Overrides <mxEdgeHandler.createBends> to create custom bends.\n */\n mxElbowEdgeHandler.prototype.createBends = function()\n {\n\tvar bends = [];\n\t\n\t// Source\n\tvar bend = this.createHandleShape(0);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\t// Virtual\n\tbends.push(this.createVirtualBend(mxUtils.bind(this, function(evt)\n\t{\n\t\tif (!mxEvent.isConsumed(evt) && this.flipEnabled)\n\t\t{\n\t\t\tthis.graph.flipEdge(this.state.cell, evt);\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t})));\n\tthis.points.push(new mxPoint(0,0));\n\n\t// Target\n\tbend = this.createHandleShape(2);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\t\n\treturn bends;\n };\n\n/**\n * Function: createVirtualBend\n * \n * Creates a virtual bend that supports double clicking and calls\n * <mxGraph.flipEdge>.\n */\nmxElbowEdgeHandler.prototype.createVirtualBend = function(dblClickHandler)\n{\n\tvar bend = this.createHandleShape();\n\tthis.initBend(bend, dblClickHandler);\n\n\tbend.setCursor(this.getCursorForBend());\n\n\tif (!this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tbend.node.style.display = 'none';\n\t}\n\n\treturn bend;\n};\n\n/**\n * Function: getCursorForBend\n * \n * Returns the cursor to be used for the bend.\n */\nmxElbowEdgeHandler.prototype.getCursorForBend = function()\n{\n\treturn (this.state.style[mxConstants.STYLE_EDGE] == mxEdgeStyle.TopToBottom ||\n\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.EDGESTYLE_TOPTOBOTTOM ||\n\t\t((this.state.style[mxConstants.STYLE_EDGE] == mxEdgeStyle.ElbowConnector ||\n\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.EDGESTYLE_ELBOW)&&\n\t\tthis.state.style[mxConstants.STYLE_ELBOW] == mxConstants.ELBOW_VERTICAL)) ? \n\t\t'row-resize' : 'col-resize';\n};\n\n/**\n * Function: getTooltipForNode\n * \n * Returns the tooltip for the given node.\n */\nmxElbowEdgeHandler.prototype.getTooltipForNode = function(node)\n{\n\tvar tip = null;\n\t\n\tif (this.bends != null && this.bends[1] != null && (node == this.bends[1].node ||\n\t\tnode.parentNode == this.bends[1].node))\n\t{\n\t\ttip = this.doubleClickOrientationResource;\n\t\ttip = mxResources.get(tip) || tip; // translate\n\t}\n\n\treturn tip;\n};\n\n/**\n * Function: convertPoint\n * \n * Converts the given point in-place from screen to unscaled, untranslated\n * graph coordinates and applies the grid.\n * \n * Parameters:\n * \n * point - <mxPoint> to be converted.\n * gridEnabled - Boolean that specifies if the grid should be applied.\n */\nmxElbowEdgeHandler.prototype.convertPoint = function(point, gridEnabled)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\tvar origin = this.state.origin;\n\t\n\tif (gridEnabled)\n\t{\n\t\tpoint.x = this.graph.snap(point.x);\n\t\tpoint.y = this.graph.snap(point.y);\n\t}\n\t\n\tpoint.x = Math.round(point.x / scale - tr.x - origin.x);\n\tpoint.y = Math.round(point.y / scale - tr.y - origin.y);\n\t\n\treturn point;\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates and redraws the inner bends.\n * \n * Parameters:\n * \n * p0 - <mxPoint> that represents the location of the first point.\n * pe - <mxPoint> that represents the location of the last point.\n */\nmxElbowEdgeHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tvar g = this.graph.getModel().getGeometry(this.state.cell);\n\tvar pts = this.state.absolutePoints;\n\tvar pt = null;\n\n\t// Keeps the virtual bend on the edge shape\n\tif (pts.length > 1)\n\t{\n\t\tp0 = pts[1];\n\t\tpe = pts[pts.length - 2];\n\t}\n\telse if (g.points != null && g.points.length > 0)\n\t{\n\t\tpt = pts[0];\n\t}\n\t\n\tif (pt == null)\n\t{\n\t\tpt = new mxPoint(p0.x + (pe.x - p0.x) / 2, p0.y + (pe.y - p0.y) / 2);\n\t}\n\telse\n\t{\n\t\tpt = new mxPoint(this.graph.getView().scale * (pt.x + this.graph.getView().translate.x + this.state.origin.x),\n\t\t\t\tthis.graph.getView().scale * (pt.y + this.graph.getView().translate.y + this.state.origin.y));\n\t}\n\n\t// Makes handle slightly bigger if the yellow  label handle\n\t// exists and intersects this green handle\n\tvar b = this.bends[1].bounds;\n\tvar w = b.width;\n\tvar h = b.height;\n\tvar bounds = new mxRectangle(Math.round(pt.x - w / 2), Math.round(pt.y - h / 2), w, h);\n\n\tif (this.manageLabelHandle)\n\t{\n\t\tthis.checkLabelHandle(bounds);\n\t}\n\telse if (this.handleImage == null && this.labelShape.visible && mxUtils.intersects(bounds, this.labelShape.bounds))\n\t{\n\t\tw = mxConstants.HANDLE_SIZE + 3;\n\t\th = mxConstants.HANDLE_SIZE + 3;\n\t\tbounds = new mxRectangle(Math.floor(pt.x - w / 2), Math.floor(pt.y - h / 2), w, h);\n\t}\n\n\tthis.bends[1].bounds = bounds;\n\tthis.bends[1].redraw();\n\t\n\tif (this.manageLabelHandle)\n\t{\n\t\tthis.checkLabelHandle(this.bends[1].bounds);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nfunction mxEdgeSegmentHandler(state)\n{\n\tmxEdgeHandler.call(this, state);\n};\n\n/**\n * Extends mxEdgeHandler.\n */\nmxUtils.extend(mxEdgeSegmentHandler, mxElbowEdgeHandler);\n\n/**\n * Function: getCurrentPoints\n * \n * Returns the current absolute points.\n */\nmxEdgeSegmentHandler.prototype.getCurrentPoints = function()\n{\n\tvar pts = this.state.absolutePoints;\n\t\n\tif (pts != null)\n\t{\n\t\t// Special case for straight edges where we add a virtual middle handle for moving the edge\n\t\tvar tol = Math.max(1, this.graph.view.scale);\n\t\t\n\t\tif (pts.length == 2 || (pts.length == 3 &&\n\t\t\t(Math.abs(pts[0].x - pts[1].x) < tol && Math.abs(pts[1].x - pts[2].x) < tol ||\n\t\t\tMath.abs(pts[0].y - pts[1].y) < tol && Math.abs(pts[1].y - pts[2].y) < tol)))\n\t\t{\n\t\t\tvar cx = pts[0].x + (pts[pts.length - 1].x - pts[0].x) / 2;\n\t\t\tvar cy = pts[0].y + (pts[pts.length - 1].y - pts[0].y) / 2;\n\t\t\t\n\t\t\tpts = [pts[0], new mxPoint(cx, cy), new mxPoint(cx, cy), pts[pts.length - 1]];\t\n\t\t}\n\t}\n\n\treturn pts;\n};\n\n/**\n * Function: getPreviewPoints\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeSegmentHandler.prototype.getPreviewPoints = function(point)\n{\n\tif (this.isSource || this.isTarget)\n\t{\n\t\treturn mxElbowEdgeHandler.prototype.getPreviewPoints.apply(this, arguments);\n\t}\n\telse\n\t{\n\t\tvar pts = this.getCurrentPoints();\n\t\tvar last = this.convertPoint(pts[0].clone(), false);\n\t\tpoint = this.convertPoint(point.clone(), false);\n\t\tvar result = [];\n\n\t\tfor (var i = 1; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt = this.convertPoint(pts[i].clone(), false);\n\t\t\t\n\t\t\tif (i == this.index)\n\t\t\t{\n\t\t\t\tif (Math.round(last.x - pt.x) == 0)\n\t\t \t\t{\n\t\t\t\t\tlast.x = point.x;\n\t\t\t\t\tpt.x = point.x;\n\t\t \t\t}\n\t\t \t\t\n\t\t\t\tif (Math.round(last.y - pt.y) == 0)\n\t\t \t\t{\n\t\t \t\t\tlast.y = point.y;\n\t\t \t\t\tpt.y = point.y;\n\t\t \t\t}\n\t\t\t}\n\n\t\t\tif (i < pts.length - 1)\n\t\t\t{\n\t\t\t\tresult.push(pt);\n\t\t\t}\n\n\t\t\tlast = pt;\n\t\t}\n\t\t\n\t\t// Replaces single point that intersects with source or target\n\t\tif (result.length == 1)\n\t\t{\n\t\t\tvar source = this.state.getVisibleTerminalState(true);\n\t\t\tvar target = this.state.getVisibleTerminalState(false);\n\t\t\tvar scale = this.state.view.getScale();\n\t\t\tvar tr = this.state.view.getTranslate();\n\t\t\t\n\t\t\tvar x = result[0].x * scale + tr.x;\n\t\t\tvar y = result[0].y * scale + tr.y;\n\t\t\t\n\t\t\tif ((source != null && mxUtils.contains(source, x, y)) ||\n\t\t\t\t(target != null && mxUtils.contains(target, x, y)))\n\t\t\t{\n\t\t\t\tresult = [point, point];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: updatePreviewState\n * \n * Overridden to perform optimization of the edge style result.\n */\nmxEdgeSegmentHandler.prototype.updatePreviewState = function(edge, point, terminalState, me)\n{\n\tmxEdgeHandler.prototype.updatePreviewState.apply(this, arguments);\n\n\t// Checks and corrects preview by running edge style again\n\tif (!this.isSource && !this.isTarget)\n\t{\n\t\tpoint = this.convertPoint(point.clone(), false);\n\t\tvar pts = edge.absolutePoints;\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = pts[1];\n\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 2; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt2 = pts[i];\n\t\t\n\t\t\t// Merges adjacent segments only if more than 2 to allow for straight edges\n\t\t\tif ((Math.round(pt0.x - pt1.x) != 0 || Math.round(pt1.x - pt2.x) != 0) &&\n\t\t\t\t(Math.round(pt0.y - pt1.y) != 0 || Math.round(pt1.y - pt2.y) != 0))\n\t\t\t{\n\t\t\t\tresult.push(this.convertPoint(pt1.clone(), false));\n\t\t\t}\n\n\t\t\tpt0 = pt1;\n\t\t\tpt1 = pt2;\n\t\t}\n\t\t\n\t\tvar source = this.state.getVisibleTerminalState(true);\n\t\tvar target = this.state.getVisibleTerminalState(false);\n\t\tvar rpts = this.state.absolutePoints;\n\t\t\n\t\t// A straight line is represented by 3 handles\n\t\tif (result.length == 0 && (Math.round(pts[0].x - pts[pts.length - 1].x) == 0 ||\n\t\t\tMath.round(pts[0].y - pts[pts.length - 1].y) == 0))\n\t\t{\n\t\t\tresult = [point, point];\n\t\t}\n\t\t// Handles special case of transitions from straight vertical to routed\n\t\telse if (pts.length == 5 && result.length == 2 && source != null && target != null &&\n\t\t\t\trpts != null && Math.round(rpts[0].x - rpts[rpts.length - 1].x) == 0)\n\t\t{\n\t\t\tvar view = this.graph.getView();\n\t\t\tvar scale = view.getScale();\n\t\t\tvar tr = view.getTranslate();\n\t\t\t\n\t\t\tvar y0 = view.getRoutingCenterY(source) / scale - tr.y;\n\t\t\t\n\t\t\t// Use fixed connection point y-coordinate if one exists\n\t\t\tvar sc = this.graph.getConnectionConstraint(edge, source, true);\n\t\t\t\n\t\t\tif (sc != null)\n\t\t\t{\n\t\t\t\tvar pt = this.graph.getConnectionPoint(source, sc);\n\t\t\t\t\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tthis.convertPoint(pt, false);\n\t\t\t\t\ty0 = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar ye = view.getRoutingCenterY(target) / scale - tr.y;\n\t\t\t\n\t\t\t// Use fixed connection point y-coordinate if one exists\n\t\t\tvar tc = this.graph.getConnectionConstraint(edge, target, false);\n\t\t\t\n\t\t\tif (tc)\n\t\t\t{\n\t\t\t\tvar pt = this.graph.getConnectionPoint(target, tc);\n\t\t\t\t\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tthis.convertPoint(pt, false);\n\t\t\t\t\tye = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult = [new mxPoint(point.x, y0), new mxPoint(point.x, ye)];\n\t\t}\n\n\t\tthis.points = result;\n\n\t\t// LATER: Check if points and result are different\n\t\tedge.view.updateFixedTerminalPoints(edge, source, target);\n\t\tedge.view.updatePoints(edge, this.points, source, target);\n\t\tedge.view.updateFloatingTerminalPoints(edge, source, target);\n\t}\n};\n\n/**\n * Overriden to merge edge segments.\n */\nmxEdgeSegmentHandler.prototype.connect = function(edge, terminal, isSource, isClone, me)\n{\n\tvar model = this.graph.getModel();\n\tvar geo = model.getGeometry(edge);\n\tvar result = null;\n\t\n\t// Merges adjacent edge segments\n\tif (geo != null && geo.points != null && geo.points.length > 0)\n\t{\n\t\tvar pts = this.abspoints;\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = pts[1];\n\t\tresult = [];\n\t\t\n\t\tfor (var i = 2; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt2 = pts[i];\n\t\t\n\t\t\t// Merges adjacent segments only if more than 2 to allow for straight edges\n\t\t\tif ((Math.round(pt0.x - pt1.x) != 0 || Math.round(pt1.x - pt2.x) != 0) &&\n\t\t\t\t(Math.round(pt0.y - pt1.y) != 0 || Math.round(pt1.y - pt2.y) != 0))\n\t\t\t{\n\t\t\t\tresult.push(this.convertPoint(pt1.clone(), false));\n\t\t\t}\n\t\n\t\t\tpt0 = pt1;\n\t\t\tpt1 = pt2;\n\t\t}\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (result != null)\n\t\t{\n\t\t\tvar geo = model.getGeometry(edge);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.points = result;\n\t\t\t\t\n\t\t\t\tmodel.setGeometry(edge, geo);\n\t\t\t}\n\t\t}\n\t\t\n\t\tedge = mxEdgeHandler.prototype.connect.apply(this, arguments);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: getTooltipForNode\n * \n * Returns no tooltips.\n */\nmxEdgeSegmentHandler.prototype.getTooltipForNode = function(node)\n{\n\treturn null;\n};\n\n/**\n * Function: createBends\n * \n * Adds custom bends for the center of each segment.\n */\nmxEdgeSegmentHandler.prototype.start = function(x, y, index)\n{\n\tmxEdgeHandler.prototype.start.apply(this, arguments);\n\t\n\tif (this.bends != null && this.bends[index] != null &&\n\t\t!this.isSource && !this.isTarget)\n\t{\n\t\tmxUtils.setOpacity(this.bends[index].node, 100);\n\t}\n};\n\n/**\n * Function: createBends\n * \n * Adds custom bends for the center of each segment.\n */\nmxEdgeSegmentHandler.prototype.createBends = function()\n{\n\tvar bends = [];\n\t\n\t// Source\n\tvar bend = this.createHandleShape(0);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\tvar pts = this.getCurrentPoints();\n\n\t// Waypoints (segment handles)\n\tif (this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tif (this.points == null)\n\t\t{\n\t\t\tthis.points = [];\n\t\t}\n\n\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t{\n\t\t\tbend = this.createVirtualBend();\n\t\t\tbends.push(bend);\n\t\t\tvar horizontal = Math.round(pts[i].x - pts[i + 1].x) == 0;\n\t\t\t\n\t\t\t// Special case where dy is 0 as well\n\t\t\tif (Math.round(pts[i].y - pts[i + 1].y) == 0 && i < pts.length - 2)\n\t\t\t{\n\t\t\t\thorizontal = Math.round(pts[i].x - pts[i + 2].x) == 0;\n\t\t\t}\n\t\t\t\n\t\t\tbend.setCursor((horizontal) ? 'col-resize' : 'row-resize');\n\t\t\tthis.points.push(new mxPoint(0,0));\n\t\t}\n\t}\n\n\t// Target\n\tvar bend = this.createHandleShape(pts.length);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\treturn bends;\n};\n\n/**\n * Function: redraw\n * \n * Overridden to invoke <refresh> before the redraw.\n */\nmxEdgeSegmentHandler.prototype.redraw = function()\n{\n\tthis.refresh();\n\tmxEdgeHandler.prototype.redraw.apply(this, arguments);\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates the position of the custom bends.\n */\nmxEdgeSegmentHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tif (this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tvar pts = this.getCurrentPoints();\n\t\t\n\t\tif (pts != null && pts.length > 1)\n\t\t{\n\t\t\tvar straight = false;\n\t\t\t\n\t\t\t// Puts handle in the center of straight edges\n\t\t\tif (pts.length == 4 && Math.round(pts[1].x - pts[2].x) == 0 && Math.round(pts[1].y - pts[2].y) == 0)\n\t\t\t{\n\t\t\t\tstraight = true;\n\t\t\t\t\n\t\t\t\tif (Math.round(pts[0].y - pts[pts.length - 1].y) == 0)\n\t\t\t\t{\n\t\t\t\t\tvar cx = pts[0].x + (pts[pts.length - 1].x - pts[0].x) / 2;\n\t\t\t\t\tpts[1] = new mxPoint(cx, pts[1].y);\n\t\t\t\t\tpts[2] = new mxPoint(cx, pts[2].y);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar cy = pts[0].y + (pts[pts.length - 1].y - pts[0].y) / 2;\n\t\t\t\t\tpts[1] = new mxPoint(pts[1].x, cy);\n\t\t\t\t\tpts[2] = new mxPoint(pts[2].x, cy);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t\t{\n\t\t\t\tif (this.bends[i + 1] != null)\n\t\t\t\t{\n\t\t \t\t\tvar p0 = pts[i];\n\t \t\t\t\tvar pe = pts[i + 1];\n\t\t\t \t\tvar pt = new mxPoint(p0.x + (pe.x - p0.x) / 2, p0.y + (pe.y - p0.y) / 2);\n\t\t\t \t\tvar b = this.bends[i + 1].bounds;\n\t\t\t \t\tthis.bends[i + 1].bounds = new mxRectangle(Math.floor(pt.x - b.width / 2),\n\t\t\t \t\t\t\tMath.floor(pt.y - b.height / 2), b.width, b.height);\n\t\t\t\t \tthis.bends[i + 1].redraw();\n\t\t\t\t \t\n\t\t\t\t \tif (this.manageLabelHandle)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.checkLabelHandle(this.bends[i + 1].bounds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (straight)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(this.bends[1].node, this.virtualBendOpacity);\n\t\t\t\tmxUtils.setOpacity(this.bends[3].node, this.virtualBendOpacity);\n\t\t\t}\n\t\t}\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxKeyHandler\n *\n * Event handler that listens to keystroke events. This is not a singleton,\n * however, it is normally only required once if the target is the document\n * element (default).\n * \n * This handler installs a key event listener in the topmost DOM node and\n * processes all events that originate from descandants of <mxGraph.container>\n * or from the topmost DOM node. The latter means that all unhandled keystrokes\n * are handled by this object regardless of the focused state of the <graph>.\n * \n * Example:\n * \n * The following example creates a key handler that listens to the delete key\n * (46) and deletes the selection cells if the graph is enabled.\n * \n * (code)\n * var keyHandler = new mxKeyHandler(graph);\n * keyHandler.bindKey(46, function(evt)\n * {\n *   if (graph.isEnabled())\n *   {\n *     graph.removeCells();\n *   }\n * });\n * (end)\n * \n * Keycodes:\n * \n * See http://tinyurl.com/yp8jgl or http://tinyurl.com/229yqw for a list of\n * keycodes or install a key event listener into the document element and print\n * the key codes of the respective events to the console.\n * \n * To support the Command key and the Control key on the Mac, the following\n * code can be used.\n *\n * (code)\n * keyHandler.getFunction = function(evt)\n * {\n *   if (evt != null)\n *   {\n *     return (mxEvent.isControlDown(evt) || (mxClient.IS_MAC && evt.metaKey)) ? this.controlKeys[evt.keyCode] : this.normalKeys[evt.keyCode];\n *   }\n *   \n *   return null;\n * };\n * (end)\n * \n * Constructor: mxKeyHandler\n *\n * Constructs an event handler that executes functions bound to specific\n * keystrokes.\n * \n * Parameters:\n * \n * graph - Reference to the associated <mxGraph>.\n * target - Optional reference to the event target. If null, the document\n * element is used as the event target, that is, the object where the key\n * event listener is installed.\n */\nfunction mxKeyHandler(graph, target)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.target = target || document.documentElement;\n\t\t\n\t\t// Creates the arrays to map from keycodes to functions\n\t\tthis.normalKeys = [];\n\t\tthis.shiftKeys = [];\n\t\tthis.controlKeys = [];\n\t\tthis.controlShiftKeys = [];\n\t\t\n\t\tthis.keydownHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.keyDown(evt);\n\t\t});\n\n\t\t// Installs the keystroke listener in the target\n\t\tmxEvent.addListener(this.target, 'keydown', this.keydownHandler);\n\t\t\n\t\t// Automatically deallocates memory in IE\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload',\n\t\t\t\tmxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tthis.destroy();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the <mxGraph> associated with this handler.\n */\nmxKeyHandler.prototype.graph = null;\n\n/**\n * Variable: target\n * \n * Reference to the target DOM, that is, the DOM node where the key event\n * listeners are installed.\n */\nmxKeyHandler.prototype.target = null;\n\n/**\n * Variable: normalKeys\n * \n * Maps from keycodes to functions for non-pressed control keys.\n */\nmxKeyHandler.prototype.normalKeys = null;\n\n/**\n * Variable: shiftKeys\n * \n * Maps from keycodes to functions for pressed shift keys.\n */\nmxKeyHandler.prototype.shiftKeys = null;\n\n/**\n * Variable: controlKeys\n * \n * Maps from keycodes to functions for pressed control keys.\n */\nmxKeyHandler.prototype.controlKeys = null;\n\n/**\n * Variable: controlShiftKeys\n * \n * Maps from keycodes to functions for pressed control and shift keys.\n */\nmxKeyHandler.prototype.controlShiftKeys = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxKeyHandler.prototype.enabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation returns\n * <enabled>.\n */\nmxKeyHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling by updating <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxKeyHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: bindKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control key is not pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindKey = function(code, funct)\n{\n\tthis.normalKeys[code] = funct;\n};\n\n/**\n * Function: bindShiftKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the shift key is pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindShiftKey = function(code, funct)\n{\n\tthis.shiftKeys[code] = funct;\n};\n\n/**\n * Function: bindControlKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control key is pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindControlKey = function(code, funct)\n{\n\tthis.controlKeys[code] = funct;\n};\n\n/**\n * Function: bindControlShiftKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control and shift key are pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindControlShiftKey = function(code, funct)\n{\n\tthis.controlShiftKeys[code] = funct;\n};\n\n/**\n * Function: isControlDown\n * \n * Returns true if the control key is pressed. This uses <mxEvent.isControlDown>.\n * \n * Parameters:\n * \n * evt - Key event whose control key pressed state should be returned.\n */\nmxKeyHandler.prototype.isControlDown = function(evt)\n{\n\treturn mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: getFunction\n * \n * Returns the function associated with the given key event or null if no\n * function is associated with the given event.\n * \n * Parameters:\n * \n * evt - Key event whose associated function should be returned.\n */\nmxKeyHandler.prototype.getFunction = function(evt)\n{\n\tif (evt != null && !mxEvent.isAltDown(evt))\n\t{\n\t\tif (this.isControlDown(evt))\n\t\t{\n\t\t\tif (mxEvent.isShiftDown(evt))\n\t\t\t{\n\t\t\t\treturn this.controlShiftKeys[evt.keyCode];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.controlKeys[evt.keyCode];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxEvent.isShiftDown(evt))\n\t\t\t{\n\t\t\t\treturn this.shiftKeys[evt.keyCode];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.normalKeys[evt.keyCode];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\t\n/**\n * Function: isGraphEvent\n * \n * Returns true if the event should be processed by this handler, that is,\n * if the event source is either the target, one of its direct children, a\n * descendant of the <mxGraph.container>, or the <mxGraph.cellEditor> of the\n * <graph>.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isGraphEvent = function(evt)\n{\n\tvar source = mxEvent.getSource(evt);\n\t\n\t// Accepts events from the target object or\n\t// in-place editing inside graph\n\tif ((source == this.target || source.parentNode == this.target) ||\n\t\t(this.graph.cellEditor != null && this.graph.cellEditor.isEventSource(evt)))\n\t{\n\t\treturn true;\n\t}\n\t\n\t// Accepts events from inside the container\n\treturn mxUtils.isAncestorNode(this.graph.container, source);\n};\n\n/**\n * Function: keyDown\n * \n * Handles the event by invoking the function bound to the respective keystroke\n * if <isEnabledForEvent> returns true for the given event and if\n * <isEventIgnored> returns false, except for escape for which\n * <isEventIgnored> is not invoked.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.keyDown = function(evt)\n{\n\tif (this.isEnabledForEvent(evt))\n\t{\n\t\t// Cancels the editing if escape is pressed\n\t\tif (evt.keyCode == 27 /* Escape */)\n\t\t{\n\t\t\tthis.escape(evt);\n\t\t}\n\t\t\n\t\t// Invokes the function for the keystroke\n\t\telse if (!this.isEventIgnored(evt))\n\t\t{\n\t\t\tvar boundFunction = this.getFunction(evt);\n\t\t\t\n\t\t\tif (boundFunction != null)\n\t\t\t{\n\t\t\t\tboundFunction(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isEnabledForEvent\n * \n * Returns true if the given event should be handled. <isEventIgnored> is\n * called later if the event is not an escape key stroke, in which case\n * <escape> is called. This implementation returns true if <isEnabled>\n * returns true for both, this handler and <graph>, if the event is not\n * consumed and if <isGraphEvent> returns true.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isEnabledForEvent = function(evt)\n{\n\treturn (this.graph.isEnabled() && !mxEvent.isConsumed(evt) &&\n\t\tthis.isGraphEvent(evt) && this.isEnabled());\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the given keystroke should be ignored. This returns\n * graph.isEditing().\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isEventIgnored = function(evt)\n{\n\treturn this.graph.isEditing();\n};\n\n/**\n * Function: escape\n * \n * Hook to process ESCAPE keystrokes. This implementation invokes\n * <mxGraph.stopEditing> to cancel the current editing, connecting\n * and/or other ongoing modifications.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke. Possible keycode in this\n * case is 27 (ESCAPE).\n */\nmxKeyHandler.prototype.escape = function(evt)\n{\n\tif (this.graph.isEscapeEnabled())\n\t{\n\t\tthis.graph.escape(evt);\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its references into the DOM. This does\n * normally not need to be called, it is called automatically when the\n * window unloads (in IE).\n */\nmxKeyHandler.prototype.destroy = function()\n{\n\tif (this.target != null && this.keydownHandler != null)\n\t{\n\t\tmxEvent.removeListener(this.target, 'keydown', this.keydownHandler);\n\t\tthis.keydownHandler = null;\n\t}\n\t\n\tthis.target = null;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxTooltipHandler\n * \n * Graph event handler that displays tooltips. <mxGraph.getTooltip> is used to\n * get the tooltip for a cell or handle. This handler is built-into\n * <mxGraph.tooltipHandler> and enabled using <mxGraph.setTooltips>.\n *\n * Example:\n * \n * (code>\n * new mxTooltipHandler(graph);\n * (end)\n * \n * Constructor: mxTooltipHandler\n * \n * Constructs an event handler that displays tooltips with the specified\n * delay (in milliseconds). If no delay is specified then a default delay\n * of 500 ms (0.5 sec) is used.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * delay - Optional delay in milliseconds.\n */\nfunction mxTooltipHandler(graph, delay)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.delay = delay || 500;\n\t\tthis.graph.addMouseListener(this);\n\t}\n};\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the tooltip and its shadow. Default is 10005.\n */\nmxTooltipHandler.prototype.zIndex = 10005;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxTooltipHandler.prototype.graph = null;\n\n/**\n * Variable: delay\n * \n * Delay to show the tooltip in milliseconds. Default is 500.\n */\nmxTooltipHandler.prototype.delay = null;\n\n/**\n * Variable: ignoreTouchEvents\n * \n * Specifies if touch and pen events should be ignored. Default is true.\n */\nmxTooltipHandler.prototype.ignoreTouchEvents = true;\n\n/**\n * Variable: hideOnHover\n * \n * Specifies if the tooltip should be hidden if the mouse is moved over the\n * current cell. Default is false.\n */\nmxTooltipHandler.prototype.hideOnHover = false;\n\n/**\n * Variable: destroyed\n * \n * True if this handler was destroyed using <destroy>.\n */\nmxTooltipHandler.prototype.destroyed = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxTooltipHandler.prototype.enabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxTooltipHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n */\nmxTooltipHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isHideOnHover\n * \n * Returns <hideOnHover>.\n */\nmxTooltipHandler.prototype.isHideOnHover = function()\n{\n\treturn this.hideOnHover;\n};\n\n/**\n * Function: setHideOnHover\n * \n * Sets <hideOnHover>.\n */\nmxTooltipHandler.prototype.setHideOnHover = function(value)\n{\n\tthis.hideOnHover = value;\n};\n\n/**\n * Function: init\n * \n * Initializes the DOM nodes required for this tooltip handler.\n */\nmxTooltipHandler.prototype.init = function()\n{\n\tif (document.body != null)\n\t{\n\t\tthis.div = document.createElement('div');\n\t\tthis.div.className = 'mxTooltip';\n\t\tthis.div.style.visibility = 'hidden';\n\n\t\tdocument.body.appendChild(this.div);\n\n\t\tmxEvent.addGestureListeners(this.div, mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.hideTooltip();\n\t\t}));\n\t}\n};\n\n/**\n * Function: getStateForEvent\n * \n * Returns the <mxCellState> to be used for showing a tooltip for this event.\n */\nmxTooltipHandler.prototype.getStateForEvent = function(me)\n{\n\treturn me.getState();\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a rubberband selection. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxTooltipHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.reset(me, false);\n\tthis.hideTooltip();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the rubberband selection.\n */\nmxTooltipHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (me.getX() != this.lastX || me.getY() != this.lastY)\n\t{\n\t\tthis.reset(me, true);\n\t\tvar state = this.getStateForEvent(me);\n\t\t\n\t\tif (this.isHideOnHover() || state != this.state || (me.getSource() != this.node &&\n\t\t\t(!this.stateSource || (state != null && this.stateSource ==\n\t\t\t(me.isSource(state.shape) || !me.isSource(state.text))))))\n\t\t{\n\t\t\tthis.hideTooltip();\n\t\t}\n\t}\n\t\n\tthis.lastX = me.getX();\n\tthis.lastY = me.getY();\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by resetting the tooltip timer or hiding the existing\n * tooltip.\n */\nmxTooltipHandler.prototype.mouseUp = function(sender, me)\n{\n\tthis.reset(me, true);\n\tthis.hideTooltip();\n};\n\n\n/**\n * Function: resetTimer\n * \n * Resets the timer.\n */\nmxTooltipHandler.prototype.resetTimer = function()\n{\n\tif (this.thread != null)\n\t{\n\t\twindow.clearTimeout(this.thread);\n\t\tthis.thread = null;\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets and/or restarts the timer to trigger the display of the tooltip.\n */\nmxTooltipHandler.prototype.reset = function(me, restart, state)\n{\n\tif (!this.ignoreTouchEvents || mxEvent.isMouseEvent(me.getEvent()))\n\t{\n\t\tthis.resetTimer();\n\t\tstate = (state != null) ? state : this.getStateForEvent(me);\n\t\t\n\t\tif (restart && this.isEnabled() && state != null && (this.div == null ||\n\t\t\tthis.div.style.visibility == 'hidden'))\n\t\t{\n\t\t\tvar node = me.getSource();\n\t\t\tvar x = me.getX();\n\t\t\tvar y = me.getY();\n\t\t\tvar stateSource = me.isSource(state.shape) || me.isSource(state.text);\n\t\n\t\t\tthis.thread = window.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tif (!this.graph.isEditing() && !this.graph.popupMenuHandler.isMenuShowing() && !this.graph.isMouseDown)\n\t\t\t\t{\n\t\t\t\t\t// Uses information from inside event cause using the event at\n\t\t\t\t\t// this (delayed) point in time is not possible in IE as it no\n\t\t\t\t\t// longer contains the required information (member not found)\n\t\t\t\t\tvar tip = this.graph.getTooltip(state, node, x, y);\n\t\t\t\t\tthis.show(tip, x, y);\n\t\t\t\t\tthis.state = state;\n\t\t\t\t\tthis.node = node;\n\t\t\t\t\tthis.stateSource = stateSource;\n\t\t\t\t}\n\t\t\t}), this.delay);\n\t\t}\n\t}\n};\n\n/**\n * Function: hide\n * \n * Hides the tooltip and resets the timer.\n */\nmxTooltipHandler.prototype.hide = function()\n{\n\tthis.resetTimer();\n\tthis.hideTooltip();\n};\n\n/**\n * Function: hideTooltip\n * \n * Hides the tooltip.\n */\nmxTooltipHandler.prototype.hideTooltip = function()\n{\n\tif (this.div != null)\n\t{\n\t\tthis.div.style.visibility = 'hidden';\n\t\tthis.div.innerHTML = '';\n\t}\n};\n\n/**\n * Function: show\n * \n * Shows the tooltip for the specified cell and optional index at the\n * specified location (with a vertical offset of 10 pixels).\n */\nmxTooltipHandler.prototype.show = function(tip, x, y)\n{\n\tif (!this.destroyed && tip != null && tip.length > 0)\n\t{\n\t\t// Initializes the DOM nodes if required\n\t\tif (this.div == null)\n\t\t{\n\t\t\tthis.init();\n\t\t}\n\t\t\n\t\tvar origin = mxUtils.getScrollOrigin();\n\n\t\tthis.div.style.zIndex = this.zIndex;\n\t\tthis.div.style.left = (x + origin.x) + 'px';\n\t\tthis.div.style.top = (y + mxConstants.TOOLTIP_VERTICAL_OFFSET +\n\t\t\torigin.y) + 'px';\n\n\t\tif (!mxUtils.isNode(tip))\n\t\t{\t\n\t\t\tthis.div.innerHTML = tip.replace(/\\n/g, '<br>');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.div.innerHTML = '';\n\t\t\tthis.div.appendChild(tip);\n\t\t}\n\t\t\n\t\tthis.div.style.visibility = '';\n\t\tmxUtils.fit(this.div);\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxTooltipHandler.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.graph.removeMouseListener(this);\n\t\tmxEvent.release(this.div);\n\t\t\n\t\tif (this.div != null && this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.destroyed = true;\n\t\tthis.div = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellTracker\n * \n * Event handler that highlights cells. Inherits from <mxCellMarker>.\n * \n * Example:\n * \n * (code)\n * new mxCellTracker(graph, '#00FF00');\n * (end)\n * \n * For detecting dragEnter, dragOver and dragLeave on cells, the following\n * code can be used:\n * \n * (code)\n * graph.addMouseListener(\n * {\n *   cell: null,\n *   mouseDown: function(sender, me) { },\n *   mouseMove: function(sender, me)\n *   {\n *     var tmp = me.getCell();\n *     \n *     if (tmp != this.cell)\n *     {\n *       if (this.cell != null)\n *       {\n *         this.dragLeave(me.getEvent(), this.cell);\n *       }\n *       \n *       this.cell = tmp;\n *       \n *       if (this.cell != null)\n *       {\n *         this.dragEnter(me.getEvent(), this.cell);\n *       }\n *     }\n *     \n *     if (this.cell != null)\n *     {\n *       this.dragOver(me.getEvent(), this.cell);\n *     }\n *   },\n *   mouseUp: function(sender, me) { },\n *   dragEnter: function(evt, cell)\n *   {\n *     mxLog.debug('dragEnter', cell.value);\n *   },\n *   dragOver: function(evt, cell)\n *   {\n *     mxLog.debug('dragOver', cell.value);\n *   },\n *   dragLeave: function(evt, cell)\n *   {\n *     mxLog.debug('dragLeave', cell.value);\n *   }\n * });\n * (end)\n * \n * Constructor: mxCellTracker\n * \n * Constructs an event handler that highlights cells.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * color - Color of the highlight. Default is blue.\n * funct - Optional JavaScript function that is used to override\n * <mxCellMarker.getCell>.\n */\nfunction mxCellTracker(graph, color, funct)\n{\n\tmxCellMarker.call(this, graph, color);\n\n\tthis.graph.addMouseListener(this);\n\t\n\tif (funct != null)\n\t{\n\t\tthis.getCell = funct;\n\t}\n\t\n\t// Automatic deallocation of memory\n\tif (mxClient.IS_IE)\n\t{\n\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.destroy();\n\t\t}));\n\t}\n};\n\n/**\n * Extends mxCellMarker.\n */\nmxUtils.extend(mxCellTracker, mxCellMarker);\n\n/**\n * Function: mouseDown\n * \n * Ignores the event. The event is not consumed.\n */\nmxCellTracker.prototype.mouseDown = function(sender, me) { };\n\n/**\n * Function: mouseMove\n * \n * Handles the event by highlighting the cell under the mousepointer if it\n * is over the hotspot region of the cell.\n */\nmxCellTracker.prototype.mouseMove = function(sender, me)\n{\n\tif (this.isEnabled())\n\t{\n\t\tthis.process(me);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by reseting the highlight.\n */\nmxCellTracker.prototype.mouseUp = function(sender, me) { };\n\n/**\n * Function: destroy\n * \n * Destroys the object and all its resources and DOM nodes. This doesn't\n * normally need to be called. It is called automatically when the window\n * unloads.\n */\nmxCellTracker.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\n\t\tthis.graph.removeMouseListener(this);\n\t\tmxCellMarker.prototype.destroy.apply(this);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellHighlight\n * \n * A helper class to highlight cells. Here is an example for a given cell.\n * \n * (code)\n * var highlight = new mxCellHighlight(graph, '#ff0000', 2);\n * highlight.highlight(graph.view.getState(cell)));\n * (end)\n * \n * Constructor: mxCellHighlight\n * \n * Constructs a cell highlight.\n */\nfunction mxCellHighlight(graph, highlightColor, strokeWidth, dashed)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.highlightColor = (highlightColor != null) ? highlightColor : mxConstants.DEFAULT_VALID_COLOR;\n\t\tthis.strokeWidth = (strokeWidth != null) ? strokeWidth : mxConstants.HIGHLIGHT_STROKEWIDTH;\n\t\tthis.dashed = (dashed != null) ? dashed : false;\n\t\tthis.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\n\t\t// Updates the marker if the graph changes\n\t\tthis.repaintHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Updates reference to state\n\t\t\tif (this.state != null)\n\t\t\t{\n\t\t\t\tvar tmp = this.graph.view.getState(this.state.cell);\n\t\t\t\t\n\t\t\t\tif (tmp == null)\n\t\t\t\t{\n\t\t\t\t\tthis.hide();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.state = tmp;\n\t\t\t\t\tthis.repaint();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.SCALE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.repaintHandler);\n\t\t\n\t\t// Hides the marker if the current root changes\n\t\tthis.resetHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.hide();\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.DOWN, this.resetHandler);\n\t\tthis.graph.getView().addListener(mxEvent.UP, this.resetHandler);\n\t}\n};\n\n/**\n * Variable: keepOnTop\n * \n * Specifies if the highlights should appear on top of everything\n * else in the overlay pane. Default is false.\n */\nmxCellHighlight.prototype.keepOnTop = false;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellHighlight.prototype.graph = true;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState>.\n */\nmxCellHighlight.prototype.state = null;\n\n/**\n * Variable: spacing\n * \n * Specifies the spacing between the highlight for vertices and the vertex.\n * Default is 2.\n */\nmxCellHighlight.prototype.spacing = 2;\n\n/**\n * Variable: resetHandler\n * \n * Holds the handler that automatically invokes reset if the highlight\n * should be hidden.\n */\nmxCellHighlight.prototype.resetHandler = null;\n\n/**\n * Function: setHighlightColor\n * \n * Sets the color of the rectangle used to highlight drop targets.\n * \n * Parameters:\n * \n * color - String that represents the new highlight color.\n */\nmxCellHighlight.prototype.setHighlightColor = function(color)\n{\n\tthis.highlightColor = color;\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n/**\n * Function: drawHighlight\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.drawHighlight = function()\n{\n\tthis.shape = this.createShape();\n\tthis.repaint();\n\n\tif (!this.keepOnTop && this.shape.node.parentNode.firstChild != this.shape.node)\n\t{\n\t\tthis.shape.node.parentNode.insertBefore(this.shape.node, this.shape.node.parentNode.firstChild);\n\t}\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.createShape = function()\n{\n\tvar shape = this.graph.cellRenderer.createShape(this.state);\n\t\n\tshape.svgStrokeTolerance = this.graph.tolerance;\n\tshape.points = this.state.absolutePoints;\n\tshape.apply(this.state);\n\tshape.stroke = this.highlightColor;\n\tshape.opacity = this.opacity;\n\tshape.isDashed = this.dashed;\n\tshape.isShadow = false;\n\t\n\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tshape.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(shape.node, this.graph, this.state);\n\t\n\tif (this.graph.dialect != mxConstants.DIALECT_SVG)\n\t{\n\t\tshape.pointerEvents = false;\n\t}\n\telse\n\t{\n\t\tshape.svgPointerEvents = 'stroke';\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: repaint\n * \n * Updates the highlight after a change of the model or view.\n */\nmxCellHighlight.prototype.getStrokeWidth = function(state)\n{\n\treturn this.strokeWidth;\n};\n\n/**\n * Function: repaint\n * \n * Updates the highlight after a change of the model or view.\n */\nmxCellHighlight.prototype.repaint = function()\n{\n\tif (this.state != null && this.shape != null)\n\t{\n\t\tthis.shape.scale = this.state.view.scale;\n\t\t\n\t\tif (this.graph.model.isEdge(this.state.cell))\n\t\t{\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth();\n\t\t\tthis.shape.points = this.state.absolutePoints;\n\t\t\tthis.shape.outline = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.shape.bounds = new mxRectangle(this.state.x - this.spacing, this.state.y - this.spacing,\n\t\t\t\t\tthis.state.width + 2 * this.spacing, this.state.height + 2 * this.spacing);\n\t\t\tthis.shape.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth() / this.state.view.scale;\n\t\t\tthis.shape.outline = true;\n\t\t}\n\n\t\t// Uses cursor from shape in highlight\n\t\tif (this.state.shape != null)\n\t\t{\n\t\t\tthis.shape.setCursor(this.state.shape.getCursor());\n\t\t}\n\t\t\n\t\t// Workaround for event transparency in VML with transparent color\n\t\t// is to use a non-transparent color with near zero opacity\n\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t{\n\t\t\tif (this.shape.stroke == 'transparent')\n\t\t\t{\n\t\t\t\t// KNOWN: Quirks mode does not seem to catch events if\n\t\t\t\t// we do not force an update of the DOM via a change such\n\t\t\t\t// as mxLog.debug. Since IE6 is EOL we do not add a fix.\n\t\t\t\tthis.shape.stroke = 'white';\n\t\t\t\tthis.shape.opacity = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.shape.opacity = this.opacity;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.shape.redraw();\n\t}\n};\n\n/**\n * Function: hide\n * \n * Resets the state of the cell marker.\n */\nmxCellHighlight.prototype.hide = function()\n{\n\tthis.highlight(null);\n};\n\n/**\n * Function: mark\n * \n * Marks the <markedState> and fires a <mark> event.\n */\nmxCellHighlight.prototype.highlight = function(state)\n{\n\tif (this.state != state)\n\t{\n\t\tif (this.shape != null)\n\t\t{\n\t\t\tthis.shape.destroy();\n\t\t\tthis.shape = null;\n\t\t}\n\n\t\tthis.state = state;\n\t\t\n\t\tif (this.state != null)\n\t\t{\n\t\t\tthis.drawHighlight();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHighlightAt\n * \n * Returns true if this highlight is at the given position.\n */\nmxCellHighlight.prototype.isHighlightAt = function(x, y)\n{\n\tvar hit = false;\n\t\n\t// Quirks mode is currently not supported as it used a different coordinate system\n\tif (this.shape != null && document.elementFromPoint != null && !mxClient.IS_QUIRKS)\n\t{\n\t\tvar elt = document.elementFromPoint(x, y);\n\n\t\twhile (elt != null)\n\t\t{\n\t\t\tif (elt == this.shape.node)\n\t\t\t{\n\t\t\t\thit = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\t\n\treturn hit;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxCellHighlight.prototype.destroy = function()\n{\n\tthis.graph.getView().removeListener(this.resetHandler);\n\tthis.graph.getView().removeListener(this.repaintHandler);\n\tthis.graph.getModel().removeListener(this.repaintHandler);\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultKeyHandler\n *\n * Binds keycodes to actionnames in an editor. This aggregates an internal\n * <handler> and extends the implementation of <mxKeyHandler.escape> to not\n * only cancel the editing, but also hide the properties dialog and fire an\n * <mxEditor.escape> event via <editor>. An instance of this class is created\n * by <mxEditor> and stored in <mxEditor.keyHandler>.\n * \n * Example:\n * \n * Bind the delete key to the delete action in an existing editor.\n * \n * (code)\n * var keyHandler = new mxDefaultKeyHandler(editor);\n * keyHandler.bindAction(46, 'delete');\n * (end)\n *\n * Codec:\n * \n * This class uses the <mxDefaultKeyHandlerCodec> to read configuration\n * data into an existing instance. See <mxDefaultKeyHandlerCodec> for a\n * description of the configuration format.\n * \n * Keycodes:\n * \n * See <mxKeyHandler>.\n * \n * An <mxEvent.ESCAPE> event is fired via the editor if the escape key is\n * pressed.\n * \n * Constructor: mxDefaultKeyHandler\n *\n * Constructs a new default key handler for the <mxEditor.graph> in the\n * given <mxEditor>. (The editor may be null if a prototypical instance for\n * a <mxDefaultKeyHandlerCodec> is created.)\n * \n * Parameters:\n * \n * editor - Reference to the enclosing <mxEditor>.\n */\nfunction mxDefaultKeyHandler(editor)\n{\n\tif (editor != null)\n\t{\n\t\tthis.editor = editor;\n\t\tthis.handler = new mxKeyHandler(editor.graph);\n\t\t\n\t\t// Extends the escape function of the internal key\n\t\t// handle to hide the properties dialog and fire\n\t\t// the escape event via the editor instance\n\t\tvar old = this.handler.escape;\n\t\t\n\t\tthis.handler.escape = function(evt)\n\t\t{\n\t\t\told.apply(this, arguments);\n\t\t\teditor.hideProperties();\n\t\t\teditor.fireEvent(new mxEventObject(mxEvent.ESCAPE, 'event', evt));\n\t\t};\n\t}\n};\n\t\n/**\n * Variable: editor\n *\n * Reference to the enclosing <mxEditor>.\n */\nmxDefaultKeyHandler.prototype.editor = null;\n\n/**\n * Variable: handler\n *\n * Holds the <mxKeyHandler> for key event handling.\n */\nmxDefaultKeyHandler.prototype.handler = null;\n\n/**\n * Function: bindAction\n *\n * Binds the specified keycode to the given action in <editor>. The\n * optional control flag specifies if the control key must be pressed\n * to trigger the action.\n *\n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * action - Name of the action to execute in <editor>.\n * control - Optional boolean that specifies if control must be pressed.\n * Default is false.\n */\nmxDefaultKeyHandler.prototype.bindAction = function (code, action, control)\n{\n\tvar keyHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.execute(action);\n\t});\n\n\t// Binds the function to control-down keycode\n\tif (control)\n\t{\n\t\tthis.handler.bindControlKey(code, keyHandler);\n\t}\n\n\t// Binds the function to the normal keycode\n\telse\n\t{\n\t\tthis.handler.bindKey(code, keyHandler);\t\t\t\t\n\t}\n};\n\n/**\n * Function: destroy\n *\n * Destroys the <handler> associated with this object. This does normally\n * not need to be called, the <handler> is destroyed automatically when the\n * window unloads (in IE) by <mxEditor>.\n */\nmxDefaultKeyHandler.prototype.destroy = function ()\n{\n\tthis.handler.destroy();\n\tthis.handler = null;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultPopupMenu\n *\n * Creates popupmenus for mouse events. This object holds an XML node\n * which is a description of the popup menu to be created. In\n * <createMenu>, the configuration is applied to the context and\n * the resulting menu items are added to the menu dynamically. See\n * <createMenu> for a description of the configuration format.\n * \n * This class does not create the DOM nodes required for the popup menu, it\n * only parses an XML description to invoke the respective methods on an\n * <mxPopupMenu> each time the menu is displayed.\n *\n * Codec:\n * \n * This class uses the <mxDefaultPopupMenuCodec> to read configuration\n * data into an existing instance, however, the actual parsing is done\n * by this class during program execution, so the format is described\n * below.\n * \n * Constructor: mxDefaultPopupMenu\n *\n * Constructs a new popupmenu-factory based on given configuration.\n *\n * Paramaters:\n *\n * config - XML node that contains the configuration data.\n */\nfunction mxDefaultPopupMenu(config)\n{\n\tthis.config = config;\n};\n\n/**\n * Variable: imageBasePath\n *\n * Base path for all icon attributes in the config. Default is null.\n */\nmxDefaultPopupMenu.prototype.imageBasePath = null;\n\n/**\n * Variable: config\n *\n * XML node used as the description of new menu items. This node is\n * used in <createMenu> to dynamically create the menu items if their\n * respective conditions evaluate to true for the given arguments.\n */\nmxDefaultPopupMenu.prototype.config = null;\n\n/**\n * Function: createMenu\n *\n * This function is called from <mxEditor> to add items to the\n * given menu based on <config>. The config is a sequence of\n * the following nodes and attributes.\n *\n * Child Nodes: \n *\n * add - Adds a new menu item. See below for attributes.\n * separator - Adds a separator. No attributes.\n * condition - Adds a custom condition. Name attribute.\n * \n * The add-node may have a child node that defines a function to be invoked\n * before the action is executed (or instead of an action to be executed).\n *\n * Attributes:\n *\n * as - Resource key for the label (needs entry in property file).\n * action - Name of the action to execute in enclosing editor.\n * icon - Optional icon (relative/absolute URL).\n * iconCls - Optional CSS class for the icon.\n * if - Optional name of condition that must be true (see below).\n * enabled-if - Optional name of condition that specifies if the menu item\n * should be enabled.\n * name - Name of custom condition. Only for condition nodes.\n *\n * Conditions:\n *\n * nocell - No cell under the mouse.\n * ncells - More than one cell selected.\n * notRoot - Drilling position is other than home.\n * cell - Cell under the mouse.\n * notEmpty - Exactly one cell with children under mouse.\n * expandable - Exactly one expandable cell under mouse.\n * collapsable - Exactly one collapsable cell under mouse.\n * validRoot - Exactly one cell which is a possible root under mouse.\n * swimlane - Exactly one cell which is a swimlane under mouse.\n *\n * Example:\n *\n * To add a new item for a given action to the popupmenu:\n * \n * (code)\n * <mxDefaultPopupMenu as=\"popupHandler\">\n *   <add as=\"delete\" action=\"delete\" icon=\"images/delete.gif\" if=\"cell\"/>\n * </mxDefaultPopupMenu>\n * (end)\n * \n * To add a new item for a custom function:\n * \n * (code)\n * <mxDefaultPopupMenu as=\"popupHandler\">\n *   <add as=\"action1\"><![CDATA[\n *\t\tfunction (editor, cell, evt)\n *\t\t{\n *\t\t\teditor.execute('action1', cell, 'myArg');\n *\t\t}\n *   ]]></add>\n * </mxDefaultPopupMenu>\n * (end)\n * \n * The above example invokes action1 with an additional third argument via\n * the editor instance. The third argument is passed to the function that\n * defines action1. If the add-node has no action-attribute, then only the\n * function defined in the text content is executed, otherwise first the\n * function and then the action defined in the action-attribute is\n * executed. The function in the text content has 3 arguments, namely the\n * <mxEditor> instance, the <mxCell> instance under the mouse, and the\n * native mouse event.\n *\n * Custom Conditions:\n *\n * To add a new condition for popupmenu items:\n *  \n * (code)\n * <condition name=\"condition1\"><![CDATA[\n *   function (editor, cell, evt)\n *   {\n *     return cell != null;\n *   }\n * ]]></condition>\n * (end)\n * \n * The new condition can then be used in any item as follows:\n * \n * (code)\n * <add as=\"action1\" action=\"action1\" icon=\"action1.gif\" if=\"condition1\"/>\n * (end)\n * \n * The order in which the items and conditions appear is not significant as\n * all connditions are evaluated before any items are created.\n * \n * Parameters:\n *\n * editor - Enclosing <mxEditor> instance.\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * cell - Optional <mxCell> which is under the mousepointer.\n * evt - Optional mouse event which triggered the menu. \n */\nmxDefaultPopupMenu.prototype.createMenu = function(editor, menu, cell, evt)\n{\n\tif (this.config != null)\n\t{\n\t\tvar conditions = this.createConditions(editor, cell, evt);\n\t\tvar item = this.config.firstChild;\n\n\t\tthis.addItems(editor, menu, cell, evt, conditions, item, null);\n\t}\n};\n\n/**\n * Function: addItems\n * \n * Recursively adds the given items and all of its children into the given menu.\n * \n * Parameters:\n *\n * editor - Enclosing <mxEditor> instance.\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * cell - Optional <mxCell> which is under the mousepointer.\n * evt - Optional mouse event which triggered the menu.\n * conditions - Array of names boolean conditions.\n * item - XML node that represents the current menu item.\n * parent - DOM node that represents the parent menu item.\n */\nmxDefaultPopupMenu.prototype.addItems = function(editor, menu, cell, evt, conditions, item, parent)\n{\n\tvar addSeparator = false;\n\t\n\twhile (item != null)\n\t{\n\t\tif (item.nodeName == 'add')\n\t\t{\n\t\t\tvar condition = item.getAttribute('if');\n\t\t\t\n\t\t\tif (condition == null || conditions[condition])\n\t\t\t{\n\t\t\t\tvar as = item.getAttribute('as');\n\t\t\t\tas = mxResources.get(as) || as;\n\t\t\t\tvar funct = mxUtils.eval(mxUtils.getTextContent(item));\n\t\t\t\tvar action = item.getAttribute('action');\n\t\t\t\tvar icon = item.getAttribute('icon');\n\t\t\t\tvar iconCls = item.getAttribute('iconCls');\n\t\t\t\tvar enabledCond = item.getAttribute('enabled-if');\n\t\t\t\tvar enabled = enabledCond == null || conditions[enabledCond];\n\t\t\t\t\n\t\t\t\tif (addSeparator)\n\t\t\t\t{\n\t\t\t\t\tmenu.addSeparator(parent);\n\t\t\t\t\taddSeparator = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (icon != null && this.imageBasePath)\n\t\t\t\t{\n\t\t\t\t\ticon = this.imageBasePath + icon;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar row = this.addAction(menu, editor, as, icon, funct, action, cell, parent, iconCls, enabled);\n\t\t\t\tthis.addItems(editor, menu, cell, evt, conditions, item.firstChild, row);\n\t\t\t}\n\t\t}\n\t\telse if (item.nodeName == 'separator')\n\t\t{\n\t\t\taddSeparator = true;\n\t\t}\n\t\t\n\t\titem = item.nextSibling;\n\t}\n};\n\n/**\n * Function: addAction\n *\n * Helper method to bind an action to a new menu item.\n * \n * Parameters:\n *\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * editor - Enclosing <mxEditor> instance.\n * lab - String that represents the label of the menu item.\n * icon - Optional URL that represents the icon of the menu item.\n * action - Optional name of the action to execute in the given editor.\n * funct - Optional function to execute before the optional action. The\n * function takes an <mxEditor>, the <mxCell> under the mouse and the\n * mouse event that triggered the call.\n * cell - Optional <mxCell> to use as an argument for the action.\n * parent - DOM node that represents the parent menu item.\n * iconCls - Optional CSS class for the menu icon.\n * enabled - Optional boolean that specifies if the menu item is enabled.\n * Default is true.\n */\nmxDefaultPopupMenu.prototype.addAction = function(menu, editor, lab, icon, funct, action, cell, parent, iconCls, enabled)\n{\n\tvar clickHandler = function(evt)\n\t{\n\t\tif (typeof(funct) == 'function')\n\t\t{\n\t\t\tfunct.call(editor, editor, cell, evt);\n\t\t}\n\t\t\n\t\tif (action != null)\n\t\t{\n\t\t\teditor.execute(action, cell, evt);\n\t\t}\n\t};\n\t\n\treturn menu.addItem(lab, icon, clickHandler, parent, iconCls, enabled);\n};\n\n/**\n * Function: createConditions\n * \n * Evaluates the default conditions for the given context.\n */\nmxDefaultPopupMenu.prototype.createConditions = function(editor, cell, evt)\n{\n\t// Creates array with conditions\n\tvar model = editor.graph.getModel();\n\tvar childCount = model.getChildCount(cell);\n\t\n\t// Adds some frequently used conditions\n\tvar conditions = [];\n\tconditions['nocell'] = cell == null;\n\tconditions['ncells'] = editor.graph.getSelectionCount() > 1;\n\tconditions['notRoot'] = model.getRoot() !=\n\t\tmodel.getParent(editor.graph.getDefaultParent());\n\tconditions['cell'] = cell != null;\n\t\n\tvar isCell = cell != null && editor.graph.getSelectionCount() == 1;\n\tconditions['nonEmpty'] = isCell && childCount > 0;\n\tconditions['expandable'] = isCell && editor.graph.isCellFoldable(cell, false);\n\tconditions['collapsable'] = isCell && editor.graph.isCellFoldable(cell, true);\n\tconditions['validRoot'] = isCell && editor.graph.isValidRoot(cell);\n\tconditions['emptyValidRoot'] = conditions['validRoot'] && childCount == 0;\n\tconditions['swimlane'] = isCell && editor.graph.isSwimlane(cell);\n\n\t// Evaluates dynamic conditions from config file\n\tvar condNodes = this.config.getElementsByTagName('condition');\n\t\n\tfor (var i=0; i<condNodes.length; i++)\n\t{\n\t\tvar funct = mxUtils.eval(mxUtils.getTextContent(condNodes[i]));\n\t\tvar name = condNodes[i].getAttribute('name');\n\t\t\n\t\tif (name != null && typeof(funct) == 'function')\n\t\t{\n\t\t\tconditions[name] = funct(editor, cell, evt);\n\t\t}\n\t}\n\t\n\treturn conditions;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultToolbar\n *\n * Toolbar for the editor. This modifies the state of the graph\n * or inserts new cells upon mouse clicks.\n * \n * Example:\n * \n * Create a toolbar with a button to copy the selection into the clipboard,\n * and a combo box with one action to paste the selection from the clipboard\n * into the graph.\n * \n * (code)\n * var toolbar = new mxDefaultToolbar(container, editor);\n * toolbar.addItem('Copy', null, 'copy');\n * \n * var combo = toolbar.addActionCombo('More actions...');\n * toolbar.addActionOption(combo, 'Paste', 'paste');\n * (end) \n *\n * Codec:\n * \n * This class uses the <mxDefaultToolbarCodec> to read configuration\n * data into an existing instance. See <mxDefaultToolbarCodec> for a\n * description of the configuration format.\n * \n * Constructor: mxDefaultToolbar\n *\n * Constructs a new toolbar for the given container and editor. The\n * container and editor may be null if a prototypical instance for a\n * <mxDefaultKeyHandlerCodec> is created.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n * editor - Reference to the enclosing <mxEditor>. \n */\nfunction mxDefaultToolbar(container, editor)\n{\n\tthis.editor = editor;\n\n\tif (container != null && editor != null)\n\t{\n\t\tthis.init(container);\n\t}\n};\n\t\n/**\n * Variable: editor\n *\n * Reference to the enclosing <mxEditor>.\n */\nmxDefaultToolbar.prototype.editor = null;\n\n/**\n * Variable: toolbar\n *\n * Holds the internal <mxToolbar>.\n */\nmxDefaultToolbar.prototype.toolbar = null;\n\n/**\n * Variable: resetHandler\n *\n * Reference to the function used to reset the <toolbar>.\n */\nmxDefaultToolbar.prototype.resetHandler = null;\n\n/**\n * Variable: spacing\n *\n * Defines the spacing between existing and new vertices in\n * gridSize units when a new vertex is dropped on an existing\n * cell. Default is 4 (40 pixels).\n */\nmxDefaultToolbar.prototype.spacing = 4;\n\n/**\n * Variable: connectOnDrop\n * \n * Specifies if elements should be connected if new cells are dropped onto\n * connectable elements. Default is false.\n */\nmxDefaultToolbar.prototype.connectOnDrop = false;\n\n/**\n * Variable: init\n * \n * Constructs the <toolbar> for the given container and installs a listener\n * that updates the <mxEditor.insertFunction> on <editor> if an item is\n * selected in the toolbar. This assumes that <editor> is not null.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n */\nmxDefaultToolbar.prototype.init = function(container)\n{\n\tif (container != null)\n\t{\n\t\tthis.toolbar = new mxToolbar(container);\n\t\t\n\t\t// Installs the insert function in the editor if an item is\n\t\t// selected in the toolbar\n\t\tthis.toolbar.addListener(mxEvent.SELECT, mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar funct = evt.getProperty('function');\n\t\t\t\n\t\t\tif (funct != null)\n\t\t\t{\n\t\t\t\tthis.editor.insertFunction = mxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tfunct.apply(this, arguments);\n\t\t\t\t\tthis.toolbar.resetMode();\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.editor.insertFunction = null;\n\t\t\t}\n\t\t}));\n\t\t\n\t\t// Resets the selected tool after a doubleclick or escape keystroke\n\t\tthis.resetHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tif (this.toolbar != null)\n\t\t\t{\n\t\t\t\tthis.toolbar.resetMode(true);\n\t\t\t}\n\t\t});\n\n\t\tthis.editor.graph.addListener(mxEvent.DOUBLE_CLICK, this.resetHandler);\n\t\tthis.editor.addListener(mxEvent.ESCAPE, this.resetHandler);\n\t}\n};\n\n/**\n * Function: addItem\n *\n * Adds a new item that executes the given action in <editor>. The title,\n * icon and pressedIcon are used to display the toolbar item.\n * \n * Parameters:\n *\n * title - String that represents the title (tooltip) for the item.\n * icon - URL of the icon to be used for displaying the item.\n * action - Name of the action to execute when the item is clicked.\n * pressed - Optional URL of the icon for the pressed state.\n */\nmxDefaultToolbar.prototype.addItem = function(title, icon, action, pressed)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (action != null && action.length > 0)\n\t\t{\n\t\t\tthis.editor.execute(action);\n\t\t}\n\t});\n\t\n\treturn this.toolbar.addItem(title, icon, clickHandler, pressed);\n};\n\n/**\n * Function: addSeparator\n *\n * Adds a vertical separator using the optional icon.\n * \n * Parameters:\n * \n * icon - Optional URL of the icon that represents the vertical separator.\n * Default is <mxClient.imageBasePath> + '/separator.gif'.\n */\nmxDefaultToolbar.prototype.addSeparator = function(icon)\n{\n\ticon = icon || mxClient.imageBasePath + '/separator.gif';\n\tthis.toolbar.addSeparator(icon);\n};\n\t\n/**\n * Function: addCombo\n *\n * Helper method to invoke <mxToolbar.addCombo> on <toolbar> and return the\n * resulting DOM node.\n */\nmxDefaultToolbar.prototype.addCombo = function()\n{\n\treturn this.toolbar.addCombo();\n};\n\t\t\n/**\n * Function: addActionCombo\n *\n * Helper method to invoke <mxToolbar.addActionCombo> on <toolbar> using\n * the given title and return the resulting DOM node.\n * \n * Parameters:\n * \n * title - String that represents the title of the combo.\n */\nmxDefaultToolbar.prototype.addActionCombo = function(title)\n{\n\treturn this.toolbar.addActionCombo(title);\n};\n\n/**\n * Function: addActionOption\n *\n * Binds the given action to a option with the specified label in the\n * given combo. Combo is an object returned from an earlier call to\n * <addCombo> or <addActionCombo>.\n * \n * Parameters:\n * \n * combo - DOM node that represents the combo box.\n * title - String that represents the title of the combo.\n * action - Name of the action to execute in <editor>.\n */\nmxDefaultToolbar.prototype.addActionOption = function(combo, title, action)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.execute(action);\n\t});\n\t\n\tthis.addOption(combo, title, clickHandler);\n};\n\n/**\n * Function: addOption\n *\n * Helper method to invoke <mxToolbar.addOption> on <toolbar> and return\n * the resulting DOM node that represents the option.\n * \n * Parameters:\n * \n * combo - DOM node that represents the combo box.\n * title - String that represents the title of the combo.\n * value - Object that represents the value of the option.\n */\nmxDefaultToolbar.prototype.addOption = function(combo, title, value)\n{\n\treturn this.toolbar.addOption(combo, title, value);\n};\n\t\n/**\n * Function: addMode\n *\n * Creates an item for selecting the given mode in the <editor>'s graph.\n * Supported modenames are select, connect and pan.\n * \n * Parameters:\n * \n * title - String that represents the title of the item.\n * icon - URL of the icon that represents the item.\n * mode - String that represents the mode name to be used in\n * <mxEditor.setMode>.\n * pressed - Optional URL of the icon that represents the pressed state.\n * funct - Optional JavaScript function that takes the <mxEditor> as the\n * first and only argument that is executed after the mode has been\n * selected.\n */\nmxDefaultToolbar.prototype.addMode = function(title, icon, mode, pressed, funct)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.setMode(mode);\n\t\t\n\t\tif (funct != null)\n\t\t{\n\t\t\tfunct(this.editor);\n\t\t}\n\t});\n\t\n\treturn this.toolbar.addSwitchMode(title, icon, clickHandler, pressed);\n};\n\n/**\n * Function: addPrototype\n *\n * Creates an item for inserting a clone of the specified prototype cell into\n * the <editor>'s graph. The ptype may either be a cell or a function that\n * returns a cell.\n * \n * Parameters:\n * \n * title - String that represents the title of the item.\n * icon - URL of the icon that represents the item.\n * ptype - Function or object that represents the prototype cell. If ptype\n * is a function then it is invoked with no arguments to create new\n * instances.\n * pressed - Optional URL of the icon that represents the pressed state.\n * insert - Optional JavaScript function that handles an insert of the new\n * cell. This function takes the <mxEditor>, new cell to be inserted, mouse\n * event and optional <mxCell> under the mouse pointer as arguments.\n * toggle - Optional boolean that specifies if the item can be toggled.\n * Default is true.\n */\nmxDefaultToolbar.prototype.addPrototype = function(title, icon, ptype, pressed, insert, toggle)\n{\n\t// Creates a wrapper function that is in charge of constructing\n\t// the new cell instance to be inserted into the graph\n\tvar factory = mxUtils.bind(this, function()\n\t{\n\t\tif (typeof(ptype) == 'function')\n\t\t{\n\t\t\treturn ptype();\n\t\t}\n\t\telse if (ptype != null)\n\t\t{\n\t\t\treturn this.editor.graph.cloneCell(ptype);\n\t\t}\n\t\t\n\t\treturn null;\n\t});\n\t\n\t// Defines the function for a click event on the graph\n\t// after this item has been selected in the toolbar\n\tvar clickHandler = mxUtils.bind(this, function(evt, cell)\n\t{\n\t\tif (typeof(insert) == 'function')\n\t\t{\n\t\t\tinsert(this.editor, factory(), evt, cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.drop(factory(), evt, cell);\n\t\t}\n\t\t\n\t\tthis.toolbar.resetMode();\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tvar img = this.toolbar.addMode(title, icon, clickHandler, pressed, null, toggle);\n\t\t\t\t\n\t// Creates a wrapper function that calls the click handler without\n\t// the graph argument\n\tvar dropHandler = function(graph, evt, cell)\n\t{\n\t\tclickHandler(evt, cell);\n\t};\n\t\n\tthis.installDropHandler(img, dropHandler);\n\t\n\treturn img;\n};\n\n/**\n * Function: drop\n * \n * Handles a drop from a toolbar item to the graph. The given vertex\n * represents the new cell to be inserted. This invokes <insert> or\n * <connect> depending on the given target cell.\n * \n * Parameters:\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * target - Optional <mxCell> that represents the drop target.\n */\nmxDefaultToolbar.prototype.drop = function(vertex, evt, target)\n{\n\tvar graph = this.editor.graph;\n\tvar model = graph.getModel();\n\t\n\tif (target == null ||\n\t\tmodel.isEdge(target) ||\n\t\t!this.connectOnDrop ||\n\t\t!graph.isCellConnectable(target))\n\t{\n\t\twhile (target != null &&\n\t\t\t!graph.isValidDropTarget(target, [vertex], evt))\n\t\t{\n\t\t\ttarget = model.getParent(target);\n\t\t}\n\t\t\n\t\tthis.insert(vertex, evt, target);\n\t}\n\telse\n\t{\n\t\tthis.connect(vertex, evt, target);\n\t}\n};\n\n/**\n * Function: insert\n *\n * Handles a drop by inserting the given vertex into the given parent cell\n * or the default parent if no parent is specified.\n * \n * Parameters:\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * parent - Optional <mxCell> that represents the parent.\n */\nmxDefaultToolbar.prototype.insert = function(vertex, evt, target)\n{\n\tvar graph = this.editor.graph;\n\t\n\tif (graph.canImportCell(vertex))\n\t{\n\t\tvar x = mxEvent.getClientX(evt);\n\t\tvar y = mxEvent.getClientY(evt);\n\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\n\t\t// Splits the target edge or inserts into target group\n\t\tif (graph.isSplitEnabled() &&\n\t\t\tgraph.isSplitTarget(target, [vertex], evt))\n\t\t{\n\t\t\treturn graph.splitEdge(target, [vertex], null, pt.x, pt.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.editor.addVertex(target, vertex, pt.x, pt.y);\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: connect\n * \n * Handles a drop by connecting the given vertex to the given source cell.\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * source - Optional <mxCell> that represents the source terminal.\n */\nmxDefaultToolbar.prototype.connect = function(vertex, evt, source)\n{\n\tvar graph = this.editor.graph;\n\tvar model = graph.getModel();\n\t\n\tif (source != null &&\n\t\tgraph.isCellConnectable(vertex) &&\n\t\tgraph.isEdgeValid(null, source, vertex))\n\t{\n\t\tvar edge = null;\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar geo = model.getGeometry(source);\n\t\t\tvar g = model.getGeometry(vertex).clone();\n\t\t\t\n\t\t\t// Moves the vertex away from the drop target that will\n\t\t\t// be used as the source for the new connection\n\t\t\tg.x = geo.x + (geo.width - g.width) / 2;\n\t\t\tg.y = geo.y + (geo.height - g.height) / 2;\n\t\t\t\n\t\t\tvar step = this.spacing * graph.gridSize;\n\t\t\tvar dist = model.getDirectedEdgeCount(source, true) * 20;\n\t\t\t\n\t\t\tif (this.editor.horizontalFlow)\n\t\t\t{\n\t\t\t\tg.x += (g.width + geo.width) / 2 + step + dist;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tg.y += (g.height + geo.height) / 2 + step + dist;\n\t\t\t}\n\t\t\t\n\t\t\tvertex.setGeometry(g);\n\t\t\t\n\t\t\t// Fires two add-events with the code below - should be fixed\n\t\t\t// to only fire one add event for both inserts\n\t\t\tvar parent = model.getParent(source);\n\t\t\tgraph.addCell(vertex, parent);\n\t\t\tgraph.constrainChild(vertex);\n\n\t\t\t// Creates the edge using the editor instance and calls\n\t\t\t// the second function that fires an add event\n\t\t\tedge = this.editor.createEdge(source, vertex);\n\t\t\t\n\t\t\tif (model.getGeometry(edge) == null)\n\t\t\t{\n\t\t\t\tvar edgeGeometry = new mxGeometry();\n\t\t\t\tedgeGeometry.relative = true;\n\t\t\t\t\n\t\t\t\tmodel.setGeometry(edge, edgeGeometry);\n\t\t\t}\n\t\t\t\n\t\t\tgraph.addEdge(edge, parent, source, vertex);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t\t\n\t\tgraph.setSelectionCells([vertex, edge]);\n\t\tgraph.scrollCellToVisible(vertex);\n\t}\n};\n\n/**\n * Function: installDropHandler\n * \n * Makes the given img draggable using the given function for handling a\n * drop event.\n * \n * Parameters:\n * \n * img - DOM node that represents the image.\n * dropHandler - Function that handles a drop of the image.\n */\nmxDefaultToolbar.prototype.installDropHandler = function (img, dropHandler)\n{\n\tvar sprite = document.createElement('img');\n\tsprite.setAttribute('src', img.getAttribute('src'));\n\n\t// Handles delayed loading of the images\n\tvar loader = mxUtils.bind(this, function(evt)\n\t{\n\t\t// Preview uses the image node with double size. Later this can be\n\t\t// changed to use a separate preview and guides, but for this the\n\t\t// dropHandler must use the additional x- and y-arguments and the\n\t\t// dragsource which makeDraggable returns much be configured to\n\t\t// use guides via mxDragSource.isGuidesEnabled.\n\t\tsprite.style.width = (2 * img.offsetWidth) + 'px';\n\t\tsprite.style.height = (2 * img.offsetHeight) + 'px';\n\n\t\tmxUtils.makeDraggable(img, this.editor.graph, dropHandler,\n\t\t\tsprite);\n\t\tmxEvent.removeListener(sprite, 'load', loader);\n\t});\n\n\tif (mxClient.IS_IE)\n\t{\n\t\tloader();\n\t}\n\telse\n\t{\n\t\tmxEvent.addListener(sprite, 'load', loader);\n\t}\t\n};\n\n/**\n * Function: destroy\n * \n * Destroys the <toolbar> associated with this object and removes all\n * installed listeners. This does normally not need to be called, the\n * <toolbar> is destroyed automatically when the window unloads (in IE) by\n * <mxEditor>.\n */\nmxDefaultToolbar.prototype.destroy = function ()\n{\n\tif (this.resetHandler != null)\n\t{\n\t\tthis.editor.graph.removeListener('dblclick', this.resetHandler);\n\t\tthis.editor.removeListener('escape', this.resetHandler);\n\t\tthis.resetHandler = null;\n\t}\n\t\n\tif (this.toolbar != null)\n\t{\n\t\tthis.toolbar.destroy();\n\t\tthis.toolbar = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEditor\n *\n * Extends <mxEventSource> to implement a application wrapper for a graph that\n * adds <actions>, I/O using <mxCodec>, auto-layout using <mxLayoutManager>,\n * command history using <undoManager>, and standard dialogs and widgets, eg.\n * properties, help, outline, toolbar, and popupmenu. It also adds <templates>\n * to be used as cells in toolbars, auto-validation using the <validation>\n * flag, attribute cycling using <cycleAttributeValues>, higher-level events\n * such as <root>, and backend integration using <urlPost> and <urlImage>. \n * \n * Actions:\n * \n * Actions are functions stored in the <actions> array under their names. The\n * functions take the <mxEditor> as the first, and an optional <mxCell> as the\n * second argument and are invoked using <execute>. Any additional arguments\n * passed to execute are passed on to the action as-is.\n * \n * A list of built-in actions is available in the <addActions> description.\n * \n * Read/write Diagrams:\n * \n * To read a diagram from an XML string, for example from a textfield within the \n * page, the following code is used:\n * \n * (code)\n * var doc = mxUtils.parseXML(xmlString);\n * var node = doc.documentElement;\n * editor.readGraphModel(node);\n * (end)\n * \n * For reading a diagram from a remote location, use the <open> method.\n * \n * To save diagrams in XML on a server, you can set the <urlPost> variable. \n * This variable will be used in <getUrlPost> to construct a URL for the post \n * request that is issued in the <save> method. The post request contains the \n * XML representation of the diagram as returned by <writeGraphModel> in the \n * xml parameter.\n * \n * On the server side, the post request is processed using standard\n * technologies such as Java Servlets, CGI, .NET or ASP.\n * \n * Here are some examples of processing a post request in various languages.\n * \n * - Java: URLDecoder.decode(request.getParameter(\"xml\"), \"UTF-8\").replace(\"\\n\", \"&#xa;\")\n * \n * Note that the linefeeds should only be replaced if the XML is\n * processed in Java, for example when creating an image, but not\n * if the XML is passed back to the client-side.\n * \n * - .NET: HttpUtility.UrlDecode(context.Request.Params[\"xml\"])\n * - PHP: urldecode($_POST[\"xml\"])\n * \n * Creating images:\n * \n * A backend (Java, PHP or C#) is required for creating images. The\n * distribution contains an example for each backend (ImageHandler.java,\n * ImageHandler.cs and graph.php). More information about using a backend\n * to create images can be found in the readme.html files. Note that the\n * preview is implemented using VML/SVG in the browser and does not require\n * a backend. The backend is only required to creates images (bitmaps).\n * \n * Special characters:\n * \n * Note There are five characters that should always appear in XML content as\n * escapes, so that they do not interact with the syntax of the markup. These\n * are part of the language for all documents based on XML and for HTML.\n * \n * - &lt; (<)\n * - &gt; (>)\n * - &amp; (&)\n * - &quot; (\")\n * - &apos; (')\n * \n * Although it is part of the XML language, &apos; is not defined in HTML.\n * For this reason the XHTML specification recommends instead the use of\n * &#39; if text may be passed to a HTML user agent.\n * \n * If you are having problems with special characters on the server-side then\n * you may want to try the <escapePostData> flag.\n * \n * For converting decimal escape sequences inside strings, a user has provided\n * us with the following function:\n * \n * (code)\n * function html2js(text)\n * {\n *   var entitySearch = /&#[0-9]+;/;\n *   var entity;\n *   \n *   while (entity = entitySearch.exec(text))\n *   {\n *     var charCode = entity[0].substring(2, entity[0].length -1);\n *     text = text.substring(0, entity.index)\n *            + String.fromCharCode(charCode)\n *            + text.substring(entity.index + entity[0].length);\n *   }\n *   \n *   return text;\n * }\n * (end)\n * \n * Otherwise try using hex escape sequences and the built-in unescape function\n * for converting such strings.\n * \n * Local Files:\n * \n * For saving and opening local files, no standardized method exists that\n * works across all browsers. The recommended way of dealing with local files\n * is to create a backend that streams the XML data back to the browser (echo)\n * as an attachment so that a Save-dialog is displayed on the client-side and\n * the file can be saved to the local disk.\n * \n * For example, in PHP the code that does this looks as follows.\n * \n * (code)\n * $xml = stripslashes($_POST[\"xml\"]);\n * header(\"Content-Disposition: attachment; filename=\\\"diagram.xml\\\"\");\n * echo($xml);\n * (end)\n * \n * To open a local file, the file should be uploaded via a form in the browser\n * and then opened from the server in the editor.\n * \n * Cell Properties:\n * \n * The properties displayed in the properties dialog are the attributes and \n * values of the cell's user object, which is an XML node. The XML node is \n * defined in the templates section of the config file.\n * \n * The templates are stored in <mxEditor.templates> and contain cells which\n * are cloned at insertion time to create new vertices by use of drag and\n * drop from the toolbar. Each entry in the toolbar for adding a new vertex\n * must refer to an existing template.\n * \n * In the following example, the task node is a business object and only the \n * mxCell node and its mxGeometry child contain graph information:\n * \n * (code)\n * <Task label=\"Task\" description=\"\">\n *   <mxCell vertex=\"true\">\n *     <mxGeometry as=\"geometry\" width=\"72\" height=\"32\"/>\n *   </mxCell>\n * </Task> \n * (end)\n * \n * The idea is that the XML representation is inverse from the in-memory \n * representation: The outer XML node is the user object and the inner node is \n * the cell. This means the user object of the cell is the Task node with no \n * children for the above example:\n * \n * (code)\n * <Task label=\"Task\" description=\"\"/>\n * (end)\n * \n * The Task node can have any tag name, attributes and child nodes. The \n * <mxCodec> will use the XML hierarchy as the user object, while removing the \n * \"known annotations\", such as the mxCell node. At save-time the cell data \n * will be \"merged\" back into the user object. The user object is only modified \n * via the properties dialog during the lifecycle of the cell.\n * \n * In the default implementation of <createProperties>, the user object's\n * attributes are put into a form for editing. Attributes are changed using\n * the <mxCellAttributeChange> action in the model. The dialog can be replaced \n * by overriding the <createProperties> hook or by replacing the showProperties\n * action in <actions>. Alternatively, the entry in the config file's popupmenu\n * section can be modified to invoke a different action.\n * \n * If you want to displey the properties dialog on a doubleclick, you can set\n * <mxEditor.dblClickAction> to showProperties as follows:\n * \n * (code)\n * editor.dblClickAction = 'showProperties';\n * (end)\n * \n * Popupmenu and Toolbar:\n * \n * The toolbar and popupmenu are typically configured using the respective\n * sections in the config file, that is, the popupmenu is defined as follows:\n * \n * (code)\n * <mxEditor>\n *   <mxDefaultPopupMenu as=\"popupHandler\">\n * \t\t<add as=\"cut\" action=\"cut\" icon=\"images/cut.gif\"/>\n *      ...\n * (end)\n * \n * New entries can be added to the toolbar by inserting an add-node into the\n * above configuration. Existing entries may be removed and changed by\n * modifying or removing the respective entries in the configuration.\n * The configuration is read by the <mxDefaultPopupMenuCodec>, the format of the\n * configuration is explained in <mxDefaultPopupMenu.decode>.\n * \n * The toolbar is defined in the mxDefaultToolbar section. Items can be added\n * and removed in this section.\n * \n * (code)\n * <mxEditor>\n *   <mxDefaultToolbar>\n *     <add as=\"save\" action=\"save\" icon=\"images/save.gif\"/>\n *     <add as=\"Swimlane\" template=\"swimlane\" icon=\"images/swimlane.gif\"/>\n *     ...\n * (end)\n * \n * The format of the configuration is described in\n * <mxDefaultToolbarCodec.decode>.\n * \n * Ids:\n * \n * For the IDs, there is an implicit behaviour in <mxCodec>: It moves the Id\n * from the cell to the user object at encoding time and vice versa at decoding\n * time. For example, if the Task node from above has an id attribute, then\n * the <mxCell.id> of the corresponding cell will have this value. If there\n * is no Id collision in the model, then the cell may be retrieved using this\n * Id with the <mxGraphModel.getCell> function. If there is a collision, a new\n * Id will be created for the cell using <mxGraphModel.createId>. At encoding\n * time, this new Id will replace the value previously stored under the id\n * attribute in the Task node.\n * \n * See <mxEditorCodec>, <mxDefaultToolbarCodec> and <mxDefaultPopupMenuCodec>\n * for information about configuring the editor and user interface.\n * \n * Programmatically inserting cells:\n * \n * For inserting a new cell, say, by clicking a button in the document,\n * the following code can be used. This requires an reference to the editor.\n * \n * (code)\n * var userObject = new Object();\n * var parent = editor.graph.getDefaultParent();\n * var model = editor.graph.model;\n * model.beginUpdate();\n * try\n * {\n *   editor.graph.insertVertex(parent, null, userObject, 20, 20, 80, 30);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * (end)\n * \n * If a template cell from the config file should be inserted, then a clone\n * of the template can be created as follows. The clone is then inserted using\n * the add function instead of addVertex.\n * \n * (code)\n * var template = editor.templates['task'];\n * var clone = editor.graph.model.cloneCell(template);\n * (end)\n * \n * Resources:\n *\n * resources/editor - Language resources for mxEditor\n *\n * Callback: onInit\n *\n * Called from within the constructor. In the callback,\n * \"this\" refers to the editor instance.\n *\n * Cookie: mxgraph=seen\n *\n * Set when the editor is started. Never expires. Use\n * <resetFirstTime> to reset this cookie. This cookie\n * only exists if <onInit> is implemented.\n *\n * Event: mxEvent.OPEN\n *\n * Fires after a file was opened in <open>. The <code>filename</code> property\n * contains the filename that was used. The same value is also available in\n * <filename>.\n *\n * Event: mxEvent.SAVE\n *\n * Fires after the current file was saved in <save>. The <code>url</code>\n * property contains the URL that was used for saving.\n *\n * Event: mxEvent.POST\n * \n * Fires if a successful response was received in <postDiagram>. The\n * <code>request</code> property contains the <mxXmlRequest>, the\n * <code>url</code> and <code>data</code> properties contain the URL and the\n * data that were used in the post request. \n *\n * Event: mxEvent.ROOT\n *\n * Fires when the current root has changed, or when the title of the current\n * root has changed. This event has no properties.\n *\n * Event: mxEvent.BEFORE_ADD_VERTEX\n * \n * Fires before a vertex is added in <addVertex>. The <code>vertex</code>\n * property contains the new vertex and the <code>parent</code> property\n * contains its parent.\n * \n * Event: mxEvent.ADD_VERTEX\n * \n * Fires between begin- and endUpdate in <addVertex>. The <code>vertex</code>\n * property contains the vertex that is being inserted.\n * \n * Event: mxEvent.AFTER_ADD_VERTEX\n * \n * Fires after a vertex was inserted and selected in <addVertex>. The\n * <code>vertex</code> property contains the new vertex.\n * \n * Example:\n * \n * For starting an in-place edit after a new vertex has been added to the\n * graph, the following code can be used.\n * \n * (code)\n * editor.addListener(mxEvent.AFTER_ADD_VERTEX, function(sender, evt)\n * {\n *   var vertex = evt.getProperty('vertex');\n * \n *   if (editor.graph.isCellEditable(vertex))\n *   {\n *   \teditor.graph.startEditingAtCell(vertex);\n *   }\n * });\n * (end)\n * \n * Event: mxEvent.ESCAPE\n * \n * Fires when the escape key is pressed. The <code>event</code> property\n * contains the key event.\n * \n * Constructor: mxEditor\n *\n * Constructs a new editor. This function invokes the <onInit> callback\n * upon completion.\n *\n * Example:\n *\n * (code)\n * var config = mxUtils.load('config/diagrameditor.xml').getDocumentElement();\n * var editor = new mxEditor(config);\n * (end)\n * \n * Parameters:\n * \n * config - Optional XML node that contains the configuration.\n */\nfunction mxEditor(config)\n{\n\tthis.actions = [];\n\tthis.addActions();\n\n\t// Executes the following only if a document has been instanciated.\n\t// That is, don't execute when the editorcodec is setup.\n\tif (document.body != null)\n\t{\n\t\t// Defines instance fields\n\t\tthis.cycleAttributeValues = [];\n\t\tthis.popupHandler = new mxDefaultPopupMenu();\n\t\tthis.undoManager = new mxUndoManager();\n\n\t\t// Creates the graph and toolbar without the containers\n\t\tthis.graph = this.createGraph();\n\t\tthis.toolbar = this.createToolbar();\n\n\t\t// Creates the global keyhandler (requires graph instance)\n\t\tthis.keyHandler = new mxDefaultKeyHandler(this);\n\n\t\t// Configures the editor using the URI\n\t\t// which was passed to the ctor\n\t\tthis.configure(config);\n\t\t\n\t\t// Assigns the swimlaneIndicatorColorAttribute on the graph\n\t\tthis.graph.swimlaneIndicatorColorAttribute = this.cycleAttributeName;\n\n\t\t// Checks if the <onInit> hook has been set\n\t\tif (this.onInit != null)\n\t\t{\n\t\t\t// Invokes the <onInit> hook\n\t\t\tthis.onInit();\n\t\t}\n\t\t\n\t\t// Automatic deallocation of memory\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.destroy();\n\t\t\t}));\n\t\t}\n\t}\n};\n\n/**\n * Installs the required language resources at class\n * loading time.\n */\nif (mxLoadResources)\n{\n\tmxResources.add(mxClient.basePath + '/resources/editor');\n}\nelse\n{\n\tmxClient.defaultBundles.push(mxClient.basePath + '/resources/editor');\n}\n\n/**\n * Extends mxEventSource.\n */\nmxEditor.prototype = new mxEventSource();\nmxEditor.prototype.constructor = mxEditor;\n\n/**\n * Group: Controls and Handlers\n */\n\t\n/**\n * Variable: askZoomResource\n * \n * Specifies the resource key for the zoom dialog. If the resource for this\n * key does not exist then the value is used as the error message. Default\n * is 'askZoom'.\n */\nmxEditor.prototype.askZoomResource = (mxClient.language != 'none') ? 'askZoom' : '';\n\t\n/**\n * Variable: lastSavedResource\n * \n * Specifies the resource key for the last saved info. If the resource for\n * this key does not exist then the value is used as the error message.\n * Default is 'lastSaved'.\n */\nmxEditor.prototype.lastSavedResource = (mxClient.language != 'none') ? 'lastSaved' : '';\n\t\n/**\n * Variable: currentFileResource\n * \n * Specifies the resource key for the current file info. If the resource for\n * this key does not exist then the value is used as the error message.\n * Default is 'lastSaved'.\n */\nmxEditor.prototype.currentFileResource = (mxClient.language != 'none') ? 'currentFile' : '';\n\t\n/**\n * Variable: propertiesResource\n * \n * Specifies the resource key for the properties window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'properties'.\n */\nmxEditor.prototype.propertiesResource = (mxClient.language != 'none') ? 'properties' : '';\n\t\n/**\n * Variable: tasksResource\n * \n * Specifies the resource key for the tasks window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'tasks'.\n */\nmxEditor.prototype.tasksResource = (mxClient.language != 'none') ? 'tasks' : '';\n\t\n/**\n * Variable: helpResource\n * \n * Specifies the resource key for the help window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'help'.\n */\nmxEditor.prototype.helpResource = (mxClient.language != 'none') ? 'help' : '';\n\t\n/**\n * Variable: outlineResource\n * \n * Specifies the resource key for the outline window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'outline'.\n */\nmxEditor.prototype.outlineResource = (mxClient.language != 'none') ? 'outline' : '';\n\t\n/**\n * Variable: outline\n * \n * Reference to the <mxWindow> that contains the outline. The <mxOutline>\n * is stored in outline.outline.\n */\nmxEditor.prototype.outline = null;\n\n/**\n * Variable: graph\n *\n * Holds a <mxGraph> for displaying the diagram. The graph\n * is created in <setGraphContainer>.\n */\nmxEditor.prototype.graph = null;\n\n/**\n * Variable: graphRenderHint\n *\n * Holds the render hint used for creating the\n * graph in <setGraphContainer>. See <mxGraph>.\n * Default is null.\n */\nmxEditor.prototype.graphRenderHint = null;\n\n/**\n * Variable: toolbar\n *\n * Holds a <mxDefaultToolbar> for displaying the toolbar. The\n * toolbar is created in <setToolbarContainer>.\n */\nmxEditor.prototype.toolbar = null;\n\n/**\n * Variable: status\n *\n * DOM container that holds the statusbar. Default is null.\n * Use <setStatusContainer> to set this value.\n */\nmxEditor.prototype.status = null;\n\n/**\n * Variable: popupHandler\n *\n * Holds a <mxDefaultPopupMenu> for displaying\n * popupmenus.\n */\nmxEditor.prototype.popupHandler = null;\n\n/**\n * Variable: undoManager\n *\n * Holds an <mxUndoManager> for the command history.\n */\nmxEditor.prototype.undoManager = null;\n\n/**\n * Variable: keyHandler\n *\n * Holds a <mxDefaultKeyHandler> for handling keyboard events.\n * The handler is created in <setGraphContainer>.\n */\nmxEditor.prototype.keyHandler = null;\n\n/**\n * Group: Actions and Options\n */\n\n/**\n * Variable: actions\n *\n * Maps from actionnames to actions, which are functions taking\n * the editor and the cell as arguments. Use <addAction>\n * to add or replace an action and <execute> to execute an action\n * by name, passing the cell to be operated upon as the second\n * argument.\n */\nmxEditor.prototype.actions = null;\n\n/**\n * Variable: dblClickAction\n *\n * Specifies the name of the action to be executed\n * when a cell is double clicked. Default is edit.\n * \n * To handle a singleclick, use the following code.\n * \n * (code)\n * editor.graph.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var e = evt.getProperty('event');\n *   var cell = evt.getProperty('cell');\n * \n *   if (cell != null && !e.isConsumed())\n *   {\n *     // Do something useful with cell...\n *     e.consume();\n *   }\n * });\n * (end)\n */\nmxEditor.prototype.dblClickAction = 'edit';\n\n/**\n * Variable: swimlaneRequired\n * \n * Specifies if new cells must be inserted\n * into an existing swimlane. Otherwise, cells\n * that are not swimlanes can be inserted as\n * top-level cells. Default is false.\n */\nmxEditor.prototype.swimlaneRequired = false;\n\n/**\n * Variable: disableContextMenu\n *\n * Specifies if the context menu should be disabled in the graph container.\n * Default is true.\n */\nmxEditor.prototype.disableContextMenu = true;\n\n/**\n * Group: Templates\n */\n\n/**\n * Variable: insertFunction\n *\n * Specifies the function to be used for inserting new\n * cells into the graph. This is assigned from the\n * <mxDefaultToolbar> if a vertex-tool is clicked.\n */\nmxEditor.prototype.insertFunction = null;\n\n/**\n * Variable: forcedInserting\n *\n * Specifies if a new cell should be inserted on a single\n * click even using <insertFunction> if there is a cell \n * under the mousepointer, otherwise the cell under the \n * mousepointer is selected. Default is false.\n */\nmxEditor.prototype.forcedInserting = false;\n\n/**\n * Variable: templates\n * \n * Maps from names to protoype cells to be used\n * in the toolbar for inserting new cells into\n * the diagram.\n */\nmxEditor.prototype.templates = null;\n\n/**\n * Variable: defaultEdge\n * \n * Prototype edge cell that is used for creating\n * new edges.\n */\nmxEditor.prototype.defaultEdge = null;\n\n/**\n * Variable: defaultEdgeStyle\n * \n * Specifies the edge style to be returned in <getEdgeStyle>.\n * Default is null.\n */\nmxEditor.prototype.defaultEdgeStyle = null;\n\n/**\n * Variable: defaultGroup\n * \n * Prototype group cell that is used for creating\n * new groups.\n */\nmxEditor.prototype.defaultGroup = null;\n\n/**\n * Variable: graphRenderHint\n *\n * Default size for the border of new groups. If null,\n * then then <mxGraph.gridSize> is used. Default is\n * null.\n */\nmxEditor.prototype.groupBorderSize = null;\n\n/**\n * Group: Backend Integration\n */\n\n/**\n * Variable: filename\n *\n * Contains the URL of the last opened file as a string.\n * Default is null.\n */\nmxEditor.prototype.filename = null;\n\n/**\n * Variable: lineFeed\n *\n * Character to be used for encoding linefeeds in <save>. Default is '&#xa;'.\n */\nmxEditor.prototype.linefeed = '&#xa;';\n\n/**\n * Variable: postParameterName\n *\n * Specifies if the name of the post parameter that contains the diagram\n * data in a post request to the server. Default is xml.\n */\nmxEditor.prototype.postParameterName = 'xml';\n\n/**\n * Variable: escapePostData\n *\n * Specifies if the data in the post request for saving a diagram\n * should be converted using encodeURIComponent. Default is true.\n */\nmxEditor.prototype.escapePostData = true;\n\n/**\n * Variable: urlPost\n *\n * Specifies the URL to be used for posting the diagram\n * to a backend in <save>.\n */\nmxEditor.prototype.urlPost = null;\n\n/**\n * Variable: urlImage\n *\n * Specifies the URL to be used for creating a bitmap of\n * the graph in the image action.\n */\nmxEditor.prototype.urlImage = null;\n\n/**\n * Group: Autolayout\n */\n\n/**\n * Variable: horizontalFlow\n *\n * Specifies the direction of the flow\n * in the diagram. This is used in the\n * layout algorithms. Default is false,\n * ie. vertical flow.\n */\nmxEditor.prototype.horizontalFlow = false;\n\n/**\n * Variable: layoutDiagram\n *\n * Specifies if the top-level elements in the\n * diagram should be layed out using a vertical\n * or horizontal stack depending on the setting\n * of <horizontalFlow>. The spacing between the\n * swimlanes is specified by <swimlaneSpacing>.\n * Default is false.\n * \n * If the top-level elements are swimlanes, then\n * the intra-swimlane layout is activated by\n * the <layoutSwimlanes> switch.\n */\nmxEditor.prototype.layoutDiagram = false;\n\n/**\n * Variable: swimlaneSpacing\n *\n * Specifies the spacing between swimlanes if\n * automatic layout is turned on in\n * <layoutDiagram>. Default is 0.\n */\nmxEditor.prototype.swimlaneSpacing = 0;\n\n/**\n * Variable: maintainSwimlanes\n * \n * Specifies if the swimlanes should be kept at the same\n * width or height depending on the setting of\n * <horizontalFlow>.  Default is false.\n * \n * For horizontal flows, all swimlanes\n * have the same height and for vertical flows, all swimlanes\n * have the same width. Furthermore, the swimlanes are\n * automatically \"stacked\" if <layoutDiagram> is true.\n */\nmxEditor.prototype.maintainSwimlanes = false;\n\n/**\n * Variable: layoutSwimlanes\n *\n * Specifies if the children of swimlanes should\n * be layed out, either vertically or horizontally\n * depending on <horizontalFlow>.\n * Default is false.\n */\nmxEditor.prototype.layoutSwimlanes = false;\n\n/**\n * Group: Attribute Cycling\n */\n \n/**\n * Variable: cycleAttributeValues\n * \n * Specifies the attribute values to be cycled when\n * inserting new swimlanes. Default is an empty\n * array.\n */\nmxEditor.prototype.cycleAttributeValues = null;\n\n/**\n * Variable: cycleAttributeIndex\n * \n * Index of the last consumed attribute index. If a new\n * swimlane is inserted, then the <cycleAttributeValues>\n * at this index will be used as the value for\n * <cycleAttributeName>. Default is 0.\n */\nmxEditor.prototype.cycleAttributeIndex = 0;\n\n/**\n * Variable: cycleAttributeName\n * \n * Name of the attribute to be assigned a <cycleAttributeValues>\n * when inserting new swimlanes. Default is fillColor.\n */\nmxEditor.prototype.cycleAttributeName = 'fillColor';\n\n/**\n * Group: Windows\n */\n\n/**\n * Variable: tasks\n * \n * Holds the <mxWindow> created in <showTasks>.\n */\nmxEditor.prototype.tasks = null;\n\n/**\n * Variable: tasksWindowImage\n *\n * Icon for the tasks window.\n */\nmxEditor.prototype.tasksWindowImage = null;\n\n/**\n * Variable: tasksTop\n * \n * Specifies the top coordinate of the tasks window in pixels.\n * Default is 20.\n */\nmxEditor.prototype.tasksTop = 20;\n\n/**\n * Variable: help\n * \n * Holds the <mxWindow> created in <showHelp>.\n */\nmxEditor.prototype.help = null;\n\n/**\n * Variable: helpWindowImage\n *\n * Icon for the help window.\n */\nmxEditor.prototype.helpWindowImage = null;\n\n/**\n * Variable: urlHelp\n *\n * Specifies the URL to be used for the contents of the\n * Online Help window. This is usually specified in the\n * resources file under urlHelp for language-specific\n * online help support.\n */\nmxEditor.prototype.urlHelp = null;\n\n/**\n * Variable: helpWidth\n * \n * Specifies the width of the help window in pixels.\n * Default is 300.\n */\nmxEditor.prototype.helpWidth = 300;\n\t\n/**\n * Variable: helpWidth\n * \n * Specifies the width of the help window in pixels.\n * Default is 260.\n */\nmxEditor.prototype.helpHeight = 260;\n\n/**\n * Variable: propertiesWidth\n * \n * Specifies the width of the properties window in pixels.\n * Default is 240.\n */\nmxEditor.prototype.propertiesWidth = 240;\n\t\t\n/**\n * Variable: propertiesHeight\n * \n * Specifies the height of the properties window in pixels.\n * If no height is specified then the window will be automatically\n * sized to fit its contents. Default is null.\n */\nmxEditor.prototype.propertiesHeight = null;\n\t\t\n/**\n * Variable: movePropertiesDialog\n *\n * Specifies if the properties dialog should be automatically\n * moved near the cell it is displayed for, otherwise the\n * dialog is not moved. This value is only taken into \n * account if the dialog is already visible. Default is false.\n */\nmxEditor.prototype.movePropertiesDialog = false;\n\n/**\n * Variable: validating\n *\n * Specifies if <mxGraph.validateGraph> should automatically be invoked after\n * each change. Default is false.\n */\nmxEditor.prototype.validating = false;\n\n/**\n * Variable: modified\n *\n * True if the graph has been modified since it was last saved.\n */\nmxEditor.prototype.modified = false;\n\n/**\n * Function: isModified\n * \n * Returns <modified>.\n */\nmxEditor.prototype.isModified = function ()\n{\n\treturn this.modified;\n};\n\n/**\n * Function: setModified\n * \n * Sets <modified> to the specified boolean value.\n */\nmxEditor.prototype.setModified = function (value)\n{\n\tthis.modified = value;\n};\n\n/**\n * Function: addActions\n *\n * Adds the built-in actions to the editor instance.\n *\n * save - Saves the graph using <urlPost>.\n * print - Shows the graph in a new print preview window.\n * show - Shows the graph in a new window.\n * exportImage - Shows the graph as a bitmap image using <getUrlImage>.\n * refresh - Refreshes the graph's display.\n * cut - Copies the current selection into the clipboard\n * and removes it from the graph.\n * copy - Copies the current selection into the clipboard.\n * paste - Pastes the clipboard into the graph.\n * delete - Removes the current selection from the graph.\n * group - Puts the current selection into a new group.\n * ungroup - Removes the selected groups and selects the children.\n * undo - Undoes the last change on the graph model.\n * redo - Redoes the last change on the graph model.\n * zoom - Sets the zoom via a dialog.\n * zoomIn - Zooms into the graph.\n * zoomOut - Zooms out of the graph\n * actualSize - Resets the scale and translation on the graph.\n * fit - Changes the scale so that the graph fits into the window.\n * showProperties - Shows the properties dialog.\n * selectAll - Selects all cells.\n * selectNone - Clears the selection.\n * selectVertices - Selects all vertices.\n * selectEdges = Selects all edges.\n * edit - Starts editing the current selection cell.\n * enterGroup - Drills down into the current selection cell.\n * exitGroup - Moves up in the drilling hierachy\n * home - Moves to the topmost parent in the drilling hierarchy\n * selectPrevious - Selects the previous cell.\n * selectNext - Selects the next cell.\n * selectParent - Selects the parent of the selection cell.\n * selectChild - Selects the first child of the selection cell.\n * collapse - Collapses the currently selected cells.\n * expand - Expands the currently selected cells.\n * bold - Toggle bold text style.\n * italic - Toggle italic text style.\n * underline - Toggle underline text style.\n * alignCellsLeft - Aligns the selection cells at the left.\n * alignCellsCenter - Aligns the selection cells in the center.\n * alignCellsRight - Aligns the selection cells at the right.\n * alignCellsTop - Aligns the selection cells at the top.\n * alignCellsMiddle - Aligns the selection cells in the middle.\n * alignCellsBottom - Aligns the selection cells at the bottom.\n * alignFontLeft - Sets the horizontal text alignment to left.\n * alignFontCenter - Sets the horizontal text alignment to center.\n * alignFontRight - Sets the horizontal text alignment to right.\n * alignFontTop - Sets the vertical text alignment to top.\n * alignFontMiddle - Sets the vertical text alignment to middle.\n * alignFontBottom - Sets the vertical text alignment to bottom.\n * toggleTasks - Shows or hides the tasks window.\n * toggleHelp - Shows or hides the help window.\n * toggleOutline - Shows or hides the outline window.\n * toggleConsole - Shows or hides the console window.\n */\nmxEditor.prototype.addActions = function ()\n{\n\tthis.addAction('save', function(editor)\n\t{\n\t\teditor.save();\n\t});\n\t\n\tthis.addAction('print', function(editor)\n\t{\n\t\tvar preview = new mxPrintPreview(editor.graph, 1);\n\t\tpreview.open();\n\t});\n\t\n\tthis.addAction('show', function(editor)\n\t{\n\t\tmxUtils.show(editor.graph, null, 10, 10);\n\t});\n\n\tthis.addAction('exportImage', function(editor)\n\t{\n\t\tvar url = editor.getUrlImage();\n\t\t\n\t\tif (url == null || mxClient.IS_LOCAL)\n\t\t{\n\t\t\teditor.execute('show');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar node = mxUtils.getViewXml(editor.graph, 1);\n\t\t\tvar xml = mxUtils.getXml(node, '\\n');\n\n\t\t\tmxUtils.submit(url, editor.postParameterName + '=' +\n\t\t\t\tencodeURIComponent(xml), document, '_blank');\n\t\t}\n\t});\n\t\n\tthis.addAction('refresh', function(editor)\n\t{\n\t\teditor.graph.refresh();\n\t});\n\t\n\tthis.addAction('cut', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.cut(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('copy', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.copy(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('paste', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.paste(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('delete', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.removeCells();\n\t\t}\n\t});\n\t\n\tthis.addAction('group', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setSelectionCell(editor.groupCells());\n\t\t}\n\t});\n\t\n\tthis.addAction('ungroup', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setSelectionCells(editor.graph.ungroupCells());\n\t\t}\n\t});\n\t\n\tthis.addAction('removeFromParent', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.removeCellsFromParent();\n\t\t}\n\t});\n\t\n\tthis.addAction('undo', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.undo();\n\t\t}\n\t});\n\t\n\tthis.addAction('redo', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.redo();\n\t\t}\n\t});\n\t\n\tthis.addAction('zoomIn', function(editor)\n\t{\n\t\teditor.graph.zoomIn();\n\t});\n\t\n\tthis.addAction('zoomOut', function(editor)\n\t{\n\t\teditor.graph.zoomOut();\n\t});\n\t\n\tthis.addAction('actualSize', function(editor)\n\t{\n\t\teditor.graph.zoomActual();\n\t});\n\t\n\tthis.addAction('fit', function(editor)\n\t{\n\t\teditor.graph.fit();\n\t});\n\t\n\tthis.addAction('showProperties', function(editor, cell)\n\t{\n\t\teditor.showProperties(cell);\n\t});\n\t\n\tthis.addAction('selectAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectAll();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectNone', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.clearSelection();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectVertices', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectVertices();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectEdges', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectEdges();\n\t\t}\n\t});\n\t\n\tthis.addAction('edit', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled() &&\n\t\t\teditor.graph.isCellEditable(cell))\n\t\t{\n\t\t\teditor.graph.startEditingAtCell(cell);\n\t\t}\n\t});\n\t\n\tthis.addAction('toBack', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.orderCells(true);\n\t\t}\n\t});\n\t\n\tthis.addAction('toFront', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.orderCells(false);\n\t\t}\n\t});\n\t\n\tthis.addAction('enterGroup', function(editor, cell)\n\t{\n\t\teditor.graph.enterGroup(cell);\n\t});\n\t\n\tthis.addAction('exitGroup', function(editor)\n\t{\n\t\teditor.graph.exitGroup();\n\t});\n\t\n\tthis.addAction('home', function(editor)\n\t{\n\t\teditor.graph.home();\n\t});\n\t\n\tthis.addAction('selectPrevious', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectPreviousCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectNext', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectNextCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectParent', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectParentCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectChild', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectChildCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('collapse', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.foldCells(true);\n\t\t}\n\t});\n\t\n\tthis.addAction('collapseAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tvar cells = editor.graph.getChildVertices();\n\t\t\teditor.graph.foldCells(true, false, cells);\n\t\t}\n\t});\n\t\n\tthis.addAction('expand', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.foldCells(false);\n\t\t}\n\t});\n\t\n\tthis.addAction('expandAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tvar cells = editor.graph.getChildVertices();\n\t\t\teditor.graph.foldCells(false, false, cells);\n\t\t}\n\t});\n\t\n\tthis.addAction('bold', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_BOLD);\n\t\t}\n\t});\n\t\n\tthis.addAction('italic', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_ITALIC);\n\t\t}\n\t});\n\t\n\tthis.addAction('underline', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_UNDERLINE);\n\t\t}\n\t});\n\n\tthis.addAction('alignCellsLeft', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_LEFT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsCenter', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_CENTER);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsRight', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_RIGHT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsTop', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_TOP);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsMiddle', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_MIDDLE);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsBottom', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_BOTTOM);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontLeft', function(editor)\n\t{\n\t\t\n\t\teditor.graph.setCellStyles(\n\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\tmxConstants.ALIGN_LEFT);\n\t});\n\t\n\tthis.addAction('alignFontCenter', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\t\tmxConstants.ALIGN_CENTER);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontRight', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\t\tmxConstants.ALIGN_RIGHT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontTop', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_TOP);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontMiddle', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_MIDDLE);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontBottom', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_BOTTOM);\n\t\t}\n\t});\n\t\n\tthis.addAction('zoom', function(editor)\n\t{\n\t\tvar current = editor.graph.getView().scale*100;\n\t\tvar scale = parseFloat(mxUtils.prompt(\n\t\t\tmxResources.get(editor.askZoomResource) ||\n\t\t\teditor.askZoomResource,\n\t\t\tcurrent))/100;\n\n\t\tif (!isNaN(scale))\n\t\t{\n\t\t\teditor.graph.getView().setScale(scale);\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleTasks', function(editor)\n\t{\n\t\tif (editor.tasks != null)\n\t\t{\n\t\t\teditor.tasks.setVisible(!editor.tasks.isVisible());\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.showTasks();\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleHelp', function(editor)\n\t{\n\t\tif (editor.help != null)\n\t\t{\n\t\t\teditor.help.setVisible(!editor.help.isVisible());\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.showHelp();\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleOutline', function(editor)\n\t{\n\t\tif (editor.outline == null)\n\t\t{\n\t\t\teditor.showOutline();\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.outline.setVisible(!editor.outline.isVisible());\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleConsole', function(editor)\n\t{\n\t\tmxLog.setVisible(!mxLog.isVisible());\n\t});\n};\n\n/**\n * Function: configure\n *\n * Configures the editor using the specified node. To load the\n * configuration from a given URL the following code can be used to obtain\n * the XML node.\n * \n * (code)\n * var node = mxUtils.load(url).getDocumentElement();\n * (end)\n * \n * Parameters:\n * \n * node - XML node that contains the configuration.\n */\nmxEditor.prototype.configure = function (node)\n{\n\tif (node != null)\n\t{\n\t\t// Creates a decoder for the XML data\n\t\t// and uses it to configure the editor\n\t\tvar dec = new mxCodec(node.ownerDocument);\n\t\tdec.decode(node, this);\n\t\t\n\t\t// Resets the counters, modified state and\n\t\t// command history\n\t\tthis.resetHistory();\n\t}\n};\n\n/**\n * Function: resetFirstTime\n * \n * Resets the cookie that is used to remember if the editor has already\n * been used.\n */\nmxEditor.prototype.resetFirstTime = function ()\n{\n\tdocument.cookie =\n\t\t'mxgraph=seen; expires=Fri, 27 Jul 2001 02:47:11 UTC; path=/';\n};\n\n/**\n * Function: resetHistory\n * \n * Resets the command history, modified state and counters.\n */\nmxEditor.prototype.resetHistory = function ()\n{\n\tthis.lastSnapshot = new Date().getTime();\n\tthis.undoManager.clear();\n\tthis.ignoredChanges = 0;\n\tthis.setModified(false);\n};\n\n/**\n * Function: addAction\n * \n * Binds the specified actionname to the specified function.\n * \n * Parameters:\n * \n * actionname - String that specifies the name of the action\n * to be added.\n * funct - Function that implements the new action. The first\n * argument of the function is the editor it is used\n * with, the second argument is the cell it operates\n * upon.\n * \n * Example:\n * (code)\n * editor.addAction('test', function(editor, cell)\n * {\n * \t\tmxUtils.alert(\"test \"+cell);\n * });\n * (end)\n */\nmxEditor.prototype.addAction = function (actionname, funct)\n{\n\tthis.actions[actionname] = funct;\n};\n\n/**\n * Function: execute\n * \n * Executes the function with the given name in <actions> passing the\n * editor instance and given cell as the first and second argument. All\n * additional arguments are passed to the action as well. This method\n * contains a try-catch block and displays an error message if an action\n * causes an exception. The exception is re-thrown after the error\n * message was displayed.\n * \n * Example:\n * \n * (code)\n * editor.execute(\"showProperties\", cell);\n * (end)\n */\nmxEditor.prototype.execute = function (actionname, cell, evt)\n{\n\tvar action = this.actions[actionname];\n\t\n\tif (action != null)\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Creates the array of arguments by replacing the actionname\n\t\t\t// with the editor instance in the args of this function\n\t\t\tvar args = arguments;\n\t\t\targs[0] = this;\n\t\t\t\n\t\t\t// Invokes the function on the editor using the args\n\t\t\taction.apply(this, args);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxUtils.error('Cannot execute ' + actionname +\n\t\t\t\t': ' + e.message, 280, true);\n\t\t\t\n\t\t\tthrow e;\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxUtils.error('Cannot find action '+actionname, 280, true);\n\t}\n};\n\n/**\n * Function: addTemplate\n * \n * Adds the specified template under the given name in <templates>.\n */\nmxEditor.prototype.addTemplate = function (name, template)\n{\n\tthis.templates[name] = template;\n};\n\n/**\n * Function: getTemplate\n * \n * Returns the template for the given name.\n */\nmxEditor.prototype.getTemplate = function (name)\n{\n\treturn this.templates[name];\n};\n\n/**\n * Function: createGraph\n * \n * Creates the <graph> for the editor. The graph is created with no\n * container and is initialized from <setGraphContainer>.\n */\nmxEditor.prototype.createGraph = function ()\n{\n\tvar graph = new mxGraph(null, null, this.graphRenderHint);\n\t\n\t// Enables rubberband, tooltips, panning\n\tgraph.setTooltips(true);\n\tgraph.setPanning(true);\n\n\t// Overrides the dblclick method on the graph to\n\t// invoke the dblClickAction for a cell and reset\n\t// the selection tool in the toolbar\n\tthis.installDblClickHandler(graph);\n\t\n\t// Installs the command history\n\tthis.installUndoHandler(graph);\n\n\t// Installs the handlers for the root event\n\tthis.installDrillHandler(graph);\n\t\n\t// Installs the handler for validation\n\tthis.installChangeHandler(graph);\n\n\t// Installs the handler for calling the\n\t// insert function and consume the\n\t// event if an insert function is defined\n\tthis.installInsertHandler(graph);\n\n\t// Redirects the function for creating the\n\t// popupmenu items\n\tgraph.popupMenuHandler.factoryMethod =\n\t\tmxUtils.bind(this, function(menu, cell, evt)\n\t\t{\n\t\t\treturn this.createPopupMenu(menu, cell, evt);\n\t\t});\n\n\t// Redirects the function for creating\n\t// new connections in the diagram\n\tgraph.connectionHandler.factoryMethod =\n\t\tmxUtils.bind(this, function(source, target)\n\t\t{\n\t\t\treturn this.createEdge(source, target);\n\t\t});\n\t\n\t// Maintains swimlanes and installs autolayout\n\tthis.createSwimlaneManager(graph);\n\tthis.createLayoutManager(graph);\n\t\n\treturn graph;\n};\n\n/**\n * Function: createSwimlaneManager\n * \n * Sets the graph's container using <mxGraph.init>.\n */\nmxEditor.prototype.createSwimlaneManager = function (graph)\n{\n\tvar swimlaneMgr = new mxSwimlaneManager(graph, false);\n\n\tswimlaneMgr.isHorizontal = mxUtils.bind(this, function()\n\t{\n\t\treturn this.horizontalFlow;\n\t});\n\t\n\tswimlaneMgr.isEnabled = mxUtils.bind(this, function()\n\t{\n\t\treturn this.maintainSwimlanes;\n\t});\n\t\n\treturn swimlaneMgr;\n};\n\n/**\n * Function: createLayoutManager\n * \n * Creates a layout manager for the swimlane and diagram layouts, that\n * is, the locally defined inter- and intraswimlane layouts.\n */\nmxEditor.prototype.createLayoutManager = function (graph)\n{\n\tvar layoutMgr = new mxLayoutManager(graph);\n\t\n\tvar self = this; // closure\n\tlayoutMgr.getLayout = function(cell)\n\t{\n\t\tvar layout = null;\n\t\tvar model = self.graph.getModel();\n\t\t\n\t\tif (model.getParent(cell) != null)\n\t\t{\n\t\t\t// Executes the swimlane layout if a child of\n\t\t\t// a swimlane has been changed. The layout is\n\t\t\t// lazy created in createSwimlaneLayout.\n\t\t\tif (self.layoutSwimlanes &&\n\t\t\t\tgraph.isSwimlane(cell))\n\t\t\t{\n\t\t\t\tif (self.swimlaneLayout == null)\n\t\t\t\t{\n\t\t\t\t\tself.swimlaneLayout = self.createSwimlaneLayout();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlayout = self.swimlaneLayout;\n\t\t\t}\n\t\t\t\n\t\t\t// Executes the diagram layout if the modified\n\t\t\t// cell is a top-level cell. The layout is\n\t\t\t// lazy created in createDiagramLayout.\n\t\t\telse if (self.layoutDiagram &&\n\t\t\t\t(graph.isValidRoot(cell) ||\n\t\t\t\tmodel.getParent(model.getParent(cell)) == null))\n\t\t\t{\n\t\t\t\tif (self.diagramLayout == null)\n\t\t\t\t{\n\t\t\t\t\tself.diagramLayout = self.createDiagramLayout();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlayout = self.diagramLayout;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn layout;\n\t};\n\t\n\treturn layoutMgr;\n};\n\n/**\n * Function: setGraphContainer\n * \n * Sets the graph's container using <mxGraph.init>.\n */\nmxEditor.prototype.setGraphContainer = function (container)\n{\n\tif (this.graph.container == null)\n\t{\n\t\t// Creates the graph instance inside the given container and render hint\n\t\t//this.graph = new mxGraph(container, null, this.graphRenderHint);\n\t\tthis.graph.init(container);\n\n\t\t// Install rubberband selection as the last\n\t\t// action handler in the chain\n\t\tthis.rubberband = new mxRubberband(this.graph);\n\n\t\t// Disables the context menu\n\t\tif (this.disableContextMenu)\n\t\t{\n\t\t\tmxEvent.disableContextMenu(container);\n\t\t}\n\n\t\t// Workaround for stylesheet directives in IE\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnew mxDivResizer(container);\n\t\t}\n\t}\n};\n\n/**\n * Function: installDblClickHandler\n * \n * Overrides <mxGraph.dblClick> to invoke <dblClickAction>\n * on a cell and reset the selection tool in the toolbar.\n */\nmxEditor.prototype.installDblClickHandler = function (graph)\n{\n\t// Installs a listener for double click events\n\tgraph.addListener(mxEvent.DOUBLE_CLICK,\n\t\tmxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar cell = evt.getProperty('cell');\n\t\t\t\n\t\t\tif (cell != null &&\n\t\t\t\tgraph.isEnabled() &&\n\t\t\t\tthis.dblClickAction != null)\n\t\t\t{\n\t\t\t\tthis.execute(this.dblClickAction, cell);\n\t\t\t\tevt.consume();\n\t\t\t}\n\t\t})\n\t);\n};\n\t\t\n/**\n * Function: installUndoHandler\n * \n * Adds the <undoManager> to the graph model and the view.\n */\nmxEditor.prototype.installUndoHandler = function (graph)\n{\t\t\t\t\n\tvar listener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tvar edit = evt.getProperty('edit');\n\t\tthis.undoManager.undoableEditHappened(edit);\n\t});\n\t\n\tgraph.getModel().addListener(mxEvent.UNDO, listener);\n\tgraph.getView().addListener(mxEvent.UNDO, listener);\n\n\t// Keeps the selection state in sync\n\tvar undoHandler = function(sender, evt)\n\t{\n\t\tvar changes = evt.getProperty('edit').changes;\n\t\tgraph.setSelectionCells(graph.getSelectionCellsForChanges(changes));\n\t};\n\t\n\tthis.undoManager.addListener(mxEvent.UNDO, undoHandler);\n\tthis.undoManager.addListener(mxEvent.REDO, undoHandler);\n};\n\t\t\n/**\n * Function: installDrillHandler\n * \n * Installs listeners for dispatching the <root> event.\n */\nmxEditor.prototype.installDrillHandler = function (graph)\n{\t\t\t\t\n\tvar listener = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t});\n\t\n\tgraph.getView().addListener(mxEvent.DOWN, listener);\n\tgraph.getView().addListener(mxEvent.UP, listener);\n};\n\n/**\n * Function: installChangeHandler\n * \n * Installs the listeners required to automatically validate\n * the graph. On each change of the root, this implementation\n * fires a <root> event.\n */\nmxEditor.prototype.installChangeHandler = function (graph)\n{\n\tvar listener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\t// Updates the modified state\n\t\tthis.setModified(true);\n\n\t\t// Automatically validates the graph\n\t\t// after each change\n\t\tif (this.validating == true)\n\t\t{\n\t\t\tgraph.validateGraph();\n\t\t}\n\n\t\t// Checks if the root has been changed\n\t\tvar changes = evt.getProperty('edit').changes;\n\t\t\n\t\tfor (var i = 0; i < changes.length; i++)\n\t\t{\n\t\t\tvar change = changes[i];\n\t\t\t\n\t\t\tif (change instanceof mxRootChange ||\n\t\t\t\t(change instanceof mxValueChange &&\n\t\t\t\tchange.cell == this.graph.model.root) ||\n\t\t\t\t(change instanceof mxCellAttributeChange &&\n\t\t\t\tchange.cell == this.graph.model.root))\n\t\t\t{\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\t\n\tgraph.getModel().addListener(mxEvent.CHANGE, listener);\n};\n\n/**\n * Function: installInsertHandler\n * \n * Installs the handler for invoking <insertFunction> if\n * one is defined.\n */\nmxEditor.prototype.installInsertHandler = function (graph)\n{\n\tvar self = this; // closure\n\tvar insertHandler =\n\t{\n\t\tmouseDown: function(sender, me)\n\t\t{\n\t\t\tif (self.insertFunction != null &&\n\t\t\t\t!me.isPopupTrigger() &&\n\t\t\t\t(self.forcedInserting ||\n\t\t\t\tme.getState() == null))\n\t\t\t{\n\t\t\t\tself.graph.clearSelection();\n\t\t\t\tself.insertFunction(me.getEvent(), me.getCell());\n\n\t\t\t\t// Consumes the rest of the events\n\t\t\t\t// for this gesture (down, move, up)\n\t\t\t\tthis.isActive = true;\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t},\n\t\t\n\t\tmouseMove: function(sender, me)\n\t\t{\n\t\t\tif (this.isActive)\n\t\t\t{\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t},\n\t\t\n\t\tmouseUp: function(sender, me)\n\t\t{\n\t\t\tif (this.isActive)\n\t\t\t{\n\t\t\t\tthis.isActive = false;\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t}\n\t};\n\t\n\tgraph.addMouseListener(insertHandler);\n};\n\n/**\n * Function: createDiagramLayout\n * \n * Creates the layout instance used to layout the\n * swimlanes in the diagram.\n */\nmxEditor.prototype.createDiagramLayout = function ()\n{\n\tvar gs = this.graph.gridSize;\n\tvar layout = new mxStackLayout(this.graph, !this.horizontalFlow,\n\t\t this.swimlaneSpacing, 2*gs, 2*gs);\n\t\n\t// Overrides isIgnored to only take into account swimlanes\n\tlayout.isVertexIgnored = function(cell)\n\t{\n\t\treturn !layout.graph.isSwimlane(cell);\n\t};\n\t\n\treturn layout;\n};\n\n/**\n * Function: createSwimlaneLayout\n * \n * Creates the layout instance used to layout the\n * children of each swimlane.\n */\nmxEditor.prototype.createSwimlaneLayout = function ()\n{\n\treturn new mxCompactTreeLayout(this.graph, this.horizontalFlow);\n};\n\n/**\n * Function: createToolbar\n * \n * Creates the <toolbar> with no container.\n */\nmxEditor.prototype.createToolbar = function ()\n{\n\treturn new mxDefaultToolbar(null, this);\n};\n\n/**\n * Function: setToolbarContainer\n * \n * Initializes the toolbar for the given container.\n */\nmxEditor.prototype.setToolbarContainer = function (container)\n{\n\tthis.toolbar.init(container);\n\t\n\t// Workaround for stylesheet directives in IE\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tnew mxDivResizer(container);\n\t}\n};\n\n/**\n * Function: setStatusContainer\n * \n * Creates the <status> using the specified container.\n * \n * This implementation adds listeners in the editor to \n * display the last saved time and the current filename \n * in the status bar.\n * \n * Parameters:\n * \n * container - DOM node that will contain the statusbar.\n */\nmxEditor.prototype.setStatusContainer = function (container)\n{\n\tif (this.status == null)\n\t{\n\t\tthis.status = container;\n\t\t\n\t\t// Prints the last saved time in the status bar\n\t\t// when files are saved\n\t\tthis.addListener(mxEvent.SAVE, mxUtils.bind(this, function()\n\t\t{\n\t\t\tvar tstamp = new Date().toLocaleString();\n\t\t\tthis.setStatus((mxResources.get(this.lastSavedResource) ||\n\t\t\t\tthis.lastSavedResource)+': '+tstamp);\n\t\t}));\n\t\t\n\t\t// Updates the statusbar to display the filename\n\t\t// when new files are opened\n\t\tthis.addListener(mxEvent.OPEN, mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.setStatus((mxResources.get(this.currentFileResource) ||\n\t\t\t\tthis.currentFileResource)+': '+this.filename);\n\t\t}));\n\t\t\n\t\t// Workaround for stylesheet directives in IE\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnew mxDivResizer(container);\n\t\t}\n\t}\n};\n\n/**\n * Function: setStatus\n * \n * Display the specified message in the status bar.\n * \n * Parameters:\n * \n * message - String the specified the message to\n * be displayed.\n */\nmxEditor.prototype.setStatus = function (message)\n{\n\tif (this.status != null && message != null)\n\t{\n\t\tthis.status.innerHTML = message;\n\t}\n};\n\n/**\n * Function: setTitleContainer\n * \n * Creates a listener to update the inner HTML of the\n * specified DOM node with the value of <getTitle>.\n * \n * Parameters:\n * \n * container - DOM node that will contain the title.\n */\nmxEditor.prototype.setTitleContainer = function (container)\n{\n\tthis.addListener(mxEvent.ROOT, mxUtils.bind(this, function(sender)\n\t{\n\t\tcontainer.innerHTML = this.getTitle();\n\t}));\n\n\t// Workaround for stylesheet directives in IE\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tnew mxDivResizer(container);\n\t}\n};\n\n/**\n * Function: treeLayout\n * \n * Executes a vertical or horizontal compact tree layout\n * using the specified cell as an argument. The cell may\n * either be a group or the root of a tree.\n * \n * Parameters:\n * \n * cell - <mxCell> to use in the compact tree layout.\n * horizontal - Optional boolean to specify the tree's\n * orientation. Default is true.\n */\nmxEditor.prototype.treeLayout = function (cell, horizontal)\n{\n\tif (cell != null)\n\t{\n\t\tvar layout = new mxCompactTreeLayout(this.graph, horizontal);\n\t\tlayout.execute(cell);\n\t}\n};\n\n/**\n * Function: getTitle\n * \n * Returns the string value for the current root of the\n * diagram.\n */\nmxEditor.prototype.getTitle = function ()\n{\n\tvar title = '';\n\tvar graph = this.graph;\n\tvar cell = graph.getCurrentRoot();\n\t\n\twhile (cell != null &&\n\t\t   graph.getModel().getParent(\n\t\t\t\tgraph.getModel().getParent(cell)) != null)\n\t{\n\t\t// Append each label of a valid root\n\t\tif (graph.isValidRoot(cell))\n\t\t{\n\t\t\ttitle = ' > ' +\n\t\t\tgraph.convertValueToString(cell) + title;\n\t\t}\n\t\t\n\t\tcell = graph.getModel().getParent(cell);\n\t}\n\t\n\tvar prefix = this.getRootTitle();\n\t\n\treturn prefix + title;\n};\n\n/**\n * Function: getRootTitle\n * \n * Returns the string value of the root cell in\n * <mxGraph.model>.\n */\nmxEditor.prototype.getRootTitle = function ()\n{\n\tvar root = this.graph.getModel().getRoot();\n\treturn this.graph.convertValueToString(root);\n};\n\n/**\n * Function: undo\n * \n * Undo the last change in <graph>.\n */\nmxEditor.prototype.undo = function ()\n{\n\tthis.undoManager.undo();\n};\n\n/**\n * Function: redo\n * \n * Redo the last change in <graph>.\n */\nmxEditor.prototype.redo = function ()\n{\n\tthis.undoManager.redo();\n};\n\n/**\n * Function: groupCells\n * \n * Invokes <createGroup> to create a new group cell and the invokes\n * <mxGraph.groupCells>, using the grid size of the graph as the spacing\n * in the group's content area.\n */\nmxEditor.prototype.groupCells = function ()\n{\n\tvar border = (this.groupBorderSize != null) ?\n\t\tthis.groupBorderSize :\n\t\tthis.graph.gridSize;\n\treturn this.graph.groupCells(this.createGroup(), border);\n};\n\n/**\n * Function: createGroup\n * \n * Creates and returns a clone of <defaultGroup> to be used\n * as a new group cell in <group>.\n */\nmxEditor.prototype.createGroup = function ()\n{\n\tvar model = this.graph.getModel();\n\t\n\treturn model.cloneCell(this.defaultGroup);\n};\n\n/**\n * Function: open\n * \n * Opens the specified file synchronously and parses it using\n * <readGraphModel>. It updates <filename> and fires an <open>-event after\n * the file has been opened. Exceptions should be handled as follows:\n * \n * (code)\n * try\n * {\n *   editor.open(filename);\n * }\n * catch (e)\n * {\n *   mxUtils.error('Cannot open ' + filename +\n *     ': ' + e.message, 280, true);\n * }\n * (end)\n *\n * Parameters:\n * \n * filename - URL of the file to be opened.\n */\nmxEditor.prototype.open = function (filename)\n{\n\tif (filename != null)\n\t{\n\t\tvar xml = mxUtils.load(filename).getXml();\n\t\tthis.readGraphModel(xml.documentElement);\n\t\tthis.filename = filename;\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.OPEN, 'filename', filename));\n\t}\n};\n\n/**\n * Function: readGraphModel\n * \n * Reads the specified XML node into the existing graph model and resets\n * the command history and modified state.\n */\nmxEditor.prototype.readGraphModel = function (node)\n{\n\tvar dec = new mxCodec(node.ownerDocument);\n\tdec.decode(node, this.graph.getModel());\n\tthis.resetHistory();\n};\n\n/**\n * Function: save\n * \n * Posts the string returned by <writeGraphModel> to the given URL or the\n * URL returned by <getUrlPost>. The actual posting is carried out by\n * <postDiagram>. If the URL is null then the resulting XML will be\n * displayed using <mxUtils.popup>. Exceptions should be handled as\n * follows:\n * \n * (code)\n * try\n * {\n *   editor.save();\n * }\n * catch (e)\n * {\n *   mxUtils.error('Cannot save : ' + e.message, 280, true);\n * }\n * (end)\n */\nmxEditor.prototype.save = function (url, linefeed)\n{\n\t// Gets the URL to post the data to\n\turl = url || this.getUrlPost();\n\n\t// Posts the data if the URL is not empty\n\tif (url != null && url.length > 0)\n\t{\n\t\tvar data = this.writeGraphModel(linefeed);\n\t\tthis.postDiagram(url, data);\n\t\t\n\t\t// Resets the modified flag\n\t\tthis.setModified(false);\n\t}\n\t\n\t// Dispatches a save event\n\tthis.fireEvent(new mxEventObject(mxEvent.SAVE, 'url', url));\n};\n\n/**\n * Function: postDiagram\n * \n * Hook for subclassers to override the posting of a diagram\n * represented by the given node to the given URL. This fires\n * an asynchronous <post> event if the diagram has been posted.\n * \n * Example:\n * \n * To replace the diagram with the diagram in the response, use the\n * following code.\n * \n * (code)\n * editor.addListener(mxEvent.POST, function(sender, evt)\n * {\n *   // Process response (replace diagram)\n *   var req = evt.getProperty('request');\n *   var root = req.getDocumentElement();\n *   editor.graph.readGraphModel(root)\n * });\n * (end)\n */\nmxEditor.prototype.postDiagram = function (url, data)\n{\n\tif (this.escapePostData)\n\t{\n\t\tdata = encodeURIComponent(data);\n\t}\n\n\tmxUtils.post(url, this.postParameterName+'='+data,\n\t\tmxUtils.bind(this, function(req)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.POST,\n\t\t\t\t'request', req, 'url', url, 'data', data));\n\t\t})\n\t);\n};\n\n/**\n * Function: writeGraphModel\n * \n * Hook to create the string representation of the diagram. The default\n * implementation uses an <mxCodec> to encode the graph model as\n * follows:\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(this.graph.getModel());\n * return mxUtils.getXml(node, this.linefeed);\n * (end)\n * \n * Parameters:\n * \n * linefeed - Optional character to be used as the linefeed. Default is\n * <linefeed>.\n */\nmxEditor.prototype.writeGraphModel = function (linefeed)\n{\n\tlinefeed = (linefeed != null) ? linefeed : this.linefeed;\n\tvar enc = new mxCodec();\n\tvar node = enc.encode(this.graph.getModel());\n\n\treturn mxUtils.getXml(node, linefeed);\n};\n\n/**\n * Function: getUrlPost\n * \n * Returns the URL to post the diagram to. This is used\n * in <save>. The default implementation returns <urlPost>,\n * adding <code>?draft=true</code>.\n */\nmxEditor.prototype.getUrlPost = function ()\n{\n\treturn this.urlPost;\n};\n\n/**\n * Function: getUrlImage\n * \n * Returns the URL to create the image with. This is typically\n * the URL of a backend which accepts an XML representation\n * of a graph view to create an image. The function is used\n * in the image action to create an image. This implementation\n * returns <urlImage>.\n */\nmxEditor.prototype.getUrlImage = function ()\n{\n\treturn this.urlImage;\n};\n\n/**\n * Function: swapStyles\n * \n * Swaps the styles for the given names in the graph's\n * stylesheet and refreshes the graph.\n */\nmxEditor.prototype.swapStyles = function (first, second)\n{\n\tvar style = this.graph.getStylesheet().styles[second];\n\tthis.graph.getView().getStylesheet().putCellStyle(\n\t\tsecond, this.graph.getStylesheet().styles[first]);\n\tthis.graph.getStylesheet().putCellStyle(first, style);\n\tthis.graph.refresh();\n};\n\n/**\n * Function: showProperties\n * \n * Creates and shows the properties dialog for the given\n * cell. The content area of the dialog is created using\n * <createProperties>.\n */\nmxEditor.prototype.showProperties = function (cell)\n{\n\tcell = cell || this.graph.getSelectionCell();\n\t\n\t// Uses the root node for the properties dialog\n\t// if not cell was passed in and no cell is\n\t// selected\n\tif (cell == null)\n\t{\n\t\tcell = this.graph.getCurrentRoot();\n\t\t\n\t\tif (cell == null)\n\t\t{\n\t\t\tcell = this.graph.getModel().getRoot();\n\t\t}\n\t}\n\t\n\tif (cell != null)\n\t{\n\t\t// Makes sure there is no in-place editor in the\n\t\t// graph and computes the location of the dialog\n\t\tthis.graph.stopEditing(true);\n\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\tvar x = offset.x+10;\n\t\tvar y = offset.y;\n\t\t\n\t\t// Avoids moving the dialog if it is alredy open\n\t\tif (this.properties != null && !this.movePropertiesDialog)\n\t\t{\n\t\t\tx = this.properties.getX();\n\t\t\ty = this.properties.getY();\n\t\t}\n\t\t\n\t\t// Places the dialog near the cell for which it\n\t\t// displays the properties\n\t\telse\n\t\t{\n\t\t\tvar bounds = this.graph.getCellBounds(cell);\n\t\t\t\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tx += bounds.x+Math.min(200, bounds.width);\n\t\t\t\ty += bounds.y;\t\t\t\t\n\t\t\t}\t\t\t\n\t\t}\n\t\t\n\t\t// Hides the existing properties dialog and creates a new one with the\n\t\t// contents created in the hook method\n\t\tthis.hideProperties();\n\t\tvar node = this.createProperties(cell);\n\t\t\n\t\tif (node != null)\n\t\t{\n\t\t\t// Displays the contents in a window and stores a reference to the\n\t\t\t// window for later hiding of the window\n\t\t\tthis.properties = new mxWindow(mxResources.get(this.propertiesResource) ||\n\t\t\t\tthis.propertiesResource, node, x, y, this.propertiesWidth, this.propertiesHeight, false);\n\t\t\tthis.properties.setVisible(true);\n\t\t}\n\t}\n};\n\n/**\n * Function: isPropertiesVisible\n * \n * Returns true if the properties dialog is currently visible.\n */\nmxEditor.prototype.isPropertiesVisible = function ()\n{\n\treturn this.properties != null;\n};\n\n/**\n * Function: createProperties\n * \n * Creates and returns the DOM node that represents the contents\n * of the properties dialog for the given cell. This implementation\n * works for user objects that are XML nodes and display all the\n * node attributes in a form.\n */\nmxEditor.prototype.createProperties = function (cell)\n{\n\tvar model = this.graph.getModel();\n\tvar value = model.getValue(cell);\n\t\n\tif (mxUtils.isNode(value))\n\t{\n\t\t// Creates a form for the user object inside\n\t\t// the cell\n\t\tvar form = new mxForm('properties');\n\t\t\n\t\t// Adds a readonly field for the cell id\n\t\tvar id = form.addText('ID', cell.getId());\n\t\tid.setAttribute('readonly', 'true');\n\n\t\tvar geo = null;\n\t\tvar yField = null;\n\t\tvar xField = null;\n\t\tvar widthField = null;\n\t\tvar heightField = null;\n\n\t\t// Adds fields for the location and size\n\t\tif (model.isVertex(cell))\n\t\t{\n\t\t\tgeo = model.getGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tyField = form.addText('top', geo.y);\n\t\t\t\txField = form.addText('left', geo.x);\n\t\t\t\twidthField = form.addText('width', geo.width);\n\t\t\t\theightField = form.addText('height', geo.height);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Adds a field for the cell style\t\t\t\n\t\tvar tmp = model.getStyle(cell);\n\t\tvar style = form.addText('Style', tmp || '');\n\t\t\n\t\t// Creates textareas for each attribute of the\n\t\t// user object within the cell\n\t\tvar attrs = value.attributes;\n\t\tvar texts = [];\n\t\t\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t{\n\t\t\t// Creates a textarea with more lines for\n\t\t\t// the cell label\n\t\t\tvar val = attrs[i].value;\n\t\t\ttexts[i] = form.addTextarea(attrs[i].nodeName, val,\n\t\t\t\t(attrs[i].nodeName == 'label') ? 4 : 2);\n\t\t}\n\t\t\n\t\t// Adds an OK and Cancel button to the dialog\n\t\t// contents and implements the respective\n\t\t// actions below\n\t\t\n\t\t// Defines the function to be executed when the\n\t\t// OK button is pressed in the dialog\n\t\tvar okFunction = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Hides the dialog\n\t\t\tthis.hideProperties();\n\t\t\t\n\t\t\t// Supports undo for the changes on the underlying\n\t\t\t// XML structure / XML node attribute changes.\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tgeo.x = parseFloat(xField.value);\n\t\t\t\t\tgeo.y = parseFloat(yField.value);\n\t\t\t\t\tgeo.width = parseFloat(widthField.value);\n\t\t\t\t\tgeo.height = parseFloat(heightField.value);\n\t\t\t\t\t\n\t\t\t\t\tmodel.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Applies the style\n\t\t\t\tif (style.value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tmodel.setStyle(cell, style.value);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmodel.setStyle(cell, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Creates an undoable change for each\n\t\t\t\t// attribute and executes it using the\n\t\t\t\t// model, which will also make the change\n\t\t\t\t// part of the current transaction\n\t\t\t\tfor (var i=0; i<attrs.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar edit = new mxCellAttributeChange(\n\t\t\t\t\t\tcell, attrs[i].nodeName,\n\t\t\t\t\t\ttexts[i].value);\n\t\t\t\t\tmodel.execute(edit);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Checks if the graph wants cells to \n\t\t\t\t// be automatically sized and updates\n\t\t\t\t// the size as an undoable step if\n\t\t\t\t// the feature is enabled\n\t\t\t\tif (this.graph.isAutoSizeCell(cell))\n\t\t\t\t{\n\t\t\t\t\tthis.graph.updateCellSize(cell);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Defines the function to be executed when the\n\t\t// Cancel button is pressed in the dialog\n\t\tvar cancelFunction = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Hides the dialog\n\t\t\tthis.hideProperties();\n\t\t});\n\t\t\n\t\tform.addButtons(okFunction, cancelFunction);\n\t\t\n\t\treturn form.table;\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: hideProperties\n * \n * Hides the properties dialog.\n */\nmxEditor.prototype.hideProperties = function ()\n{\n\tif (this.properties != null)\n\t{\n\t\tthis.properties.destroy();\n\t\tthis.properties = null;\n\t}\n};\n\n/**\n * Function: showTasks\n * \n * Shows the tasks window. The tasks window is created using <createTasks>. The\n * default width of the window is 200 pixels, the y-coordinate of the location\n * can be specifies in <tasksTop> and the x-coordinate is right aligned with a\n * 20 pixel offset from the right border. To change the location of the tasks\n * window, the following code can be used:\n * \n * (code)\n * var oldShowTasks = mxEditor.prototype.showTasks;\n * mxEditor.prototype.showTasks = function()\n * {\n *   oldShowTasks.apply(this, arguments); // \"supercall\"\n *   \n *   if (this.tasks != null)\n *   {\n *     this.tasks.setLocation(10, 10);\n *   }\n * };\n * (end)\n */\nmxEditor.prototype.showTasks = function ()\n{\n\tif (this.tasks == null)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.padding = '4px';\n\t\tdiv.style.paddingLeft = '20px';\n\t\tvar w = document.body.clientWidth;\n\t\tvar wnd = new mxWindow(\n\t\t\tmxResources.get(this.tasksResource) ||\n\t\t\tthis.tasksResource,\n\t\t\tdiv, w - 220, this.tasksTop, 200);\n\t\twnd.setClosable(true);\n\t\twnd.destroyOnClose = false;\n\t\t\n\t\t// Installs a function to update the contents\n\t\t// of the tasks window on every change of the\n\t\t// model, selection or root.\n\t\tvar funct = mxUtils.bind(this, function(sender)\n\t\t{\n\t\t\tmxEvent.release(div);\n\t\t\tdiv.innerHTML = '';\n\t\t\tthis.createTasks(div);\n\t\t});\n\t\t\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, funct);\n\t\tthis.graph.getSelectionModel().addListener(mxEvent.CHANGE, funct);\n\t\tthis.graph.addListener(mxEvent.ROOT, funct);\n\t\t\n\t\t// Assigns the icon to the tasks window\n\t\tif (this.tasksWindowImage != null)\n\t\t{\n\t\t\twnd.setImage(this.tasksWindowImage);\n\t\t}\n\t\t\n\t\tthis.tasks = wnd;\n\t\tthis.createTasks(div);\n\t}\n\t\n\tthis.tasks.setVisible(true);\n};\n\t\t\n/**\n * Function: refreshTasks\n * \n * Updates the contents of the tasks window using <createTasks>.\n */\nmxEditor.prototype.refreshTasks = function (div)\n{\n\tif (this.tasks != null)\n\t{\n\t\tvar div = this.tasks.content;\n\t\tmxEvent.release(div);\n\t\tdiv.innerHTML = '';\n\t\tthis.createTasks(div);\n\t}\n};\n\t\t\n/**\n * Function: createTasks\n * \n * Updates the contents of the given DOM node to\n * display the tasks associated with the current\n * editor state. This is invoked whenever there\n * is a possible change of state in the editor.\n * Default implementation is empty.\n */\nmxEditor.prototype.createTasks = function (div)\n{\n\t// override\n};\n\t\n/**\n * Function: showHelp\n * \n * Shows the help window. If the help window does not exist\n * then it is created using an iframe pointing to the resource\n * for the <code>urlHelp</code> key or <urlHelp> if the resource\n * is undefined.\n */\nmxEditor.prototype.showHelp = function (tasks)\n{\n\tif (this.help == null)\n\t{\n\t\tvar frame = document.createElement('iframe');\n\t\tframe.setAttribute('src', mxResources.get('urlHelp') || this.urlHelp);\n\t\tframe.setAttribute('height', '100%');\n\t\tframe.setAttribute('width', '100%');\n\t\tframe.setAttribute('frameBorder', '0');\n\t\tframe.style.backgroundColor = 'white';\n\t\n\t\tvar w = document.body.clientWidth;\n\t\tvar h = (document.body.clientHeight || document.documentElement.clientHeight);\n\t\t\n\t\tvar wnd = new mxWindow(mxResources.get(this.helpResource) || this.helpResource,\n\t\t\tframe, (w-this.helpWidth)/2, (h-this.helpHeight)/3, this.helpWidth, this.helpHeight);\n\t\twnd.setMaximizable(true);\n\t\twnd.setClosable(true);\n\t\twnd.destroyOnClose = false;\n\t\twnd.setResizable(true);\n\n\t\t// Assigns the icon to the help window\n\t\tif (this.helpWindowImage != null)\n\t\t{\n\t\t\twnd.setImage(this.helpWindowImage);\n\t\t}\n\t\t\n\t\t// Workaround for ignored iframe height 100% in FF\n\t\tif (mxClient.IS_NS)\n\t\t{\n\t\t\tvar handler = function(sender)\n\t\t\t{\n\t\t\t\tvar h = wnd.div.offsetHeight;\n\t\t\t\tframe.setAttribute('height', (h-26)+'px');\n\t\t\t};\n\t\t\t\n\t\t\twnd.addListener(mxEvent.RESIZE_END, handler);\n\t\t\twnd.addListener(mxEvent.MAXIMIZE, handler);\n\t\t\twnd.addListener(mxEvent.NORMALIZE, handler);\n\t\t\twnd.addListener(mxEvent.SHOW, handler);\n\t\t}\n\t\t\n\t\tthis.help = wnd;\n\t}\n\t\n\tthis.help.setVisible(true);\n};\n\n/**\n * Function: showOutline\n * \n * Shows the outline window. If the window does not exist, then it is\n * created using an <mxOutline>.\n */\nmxEditor.prototype.showOutline = function ()\n{\n\tvar create = this.outline == null;\n\t\n\tif (create)\n\t{\n\t\tvar div = document.createElement('div');\n\t\t\n\t\tdiv.style.overflow = 'hidden';\n\t\tdiv.style.position = 'relative';\n\t\tdiv.style.width = '100%';\n\t\tdiv.style.height = '100%';\n\t\tdiv.style.background = 'white';\n\t\tdiv.style.cursor = 'move';\n\t\t\n\t\tif (document.documentMode == 8)\n\t\t{\n\t\t\tdiv.style.filter = 'progid:DXImageTransform.Microsoft.alpha(opacity=100)';\n\t\t}\n\t\t\n\t\tvar wnd = new mxWindow(\n\t\t\tmxResources.get(this.outlineResource) ||\n\t\t\tthis.outlineResource,\n\t\t\tdiv, 600, 480, 200, 200, false);\n\t\t\t\t\n\t\t// Creates the outline in the specified div\n\t\t// and links it to the existing graph\n\t\tvar outline = new mxOutline(this.graph, div);\t\t\t\n\t\twnd.setClosable(true);\n\t\twnd.setResizable(true);\n\t\twnd.destroyOnClose = false;\n\t\t\n\t\twnd.addListener(mxEvent.RESIZE_END, function()\n\t\t{\n\t\t\toutline.update();\n\t\t});\n\t\t\n\t\tthis.outline = wnd;\n\t\tthis.outline.outline = outline;\n\t}\n\t\n\t// Finally shows the outline\n\tthis.outline.setVisible(true);\n\tthis.outline.outline.update(true);\n};\n\t\t\n/**\n * Function: setMode\n *\n * Puts the graph into the specified mode. The following modenames are\n * supported:\n * \n * select - Selects using the left mouse button, new connections\n * are disabled.\n * connect - Selects using the left mouse button or creates new\n * connections if mouse over cell hotspot. See <mxConnectionHandler>.\n * pan - Pans using the left mouse button, new connections are disabled.\n */\nmxEditor.prototype.setMode = function(modename)\n{\n\tif (modename == 'select')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = false;\n\t\tthis.graph.setConnectable(false);\n\t}\n\telse if (modename == 'connect')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = false;\n\t\tthis.graph.setConnectable(true);\n\t}\n\telse if (modename == 'pan')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = true;\n\t\tthis.graph.setConnectable(false);\n\t}\n};\n\n/**\n * Function: createPopupMenu\n * \n * Uses <popupHandler> to create the menu in the graph's\n * panning handler. The redirection is setup in\n * <setToolbarContainer>.\n */\nmxEditor.prototype.createPopupMenu = function (menu, cell, evt)\n{\n\tthis.popupHandler.createMenu(this, menu, cell, evt);\n};\n\n/**\n * Function: createEdge\n * \n * Uses <defaultEdge> as the prototype for creating new edges\n * in the connection handler of the graph. The style of the\n * edge will be overridden with the value returned by\n * <getEdgeStyle>.\n */\nmxEditor.prototype.createEdge = function (source, target)\n{\n\t// Clones the defaultedge prototype\n\tvar e = null;\n\t\n\tif (this.defaultEdge != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\te = model.cloneCell(this.defaultEdge);\n\t}\n\telse\n\t{\n\t\te = new mxCell('');\n\t\te.setEdge(true);\n\t\t\n\t\tvar geo = new mxGeometry();\n\t\tgeo.relative = true;\n\t\te.setGeometry(geo);\n\t}\n\t\n\t// Overrides the edge style\n\tvar style = this.getEdgeStyle();\n\t\n\tif (style != null)\n\t{\n\t\te.setStyle(style);\n\t}\n\t\n\treturn e;\n};\n\n/**\n * Function: getEdgeStyle\n * \n * Returns a string identifying the style of new edges.\n * The function is used in <createEdge> when new edges\n * are created in the graph.\n */\nmxEditor.prototype.getEdgeStyle = function ()\n{\n\treturn this.defaultEdgeStyle;\n};\n\n/**\n * Function: consumeCycleAttribute\n * \n * Returns the next attribute in <cycleAttributeValues>\n * or null, if not attribute should be used in the\n * specified cell.\n */\nmxEditor.prototype.consumeCycleAttribute = function (cell)\n{\n\treturn (this.cycleAttributeValues != null &&\n\t\tthis.cycleAttributeValues.length > 0 &&\n\t\tthis.graph.isSwimlane(cell)) ?\n\t\tthis.cycleAttributeValues[this.cycleAttributeIndex++ %\n\t\t\tthis.cycleAttributeValues.length] : null;\n};\n\n/**\n * Function: cycleAttribute\n * \n * Uses the returned value from <consumeCycleAttribute>\n * as the value for the <cycleAttributeName> key in\n * the given cell's style.\n */\nmxEditor.prototype.cycleAttribute = function (cell)\n{\n\tif (this.cycleAttributeName != null)\n\t{\n\t\tvar value = this.consumeCycleAttribute(cell);\n\t\t\n\t\tif (value != null)\n\t\t{\n\t\t\tcell.setStyle(cell.getStyle()+';'+\n\t\t\t\tthis.cycleAttributeName+'='+value);\n\t\t}\n\t}\n};\n\n/**\n * Function: addVertex\n * \n * Adds the given vertex as a child of parent at the specified\n * x and y coordinate and fires an <addVertex> event.\n */\nmxEditor.prototype.addVertex = function (parent, vertex, x, y)\n{\n\tvar model = this.graph.getModel();\n\t\n\twhile (parent != null && !this.graph.isValidDropTarget(parent))\n\t{\n\t\tparent = model.getParent(parent);\n\t}\n\t\n\tparent = (parent != null) ? parent : this.graph.getSwimlaneAt(x, y);\n\tvar scale = this.graph.getView().scale;\n\t\n\tvar geo = model.getGeometry(vertex);\n\tvar pgeo = model.getGeometry(parent);\n\t\n\tif (this.graph.isSwimlane(vertex) &&\n\t\t!this.graph.swimlaneNesting)\n\t{\n\t\tparent = null;\n\t}\n\telse if (parent == null && this.swimlaneRequired)\n\t{\n\t\treturn null;\n\t}\n\telse if (parent != null && pgeo != null)\n\t{\n\t\t// Keeps vertex inside parent\n\t\tvar state = this.graph.getView().getState(parent);\n\t\t\n\t\tif (state != null)\n\t\t{\t\t\t\n\t\t\tx -= state.origin.x * scale;\n\t\t\ty -= state.origin.y * scale;\n\t\t\t\n\t\t\tif (this.graph.isConstrainedMoving)\n\t\t\t{\n\t\t\t\tvar width = geo.width;\n\t\t\t\tvar height = geo.height;\t\t\t\t\n\t\t\t\tvar tmp = state.x+state.width;\n\t\t\t\t\n\t\t\t\tif (x+width > tmp)\n\t\t\t\t{\n\t\t\t\t\tx -= x+width - tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp = state.y+state.height;\n\t\t\t\t\n\t\t\t\tif (y+height > tmp)\n\t\t\t\t{\n\t\t\t\t\ty -= y+height - tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (pgeo != null)\n\t\t{\n\t\t\tx -= pgeo.x*scale;\n\t\t\ty -= pgeo.y*scale;\n\t\t}\n\t}\n\t\n\tgeo = geo.clone();\n\tgeo.x = this.graph.snap(x / scale -\n\t\tthis.graph.getView().translate.x -\n\t\tthis.graph.gridSize/2);\n\tgeo.y = this.graph.snap(y / scale -\n\t\tthis.graph.getView().translate.y -\n\t\tthis.graph.gridSize/2);\n\tvertex.setGeometry(geo);\n\t\n\tif (parent == null)\n\t{\n\t\tparent = this.graph.getDefaultParent();\n\t}\n\n\tthis.cycleAttribute(vertex);\n\tthis.fireEvent(new mxEventObject(mxEvent.BEFORE_ADD_VERTEX,\n\t\t\t'vertex', vertex, 'parent', parent));\n\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvertex = this.graph.addCell(vertex, parent);\n\t\t\n\t\tif (vertex != null)\n\t\t{\n\t\t\tthis.graph.constrainChild(vertex);\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD_VERTEX, 'vertex', vertex));\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\tif (vertex != null)\n\t{\n\t\tthis.graph.setSelectionCell(vertex);\n\t\tthis.graph.scrollCellToVisible(vertex);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.AFTER_ADD_VERTEX, 'vertex', vertex));\n\t}\n\t\n\treturn vertex;\n};\n\n/**\n * Function: destroy\n * \n * Removes the editor and all its associated resources. This does not\n * normally need to be called, it is called automatically when the window\n * unloads.\n */\nmxEditor.prototype.destroy = function ()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\n\t\tif (this.tasks != null)\n\t\t{\n\t\t\tthis.tasks.destroy();\n\t\t}\n\t\t\n\t\tif (this.outline != null)\n\t\t{\n\t\t\tthis.outline.destroy();\n\t\t}\n\t\t\n\t\tif (this.properties != null)\n\t\t{\n\t\t\tthis.properties.destroy();\n\t\t}\n\t\t\n\t\tif (this.keyHandler != null)\n\t\t{\n\t\t\tthis.keyHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.rubberband != null)\n\t\t{\n\t\t\tthis.rubberband.destroy();\n\t\t}\n\t\t\n\t\tif (this.toolbar != null)\n\t\t{\n\t\t\tthis.toolbar.destroy();\n\t\t}\n\t\t\n\t\tif (this.graph != null)\n\t\t{\n\t\t\tthis.graph.destroy();\n\t\t}\n\t\n\t\tthis.status = null;\n\t\tthis.templates = null;\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxCodecRegistry =\n{\n\t/**\n\t * Class: mxCodecRegistry\n\t *\n\t * Singleton class that acts as a global registry for codecs.\n\t *\n\t * Adding an <mxCodec>:\n\t *\n\t * 1. Define a default codec with a new instance of the \n\t * object to be handled.\n\t *\n\t * (code)\n\t * var codec = new mxObjectCodec(new mxGraphModel());\n\t * (end)\n\t *\n\t * 2. Define the functions required for encoding and decoding\n\t * objects.\n\t *\n\t * (code)\n\t * codec.encode = function(enc, obj) { ... }\n\t * codec.decode = function(dec, node, into) { ... }\n\t * (end)\n\t *\n\t * 3. Register the codec in the <mxCodecRegistry>.\n\t *\n\t * (code)\n\t * mxCodecRegistry.register(codec);\n\t * (end)\n\t *\n\t * <mxObjectCodec.decode> may be used to either create a new \n\t * instance of an object or to configure an existing instance, \n\t * in which case the into argument points to the existing\n\t * object. In this case, we say the codec \"configures\" the\n\t * object.\n\t * \n\t * Variable: codecs\n\t *\n\t * Maps from constructor names to codecs.\n\t */\n\tcodecs: [],\n\t\n\t/**\n\t * Variable: aliases\n\t *\n\t * Maps from classnames to codecnames.\n\t */\n\taliases: [],\n\n\t/**\n\t * Function: register\n\t *\n\t * Registers a new codec and associates the name of the template\n\t * constructor in the codec with the codec object.\n\t *\n\t * Parameters:\n\t *\n\t * codec - <mxObjectCodec> to be registered.\n\t */\n\tregister: function(codec)\n\t{\n\t\tif (codec != null)\n\t\t{\n\t\t\tvar name = codec.getName();\n\t\t\tmxCodecRegistry.codecs[name] = codec;\n\t\t\t\n\t\t\tvar classname = mxUtils.getFunctionName(codec.template.constructor);\n\n\t\t\tif (classname != name)\n\t\t\t{\n\t\t\t\tmxCodecRegistry.addAlias(classname, name);\n\t\t\t}\n\t\t}\n\n\t\treturn codec;\n\t},\n\n\t/**\n\t * Function: addAlias\n\t *\n\t * Adds an alias for mapping a classname to a codecname.\n\t */\n\taddAlias: function(classname, codecname)\n\t{\n\t\tmxCodecRegistry.aliases[classname] = codecname;\n\t},\n\n\t/**\n\t * Function: getCodec\n\t *\n\t * Returns a codec that handles objects that are constructed\n\t * using the given constructor.\n\t *\n\t * Parameters:\n\t *\n\t * ctor - JavaScript constructor function. \n\t */\n\tgetCodec: function(ctor)\n\t{\n\t\tvar codec = null;\n\t\t\n\t\tif (ctor != null)\n\t\t{\n\t\t\tvar name = mxUtils.getFunctionName(ctor);\n\t\t\tvar tmp = mxCodecRegistry.aliases[name];\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tname = tmp;\n\t\t\t}\n\t\t\t\n\t\t\tcodec = mxCodecRegistry.codecs[name];\n\t\t\t\n\t\t\t// Registers a new default codec for the given constructor\n\t\t\t// if no codec has been previously defined.\n\t\t\tif (codec == null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tcodec = new mxObjectCodec(new ctor());\n\t\t\t\t\tmxCodecRegistry.register(codec);\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn codec;\n\t}\n\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCodec\n *\n * XML codec for JavaScript object graphs. See <mxObjectCodec> for a\n * description of the general encoding/decoding scheme. This class uses the\n * codecs registered in <mxCodecRegistry> for encoding/decoding each object.\n * \n * References:\n * \n * In order to resolve references, especially forward references, the mxCodec\n * constructor must be given the document that contains the referenced\n * elements.\n *\n * Examples:\n *\n * The following code is used to encode a graph model.\n *\n * (code)\n * var encoder = new mxCodec();\n * var result = encoder.encode(graph.getModel());\n * var xml = mxUtils.getXml(result);\n * (end)\n * \n * Example:\n * \n * Using the code below, an XML document is decoded into an existing model. The\n * document may be obtained using one of the functions in mxUtils for loading\n * an XML file, eg. <mxUtils.get>, or using <mxUtils.parseXml> for parsing an\n * XML string.\n * \n * (code)\n * var doc = mxUtils.parseXml(xmlString);\n * var codec = new mxCodec(doc);\n * codec.decode(doc.documentElement, graph.getModel());\n * (end)\n * \n * Example:\n * \n * This example demonstrates parsing a list of isolated cells into an existing\n * graph model. Note that the cells do not have a parent reference so they can\n * be added anywhere in the cell hierarchy after parsing.\n * \n * (code)\n * var xml = '<root><mxCell id=\"2\" value=\"Hello,\" vertex=\"1\"><mxGeometry x=\"20\" y=\"20\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell><mxCell id=\"3\" value=\"World!\" vertex=\"1\"><mxGeometry x=\"200\" y=\"150\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell><mxCell id=\"4\" value=\"\" edge=\"1\" source=\"2\" target=\"3\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root>';\n * var doc = mxUtils.parseXml(xml);\n * var codec = new mxCodec(doc);\n * var elt = doc.documentElement.firstChild;\n * var cells = [];\n * \n * while (elt != null)\n * {\n *   cells.push(codec.decode(elt));\n *   elt = elt.nextSibling;\n * }\n * \n * graph.addCells(cells);\n * (end)\n * \n * Example:\n * \n * Using the following code, the selection cells of a graph are encoded and the\n * output is displayed in a dialog box.\n * \n * (code)\n * var enc = new mxCodec();\n * var cells = graph.getSelectionCells();\n * mxUtils.alert(mxUtils.getPrettyXml(enc.encode(cells)));\n * (end)\n * \n * Newlines in the XML can be converted to <br>, in which case a '<br>' argument\n * must be passed to <mxUtils.getXml> as the second argument.\n * \n * Debugging:\n * \n * For debugging I/O you can use the following code to get the sequence of\n * encoded objects:\n * \n * (code)\n * var oldEncode = mxCodec.prototype.encode;\n * mxCodec.prototype.encode = function(obj)\n * {\n *   mxLog.show();\n *   mxLog.debug('mxCodec.encode: obj='+mxUtils.getFunctionName(obj.constructor));\n *   \n *   return oldEncode.apply(this, arguments);\n * };\n * (end)\n * \n * Note that the I/O system adds object codecs for new object automatically. For\n * decoding those objects, the constructor should be written as follows:\n * \n * (code)\n * var MyObj = function(name)\n * {\n *   // ...\n * };\n * (end)\n * \n * Constructor: mxCodec\n *\n * Constructs an XML encoder/decoder for the specified\n * owner document.\n *\n * Parameters:\n *\n * document - Optional XML document that contains the data.\n * If no document is specified then a new document is created\n * using <mxUtils.createXmlDocument>.\n */\nfunction mxCodec(document)\n{\n\tthis.document = document || mxUtils.createXmlDocument();\n\tthis.objects = [];\n};\n\n/**\n * Variable: document\n *\n * The owner document of the codec.\n */\nmxCodec.prototype.document = null;\n\n/**\n * Variable: objects\n *\n * Maps from IDs to objects.\n */\nmxCodec.prototype.objects = null;\n\n/**\n * Variable: elements\n * \n * Lookup table for resolving IDs to elements.\n */\nmxCodec.prototype.elements = null;\n\n/**\n * Variable: encodeDefaults\n *\n * Specifies if default values should be encoded. Default is false.\n */\nmxCodec.prototype.encodeDefaults = false;\n\n\n/**\n * Function: putObject\n * \n * Assoiates the given object with the given ID and returns the given object.\n * \n * Parameters\n * \n * id - ID for the object to be associated with.\n * obj - Object to be associated with the ID.\n */\nmxCodec.prototype.putObject = function(id, obj)\n{\n\tthis.objects[id] = obj;\n\t\n\treturn obj;\n};\n\n/**\n * Function: getObject\n *\n * Returns the decoded object for the element with the specified ID in\n * <document>. If the object is not known then <lookup> is used to find an\n * object. If no object is found, then the element with the respective ID\n * from the document is parsed using <decode>.\n */\nmxCodec.prototype.getObject = function(id)\n{\n\tvar obj = null;\n\n\tif (id != null)\n\t{\n\t\tobj = this.objects[id];\n\t\t\n\t\tif (obj == null)\n\t\t{\n\t\t\tobj = this.lookup(id);\n\t\t\t\n\t\t\tif (obj == null)\n\t\t\t{\n\t\t\t\tvar node = this.getElementById(id);\n\t\t\t\t\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tobj = this.decode(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn obj;\n};\n\n/**\n * Function: lookup\n *\n * Hook for subclassers to implement a custom lookup mechanism for cell IDs.\n * This implementation always returns null.\n *\n * Example:\n *\n * (code)\n * var codec = new mxCodec();\n * codec.lookup = function(id)\n * {\n *   return model.getCell(id);\n * };\n * (end)\n *\n * Parameters:\n *\n * id - ID of the object to be returned.\n */\nmxCodec.prototype.lookup = function(id)\n{\n\treturn null;\n};\n\n/**\n * Function: getElementById\n *\n * Returns the element with the given ID from <document>.\n *\n * Parameters:\n *\n * id - String that contains the ID.\n */\nmxCodec.prototype.getElementById = function(id)\n{\n\tif (this.elements == null)\n\t{\n\t\tthis.elements = new Object();\n\t\t\n\t\tif (this.document.documentElement != null)\n\t\t{\n\t\t\tthis.addElement(this.document.documentElement);\n\t\t}\n\t}\n\t\n\treturn this.elements[id];\n};\n\n/**\n * Function: addElement\n *\n * Adds the given element to <elements> if it has an ID.\n */\nmxCodec.prototype.addElement = function(node)\n{\n\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tvar id = node.getAttribute('id');\n\t\t\n\t\tif (id != null && this.elements[id] == null)\n\t\t{\n\t\t\tthis.elements[id] = node;\n\t\t}\n\t}\n\t\n\tnode = node.firstChild;\n\t\n\twhile (node != null)\n\t{\n\t\tthis.addElement(node);\n\t\tnode = node.nextSibling;\n\t}\n};\n\n/**\n * Function: getId\n *\n * Returns the ID of the specified object. This implementation\n * calls <reference> first and if that returns null handles\n * the object as an <mxCell> by returning their IDs using\n * <mxCell.getId>. If no ID exists for the given cell, then\n * an on-the-fly ID is generated using <mxCellPath.create>.\n *\n * Parameters:\n *\n * obj - Object to return the ID for.\n */\nmxCodec.prototype.getId = function(obj)\n{\n\tvar id = null;\n\t\n\tif (obj != null)\n\t{\n\t\tid = this.reference(obj);\n\t\t\n\t\tif (id == null && obj instanceof mxCell)\n\t\t{\n\t\t\tid = obj.getId();\n\t\t\t\n\t\t\tif (id == null)\n\t\t\t{\n\t\t\t\t// Uses an on-the-fly Id\n\t\t\t\tid = mxCellPath.create(obj);\n\t\t\t\t\n\t\t\t\tif (id.length == 0)\n\t\t\t\t{\n\t\t\t\t\tid = 'root';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn id;\n};\n\n/**\n * Function: reference\n *\n * Hook for subclassers to implement a custom method\n * for retrieving IDs from objects. This implementation\n * always returns null.\n *\n * Example:\n *\n * (code)\n * var codec = new mxCodec();\n * codec.reference = function(obj)\n * {\n *   return obj.getCustomId();\n * };\n * (end)\n *\n * Parameters:\n *\n * obj - Object whose ID should be returned.\n */\nmxCodec.prototype.reference = function(obj)\n{\n\treturn null;\n};\n\n/**\n * Function: encode\n *\n * Encodes the specified object and returns the resulting\n * XML node.\n *\n * Parameters:\n *\n * obj - Object to be encoded. \n */\nmxCodec.prototype.encode = function(obj)\n{\n\tvar node = null;\n\t\n\tif (obj != null && obj.constructor != null)\n\t{\n\t\tvar enc = mxCodecRegistry.getCodec(obj.constructor);\n\t\t\n\t\tif (enc != null)\n\t\t{\n\t\t\tnode = enc.encode(this, obj);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxUtils.isNode(obj))\n\t\t\t{\n\t\t\t\tnode = mxUtils.importNode(this.document, obj, true);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t    \t\tmxLog.warn('mxCodec.encode: No codec for ' + mxUtils.getFunctionName(obj.constructor));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: decode\n *\n * Decodes the given XML node. The optional \"into\"\n * argument specifies an existing object to be\n * used. If no object is given, then a new instance\n * is created using the constructor from the codec.\n *\n * The function returns the passed in object or\n * the new instance if no object was given.\n *\n * Parameters:\n *\n * node - XML node to be decoded.\n * into - Optional object to be decodec into.\n */\nmxCodec.prototype.decode = function(node, into)\n{\n\tvar obj = null;\n\t\n\tif (node != null && node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tvar ctor = null;\n\t\t\n\t\ttry\n\t\t{\n\t\t\tctor = window[node.nodeName];\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\t\t\n\t\tvar dec = mxCodecRegistry.getCodec(ctor);\n\t\t\n\t\tif (dec != null)\n\t\t{\n\t\t\tobj = dec.decode(this, node, into);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobj = node.cloneNode(true);\n\t\t\tobj.removeAttribute('as');\n\t\t}\n\t}\n\t\n\treturn obj;\n};\n\n/**\n * Function: encodeCell\n *\n * Encoding of cell hierarchies is built-into the core, but\n * is a higher-level function that needs to be explicitely\n * used by the respective object encoders (eg. <mxModelCodec>,\n * <mxChildChangeCodec> and <mxRootChangeCodec>). This\n * implementation writes the given cell and its children as a\n * (flat) sequence into the given node. The children are not\n * encoded if the optional includeChildren is false. The\n * function is in charge of adding the result into the\n * given node and has no return value.\n *\n * Parameters:\n *\n * cell - <mxCell> to be encoded.\n * node - Parent XML node to add the encoded cell into.\n * includeChildren - Optional boolean indicating if the\n * function should include all descendents. Default is true. \n */\nmxCodec.prototype.encodeCell = function(cell, node, includeChildren)\n{\n\tnode.appendChild(this.encode(cell));\n\t\n\tif (includeChildren == null || includeChildren)\n\t{\n\t\tvar childCount = cell.getChildCount();\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.encodeCell(cell.getChildAt(i), node);\n\t\t}\n\t}\n};\n\n/**\n * Function: isCellCodec\n * \n * Returns true if the given codec is a cell codec. This uses\n * <mxCellCodec.isCellCodec> to check if the codec is of the\n * given type.\n */\nmxCodec.prototype.isCellCodec = function(codec)\n{\n\tif (codec != null && typeof(codec.isCellCodec) == 'function')\n\t{\n\t\treturn codec.isCellCodec();\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: decodeCell\n *\n * Decodes cells that have been encoded using inversion, ie.\n * where the user object is the enclosing node in the XML,\n * and restores the group and graph structure in the cells.\n * Returns a new <mxCell> instance that represents the\n * given node.\n *\n * Parameters:\n *\n * node - XML node that contains the cell data.\n * restoreStructures - Optional boolean indicating whether\n * the graph structure should be restored by calling insert\n * and insertEdge on the parent and terminals, respectively.\n * Default is true.\n */\nmxCodec.prototype.decodeCell = function(node, restoreStructures)\n{\n\trestoreStructures = (restoreStructures != null) ? restoreStructures : true;\n\tvar cell = null;\n\t\n\tif (node != null && node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\t// Tries to find a codec for the given node name. If that does\n\t\t// not return a codec then the node is the user object (an XML node\n\t\t// that contains the mxCell, aka inversion).\n\t\tvar decoder = mxCodecRegistry.getCodec(node.nodeName);\n\t\t\n\t\t// Tries to find the codec for the cell inside the user object.\n\t\t// This assumes all node names inside the user object are either\n\t\t// not registered or they correspond to a class for cells.\n\t\tif (!this.isCellCodec(decoder))\n\t\t{\n\t\t\tvar child = node.firstChild;\n\t\t\t\n\t\t\twhile (child != null && !this.isCellCodec(decoder))\n\t\t\t{\n\t\t\t\tdecoder = mxCodecRegistry.getCodec(child.nodeName);\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!this.isCellCodec(decoder))\n\t\t{\n\t\t\tdecoder = mxCodecRegistry.getCodec(mxCell);\n\t\t}\n\n\t\tcell = decoder.decode(this, node);\n\t\t\n\t\tif (restoreStructures)\n\t\t{\n\t\t\tthis.insertIntoGraph(cell);\n\t\t}\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: insertIntoGraph\n *\n * Inserts the given cell into its parent and terminal cells.\n */\nmxCodec.prototype.insertIntoGraph = function(cell)\n{\n\tvar parent = cell.parent;\n\tvar source = cell.getTerminal(true);\n\tvar target = cell.getTerminal(false);\n\n\t// Fixes possible inconsistencies during insert into graph\n\tcell.setTerminal(null, false);\n\tcell.setTerminal(null, true);\n\tcell.parent = null;\n\t\n\tif (parent != null)\n\t{\n\t\tparent.insert(cell);\n\t}\n\n\tif (source != null)\n\t{\n\t\tsource.insertEdge(cell, true);\n\t}\n\n\tif (target != null)\n\t{\n\t\ttarget.insertEdge(cell, false);\n\t}\n};\n\n/**\n * Function: setAttribute\n *\n * Sets the attribute on the specified node to value. This is a\n * helper method that makes sure the attribute and value arguments\n * are not null.\n *\n * Parameters:\n *\n * node - XML node to set the attribute for.\n * attributes - Attributename to be set.\n * value - New value of the attribute.\n */\nmxCodec.prototype.setAttribute = function(node, attribute, value)\n{\n\tif (attribute != null && value != null)\n\t{\n\t\tnode.setAttribute(attribute, value);\n\t}\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxObjectCodec\n *\n * Generic codec for JavaScript objects that implements a mapping between\n * JavaScript objects and XML nodes that maps each field or element to an\n * attribute or child node, and vice versa.\n * \n * Atomic Values:\n * \n * Consider the following example.\n * \n * (code)\n * var obj = new Object();\n * obj.foo = \"Foo\";\n * obj.bar = \"Bar\";\n * (end)\n * \n * This object is encoded into an XML node using the following.\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(obj);\n * (end)\n * \n * The output of the encoding may be viewed using <mxLog> as follows.\n * \n * (code)\n * mxLog.show();\n * mxLog.debug(mxUtils.getPrettyXml(node));\n * (end)\n * \n * Finally, the result of the encoding looks as follows.\n * \n * (code)\n * <Object foo=\"Foo\" bar=\"Bar\"/>\n * (end)\n * \n * In the above output, the foo and bar fields have been mapped to attributes\n * with the same names, and the name of the constructor was used for the\n * nodename.\n * \n * Booleans:\n *\n * Since booleans are numbers in JavaScript, all boolean values are encoded\n * into 1 for true and 0 for false. The decoder also accepts the string true\n * and false for boolean values.\n * \n * Objects:\n * \n * The above scheme is applied to all atomic fields, that is, to all non-object\n * fields of an object. For object fields, a child node is created with a\n * special attribute that contains the fieldname. This special attribute is\n * called \"as\" and hence, as is a reserved word that should not be used for a\n * fieldname.\n * \n * Consider the following example where foo is an object and bar is an atomic\n * property of foo.\n * \n * (code)\n * var obj = {foo: {bar: \"Bar\"}};\n * (end)\n * \n * This will be mapped to the following XML structure by mxObjectCodec.\n * \n * (code)\n * <Object>\n *   <Object bar=\"Bar\" as=\"foo\"/>\n * </Object>\n * (end)\n * \n * In the above output, the inner Object node contains the as-attribute that\n * specifies the fieldname in the enclosing object. That is, the field foo was\n * mapped to a child node with an as-attribute that has the value foo.\n * \n * Arrays:\n * \n * Arrays are special objects that are either associative, in which case each\n * key, value pair is treated like a field where the key is the fieldname, or\n * they are a sequence of atomic values and objects, which is mapped to a\n * sequence of child nodes. For object elements, the above scheme is applied\n * without the use of the special as-attribute for creating each child. For\n * atomic elements, a special add-node is created with the value stored in the\n * value-attribute.\n * \n * For example, the following array contains one atomic value and one object\n * with a field called bar. Furthermore it contains two associative entries\n * called bar with an atomic value, and foo with an object value.\n * \n * (code)\n * var obj = [\"Bar\", {bar: \"Bar\"}];\n * obj[\"bar\"] = \"Bar\";\n * obj[\"foo\"] = {bar: \"Bar\"};\n * (end)\n * \n * This array is represented by the following XML nodes.\n * \n * (code)\n * <Array bar=\"Bar\">\n *   <add value=\"Bar\"/>\n *   <Object bar=\"Bar\"/>\n *   <Object bar=\"Bar\" as=\"foo\"/>\n * </Array>\n * (end)\n * \n * The Array node name is the name of the constructor. The additional\n * as-attribute in the last child contains the key of the associative entry,\n * whereas the second last child is part of the array sequence and does not\n * have an as-attribute.\n * \n * References:\n * \n * Objects may be represented as child nodes or attributes with ID values,\n * which are used to lookup the object in a table within <mxCodec>. The\n * <isReference> function is in charge of deciding if a specific field should\n * be encoded as a reference or not. Its default implementation returns true if\n * the fieldname is in <idrefs>, an array of strings that is used to configure\n * the <mxObjectCodec>.\n * \n * Using this approach, the mapping does not guarantee that the referenced\n * object itself exists in the document. The fields that are encoded as\n * references must be carefully chosen to make sure all referenced objects\n * exist in the document, or may be resolved by some other means if necessary.\n * \n * For example, in the case of the graph model all cells are stored in a tree\n * whose root is referenced by the model's root field. A tree is a structure\n * that is well suited for an XML representation, however, the additional edges\n * in the graph model have a reference to a source and target cell, which are\n * also contained in the tree. To handle this case, the source and target cell\n * of an edge are treated as references, whereas the children are treated as\n * objects. Since all cells are contained in the tree and no edge references a\n * source or target outside the tree, this setup makes sure all referenced\n * objects are contained in the document.\n * \n * In the case of a tree structure we must further avoid infinite recursion by\n * ignoring the parent reference of each child. This is done by returning true\n * in <isExcluded>, whose default implementation uses the array of excluded\n * fieldnames passed to the mxObjectCodec constructor.\n * \n * References are only used for cells in mxGraph. For defining other\n * referencable object types, the codec must be able to work out the ID of an\n * object. This is done by implementing <mxCodec.reference>. For decoding a\n * reference, the XML node with the respective id-attribute is fetched from the\n * document, decoded, and stored in a lookup table for later reference. For\n * looking up external objects, <mxCodec.lookup> may be implemented.\n * \n * Expressions:\n * \n * For decoding JavaScript expressions, the add-node may be used with a text\n * content that contains the JavaScript expression. For example, the following\n * creates a field called foo in the enclosing object and assigns it the value\n * of <mxConstants.ALIGN_LEFT>.\n * \n * (code)\n * <Object>\n *   <add as=\"foo\">mxConstants.ALIGN_LEFT</add>\n * </Object>\n * (end)\n * \n * The resulting object has a field called foo with the value \"left\". Its XML\n * representation looks as follows.\n * \n * (code)\n * <Object foo=\"left\"/>\n * (end)\n * \n * This means the expression is evaluated at decoding time and the result of\n * the evaluation is stored in the respective field. Valid expressions are all\n * JavaScript expressions, including function definitions, which are mapped to\n * functions on the resulting object.\n * \n * Expressions are only evaluated if <allowEval> is true.\n * \n * Constructor: mxObjectCodec\n *\n * Constructs a new codec for the specified template object.\n * The variables in the optional exclude array are ignored by\n * the codec. Variables in the optional idrefs array are\n * turned into references in the XML. The optional mapping\n * may be used to map from variable names to XML attributes.\n * The argument is created as follows:\n *\n * (code)\n * var mapping = new Object();\n * mapping['variableName'] = 'attribute-name';\n * (end)\n *\n * Parameters:\n *\n * template - Prototypical instance of the object to be\n * encoded/decoded.\n * exclude - Optional array of fieldnames to be ignored.\n * idrefs - Optional array of fieldnames to be converted to/from\n * references.\n * mapping - Optional mapping from field- to attributenames.\n */\nfunction mxObjectCodec(template, exclude, idrefs, mapping)\n{\n\tthis.template = template;\n\t\n\tthis.exclude = (exclude != null) ? exclude : [];\n\tthis.idrefs = (idrefs != null) ? idrefs : [];\n\tthis.mapping = (mapping != null) ? mapping : [];\n\t\n\tthis.reverse = new Object();\n\t\n\tfor (var i in this.mapping)\n\t{\n\t\tthis.reverse[this.mapping[i]] = i;\n\t}\n};\n\n/**\n * Variable: allowEval\n *\n * Static global switch that specifies if expressions in arrays are allowed.\n * Default is false. NOTE: Enabling this carries a possible security risk.\n */\nmxObjectCodec.allowEval = false;\n\n/**\n * Variable: template\n *\n * Holds the template object associated with this codec.\n */\nmxObjectCodec.prototype.template = null;\n\n/**\n * Variable: exclude\n *\n * Array containing the variable names that should be\n * ignored by the codec.\n */\nmxObjectCodec.prototype.exclude = null;\n\n/**\n * Variable: idrefs\n *\n * Array containing the variable names that should be\n * turned into or converted from references. See\n * <mxCodec.getId> and <mxCodec.getObject>.\n */\nmxObjectCodec.prototype.idrefs = null;\n\n/**\n * Variable: mapping\n *\n * Maps from from fieldnames to XML attribute names.\n */\nmxObjectCodec.prototype.mapping = null;\n\n/**\n * Variable: reverse\n *\n * Maps from from XML attribute names to fieldnames.\n */\nmxObjectCodec.prototype.reverse = null;\n\n/**\n * Function: getName\n * \n * Returns the name used for the nodenames and lookup of the codec when\n * classes are encoded and nodes are decoded. For classes to work with\n * this the codec registry automatically adds an alias for the classname\n * if that is different than what this returns. The default implementation\n * returns the classname of the template class.\n */\nmxObjectCodec.prototype.getName = function()\n{\n\treturn mxUtils.getFunctionName(this.template.constructor);\n};\n\n/**\n * Function: cloneTemplate\n * \n * Returns a new instance of the template for this codec.\n */\nmxObjectCodec.prototype.cloneTemplate = function()\n{\n\treturn new this.template.constructor();\n};\n\n/**\n * Function: getFieldName\n * \n * Returns the fieldname for the given attributename.\n * Looks up the value in the <reverse> mapping or returns\n * the input if there is no reverse mapping for the\n * given name.\n */\nmxObjectCodec.prototype.getFieldName = function(attributename)\n{\n\tif (attributename != null)\n\t{\n\t\tvar mapped = this.reverse[attributename];\n\t\t\n\t\tif (mapped != null)\n\t\t{\n\t\t\tattributename = mapped;\n\t\t}\n\t}\n\t\n\treturn attributename;\n};\n\n/**\n * Function: getAttributeName\n * \n * Returns the attributename for the given fieldname.\n * Looks up the value in the <mapping> or returns\n * the input if there is no mapping for the\n * given name.\n */\nmxObjectCodec.prototype.getAttributeName = function(fieldname)\n{\n\tif (fieldname != null)\n\t{\n\t\tvar mapped = this.mapping[fieldname];\n\t\t\n\t\tif (mapped != null)\n\t\t{\n\t\t\tfieldname = mapped;\n\t\t}\n\t}\n\t\n\treturn fieldname;\n};\n\n/**\n * Function: isExcluded\n *\n * Returns true if the given attribute is to be ignored by the codec. This\n * implementation returns true if the given fieldname is in <exclude> or\n * if the fieldname equals <mxObjectIdentity.FIELD_NAME>.\n *\n * Parameters:\n *\n * obj - Object instance that contains the field.\n * attr - Fieldname of the field.\n * value - Value of the field.\n * write - Boolean indicating if the field is being encoded or decoded.\n * Write is true if the field is being encoded, else it is being decoded.\n */\nmxObjectCodec.prototype.isExcluded = function(obj, attr, value, write)\n{\n\treturn attr == mxObjectIdentity.FIELD_NAME ||\n\t\tmxUtils.indexOf(this.exclude, attr) >= 0;\n};\n\n/**\n * Function: isReference\n *\n * Returns true if the given fieldname is to be treated\n * as a textual reference (ID). This implementation returns\n * true if the given fieldname is in <idrefs>.\n *\n * Parameters:\n *\n * obj - Object instance that contains the field.\n * attr - Fieldname of the field.\n * value - Value of the field. \n * write - Boolean indicating if the field is being encoded or decoded.\n * Write is true if the field is being encoded, else it is being decoded.\n */\nmxObjectCodec.prototype.isReference = function(obj, attr, value, write)\n{\n\treturn mxUtils.indexOf(this.idrefs, attr) >= 0;\n};\n\n/**\n * Function: encode\n *\n * Encodes the specified object and returns a node\n * representing then given object. Calls <beforeEncode>\n * after creating the node and <afterEncode> with the \n * resulting node after processing.\n *\n * Enc is a reference to the calling encoder. It is used\n * to encode complex objects and create references.\n *\n * This implementation encodes all variables of an\n * object according to the following rules:\n *\n * - If the variable name is in <exclude> then it is ignored.\n * - If the variable name is in <idrefs> then <mxCodec.getId>\n * is used to replace the object with its ID.\n * - The variable name is mapped using <mapping>.\n * - If obj is an array and the variable name is numeric\n * (ie. an index) then it is not encoded.\n * - If the value is an object, then the codec is used to\n * create a child node with the variable name encoded into\n * the \"as\" attribute.\n * - Else, if <encodeDefaults> is true or the value differs\n * from the template value, then ...\n * - ... if obj is not an array, then the value is mapped to\n * an attribute.\n * - ... else if obj is an array, the value is mapped to an\n * add child with a value attribute or a text child node,\n * if the value is a function.\n *\n * If no ID exists for a variable in <idrefs> or if an object\n * cannot be encoded, a warning is issued using <mxLog.warn>.\n *\n * Returns the resulting XML node that represents the given\n * object.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n */\nmxObjectCodec.prototype.encode = function(enc, obj)\n{\n\tvar node = enc.document.createElement(this.getName());\n\t\n\tobj = this.beforeEncode(enc, obj, node);\n\tthis.encodeObject(enc, obj, node);\n\t\n\treturn this.afterEncode(enc, obj, node);\n};\n\t\n/**\n * Function: encodeObject\n *\n * Encodes the value of each member in then given obj into the given node using\n * <encodeValue>.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node that contains the encoded object.\n */\nmxObjectCodec.prototype.encodeObject = function(enc, obj, node)\n{\n\tenc.setAttribute(node, 'id', enc.getId(obj));\n\t\n    for (var i in obj)\n    {\n\t\tvar name = i;\n\t\tvar value = obj[name];\n\t\t\n    \tif (value != null && !this.isExcluded(obj, name, value, true))\n    \t{\n    \t\tif (mxUtils.isInteger(name))\n    \t\t{\n    \t\t\tname = null;\n    \t\t}\n    \t\t\n    \t\tthis.encodeValue(enc, obj, name, value, node);\n    \t}\n    }\n};\n\n/**\n * Function: encodeValue\n * \n * Converts the given value according to the mappings\n * and id-refs in this codec and uses <writeAttribute>\n * to write the attribute into the given node.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object whose property is going to be encoded.\n * name - XML node that contains the encoded object.\n * value - Value of the property to be encoded.\n * node - XML node that contains the encoded object.\n */\nmxObjectCodec.prototype.encodeValue = function(enc, obj, name, value, node)\n{\n\tif (value != null)\n\t{\n\t\tif (this.isReference(obj, name, value, true))\n\t\t{\n\t\t\tvar tmp = enc.getId(value);\n\t\t\t\n\t\t\tif (tmp == null)\n\t\t\t{\n\t\t    \tmxLog.warn('mxObjectCodec.encode: No ID for ' +\n\t\t    \t\tthis.getName() + '.' + name + '=' + value);\n\t\t    \treturn; // exit\n\t\t    }\n\t\t    \n\t\t    value = tmp;\n\t\t}\n\n\t\tvar defaultValue = this.template[name];\n\t\t\n\t\t// Checks if the value is a default value and\n\t\t// the name is correct\n\t\tif (name == null || enc.encodeDefaults || defaultValue != value)\n\t\t{\n\t\t\tname = this.getAttributeName(name);\n\t\t\tthis.writeAttribute(enc, obj, name, value, node);\t\n\t\t}\n\t}\n};\n\n/**\n * Function: writeAttribute\n * \n * Writes the given value into node using <writePrimitiveAttribute>\n * or <writeComplexAttribute> depending on the type of the value.\n */\nmxObjectCodec.prototype.writeAttribute = function(enc, obj, name, value, node)\n{\n\tif (typeof(value) != 'object' /* primitive type */)\n\t{\n\t\tthis.writePrimitiveAttribute(enc, obj, name, value, node);\n\t}\n\telse /* complex type */\n\t{\n\t\tthis.writeComplexAttribute(enc, obj, name, value, node);\n\t}\n};\n\n/**\n * Function: writePrimitiveAttribute\n * \n * Writes the given value as an attribute of the given node.\n */\nmxObjectCodec.prototype.writePrimitiveAttribute = function(enc, obj, name, value, node)\n{\n\tvalue = this.convertAttributeToXml(enc, obj, name, value, node);\n\t\n\tif (name == null)\n\t{\n\t\tvar child = enc.document.createElement('add');\n\t\t\n\t\tif (typeof(value) == 'function')\n\t\t{\n    \t\tchild.appendChild(enc.document.createTextNode(value));\n    \t}\n    \telse\n    \t{\n    \t\tenc.setAttribute(child, 'value', value);\n    \t}\n    \t\n\t\tnode.appendChild(child);\n\t}\n\telse if (typeof(value) != 'function')\n\t{\n    \tenc.setAttribute(node, name, value);\n\t}\t\t\n};\n\t\n/**\n * Function: writeComplexAttribute\n * \n * Writes the given value as a child node of the given node.\n */\nmxObjectCodec.prototype.writeComplexAttribute = function(enc, obj, name, value, node)\n{\n\tvar child = enc.encode(value);\n\t\n\tif (child != null)\n\t{\n\t\tif (name != null)\n\t\t{\n    \t\tchild.setAttribute('as', name);\n    \t}\n    \t\n    \tnode.appendChild(child);\n\t}\n\telse\n\t{\n\t\tmxLog.warn('mxObjectCodec.encode: No node for ' + this.getName() + '.' + name + ': ' + value);\n\t}\n};\n\n/**\n * Function: convertAttributeToXml\n * \n * Converts true to \"1\" and false to \"0\" is <isBooleanAttribute> returns true.\n * All other values are not converted.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Objec to convert the attribute for.\n * name - Name of the attribute to be converted.\n * value - Value to be converted.\n */\nmxObjectCodec.prototype.convertAttributeToXml = function(enc, obj, name, value)\n{\n\t// Makes sure to encode boolean values as numeric values\n\tif (this.isBooleanAttribute(enc, obj, name, value))\n\t{\t\n\t\t// Checks if the value is true (do not use the value as is, because\n\t\t// this would check if the value is not null, so 0 would be true)\n\t\tvalue = (value == true) ? '1' : '0';\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: isBooleanAttribute\n * \n * Returns true if the given object attribute is a boolean value.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Objec to convert the attribute for.\n * name - Name of the attribute to be converted.\n * value - Value of the attribute to be converted.\n */\nmxObjectCodec.prototype.isBooleanAttribute = function(enc, obj, name, value)\n{\n\treturn (typeof(value.length) == 'undefined' && (value == true || value == false));\n};\n\n/**\n * Function: convertAttributeFromXml\n * \n * Converts booleans and numeric values to the respective types. Values are\n * numeric if <isNumericAttribute> returns true.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be converted.\n * obj - Objec to convert the attribute for.\n */\nmxObjectCodec.prototype.convertAttributeFromXml = function(dec, attr, obj)\n{\n\tvar value = attr.value;\n\t\n\tif (this.isNumericAttribute(dec, attr, obj))\n\t{\n\t\tvalue = parseFloat(value);\n\t\t\n\t\tif (isNaN(value))\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: isNumericAttribute\n * \n * Returns true if the given XML attribute is or should be a numeric value.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be converted.\n * obj - Objec to convert the attribute for.\n */\nmxObjectCodec.prototype.isNumericAttribute = function(dec, attr, obj)\n{\n\t// Handles known numeric attributes for generic objects\n\tvar result = (obj.constructor == mxGeometry &&\n\t\t(attr.name == 'x' || attr.name == 'y' ||\n\t\tattr.name == 'width' || attr.name == 'height')) ||\n\t\t(obj.constructor == mxPoint &&\n\t\t(attr.name == 'x' || attr.name == 'y')) ||\n\t\tmxUtils.isNumeric(attr.value);\n\t\n\treturn result;\n};\n\n/**\n * Function: beforeEncode\n *\n * Hook for subclassers to pre-process the object before\n * encoding. This returns the input object. The return\n * value of this function is used in <encode> to perform\n * the default encoding into the given node.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node to encode the object into.\n */\nmxObjectCodec.prototype.beforeEncode = function(enc, obj, node)\n{\n\treturn obj;\n};\n\n/**\n * Function: afterEncode\n *\n * Hook for subclassers to post-process the node\n * for the given object after encoding and return the\n * post-processed node. This implementation returns \n * the input node. The return value of this method\n * is returned to the encoder from <encode>.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node that represents the default encoding.\n */\nmxObjectCodec.prototype.afterEncode = function(enc, obj, node)\n{\n\treturn node;\n};\n\n/**\n * Function: decode\n *\n * Parses the given node into the object or returns a new object\n * representing the given node.\n *\n * Dec is a reference to the calling decoder. It is used to decode\n * complex objects and resolve references.\n *\n * If a node has an id attribute then the object cache is checked for the\n * object. If the object is not yet in the cache then it is constructed\n * using the constructor of <template> and cached in <mxCodec.objects>.\n *\n * This implementation decodes all attributes and childs of a node\n * according to the following rules:\n *\n * - If the variable name is in <exclude> or if the attribute name is \"id\"\n * or \"as\" then it is ignored.\n * - If the variable name is in <idrefs> then <mxCodec.getObject> is used\n * to replace the reference with an object.\n * - The variable name is mapped using a reverse <mapping>.\n * - If the value has a child node, then the codec is used to create a\n * child object with the variable name taken from the \"as\" attribute.\n * - If the object is an array and the variable name is empty then the\n * value or child object is appended to the array.\n * - If an add child has no value or the object is not an array then\n * the child text content is evaluated using <mxUtils.eval>.\n *\n * For add nodes where the object is not an array and the variable name\n * is defined, the default mechanism is used, allowing to override/add\n * methods as follows:\n *\n * (code)\n * <Object>\n *   <add as=\"hello\"><![CDATA[\n *     function(arg1) {\n *       mxUtils.alert('Hello '+arg1);\n *     }\n *   ]]></add>\n * </Object>\n * (end) \n *\n * If no object exists for an ID in <idrefs> a warning is issued\n * using <mxLog.warn>.\n *\n * Returns the resulting object that represents the given XML node\n * or the object given to the method as the into parameter.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * into - Optional objec to encode the node into.\n */\nmxObjectCodec.prototype.decode = function(dec, node, into)\n{\n\tvar id = node.getAttribute('id');\n\tvar obj = dec.objects[id];\n\t\n\tif (obj == null)\n\t{\n\t\tobj = into || this.cloneTemplate();\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tdec.putObject(id, obj);\n\t\t}\n\t}\n\t\n\tnode = this.beforeDecode(dec, node, obj);\n\tthis.decodeNode(dec, node, obj);\n\t\n    return this.afterDecode(dec, node, obj);\n};\t\n\n/**\n * Function: decodeNode\n * \n * Calls <decodeAttributes> and <decodeChildren> for the given node.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeNode = function(dec, node, obj)\n{\n\tif (node != null)\n\t{\n\t\tthis.decodeAttributes(dec, node, obj);\n\t\tthis.decodeChildren(dec, node, obj);\n\t}\n};\n\n/**\n * Function: decodeAttributes\n * \n * Decodes all attributes of the given node using <decodeAttribute>.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeAttributes = function(dec, node, obj)\n{\n\tvar attrs = node.attributes;\n\t\n\tif (attrs != null)\n\t{\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t{\n\t\t\tthis.decodeAttribute(dec, attrs[i], obj);\n\t\t}\n\t}\n};\n\n/**\n * Function: isIgnoredAttribute\n * \n * Returns true if the given attribute should be ignored. This implementation\n * returns true if the attribute name is \"as\" or \"id\".\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be decoded.\n * obj - Objec to encode the attribute into.\n */\t\nmxObjectCodec.prototype.isIgnoredAttribute = function(dec, attr, obj)\n{\n\treturn attr.nodeName == 'as' || attr.nodeName == 'id';\n};\n\n/**\n * Function: decodeAttribute\n * \n * Reads the given attribute into the specified object.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be decoded.\n * obj - Objec to encode the attribute into.\n */\t\nmxObjectCodec.prototype.decodeAttribute = function(dec, attr, obj)\n{\n\tif (!this.isIgnoredAttribute(dec, attr, obj))\n\t{\n\t\tvar name = attr.nodeName;\n\t\t\n\t\t// Converts the string true and false to their boolean values.\n\t\t// This may require an additional check on the obj to see if\n\t\t// the existing field is a boolean value or uninitialized, in\n\t\t// which case we may want to convert true and false to a string.\n\t\tvar value = this.convertAttributeFromXml(dec, attr, obj);\n\t\tvar fieldname = this.getFieldName(name);\n\t\t\n\t\tif (this.isReference(obj, fieldname, value, false))\n\t\t{\n\t\t\tvar tmp = dec.getObject(value);\n\t\t\t\n\t\t\tif (tmp == null)\n\t\t\t{\n\t\t    \tmxLog.warn('mxObjectCodec.decode: No object for ' +\n\t\t    \t\tthis.getName() + '.' + name + '=' + value);\n\t\t    \treturn; // exit\n\t\t    }\n\t\t    \n\t\t    value = tmp;\n\t\t}\n\n\t\tif (!this.isExcluded(obj, name, value, false))\n\t\t{\n\t\t\t//mxLog.debug(mxUtils.getFunctionName(obj.constructor)+'.'+name+'='+value);\n\t\t\tobj[name] = value;\n\t\t}\n\t}\n};\n\n/**\n * Function: decodeChildren\n * \n * Decodes all children of the given node using <decodeChild>.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeChildren = function(dec, node, obj)\n{\n\tvar child = node.firstChild;\n\t\n\twhile (child != null)\n\t{\n\t\tvar tmp = child.nextSibling;\n\t\t\n\t\tif (child.nodeType == mxConstants.NODETYPE_ELEMENT &&\n\t\t\t!this.processInclude(dec, child, obj))\n\t\t{\n\t\t\tthis.decodeChild(dec, child, obj);\n\t\t}\n\t\t\n\t\tchild = tmp;\n\t}\n};\n\n/**\n * Function: decodeChild\n * \n * Reads the specified child into the given object.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * child - XML child element to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeChild = function(dec, child, obj)\n{\n\tvar fieldname = this.getFieldName(child.getAttribute('as'));\n\t\n\tif (fieldname == null || !this.isExcluded(obj, fieldname, child, false))\n\t{\n\t\tvar template = this.getFieldTemplate(obj, fieldname, child);\n\t\tvar value = null;\n\t\t\n\t\tif (child.nodeName == 'add')\n\t\t{\n\t\t\tvalue = child.getAttribute('value');\n\t\t\t\n\t\t\tif (value == null && mxObjectCodec.allowEval)\n\t\t\t{\n\t\t\t\tvalue = mxUtils.eval(mxUtils.getTextContent(child));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvalue = dec.decode(child, template);\n\t\t}\n\n\t\tthis.addObjectValue(obj, fieldname, value, template);\n\t}\n};\n\n/**\n * Function: getFieldTemplate\n * \n * Returns the template instance for the given field. This returns the\n * value of the field, null if the value is an array or an empty collection\n * if the value is a collection. The value is then used to populate the\n * field for a new instance. For strongly typed languages it may be\n * required to override this to return the correct collection instance\n * based on the encoded child.\n */\t\nmxObjectCodec.prototype.getFieldTemplate = function(obj, fieldname, child)\n{\n\tvar template = obj[fieldname];\n\t\n\t// Non-empty arrays are replaced completely\n    if (template instanceof Array && template.length > 0)\n    {\n        template = null;\n    }\n    \n    return template;\n};\n\n/**\n * Function: addObjectValue\n * \n * Sets the decoded child node as a value of the given object. If the\n * object is a map, then the value is added with the given fieldname as a\n * key. If the fieldname is not empty, then setFieldValue is called or\n * else, if the object is a collection, the value is added to the\n * collection. For strongly typed languages it may be required to\n * override this with the correct code to add an entry to an object.\n */\t\nmxObjectCodec.prototype.addObjectValue = function(obj, fieldname, value, template)\n{\n\tif (value != null && value != template)\n\t{\n\t\tif (fieldname != null && fieldname.length > 0)\n\t\t{\n\t\t\tobj[fieldname] = value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobj.push(value);\n\t\t}\n\t\t//mxLog.debug('Decoded '+mxUtils.getFunctionName(obj.constructor)+'.'+fieldname+': '+value);\n\t}\n};\n\n/**\n * Function: processInclude\n *\n * Returns true if the given node is an include directive and\n * executes the include by decoding the XML document. Returns\n * false if the given node is not an include directive.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the encoding/decoding process.\n * node - XML node to be checked.\n * into - Optional object to pass-thru to the codec.\n */\nmxObjectCodec.prototype.processInclude = function(dec, node, into)\n{\n\tif (node.nodeName == 'include')\n\t{\n\t\tvar name = node.getAttribute('name');\n\t\t\n\t\tif (name != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar xml = mxUtils.load(name).getDocumentElement();\n\t\t\t\t\n\t\t\t\tif (xml != null)\n\t\t\t\t{\n\t\t\t\t\tdec.decode(xml, into);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: beforeDecode\n *\n * Hook for subclassers to pre-process the node for\n * the specified object and return the node to be\n * used for further processing by <decode>.\n * The object is created based on the template in the \n * calling method and is never null. This implementation\n * returns the input node. The return value of this\n * function is used in <decode> to perform\n * the default decoding into the given object.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Object to encode the node into.\n */\nmxObjectCodec.prototype.beforeDecode = function(dec, node, obj)\n{\n\treturn node;\n};\n\n/**\n * Function: afterDecode\n *\n * Hook for subclassers to post-process the object after\n * decoding. This implementation returns the given object\n * without any changes. The return value of this method\n * is returned to the decoder from <decode>.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * node - XML node to be decoded.\n * obj - Object that represents the default decoding.\n */\nmxObjectCodec.prototype.afterDecode = function(dec, node, obj)\n{\n\treturn obj;\n};\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxCellCodec\n\t *\n\t * Codec for <mxCell>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - children\n\t * - edges\n\t * - overlays\n\t * - mxTransient\n\t *\n\t * Reference Fields:\n\t *\n\t * - parent\n\t * - source\n\t * - target\n\t * \n\t * Transient fields can be added using the following code:\n\t * \n\t * mxCodecRegistry.getCodec(mxCell).exclude.push('name_of_field');\n\t * \n\t * To subclass <mxCell>, replace the template and add an alias as\n\t * follows.\n\t * \n\t * (code)\n\t * function CustomCell(value, geometry, style)\n\t * {\n\t *   mxCell.apply(this, arguments);\n\t * }\n\t * \n\t * mxUtils.extend(CustomCell, mxCell);\n\t * \n\t * mxCodecRegistry.getCodec(mxCell).template = new CustomCell();\n\t * mxCodecRegistry.addAlias('CustomCell', 'mxCell');\n\t * (end)\n\t */\n\tvar codec = new mxObjectCodec(new mxCell(),\n\t\t['children', 'edges', 'overlays', 'mxTransient'],\n\t\t['parent', 'source', 'target']);\n\n\t/**\n\t * Function: isCellCodec\n\t *\n\t * Returns true since this is a cell codec.\n\t */\n\tcodec.isCellCodec = function()\n\t{\n\t\treturn true;\n\t};\n\n\t/**\n\t * Overidden to disable conversion of value to number.\n\t */\n\tcodec.isNumericAttribute = function(dec, attr, obj)\n\t{\n\t\treturn attr.nodeName !== 'value' && mxObjectCodec.prototype.isNumericAttribute.apply(this, arguments);\n\t};\n\t\n\t/**\n\t * Function: isExcluded\n\t *\n\t * Excludes user objects that are XML nodes.\n\t */ \n\tcodec.isExcluded = function(obj, attr, value, isWrite)\n\t{\n\t\treturn mxObjectCodec.prototype.isExcluded.apply(this, arguments) ||\n\t\t\t(isWrite && attr == 'value' &&\n\t\t\tvalue.nodeType == mxConstants.NODETYPE_ELEMENT);\n\t};\n\t\n\t/**\n\t * Function: afterEncode\n\t *\n\t * Encodes an <mxCell> and wraps the XML up inside the\n\t * XML of the user object (inversion).\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tif (obj.value != null && obj.value.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Wraps the graphical annotation up in the user object (inversion)\n\t\t\t// by putting the result of the default encoding into a clone of the\n\t\t\t// user object (node type 1) and returning this cloned user object.\n\t\t\tvar tmp = node;\n\t\t\tnode = mxUtils.importNode(enc.document, obj.value, true);\n\t\t\tnode.appendChild(tmp);\n\t\t\t\n\t\t\t// Moves the id attribute to the outermost XML node, namely the\n\t\t\t// node which denotes the object boundaries in the file.\n\t\t\tvar id = tmp.getAttribute('id');\n\t\t\tnode.setAttribute('id', id);\n\t\t\ttmp.removeAttribute('id');\n\t\t}\n\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes an <mxCell> and uses the enclosing XML node as\n\t * the user object for the cell (inversion).\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tvar inner = node.cloneNode(true);\n\t\tvar classname = this.getName();\n\t\t\n\t\tif (node.nodeName != classname)\n\t\t{\n\t\t\t// Passes the inner graphical annotation node to the\n\t\t\t// object codec for further processing of the cell.\n\t\t\tvar tmp = node.getElementsByTagName(classname)[0];\n\t\t\t\n\t\t\tif (tmp != null && tmp.parentNode == node)\n\t\t\t{\n\t\t\t\tmxUtils.removeWhitespace(tmp, true);\n\t\t\t\tmxUtils.removeWhitespace(tmp, false);\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\tinner = tmp;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinner = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Creates the user object out of the XML node\n\t\t\tobj.value = node.cloneNode(true);\n\t\t\tvar id = obj.value.getAttribute('id');\n\t\t\t\n\t\t\tif (id != null)\n\t\t\t{\n\t\t\t\tobj.setId(id);\n\t\t\t\tobj.value.removeAttribute('id');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Uses ID from XML file as ID for cell in model\n\t\t\tobj.setId(node.getAttribute('id'));\n\t\t}\n\t\t\t\n\t\t// Preprocesses and removes all Id-references in order to use the\n\t\t// correct encoder (this) for the known references to cells (all).\n\t\tif (inner != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.idrefs.length; i++)\n\t\t\t{\n\t\t\t\tvar attr = this.idrefs[i];\n\t\t\t\tvar ref = inner.getAttribute(attr);\n\t\t\t\t\n\t\t\t\tif (ref != null)\n\t\t\t\t{\n\t\t\t\t\tinner.removeAttribute(attr);\n\t\t\t\t\tvar object = dec.objects[ref] || dec.lookup(ref);\n\t\t\t\t\t\n\t\t\t\t\tif (object == null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Needs to decode forward reference\n\t\t\t\t\t\tvar element = dec.getElementById(ref);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (element != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar decoder = mxCodecRegistry.codecs[element.nodeName] || this;\n\t\t\t\t\t\t\tobject = decoder.decode(dec, element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj[attr] = object;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn inner;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxModelCodec\n\t *\n\t * Codec for <mxGraphModel>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t */\n\tvar codec = new mxObjectCodec(new mxGraphModel());\n\n\t/**\n\t * Function: encodeObject\n\t *\n\t * Encodes the given <mxGraphModel> by writing a (flat) XML sequence of\n\t * cell nodes as produced by the <mxCellCodec>. The sequence is\n\t * wrapped-up in a node with the name root.\n\t */\n\tcodec.encodeObject = function(enc, obj, node)\n\t{\n\t\tvar rootNode = enc.document.createElement('root');\n\t\tenc.encodeCell(obj.getRoot(), rootNode);\n\t\tnode.appendChild(rootNode);\n\t};\n\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'root')\n\t\t{\n\t\t\tthis.decodeRoot(dec, child, obj);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t\t}\n\t};\n\n\t/**\n\t * Function: decodeRoot\n\t *\n\t * Reads the cells into the graph model. All cells\n\t * are children of the root element in the node.\n\t */\n\tcodec.decodeRoot = function(dec, root, model)\n\t{\n\t\tvar rootCell = null;\n\t\tvar tmp = root.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tvar cell = dec.decodeCell(tmp);\n\t\t\t\n\t\t\tif (cell != null && cell.getParent() == null)\n\t\t\t{\n\t\t\t\trootCell = cell;\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\n\t\t// Sets the root on the model if one has been decoded\n\t\tif (rootCell != null)\n\t\t{\n\t\t\tmodel.setRoot(rootCell);\n\t\t}\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxRootChangeCodec\n\t *\n\t * Codec for <mxRootChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t * - root\n\t */\n\tvar codec = new mxObjectCodec(new mxRootChange(),\n\t\t['model', 'previous', 'root']);\n\n\t/**\n\t * Function: onEncode\n\t *\n\t * Encodes the child recursively.\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tenc.encodeCell(obj.root, node);\n\t\t\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the optional children as cells\n\t * using the respective decoder.\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tif (node.firstChild != null &&\n\t\t\tnode.firstChild.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Makes sure the original node isn't modified\n\t\t\tnode = node.cloneNode(true);\n\t\t\t\n\t\t\tvar tmp = node.firstChild;\n\t\t\tobj.root = dec.decodeCell(tmp, false);\n\n\t\t\tvar tmp2 = tmp.nextSibling;\n\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\ttmp = tmp2;\n\t\t\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\ttmp2 = tmp.nextSibling;\n\t\t\t\tdec.decodeCell(tmp);\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\ttmp = tmp2;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\t\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\tobj.previous = obj.root;\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxChildChangeCodec\n\t *\n\t * Codec for <mxChildChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t * - previousIndex\n\t * - child\n\t *\n\t * Reference Fields:\n\t *\n\t * - parent\n\t */\n\tvar codec = new mxObjectCodec(new mxChildChange(),\n\t\t['model', 'child', 'previousIndex'],\n\t\t['parent', 'previous']);\n\n\t/**\n\t * Function: isReference\n\t *\n\t * Returns true for the child attribute if the child\n\t * cell had a previous parent or if we're reading the\n\t * child as an attribute rather than a child node, in\n\t * which case it's always a reference.\n\t */\n\tcodec.isReference = function(obj, attr, value, isWrite)\n\t{\n\t\tif (attr == 'child' && (obj.previous != null || !isWrite))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn mxUtils.indexOf(this.idrefs, attr) >= 0;\n\t};\n\n\t/**\n\t * Function: afterEncode\n\t *\n\t * Encodes the child recusively and adds the result\n\t * to the given node.\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tif (this.isReference(obj, 'child',  obj.child, true))\n\t\t{\n\t\t\t// Encodes as reference (id)\n\t\t\tnode.setAttribute('child', enc.getId(obj.child));\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// At this point, the encoder is no longer able to know which cells\n\t\t\t// are new, so we have to encode the complete cell hierarchy and\n\t\t\t// ignore the ones that are already there at decoding time. Note:\n\t\t\t// This can only be resolved by moving the notify event into the\n\t\t\t// execute of the edit.\n\t\t\tenc.encodeCell(obj.child, node);\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the any child nodes as using the respective\n\t * codec from the registry.\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tif (node.firstChild != null &&\n\t\t\tnode.firstChild.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Makes sure the original node isn't modified\n\t\t\tnode = node.cloneNode(true);\n\t\t\t\n\t\t\tvar tmp = node.firstChild;\n\t\t\tobj.child = dec.decodeCell(tmp, false);\n\n\t\t\tvar tmp2 = tmp.nextSibling;\n\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\ttmp = tmp2;\n\t\t\t\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\ttmp2 = tmp.nextSibling;\n\t\t\t\t\n\t\t\t\tif (tmp.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\t// Ignores all existing cells because those do not need to\n\t\t\t\t\t// be re-inserted into the model. Since the encoded version\n\t\t\t\t\t// of these cells contains the new parent, this would leave\n\t\t\t\t\t// to an inconsistent state on the model (ie. a parent\n\t\t\t\t\t// change without a call to parentForCellChanged).\n\t\t\t\t\tvar id = tmp.getAttribute('id');\n\t\t\t\t\t\n\t\t\t\t\tif (dec.lookup(id) == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tdec.decodeCell(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\ttmp = tmp2;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar childRef = node.getAttribute('child');\n\t\t\tobj.child = dec.getObject(childRef);\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\t\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores object state in the child change.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Cells are encoded here after a complete transaction so the previous\n\t\t// parent must be restored on the cell for the case where the cell was\n\t\t// added. This is needed for the local model to identify the cell as a\n\t\t// new cell and register the ID.\n        if (obj.child != null)\n        {\n            if (obj.child.parent != null && obj.previous != null &&\n                obj.child.parent != obj.previous)\n            {\n            \t\n                obj.previous = obj.child.parent;\n            }\n\n            obj.child.parent = obj.previous;\n            obj.previous = obj.parent;\n            obj.previousIndex = obj.index;\n        }\n\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxTerminalChangeCodec\n\t *\n\t * Codec for <mxTerminalChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t *\n\t * Reference Fields:\n\t *\n\t * - cell\n\t * - terminal\n\t */\n\tvar codec = new mxObjectCodec(new mxTerminalChange(),\n\t\t['model', 'previous'], ['cell', 'terminal']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\tobj.previous = obj.terminal;\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGenericChangeCodec\n *\n * Codec for <mxValueChange>s, <mxStyleChange>s, <mxGeometryChange>s,\n * <mxCollapseChange>s and <mxVisibleChange>s. This class is created\n * and registered dynamically at load time and used implicitely\n * via <mxCodec> and the <mxCodecRegistry>.\n *\n * Transient Fields:\n *\n * - model\n * - previous\n *\n * Reference Fields:\n *\n * - cell\n * \n * Constructor: mxGenericChangeCodec\n *\n * Factory function that creates a <mxObjectCodec> for\n * the specified change and fieldname.\n *\n * Parameters:\n *\n * obj - An instance of the change object.\n * variable - The fieldname for the change data.\n */\nvar mxGenericChangeCodec = function(obj, variable)\n{\n\tvar codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t};\n\t\n\treturn codec;\n};\n\n// Registers the codecs\nmxCodecRegistry.register(mxGenericChangeCodec(new mxValueChange(), 'value'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxStyleChange(), 'style'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxGeometryChange(), 'geometry'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCollapseChange(), 'collapsed'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxVisibleChange(), 'visible'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCellAttributeChange(), 'value'));\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxGraphCodec\n\t *\n\t * Codec for <mxGraph>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - graphListeners\n\t * - eventListeners\n\t * - view\n\t * - container\n\t * - cellRenderer\n\t * - editor\n\t * - selection\n\t */\n\treturn new mxObjectCodec(new mxGraph(),\n\t\t['graphListeners', 'eventListeners', 'view', 'container',\n\t\t'cellRenderer', 'editor', 'selection']);\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxGraphViewCodec\n\t *\n\t * Custom encoder for <mxGraphView>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only writes views\n\t * into a XML format that can be used to create an image for\n\t * the graph, that is, it contains absolute coordinates with\n\t * computed perimeters, edge styles and cell styles.\n\t */\n\tvar codec = new mxObjectCodec(new mxGraphView());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Encodes the given <mxGraphView> using <encodeCell>\n\t * starting at the model's root. This returns the\n\t * top-level graph node of the recursive encoding.\n\t */\n\tcodec.encode = function(enc, view)\n\t{\n\t\treturn this.encodeCell(enc, view,\n\t\t\tview.graph.getModel().getRoot());\n\t};\n\n\t/**\n\t * Function: encodeCell\n\t *\n\t * Recursively encodes the specifed cell. Uses layer\n\t * as the default nodename. If the cell's parent is\n\t * null, then graph is used for the nodename. If\n\t * <mxGraphModel.isEdge> returns true for the cell,\n\t * then edge is used for the nodename, else if\n\t * <mxGraphModel.isVertex> returns true for the cell,\n\t * then vertex is used for the nodename.\n\t *\n\t * <mxGraph.getLabel> is used to create the label\n\t * attribute for the cell. For graph nodes and vertices\n\t * the bounds are encoded into x, y, width and height.\n\t * For edges the points are encoded into a points\n\t * attribute as a space-separated list of comma-separated\n\t * coordinate pairs (eg. x0,y0 x1,y1 ... xn,yn). All\n\t * values from the cell style are added as attribute\n\t * values to the node. \n\t */\n\tcodec.encodeCell = function(enc, view, cell)\n\t{\n\t\tvar model = view.graph.getModel();\n\t\tvar state = view.getState(cell);\n\t\tvar parent = model.getParent(cell);\n\t\t\n\t\tif (parent == null || state != null)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\tvar geo = view.graph.getCellGeometry(cell);\n\t\t\tvar name = null;\n\t\t\t\n\t\t\tif (parent == model.getRoot())\n\t\t\t{\n\t\t\t\tname = 'layer';\n\t\t\t}\n\t\t\telse if (parent == null)\n\t\t\t{\n\t\t\t\tname = 'graph';\n\t\t\t}\n\t\t\telse if (model.isEdge(cell))\n\t\t\t{\n\t\t\t\tname = 'edge';\n\t\t\t}\n\t\t\telse if (childCount > 0 && geo != null)\n\t\t\t{\n\t\t\t\tname = 'group';\n\t\t\t}\n\t\t\telse if (model.isVertex(cell))\n\t\t\t{\n\t\t\t\tname = 'vertex';\n\t\t\t}\n\t\t\t\n\t\t\tif (name != null)\n\t\t\t{\n\t\t\t\tvar node = enc.document.createElement(name);\n\t\t\t\tvar lab = view.graph.getLabel(cell);\n\t\t\t\t\n\t\t\t\tif (lab != null)\n\t\t\t\t{\n\t\t\t\t\tnode.setAttribute('label', view.graph.getLabel(cell));\n\t\t\t\t\t\n\t\t\t\t\tif (view.graph.isHtmlLabel(cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('html', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tif (parent == null)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = view.getGraphBounds();\n\t\t\t\t\t\n\t\t\t\t\tif (bounds != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('x', Math.round(bounds.x));\n\t\t\t\t\t\tnode.setAttribute('y', Math.round(bounds.y));\n\t\t\t\t\t\tnode.setAttribute('width', Math.round(bounds.width));\n\t\t\t\t\t\tnode.setAttribute('height', Math.round(bounds.height));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnode.setAttribute('scale', view.scale);\n\t\t\t\t}\n\t\t\t\telse if (state != null && geo != null)\n\t\t\t\t{\n\t\t\t\t\t// Writes each key, value in the style pair to an attribute\n\t\t\t\t    for (var i in state.style)\n\t\t\t\t    {\n\t\t\t\t    \tvar value = state.style[i];\n\t\t\n\t\t\t\t    \t// Tries to turn objects and functions into strings\n\t\t\t\t\t    if (typeof(value) == 'function' &&\n\t\t\t\t\t\t\ttypeof(value) == 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t    \tvalue = mxStyleRegistry.getName(value);\n\t\t\t\t        }\n\t\t\t\t    \t\n\t\t\t\t    \tif (value != null &&\n\t\t\t\t    \t\ttypeof(value) != 'function' &&\n\t\t\t\t\t\t\ttypeof(value) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute(i, value);\n\t\t\t\t        }\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t\tvar abs = state.absolutePoints;\n\t\t\t\t\t\n\t\t\t\t\t// Writes the list of points into one attribute\n\t\t\t\t\tif (abs != null && abs.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pts = Math.round(abs[0].x) + ',' + Math.round(abs[0].y);\n\t\t\n\t\t\t\t\t\tfor (var i=1; i<abs.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpts += ' ' + Math.round(abs[i].x) + ',' +\n\t\t\t\t\t\t\t\tMath.round(abs[i].y);\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tnode.setAttribute('points', pts);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Writes the bounds into 4 attributes\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('x', Math.round(state.x));\n\t\t\t\t\t\tnode.setAttribute('y', Math.round(state.y));\n\t\t\t\t\t\tnode.setAttribute('width', Math.round(state.width));\n\t\t\t\t\t\tnode.setAttribute('height', Math.round(state.height));\t\t\t\t\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tvar offset = state.absoluteOffset;\n\t\t\t\t\t\n\t\t\t\t\t// Writes the offset into 2 attributes\n\t\t\t\t\tif (offset != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (offset.x != 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute('dx', Math.round(offset.x));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (offset.y != 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute('dy', Math.round(offset.y));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tfor (var i=0; i<childCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar childNode = this.encodeCell(enc,\n\t\t\t\t\t\t\tview, model.getChildAt(cell, i));\n\t\t\t\t\t\n\t\t\t\t\tif (childNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStylesheetCodec\n *\n * Codec for <mxStylesheet>s. This class is created and registered\n * dynamically at load time and used implicitely via <mxCodec>\n * and the <mxCodecRegistry>.\n */\nvar mxStylesheetCodec = mxCodecRegistry.register(function()\n{\n\tvar codec = new mxObjectCodec(new mxStylesheet());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Encodes a stylesheet. See <decode> for a description of the\n\t * format.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\tvar node = enc.document.createElement(this.getName());\n\t\t\n\t\tfor (var i in obj.styles)\n\t\t{\n\t\t\tvar style = obj.styles[i];\n\t\t\tvar styleNode = enc.document.createElement('add');\n\t\t\t\n\t\t\tif (i != null)\n\t\t\t{\n\t\t\t\tstyleNode.setAttribute('as', i);\n\t\t\t\t\n\t\t\t\tfor (var j in style)\n\t\t\t\t{\n\t\t\t\t\tvar value = this.getStringValue(j, style[j]);\n\t\t\t\t\t\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar entry = enc.document.createElement('add');\n\t\t\t\t\t\tentry.setAttribute('value', value);\n\t\t\t\t\t\tentry.setAttribute('as', j);\n\t\t\t\t\t\tstyleNode.appendChild(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (styleNode.childNodes.length > 0)\n\t\t\t\t{\n\t\t\t\t\tnode.appendChild(styleNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t    return node;\n\t};\n\n\t/**\n\t * Function: getStringValue\n\t *\n\t * Returns the string for encoding the given value.\n\t */\n\tcodec.getStringValue = function(key, value)\n\t{\n\t\tvar type = typeof(value);\n\t\t\n\t\tif (type == 'function')\n\t\t{\n\t\t\tvalue = mxStyleRegistry.getName(style[j]);\n\t\t}\n\t\telse if (type == 'object')\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\treturn value;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Adds a new style.\n\t *\n\t * Attributes:\n\t *\n\t * as - Name of the style.\n\t * extend - Name of the style to inherit from.\n\t *\n\t * Each node contains another sequence of add and remove nodes with the following\n\t * attributes:\n\t *\n\t * as - Name of the style (see <mxConstants>).\n\t * value - Value for the style.\n\t *\n\t * Instead of the value-attribute, one can put Javascript expressions into\n\t * the node as follows if <mxStylesheetCodec.allowEval> is true:\n\t * <add as=\"perimeter\">mxPerimeter.RectanglePerimeter</add>\n\t *\n\t * A remove node will remove the entry with the name given in the as-attribute\n\t * from the style.\n\t * \n\t * Example:\n\t *\n\t * (code)\n\t * <mxStylesheet as=\"stylesheet\">\n\t *   <add as=\"text\">\n\t *     <add as=\"fontSize\" value=\"12\"/>\n\t *   </add>\n\t *   <add as=\"defaultVertex\" extend=\"text\">\n\t *     <add as=\"shape\" value=\"rectangle\"/>\n\t *   </add>\n\t * </mxStylesheet>\n\t * (end)\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tvar obj = into || new this.template.constructor();\n\t\tvar id = node.getAttribute('id');\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tdec.objects[id] = obj;\n\t\t}\n\t\t\n\t\tnode = node.firstChild;\n\t\t\n\t\twhile (node != null)\n\t\t{\n\t\t\tif (!this.processInclude(dec, node, obj) && node.nodeName == 'add')\n\t\t\t{\n\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\n\t\t\t\tif (as != null)\n\t\t\t\t{\n\t\t\t\t\tvar extend = node.getAttribute('extend');\n\t\t\t\t\tvar style = (extend != null) ? mxUtils.clone(obj.styles[extend]) : null;\n\t\t\t\t\t\n\t\t\t\t\tif (style == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (extend != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxLog.warn('mxStylesheetCodec.decode: stylesheet ' +\n\t\t\t\t\t\t\t\textend + ' not found to extend');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tstyle = new Object();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar entry = node.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (entry != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (entry.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t \tvar key = entry.getAttribute('as');\n\t\t\t\t\t\t \t\n\t\t\t\t\t\t \tif (entry.nodeName == 'add')\n\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \tvar text = mxUtils.getTextContent(entry);\n\t\t\t\t\t\t\t \tvar value = null;\n\t\t\t\t\t\t\t \t\n\t\t\t\t\t\t\t \tif (text != null && text.length > 0 && mxStylesheetCodec.allowEval)\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tvalue = mxUtils.eval(text);\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t\t \telse\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tvalue = entry.getAttribute('value');\n\t\t\t\t\t\t\t \t\t\n\t\t\t\t\t\t\t \t\tif (mxUtils.isNumeric(value))\n\t\t\t\t\t\t\t \t\t{\n\t\t\t\t\t\t\t\t\t\tvalue = parseFloat(value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t \t}\n\n\t\t\t\t\t\t\t \tif (value != null)\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tstyle[key] = value;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \telse if (entry.nodeName == 'remove')\n\t\t\t\t\t\t \t{\n\t\t\t\t\t\t \t\tdelete style[key];\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tentry = entry.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj.putCellStyle(as, style);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n/**\n * Variable: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content. Default is true. Set this to false if stylesheets\n * may contain user input.\n */\nmxStylesheetCodec.allowEval = true;\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxDefaultKeyHandlerCodec\n\t *\n\t * Custom codec for configuring <mxDefaultKeyHandler>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n\t * data for existing key handlers, it does not encode or create key handlers.\n\t */\n\tvar codec = new mxObjectCodec(new mxDefaultKeyHandler());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Binds a keystroke to an actionname.\n\t *\n\t * Attributes:\n\t *\n\t * as - Keycode.\n\t * action - Actionname to execute in editor.\n\t * control - Optional boolean indicating if\n\t * \t\tthe control key must be pressed.\n\t *\n\t * Example:\n\t *\n\t * (code)\n\t * <mxDefaultKeyHandler as=\"keyHandler\">\n\t *   <add as=\"88\" control=\"true\" action=\"cut\"/>\n\t *   <add as=\"67\" control=\"true\" action=\"copy\"/>\n\t *   <add as=\"86\" control=\"true\" action=\"paste\"/>\n\t * </mxDefaultKeyHandler>\n\t * (end)\n\t *\n\t * The keycodes are for the x, c and v keys.\n\t *\n\t * See also: <mxDefaultKeyHandler.bindAction>,\n\t * http://www.js-examples.com/page/tutorials__key_codes.html\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tif (into != null)\n\t\t{\n\t\t\tvar editor = into.editor;\n\t\t\tnode = node.firstChild;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tif (!this.processInclude(dec, node, into) &&\n\t\t\t\t\tnode.nodeName == 'add')\n\t\t\t\t{\n\t\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\tvar action = node.getAttribute('action');\n\t\t\t\t\tvar control = node.getAttribute('control');\n\t\t\t\t\t\n\t\t\t\t\tinto.bindAction(as, action, control);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultToolbarCodec\n *\n * Custom codec for configuring <mxDefaultToolbar>s. This class is created\n * and registered dynamically at load time and used implicitely via\n * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n * data for existing toolbars handlers, it does not encode or create toolbars.\n */\nvar mxDefaultToolbarCodec = mxCodecRegistry.register(function()\n{\n\tvar codec = new mxObjectCodec(new mxDefaultToolbar());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Adds a new item to the toolbar. See below for attributes.\n\t * separator - Adds a vertical separator. No attributes.\n\t * hr - Adds a horizontal separator. No attributes.\n\t * br - Adds a linefeed. No attributes. \n\t *\n\t * Attributes:\n\t *\n\t * as - Resource key for the label.\n\t * action - Name of the action to execute in enclosing editor.\n\t * mode - Modename (see below).\n\t * template - Template name for cell insertion.\n\t * style - Optional style to override the template style.\n\t * icon - Icon (relative/absolute URL).\n\t * pressedIcon - Optional icon for pressed state (relative/absolute URL).\n\t * id - Optional ID to be used for the created DOM element.\n\t * toggle - Optional 0 or 1 to disable toggling of the element. Default is\n\t * 1 (true).\n\t *\n\t * The action, mode and template attributes are mutually exclusive. The\n\t * style can only be used with the template attribute. The add node may\n\t * contain another sequence of add nodes with as and action attributes\n\t * to create a combo box in the toolbar. If the icon is specified then\n\t * a list of the child node is expected to have its template attribute\n\t * set and the action is ignored instead.\n\t * \n\t * Nodes with a specified template may define a function to be used for\n\t * inserting the cloned template into the graph. Here is an example of such\n\t * a node:\n\t * \n\t * (code)\n\t * <add as=\"Swimlane\" template=\"swimlane\" icon=\"images/swimlane.gif\"><![CDATA[\n\t *   function (editor, cell, evt, targetCell)\n\t *   {\n\t *     var pt = mxUtils.convertPoint(\n\t *       editor.graph.container, mxEvent.getClientX(evt),\n\t *         mxEvent.getClientY(evt));\n\t *     return editor.addVertex(targetCell, cell, pt.x, pt.y);\n\t *   }\n\t * ]]></add>\n\t * (end)\n\t * \n\t * In the above function, editor is the enclosing <mxEditor> instance, cell\n\t * is the clone of the template, evt is the mouse event that represents the\n\t * drop and targetCell is the cell under the mousepointer where the drop\n\t * occurred. The targetCell is retrieved using <mxGraph.getCellAt>.\n\t *\n\t * Futhermore, nodes with the mode attribute may define a function to\n\t * be executed upon selection of the respective toolbar icon. In the\n\t * example below, the default edge style is set when this specific\n\t * connect-mode is activated:\n\t *\n\t * (code)\n\t * <add as=\"connect\" mode=\"connect\"><![CDATA[\n\t *   function (editor)\n\t *   {\n\t *     if (editor.defaultEdge != null)\n\t *     {\n\t *       editor.defaultEdge.style = 'straightEdge';\n\t *     }\n\t *   }\n\t * ]]></add>\n\t * (end)\n\t * \n\t * Both functions require <mxDefaultToolbarCodec.allowEval> to be set to true.\n\t *\n\t * Modes:\n\t *\n\t * select - Left mouse button used for rubberband- & cell-selection.\n\t * connect - Allows connecting vertices by inserting new edges.\n\t * pan - Disables selection and switches to panning on the left button.\n\t *\n\t * Example:\n\t *\n\t * To add items to the toolbar:\n\t * \n\t * (code)\n\t * <mxDefaultToolbar as=\"toolbar\">\n\t *   <add as=\"save\" action=\"save\" icon=\"images/save.gif\"/>\n\t *   <br/><hr/>\n\t *   <add as=\"select\" mode=\"select\" icon=\"images/select.gif\"/>\n\t *   <add as=\"connect\" mode=\"connect\" icon=\"images/connect.gif\"/>\n\t * </mxDefaultToolbar>\n\t * (end)\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tif (into != null)\n\t\t{\n\t\t\tvar editor = into.editor;\n\t\t\tnode = node.firstChild;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\tif (!this.processInclude(dec, node, into))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (node.nodeName == 'separator')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.addSeparator();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'br')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.toolbar.addBreak();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'hr')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.toolbar.addLine();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'add')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\t\t\tas = mxResources.get(as) || as;\n\t\t\t\t\t\t\tvar icon = node.getAttribute('icon');\n\t\t\t\t\t\t\tvar pressedIcon = node.getAttribute('pressedIcon');\n\t\t\t\t\t\t\tvar action = node.getAttribute('action');\n\t\t\t\t\t\t\tvar mode = node.getAttribute('mode');\n\t\t\t\t\t\t\tvar template = node.getAttribute('template');\n\t\t\t\t\t\t\tvar toggle = node.getAttribute('toggle') != '0';\n\t\t\t\t\t\t\tvar text = mxUtils.getTextContent(node);\n\t\t\t\t\t\t\tvar elt = null;\n\n\t\t\t\t\t\t\tif (action != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telt = into.addItem(as, icon, action, pressedIcon);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (mode != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar funct = (mxDefaultToolbarCodec.allowEval) ? mxUtils.eval(text) : null;\n\t\t\t\t\t\t\t\telt = into.addMode(as, icon, mode, pressedIcon, funct);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (template != null || (text != null && text.length > 0))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar cell = editor.templates[template];\n\t\t\t\t\t\t\t\tvar style = node.getAttribute('style');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (cell != null && style != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcell = editor.graph.cloneCell(cell);\n\t\t\t\t\t\t\t\t\tcell.setStyle(style);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar insertFunction = null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (text != null && text.length > 0 && mxDefaultToolbarCodec.allowEval)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tinsertFunction = mxUtils.eval(text);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\telt = into.addPrototype(as, icon, cell, pressedIcon, insertFunction, toggle);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar children = mxUtils.getChildNodes(node);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (children.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (icon == null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvar combo = into.addActionCombo(as);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tfor (var i=0; i<children.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (child.nodeName == 'separator')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addOption(combo, '---');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if (child.nodeName == 'add')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar lab = child.getAttribute('as');\n\t\t\t\t\t\t\t\t\t\t\t\tvar act = child.getAttribute('action');\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addActionOption(combo, lab, act);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvar select = null;\n\t\t\t\t\t\t\t\t\t\tvar create = function()\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar template = editor.templates[select.value];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (template != null)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar clone = template.clone();\n\t\t\t\t\t\t\t\t\t\t\t\tvar style = select.options[select.selectedIndex].cellStyle;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif (style != null)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tclone.setStyle(style);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\treturn clone;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tmxLog.warn('Template '+template+' not found');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tvar img = into.addPrototype(as, icon, create, null, null, toggle);\n\t\t\t\t\t\t\t\t\t\tselect = into.addCombo();\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Selects the toolbar icon if a selection change\n\t\t\t\t\t\t\t\t\t\t// is made in the corresponding combobox.\n\t\t\t\t\t\t\t\t\t\tmxEvent.addListener(select, 'change', function()\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tinto.toolbar.selectMode(img, function(evt)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar pt = mxUtils.convertPoint(editor.graph.container,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\treturn editor.addVertex(null, funct(), pt.x, pt.y);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tinto.toolbar.noReset = false;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Adds the entries to the combobox\n\t\t\t\t\t\t\t\t\t\tfor (var i=0; i<children.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (child.nodeName == 'separator')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addOption(select, '---');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if (child.nodeName == 'add')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar lab = child.getAttribute('as');\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = child.getAttribute('template');\n\t\t\t\t\t\t\t\t\t\t\t\tvar option = into.addOption(select, lab, tmp || template);\n\t\t\t\t\t\t\t\t\t\t\t\toption.cellStyle = child.getAttribute('style');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Assigns an ID to the created element to access it later.\n\t\t\t\t\t\t\tif (elt != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar id = node.getAttribute('id');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (id != null && id.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\telt.setAttribute('id', id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n/**\n * Variable: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content. Default is true. Set this to false if stylesheets\n * may contain user input\n */\nmxDefaultToolbarCodec.allowEval = true;\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxDefaultPopupMenuCodec\n\t *\n\t * Custom codec for configuring <mxDefaultPopupMenu>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n\t * data for existing popup menus, it does not encode or create menus. Note\n\t * that this codec only passes the configuration node to the popup menu,\n\t * which uses the config to dynamically create menus. See\n\t * <mxDefaultPopupMenu.createMenu>.\n\t */\n\tvar codec = new mxObjectCodec(new mxDefaultPopupMenu());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Uses the given node as the config for <mxDefaultPopupMenu>.\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tvar inc = node.getElementsByTagName('include')[0];\n\t\t\n\t\tif (inc != null)\n\t\t{\n\t\t\tthis.processInclude(dec, inc, into);\n\t\t}\n\t\telse if (into != null)\n\t\t{\n\t\t\tinto.config = node;\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxEditorCodec\n\t *\n\t * Codec for <mxEditor>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - modified\n\t * - lastSnapshot\n\t * - ignoredChanges\n\t * - undoManager\n\t * - graphContainer\n\t * - toolbarContainer\n\t */\n\tvar codec = new mxObjectCodec(new mxEditor(),\n\t\t['modified', 'lastSnapshot', 'ignoredChanges',\n\t\t'undoManager', 'graphContainer', 'toolbarContainer']);\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the ui-part of the configuration node by reading\n\t * a sequence of the following child nodes and attributes\n\t * and passes the control to the default decoding mechanism:\n\t *\n\t * Child Nodes:\n\t *\n\t * stylesheet - Adds a CSS stylesheet to the document.\n\t * resource - Adds the basename of a resource bundle.\n\t * add - Creates or configures a known UI element.\n\t *\n\t * These elements may appear in any order given that the\n\t * graph UI element is added before the toolbar element\n\t * (see Known Keys).\n\t *\n\t * Attributes:\n\t *\n\t * as - Key for the UI element (see below).\n\t * element - ID for the element in the document.\n\t * style - CSS style to be used for the element or window.\n\t * x - X coordinate for the new window.\n\t * y - Y coordinate for the new window.\n\t * width - Width for the new window.\n\t * height - Optional height for the new window.\n\t * name - Name of the stylesheet (absolute/relative URL).\n\t * basename - Basename of the resource bundle (see <mxResources>).\n\t *\n\t * The x, y, width and height attributes are used to create a new\n\t * <mxWindow> if the element attribute is not specified in an add\n\t * node. The name and basename are only used in the stylesheet and\n\t * resource nodes, respectively.\n\t *\n\t * Known Keys:\n\t *\n\t * graph - Main graph element (see <mxEditor.setGraphContainer>).\n\t * title - Title element (see <mxEditor.setTitleContainer>).\n\t * toolbar - Toolbar element (see <mxEditor.setToolbarContainer>).\n\t * status - Status bar element (see <mxEditor.setStatusContainer>).\n\t *\n\t * Example:\n\t *\n\t * (code)\n\t * <ui>\n\t *   <stylesheet name=\"css/process.css\"/>\n\t *   <resource basename=\"resources/app\"/>\n\t *   <add as=\"graph\" element=\"graph\"\n\t *     style=\"left:70px;right:20px;top:20px;bottom:40px\"/>\n\t *   <add as=\"status\" element=\"status\"/>\n\t *   <add as=\"toolbar\" x=\"10\" y=\"20\" width=\"54\"/>\n\t * </ui>\n\t * (end)\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Assigns the specified templates for edges\n\t\tvar defaultEdge = node.getAttribute('defaultEdge');\n\t\t\n\t\tif (defaultEdge != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultEdge');\n\t\t\tobj.defaultEdge = obj.templates[defaultEdge];\n\t\t}\n\n\t\t// Assigns the specified templates for groups\n\t\tvar defaultGroup = node.getAttribute('defaultGroup');\n\t\t\n\t\tif (defaultGroup != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultGroup');\n\t\t\tobj.defaultGroup = obj.templates[defaultGroup];\n\t\t}\n\n\t\treturn obj;\n\t};\n\t\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'Array')\n\t\t{\n\t\t\tvar role = child.getAttribute('as');\n\t\t\t\n\t\t\tif (role == 'templates')\n\t\t\t{\n\t\t\t\tthis.decodeTemplates(dec, child, obj);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (child.nodeName == 'ui')\n\t\t{\n\t\t\tthis.decodeUi(dec, child, obj);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t};\n\t\t\n\t/**\n\t * Function: decodeTemplates\n\t *\n\t * Decodes the cells from the given node as templates.\n\t */\n\tcodec.decodeUi = function(dec, node, editor)\n\t{\n\t\tvar tmp = node.firstChild;\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeName == 'add')\n\t\t\t{\n\t\t\t\tvar as = tmp.getAttribute('as');\n\t\t\t\tvar elt = tmp.getAttribute('element');\n\t\t\t\tvar style = tmp.getAttribute('style');\n\t\t\t\tvar element = null;\n\n\t\t\t\tif (elt != null)\n\t\t\t\t{\n\t\t\t\t\telement = document.getElementById(elt);\n\t\t\t\t\t\n\t\t\t\t\tif (element != null && style != null)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.style.cssText += ';' + style;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar x = parseInt(tmp.getAttribute('x'));\n\t\t\t\t\tvar y = parseInt(tmp.getAttribute('y'));\n\t\t\t\t\tvar width = tmp.getAttribute('width');\n\t\t\t\t\tvar height = tmp.getAttribute('height');\n\n\t\t\t\t\t// Creates a new window around the element\n\t\t\t\t\telement = document.createElement('div');\n\t\t\t\t\telement.style.cssText = style;\n\t\t\t\t\t\n\t\t\t\t\tvar wnd = new mxWindow(mxResources.get(as) || as,\n\t\t\t\t\t\telement, x, y, width, height, false, true);\n\t\t\t\t\twnd.setVisible(true);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// TODO: Make more generic\n\t\t\t\tif (as == 'graph')\n\t\t\t\t{\n\t\t\t\t\teditor.setGraphContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'toolbar')\n\t\t\t\t{\n\t\t\t\t\teditor.setToolbarContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'title')\n\t\t\t\t{\n\t\t\t\t\teditor.setTitleContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'status')\n\t\t\t\t{\n\t\t\t\t\teditor.setStatusContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'map')\n\t\t\t\t{\n\t\t\t\t\teditor.setMapContainer(element);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'resource')\n\t\t\t{\n\t\t\t\tmxResources.add(tmp.getAttribute('basename'));\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'stylesheet')\n\t\t\t{\n\t\t\t\tmxClient.link('stylesheet', tmp.getAttribute('name'));\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\t\n\t};\n\t\n\t/**\n\t * Function: decodeTemplates\n\t *\n\t * Decodes the cells from the given node as templates.\n\t */\n\tcodec.decodeTemplates = function(dec, node, editor)\n\t{\n\t\tif (editor.templates == null)\n\t\t{\n\t\t\teditor.templates = [];\n\t\t}\n\t\t\n\t\tvar children = mxUtils.getChildNodes(node);\n\t\tfor (var j=0; j<children.length; j++)\n\t\t{\n\t\t\tvar name = children[j].getAttribute('as');\n\t\t\tvar child = children[j].firstChild;\n\t\t\t\n\t\t\twhile (child != null && child.nodeType != 1)\n\t\t\t{\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\t\n\t\t\tif (child != null)\n\t\t\t{\n\t\t\t\t// LATER: Only single cells means you need\n\t\t\t\t// to group multiple cells within another\n\t\t\t\t// cell. This should be changed to support\n\t\t\t\t// arrays of cells, or the wrapper must\n\t\t\t\t// be automatically handled in this class.\n\t\t\t\teditor.templates[name] = dec.decodeCell(child);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n"]}